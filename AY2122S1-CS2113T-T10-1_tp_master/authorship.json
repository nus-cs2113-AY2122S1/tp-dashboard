[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RemusTeo":1,"-":46}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\"?\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    Checkstyle configuration that checks the Google coding conventions from Google Java Style","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    that can be found at https://google.github.io/styleguide/javaguide.html","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Checkstyle is very configurable. Be sure to read the documentation at","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    http://checkstyle.sf.net (or in your downloaded distribution).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    To completely disable a check, just comment it out or delete it from the file.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cmodule name \u003d \"Checker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"charset\" value\u003d\"UTF-8\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"severity\" value\u003d\"error\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"fileExtensions\" value\u003d\"java, properties, xml\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c!-- Excludes all \u0027module-info.java\u0027 files              --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003c!-- See https://checkstyle.org/config_filefilters.html --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"BeforeExecutionExclusionFileFilter\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"fileNamePattern\" value\u003d\"module\\-info\\.java$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for whitespace                               --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c!-- See http://checkstyle.sf.net/config_whitespace.html --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"eachLine\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OuterTypeFilename\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"IllegalTokenText\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"STRING_LITERAL, CHAR_LITERAL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                      value\u003d\"\\\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\\\(0(10|11|12|14|15|42|47)|134)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"message\"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                      value\u003d\"Consider using special escape sequence instead of octal value or Unicode escaped value.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidEscapedUnicodeCharacters\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEscapesForControlCharacters\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowByTailComment\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowNonPrintableEscapes\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignorePattern\" value\u003d\"^package.*|^import.*|a href|href|http://|https://|ftp://\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneTopLevelClass\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoLineWrap\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyBlock\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"TEXT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                      value\u003d\"LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NeedBraces\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LeftCurly\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlySame\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                      value\u003d\"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE,","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    LITERAL_DO\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlyAlone\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"alone\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    INSTANCE_INIT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notFollowed\"","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                     value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not followed by whitespace. Empty blocks may only be represented as \u0027{}\u0027 when not part of a multi-block statement (4.1.3)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notPreceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                     value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"FallThrough\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UpperEll\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ModifierOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyLineSeparator\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowNoEmptyLineBetweenFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapDot\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"DOT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapComma\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003c!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapEllipsis\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"ELLIPSIS\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            \u003c!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapArrayDeclarator\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"ARRAY_DECLARATOR\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapMethodRef\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_REF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                     value\u003d\"Package name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                     value\u003d\"Type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                     value\u003d\"Member name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                     value\u003d\"Parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LambdaParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                     value\u003d\"Lambda parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CatchParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                     value\u003d\"Catch parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                     value\u003d\"Local variable name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ClassTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                     value\u003d\"Class type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                     value\u003d\"Method type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"InterfaceTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                     value\u003d\"Interface type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoFinalizer\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"GenericWhitespace\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.followed\"","lastModifiedDate":"2020-05-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is followed by whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.preceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.illegalFollow\"","lastModifiedDate":"2020-05-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 should followed by whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notPreceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"basicOffset\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"braceAdjustment\" value\u003d\"0\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"throwsIndent\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"lineWrappingIndentation\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":188,"author":{"gitId":"alvintan01"},"content":"            \u003cproperty name\u003d\"arrayInitIndent\" value\u003d\"8\"/\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"VariableDeclarationUsageDistance\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                      value\u003d\"COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParenPad\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"NL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                      value\u003d\"BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,","lastModifiedDate":"2020-05-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF \"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AnnotationLocation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationMostCases\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AnnotationLocation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationVariables\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowSamelineMultipleAnnotations\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NonEmptyAtclauseDescription\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SummaryJavadoc\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"forbiddenSummaryFragments\"","lastModifiedDate":"2020-05-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                      value\u003d\"^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocParagraph\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tagOrder\" value\u003d\"@param, @return, @throws, @deprecated\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"target\"","lastModifiedDate":"2020-05-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingThrowsTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowThrowsTagsForSubclasses\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9_]*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                     value\u003d\"Method name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SingleLineJavadoc\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignoreInlineTags\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyCatchBlock\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"exceptionVariableName\" value\u003d\"expected\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"alvintan01":1,"-":251}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alvin Tan Guo Hao | [Github](https://github.com/alvintan01) | [Portfolio](team/alvintan01.md)","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Deon Chung Hui | [Github](https://github.com/deonchung) | [Portfolio](team/deonchung.md)","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jiang Weichen | [Github](https://github.com/jiangweichen835) | [Portfolio](team/jiangweichen835.md)","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Teo Chin Kai Remus | [Github](https://github.com/RemusTeo) | [Portfolio](team/remusteo.md)","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Teo Phing Huei, Aeron | [Github](https://github.com/a-tph) | [Portfolio](team/a-tph.md)","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"-":4,"a-tph":6,"jiangweichen835":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"## Introduction","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"MediVault is a Command Line Interface (CLI) application that will help to manage medication supplies within a pharmacy.","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"It is an integrated solution that provides real-time tracking of stocks, prescriptions and orders. The","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"purpose of this guide is to help developers set up and continue with the development of MediVault past version 2.1.","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"* Inspiration for App Idea and OOP Structure: https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"* Inspiration for User Guide: https://se-education.org/addressbook-level3/UserGuide.html","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"* Inspiration for Developer Guide: https://se-education.org/addressbook-level3/DeveloperGuide.html","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"* PlantUML Tutorial: https://se-education.org/guides/tutorials/plantUml.html","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"## Contents","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"* [Glossary](#glossary)","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"* [Setting up environment](#setting-up-environment)","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"    * [Setting up](#setting-up)","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"    * [Before writing code](#before-writing-code)","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"* [Design](#design)","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"    * [Architecture](#architecture)","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    * [Command](#command)","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    * [Utilities](#utilities)","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"      * [Validator](#validator)","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"      * [Storage](#storage)","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"    * [Inventory](#inventory)","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"    * [Errors](#errors)","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"    * [Main Logic](#main-logic)","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    * [List Command](#list-command)","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"    * [Stock Commands](#stock-commands)","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"        * [AddStockCommand](#addstockcommand)","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"        * [DeleteStockCommand](#deletestockcommand)","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"        * [UpdateStockCommand](#updatestockcommand)","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"    * [Prescription Commands](#prescription-commands)","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        * [AddPrescriptionCommand](#addprescriptioncommand)","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"        * [DeletePrescriptionCommand](#deleteprescriptioncommand)","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"        * [UpdatePrescriptionCommand](#updateprescriptioncommand)","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"    * [Order Commands](#order-commands)","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"        * [AddOrderCommand](#addordercommand)","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"        * [DeleteOrderCommand](#deleteordercommand)","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"        * [UpdateOrderCommand](#updateordercommand)","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"        * [ReceiveOrderCommand](#receiveordercommand)","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"    * [Archive Commands](#archive-commands)","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"        * [ArchivePrescriptionCommand](#archiveprescriptioncommand)","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"        * [ArchiveOrderCommand](#archiveordercommand)","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"* [Product Scope](#product-scope)","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"    * [Target user profile](#target-user-profile)","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"    * [Value proposition](#value-proposition)","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"* [User Stories](#user-stories)","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"* [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"* [Instructions for manual testing](#instructions-for-manual-testing)","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"## Glossary","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"Terminology | Meaning","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"------ | ------","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"Stock | Refers to a medication.","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"Prescription | Refers to a prescription.","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"Order | Refers to ordering new medications to replenish the stocks.","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"Parameters | Prefixes for MediVault to understand the type of information you provide.","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"Meaning of Icons:","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"- :information_source: Additional information","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"- :warning: Warning","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"- :bulb: Note","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"## Setting up environment","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"### Setting up","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"deonchung"},"content":"1. Fork [this](https://github.com/AY2122S1-CS2113T-T10-1/tp/) repo, and clone the fork into your computer.","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"deonchung"},"content":"2. Ensure that you have [IntelliJ IDEA](https://www.jetbrains.com/idea/download/#section\u003dwindows)","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"deonchung"},"content":"   and [JDK 11](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html) installed.","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"deonchung"},"content":"3. Configure the JDK","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"deonchung"},"content":"    * Follow the guide","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"deonchung"},"content":"      at [se-edu/guides IDEA: Configuring the JDK](https://se-education.org/guides/tutorials/intellijJdk.html) to ensure","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"deonchung"},"content":"      Intellij is configured to use JDK 11.","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"deonchung"},"content":"4. Import the project as a Gradle project","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"deonchung"},"content":"    * Follow the","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"deonchung"},"content":"      guide [se-edu/guides IDEA: Importing a Gradle project](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"deonchung"},"content":"      to import the project into IDEA.","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"deonchung"},"content":"    * Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"deonchung"},"content":"5. Verify the setup","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"deonchung"},"content":"    * Locate the file `src/main/java/MediVault.java` then run the `MediVault.main()` and try a few commands","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"deonchung"},"content":"    * Run the [test](https://se-education.org/addressbook-level3/Testing.html) to ensure they all pass.","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"### Before writing code","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":93,"author":{"gitId":"deonchung"},"content":"1. Configure the coding style","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"deonchung"},"content":"    * If using IDEA, follow the","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"deonchung"},"content":"      guide [se-edu/guides IDEA: Configuring the code style](https://se-education.org/guides/tutorials/intellijCodeStyle.html)","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"deonchung"},"content":"      to set up IDEA’s coding style to match ours.","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"deonchung"},"content":"2. Set up CI","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"deonchung"},"content":"    * This project comes with a GitHub Actions config files (in `.github/workflows folder`). When GitHub detects those","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"deonchung"},"content":"      files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"deonchung"},"content":"      up required.","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"## Design","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"### Architecture","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"The **Architecture Diagram** for MediVault is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"![ArchitectureDiagram](diagrams/diagram_images/ArchitectureDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"A quick overview of the main components and how they interact with each other is given below.","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"The main class that runs MediVault is called `MediVault`. It is responsible for,","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"* At program launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"The rest of the program consist of four components.","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"* `Command`: Executes command based on the user input that is processed by `Utilities`","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"  component. The list of commands can be found in our User Guide [here](UserGuide.md).","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"* `Utilities`: Contains important driver classes for MediVault","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"  * includes `parser`, `ui`, `storage` and `comparators`.","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"* `Inventory`: Contains a collection of classes used by MediVault to represent","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"different medication information.","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"* `Errors`: Contains collection of classes that handles exceptions during execution of MediVault.","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"### Command","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"![CommandClassDiagram](diagrams/diagram_images/CommandClassDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"The **Command** class diagram above shows how **Command** interact with other classes in MediVault.","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"The Command Component consists of **18** subclasses where each subclass represents a command feature.","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"Let `*` be either of the three class: `Stock`, `Prescription` or `Order`.","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"* `Add*Command`: Adds a new `*` information into MediVault.","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"* `Delete*Command`: Removes the visibility of the `*` record in MediVault.","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"* `Update*Command`: Updates the `*` information.","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"* `List*Command`: Lists the `*` records.","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"* `ReceiveOrderCommand`: Marks an order as received and adds the ordered medication into the current stocks.","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"* `ArchivePresciptionCommand`: Archives all the prescription records before a given date.","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"* `ArchiveOrderCommand`: Archives all the order records before a given date.","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"* `PurgeCommand`: Wipes all records in MediVault.","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"* `HelpCommand`: Shows the help page.","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"* `ExitCommand`: Exits MediVault.","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"a-tph"},"content":"### Utilities","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"RemusTeo"},"content":"#### Validator","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"The class diagram below shows how the validator classes is implemented to help ensure that the user input is","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"valid. `StockValidator`, `PrescriptionValidator` and `OrderValidator` inherits from `MedicineValidator`. The class","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"methods are also shown in the diagram.","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"![ValidatorClassDiagram](diagrams/diagram_images/ValidatorClassDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"RemusTeo"},"content":"#### Storage","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"RemusTeo"},"content":"The `Storage` component of MediVault is implemented for purpose of loading, storing and archiving of data. Basically, it ","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"RemusTeo"},"content":"handles all file related processes necessary for MediVault to function. After every operation that modifies the stock, ","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"RemusTeo"},"content":"prescription or order, data will be automatically and dynamically saved into the corresponding data files.","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"RemusTeo"},"content":"`Storage` class is associated with `FileParser` class because during startup of MediVault, data will be loaded, ","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"RemusTeo"},"content":"and validation will be done in methods in FileParser.","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"RemusTeo"},"content":"`FileParser` class handles validation of data of the files `data/stock.txt`, `data/prescription.txt` and ","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"RemusTeo"},"content":"`data/order.txt`. If it detects anything invalid, it will throw an exception with specific information about which row","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"RemusTeo"},"content":"and which file the invalid data is. ","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":169,"author":{"gitId":"RemusTeo"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"RemusTeo"},"content":"\u003e * MediVault will not be able to start up until data in data files are deemed valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"RemusTeo"},"content":"\u003e * This is to prevent invalid data from entering the system caused by direct tampering of data files. ","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"RemusTeo"},"content":"The class diagram below shows the Storage component of MediVault.","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"RemusTeo"},"content":"![StorageClassDiagram](diagrams/diagram_images/StorageClassDiagram.png)","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"a-tph"},"content":"### Inventory","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"alvintan01"},"content":"The class diagram below shows how the objects in MediVault is implemented. `Stock`, `Prescription`","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"alvintan01"},"content":"and `Order` inherits from the abstract `Medicine` class. The attributes that each object has is also shown in the","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"alvintan01"},"content":"diagram.","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"alvintan01"},"content":"![InventoryClassDiagram](diagrams/diagram_images/InventoryClassDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"a-tph"},"content":"### Errors","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"alvintan01"},"content":"- `InvalidCommandException` will be thrown when the user enters an invalid command.","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"alvintan01"},"content":"- `InvalidDataException` will be thrown when MediVault encountered invalid data in the data files.","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"a-tph"},"content":"## Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"a-tph"},"content":"### Main Logic","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"alvintan01"},"content":"The main application logic shows how the commands are handled throughout the application. Below is the outline of the","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"alvintan01"},"content":"logic:","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"alvintan01"},"content":"* MediVault is called by the `main` method which calls the constructor of MediVault. Data is then loaded from the","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"alvintan01"},"content":"  `Storage` class to the application.","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"alvintan01"},"content":"* MediVault gets the user input via the `Ui` class and uses the `CommandParser` class to parse the input given by the","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"alvintan01"},"content":"  user.","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"alvintan01"},"content":"* The parameters will be parsed to a `LinkedHashMap\u003cString, String\u003e` to make the parameters easily accessible.","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"alvintan01"},"content":"* If a valid command is received, the `CommandParser` will call the `Command` object constructor and return the object","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"alvintan01"},"content":"  to MediVault.","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"alvintan01"},"content":"* MediVault will then invoke the `execute()` function of the `Command` object to execute the command.","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"alvintan01"},"content":"\u003e :warning: Warning","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"alvintan01"},"content":"\u003e * Should there be an invalid command, `CommandParser` will throw `InvalidCommandException` and MediVault will display the error message using the `Ui` class.","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"alvintan01"},"content":"Given below is the sequence diagram after `run()` is called for the interactions within the main application logic.","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"alvintan01"},"content":"![MainLogicSequenceDiagram](diagrams/diagram_images/MainLogicSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"alvintan01"},"content":"- `changeMode()` will be called when the user entered `stock`, `prescription` or `order` to help change modes.","lastModifiedDate":"2021-10-31"},{"lineNumber":213,"author":{"gitId":"alvintan01"},"content":"- `processCommand()` helps to parse the user\u0027s command to a `Command` object.","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"alvintan01"},"content":"- `parseParameters()` will return all the parameters entered as a `LinkedHashmap\u003cString, String\u003e`. This helps to make the","lastModifiedDate":"2021-10-31"},{"lineNumber":215,"author":{"gitId":"alvintan01"},"content":"parameters entered by the user easily accessible by the `Command` objects. ","lastModifiedDate":"2021-10-31"},{"lineNumber":216,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"a-tph"},"content":"After the `.execute()` command is called, MediVault does the following validator checks as shown below.","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":219,"author":{"gitId":"a-tph"},"content":"![ContainValidParametersAndValuesSequenceDiagram](diagrams/diagram_images/ContainValidParametersAndValuesSequenceDiagram.png)","lastModifiedDate":"2021-10-31"},{"lineNumber":220,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"a-tph"},"content":"\u003e :information_source: Replace `*` in the diagram with `Stock`, `Prescription` or `Order` depending on the command entered.","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"a-tph"},"content":"1. MediVault attempts to get the instance of the `Ui` class which is a singleton if it exists. Otherwise, it creates","lastModifiedDate":"2021-10-31"},{"lineNumber":224,"author":{"gitId":"a-tph"},"content":"a new instance of the `Ui` class.","lastModifiedDate":"2021-10-31"},{"lineNumber":225,"author":{"gitId":"a-tph"},"content":"2. MediVault creates a new `*Validator` instance which contains the methods to validate the user\u0027s input for the","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"a-tph"},"content":"respective `*`.","lastModifiedDate":"2021-10-31"},{"lineNumber":227,"author":{"gitId":"a-tph"},"content":"3. MediVault runs `containsInvalidParameters()` to check if **parameters** input by the user are valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":228,"author":{"gitId":"a-tph"},"content":"4. Medivault attempts to get the instance of the `Medicine` class which is also a single if it exists. Otherwise, it ","lastModifiedDate":"2021-10-31"},{"lineNumber":229,"author":{"gitId":"a-tph"},"content":"creates a new instance of the `Medicine` class. ","lastModifiedDate":"2021-10-31"},{"lineNumber":230,"author":{"gitId":"a-tph"},"content":"5. MediVault runs `containsInvalidParameterValues()` to check if **parameter values** input by the user is valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":231,"author":{"gitId":"a-tph"},"content":"6. If **Step 3** and **Step 5** are able to run without throwing any exception or error, user inputs are considered ","lastModifiedDate":"2021-10-31"},{"lineNumber":232,"author":{"gitId":"a-tph"},"content":"valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":233,"author":{"gitId":"a-tph"},"content":"7. After running the logic for `*Command`, commands that modifies the `*` information attempts to get the instance of ","lastModifiedDate":"2021-10-31"},{"lineNumber":234,"author":{"gitId":"a-tph"},"content":"`Storage` class which is a singleton if it exists. MediVault runs `saveData()` to save the latest information into the text file.","lastModifiedDate":"2021-10-31"},{"lineNumber":235,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":236,"author":{"gitId":"a-tph"},"content":"The motivation to implement an **initial validity checker** was because most of the commands requires MediVault to check ","lastModifiedDate":"2021-10-31"},{"lineNumber":237,"author":{"gitId":"a-tph"},"content":"if user input provided by the user are valid. This **guarantees** that the parameters and parameter values provided by ","lastModifiedDate":"2021-10-31"},{"lineNumber":238,"author":{"gitId":"a-tph"},"content":"the user are valid after it passes the validity checks.","lastModifiedDate":"2021-10-31"},{"lineNumber":239,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":240,"author":{"gitId":"a-tph"},"content":"The logic for all the `*Command` are further elaborated below.","lastModifiedDate":"2021-10-31"},{"lineNumber":241,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":242,"author":{"gitId":"alvintan01"},"content":"### List Command","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"alvintan01"},"content":"There are three variations of the list command.","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"alvintan01"},"content":"1. `liststock`","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"alvintan01"},"content":"2. `listprescription`","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"alvintan01"},"content":"3. `listorders`","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"alvintan01"},"content":"The sequence diagram below shows how the `list` operation works in general.","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"alvintan01"},"content":"![ListSequenceDiagram](diagrams/diagram_images/ListSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"alvintan01"},"content":"* All three variations of `list` are similar as they are implemented by iterating through the `Medicine` ArrayList and","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"alvintan01"},"content":"  filtering out the respective object types.","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"alvintan01"},"content":"* If the parameter `sort` or `rsort` is provided, the respective constructor of the `Comparator` classes will be invoked","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"alvintan01"},"content":"  to help sort the ArrayList.","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"alvintan01"},"content":"* For the rest of the valid command parameters, MediVault will do a **contains** comparison for strings and **equals**","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"alvintan01"},"content":"  comparison for integers as well as dates except for `expiring` and `low` parameters where it will do a **less than or","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"alvintan01"},"content":"  equal** comparison.","lastModifiedDate":"2021-10-26"},{"lineNumber":261,"author":{"gitId":"alvintan01"},"content":"* `getAttributeValue()` represents all the get methods available in each of the respective classes. At the end of the","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"alvintan01"},"content":"  execution the respective `print()` method from the `Ui` class will be called to display the respective tables.","lastModifiedDate":"2021-10-26"},{"lineNumber":263,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"a-tph"},"content":"### Stock Commands","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"a-tph"},"content":"#### AddStockCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"deonchung"},"content":"MediVault creates an `AddStockCommand` object when CommandParser identifies `addstock` or `add` in `stock`","lastModifiedDate":"2021-10-26"},{"lineNumber":269,"author":{"gitId":"deonchung"},"content":"mode.","lastModifiedDate":"2021-10-26"},{"lineNumber":270,"author":{"gitId":"deonchung"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-26"},{"lineNumber":271,"author":{"gitId":"deonchung"},"content":"\u003e * MediVault adds medicine stock when the `parameter` and `parameterValues` provided by the user are valid.","lastModifiedDate":"2021-10-26"},{"lineNumber":272,"author":{"gitId":"deonchung"},"content":"\u003e * Users will not be able to input medication if `max_quantity` is less than `quantity`.","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"deonchung"},"content":"\u003e * MediVault will ignore the `price`, `description` and `max_quantity` of user input if the same medication name and expiry date already exist.","lastModifiedDate":"2021-10-26"},{"lineNumber":274,"author":{"gitId":"deonchung"},"content":"\u003e * MediVault will ignore the `description` and `max_quantity` of user input if the same medication name already exist.","lastModifiedDate":"2021-10-26"},{"lineNumber":275,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"deonchung"},"content":"The sequence diagram for `AddStockCommand` is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":277,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":278,"author":{"gitId":"deonchung"},"content":"![AddStockSequenceDiagram](diagrams/diagram_images/AddStockSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":279,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":280,"author":{"gitId":"deonchung"},"content":"MediVault will determine if there exist the medication with the same name.","lastModifiedDate":"2021-10-31"},{"lineNumber":281,"author":{"gitId":"alvintan01"},"content":"* If there exist medication with the same name, MediVault will check if there exist the same expiry date using the `isExpiryExist()` method.","lastModifiedDate":"2021-10-31"},{"lineNumber":282,"author":{"gitId":"alvintan01"},"content":"  * MediVault will then check if the quantity is valid using the `isValidQuantity()` method.","lastModifiedDate":"2021-10-31"},{"lineNumber":283,"author":{"gitId":"deonchung"},"content":"  * If the same name and expiry date exist, Medivault will update the quantity of the existing stock.","lastModifiedDate":"2021-10-31"},{"lineNumber":284,"author":{"gitId":"deonchung"},"content":"  * If it does not exist the same expiry date, MediVault will add the medication using the existing description and maximum quantity.","lastModifiedDate":"2021-10-31"},{"lineNumber":285,"author":{"gitId":"alvintan01"},"content":"* If it does not exist the same medication in MediVault, MediVault will then check if the quantity is valid using the `isValidQuantity()` method and a new medication will be added.","lastModifiedDate":"2021-10-31"},{"lineNumber":286,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"a-tph"},"content":"#### DeleteStockCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":288,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"RemusTeo"},"content":"MediVault creates an `DeleteStockCommand` object when CommandParser identifies `deletestock` or the `delete` keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"RemusTeo"},"content":"in `stock` mode.","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"RemusTeo"},"content":"* MediVault allows deletion of a stock by specifying stock id through `i/ID`.","lastModifiedDate":"2021-10-31"},{"lineNumber":293,"author":{"gitId":"RemusTeo"},"content":"* MediVault allows deletion of expiring stocks by specifying an expiry date through `expiring/EXPIRY_DATE`.","lastModifiedDate":"2021-10-31"},{"lineNumber":294,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"RemusTeo"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"RemusTeo"},"content":"\u003e * MediVault deletes medicine stock information when `parameter` and `parameterValues` provided by the user are valid.","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"RemusTeo"},"content":"\u003e * MediVault performs a check to determine if it is executing deletion by stock id or deletion by expiry then executes","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"RemusTeo"},"content":"  accordingly.","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"RemusTeo"},"content":"\u003e * MediVault will not execute if both id and expiry date are specified. ","lastModifiedDate":"2021-10-31"},{"lineNumber":300,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"RemusTeo"},"content":"The sequence diagram for `DeleteStockCommand` is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":302,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"RemusTeo"},"content":"![DeleteStockSequenceDiagram](diagrams/diagram_images/DeleteStockSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":304,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"RemusTeo"},"content":"If MediVault determines that it is executing deletion by stock id, it will execute accordingly. Currently, it only","lastModifiedDate":"2021-11-02"},{"lineNumber":306,"author":{"gitId":"RemusTeo"},"content":"allows for deletion of 1 stock at a time.","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"RemusTeo"},"content":"The sequence diagram for deletion by stock id is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":310,"author":{"gitId":"RemusTeo"},"content":"![DeletionOfStockByIdSequenceDiagram](diagrams/diagram_images/DeletionOfStockByIdSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":311,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":312,"author":{"gitId":"RemusTeo"},"content":"* `deleteStockById()` deletion of stock given an id.","lastModifiedDate":"2021-11-02"},{"lineNumber":313,"author":{"gitId":"RemusTeo"},"content":"  * Loops through all medicines to `getStockId()` to compare and get the specified stock.","lastModifiedDate":"2021-11-02"},{"lineNumber":314,"author":{"gitId":"RemusTeo"},"content":"  * Then call `setDeleted()` to delete the stock.","lastModifiedDate":"2021-11-02"},{"lineNumber":315,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":316,"author":{"gitId":"RemusTeo"},"content":"If MediVault determines that it is executing deletion by expiry date, it will execute accordingly. The behaviour of","lastModifiedDate":"2021-11-02"},{"lineNumber":317,"author":{"gitId":"RemusTeo"},"content":"this command is to delete all stock that have \u003c\u003d specified date. This is because we would want to delete all expired","lastModifiedDate":"2021-10-26"},{"lineNumber":318,"author":{"gitId":"RemusTeo"},"content":"stock and if a date is specified, all the date before will also be expired hence implement deletion of \u003c\u003d date.","lastModifiedDate":"2021-10-26"},{"lineNumber":319,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":320,"author":{"gitId":"RemusTeo"},"content":"The sequence diagram for delete by expiry date is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":321,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":322,"author":{"gitId":"RemusTeo"},"content":"![DeletionOfStockByIdSequenceDiagram](diagrams/diagram_images/DeletionOfStockByExpirySequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":323,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":324,"author":{"gitId":"RemusTeo"},"content":"* `deleteStockByExpiry()` deletion of stock given an id.","lastModifiedDate":"2021-11-02"},{"lineNumber":325,"author":{"gitId":"RemusTeo"},"content":"  * `stringToDate()` helps to parse a string to a Date object.","lastModifiedDate":"2021-11-02"},{"lineNumber":326,"author":{"gitId":"RemusTeo"},"content":"  * Loops through all medicines to `getExpiry()` to compare and get the all expired stock.","lastModifiedDate":"2021-11-02"},{"lineNumber":327,"author":{"gitId":"RemusTeo"},"content":"  * Then call `setDeleted()` to delete the stock.","lastModifiedDate":"2021-11-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":329,"author":{"gitId":"a-tph"},"content":"#### UpdateStockCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":331,"author":{"gitId":"a-tph"},"content":"MediVault creates an `UpdateStockCommand` object when CommandParser identifies `updatestock` or","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"a-tph"},"content":"the `update` keyword in `stock` mode.","lastModifiedDate":"2021-10-26"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":334,"author":{"gitId":"a-tph"},"content":"The sequence diagram for `UpdateStockCommand` is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":335,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":336,"author":{"gitId":"a-tph"},"content":"![UpdateStockSequenceDiagram](diagrams/diagram_images/UpdateStockSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":337,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":338,"author":{"gitId":"a-tph"},"content":"MediVault retrieves the stock object using the `i/ID` parameter specified by the user using the `extractStockObject()` ","lastModifiedDate":"2021-10-31"},{"lineNumber":339,"author":{"gitId":"a-tph"},"content":"method. MediVault conducts another validation check on the provided `q/QUANTITY`,`m/MAX_QUANTITY` and `e/EXPIRY_DATE`","lastModifiedDate":"2021-10-31"},{"lineNumber":340,"author":{"gitId":"a-tph"},"content":"against the stock object retrieved earlier. This validation check is separated from the initial validation checker","lastModifiedDate":"2021-10-31"},{"lineNumber":341,"author":{"gitId":"a-tph"},"content":"as enforcing `q/QUANTITY` \u003c\u003d `m/MAX_QUANTITY` can only be done **after** MediVault confirms what user input is","lastModifiedDate":"2021-10-31"},{"lineNumber":342,"author":{"gitId":"a-tph"},"content":"provided. This is because the backend processing for either one or both parameters provided by the user are different.","lastModifiedDate":"2021-10-31"},{"lineNumber":343,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":344,"author":{"gitId":"a-tph"},"content":"MediVault adds a new stock record when a user update contains the `n/NAME` parameter. The old stock record still","lastModifiedDate":"2021-10-31"},{"lineNumber":345,"author":{"gitId":"a-tph"},"content":"exists in MediVault, but it will not be visible to user when listed. This approach solves the issue when a user is","lastModifiedDate":"2021-10-26"},{"lineNumber":346,"author":{"gitId":"a-tph"},"content":"unable to delete a prescription record when the medicine stock name gets updated.","lastModifiedDate":"2021-10-26"},{"lineNumber":347,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":348,"author":{"gitId":"a-tph"},"content":"### Prescription Commands","lastModifiedDate":"2021-10-26"},{"lineNumber":349,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":350,"author":{"gitId":"a-tph"},"content":"#### AddPrescriptionCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":352,"author":{"gitId":"deonchung"},"content":"MediVault creates an `AddPrescriptionCommand` object when CommandParser identifies `addprescription` or  ","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"deonchung"},"content":"`add` in `prescription` mode.","lastModifiedDate":"2021-10-26"},{"lineNumber":354,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":355,"author":{"gitId":"deonchung"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-26"},{"lineNumber":356,"author":{"gitId":"deonchung"},"content":"\u003e * MediVault adds the prescription when the `parameter` and `parameterValues` provided by the user are valid.","lastModifiedDate":"2021-10-26"},{"lineNumber":357,"author":{"gitId":"deonchung"},"content":"\u003e * MediVault will update the quantity left in the stock automatically after prescribing.","lastModifiedDate":"2021-10-26"},{"lineNumber":358,"author":{"gitId":"deonchung"},"content":"\u003e * MediVault will prescribe medication with the earliest date if there are medication with multiple expiry dates.","lastModifiedDate":"2021-10-26"},{"lineNumber":359,"author":{"gitId":"deonchung"},"content":"\u003e * Users will not be able to prescribe expired medication.","lastModifiedDate":"2021-10-26"},{"lineNumber":360,"author":{"gitId":"deonchung"},"content":"\u003e * Users will not be able to prescribe medication if the quantity is more than the total stock quantity.","lastModifiedDate":"2021-10-26"},{"lineNumber":361,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":362,"author":{"gitId":"deonchung"},"content":"The sequence diagram for `AddPrescriptionCommand` is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":363,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":364,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":365,"author":{"gitId":"deonchung"},"content":"![AddPrescriptionCommandDiagram](diagrams/diagram_images/AddPrescriptionSequenceDiagram.png)","lastModifiedDate":"2021-10-31"},{"lineNumber":366,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":367,"author":{"gitId":"alvintan01"},"content":"- `prescribe()` method will change the stock quantity based on prescription quantity and add prescribed medication to prescription list.","lastModifiedDate":"2021-10-31"},{"lineNumber":368,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":369,"author":{"gitId":"a-tph"},"content":"#### DeletePrescriptionCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":370,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":371,"author":{"gitId":"deonchung"},"content":"MediVault creates a `DeletePrescriptionCommand` object when CommandParser identifies `deleteprescription` or","lastModifiedDate":"2021-10-26"},{"lineNumber":372,"author":{"gitId":"deonchung"},"content":"`delete` in `prescription` mode.","lastModifiedDate":"2021-10-26"},{"lineNumber":373,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":374,"author":{"gitId":"deonchung"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-26"},{"lineNumber":375,"author":{"gitId":"deonchung"},"content":"\u003e * MediVault deletes the prescription when the `parameter` and `parameterValues` provided by the user are valid.","lastModifiedDate":"2021-10-26"},{"lineNumber":376,"author":{"gitId":"deonchung"},"content":"\u003e * MediVault will delete the prescription based on the user input of `PRESCRIPTION_ID`.","lastModifiedDate":"2021-10-26"},{"lineNumber":377,"author":{"gitId":"deonchung"},"content":"\u003e * MediVault will add the prescription quantity to the stock quantity after successful deletion of prescription.","lastModifiedDate":"2021-10-26"},{"lineNumber":378,"author":{"gitId":"deonchung"},"content":"\u003e * User will not be able to delete prescriptions if the total quantity after prescription will be more than the maximum","lastModifiedDate":"2021-10-26"},{"lineNumber":379,"author":{"gitId":"deonchung"},"content":"  quantity.","lastModifiedDate":"2021-10-26"},{"lineNumber":380,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":381,"author":{"gitId":"deonchung"},"content":"The sequence diagram for `DeletePrescriptionCommand` is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":382,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":383,"author":{"gitId":"deonchung"},"content":"![DeletePrescriptionCommandDiagram](diagrams/diagram_images/DeletePrescriptionSequenceDiagram.png)","lastModifiedDate":"2021-10-31"},{"lineNumber":384,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":385,"author":{"gitId":"deonchung"},"content":"\u003e :bulb: If the stock is deleted, MediVault will recover the stock and add the prescription quantity to the stock.","lastModifiedDate":"2021-10-26"},{"lineNumber":386,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":387,"author":{"gitId":"alvintan01"},"content":"- `setStockQuantity()` method will check stock if stock exist. If stock exist, add the quantity to the stock quantity.","lastModifiedDate":"2021-10-31"},{"lineNumber":388,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":389,"author":{"gitId":"a-tph"},"content":"#### UpdatePrescriptionCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":391,"author":{"gitId":"a-tph"},"content":"MediVault initialises an `UpdatePrescriptionCommand` class when CommandParser identifies","lastModifiedDate":"2021-10-26"},{"lineNumber":392,"author":{"gitId":"a-tph"},"content":"`updateprescription` or the `update` keyword in `prescription` mode.","lastModifiedDate":"2021-10-26"},{"lineNumber":393,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":394,"author":{"gitId":"a-tph"},"content":"The sequence diagram for `UpdatePrescriptionCommand` is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":395,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":396,"author":{"gitId":"a-tph"},"content":"![UpdatePrescriptionSequenceDiagram](diagrams/diagram_images/UpdatePrescriptionSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":397,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":398,"author":{"gitId":"a-tph"},"content":"MediVault retrieves the prescription object using the `i/ID` parameter specified by the user using the","lastModifiedDate":"2021-10-31"},{"lineNumber":399,"author":{"gitId":"a-tph"},"content":"`extractPrescriptionObject()` method.","lastModifiedDate":"2021-10-31"},{"lineNumber":400,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":401,"author":{"gitId":"a-tph"},"content":"The main update logic is split into four sections.","lastModifiedDate":"2021-10-31"},{"lineNumber":402,"author":{"gitId":"a-tph"},"content":"1. User provided both `n/NAME` and `q/QUANTITY` parameters.","lastModifiedDate":"2021-10-31"},{"lineNumber":403,"author":{"gitId":"a-tph"},"content":"   1. MediVault restores the stock quantity for the **original** `n/NAME` with the **original** `q/QUANTITY`.","lastModifiedDate":"2021-10-31"},{"lineNumber":404,"author":{"gitId":"a-tph"},"content":"   2. MediVault decrements the stock quantity for the **updated** `n/NAME` with the **updated** `q/QUANTITY`. ","lastModifiedDate":"2021-10-31"},{"lineNumber":405,"author":{"gitId":"a-tph"},"content":"2. User provided `n/NAME` parameter but not `q/QUANTITY`.","lastModifiedDate":"2021-10-31"},{"lineNumber":406,"author":{"gitId":"a-tph"},"content":"   1. MediVault restores the stock quantity for the **original** `n/NAME` with the `q/QUANTITY` present in the ","lastModifiedDate":"2021-10-31"},{"lineNumber":407,"author":{"gitId":"a-tph"},"content":"   prescription object.","lastModifiedDate":"2021-10-31"},{"lineNumber":408,"author":{"gitId":"a-tph"},"content":"   2. MediVault decrements the stock quantity for the **updated** `n/NAME` with the `q/QUANTITY` present in the","lastModifiedDate":"2021-10-31"},{"lineNumber":409,"author":{"gitId":"a-tph"},"content":"   prescription object.","lastModifiedDate":"2021-10-31"},{"lineNumber":410,"author":{"gitId":"a-tph"},"content":"3. User provided `q/QUANTITY` parameter but not `n/NAME`","lastModifiedDate":"2021-10-31"},{"lineNumber":411,"author":{"gitId":"a-tph"},"content":"   1. If the **updated** `q/QUANTITY` is more than the **original** `q/QUANTITY` MediVault decrements the stock quantity ","lastModifiedDate":"2021-10-31"},{"lineNumber":412,"author":{"gitId":"a-tph"},"content":"   for `n/NAME` present in the prescription object with the additional `q/QUANTITY` which is the difference between the","lastModifiedDate":"2021-10-31"},{"lineNumber":413,"author":{"gitId":"RemusTeo"},"content":"   **updated** and **original** `q/QUANTITY`.","lastModifiedDate":"2021-10-31"},{"lineNumber":414,"author":{"gitId":"a-tph"},"content":"   2. Otherwise, MediVault restores the stock quantity for `n/NAME` present in the prescription object with the","lastModifiedDate":"2021-10-31"},{"lineNumber":415,"author":{"gitId":"RemusTeo"},"content":"   difference between the **updated** and **original** `q/QUANTITY`.","lastModifiedDate":"2021-10-31"},{"lineNumber":416,"author":{"gitId":"a-tph"},"content":"4. User did not provide both `q/QUANTITY` and `n/NAME` parameter.","lastModifiedDate":"2021-10-31"},{"lineNumber":417,"author":{"gitId":"a-tph"},"content":"   1. Restoring or decrement is needed.","lastModifiedDate":"2021-10-31"},{"lineNumber":418,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":419,"author":{"gitId":"a-tph"},"content":"Other parameters like `d/DATE`, `c/CUSTOMER_ID` and `s/STAFF` are not affected because they share the same","lastModifiedDate":"2021-10-31"},{"lineNumber":420,"author":{"gitId":"a-tph"},"content":"update logic for sections 1 to 4 mentioned above.","lastModifiedDate":"2021-10-31"},{"lineNumber":421,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":422,"author":{"gitId":"a-tph"},"content":"MediVault adds a new prescription record when a user updates contains either the `n/NAME`, `q/QUANTITY`","lastModifiedDate":"2021-10-26"},{"lineNumber":423,"author":{"gitId":"a-tph"},"content":"parameter or both. The old prescription record is **permanently removed** from MediVault.","lastModifiedDate":"2021-10-26"},{"lineNumber":424,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":425,"author":{"gitId":"a-tph"},"content":"This approach solves the issue when a medication is prescribed to a user with an amount that is ","lastModifiedDate":"2021-10-26"},{"lineNumber":426,"author":{"gitId":"a-tph"},"content":"**more than** the current batch of stock with the same Stock ID but **less than** the total ","lastModifiedDate":"2021-10-26"},{"lineNumber":427,"author":{"gitId":"a-tph"},"content":"stock quantity. ","lastModifiedDate":"2021-10-26"},{"lineNumber":428,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":429,"author":{"gitId":"a-tph"},"content":"\u003e :bulb: MediVault automatically adds new prescription records when a medication is prescribed","lastModifiedDate":"2021-10-26"},{"lineNumber":430,"author":{"gitId":"a-tph"},"content":"\u003e from stocks with different Stock IDs.","lastModifiedDate":"2021-10-26"},{"lineNumber":431,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":432,"author":{"gitId":"a-tph"},"content":"### Order Commands","lastModifiedDate":"2021-10-26"},{"lineNumber":433,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":434,"author":{"gitId":"jiangweichen835"},"content":"### AddOrderCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":435,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":436,"author":{"gitId":"jiangweichen835"},"content":"MediVault creates an `AddOrderCommand` object when CommandParser identifies `addorder` or the `add` keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":437,"author":{"gitId":"jiangweichen835"},"content":"in `order` mode.","lastModifiedDate":"2021-10-26"},{"lineNumber":438,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":439,"author":{"gitId":"jiangweichen835"},"content":"\u003e :information_source: Note","lastModifiedDate":"2021-10-31"},{"lineNumber":440,"author":{"gitId":"jiangweichen835"},"content":"\u003e * MediVault adds order information when `parameter` and `parameterValues` provided by the user are valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":441,"author":{"gitId":"jiangweichen835"},"content":"\u003e * As the order date is an optional parameter, MediVault will use the date the order was placed as the default date.","lastModifiedDate":"2021-10-31"},{"lineNumber":442,"author":{"gitId":"jiangweichen835"},"content":"\u003e * Users will not be unable to add orders if the order quantity exceeds maximum stock quantity.","lastModifiedDate":"2021-10-31"},{"lineNumber":443,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":444,"author":{"gitId":"jiangweichen835"},"content":"The sequence diagram for `AddOrderCommand` is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":445,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":446,"author":{"gitId":"jiangweichen835"},"content":"![AddOrderCommandDiagram](diagrams/diagram_images/AddOrderSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":447,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":448,"author":{"gitId":"jiangweichen835"},"content":"`addDate()` method will add order date based on whether the user provided the date parameter or not.","lastModifiedDate":"2021-11-02"},{"lineNumber":449,"author":{"gitId":"jiangweichen835"},"content":"`addOrder()` method will add order based on user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":450,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":451,"author":{"gitId":"jiangweichen835"},"content":"MediVault will determine if there exist the medication with the same name in order and in stock.","lastModifiedDate":"2021-11-02"},{"lineNumber":452,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":453,"author":{"gitId":"jiangweichen835"},"content":"* If there exist medication with the same name in order and in stock, MediVault will check if the `orderQuantity +","lastModifiedDate":"2021-11-02"},{"lineNumber":454,"author":{"gitId":"jiangweichen835"},"content":"existingStockQuantity + existingOrderQuantity \u003c\u003d maxQuantity` to ensure total order quantity does not exceed the ","lastModifiedDate":"2021-11-02"},{"lineNumber":455,"author":{"gitId":"jiangweichen835"},"content":"existing maximum stock quantity allowed.","lastModifiedDate":"2021-11-02"},{"lineNumber":456,"author":{"gitId":"jiangweichen835"},"content":"* If there exist medication with the same name in order but not in stock, MediVault will check if the `orderQuantity","lastModifiedDate":"2021-11-02"},{"lineNumber":457,"author":{"gitId":"jiangweichen835"},"content":"\u003c maxQuantity`, where `maxQuantity \u003d Integer.MAX_VALUE` to allow the user to add any quantity of medication.","lastModifiedDate":"2021-11-02"},{"lineNumber":458,"author":{"gitId":"jiangweichen835"},"content":"* If there does not exist medication with the same name in order, MediVault will not check for valid quantity and","lastModifiedDate":"2021-11-02"},{"lineNumber":459,"author":{"gitId":"jiangweichen835"},"content":"will simply add the order as a new order.","lastModifiedDate":"2021-11-02"},{"lineNumber":460,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":461,"author":{"gitId":"a-tph"},"content":"#### DeleteOrderCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":462,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":463,"author":{"gitId":"deonchung"},"content":"MediVault creates a `DeleteOrderCommand` object when CommandParser identifies `deleteorder` or  `delete` in `order`","lastModifiedDate":"2021-10-26"},{"lineNumber":464,"author":{"gitId":"deonchung"},"content":"mode.","lastModifiedDate":"2021-10-26"},{"lineNumber":465,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":466,"author":{"gitId":"deonchung"},"content":"\u003e :information_source: Note","lastModifiedDate":"2021-10-26"},{"lineNumber":467,"author":{"gitId":"deonchung"},"content":"\u003e * MediVault deletes the order when the `parameter` and `parameterValues` provided by the user are valid.","lastModifiedDate":"2021-10-26"},{"lineNumber":468,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":469,"author":{"gitId":"deonchung"},"content":"The sequence diagram for `DeleteOrderCommand` is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":470,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":471,"author":{"gitId":"deonchung"},"content":"![DeleteOrderCommandDiagram](diagrams/diagram_images/DeleteOrderSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":472,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":473,"author":{"gitId":"a-tph"},"content":"#### UpdateOrderCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":474,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":475,"author":{"gitId":"alvintan01"},"content":"MediVault creates an `UpdateOrderCommand` object when CommandParser identifies","lastModifiedDate":"2021-10-26"},{"lineNumber":476,"author":{"gitId":"a-tph"},"content":"`updateorder` or the `update` keyword in `order` mode.","lastModifiedDate":"2021-10-26"},{"lineNumber":477,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":478,"author":{"gitId":"alvintan01"},"content":"The sequence diagram for `UpdateOrderCommand` is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":479,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":480,"author":{"gitId":"a-tph"},"content":"![UpdateOrderSequenceDiagram](diagrams/diagram_images/UpdateOrderSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":481,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":482,"author":{"gitId":"a-tph"},"content":"MediVault retrieves the order object using the `i/ID` parameter specified by the user using the","lastModifiedDate":"2021-10-31"},{"lineNumber":483,"author":{"gitId":"a-tph"},"content":"`extractOrderObject()` method.","lastModifiedDate":"2021-10-31"},{"lineNumber":484,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":485,"author":{"gitId":"a-tph"},"content":"\u003e :warning: Warning","lastModifiedDate":"2021-10-31"},{"lineNumber":486,"author":{"gitId":"a-tph"},"content":"\u003e * MediVault disables updating an order that has been delivered. Users can only update information for pending orders.","lastModifiedDate":"2021-10-31"},{"lineNumber":487,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":488,"author":{"gitId":"a-tph"},"content":"MediVault conducts a check if an order quantity is valid with the provided `q/QUANTITY`.","lastModifiedDate":"2021-10-31"},{"lineNumber":489,"author":{"gitId":"a-tph"},"content":"This validation check is separated from the initial validation checker as enforcing `q/QUANTITY` \u003c\u003d `m/MAX_QUANTITY` in ","lastModifiedDate":"2021-10-31"},{"lineNumber":490,"author":{"gitId":"a-tph"},"content":"stocks can only be done **after** MediVault confirms that the user provides a `q/QUANTITY` is an integer.","lastModifiedDate":"2021-10-31"},{"lineNumber":491,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":492,"author":{"gitId":"a-tph"},"content":"MediVault updates the order information only when all of the validation checks stated above are successful.","lastModifiedDate":"2021-11-02"},{"lineNumber":493,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":494,"author":{"gitId":"alvintan01"},"content":"### ReceiveOrderCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":495,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":496,"author":{"gitId":"alvintan01"},"content":"MediVault creates an `ReceiveOrderCommand` object when `CommandParser` identifies","lastModifiedDate":"2021-10-31"},{"lineNumber":497,"author":{"gitId":"alvintan01"},"content":"`receiveorder` or the `receive` keyword in `order` mode.","lastModifiedDate":"2021-10-26"},{"lineNumber":498,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":499,"author":{"gitId":"alvintan01"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-26"},{"lineNumber":500,"author":{"gitId":"alvintan01"},"content":"\u003e * MediVault will add the order to stock if the `parameters` and `parameterValues` provided by the user are valid.","lastModifiedDate":"2021-10-26"},{"lineNumber":501,"author":{"gitId":"alvintan01"},"content":"\u003e * `ReceiveOrderCommand` will call `AddStockCommand` once the `parameters` and `parameterValues` are validated.","lastModifiedDate":"2021-10-26"},{"lineNumber":502,"author":{"gitId":"alvintan01"},"content":"\u003e * If the order contains a medication already in stock, the `d/DESCRIPTION` and `m/MAX_QUANTITY` will be ignored","lastModifiedDate":"2021-10-26"},{"lineNumber":503,"author":{"gitId":"alvintan01"},"content":"\u003e and existing values will be used.","lastModifiedDate":"2021-10-26"},{"lineNumber":504,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":505,"author":{"gitId":"alvintan01"},"content":"The sequence diagram for `ReceiveOrderCommand` is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":506,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":507,"author":{"gitId":"alvintan01"},"content":"![ReceiveOrderSequenceDiagram](diagrams/diagram_images/ReceiveOrderSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":508,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":509,"author":{"gitId":"alvintan01"},"content":"- `isStockParametersValid()` helps to ensure that the parameters for the stock to be added are valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":510,"author":{"gitId":"alvintan01"},"content":"- `checkStockExist()` helps to check if a medication exists in stock.","lastModifiedDate":"2021-10-31"},{"lineNumber":511,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":512,"author":{"gitId":"alvintan01"},"content":"MediVault will then check if the quantity increased before setting the order as completed. This helps to ensure that","lastModifiedDate":"2021-10-31"},{"lineNumber":513,"author":{"gitId":"alvintan01"},"content":"only after the stock is successfully added, then the order would be complete.","lastModifiedDate":"2021-10-31"},{"lineNumber":514,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":515,"author":{"gitId":"a-tph"},"content":"### Archive Commands","lastModifiedDate":"2021-10-26"},{"lineNumber":516,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":517,"author":{"gitId":"a-tph"},"content":"#### ArchivePrescriptionCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":518,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":519,"author":{"gitId":"RemusTeo"},"content":"MediVault creates an `ArchivePrescriptionCommand` object when CommandParser identifies `archiveprescription` or the ","lastModifiedDate":"2021-10-26"},{"lineNumber":520,"author":{"gitId":"RemusTeo"},"content":"`archive` keyword in `prescription` mode.","lastModifiedDate":"2021-10-26"},{"lineNumber":521,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":522,"author":{"gitId":"RemusTeo"},"content":"* MediVault archives prescription records by specifying a date through `d/DATE`.","lastModifiedDate":"2021-10-31"},{"lineNumber":523,"author":{"gitId":"RemusTeo"},"content":"* MediVault will remove prescription records that have date \u003c\u003d specified date and output it into the file named","lastModifiedDate":"2021-10-26"},{"lineNumber":524,"author":{"gitId":"RemusTeo"},"content":"  `data/prescription_archive.txt`","lastModifiedDate":"2021-10-26"},{"lineNumber":525,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":526,"author":{"gitId":"RemusTeo"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-26"},{"lineNumber":527,"author":{"gitId":"RemusTeo"},"content":"\u003e * MediVault archive prescription information when `parameter` and `parameterValues` provided by the user are valid.","lastModifiedDate":"2021-10-26"},{"lineNumber":528,"author":{"gitId":"RemusTeo"},"content":"\u003e * MediVault will output prescription information into a user readable format in `data/prescription_archive.txt`.","lastModifiedDate":"2021-10-26"},{"lineNumber":529,"author":{"gitId":"RemusTeo"},"content":"\u003e * To modify the format, edit the code in `toArchiveFormat()` method in the Prescription Class.","lastModifiedDate":"2021-10-26"},{"lineNumber":530,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":531,"author":{"gitId":"RemusTeo"},"content":"The sequence diagram for ArchivePrescriptionCommand is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":532,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":533,"author":{"gitId":"RemusTeo"},"content":"![ArchivePrescriptionSequenceDiagram](diagrams/diagram_images/ArchivePrescriptionSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":534,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":535,"author":{"gitId":"RemusTeo"},"content":"* `stringToDate()` helps to parse a string to a Date object.","lastModifiedDate":"2021-11-02"},{"lineNumber":536,"author":{"gitId":"RemusTeo"},"content":"* `prescriptionsToArchive()` checks through all prescriptions and look for records that have prescription date \u003c\u003d ","lastModifiedDate":"2021-11-02"},{"lineNumber":537,"author":{"gitId":"RemusTeo"},"content":"specified date.","lastModifiedDate":"2021-11-02"},{"lineNumber":538,"author":{"gitId":"RemusTeo"},"content":"* `removeFromPrescriptions()` removes prescriptions from prescription list after archive.","lastModifiedDate":"2021-11-02"},{"lineNumber":539,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":540,"author":{"gitId":"a-tph"},"content":"#### ArchiveOrderCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":541,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":542,"author":{"gitId":"RemusTeo"},"content":"MediVault creates an `ArchiveOrderCommand` object when CommandParser identifies `archiveorder` or the","lastModifiedDate":"2021-10-26"},{"lineNumber":543,"author":{"gitId":"RemusTeo"},"content":"`archive` keyword in `order` mode.","lastModifiedDate":"2021-10-26"},{"lineNumber":544,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":545,"author":{"gitId":"RemusTeo"},"content":"* MediVault archives order records by specifying a date through `d/DATE`.","lastModifiedDate":"2021-10-31"},{"lineNumber":546,"author":{"gitId":"RemusTeo"},"content":"* MediVault will remove only DELIVERED order records that have date \u003c\u003d specified date and output it into the file named","lastModifiedDate":"2021-10-26"},{"lineNumber":547,"author":{"gitId":"RemusTeo"},"content":"`data/order_archive.txt`","lastModifiedDate":"2021-10-26"},{"lineNumber":548,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":549,"author":{"gitId":"RemusTeo"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-26"},{"lineNumber":550,"author":{"gitId":"RemusTeo"},"content":"\u003e * MediVault archive order information when `parameter` and `parameterValues` provided by the user are valid.","lastModifiedDate":"2021-10-26"},{"lineNumber":551,"author":{"gitId":"RemusTeo"},"content":"\u003e * MediVault will output order information into a user readable format in `data/prescription_archive.txt`.","lastModifiedDate":"2021-10-26"},{"lineNumber":552,"author":{"gitId":"RemusTeo"},"content":"\u003e * To modify the format, edit the code in `toArchiveFormat()` method in the Order Class.","lastModifiedDate":"2021-10-26"},{"lineNumber":553,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":554,"author":{"gitId":"RemusTeo"},"content":"The sequence diagram for ArchiveOrderCommand is shown below.","lastModifiedDate":"2021-10-26"},{"lineNumber":555,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":556,"author":{"gitId":"RemusTeo"},"content":"![ArchiveOrderSequenceDiagram](diagrams/diagram_images/ArchiveOrderSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":557,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":558,"author":{"gitId":"RemusTeo"},"content":"* `stringToDate()` helps to parse a string to a Date object.","lastModifiedDate":"2021-11-02"},{"lineNumber":559,"author":{"gitId":"RemusTeo"},"content":"* `prescriptionsToArchive()` checks through all orders and look for records that are DELIVERED and have order date \u003c\u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":560,"author":{"gitId":"RemusTeo"},"content":"  specified date.","lastModifiedDate":"2021-11-02"},{"lineNumber":561,"author":{"gitId":"RemusTeo"},"content":"* `removeFromOrders()` removes orders from order list after archive.","lastModifiedDate":"2021-11-02"},{"lineNumber":562,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":563,"author":{"gitId":"a-tph"},"content":"## Product Scope","lastModifiedDate":"2021-10-26"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":565,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":567,"author":{"gitId":"deonchung"},"content":"* Pharmacist handling storing, ordering and prescribing of medication","lastModifiedDate":"2021-10-31"},{"lineNumber":568,"author":{"gitId":"alvintan01"},"content":"* Has a need to manage large number of stocks in the pharmacy","lastModifiedDate":"2021-10-25"},{"lineNumber":569,"author":{"gitId":"alvintan01"},"content":"* May forget how much medicine stock is left in the pharmacy","lastModifiedDate":"2021-10-25"},{"lineNumber":570,"author":{"gitId":"alvintan01"},"content":"* Is a fast typist","lastModifiedDate":"2021-10-25"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":572,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":574,"author":{"gitId":"RemusTeo"},"content":"The main value proposition of MediVault is such that it provides the user with an interface for efficient stock taking","lastModifiedDate":"2021-10-31"},{"lineNumber":575,"author":{"gitId":"RemusTeo"},"content":"purposes. It eradicates the need for manual tracking of medications which will greatly lessen the administrative ","lastModifiedDate":"2021-10-31"},{"lineNumber":576,"author":{"gitId":"RemusTeo"},"content":"workload of a pharmacist. It automates stock taking process to a certain extent because it is a 3 in 1 integrated ","lastModifiedDate":"2021-10-31"},{"lineNumber":577,"author":{"gitId":"RemusTeo"},"content":"solution that provides real-time tracking of stock, prescriptions and orders in a pharmacy,  ","lastModifiedDate":"2021-10-31"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":579,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":581,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":582,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":583,"author":{"gitId":"alvintan01"},"content":"|v1.0|pharmacist|list out all of the medicines currently on shelf| know the current quantity of the medicines on shelf","lastModifiedDate":"2021-10-26"},{"lineNumber":584,"author":{"gitId":"deonchung"},"content":"|v1.0|manager| purge all data|start afresh","lastModifiedDate":"2021-10-31"},{"lineNumber":585,"author":{"gitId":"deonchung"},"content":"|v1.0|user| exit the program|shutdown my computer","lastModifiedDate":"2021-10-31"},{"lineNumber":586,"author":{"gitId":"deonchung"},"content":"|v1.0|pharmacist|list the price of each medication|know the price of each medication","lastModifiedDate":"2021-10-31"},{"lineNumber":587,"author":{"gitId":"deonchung"},"content":"|v1.0|pharmacist|sort medication by price|recommend the customer the cheapest one if he asks","lastModifiedDate":"2021-10-31"},{"lineNumber":588,"author":{"gitId":"deonchung"},"content":"|v1.0|pharmacist| update medication information| modify information using a single command instead of deleting and adding the updated medication information","lastModifiedDate":"2021-10-31"},{"lineNumber":589,"author":{"gitId":"deonchung"},"content":"|v1.0|pharmacist|update the limit of a medication|have enough stocks in the event that I foresee a surge in demand","lastModifiedDate":"2021-10-31"},{"lineNumber":590,"author":{"gitId":"deonchung"},"content":"|v1.0|pharmacist|add new types of medicines| keep track of all the medication supplies on 1 platform","lastModifiedDate":"2021-10-31"},{"lineNumber":591,"author":{"gitId":"deonchung"},"content":"|v1.0|pharmacist|delete a medicine|remove it from the system in the event of a product recall or end of production","lastModifiedDate":"2021-10-31"},{"lineNumber":592,"author":{"gitId":"deonchung"},"content":"|v1.0|pharmacist|search for medication for specific symptoms|give the right medication","lastModifiedDate":"2021-10-31"},{"lineNumber":593,"author":{"gitId":"deonchung"},"content":"|v1.0|pharmacist|set a limit on the number of medications to be added to the stocks|prevent an oversupply of medication","lastModifiedDate":"2021-10-31"},{"lineNumber":594,"author":{"gitId":"deonchung"},"content":"|v1.0|user|search for a specific medication|look for a medication without looking through the full list","lastModifiedDate":"2021-10-31"},{"lineNumber":595,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist|check which medication is expiring soon|order a new batch of supplies in time for my patients","lastModifiedDate":"2021-10-31"},{"lineNumber":596,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist| check which medication is low in quantity| order a new batch of supplies in time for my patients","lastModifiedDate":"2021-10-31"},{"lineNumber":597,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist|confirm a received order|know if an order is successfully received","lastModifiedDate":"2021-10-31"},{"lineNumber":598,"author":{"gitId":"deonchung"},"content":"|v2.0|manager|create orders|order medication.","lastModifiedDate":"2021-10-31"},{"lineNumber":599,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist|archive past prescription records|prevent records from being cluttered","lastModifiedDate":"2021-10-31"},{"lineNumber":600,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist| archive past order records|prevent records from being cluttered","lastModifiedDate":"2021-10-31"},{"lineNumber":601,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist| list all orders|keep track of them","lastModifiedDate":"2021-10-31"},{"lineNumber":602,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist|know the status of order| know whether the supply is ordered or received.","lastModifiedDate":"2021-10-31"},{"lineNumber":603,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist|saved record of the current medicine stock| have a saved file record to refer to","lastModifiedDate":"2021-10-31"},{"lineNumber":604,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist|saved record of the current medicine orders| have a saved file record to refer to","lastModifiedDate":"2021-10-31"},{"lineNumber":605,"author":{"gitId":"deonchung"},"content":"|v2.0|manager|saved record of the current medicine prescription| have a saved file record to refer to","lastModifiedDate":"2021-10-31"},{"lineNumber":606,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist|prescribe medication|tally the number of medications when I prescribed some to my patients","lastModifiedDate":"2021-10-31"},{"lineNumber":607,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist|delete prescription| delete a prescription record","lastModifiedDate":"2021-10-31"},{"lineNumber":608,"author":{"gitId":"deonchung"},"content":"|v2.0|manager|delete orders|cancel orders","lastModifiedDate":"2021-10-31"},{"lineNumber":609,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist| update prescription information| modify information using a single command instead of deleting and adding the updated prescription information","lastModifiedDate":"2021-10-31"},{"lineNumber":610,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist|delete ALL expired medications|expired medications will not be sold to customers or patients","lastModifiedDate":"2021-10-31"},{"lineNumber":611,"author":{"gitId":"deonchung"},"content":"|v2.0|manager|edit orders| update any wrong information","lastModifiedDate":"2021-10-31"},{"lineNumber":612,"author":{"gitId":"deonchung"},"content":"|v2.0|manager|see the pending orders to reflect in my current stocks|ensure that I won\u0027t double order on the same medication","lastModifiedDate":"2021-10-31"},{"lineNumber":613,"author":{"gitId":"deonchung"},"content":"|v2.0|pharmacist|search for records by a specific customer|see all his prescriptions","lastModifiedDate":"2021-10-31"},{"lineNumber":614,"author":{"gitId":"deonchung"},"content":"|v2.0|manager|check who prescribe what medication|know who is responsible for the prescription","lastModifiedDate":"2021-10-31"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":616,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":618,"author":{"gitId":"RemusTeo"},"content":"* **Accessibility Requirements:** MediVault should be able to run locally without internet connection.","lastModifiedDate":"2021-10-31"},{"lineNumber":619,"author":{"gitId":"RemusTeo"},"content":"* **Capacity Requirements:** MediVault should try to store only important details to minimize data file size as there may be","lastModifiedDate":"2021-10-31"},{"lineNumber":620,"author":{"gitId":"RemusTeo"},"content":"many data records after long usage. Perhaps could save into multiple files or archive data.","lastModifiedDate":"2021-10-31"},{"lineNumber":621,"author":{"gitId":"RemusTeo"},"content":"* **Compliance with regulations requirements:** MediVault should comply with regulations related to storing of sensitive","lastModifiedDate":"2021-10-31"},{"lineNumber":622,"author":{"gitId":"RemusTeo"},"content":"customer information.","lastModifiedDate":"2021-10-31"},{"lineNumber":623,"author":{"gitId":"RemusTeo"},"content":"* **Documentation Requirements:** MediVault user guide should be documented in a way that a pharmacist without CLI","lastModifiedDate":"2021-10-31"},{"lineNumber":624,"author":{"gitId":"RemusTeo"},"content":"experience can understand and learn how to use the application.","lastModifiedDate":"2021-10-31"},{"lineNumber":625,"author":{"gitId":"RemusTeo"},"content":"* **Efficiency Requirements:** MediVault should make use of efficient data structures and algorithms where appropriate to ","lastModifiedDate":"2021-10-31"},{"lineNumber":626,"author":{"gitId":"RemusTeo"},"content":"optimise speed if possible. However, it is not really a top priority.","lastModifiedDate":"2021-10-31"},{"lineNumber":627,"author":{"gitId":"RemusTeo"},"content":"* **Extensibility Requirements:** MediVault should minimally manage medications. In the future can probably expand inventory","lastModifiedDate":"2021-10-31"},{"lineNumber":628,"author":{"gitId":"RemusTeo"},"content":"to handle medical supplies in general.","lastModifiedDate":"2021-10-31"},{"lineNumber":629,"author":{"gitId":"RemusTeo"},"content":"* **Fault Tolerance Requirements:** MediVault should perform sufficient error handling and provide helpful error response","lastModifiedDate":"2021-10-31"},{"lineNumber":630,"author":{"gitId":"RemusTeo"},"content":"messages to suggest correct input to user. ","lastModifiedDate":"2021-10-31"},{"lineNumber":631,"author":{"gitId":"RemusTeo"},"content":"* **Interoperability Requirements:** MediVault should be able to run on minimally Windows, Linux and macOS.","lastModifiedDate":"2021-10-31"},{"lineNumber":632,"author":{"gitId":"RemusTeo"},"content":"* **Privacy Requirements:** MediVault may contain sensitive information such as customer health records. Thus, we should not ","lastModifiedDate":"2021-10-31"},{"lineNumber":633,"author":{"gitId":"RemusTeo"},"content":"publish our data to the internet and only store it on our local computer.","lastModifiedDate":"2021-10-31"},{"lineNumber":634,"author":{"gitId":"RemusTeo"},"content":"* **Portability Requirements:** MediVault should be able to run on any computer that has Java 11 and MediVault.jar. Data","lastModifiedDate":"2021-10-31"},{"lineNumber":635,"author":{"gitId":"RemusTeo"},"content":"should also be portable such that we can easily transfer data when changing computers.","lastModifiedDate":"2021-10-31"},{"lineNumber":636,"author":{"gitId":"RemusTeo"},"content":"* **Reliability Requirements:** MediVault should not crash at any point in time. Even if it does, it must retain data.","lastModifiedDate":"2021-10-31"},{"lineNumber":637,"author":{"gitId":"RemusTeo"},"content":"* **Response Time Requirements:** MediVault basic operations should respond within 3 seconds. For other processing heavy","lastModifiedDate":"2021-10-31"},{"lineNumber":638,"author":{"gitId":"RemusTeo"},"content":"operations such as start up and loading of data, it should respond within maximum of 15 seconds.","lastModifiedDate":"2021-10-31"},{"lineNumber":639,"author":{"gitId":"RemusTeo"},"content":"* **Robustness Requirements:** MediVault should have some had some testing done be it JUnit Tests or automated I/O ","lastModifiedDate":"2021-10-31"},{"lineNumber":640,"author":{"gitId":"RemusTeo"},"content":"redirection tests.","lastModifiedDate":"2021-10-31"},{"lineNumber":641,"author":{"gitId":"RemusTeo"},"content":"* **Scalability Requirements:** MediVault should be built to handle amount of data a small to medium enterprise would have.","lastModifiedDate":"2021-10-31"},{"lineNumber":642,"author":{"gitId":"RemusTeo"},"content":"* **Stability Requirements:** MediVault should function as per normal regardless of how many error user has made.","lastModifiedDate":"2021-10-31"},{"lineNumber":643,"author":{"gitId":"RemusTeo"},"content":"* **User Requirements:** MediVault should be user-friendly such that it is usable by a pharmacist with no CLI experience.","lastModifiedDate":"2021-10-31"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":646,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":648,"author":{"gitId":"deonchung"},"content":"### Starting up and Shutting Down","lastModifiedDate":"2021-10-31"},{"lineNumber":649,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":650,"author":{"gitId":"deonchung"},"content":"1. Download the latest release [here](https://github.com/AY2122S1-CS2113T-T10-1/tp/releases).","lastModifiedDate":"2021-10-31"},{"lineNumber":651,"author":{"gitId":"deonchung"},"content":"2. Run MediVault using `java -jar MediVault.jar`","lastModifiedDate":"2021-10-31"},{"lineNumber":652,"author":{"gitId":"deonchung"},"content":"3. To end program, enter the command `exit`.","lastModifiedDate":"2021-10-31"},{"lineNumber":653,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":654,"author":{"gitId":"deonchung"},"content":"### Running commands","lastModifiedDate":"2021-10-31"},{"lineNumber":655,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":656,"author":{"gitId":"deonchung"},"content":"1. You can refer to the list of commands and expected","lastModifiedDate":"2021-10-31"},{"lineNumber":657,"author":{"gitId":"deonchung"},"content":"   outputs [here](https://ay2122s1-cs2113t-t10-1.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-10-31"},{"lineNumber":658,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":659,"author":{"gitId":"deonchung"},"content":"### Saving Data","lastModifiedDate":"2021-10-31"},{"lineNumber":660,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":661,"author":{"gitId":"RemusTeo"},"content":"All data files are located in the data folder.","lastModifiedDate":"2021-10-31"},{"lineNumber":662,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":663,"author":{"gitId":"deonchung"},"content":"1. Data is saved in stock.txt, prescription.txt, order.txt.","lastModifiedDate":"2021-10-31"},{"lineNumber":664,"author":{"gitId":"deonchung"},"content":"    * Test Case:","lastModifiedDate":"2021-10-31"},{"lineNumber":665,"author":{"gitId":"deonchung"},"content":"        1. Run the application.","lastModifiedDate":"2021-10-31"},{"lineNumber":666,"author":{"gitId":"deonchung"},"content":"        2. Add an entry to stock, prescription and order into MediVault.","lastModifiedDate":"2021-10-31"},{"lineNumber":667,"author":{"gitId":"deonchung"},"content":"        3. Exit MediVault. The stock.txt, prescription.txt and order.txt will have one entry.","lastModifiedDate":"2021-10-31"},{"lineNumber":668,"author":{"gitId":"deonchung"},"content":"        4. Run the application.","lastModifiedDate":"2021-10-31"},{"lineNumber":669,"author":{"gitId":"deonchung"},"content":"        5. Delete entry to stock, prescription and order into MediVault.","lastModifiedDate":"2021-10-31"},{"lineNumber":670,"author":{"gitId":"deonchung"},"content":"        6. Exit MediVault.","lastModifiedDate":"2021-10-31"},{"lineNumber":671,"author":{"gitId":"deonchung"},"content":"    * Expected: stock.txt, prescription.txt and order.txt will be empty.","lastModifiedDate":"2021-10-31"},{"lineNumber":672,"author":{"gitId":"deonchung"},"content":"2. Archive data is saved in archiveorder.txt and archiveprescription.txt.","lastModifiedDate":"2021-10-31"},{"lineNumber":673,"author":{"gitId":"deonchung"},"content":"    * Test Case:","lastModifiedDate":"2021-10-31"},{"lineNumber":674,"author":{"gitId":"deonchung"},"content":"        1. Run the application.","lastModifiedDate":"2021-10-31"},{"lineNumber":675,"author":{"gitId":"deonchung"},"content":"        2. Add entries to prescription and order into MediVault.","lastModifiedDate":"2021-10-31"},{"lineNumber":676,"author":{"gitId":"deonchung"},"content":"        3. Run the `archiveorder` and `archiveprescription` command with date specified.","lastModifiedDate":"2021-10-31"},{"lineNumber":677,"author":{"gitId":"deonchung"},"content":"        4. Exit MediVault.","lastModifiedDate":"2021-10-31"},{"lineNumber":678,"author":{"gitId":"deonchung"},"content":"    * Expected: archiveorder.txt and archiveprescription.txt will have entries.","lastModifiedDate":"2021-10-31"},{"lineNumber":679,"author":{"gitId":"deonchung"},"content":"   ","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"alvintan01":109,"RemusTeo":140,"deonchung":152,"-":29,"a-tph":223,"jiangweichen835":26}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"# MediVault","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"MediVault is a Command Line Interface (CLI) application that will help to manage medication supplies within a pharmacy.","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"It is an integrated solution that provides real-time tracking of stock, orders and dispensing of medication.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"alvintan01":3,"a-tph":1,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"MediVault is a Command Line Interface (CLI) application that will help to manage medication supplies within a pharmacy.","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"It is an integrated solution that provides real-time tracking of stocks, prescriptions and orders.","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"## Contents","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"* [Purpose](#purpose)","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"* [Glossary](#glossary)","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    * [Setting up](#setting-up)","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    * [Changing modes](#changing-modes)","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"* [Features](#features)","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    * [Managing Stocks](#managing-stocks)","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        * [Adding stocks](#adding-stocks-addstock)","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"        * [Listing stocks](#listing-medication-stocks-liststock)","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        * [Updating stocks](#updating-stocks-updatestock)","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        * [Deleting stocks](#deleting-a-medication-stock-deletestock)","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    * [Managing Prescriptions](#managing-prescriptions)","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        * [Adding prescriptions](#adding-prescriptions-addprescription)","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        * [Listing prescriptions](#listing-prescriptions-listprescription)","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        * [Updating prescriptions](#updating-prescriptions-updateprescription)","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        * [Deleting prescriptions](#deleting-prescriptions-deleteprescription)","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    * [Managing Orders](#managing-orders)","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        * [Adding orders](#adding-an-order-addorder)","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        * [Listing orders](#listing-orders-listorder)","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"        * [Updating orders](#updating-orders-updateorder)","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        * [Deleting orders](#deleting-an-order-deleteorder)","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        * [Receiving orders](#receiving-orders-receiveorder)","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    * [Managing Data](#managing-data)","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        * [Archive orders](#archive-orders-archiveorder)","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        * [Archive prescriptions](#archive-prescriptions-archiveprescription)","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"        * [Purge data](#purging-existing-data--purge)","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    * [Miscellaneous](#miscellaneous)","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        * [Help](#showing-help-page--help)","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        * [Exit](#exiting-medivault--exit)","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"* [Data Handling](#data-handling)","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"    * [Data Storage](#data-storage)","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"    * [Data Editing](#data-editing)","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"* [FAQ](#faq)","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"# Purpose","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"The purpose of this user guide is for users to have a more detailed understanding and reference to usage of commands in","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"MediVault. In this user guide, you can expect to find examples and expected outputs of each command. MediVault caters","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"for normal users and advanced users so you can expect to find information about how to efficiently use the commands or","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"make use of the mode switching capabilities for convenience.","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"As a pharmacist, you would probably focus more on the sections related to stock and prescriptions. As a manager of the","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"pharmacy, you may be more interested in the order and data management sections of the user guide.","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"# Glossary","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"Terminology | Meaning","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"------ | ------","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"Stock | Refers to a medication.","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"Prescription | Refers to a prescription.","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"Order | Refers to ordering new medications to replenish the stocks.","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"Parameters | Prefixes for MediVault to understand the type of information you provide.","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"Meaning of Icons:","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"- :information_source: Additional information","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"- :warning: Warning","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"- :bulb: Note","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"# Quick Start","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"### Setting up","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"1. Ensure that you have **Java 11** or above installed.","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"2. Download the latest version of `MediVault.jar`","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"   from [here](https://github.com/AY2122S1-CS2113T-T10-1/tp/releases/tag/v1.0).","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"3. Copy the file to the folder you want to use as the **home** folder for `MediVault`.","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"4. In the terminal, run `Java -jar MediVault.jar`.","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"5. You should see the following prompt if the program has started successfully.","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"|  \\/  |          | |(_)| | | |              | || |  ","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"| .  . |  ___   __| | _ | | | |  __ _  _   _ | || |_ ","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"| |\\/| | / _ \\ / _` || || | | | / _` || | | || || __|","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"| |  | ||  __/| (_| || |\\ \\_/ /| (_| || |_| || || |_ ","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"\\_|  |_/ \\___| \\__,_||_| \\___/  \\__,_| \\__,_||_| \\__|","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"Welcome to MediVault!","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"[STOCK] \u003e ","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"\u003e :bulb: Note: MediVault is best used when the window is maximised to ensure that all tables are rendered correctly.","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"### Changing Modes","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"\u003e :information_source: Advanced users can choose to omit mode selection to get things done faster.","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"MediVault includes a mode feature to make the commands simpler for you. Your current mode is indicated in the square","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"brackets on the bottom left of the console `[STOCK] \u003e`. It allows you to type `add`, `list`, `update`, `delete` without","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"typing in the full command. Additionally, you can type `archive` in both `prescription` and `order` mode and `receive`","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"in `order` mode. For example, when you are in `order` mode, typing `list` is equivalent to `listorder`.","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"Type `stock`, `prescription` or `order` to change to the respective modes.","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"Example (Current mode is Stock):","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"Expected Output:","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"[STOCK] \u003e listorder","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"| ID |  NAME   | QUANTITY |    DATE    | STATUS  | ","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"| 1  | PANADOL |   100    | 09-10-2021 | PENDING | ","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"+----+---------+----------+------------+---------+","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"| 2  | VICODIN |    30    | 09-10-2021 | PENDING | ","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"+----+---------+----------+------------+---------+","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"[STOCK] \u003e order","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"Mode has changed to ORDER.","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"[ORDER] \u003e list","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"| ID |  NAME   | QUANTITY |    DATE    | STATUS  | ","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"| 1  | PANADOL |   100    | 09-10-2021 | PENDING | ","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"+----+---------+----------+------------+---------+","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"| 2  | VICODIN |    30    | 09-10-2021 | PENDING | ","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"+----+---------+----------+------------+---------+","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"# Features","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"\u003e :bulb: Notes about the commands:","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"\u003e ","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"\u003e You can refer to [Glossary](#glossary) to understand technical terms mentioned below.","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"\u003e * Parameters enclosed in `[]` should contain **one or more** optional parameters.","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"\u003e * Parameters enclosed in `{}` are **totally** optional parameters.","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"\u003e * Parameters enclosed in `()` are **conditional** optional parameters. For `addstock` and `receiveorder`, parameters ","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"\u003e `d/DESCRIPTION` and `m/MAX_QUANTITY` will be optional only if the stock exists.","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"\u003e * Parameters you specify can be in any order. ","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"\u003e  * E.g. `update i/1 q/100 m/200` and `update i/1 m/200 q/100` are both acceptable.","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"\u003e * MediVault ignores additional parameters provided when commands do not require one.","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"\u003e * If you specify the same parameter multiple times, MediVault will accept the last occurrence.","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"\u003e  * E.g. `delete i/2 i/1`, MediVault interprets the command as `delete i/1`.","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"\u003e * MediVault also ignores all extra values that are not provided in parameters.","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"\u003e  * E.g. `list abc123 i/1`, MediVault interprets the command as `list i/1`.","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"\u003e * MediVault\u0027s commands are case-insensitive.","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"\u003e * Dates in the `d/DATE` and `e/EXPIRY_DATE` field are in `DD-MM-YYYY` format.","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"\u003e * Column names in the `sort` parameter can be provided as the full column name or the column alias.","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"\u003e  * E.g. `NAME` is equivalent to `n` and `QUANTITY` is equivalent to `q`.","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"\u003e * For the `list` commands, use the `sort` parameter to sort by a column in ascending order and `rsort` parameter to","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"\u003e sort in descending order.","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"deonchung"},"content":"\u003e * For the `delete` commands, ID will not reset after deletion as stock ID, order ID and prescription ID are unique so that MediVault ","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"deonchung"},"content":"\u003e can identify each stock, order and prescription entry uniquely.","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"\u003e * `/` is not allowed to be entered for all input parameters, as MediVault uses them to identity the parameters.","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"## Managing Stocks","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"deonchung"},"content":"### Adding stocks: `addstock`","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"deonchung"},"content":"Adds medication into the inventory.","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"deonchung"},"content":"\u003e :warning: Warning","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"deonchung"},"content":"\u003e * If medication exists, description and maximum quantity will be optional parameters. If you include `d/DESCRIPTION` or  `m/MAX_QUANTITY` parameter, it will be ignored and MediVault will add the medication with the existing description and existing maximum quantity.","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"deonchung"},"content":"\u003e * If medication and expiry date exists, price, description and maximum quantity will be optional parameters. If you include `p/PRICE` or `d/DESCRIPTION` or  `m/MAX_QUANTITY` parameter, it will be ignored and MediVault will add the medication with the existing price, existing description and existing maximum quantity.","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"deonchung"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"deonchung"},"content":"\u003e * Description will be standardised in the stock so that it will be easier for users to search for medication by the symptoms.","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"deonchung"},"content":"\u003e   * Users will be able to search for medication by symptoms using the list command as shown below.","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"deonchung"},"content":"\u003e * Expiry date is compulsory so that user will be able to track the expiry date for all medication.","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"deonchung"},"content":"\u003e   * Users will be able to view all the expired medication or expiring medication easily using the list command as shown below.","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"deonchung"},"content":"\u003e * Medication with same name but different expiry date will be added into MediVault in different rows. This will allow users to have different prices for different expiry dates.","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"deonchung"},"content":"\u003e   * Users might want to set a discount price for expiring medication.","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"deonchung"},"content":"  ","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"Format: `addstock n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE (d/DESCRIPTION m/MAX_QUANTITY)`","lastModifiedDate":"2021-11-02"},{"lineNumber":173,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"deonchung"},"content":"Example 1 (If medication exists): `addstock n/panadol p/5 q/50 e/19-09-2025`","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"deonchung"},"content":"Expected Output 1:","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"deonchung"},"content":"Medicine exists. Using existing description and maximum quantity.","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"deonchung"},"content":"Medication added: panadol","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"deonchung"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"deonchung"},"content":"| ID |  NAME   | PRICE | QUANTITY | EXPIRY_DATE | DESCRIPTION | MAX_QUANTITY | ","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"deonchung"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"deonchung"},"content":"| 7  | PANADOL | $5.00 |    50    | 19-09-2025  |  HEADACHES  |     1000     | ","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"deonchung"},"content":"+----+---------+-------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"deonchung"},"content":"Example 2 (If medication and expiry date exists): `addstock n/panadol q/50 e/19-09-2025`","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"deonchung"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"deonchung"},"content":"Same Medication and Expiry Date exist. Update existing quantity.","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"deonchung"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"deonchung"},"content":"| ID |  NAME   | PRICE | QUANTITY | EXPIRY_DATE | DESCRIPTION | MAX_QUANTITY | ","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"deonchung"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"deonchung"},"content":"| 8  | PANADOL | $5.00 |   100    | 19-09-2025  |  HEADACHES  |     1000     | ","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"deonchung"},"content":"+----+---------+-------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"deonchung"},"content":"Example 3 (If medication does not exist): `addstock n/paracetamol q/10 p/10 e/02-11-2021 d/fever m/500`","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"deonchung"},"content":"Expected Output 3:","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"deonchung"},"content":"Medication added: paracetamol","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"deonchung"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"deonchung"},"content":"| ID |    NAME     | PRICE  | QUANTITY | EXPIRY_DATE | DESCRIPTION | MAX_QUANTITY | ","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"deonchung"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"deonchung"},"content":"| 9  | PARACETAMOL | $10.00 |    10    | 02-11-2021  |    FEVER    |     500      | ","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"deonchung"},"content":"+----+-------------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"a-tph"},"content":"### Listing medication stocks: `liststock`","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"jiangweichen835"},"content":"Lists all existing medications in the inventory.","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"alvintan01"},"content":"* All parameters for `liststock` command are optional, you can choose to list medication by any of the parameters.","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"jiangweichen835"},"content":"* You are able to `liststock` by any column and sort or reverse sort them.","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"a-tph"},"content":"* When you update an order information, MediVault reflects the pending stocks shown here.","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"alvintan01"},"content":"* The total pending quantity will be shown if there are orders for a medication.","lastModifiedDate":"2021-11-01"},{"lineNumber":222,"author":{"gitId":"alvintan01"},"content":"* `low/LESS_THAN_OR_EQUAL_QUANTITY` and `expiring/LESS_THAN_OR_EQUAL_EXPIRY_DATE` parameters can be used to search for","lastModifiedDate":"2021-11-01"},{"lineNumber":223,"author":{"gitId":"alvintan01"},"content":"stocks with low quantity and expiring stocks. ","lastModifiedDate":"2021-11-01"},{"lineNumber":224,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"alvintan01"},"content":"Format: `liststock {i/ID p/PRICE q/QUANTITY low/LESS_THAN_OR_EQUAL_QUANTITY e/EXPIRY_DATE expiring/LESS_THAN_OR_EQUAL_EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY sort/COLUMN_NAME rsort/COLUMN_NAME}`","lastModifiedDate":"2021-11-01"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":227,"author":{"gitId":"jiangweichen835"},"content":"Example 1 (Listing all medications): `liststock`","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"a-tph"},"content":"Expected Output 1:","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"jiangweichen835"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"jiangweichen835"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-11-02"},{"lineNumber":233,"author":{"gitId":"jiangweichen835"},"content":"| ID |    NAME    | PRICE  | QUANTITY | EXPIRY_DATE |  DESCRIPTION   | MAX_QUANTITY | ","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"jiangweichen835"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-11-02"},{"lineNumber":235,"author":{"gitId":"jiangweichen835"},"content":"| 1  |  PANADOL   | $20.00 |    20    | 13-09-2021  |   HEADACHES    |     1000     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":236,"author":{"gitId":"jiangweichen835"},"content":"+----+------------+--------+----------+-------------+----------------+--------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":237,"author":{"gitId":"jiangweichen835"},"content":"| 2  |  PANADOL   | $20.00 |    10    | 14-09-2021  |   HEADACHES    |     1000     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":238,"author":{"gitId":"jiangweichen835"},"content":"+----+------------+--------+----------+-------------+----------------+--------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":239,"author":{"gitId":"jiangweichen835"},"content":"| 3  |  VICODIN   | $10.00 |    20    | 30-09-2021  |  SEVERE PAIN   |     500      | ","lastModifiedDate":"2021-10-31"},{"lineNumber":240,"author":{"gitId":"jiangweichen835"},"content":"+----+------------+--------+----------+-------------+----------------+--------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":241,"author":{"gitId":"jiangweichen835"},"content":"| 4  | LISINOPRIL | $20.00 |    25    | 15-10-2021  | HYPOTHYROIDISM |     800      | ","lastModifiedDate":"2021-11-02"},{"lineNumber":242,"author":{"gitId":"jiangweichen835"},"content":"+----+------------+--------+----------+-------------+----------------+--------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":243,"author":{"gitId":"jiangweichen835"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"jiangweichen835"},"content":"Example 2 (Filter by name): `liststock n/panadol`","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":247,"author":{"gitId":"a-tph"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"jiangweichen835"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"jiangweichen835"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-11-02"},{"lineNumber":251,"author":{"gitId":"jiangweichen835"},"content":"| ID |  NAME   | PRICE  | QUANTITY | EXPIRY_DATE | DESCRIPTION | MAX_QUANTITY | ","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"jiangweichen835"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-11-02"},{"lineNumber":253,"author":{"gitId":"jiangweichen835"},"content":"| 1  | PANADOL | $20.00 |    20    | 13-09-2021  |  HEADACHES  |     1000     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":254,"author":{"gitId":"jiangweichen835"},"content":"+----+---------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":255,"author":{"gitId":"jiangweichen835"},"content":"| 2  | PANADOL | $20.00 |    10    | 14-09-2021  |  HEADACHES  |     1000     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":256,"author":{"gitId":"jiangweichen835"},"content":"+----+---------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"jiangweichen835"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"alvintan01"},"content":"### Updating stocks: `updatestock`","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"alvintan01"},"content":"Updates existing medication stock information in the inventory.","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":263,"author":{"gitId":"alvintan01"},"content":"\u003e :warning: Warning","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"alvintan01"},"content":"\u003e * The Stock ID must exist in MediVault.","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"alvintan01"},"content":"\u003e * You cannot update the Stock ID.","lastModifiedDate":"2021-10-26"},{"lineNumber":266,"author":{"gitId":"a-tph"},"content":"\u003e * The allocation of Stock ID is determined by MediVault.","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"a-tph"},"content":"\u003e * If you include the `n/NAME`, `d/DESCRIPTION` or `m/MAX_QUANTITY` parameter, MediVault updates **all** entries that ","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"a-tph"},"content":"has same existing medication name given the `i/ID` with your input values for these parameters.","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":270,"author":{"gitId":"a-tph"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-26"},{"lineNumber":271,"author":{"gitId":"alvintan01"},"content":"\u003e * A new Stock ID will be assigned to the current stock if your update has the `n/NAME` parameter.","lastModifiedDate":"2021-10-26"},{"lineNumber":272,"author":{"gitId":"a-tph"},"content":"\u003e * When you update the `n/NAME` parameter, there may be an existing prescription record that is present.","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"a-tph"},"content":"\u003e * By allocating a new Stock ID to the updated stock record, MediVault preserves the name of the old record so that ","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"a-tph"},"content":"when you delete a prescription record, it is **guaranteed** to automatically update the quantity of the stock.","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"alvintan01"},"content":"Format: `updatestock i/ID [n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY]`","lastModifiedDate":"2021-10-26"},{"lineNumber":277,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"a-tph"},"content":"Initial stock records:","lastModifiedDate":"2021-10-26"},{"lineNumber":279,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":280,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":281,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":282,"author":{"gitId":"a-tph"},"content":"| ID |  NAME   | PRICE  | QUANTITY | EXPIRY_DATE | DESCRIPTION | MAX_QUANTITY | ","lastModifiedDate":"2021-10-26"},{"lineNumber":283,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":284,"author":{"gitId":"a-tph"},"content":"| 1  | PANADOL | $20.00 |    20    | 13-09-2021  |  HEADACHES  |     1000     | ","lastModifiedDate":"2021-10-26"},{"lineNumber":285,"author":{"gitId":"a-tph"},"content":"+----+---------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"a-tph"},"content":"| 2  | PANADOL | $20.00 |    10    | 14-09-2021  |  HEADACHES  |     1000     | ","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"a-tph"},"content":"+----+---------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-26"},{"lineNumber":288,"author":{"gitId":"a-tph"},"content":"| 3  | VICODIN | $10.00 |    20    | 30-09-2021  | SEVERE PAIN |     500      | ","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"a-tph"},"content":"+----+---------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"a-tph"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"a-tph"},"content":"\u003e * Examples stated below are **independent** from each other.","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"a-tph"},"content":"Example 1 (Updating with medication name present):","lastModifiedDate":"2021-11-02"},{"lineNumber":296,"author":{"gitId":"a-tph"},"content":"`update i/3 n/amoxil p/20 q/50 e/01-12-2021 d/body infections m/100`","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"a-tph"},"content":"Expected Output 1:","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":300,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":301,"author":{"gitId":"alvintan01"},"content":"Updated! Number of rows affected: 1","lastModifiedDate":"2021-10-26"},{"lineNumber":302,"author":{"gitId":"alvintan01"},"content":"Stock Id changed from:","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"a-tph"},"content":"3 -\u003e 4","lastModifiedDate":"2021-10-26"},{"lineNumber":304,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"alvintan01"},"content":"| ID |  NAME  | PRICE  | QUANTITY | EXPIRY_DATE |   DESCRIPTION   | MAX_QUANTITY | ","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"a-tph"},"content":"| 4  | AMOXIL | $20.00 |    50    | 01-12-2021  | BODY INFECTIONS |     100      | ","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"a-tph"},"content":"+----+--------+--------+----------+-------------+-----------------+--------------+","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":310,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":311,"author":{"gitId":"a-tph"},"content":"Example 2 (Updating only price and description):","lastModifiedDate":"2021-11-02"},{"lineNumber":312,"author":{"gitId":"a-tph"},"content":"`update i/1 p/30 d/fever`","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":314,"author":{"gitId":"a-tph"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-26"},{"lineNumber":315,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":316,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":317,"author":{"gitId":"a-tph"},"content":"Updated! Number of rows affected: 2","lastModifiedDate":"2021-10-26"},{"lineNumber":318,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":319,"author":{"gitId":"a-tph"},"content":"| ID |  NAME   | PRICE  | QUANTITY | EXPIRY_DATE | DESCRIPTION | MAX_QUANTITY | ","lastModifiedDate":"2021-10-26"},{"lineNumber":320,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":321,"author":{"gitId":"a-tph"},"content":"| 1  | PANADOL | $30.00 |    20    | 13-09-2021  |    FEVER    |     1000     | ","lastModifiedDate":"2021-10-26"},{"lineNumber":322,"author":{"gitId":"a-tph"},"content":"+----+---------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-26"},{"lineNumber":323,"author":{"gitId":"a-tph"},"content":"| 2  | PANADOL | $20.00 |    10    | 14-09-2021  |    FEVER    |     1000     | ","lastModifiedDate":"2021-10-26"},{"lineNumber":324,"author":{"gitId":"a-tph"},"content":"+----+---------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-26"},{"lineNumber":325,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":326,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":327,"author":{"gitId":"alvintan01"},"content":"### Deleting a medication stock: `deletestock`","lastModifiedDate":"2021-10-26"},{"lineNumber":328,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":329,"author":{"gitId":"RemusTeo"},"content":"If you made a mistake and want to delete a medication from the inventory, you may do so by using this command.","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":331,"author":{"gitId":"alvintan01"},"content":"* Able to delete a specific stock by specifying Stock ID using `i/ID`.","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"alvintan01"},"content":"* Able to delete multiple stocks that have expiry date before and equals to specified date using `expiring/EXPIRY_DATE`.","lastModifiedDate":"2021-10-26"},{"lineNumber":333,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":334,"author":{"gitId":"alvintan01"},"content":"Format: `deletestock [i/ID expiring/EXPIRY_DATE]`","lastModifiedDate":"2021-10-26"},{"lineNumber":335,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":336,"author":{"gitId":"alvintan01"},"content":"Example 1 (Deletion by Stock ID): `deletestock i/3`","lastModifiedDate":"2021-10-26"},{"lineNumber":337,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":338,"author":{"gitId":"a-tph"},"content":"Expected Output 1:","lastModifiedDate":"2021-10-28"},{"lineNumber":339,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":340,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":341,"author":{"gitId":"alvintan01"},"content":"Deleted row with Stock Id: 3","lastModifiedDate":"2021-10-26"},{"lineNumber":342,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":343,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":344,"author":{"gitId":"alvintan01"},"content":"Example 2 (Deletion by expiry date): `deletestock expiring/10-10-2021`","lastModifiedDate":"2021-10-26"},{"lineNumber":345,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":346,"author":{"gitId":"a-tph"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-28"},{"lineNumber":347,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":348,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":349,"author":{"gitId":"alvintan01"},"content":"Deleted expired medications! Rows deleted: 4","lastModifiedDate":"2021-10-26"},{"lineNumber":350,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":352,"author":{"gitId":"alvintan01"},"content":"## Managing Prescriptions","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":354,"author":{"gitId":"alvintan01"},"content":"### Adding prescriptions: `addprescription`","lastModifiedDate":"2021-10-26"},{"lineNumber":355,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":356,"author":{"gitId":"alvintan01"},"content":"Adds a prescription record and subtracts the medication quantity from stocks.","lastModifiedDate":"2021-10-26"},{"lineNumber":357,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":358,"author":{"gitId":"deonchung"},"content":"\u003e :information_source:","lastModifiedDate":"2021-11-02"},{"lineNumber":359,"author":{"gitId":"deonchung"},"content":"\u003e * MediVault will prescribe the medication with the shortest expiry date first. ","lastModifiedDate":"2021-11-02"},{"lineNumber":360,"author":{"gitId":"deonchung"},"content":"If the remaining quantity of the current batch of medication is insufficient, the next batch of medication will be used to supplement the prescription.","lastModifiedDate":"2021-11-02"},{"lineNumber":361,"author":{"gitId":"deonchung"},"content":"\u003e * MediVault will add another entry to prescription even if the medication name, customer\u0027s ID, date and staff name is exactly the same. ","lastModifiedDate":"2021-11-02"},{"lineNumber":362,"author":{"gitId":"deonchung"},"content":"This is so that MediVault can track all entries.","lastModifiedDate":"2021-11-02"},{"lineNumber":363,"author":{"gitId":"deonchung"},"content":"\u003e  * If users want to increase the quantity of medication prescribed, users can use `updateprescription` command instead.","lastModifiedDate":"2021-11-02"},{"lineNumber":364,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":365,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":366,"author":{"gitId":"alvintan01"},"content":"Format: `addprescription n/NAME q/QUANTITY s/STAFF c/CUSTOMER_ID`","lastModifiedDate":"2021-10-26"},{"lineNumber":367,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":368,"author":{"gitId":"alvintan01"},"content":"Example: `addprescription n/panadol q/5 s/john c/123`","lastModifiedDate":"2021-10-26"},{"lineNumber":369,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":370,"author":{"gitId":"alvintan01"},"content":"Expected Output:","lastModifiedDate":"2021-10-26"},{"lineNumber":371,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":373,"author":{"gitId":"deonchung"},"content":"Prescribed:PANADOL Quantity:1 Expiry Date:14-09-2021","lastModifiedDate":"2021-10-28"},{"lineNumber":374,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-21"},{"lineNumber":375,"author":{"gitId":"a-tph"},"content":"| ID |  NAME   | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | ","lastModifiedDate":"2021-10-21"},{"lineNumber":376,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-21"},{"lineNumber":377,"author":{"gitId":"deonchung"},"content":"| 9  | PANADOL |    5     |     123     | 26-10-2021 | JOHN  |    2     | ","lastModifiedDate":"2021-10-28"},{"lineNumber":378,"author":{"gitId":"a-tph"},"content":"+----+---------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-21"},{"lineNumber":379,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":380,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":381,"author":{"gitId":"alvintan01"},"content":"### Listing prescriptions: `listprescription`","lastModifiedDate":"2021-10-25"},{"lineNumber":382,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":383,"author":{"gitId":"alvintan01"},"content":"Lists all prescription records in the application.","lastModifiedDate":"2021-10-25"},{"lineNumber":384,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":385,"author":{"gitId":"alvintan01"},"content":"* All parameters for `listprescription` command are optional, you can choose to list the records by any of the","lastModifiedDate":"2021-10-25"},{"lineNumber":386,"author":{"gitId":"alvintan01"},"content":"  parameters.","lastModifiedDate":"2021-10-25"},{"lineNumber":387,"author":{"gitId":"alvintan01"},"content":"* You are able to `listprescription` by any column and sort or reverse sort them.","lastModifiedDate":"2021-10-25"},{"lineNumber":388,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":389,"author":{"gitId":"alvintan01"},"content":"Format: `listprescription {i/ID q/QUANTITY c/CUSTOMER_ID d/DATE s/STAFF_NAME sid/STOCK_ID sort/COLUMN_NAME rsort/COLUMN_NAME}`","lastModifiedDate":"2021-11-01"},{"lineNumber":390,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":391,"author":{"gitId":"alvintan01"},"content":"Example 1 (Listing all prescriptions): `listprescription`","lastModifiedDate":"2021-10-28"},{"lineNumber":392,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":393,"author":{"gitId":"a-tph"},"content":"Expected Output 1:","lastModifiedDate":"2021-10-28"},{"lineNumber":394,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":395,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":396,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-19"},{"lineNumber":397,"author":{"gitId":"alvintan01"},"content":"| ID |     NAME     | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | ","lastModifiedDate":"2021-10-19"},{"lineNumber":398,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-19"},{"lineNumber":399,"author":{"gitId":"alvintan01"},"content":"| 1  |   PANADOL    |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":400,"author":{"gitId":"alvintan01"},"content":"+----+--------------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-19"},{"lineNumber":401,"author":{"gitId":"alvintan01"},"content":"| 2  |   VICODIN    |    10    |  S2345678B  | 10-10-2021 | PETER |    3     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":402,"author":{"gitId":"alvintan01"},"content":"+----+--------------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-19"},{"lineNumber":403,"author":{"gitId":"alvintan01"},"content":"| 3  | SIMVASTATIN  |    10    |  S1234567A  | 11-10-2021 |  SAM  |    4     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":404,"author":{"gitId":"alvintan01"},"content":"+----+--------------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-19"},{"lineNumber":405,"author":{"gitId":"alvintan01"},"content":"| 4  |  LISINOPRIL  |    10    |  S3456789C  | 12-10-2021 | JANE  |    5     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":406,"author":{"gitId":"alvintan01"},"content":"+----+--------------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-19"},{"lineNumber":407,"author":{"gitId":"alvintan01"},"content":"| 5  | AZITHROMYCIN |    10    |  S2345678B  | 13-10-2021 | PETER |    6     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":408,"author":{"gitId":"alvintan01"},"content":"+----+--------------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-19"},{"lineNumber":409,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":410,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":411,"author":{"gitId":"alvintan01"},"content":"Example 2 (Listing prescriptions sorted by staff): `listprescription sort/s`","lastModifiedDate":"2021-10-28"},{"lineNumber":412,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":413,"author":{"gitId":"a-tph"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-28"},{"lineNumber":414,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":415,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":416,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-19"},{"lineNumber":417,"author":{"gitId":"alvintan01"},"content":"| ID |     NAME     | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | ","lastModifiedDate":"2021-10-19"},{"lineNumber":418,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-19"},{"lineNumber":419,"author":{"gitId":"alvintan01"},"content":"| 1  |   PANADOL    |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":420,"author":{"gitId":"alvintan01"},"content":"+----+--------------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-19"},{"lineNumber":421,"author":{"gitId":"alvintan01"},"content":"| 4  |  LISINOPRIL  |    10    |  S3456789C  | 12-10-2021 | JANE  |    5     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":422,"author":{"gitId":"alvintan01"},"content":"+----+--------------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-19"},{"lineNumber":423,"author":{"gitId":"alvintan01"},"content":"| 2  |   VICODIN    |    10    |  S2345678B  | 10-10-2021 | PETER |    3     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":424,"author":{"gitId":"alvintan01"},"content":"+----+--------------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-19"},{"lineNumber":425,"author":{"gitId":"alvintan01"},"content":"| 5  | AZITHROMYCIN |    10    |  S2345678B  | 13-10-2021 | PETER |    6     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":426,"author":{"gitId":"alvintan01"},"content":"+----+--------------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-19"},{"lineNumber":427,"author":{"gitId":"alvintan01"},"content":"| 3  | SIMVASTATIN  |    10    |  S1234567A  | 11-10-2021 |  SAM  |    4     | ","lastModifiedDate":"2021-10-31"},{"lineNumber":428,"author":{"gitId":"alvintan01"},"content":"+----+--------------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-19"},{"lineNumber":429,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":430,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":431,"author":{"gitId":"alvintan01"},"content":"### Updating prescriptions: `updateprescription`","lastModifiedDate":"2021-10-26"},{"lineNumber":432,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":433,"author":{"gitId":"alvintan01"},"content":"Updates an existing prescription information.","lastModifiedDate":"2021-10-26"},{"lineNumber":434,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":435,"author":{"gitId":"alvintan01"},"content":"\u003e :warning: Warning","lastModifiedDate":"2021-10-26"},{"lineNumber":436,"author":{"gitId":"a-tph"},"content":"\u003e * You cannot update the Stock or the Prescription ID. ","lastModifiedDate":"2021-10-26"},{"lineNumber":437,"author":{"gitId":"a-tph"},"content":"\u003e * The allocation of Prescription ID is determined by MediVault.","lastModifiedDate":"2021-10-26"},{"lineNumber":438,"author":{"gitId":"a-tph"},"content":"\u003e * Your provided `n/NAME` parameter **must** exist in stocks.","lastModifiedDate":"2021-10-26"},{"lineNumber":439,"author":{"gitId":"a-tph"},"content":"\u003e * When you update a prescription record, the stock information may be affected as well","lastModifiedDate":"2021-10-26"},{"lineNumber":440,"author":{"gitId":"a-tph"},"content":"\u003e * MediVault does not combine prescription information even if the column information are the same.","lastModifiedDate":"2021-11-02"},{"lineNumber":441,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":442,"author":{"gitId":"a-tph"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-26"},{"lineNumber":443,"author":{"gitId":"a-tph"},"content":"\u003e * MediVault allocates a **new** Prescription ID when you update prescription records containing the `n/NAME` and ","lastModifiedDate":"2021-10-26"},{"lineNumber":444,"author":{"gitId":"a-tph"},"content":"`q/QUANTITY` parameter.","lastModifiedDate":"2021-10-28"},{"lineNumber":445,"author":{"gitId":"a-tph"},"content":"\u003e * This is because MediVault deletes the old prescription record and adds the updated prescription record as a **new** ","lastModifiedDate":"2021-10-26"},{"lineNumber":446,"author":{"gitId":"a-tph"},"content":"prescription record.","lastModifiedDate":"2021-10-28"},{"lineNumber":447,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":448,"author":{"gitId":"a-tph"},"content":"Format: `updateprescription i/ID [n/NAME q/QUANTITY c/CUSTOMER_ID d/DATE s/STAFF_NAME]`","lastModifiedDate":"2021-10-26"},{"lineNumber":449,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":450,"author":{"gitId":"a-tph"},"content":"Initial stock records:","lastModifiedDate":"2021-10-26"},{"lineNumber":451,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":452,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":453,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":454,"author":{"gitId":"a-tph"},"content":"| ID |  NAME   | PRICE  | QUANTITY | EXPIRY_DATE | DESCRIPTION | MAX_QUANTITY | ","lastModifiedDate":"2021-10-26"},{"lineNumber":455,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":456,"author":{"gitId":"a-tph"},"content":"| 1  | PANADOL | $20.00 |    20    | 13-09-2021  |  HEADACHES  |     1000     | ","lastModifiedDate":"2021-10-26"},{"lineNumber":457,"author":{"gitId":"a-tph"},"content":"+----+---------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-26"},{"lineNumber":458,"author":{"gitId":"a-tph"},"content":"| 2  | PANADOL | $20.00 |    10    | 14-09-2021  |  HEADACHES  |     1000     | ","lastModifiedDate":"2021-10-26"},{"lineNumber":459,"author":{"gitId":"a-tph"},"content":"+----+---------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-26"},{"lineNumber":460,"author":{"gitId":"a-tph"},"content":"| 3  | VICODIN | $10.00 |    20    | 30-09-2021  | SEVERE PAIN |     500      | ","lastModifiedDate":"2021-10-26"},{"lineNumber":461,"author":{"gitId":"a-tph"},"content":"+----+---------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-26"},{"lineNumber":462,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":463,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":464,"author":{"gitId":"a-tph"},"content":"Initial prescription records:","lastModifiedDate":"2021-10-26"},{"lineNumber":465,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":466,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":467,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":468,"author":{"gitId":"a-tph"},"content":"| ID |  NAME   | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | ","lastModifiedDate":"2021-10-26"},{"lineNumber":469,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":470,"author":{"gitId":"a-tph"},"content":"| 1  | PANADOL |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | ","lastModifiedDate":"2021-10-26"},{"lineNumber":471,"author":{"gitId":"a-tph"},"content":"+----+---------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-26"},{"lineNumber":472,"author":{"gitId":"a-tph"},"content":"| 2  | VICODIN |    10    |  S2345678B  | 10-10-2021 | PETER |    3     | ","lastModifiedDate":"2021-10-26"},{"lineNumber":473,"author":{"gitId":"a-tph"},"content":"+----+---------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-26"},{"lineNumber":474,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":475,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":476,"author":{"gitId":"a-tph"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-26"},{"lineNumber":477,"author":{"gitId":"a-tph"},"content":"\u003e * Examples stated below are **independent** from each other.","lastModifiedDate":"2021-10-26"},{"lineNumber":478,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":479,"author":{"gitId":"a-tph"},"content":"Example 1 (Update prescribed quantity): ","lastModifiedDate":"2021-11-02"},{"lineNumber":480,"author":{"gitId":"a-tph"},"content":"`updateprescription i/1 q/5`","lastModifiedDate":"2021-10-26"},{"lineNumber":481,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":482,"author":{"gitId":"a-tph"},"content":"Expected Output 1:","lastModifiedDate":"2021-10-28"},{"lineNumber":483,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":484,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":485,"author":{"gitId":"alvintan01"},"content":"Restored 5 PANADOL","lastModifiedDate":"2021-10-26"},{"lineNumber":486,"author":{"gitId":"alvintan01"},"content":"Updated prescription information!","lastModifiedDate":"2021-10-26"},{"lineNumber":487,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":488,"author":{"gitId":"alvintan01"},"content":"| ID |  NAME   | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | ","lastModifiedDate":"2021-10-26"},{"lineNumber":489,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":490,"author":{"gitId":"a-tph"},"content":"| 3  | PANADOL |    5     |  S1234567A  | 09-10-2021 | JANE  |    1     | ","lastModifiedDate":"2021-10-26"},{"lineNumber":491,"author":{"gitId":"a-tph"},"content":"+----+---------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-26"},{"lineNumber":492,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":493,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":494,"author":{"gitId":"a-tph"},"content":"Updated stock record for Example 1:","lastModifiedDate":"2021-10-26"},{"lineNumber":495,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":496,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":497,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":498,"author":{"gitId":"a-tph"},"content":"| ID |  NAME   | PRICE  | QUANTITY | EXPIRY_DATE | DESCRIPTION | MAX_QUANTITY | ","lastModifiedDate":"2021-10-26"},{"lineNumber":499,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":500,"author":{"gitId":"a-tph"},"content":"| 1  | PANADOL | $20.00 |    25    | 13-09-2021  |  HEADACHES  |     1000     | ","lastModifiedDate":"2021-10-26"},{"lineNumber":501,"author":{"gitId":"a-tph"},"content":"+----+---------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-26"},{"lineNumber":502,"author":{"gitId":"a-tph"},"content":"| 2  | PANADOL | $20.00 |    10    | 14-09-2021  |  HEADACHES  |     1000     | ","lastModifiedDate":"2021-10-26"},{"lineNumber":503,"author":{"gitId":"a-tph"},"content":"+----+---------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-26"},{"lineNumber":504,"author":{"gitId":"a-tph"},"content":"| 3  | VICODIN | $10.00 |    20    | 30-09-2021  | SEVERE PAIN |     500      | ","lastModifiedDate":"2021-10-26"},{"lineNumber":505,"author":{"gitId":"a-tph"},"content":"+----+---------+--------+----------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-26"},{"lineNumber":506,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":507,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":508,"author":{"gitId":"a-tph"},"content":"Example 2 (Update staff who prescribed the medication):","lastModifiedDate":"2021-11-02"},{"lineNumber":509,"author":{"gitId":"a-tph"},"content":"`updateprescription i/1 s/jack`","lastModifiedDate":"2021-10-28"},{"lineNumber":510,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":511,"author":{"gitId":"a-tph"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-28"},{"lineNumber":512,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":513,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":514,"author":{"gitId":"a-tph"},"content":"Updated prescription information!","lastModifiedDate":"2021-10-26"},{"lineNumber":515,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":516,"author":{"gitId":"a-tph"},"content":"| ID |  NAME   | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | ","lastModifiedDate":"2021-10-26"},{"lineNumber":517,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":518,"author":{"gitId":"a-tph"},"content":"| 1  | PANADOL |    10    |  S1234567A  | 09-10-2021 | JACK  |    1     | ","lastModifiedDate":"2021-10-26"},{"lineNumber":519,"author":{"gitId":"alvintan01"},"content":"+----+---------+----------+-------------+------------+-------+----------+","lastModifiedDate":"2021-10-26"},{"lineNumber":520,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":521,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":522,"author":{"gitId":"alvintan01"},"content":"### Deleting prescriptions: `deleteprescription`","lastModifiedDate":"2021-10-26"},{"lineNumber":523,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":524,"author":{"gitId":"RemusTeo"},"content":"If you made a mistake and want to delete a prescription record you may do so by using this command along with a specific ","lastModifiedDate":"2021-10-27"},{"lineNumber":525,"author":{"gitId":"RemusTeo"},"content":"Prescription ID.","lastModifiedDate":"2021-10-27"},{"lineNumber":526,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":527,"author":{"gitId":"deonchung"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-11-02"},{"lineNumber":528,"author":{"gitId":"deonchung"},"content":"\u003e * Users will not be able to delete a prescription if deleting the prescription will lead to stock quantity exceeding the maximum quantity.","lastModifiedDate":"2021-11-02"},{"lineNumber":529,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":530,"author":{"gitId":"alvintan01"},"content":"Format: `deleteprescription i/PRESCRIPTION_ID`","lastModifiedDate":"2021-10-26"},{"lineNumber":531,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":532,"author":{"gitId":"alvintan01"},"content":"Example: `deleteprescription i/3`","lastModifiedDate":"2021-10-26"},{"lineNumber":533,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":534,"author":{"gitId":"a-tph"},"content":"Expected Output:","lastModifiedDate":"2021-10-28"},{"lineNumber":535,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":536,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":537,"author":{"gitId":"alvintan01"},"content":"Prescription deleted for Prescription ID 3","lastModifiedDate":"2021-10-26"},{"lineNumber":538,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":539,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":540,"author":{"gitId":"alvintan01"},"content":"## Managing Orders","lastModifiedDate":"2021-10-25"},{"lineNumber":541,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":542,"author":{"gitId":"alvintan01"},"content":"### Adding an order: `addorder`","lastModifiedDate":"2021-10-19"},{"lineNumber":543,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":544,"author":{"gitId":"jiangweichen835"},"content":"Adds an order for a stock.","lastModifiedDate":"2021-10-26"},{"lineNumber":545,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":546,"author":{"gitId":"jiangweichen835"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-26"},{"lineNumber":547,"author":{"gitId":"jiangweichen835"},"content":"\u003e * The date parameter is optional, MediVault will set it as the date you added in the order if the parameter is omitted.","lastModifiedDate":"2021-10-26"},{"lineNumber":548,"author":{"gitId":"jiangweichen835"},"content":"\u003e * If the order quantity exceeds the maximum stock quantity allowed, you are unable to add the order.","lastModifiedDate":"2021-10-26"},{"lineNumber":549,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":550,"author":{"gitId":"jiangweichen835"},"content":"Format: `addorder n/NAME q/QUANTITY {d/DATE}`","lastModifiedDate":"2021-10-21"},{"lineNumber":551,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":552,"author":{"gitId":"jiangweichen835"},"content":"Example 1 (add order with date parameter): `addorder n/panadol q/150 d/21-10-2021`","lastModifiedDate":"2021-11-02"},{"lineNumber":553,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":554,"author":{"gitId":"a-tph"},"content":"Expected Output 1:","lastModifiedDate":"2021-10-28"},{"lineNumber":555,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":556,"author":{"gitId":"jiangweichen835"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":557,"author":{"gitId":"alvintan01"},"content":"Order added: panadol","lastModifiedDate":"2021-10-26"},{"lineNumber":558,"author":{"gitId":"jiangweichen835"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-21"},{"lineNumber":559,"author":{"gitId":"jiangweichen835"},"content":"| ID |  NAME   | QUANTITY |    DATE    | STATUS  |","lastModifiedDate":"2021-10-21"},{"lineNumber":560,"author":{"gitId":"jiangweichen835"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-21"},{"lineNumber":561,"author":{"gitId":"jiangweichen835"},"content":"| 1  | PANADOL |   150    | 21-10-2021 | PENDING |","lastModifiedDate":"2021-10-31"},{"lineNumber":562,"author":{"gitId":"jiangweichen835"},"content":"+----+---------+----------+------------+---------+","lastModifiedDate":"2021-10-21"},{"lineNumber":563,"author":{"gitId":"jiangweichen835"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":564,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":565,"author":{"gitId":"jiangweichen835"},"content":"Example 2 (add order without date parameter): `addorder n/panadol q/1000`","lastModifiedDate":"2021-11-02"},{"lineNumber":566,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":567,"author":{"gitId":"a-tph"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-28"},{"lineNumber":568,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":569,"author":{"gitId":"jiangweichen835"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":570,"author":{"gitId":"jiangweichen835"},"content":"Order for panadol exists. ","lastModifiedDate":"2021-10-31"},{"lineNumber":571,"author":{"gitId":"jiangweichen835"},"content":"Unable to add order as total order quantity exceeds maximum stock quantity.","lastModifiedDate":"2021-10-31"},{"lineNumber":572,"author":{"gitId":"jiangweichen835"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":573,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":574,"author":{"gitId":"RemusTeo"},"content":"### Listing orders: `listorder`","lastModifiedDate":"2021-10-25"},{"lineNumber":575,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":576,"author":{"gitId":"RemusTeo"},"content":"Lists all order records in the application.","lastModifiedDate":"2021-10-20"},{"lineNumber":577,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":578,"author":{"gitId":"RemusTeo"},"content":"* All parameters for `listorder` command are optional, you can choose to list the records by any of the parameters.","lastModifiedDate":"2021-10-20"},{"lineNumber":579,"author":{"gitId":"alvintan01"},"content":"* You are able to listorder by id, name, quantity, date, status and also sort and reverse sort by columns.","lastModifiedDate":"2021-10-28"},{"lineNumber":580,"author":{"gitId":"RemusTeo"},"content":"* Example 1 demonstrates the list of all order records without parameters.","lastModifiedDate":"2021-10-20"},{"lineNumber":581,"author":{"gitId":"RemusTeo"},"content":"* Example 2 demonstrates the list of all orders that are PENDING.","lastModifiedDate":"2021-10-20"},{"lineNumber":582,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":583,"author":{"gitId":"alvintan01"},"content":"Format: `listorder {i/ID n/NAME q/QUANTITY d/DATE s/STATUS sort/COLUMN_NAME rsort/COLUMN_NAME}`","lastModifiedDate":"2021-11-01"},{"lineNumber":584,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":585,"author":{"gitId":"RemusTeo"},"content":"Example 1: `listorder`","lastModifiedDate":"2021-10-20"},{"lineNumber":586,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":587,"author":{"gitId":"a-tph"},"content":"Expected Output 1:","lastModifiedDate":"2021-10-28"},{"lineNumber":588,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":589,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":590,"author":{"gitId":"RemusTeo"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-20"},{"lineNumber":591,"author":{"gitId":"RemusTeo"},"content":"| ID |     NAME     | QUANTITY |    DATE    |  STATUS   | ","lastModifiedDate":"2021-10-20"},{"lineNumber":592,"author":{"gitId":"RemusTeo"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-20"},{"lineNumber":593,"author":{"gitId":"RemusTeo"},"content":"| 1  |   PANADOL    |   100    | 09-10-2021 |  PENDING  | ","lastModifiedDate":"2021-10-20"},{"lineNumber":594,"author":{"gitId":"RemusTeo"},"content":"+----+--------------+----------+------------+-----------+","lastModifiedDate":"2021-10-20"},{"lineNumber":595,"author":{"gitId":"RemusTeo"},"content":"| 2  |   VICODIN    |    30    | 09-10-2021 |  PENDING  | ","lastModifiedDate":"2021-10-20"},{"lineNumber":596,"author":{"gitId":"RemusTeo"},"content":"+----+--------------+----------+------------+-----------+","lastModifiedDate":"2021-10-20"},{"lineNumber":597,"author":{"gitId":"RemusTeo"},"content":"| 3  |   VICODIN    |    50    | 10-10-2021 | DELIVERED | ","lastModifiedDate":"2021-10-20"},{"lineNumber":598,"author":{"gitId":"RemusTeo"},"content":"+----+--------------+----------+------------+-----------+","lastModifiedDate":"2021-10-20"},{"lineNumber":599,"author":{"gitId":"RemusTeo"},"content":"| 4  | SIMVASTATIN  |    20    | 11-10-2021 |  PENDING  | ","lastModifiedDate":"2021-10-20"},{"lineNumber":600,"author":{"gitId":"RemusTeo"},"content":"+----+--------------+----------+------------+-----------+","lastModifiedDate":"2021-10-20"},{"lineNumber":601,"author":{"gitId":"RemusTeo"},"content":"| 5  |  LISINOPRIL  |   200    | 12-10-2021 |  PENDING  | ","lastModifiedDate":"2021-10-20"},{"lineNumber":602,"author":{"gitId":"RemusTeo"},"content":"+----+--------------+----------+------------+-----------+","lastModifiedDate":"2021-10-20"},{"lineNumber":603,"author":{"gitId":"RemusTeo"},"content":"| 6  | AZITHROMYCIN |   100    | 13-10-2021 |  PENDING  | ","lastModifiedDate":"2021-10-20"},{"lineNumber":604,"author":{"gitId":"RemusTeo"},"content":"+----+--------------+----------+------------+-----------+","lastModifiedDate":"2021-10-20"},{"lineNumber":605,"author":{"gitId":"RemusTeo"},"content":"| 7  |   PANADOL    |    50    | 13-10-2021 |  PENDING  | ","lastModifiedDate":"2021-10-20"},{"lineNumber":606,"author":{"gitId":"RemusTeo"},"content":"+----+--------------+----------+------------+-----------+","lastModifiedDate":"2021-10-20"},{"lineNumber":607,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":608,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":609,"author":{"gitId":"RemusTeo"},"content":"Example 2: `listorder s/pending`","lastModifiedDate":"2021-10-20"},{"lineNumber":610,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":611,"author":{"gitId":"RemusTeo"},"content":"Expended output:","lastModifiedDate":"2021-10-20"},{"lineNumber":612,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":613,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":614,"author":{"gitId":"RemusTeo"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-20"},{"lineNumber":615,"author":{"gitId":"RemusTeo"},"content":"| ID |     NAME     | QUANTITY |    DATE    | STATUS  | ","lastModifiedDate":"2021-10-20"},{"lineNumber":616,"author":{"gitId":"RemusTeo"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-20"},{"lineNumber":617,"author":{"gitId":"RemusTeo"},"content":"| 1  |   PANADOL    |   100    | 09-10-2021 | PENDING | ","lastModifiedDate":"2021-10-20"},{"lineNumber":618,"author":{"gitId":"RemusTeo"},"content":"+----+--------------+----------+------------+---------+","lastModifiedDate":"2021-10-20"},{"lineNumber":619,"author":{"gitId":"RemusTeo"},"content":"| 2  |   VICODIN    |    30    | 09-10-2021 | PENDING | ","lastModifiedDate":"2021-10-20"},{"lineNumber":620,"author":{"gitId":"RemusTeo"},"content":"+----+--------------+----------+------------+---------+","lastModifiedDate":"2021-10-20"},{"lineNumber":621,"author":{"gitId":"RemusTeo"},"content":"| 4  | SIMVASTATIN  |    20    | 11-10-2021 | PENDING | ","lastModifiedDate":"2021-10-20"},{"lineNumber":622,"author":{"gitId":"RemusTeo"},"content":"+----+--------------+----------+------------+---------+","lastModifiedDate":"2021-10-20"},{"lineNumber":623,"author":{"gitId":"RemusTeo"},"content":"| 5  |  LISINOPRIL  |   200    | 12-10-2021 | PENDING | ","lastModifiedDate":"2021-10-20"},{"lineNumber":624,"author":{"gitId":"RemusTeo"},"content":"+----+--------------+----------+------------+---------+","lastModifiedDate":"2021-10-20"},{"lineNumber":625,"author":{"gitId":"RemusTeo"},"content":"| 6  | AZITHROMYCIN |   100    | 13-10-2021 | PENDING | ","lastModifiedDate":"2021-10-20"},{"lineNumber":626,"author":{"gitId":"RemusTeo"},"content":"+----+--------------+----------+------------+---------+","lastModifiedDate":"2021-10-20"},{"lineNumber":627,"author":{"gitId":"RemusTeo"},"content":"| 7  |   PANADOL    |    50    | 13-10-2021 | PENDING | ","lastModifiedDate":"2021-10-20"},{"lineNumber":628,"author":{"gitId":"RemusTeo"},"content":"+----+--------------+----------+------------+---------+","lastModifiedDate":"2021-10-20"},{"lineNumber":629,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":630,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":631,"author":{"gitId":"alvintan01"},"content":"### Updating orders: `updateorder`","lastModifiedDate":"2021-10-26"},{"lineNumber":632,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":633,"author":{"gitId":"alvintan01"},"content":"Updates an existing order information.","lastModifiedDate":"2021-10-26"},{"lineNumber":634,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":635,"author":{"gitId":"alvintan01"},"content":"\u003e :warning: Warning","lastModifiedDate":"2021-10-26"},{"lineNumber":636,"author":{"gitId":"alvintan01"},"content":"\u003e * You cannot update the Order ID or the status of the order.","lastModifiedDate":"2021-10-26"},{"lineNumber":637,"author":{"gitId":"a-tph"},"content":"\u003e * The allocation of Order ID is determined by MediVault.","lastModifiedDate":"2021-10-26"},{"lineNumber":638,"author":{"gitId":"alvintan01"},"content":"\u003e * The status of the order will only be changed when you run the `receiveorder` command.","lastModifiedDate":"2021-10-26"},{"lineNumber":639,"author":{"gitId":"a-tph"},"content":"\u003e * MediVault does not combine orders even if the column information are the same.","lastModifiedDate":"2021-11-02"},{"lineNumber":640,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":641,"author":{"gitId":"a-tph"},"content":"Format: `updateorder i/ID [n/NAME q/QUANTITY d/DATE]`","lastModifiedDate":"2021-10-26"},{"lineNumber":642,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":643,"author":{"gitId":"a-tph"},"content":"Initial order records:","lastModifiedDate":"2021-10-26"},{"lineNumber":644,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":645,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":646,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":647,"author":{"gitId":"a-tph"},"content":"| ID |  NAME   | QUANTITY |    DATE    |  STATUS   | ","lastModifiedDate":"2021-10-26"},{"lineNumber":648,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":649,"author":{"gitId":"a-tph"},"content":"| 1  | PANADOL |   100    | 09-10-2021 |  PENDING  | ","lastModifiedDate":"2021-10-26"},{"lineNumber":650,"author":{"gitId":"a-tph"},"content":"+----+---------+----------+------------+-----------+","lastModifiedDate":"2021-10-26"},{"lineNumber":651,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":652,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":653,"author":{"gitId":"a-tph"},"content":"Example: `updateorder i/1 q/50 d/10-10-2021`","lastModifiedDate":"2021-10-26"},{"lineNumber":654,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":655,"author":{"gitId":"a-tph"},"content":"Expected Output:","lastModifiedDate":"2021-10-28"},{"lineNumber":656,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":657,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":658,"author":{"gitId":"alvintan01"},"content":"Updated! Number of rows affected: 1","lastModifiedDate":"2021-10-26"},{"lineNumber":659,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":660,"author":{"gitId":"alvintan01"},"content":"| ID |  NAME   | QUANTITY |    DATE    | STATUS  | ","lastModifiedDate":"2021-10-26"},{"lineNumber":661,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-26"},{"lineNumber":662,"author":{"gitId":"a-tph"},"content":"| 1  | PANADOL |    50    | 10-10-2021 | PENDING | ","lastModifiedDate":"2021-10-26"},{"lineNumber":663,"author":{"gitId":"alvintan01"},"content":"+----+---------+----------+------------+---------+","lastModifiedDate":"2021-10-26"},{"lineNumber":664,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":665,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":666,"author":{"gitId":"alvintan01"},"content":"### Deleting an order: `deleteorder`","lastModifiedDate":"2021-10-26"},{"lineNumber":667,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":668,"author":{"gitId":"RemusTeo"},"content":"If you made a mistake and want to delete an order, you may do so by using this command along with a specific Order ID.","lastModifiedDate":"2021-10-27"},{"lineNumber":669,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":670,"author":{"gitId":"alvintan01"},"content":"Format: `deleteorder i/ORDER_ID`","lastModifiedDate":"2021-10-26"},{"lineNumber":671,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":672,"author":{"gitId":"alvintan01"},"content":"Example: `deleteorder i/1`","lastModifiedDate":"2021-10-26"},{"lineNumber":673,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":674,"author":{"gitId":"a-tph"},"content":"Expected Output:","lastModifiedDate":"2021-10-28"},{"lineNumber":675,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":676,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":677,"author":{"gitId":"alvintan01"},"content":"Order deleted for Order ID 1","lastModifiedDate":"2021-10-26"},{"lineNumber":678,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":679,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":680,"author":{"gitId":"a-tph"},"content":"### Receiving orders: `receiveorder`","lastModifiedDate":"2021-10-25"},{"lineNumber":681,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":682,"author":{"gitId":"a-tph"},"content":"Adds the received medication into the current stocks.","lastModifiedDate":"2021-10-25"},{"lineNumber":683,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":684,"author":{"gitId":"a-tph"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-25"},{"lineNumber":685,"author":{"gitId":"a-tph"},"content":"\u003e * Your input order Id must exist","lastModifiedDate":"2021-10-25"},{"lineNumber":686,"author":{"gitId":"a-tph"},"content":"\u003e * When you run `receiveorder` with the required parameters, the medication you ordered will be automatically added into your current stocks.","lastModifiedDate":"2021-10-25"},{"lineNumber":687,"author":{"gitId":"alvintan01"},"content":"\u003e * The `e/EXPIRY_DATE` parameter is required so that MediVault knows the expiry date of the stock that just arrived.","lastModifiedDate":"2021-10-28"},{"lineNumber":688,"author":{"gitId":"alvintan01"},"content":"\u003e * The `p/PRICE` parameter is also required so that stocks with different remaining shelf life can have different prices.","lastModifiedDate":"2021-10-28"},{"lineNumber":689,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":690,"author":{"gitId":"alvintan01"},"content":"\u003e :warning: Warning","lastModifiedDate":"2021-10-25"},{"lineNumber":691,"author":{"gitId":"alvintan01"},"content":"\u003e * If medication exists, `d/DESCRIPTION` and `m/MAX_QUANTITY` will be optional parameters. If you include `d/DESCRIPTION` or `m/MAX_QUANTITY` parameter, it will be ignored and MediVault will add the medication with the existing description and existing maximum quantity in stocks.","lastModifiedDate":"2021-11-03"},{"lineNumber":692,"author":{"gitId":"alvintan01"},"content":"\u003e * If medication exists, the medication to be added has the same `e/EXPIRY_DATE`, the value in the `p/PRICE` parameter will be ignored and the existing price will be used.","lastModifiedDate":"2021-11-01"},{"lineNumber":693,"author":{"gitId":"alvintan01"},"content":"\u003e * You may not be able to `receiveorder` if the order quantity + current stock quantity \u003e max quantity.","lastModifiedDate":"2021-11-03"},{"lineNumber":694,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":695,"author":{"gitId":"alvintan01"},"content":"Format: `receiveorder i/ID p/PRICE e/EXPIRY_DATE (d/DESCRIPTION m/MAX_QUANTITY)`","lastModifiedDate":"2021-11-02"},{"lineNumber":696,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":697,"author":{"gitId":"alvintan01"},"content":"Example 1 (If medication does not exist) : `receiveorder i/1 p/10 e/20-10-2021 d/severe pain m/500`","lastModifiedDate":"2021-10-28"},{"lineNumber":698,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":699,"author":{"gitId":"a-tph"},"content":"Expected Output 1:","lastModifiedDate":"2021-10-28"},{"lineNumber":700,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":701,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":702,"author":{"gitId":"alvintan01"},"content":"Medication added: VICODIN","lastModifiedDate":"2021-10-28"},{"lineNumber":703,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":704,"author":{"gitId":"a-tph"},"content":"| ID |  NAME   | PRICE  |  QUANTITY   | EXPIRY_DATE | DESCRIPTION | MAX_QUANTITY | ","lastModifiedDate":"2021-10-25"},{"lineNumber":705,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":706,"author":{"gitId":"alvintan01"},"content":"| 3  | VICODIN | $10.00 |     100     | 20-10-2021  | SEVERE PAIN |     500      |  ","lastModifiedDate":"2021-10-28"},{"lineNumber":707,"author":{"gitId":"alvintan01"},"content":"+----+---------+--------+-------------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":708,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":709,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":710,"author":{"gitId":"alvintan01"},"content":"Example 2 (If medication exists) : `receiveorder i/2 p/20 e/25-10-2021`","lastModifiedDate":"2021-10-25"},{"lineNumber":711,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":712,"author":{"gitId":"a-tph"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-28"},{"lineNumber":713,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":714,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":715,"author":{"gitId":"alvintan01"},"content":"Medicine exists. Using existing description and maximum quantity.","lastModifiedDate":"2021-10-25"},{"lineNumber":716,"author":{"gitId":"alvintan01"},"content":"Medication added: PANADOL","lastModifiedDate":"2021-10-25"},{"lineNumber":717,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":718,"author":{"gitId":"alvintan01"},"content":"| ID |  NAME   | PRICE  |   QUANTITY   | EXPIRY_DATE | DESCRIPTION | MAX_QUANTITY | ","lastModifiedDate":"2021-10-25"},{"lineNumber":719,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":720,"author":{"gitId":"alvintan01"},"content":"| 1  | PANADOL | $20.00 |     100      | 25-10-2021  |  HEADACHE   |     1000     | ","lastModifiedDate":"2021-10-28"},{"lineNumber":721,"author":{"gitId":"alvintan01"},"content":"+----+---------+--------+--------------+-------------+-------------+--------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":722,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":723,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":724,"author":{"gitId":"RemusTeo"},"content":"## Managing Data","lastModifiedDate":"2021-10-25"},{"lineNumber":725,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":726,"author":{"gitId":"alvintan01"},"content":"This section of the user guide explains the features and usage of commands related to data management. This includes the","lastModifiedDate":"2021-10-25"},{"lineNumber":727,"author":{"gitId":"alvintan01"},"content":"archive commands, purge command as well as data storage files related information.","lastModifiedDate":"2021-10-25"},{"lineNumber":728,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":729,"author":{"gitId":"RemusTeo"},"content":"### Archive orders: `archiveorder`","lastModifiedDate":"2021-10-25"},{"lineNumber":730,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":731,"author":{"gitId":"RemusTeo"},"content":"Archive order records into data/order_archive.txt file.","lastModifiedDate":"2021-10-25"},{"lineNumber":732,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":733,"author":{"gitId":"RemusTeo"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-25"},{"lineNumber":734,"author":{"gitId":"RemusTeo"},"content":"\u003e * MediVault will remove all order records that have status of DELIVERED from the current orders that matches the user specified date and before.","lastModifiedDate":"2021-10-25"},{"lineNumber":735,"author":{"gitId":"RemusTeo"},"content":"\u003e * MediVault will then archive it into data/order_archive.txt file.","lastModifiedDate":"2021-10-25"},{"lineNumber":736,"author":{"gitId":"RemusTeo"},"content":"\u003e * The date parameter is compulsory.","lastModifiedDate":"2021-10-25"},{"lineNumber":737,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":738,"author":{"gitId":"RemusTeo"},"content":"\u003e :warning: Warning","lastModifiedDate":"2021-10-25"},{"lineNumber":739,"author":{"gitId":"RemusTeo"},"content":"\u003e * This is a one way command, there is no reversal except for you to manually add the archived records back into MediVault.","lastModifiedDate":"2021-10-25"},{"lineNumber":740,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":741,"author":{"gitId":"RemusTeo"},"content":"Format: `archiveorder d/DATE`","lastModifiedDate":"2021-10-25"},{"lineNumber":742,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":743,"author":{"gitId":"RemusTeo"},"content":"Example: `archiveorder d/10-10-2021`","lastModifiedDate":"2021-10-25"},{"lineNumber":744,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":745,"author":{"gitId":"RemusTeo"},"content":"Expected Output:","lastModifiedDate":"2021-10-25"},{"lineNumber":746,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":747,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":748,"author":{"gitId":"RemusTeo"},"content":"Archived orders from 10-10-2021","lastModifiedDate":"2021-10-25"},{"lineNumber":749,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":750,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":751,"author":{"gitId":"RemusTeo"},"content":"Expected Output (in data/order_archive.txt):","lastModifiedDate":"2021-10-25"},{"lineNumber":752,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":753,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":754,"author":{"gitId":"RemusTeo"},"content":"[ORDER ID: 2] 10 PANADOL WAS ORDERED ON 09-10-2021. STATUS: DELIVERED","lastModifiedDate":"2021-10-25"},{"lineNumber":755,"author":{"gitId":"RemusTeo"},"content":"[ORDER ID: 3] 50 VICODIN WAS ORDERED ON 10-10-2021. STATUS: DELIVERED","lastModifiedDate":"2021-10-25"},{"lineNumber":756,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":757,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":758,"author":{"gitId":"RemusTeo"},"content":"### Archive prescriptions: `archiveprescription`","lastModifiedDate":"2021-10-25"},{"lineNumber":759,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":760,"author":{"gitId":"RemusTeo"},"content":"Archive prescription records into data/prescription_archive.txt file.","lastModifiedDate":"2021-10-25"},{"lineNumber":761,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":762,"author":{"gitId":"RemusTeo"},"content":"\u003e :information_source: Note:","lastModifiedDate":"2021-10-25"},{"lineNumber":763,"author":{"gitId":"RemusTeo"},"content":"\u003e * MediVault will remove all prescription records from the current prescriptions that matches the user specified date and before.","lastModifiedDate":"2021-10-25"},{"lineNumber":764,"author":{"gitId":"RemusTeo"},"content":"\u003e * MediVault will then archive it into data/prescription_archive.txt file.","lastModifiedDate":"2021-10-25"},{"lineNumber":765,"author":{"gitId":"RemusTeo"},"content":"\u003e * The date parameter for this command is compulsory.","lastModifiedDate":"2021-10-25"},{"lineNumber":766,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":767,"author":{"gitId":"RemusTeo"},"content":"\u003e :warning: Warning","lastModifiedDate":"2021-10-25"},{"lineNumber":768,"author":{"gitId":"RemusTeo"},"content":"\u003e * This is a one way command, there is no reversal except for you to manually add the archived records back into MediVault.","lastModifiedDate":"2021-10-25"},{"lineNumber":769,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":770,"author":{"gitId":"RemusTeo"},"content":"Format: `archiveprescription d/DATE`","lastModifiedDate":"2021-10-25"},{"lineNumber":771,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":772,"author":{"gitId":"RemusTeo"},"content":"Example: `archiveprescription d/10-10-2021`","lastModifiedDate":"2021-10-25"},{"lineNumber":773,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":774,"author":{"gitId":"RemusTeo"},"content":"Expected Output:","lastModifiedDate":"2021-10-25"},{"lineNumber":775,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":776,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":777,"author":{"gitId":"RemusTeo"},"content":"Archived prescriptions from 10-10-2021","lastModifiedDate":"2021-10-25"},{"lineNumber":778,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":779,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":780,"author":{"gitId":"RemusTeo"},"content":"Expected Output (in data/prescription_archive.txt):","lastModifiedDate":"2021-10-25"},{"lineNumber":781,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":782,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":783,"author":{"gitId":"RemusTeo"},"content":"[PRESCRIPTION ID: 1] 1 AXID [STOCK ID: 8] WAS PRESCRIBED BY CJ TO S1234567A ON 09-10-2021","lastModifiedDate":"2021-10-28"},{"lineNumber":784,"author":{"gitId":"RemusTeo"},"content":"[PRESCRIPTION ID: 2] 1 AZOR [STOCK ID: 9] WAS PRESCRIBED BY AJ TO S2345678B ON 10-10-2021","lastModifiedDate":"2021-10-28"},{"lineNumber":785,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":786,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":787,"author":{"gitId":"a-tph"},"content":"### Purging existing data : `purge`","lastModifiedDate":"2021-10-13"},{"lineNumber":788,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":789,"author":{"gitId":"alvintan01"},"content":"Deletes all data in MediVault.","lastModifiedDate":"2021-10-12"},{"lineNumber":790,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":791,"author":{"gitId":"alvintan01"},"content":"Format: `purge`","lastModifiedDate":"2021-10-12"},{"lineNumber":792,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":793,"author":{"gitId":"alvintan01"},"content":"Example: `purge`","lastModifiedDate":"2021-10-12"},{"lineNumber":794,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":795,"author":{"gitId":"a-tph"},"content":"Expected Output:","lastModifiedDate":"2021-10-28"},{"lineNumber":796,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":797,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":798,"author":{"gitId":"alvintan01"},"content":"Are you sure you want to delete all data? (Y/N)","lastModifiedDate":"2021-10-12"},{"lineNumber":799,"author":{"gitId":"alvintan01"},"content":"Y","lastModifiedDate":"2021-10-12"},{"lineNumber":800,"author":{"gitId":"alvintan01"},"content":"All data has been cleared!","lastModifiedDate":"2021-10-12"},{"lineNumber":801,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":802,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":803,"author":{"gitId":"alvintan01"},"content":"## Miscellaneous","lastModifiedDate":"2021-10-25"},{"lineNumber":804,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":805,"author":{"gitId":"a-tph"},"content":"### Showing help page : `help`","lastModifiedDate":"2021-10-12"},{"lineNumber":806,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":807,"author":{"gitId":"alvintan01"},"content":"Displays the command syntax of all accepted commands by MediVault.","lastModifiedDate":"2021-10-25"},{"lineNumber":808,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":809,"author":{"gitId":"alvintan01"},"content":"Format:`help`","lastModifiedDate":"2021-10-12"},{"lineNumber":810,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":811,"author":{"gitId":"alvintan01"},"content":"Example: `help`","lastModifiedDate":"2021-10-12"},{"lineNumber":812,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":813,"author":{"gitId":"a-tph"},"content":"Expected Output:","lastModifiedDate":"2021-10-28"},{"lineNumber":814,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":815,"author":{"gitId":"alvintan01"},"content":"``` ","lastModifiedDate":"2021-10-12"},{"lineNumber":816,"author":{"gitId":"alvintan01"},"content":"Welcome to the help page.","lastModifiedDate":"2021-10-12"},{"lineNumber":817,"author":{"gitId":"alvintan01"},"content":"Your current mode is indicated in the square brackets at the bottom left of the console.","lastModifiedDate":"2021-10-19"},{"lineNumber":818,"author":{"gitId":"alvintan01"},"content":"It allows you to type add, list, update, delete without typing in the full command.","lastModifiedDate":"2021-10-19"},{"lineNumber":819,"author":{"gitId":"alvintan01"},"content":"Type stock, prescription or order to change to respective modes.","lastModifiedDate":"2021-10-25"},{"lineNumber":820,"author":{"gitId":"alvintan01"},"content":"Note that parameters in {curly braces} are optional.","lastModifiedDate":"2021-10-12"},{"lineNumber":821,"author":{"gitId":"alvintan01"},"content":"Parameters in [square braces] indicate that at least one of the parameter(s) must be","lastModifiedDate":"2021-11-03"},{"lineNumber":822,"author":{"gitId":"alvintan01"},"content":"provided.","lastModifiedDate":"2021-11-03"},{"lineNumber":823,"author":{"gitId":"alvintan01"},"content":"Parameters enclosed in (round brackets) are conditional optional parameters. For example, ","lastModifiedDate":"2021-11-02"},{"lineNumber":824,"author":{"gitId":"alvintan01"},"content":"the parameters d/DESCRIPTION and m/MAX_QUANTITY in addstock and receiveorder will be","lastModifiedDate":"2021-11-03"},{"lineNumber":825,"author":{"gitId":"alvintan01"},"content":"optional only if the stock exists.","lastModifiedDate":"2021-11-03"},{"lineNumber":826,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":827,"author":{"gitId":"alvintan01"},"content":"|       COMMAND       |                   COMMAND SYNTAX                   | ","lastModifiedDate":"2021-10-12"},{"lineNumber":828,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-28"},{"lineNumber":829,"author":{"gitId":"alvintan01"},"content":"|      addstock       | addstock n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE   | ","lastModifiedDate":"2021-10-28"},{"lineNumber":830,"author":{"gitId":"alvintan01"},"content":"|                     | (d/DESCRIPTION m/MAX_QUANTITY)                     | ","lastModifiedDate":"2021-11-02"},{"lineNumber":831,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":832,"author":{"gitId":"alvintan01"},"content":"|     deletestock     | deletestock [i/ID expiring/EXPIRY_DATE]            | ","lastModifiedDate":"2021-10-25"},{"lineNumber":833,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":834,"author":{"gitId":"alvintan01"},"content":"|     updatestock     | updatestock i/ID [n/NAME p/PRICE q/QUANTITY        | ","lastModifiedDate":"2021-10-28"},{"lineNumber":835,"author":{"gitId":"alvintan01"},"content":"|                     | e/EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY]        | ","lastModifiedDate":"2021-10-28"},{"lineNumber":836,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":837,"author":{"gitId":"alvintan01"},"content":"|      liststock      | liststock {i/ID p/PRICE q/QUANTITY                 | ","lastModifiedDate":"2021-10-28"},{"lineNumber":838,"author":{"gitId":"alvintan01"},"content":"|                     | low/LESS_THAN_OR_EQUAL_QUANTITY e/EXPIRY_DATE      | ","lastModifiedDate":"2021-10-28"},{"lineNumber":839,"author":{"gitId":"alvintan01"},"content":"|                     | expiring/LESS_THAN_OR_EQUAL_EXPIRY_DATE            | ","lastModifiedDate":"2021-10-28"},{"lineNumber":840,"author":{"gitId":"alvintan01"},"content":"|                     | d/DESCRIPTION m/MAX_QUANTITY sort/COLUMN_NAME      | ","lastModifiedDate":"2021-10-28"},{"lineNumber":841,"author":{"gitId":"alvintan01"},"content":"|                     | rsort/COLUMN_NAME}                                 | ","lastModifiedDate":"2021-11-01"},{"lineNumber":842,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":843,"author":{"gitId":"alvintan01"},"content":"|   addprescription   | addprescription n/NAME q/QUANTITY c/CUSTOMER_ID    | ","lastModifiedDate":"2021-10-28"},{"lineNumber":844,"author":{"gitId":"alvintan01"},"content":"|                     | s/STAFF_NAME                                       | ","lastModifiedDate":"2021-10-28"},{"lineNumber":845,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":846,"author":{"gitId":"alvintan01"},"content":"| deleteprescription  | deleteprescription i/ID                            | ","lastModifiedDate":"2021-10-25"},{"lineNumber":847,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":848,"author":{"gitId":"alvintan01"},"content":"| updateprescription  | updateprescription i/ID [n/NAME q/QUANTITY         | ","lastModifiedDate":"2021-10-28"},{"lineNumber":849,"author":{"gitId":"alvintan01"},"content":"|                     | c/CUSTOMER_ID d/DATE s/STAFF_NAME]                 | ","lastModifiedDate":"2021-10-28"},{"lineNumber":850,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":851,"author":{"gitId":"alvintan01"},"content":"|  listprescription   | listprescription {i/ID q/QUANTITY c/CUSTOMER_ID    | ","lastModifiedDate":"2021-10-28"},{"lineNumber":852,"author":{"gitId":"alvintan01"},"content":"|                     | d/DATE s/STAFF_NAME sid/STOCK_ID                   | ","lastModifiedDate":"2021-10-28"},{"lineNumber":853,"author":{"gitId":"alvintan01"},"content":"|                     | sort/COLUMN_NAME rsort/COLUMN_NAME}                | ","lastModifiedDate":"2021-11-01"},{"lineNumber":854,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":855,"author":{"gitId":"alvintan01"},"content":"| archiveprescription | archiveprescription d/DATE                         | ","lastModifiedDate":"2021-10-25"},{"lineNumber":856,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":857,"author":{"gitId":"alvintan01"},"content":"|      addorder       | addorder n/NAME q/QUANTITY {d/DATE}                | ","lastModifiedDate":"2021-10-19"},{"lineNumber":858,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":859,"author":{"gitId":"alvintan01"},"content":"|     deleteorder     | deleteorder i/ID                                   | ","lastModifiedDate":"2021-10-19"},{"lineNumber":860,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":861,"author":{"gitId":"alvintan01"},"content":"|     updateorder     | updateorder i/ID [n/NAME q/QUANTITY d/DATE]        | ","lastModifiedDate":"2021-10-19"},{"lineNumber":862,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":863,"author":{"gitId":"alvintan01"},"content":"|      listorder      | listorder {i/ID n/NAME q/QUANTITY d/DATE           | ","lastModifiedDate":"2021-10-28"},{"lineNumber":864,"author":{"gitId":"alvintan01"},"content":"|                     | s/STATUS sort/COLUMN_NAME rsort/COLUMN_NAME}       | ","lastModifiedDate":"2021-11-01"},{"lineNumber":865,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":866,"author":{"gitId":"alvintan01"},"content":"|    archiveorder     | archiveorder d/DATE                                | ","lastModifiedDate":"2021-10-25"},{"lineNumber":867,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":868,"author":{"gitId":"alvintan01"},"content":"|    receiveorder     | receiveorder i/ID p/PRICE e/EXPIRY_DATE            | ","lastModifiedDate":"2021-10-28"},{"lineNumber":869,"author":{"gitId":"alvintan01"},"content":"|                     | (d/DESCRIPTION m/MAX_QUANTITY)                     | ","lastModifiedDate":"2021-11-02"},{"lineNumber":870,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":871,"author":{"gitId":"alvintan01"},"content":"|        purge        | purge                                              | ","lastModifiedDate":"2021-10-12"},{"lineNumber":872,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":873,"author":{"gitId":"alvintan01"},"content":"|        help         | help                                               | ","lastModifiedDate":"2021-10-19"},{"lineNumber":874,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":875,"author":{"gitId":"alvintan01"},"content":"|        exit         | exit                                               | ","lastModifiedDate":"2021-10-19"},{"lineNumber":876,"author":{"gitId":"alvintan01"},"content":"+---------------------+----------------------------------------------------+","lastModifiedDate":"2021-10-28"},{"lineNumber":877,"author":{"gitId":"alvintan01"},"content":"For more information, refer to User Guide: https://ay2122s1-cs2113t-t10-1.github.io/tp/","lastModifiedDate":"2021-10-12"},{"lineNumber":878,"author":{"gitId":"alvintan01"},"content":" ```","lastModifiedDate":"2021-10-12"},{"lineNumber":879,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":880,"author":{"gitId":"a-tph"},"content":"### Exiting MediVault : `exit`","lastModifiedDate":"2021-10-12"},{"lineNumber":881,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":882,"author":{"gitId":"alvintan01"},"content":"Exits MediVault.","lastModifiedDate":"2021-10-12"},{"lineNumber":883,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":884,"author":{"gitId":"alvintan01"},"content":"Format: `exit`","lastModifiedDate":"2021-10-12"},{"lineNumber":885,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":886,"author":{"gitId":"alvintan01"},"content":"Example: `exit`","lastModifiedDate":"2021-10-12"},{"lineNumber":887,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":888,"author":{"gitId":"a-tph"},"content":"Expected Output:","lastModifiedDate":"2021-10-28"},{"lineNumber":889,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":890,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":891,"author":{"gitId":"alvintan01"},"content":"Quitting MediVault...","lastModifiedDate":"2021-10-12"},{"lineNumber":892,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":893,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":894,"author":{"gitId":"a-tph"},"content":"## Data Handling","lastModifiedDate":"2021-10-26"},{"lineNumber":895,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":896,"author":{"gitId":"a-tph"},"content":"### Data Storage","lastModifiedDate":"2021-10-26"},{"lineNumber":897,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":898,"author":{"gitId":"a-tph"},"content":"MediVault will automatically save your data after any operation that modifies stock, order or prescriptions. The data","lastModifiedDate":"2021-10-26"},{"lineNumber":899,"author":{"gitId":"a-tph"},"content":"will be stored in 3 separate files `data/stock.txt`, `data/order.txt` and `data/prescription.txt`. Data is saved in a","lastModifiedDate":"2021-10-26"},{"lineNumber":900,"author":{"gitId":"a-tph"},"content":"specific format with fields delimited by a pipe `|`.","lastModifiedDate":"2021-10-26"},{"lineNumber":901,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":902,"author":{"gitId":"a-tph"},"content":"Data formats:","lastModifiedDate":"2021-10-26"},{"lineNumber":903,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":904,"author":{"gitId":"a-tph"},"content":"* For `data/stock.txt`: `ID|NAME|PRICE|QUANTITY|EXPIRY_DATE|DESCRIPTION|MAX_QUANTITY|ISDELETED`","lastModifiedDate":"2021-10-26"},{"lineNumber":905,"author":{"gitId":"a-tph"},"content":"* For `data/order.txt`: `ID|NAME|QUANTITY|DATE|STATUS`","lastModifiedDate":"2021-10-26"},{"lineNumber":906,"author":{"gitId":"a-tph"},"content":"* For `data/prescription.txt`: `ID|NAME|QUANTITY|CUSTOMER_ID|DATE|STAFF|STOCK_ID`","lastModifiedDate":"2021-10-26"},{"lineNumber":907,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":908,"author":{"gitId":"a-tph"},"content":"### Data Editing","lastModifiedDate":"2021-10-26"},{"lineNumber":909,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":910,"author":{"gitId":"a-tph"},"content":"\u003e :warning: Warning","lastModifiedDate":"2021-10-26"},{"lineNumber":911,"author":{"gitId":"a-tph"},"content":"\u003e * It is possible for you to directly edit the data files, but it is **NOT** recommended unless you know exactly what you are doing because you risk corrupting it.","lastModifiedDate":"2021-10-26"},{"lineNumber":912,"author":{"gitId":"a-tph"},"content":"\u003e * If MediVault detects corruption or invalid data, you will **NOT** be able to start MediVault.","lastModifiedDate":"2021-10-26"},{"lineNumber":913,"author":{"gitId":"a-tph"},"content":"\u003e * In order for MediVault to work, you have to fix the error in the data file.","lastModifiedDate":"2021-10-26"},{"lineNumber":914,"author":{"gitId":"a-tph"},"content":"\u003e * Invalid data will be highlighted on starting MediVault and hint you in the direction to fix it.","lastModifiedDate":"2021-10-26"},{"lineNumber":915,"author":{"gitId":"a-tph"},"content":"\u003e * In the worst case scenario where you are unable to fix it, you may have to delete the corresponding data file.","lastModifiedDate":"2021-10-26"},{"lineNumber":916,"author":{"gitId":"a-tph"},"content":"\u003e * It may result in unintended behaviour if data file is tampered with while the program is running.","lastModifiedDate":"2021-10-26"},{"lineNumber":917,"author":{"gitId":"a-tph"},"content":"\u003e * Editing the data directly poses a significant risk to corruption of data.","lastModifiedDate":"2021-10-26"},{"lineNumber":918,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":919,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":920,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":921,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer?","lastModifiedDate":"2020-05-24"},{"lineNumber":922,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":923,"author":{"gitId":"RemusTeo"},"content":"**A**: You can transfer data to another computer by moving the 3 data files into the folder where MediVault.jar is.","lastModifiedDate":"2021-10-20"},{"lineNumber":924,"author":{"gitId":"alvintan01"},"content":"Ensure that the data files are in a folder named `data`. You should expect to","lastModifiedDate":"2021-10-25"},{"lineNumber":925,"author":{"gitId":"alvintan01"},"content":"see `stock.txt, order.txt, prescription.txt` in that folder.","lastModifiedDate":"2021-10-25"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":927,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":929,"author":{"gitId":"alvintan01"},"content":"Command | Command Syntax","lastModifiedDate":"2021-10-25"},{"lineNumber":930,"author":{"gitId":"alvintan01"},"content":"------ | ------","lastModifiedDate":"2021-10-12"},{"lineNumber":931,"author":{"gitId":"alvintan01"},"content":"addstock | `addstock n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE (d/DESCRIPTION m/MAX_QUANTITY)`","lastModifiedDate":"2021-11-02"},{"lineNumber":932,"author":{"gitId":"alvintan01"},"content":"deletestock | `deletestock [i/ID expiring/DATE]`","lastModifiedDate":"2021-11-01"},{"lineNumber":933,"author":{"gitId":"alvintan01"},"content":"updatestock | `updatestock i/ID [n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY]`","lastModifiedDate":"2021-11-01"},{"lineNumber":934,"author":{"gitId":"alvintan01"},"content":"liststock | `liststock {i/ID p/PRICE q/QUANTITY low/LESS_THAN_OR_EQUAL_QUANTITY e/EXPIRY_DATE expiring/LESS_THAN_OR_EQUAL_EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY sort/COLUMN_NAME rsort/COLUMN_NAME}`","lastModifiedDate":"2021-11-01"},{"lineNumber":935,"author":{"gitId":"alvintan01"},"content":"addprescription | `addprescription n/NAME q/QUANTITY c/CUSTOMER_ID s/STAFF_NAME`","lastModifiedDate":"2021-10-25"},{"lineNumber":936,"author":{"gitId":"alvintan01"},"content":"deleteprescription | `deleteprescription i/ID`","lastModifiedDate":"2021-10-25"},{"lineNumber":937,"author":{"gitId":"a-tph"},"content":"updateprescription | `updateprescription i/ID [n/NAME q/QUANTITY c/CUSTOMER_ID d/DATE s/STAFF_NAME]`","lastModifiedDate":"2021-10-26"},{"lineNumber":938,"author":{"gitId":"alvintan01"},"content":"listprescription | `listprescription {i/ID q/QUANTITY c/CUSTOMER_ID d/DATE s/STAFF_NAME sid/STOCK_ID sort/COLUMN_NAME rsort/COLUMN_NAME}`","lastModifiedDate":"2021-11-01"},{"lineNumber":939,"author":{"gitId":"alvintan01"},"content":"archiveprescription | `archiveprescription d/DATE`","lastModifiedDate":"2021-10-25"},{"lineNumber":940,"author":{"gitId":"alvintan01"},"content":"addorder | `addorder n/NAME q/QUANTITY {d/DATE}`","lastModifiedDate":"2021-10-19"},{"lineNumber":941,"author":{"gitId":"alvintan01"},"content":"deleteorder | `deleteorder i/ID`","lastModifiedDate":"2021-10-19"},{"lineNumber":942,"author":{"gitId":"alvintan01"},"content":"updateorder | `updateorder i/ID [n/NAME q/QUANTITY d/DATE]`","lastModifiedDate":"2021-10-19"},{"lineNumber":943,"author":{"gitId":"alvintan01"},"content":"listorder | `listorder {i/ID n/NAME q/QUANTITY d/DATE s/STATUS sort/COLUMN_NAME rsort/COLUMN_NAME}`","lastModifiedDate":"2021-11-01"},{"lineNumber":944,"author":{"gitId":"alvintan01"},"content":"archiveorder | `archiveorder d/DATE`","lastModifiedDate":"2021-10-25"},{"lineNumber":945,"author":{"gitId":"alvintan01"},"content":"receiveorder | `receiveorder i/ID p/PRICE e/EXPIRY_DATE (d/DESCRIPTION m/MAX_QUANTITY)`","lastModifiedDate":"2021-11-02"},{"lineNumber":946,"author":{"gitId":"alvintan01"},"content":"purge | `no parameters`","lastModifiedDate":"2021-10-12"},{"lineNumber":947,"author":{"gitId":"alvintan01"},"content":"help | `no parameters`","lastModifiedDate":"2021-10-12"},{"lineNumber":948,"author":{"gitId":"alvintan01"},"content":"exit | `no parameters`","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"alvintan01":442,"RemusTeo":113,"deonchung":74,"-":26,"a-tph":239,"jiangweichen835":54}},{"path":"docs/diagrams/AddOrderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiangweichen835"},"content":"@startuml AddOrderSequenceDiagram","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jiangweichen835"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jiangweichen835"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jiangweichen835"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jiangweichen835"},"content":"    participant \":AddOrderCommand\" as addorder COLOR_COMMAND","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"jiangweichen835"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jiangweichen835"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jiangweichen835"},"content":"    participant \":OrderManager\" as ordermanager COLOR_UTILITIES","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"jiangweichen835"},"content":"    participant \":StockManager\" as stockmanager COLOR_UTILITIES","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"jiangweichen835"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jiangweichen835"},"content":"autoactivate on","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"jiangweichen835"},"content":"mainFrame sd Logic for AddOrderCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"jiangweichen835"},"content":"activate addorder","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"jiangweichen835"},"content":"alt orderQuantity !\u003d 0","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"jiangweichen835"},"content":"    alt nameExistsInorder","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"jiangweichen835"},"content":"        alt !nameExistsInStock","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"jiangweichen835"},"content":"               alt orderQuantity \u003c maxQuantity","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"jiangweichen835"},"content":"                   addorder -\u003e addorder : addDate()","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"jiangweichen835"},"content":"                   addorder --\u003e addorder : orderDate","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"jiangweichen835"},"content":"                   addorder -\u003e addorder : addOrder()","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"jiangweichen835"},"content":"                   addorder --\u003e addorder","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"jiangweichen835"},"content":"               end","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"jiangweichen835"},"content":"           else nameExistsInStock","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"jiangweichen835"},"content":"               addorder -\u003e ordermanager : getTotalOrderQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"jiangweichen835"},"content":"               addorder \u003c-- ordermanager : TotalOrderQuantity","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"jiangweichen835"},"content":"               addorder -\u003e stockmanager : getTotalStockQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"jiangweichen835"},"content":"               addorder \u003c-- stockmanager : TotalStockQuantity","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"jiangweichen835"},"content":"               addorder -\u003e stockmanager : getMaxStockQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"jiangweichen835"},"content":"               addorder \u003c-- stockmanager : MaxStockQuantity","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"jiangweichen835"},"content":"               alt orderQuantity + totalExistingQuantity \u003c\u003d maxQuantity","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"jiangweichen835"},"content":"                   addorder -\u003e addorder : addDate()","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"jiangweichen835"},"content":"                   addorder --\u003e addorder : orderDate","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"jiangweichen835"},"content":"                   addorder -\u003e addorder : addOrder()","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"jiangweichen835"},"content":"                   addorder --\u003e addorder","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"jiangweichen835"},"content":"           end","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"jiangweichen835"},"content":"    else !nameExistsInorder","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"jiangweichen835"},"content":"        addorder -\u003e addorder : addDate()","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"jiangweichen835"},"content":"        addorder --\u003e addorder : orderDate","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"jiangweichen835"},"content":"        addorder -\u003e addorder : addOrder()","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"jiangweichen835"},"content":"        addorder --\u003e addorder","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"jiangweichen835"},"content":"    end","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"jiangweichen835"},"content":"end","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"jiangweichen835"},"content":"deactivate addorder","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"jiangweichen835"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"jiangweichen835":48}},{"path":"docs/diagrams/AddPrescriptionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"deonchung"},"content":"@startuml AddPrescriptionSequenceDiagram","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"!include style.puml","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"    participant \":AddPrescriptionCommand\" as addprescription COLOR_COMMAND","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"end box","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"deonchung"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:PrescriptionManager\" as prescriptionManager COLOR_UTILITIES","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"    participant \":StockComparator\" as stockcomparator COLOR_UTILITIES","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"end box","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"box Inventory COLOR_INVENTORY_BOX","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"    participant \":Stock\" as stock COLOR_INVENTORY","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"end box","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"autoactivate on","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"mainframe sd AddPrescriptionCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"activate addprescription","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"    addprescription -\u003e prescriptionManager: getNotExpiredStockQuantity()","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"    addprescription \u003c-- prescriptionManager: totalStock","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"    create stockcomparator","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"    addprescription -\u003e stockcomparator : new StockComparator()","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"    addprescription \u003c-- stockcomparator : filteredStocks","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"    deactivate stockcomparator","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"    loop stock : filteredStocks","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"        opt existingExpiry.after(prescribeDate) || prescribeDateString.equals(expiryString)","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"            opt existingQuantity \u003d\u003d quantityToPrescribe","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"                addprescription -\u003e addprescription : prescribe()","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"                addprescription -\u003e stock : setQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"                addprescription \u003c-- stock","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"                addprescription --\u003e addprescription","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"            end","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"            opt existingQuantity \u003e quantityToPrescribe","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"                addprescription -\u003e addprescription : prescribe()","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"                addprescription -\u003e stock : setQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"                addprescription \u003c-- stock","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"                addprescription --\u003e addprescription","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"            end","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"            opt existingQuantity \u003c quantityToPrescribe","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"                addprescription -\u003e addprescription : prescribe()","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"                addprescription -\u003e stock : setQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"                addprescription \u003c-- stock","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"deonchung"},"content":"                addprescription --\u003e addprescription","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"            end","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"        end","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"    end","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"deactivate addprescription","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"@enduml","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"deonchung":55}},{"path":"docs/diagrams/AddStockSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"deonchung"},"content":"@startuml AddStockSequenceDiagram","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"    participant \":AddStockCommand\" as addstock COLOR_COMMAND","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"deonchung"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"    participant \":StockValidator\" as stockvalidator COLOR_UTILITIES","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:StockManager\" as stockmanager COLOR_UTILITIES","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"box Inventory COLOR_INVENTORY_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"    participant \":Stock\" as stock COLOR_INVENTORY","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"autoactivate on","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"mainFrame sd Logic for AddStockCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"activate addstock","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"addstock -\u003e addstock : checkExpiryDate()","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"addstock --\u003e addstock : formatExpiryDate","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"alt nameExist","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"    addstock -\u003e stockmanager: getTotalStockQuantity()","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"    addstock \u003c-- stockmanager: totalStock","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"    addstock -\u003e addstock : isExpiryExist()","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"    loop stock : filteredStocks","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"        opt isValidQuantity","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"            addstock -\u003e addstock : isValidQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"            addstock -\u003e stockvalidator : quantityValidityChecker()","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"            addstock \u003c-- stockvalidator : isValidQuantity","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"            addstock --\u003e addstock : isValidQuantity","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"            opt formatExpiry.equals(stock.getExpiry())","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"                addstock -\u003e stock : getQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"                addstock \u003c-- stock : getQuantity","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"                addstock -\u003e stock : setQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"                addstock \u003c-- stock :","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"            end","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"        end","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"    end","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"    addstock --\u003e addstock : isExpiryExist","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"    addstock -\u003e addstock : addSameMedicine()","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"    loop stock : filteredStocks","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"        opt isValidQuantity","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"        addstock -\u003e addstock : isValidQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"        addstock -\u003e stockvalidator : quantityValidityChecker()","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"deonchung"},"content":"        addstock \u003c-- stockvalidator : isValidQuantity","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"        addstock --\u003e addstock : isValidQuantity","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"        addstock -\u003e addstock : addMedicine()","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"        addstock --\u003e addstock : addMedicine","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"deonchung"},"content":"        end","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"        addstock --\u003e addstock : addSameMedicine","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"    end","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"deonchung"},"content":"else !nameExist","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"deonchung"},"content":"    addstock -\u003e addstock : isValidQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"deonchung"},"content":"    addstock -\u003e stockvalidator : quantityValidityChecker()","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"deonchung"},"content":"    addstock \u003c-- stockvalidator : isValidQuantity","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"deonchung"},"content":"    addstock --\u003e addstock : isValidQuantity","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"deonchung"},"content":"    opt isValidQuantity","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"deonchung"},"content":"        addstock -\u003e addstock : addMedicine()","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"deonchung"},"content":"        addstock --\u003e addstock : addMedicine","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"deonchung"},"content":"    end","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"deonchung"},"content":"end","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"deonchung"},"content":"deactivate addstock","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"deonchung"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"deonchung":73}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"@startuml ArchitectureDiagram","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"!include style.puml","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"\u0027 hide the circles in the diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"hide circle","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"hide empty members","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    class MediVault COLOR_MEDIVAULT","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"    class Utilities COLOR_UTILITIES","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"    class Errors COLOR_ERRORS","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"    class Command COLOR_COMMAND","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"    class Inventory COLOR_INVENTORY","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"class \"\u003c$user\u003e\" as User COLOR_SPARE","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"class \"\u003c$documents\u003e\" as Files COLOR_SPARE1","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"User .[COLOR_SPARE].\u003e Utilities","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"MediVault -[COLOR_MEDIVAULT]\u003e Utilities","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"Errors --[COLOR_ERRORS]up\u003e Utilities","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"Utilities .[COLOR_UTILITIES]right\u003eFiles","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"Utilities --[COLOR_UTILITIES]\u003e Command","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"MediVault --[COLOR_COMMAND]\u003e Command","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"Command --[COLOR_COMMAND]\u003e Inventory","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"Inventory --[COLOR_INVENTORY]\u003e Utilities","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"a-tph":31}},{"path":"docs/diagrams/ArchiveOrderCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"@startuml DeleteStockSequenceDiagram","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"!include style.puml","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"    participant \":ArchiveOrderCommand\" as archiveOrder COLOR_COMMAND","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:DateParser\" as dateParser COLOR_UTILITIES","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:Storage\" as storage COLOR_UTILITIES","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"autoactivate on","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"mainFrame sd Logic for ArchiveOrderCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"activate archiveOrder","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"archiveOrder -\u003e dateParser : stringToDate()","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"archiveOrder \u003c-- dateParser : date","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"archiveOrder -\u003e archiveOrder : ordersToArchive()","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"archiveOrder --\u003e archiveOrder : filteredOrders","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"archiveOrder -\u003e archiveOrder : removeFromOrders()","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"archiveOrder --\u003e archiveOrder","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"archiveOrder -\u003e storage : getInstance()","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"archiveOrder \u003c-- storage","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"archiveOrder -\u003e storage : archiveData()","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"archiveOrder \u003c-- storage","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"RemusTeo":28}},{"path":"docs/diagrams/ArchivePrescriptionCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"@startuml DeleteStockSequenceDiagram","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"!include style.puml","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"    participant \":ArchivePrescriptionCommand\" as archivePrescription COLOR_COMMAND","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:DateParser\" as dateParser COLOR_UTILITIES","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:Storage\" as storage COLOR_UTILITIES","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"mainFrame sd Logic for ArchivePrescriptionCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"autoactivate on","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"activate archivePrescription","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"archivePrescription -\u003e dateParser : stringToDate()","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"archivePrescription \u003c-- dateParser : date","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"archivePrescription -\u003e archivePrescription : prescriptionsToArchive()","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"archivePrescription --\u003e archivePrescription : filteredPrescriptions","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"archivePrescription -\u003e archivePrescription : removeFromPrescriptions()","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"archivePrescription --\u003e archivePrescription","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"archivePrescription -\u003e storage : getInstance()","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"archivePrescription \u003c-- storage","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"archivePrescription -\u003e storage : archiveData()","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"archivePrescription \u003c-- storage","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"RemusTeo":28}},{"path":"docs/diagrams/CommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"!define ABSTRACT \u0026#123;abstract\u0026#125;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"\u0027 hide the circles in the diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"hide circle","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"\u0027 hide the icons for access modifiers","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"\u0027 to join all the arrows","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"\u0027skinparam groupInheritance 3","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"skinparam classBackgroundColor COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"package \"Command Component\" \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"    class AddPrescriptionCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"    class AddStockCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    class AddOrderCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"    class ArchivePrescriptionCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"    class ArchiveOrderCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"    class DeletePrescriptionCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"    class DeleteStockCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    class DeleteOrderCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    class ExitCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"    class HelpCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"    class ListPrescriptionCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"    class ListStockCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"    class ListOrderCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"    class PurgeCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"    class ReceiveOrderCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    class UpdatePrescriptionCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"    class UpdateStockCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"    class UpdateOrderCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"package MediVault \u003c\u003cRectangle\u003e\u003e COLOR_MEDIVAULT_BOX {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"package Inventory \u003c\u003cRectangle\u003e\u003e COLOR_INVENTORY_BOX {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"class Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"    #parameters: LinkedHashMap\u003cString, String\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"    +execute(): void ABSTRACT","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"class AddPrescriptionCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"    +AddPrescriptionCommand()","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"    -prescribe(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"class AddStockCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"    +AddStockCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"    -checkDateAndQuantity(): boolean","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"    -addMedicine(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"class AddOrderCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"    +AddOrderCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"    -addOrder(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"class ArchivePrescriptionCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"    +ArchivePrescriptionCommand()","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"class ArchiveOrderCommand {","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"    +ArchiveOrderCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"class DeletePrescriptionCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"    +DeletePrescriptionCommand()","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"    -setStockQuantity(): boolean","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"class DeleteStockCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"    +DeleteStockCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"    -deleteStockById(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"    -deleteStockByExpiry(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"class DeleteOrderCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"    +DeleteOrderCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"class ExitCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"class HelpCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"class ListPrescriptionCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"    +ListPrescriptionCommand()","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"    -filterPrescriptions(): ArrayList\u003cPrescription\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"class ListStockCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"    +ListStockCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"class ListOrderCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"    +ListOrderCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"    -filterOrders(): ArrayList\u003cOrder\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"class PurgeCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"class ReceiveOrderCommand {","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"    +ReceiveOrderCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"class UpdatePrescriptionCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"    +UpdatePrescriptionCommand()","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"    -processGivenNameAndQuantity(): boolean","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"    -processGivenName(): boolean","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"    -processGivenQuantity(): boolean","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"    -processOtherFields(): boolean","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"class UpdateOrderCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"    +UpdateOrderCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"    -setUpdatesByOrderId(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"class UpdateStockCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"a-tph"},"content":"    +UpdateStockCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"    +execute(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"a-tph"},"content":"    -getNewStock(): Stock","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"a-tph"},"content":"    -addNewRowForUpdates(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"a-tph"},"content":"    -processDateInput(): boolean","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"a-tph"},"content":"    -processQuantityValues(): boolean","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"a-tph"},"content":"    -setUpdatesByStockId(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"a-tph"},"content":"AddPrescriptionCommand ----|\u003e Command","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"a-tph"},"content":"AddStockCommand ----|\u003e Command","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"a-tph"},"content":"AddOrderCommand ----|\u003e Command","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"a-tph"},"content":"DeletePrescriptionCommand ---|\u003e Command","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"a-tph"},"content":"DeleteStockCommand ---|\u003e Command","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"a-tph"},"content":"DeleteOrderCommand ---|\u003e Command","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"a-tph"},"content":"ExitCommand --|\u003e Command","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"a-tph"},"content":"HelpCommand --|\u003e Command","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"a-tph"},"content":"PurgeCommand --|\u003e Command","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"a-tph"},"content":"ListPrescriptionCommand --up|\u003e Command","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"a-tph"},"content":"ListStockCommand --up|\u003e Command","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"a-tph"},"content":"ListOrderCommand --up|\u003e Command","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"a-tph"},"content":"ReceiveOrderCommand ---up|\u003e Command","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"a-tph"},"content":"ArchivePrescriptionCommand ---up|\u003e Command","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"a-tph"},"content":"ArchiveOrderCommand ---up|\u003e Command","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"a-tph"},"content":"UpdateOrderCommand ----up|\u003e Command","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"a-tph"},"content":"UpdatePrescriptionCommand ----up|\u003e Command","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"a-tph"},"content":"UpdateStockCommand ----up|\u003e Command","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"a-tph"},"content":"MediVault ---.right|\u003e Command: executes \u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"a-tph"},"content":"Command ---.right|\u003e Inventory: affects \u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"a-tph"},"content":"note as ConstraintsNote","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"a-tph"},"content":"The input parameters for","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"a-tph"},"content":"methods and constructors are","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"a-tph"},"content":"left out as member details","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"a-tph"},"content":"can get outdated over time.","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"a-tph"},"content":"end note","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"a-tph"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"a-tph":185}},{"path":"docs/diagrams/ContainValidParametersAndValuesSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"@startuml ContainValidParametersAndValuesSequenceDiagram","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"!include style.puml","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"    participant \":*Command\" as command COLOR_COMMAND","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"end box","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:Ui\" as ui COLOR_UTILITIES","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"    participant \":*Validator\" as xvalidator COLOR_UTILITIES","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:Storage\" as storage COLOR_UTILITIES","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"end box","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"box Inventory COLOR_INVENTORY_BOX","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:Medicine\" as medicine COLOR_INVENTORY","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"end box","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"autoactivate on","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"mainFrame sd Execution of *Command","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"activate command","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"    command -\u003e ui: getInstance()","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    command \u003c-- ui","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    create xvalidator","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"    command -\u003e xvalidator: new *Validator()","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"    command \u003c-- xvalidator","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"    command -\u003e xvalidator: containsInvalidParameters()","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"    command \u003c-- xvalidator: isInvalidParameter","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    opt !isInvalidParameter","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"        command -\u003e medicine: getInstance()","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"        command \u003c-- medicine","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"        command -\u003e xvalidator: containsInvalidParameterValues()","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"        command \u003c-- xvalidator: isInvalidParameterValues","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        opt !isInvalidParameterValues","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"            ref over command, medicine","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"                Logic for *Command","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"            end ref","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"            command -\u003e storage: getInstance()","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"            command \u003c-- storage","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"            command -\u003e storage: saveData()","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"            command \u003c-- storage","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"        end","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"    end","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"@enduml","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"a-tph":49}},{"path":"docs/diagrams/DeleteOrderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"deonchung"},"content":"@startuml DeleteOrderSequenceDiagram","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"    participant \":DeleteOrderCommand\" as deleteorder COLOR_COMMAND","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"deonchung"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"    participant \":OrderValidator\" as ordervalidator COLOR_UTILITIES","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"box Inventory COLOR_INVENTORY_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:Medicine\" as medicine COLOR_INVENTORY","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"    participant \":Order\" as order COLOR_INVENTORY","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"autoactivate on","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"mainframe sd DeleteOrderCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"activate deleteorder","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"deleteorder -\u003e deleteorder : isValidOrderParameters()","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"    opt isValidOrderId","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"    deleteorder -\u003e ordervalidator : isValidOrderId()","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"    deleteorder \u003c-- ordervalidator : isValidOrderId","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"    loop medicine : medicines","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"    opt medicine instanceof Order","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"            deleteorder -\u003e order : getOrderId()","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"            deleteorder \u003c-- order","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"            opt order.getOrderId() \u003d\u003d order.orderId","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"                deleteorder -\u003e medicine : remove()","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"                deleteorder \u003c-- medicine :","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"            end","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"        end","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"    end","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"   end","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"deleteorder --\u003e deleteorder :","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"deonchung":45}},{"path":"docs/diagrams/DeletePrescriptionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"deonchung"},"content":"@startuml DeletePrescriptionSequenceDiagram","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"!include style.puml","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"    participant \":DeletePrescriptionCommand\" as deleteprescription COLOR_COMMAND","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"end box","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"deonchung"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:PrescriptionManager\" as prescriptionManager COLOR_UTILITIES","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"end box","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"box Inventory COLOR_INVENTORY_BOX","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"    participant \":Stock\" as stock COLOR_INVENTORY","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"end box","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"autoactivate on","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"mainframe sd DeletePrescriptionCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"activate deleteprescription","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"deleteprescription -\u003e deleteprescription : isValidPrescriptionParameters()","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"    opt isValidPrescriptionId","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"    deleteprescription -\u003e prescriptionManager : isValidPrescriptionId()","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"    deleteprescription \u003c-- prescriptionManager : isValidPrescriptionId","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"    deleteprescription -\u003e deleteprescription : setStockQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"        loop medicine : medicines","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"            opt medicine intanceof Stock","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"                deleteprescription -\u003e stock : isDeleted()","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"                deleteprescription \u003c-- stock :","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"                opt prescription.getPrescriptionId() \u003d\u003d prescriptionId","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"                deleteprescription -\u003e deleteprescription : setStockQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"                opt stock.isDeleted","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"                    deleteprescription -\u003e stock : setDeleted()","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"                    deleteprescription \u003c-- stock : setAsDeleted","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"                    deleteprescription -\u003e stock : getStockID()","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"                    deleteprescription \u003c-- stock :","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"                    opt stock.getStockID() \u003d\u003d stockIdToDispense","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"                    deleteprescription -\u003e stock : setQuantity()","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"                    deleteprescription \u003c-- stock :","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"                    end","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"                    deleteprescription --\u003edeleteprescription","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"                end","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"            end","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"deonchung"},"content":"        end","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"    end","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"    end","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"deactivate deleteprescription","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"deonchung"},"content":"deleteprescription --\u003e deleteprescription :","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"@enduml","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"deonchung":54}},{"path":"docs/diagrams/DeleteStockSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"@startuml DeleteStockSequenceDiagram","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"    participant \":DeleteStockCommand\" as deleteStock COLOR_COMMAND","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:Ui\" as ui COLOR_UTILITIES","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"    participant \":StockValidator\" as stockValidator COLOR_UTILITIES","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:Storage\" as storage COLOR_UTILITIES","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"box Inventory COLOR_INVENTORY_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:Medicine\" as medicine COLOR_INVENTORY","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"autoactivate on","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"mainFrame sd Logic for DeleteStockCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"activate deleteStock","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"opt !(hasStockId \u0026\u0026 hasExpiryDate)","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"    alt hasStockId \u0026\u0026 !hasExpiryDate","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"        ref over deleteStock, medicine","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"            Deletion of stock by id","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"        end ref","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"    else !hasStockId \u0026\u0026 hasExpiryDate","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"        ref over deleteStock, medicine","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"            Deletion of stock by expiry","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"        end ref","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"    end","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"end","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"RemusTeo":34}},{"path":"docs/diagrams/DeletionOfStockByExpirySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"@startuml DeleteStockSequenceDiagram","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"    participant \":DeleteStockCommand\" as deleteStock COLOR_COMMAND","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:Ui\" as ui COLOR_UTILITIES","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:DateParser\" as dateParser COLOR_UTILITIES","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"box Inventory COLOR_INVENTORY_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"    participant \":Stock\" as stock COLOR_INVENTORY","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"autoactivate on","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"mainFrame sd Deletion of stock by expiry","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"activate deleteStock","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"deleteStock -\u003e deleteStock: deleteStockByExpiry()","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"deleteStock -\u003e dateParser : stringToDate()","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"deleteStock \u003c-- dateParser : date","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"loop medicine : medicines","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"    deleteStock -\u003e deleteStock : medicine","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"    opt medicine instanceof Stock","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"        deleteStock -\u003e stock : getExpiry()","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"        deleteStock \u003c-- stock : stockExpiryDate","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"        opt stockExpiryDate.before(date) || stockExpiryDate.equals(date)","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"            deleteStock -\u003e stock : setDeleted()","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"            deleteStock \u003c-- stock : setAsDeleted","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"        end","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"    end","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"    deleteStock --\u003e deleteStock","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"end","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"deleteStock --\u003e deleteStock","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"deleteStock -\u003e ui : print()","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"deleteStock \u003c-- ui","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"RemusTeo":40}},{"path":"docs/diagrams/DeletionOfStockByIdSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"@startuml DeleteStockSequenceDiagram","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"    participant \":DeleteStockCommand\" as deleteStock COLOR_COMMAND","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:Ui\" as ui COLOR_UTILITIES","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"box Inventory COLOR_INVENTORY_BOX","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"    participant \":Stock\" as stock COLOR_INVENTORY","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"autoactivate on","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"mainFrame sd Deletion of stock by id","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"activate deleteStock","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"deleteStock -\u003e deleteStock: deleteStockById()","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"loop medicine : medicines","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"    deleteStock -\u003e deleteStock : medicine","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"    opt medicine instanceof Stock","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"        deleteStock -\u003e stock : getStockId()","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"        deleteStock \u003c-- stock : stockId","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"        opt stock.getStockId() \u003d\u003d stockId","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"            deleteStock -\u003e stock : setDeleted()","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"            deleteStock \u003c-- stock : setAsDeleted","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"        end","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"    end","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"    deleteStock --\u003e deleteStock","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"end","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"deleteStock --\u003e deleteStock","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"deleteStock -\u003e ui : print()","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"deleteStock \u003c-- ui","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"RemusTeo":38}},{"path":"docs/diagrams/InventoryClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"\u0027 hide the circles in the diagram","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"hide circle","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"\u0027 hide the icons for access modifiers","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"\u0027 to join all the arrows","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"skinparam groupInheritance 3","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"class \"{abstract}\\nMedicine\"{","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    #medicineName: String","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    #quantity: int","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    -{static} medicines: ArrayList\u003cMedicine\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    +{static} getInstance()","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    +Medicine(medicineName: String, quantity: int)","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    +toFileFormat() \u0026#123;abstract\u0026#125;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    +toArchiveFormat() \u0026#123;abstract\u0026#125;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"class \"Stock\"{","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    -{static} stockCount: int","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    #stockID: int","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    #price: double","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    #expiry: Date","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    #description: String","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    #maxQuantity: int","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    #isDeleted: boolean","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    +Stock(name: String, price: Double, quantity: int,","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"     expiry: Date, description: String, maxQuantity: int)","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    +toFileFormat(): String","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    +toArchiveFormat(): String","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"class \"Prescription\"{","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    -{static} prescriptionCount: int","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    #prescriptionId: int","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    #customerId: int","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"    #date: Date","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    #staff: String","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    #stockId: int","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    +Prescription(medicineName: String, quantity: int,","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"     customerId: String, date: Date, staff: String, stockId: int)","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    +toFileFormat(): String","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"    +toArchiveFormat(): String","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"class \"Order\"{","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"    -{static} orderCount: int","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"    #orderId: int","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"    #date: Date","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    #isDelivered: boolean","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"    +Order(medicineName: String,","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    quantity: int, date: Date)","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"    +toFileFormat(): String","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"    +toArchiveFormat(): String","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"\"{abstract}\\nMedicine\" \u003c|-- \"Stock\"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"\"{abstract}\\nMedicine\" \u003c|-- \"Prescription\"","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"\"{abstract}\\nMedicine\" \u003c|-- \"Order\"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"note \"Note: All the getter and setters are\\nleft out in this diagram.\" as n1","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"alvintan01":63}},{"path":"docs/diagrams/ListSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"@startuml AddSequenceDiagram","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"    participant \":List*Command\" as list COLOR_COMMAND","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\nUi\" as ui COLOR_UTILITIES","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    participant \":*Comparator\" as comparator COLOR_UTILITIES","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"box Inventory COLOR_INVENTORY_BOX","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    participant \":*\" as object COLOR_INVENTORY","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"autoactivate on","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"mainFrame sd Logic for List*","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"activate list","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"list -\u003e list : filter*()","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"loop until end of parameters","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    alt parameters.equals(SORT)","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"        create comparator","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        list -\u003e comparator : new *Comparator(column: String, isReversed: boolean)","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        list \u003c-- comparator : sorted*","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        deactivate comparator","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    else parameters.equals(REVERSED_SORT)","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        create comparator","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        list -\u003e comparator : new *Comparator(column: String, isReversed: boolean)","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        list \u003c-- comparator : reverseSorted*","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        deactivate comparator","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"    else default","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        loop until end of all * objects","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"            list -\u003e object : getAttributeValue()","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"            list \u003c-- object","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        end","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"    end","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"end","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"list --\u003e list : filtered*","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"list -\u003e ui : print*(medicines: Arraylist\u003c*\u003e)","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"deactivate ui","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"note left of object","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"Replace * in the diagram with","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"Stock, Prescription or Order","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"depending on the command entered.","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"end note","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"alvintan01":61}},{"path":"docs/diagrams/MainLogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"@startuml AddSequenceDiagram","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"box MediVault COLOR_MEDIVAULT_BOX","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"    participant \":MediVault\" as medivault COLOR_MEDIVAULT","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\nUi\" as uiclass COLOR_UTILITIES","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    participant \"Ui\" as ui COLOR_UTILITIES","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    participant \"CommandParser\" as commandparser COLOR_UTILITIES","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    participant \":Command\" as command COLOR_COMMAND","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"autoactivate on","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"-\u003e medivault: run()","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    medivault -\u003e uiclass : getInstance()","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    medivault \u003c-- uiclass","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    medivault -\u003e uiclass : printWelcomeMessage()","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    medivault \u003c-- uiclass","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    create commandparser","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    medivault -\u003e commandparser : CommandParser()","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    medivault \u003c-- commandparser","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    loop until exit is received","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        medivault -\u003e ui : getInput()","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        medivault \u003c-- ui : userInput","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        medivault -\u003e commandparser : parseCommand(userInput : String)","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        medivault \u003c-- commandparser : userCommand, parameters","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        alt command equals modes","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            medivault -\u003e commandparser : changeMode(ui: Ui, commandString: String, mode: Mode)","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"            medivault \u003c-- commandparser","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        else else","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"            medivault -\u003e commandparser : processCommand(commandString: String,\\ncommandParameters: LinkedHashMap\u003cString, String\u003e,\\nmode Mode)","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"            commandparser -\u003e commandparser : parseParameters(parametersString, String)","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"            commandparser --\u003e commandparser : parameterValues","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"            create command","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"            commandparser -\u003e command : Command(parameters:\\nLinkedHashMap\u003cString, String\u003e)","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"            commandparser \u003c-- command","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"            medivault \u003c-- commandparser","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"            medivault -\u003e command : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"            deactivate command","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"            ref over medivault,command","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"                Execution of *command","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"            end ref","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"        end","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"    end","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"note left of command","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"Note that processCommand throws InvalidCommandException","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"when an invalid command is entered.","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"end note","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"alvintan01":61}},{"path":"docs/diagrams/ReceiveOrder.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"@startuml AddSequenceDiagram","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"!include style.puml","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"    participant \":ReceiveOrderCommand\" as receiveordercommand COLOR_COMMAND","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"    participant \":AddStockCommand\" as addstockcommand COLOR_COMMAND","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    participant \":StockValidator\" as stockvalidator COLOR_UTILITIES","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"autoactivate on","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"mainFrame sd Logic for ReceiveOrderCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"activate receiveordercommand","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"receiveordercommand -\u003e receiveordercommand : isStockParametersValid(ui: Ui, medicines: ArrayList\u003cMedicines\u003e, name: String)","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"receiveordercommand -\u003e stockvalidator : new StockValidator()","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"receiveordercommand \u003c-- stockvalidator","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"receiveordercommand -\u003e receiveordercommand : checkStockExist","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"receiveordercommand --\u003e receiveordercommand","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"receiveordercommand -\u003e stockvalidator : containsInvalidParametersAndValues(ui: Ui, medicines: ArrayList\u003cMedicine\u003e,\\nparameters: LinkedHashMap\u003cString, String\u003e, requiredParameters: String[],\\noptionalParameters: String[], commandSyntax: String,\\nrequiresOptionalParameters: boolean, validator: MedicineValidator)","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"receiveordercommand \u003c-- stockvalidator : isInvalidInput","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"receiveordercommand --\u003e receiveordercommand","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"create addstockcommand","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"receiveordercommand -\u003e addstockcommand : new AddStockCommand(parameters: LinkedHashMap\u003cString, String\u003e)","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"receiveordercommand \u003c-- addstockcommand","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"receiveordercommand -\u003e addstockcommand : execute()","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"deactivate addstockcommand","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"alvintan01":38}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"@startuml","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"\u0027 hide the circles in the diagram","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"hide circle","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"\u0027 hide the icons for access modifiers","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"!include style.puml","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"skinparam classBackgroundColor COLOR_UTILITIES_BOX","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"Storage -\u003e FileParser","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"class Storage {","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"    -stockFile : File","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"    -prescriptionFile : File","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"    -orderFile : File","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"    -prescriptionArchiveFile : File","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"    -orderArchiveFile : File","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"    +saveData() : void","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"    +archiveData() : void","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"    +loadData() : ArrayList\u003cMedicine\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"    -writeToFile() : void","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"    -appendToFile() : void","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"    -readFromFile() : ArrayList\u003cMedicine\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"    -parseStockData() : Medicine","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"    -parseOrderData() : Medicine","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"    -parsePrescriptionData() : Medicine","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"class \"FileParser\"{","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"    -stockIds : HashSet\u003cInteger\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"    -orderIds : HashSet\u003cInteger\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"    -prescriptionIds : Hashset\u003cInteger\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"    +parseStockId() : int","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"    +parseStockName() : String","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"    +parseStockPrice() : Double","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"    +parseStockQuantity() : int","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"    +parseStockExpiry() : Date","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"    +parseStockDescription() : String","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"    +parseStockMaxQuantity() : int","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"    +parseStockIsDeleted() : boolean","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"    +parseOrderId() : int","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"    +parseOrderName() : String","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"    +parseOrderQuantity() : int","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"    +parseOrderDate() : Date","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"RemusTeo"},"content":"    +parseOrderStatus() : boolean","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"RemusTeo"},"content":"    +parsePrescriptionId() : int","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"RemusTeo"},"content":"    +parsePrescriptionName() : String","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"RemusTeo"},"content":"    +parsePrescriptionQuantity() : int","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"RemusTeo"},"content":"    +parsePrescriptionCustomerId() : String","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"RemusTeo"},"content":"    +parsePrescriptionDate() : Date","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"RemusTeo"},"content":"    +parsePrescriptionStaff() : String","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"RemusTeo"},"content":"    +parsePrescriptionStockId() : int","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"RemusTeo"},"content":"note \"The input parameters for all functions\\nhas been left out to make this\\ndiagram more compact.\" as n1","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"RemusTeo"},"content":"@enduml","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"RemusTeo":58}},{"path":"docs/diagrams/UpdateOrderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"@startuml UpdateOrderSequenceDiagram","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"    participant \":UpdateOrderCommand\" as updateorder COLOR_COMMAND","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    participant \":StockValidator\" as stockvalidator COLOR_UTILITIES","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:OrderManager\" as ordermanager COLOR_UTILITIES","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:StockManager\" as stockmanager COLOR_UTILITIES","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"box Inventory COLOR_INVENTORY_BOX","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"    participant \":Order\" as order COLOR_INVENTORY","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"end box","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"autoactivate on","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"mainFrame sd Logic for UpdateOrderCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"activate updateorder","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"    updateorder -\u003e ordermanager: extractOrderObject()","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    updateorder \u003c-- ordermanager: order","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    updateorder -\u003e order: isDelivered()","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"    updateorder \u003c-- order","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"    opt !isDelivered","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"        updateorder -\u003e stockmanager: getMaxStockQuantity()","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"        updateorder \u003c-- stockmanager","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"        opt existName \u0026\u0026 existQuantityParam","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"            create stockvalidator","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"            updateorder -\u003e stockvalidator: new StockValidator()","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"            updateorder \u003c-- stockvalidator","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"            updateorder -\u003e stockvalidator: quantityValidityChecker()","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"            updateorder \u003c-- stockvalidator: isValidQuantity","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"            opt isValidQuantity","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"                updateorder -\u003e updateorder: setUpdatesByOrderId()","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"                updateorder --\u003e updateorder","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"            end","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"        end","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"    end","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"a-tph":43}},{"path":"docs/diagrams/UpdatePrescriptionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"@startuml UpdatePrescriptionSequenceDiagram","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"!include style.puml","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"    participant \":UpdatePrescriptionCommand\" as updateprescription COLOR_COMMAND","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"end box","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    participant \":StockValidator\" as stockvalidator COLOR_UTILITIES","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:PrescriptionManager\" as prescriptionmanager COLOR_UTILITIES","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"autoactivate on","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"mainFrame sd Logic for UpdatePrescriptionCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"activate updateprescription","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"    updateprescription -\u003e prescriptionmanager: extractDispenseObject()","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    updateprescription \u003c-- prescriptionmanager","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"    create stockvalidator","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"    updateprescription -\u003e stockvalidator: new StockValidator()","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"    updateprescription \u003c-- stockvalidator","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"    alt hasNameParam \u0026\u0026 hasQuantityParam","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"        updateprescription -\u003e updateprescription: processGivenNameAndQuantity()","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"        updateprescription --\u003e updateprescription: isSuccessfulUpdate","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"    else hasNameParam \u0026\u0026 !hasQuantityParam","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"        updateprescription -\u003e updateprescription: processGivenName()","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"        updateprescription --\u003e updateprescription: isSuccessfulUpdate","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"    else !hasNameParam \u0026\u0026 hasQuantityParam","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"        updateprescription -\u003e updateprescription: processGivenQuantity()","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"        updateprescription --\u003e updateprescription: isSuccessfulUpdate","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    else containsParamOtherThanNameAndQuantity","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"        updateprescription -\u003e updateprescription: processOtherFields()","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"        updateprescription --\u003e updateprescription: isSuccessfulUpdate","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"    end","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"a-tph":37}},{"path":"docs/diagrams/UpdateStockSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"@startuml UpdateStockSequenceDiagram","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"box Command COLOR_COMMAND_BOX","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"    participant \":UpdateStockCommand\" as updatestock COLOR_COMMAND","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"box Utilities COLOR_UTILITIES_BOX","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"    participant \"\u003c\u003cclass\u003e\u003e\\n:StockManager\" as stockmanager COLOR_UTILITIES","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"autoactivate on","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"mainFrame sd Logic for UpdateStockCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"activate updatestock","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"    updatestock -\u003e stockmanager: extractStockObject()","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"    updatestock \u003c-- stockmanager: stock","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"    updatestock -\u003e updatestock: processQuantityValues()","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"    updatestock --\u003e updatestock: isValidQuantityValues","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"    updatestock -\u003e updatestock: processDateInput()","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    updatestock --\u003e updatestock: isValidExpDate","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"    opt isValidQuantityValues \u0026\u0026 isValidExpDate","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"        updatestock -\u003e stockmanager: getFilteredStocksByName()","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"        updatestock \u003c-- stockmanager: oldFilteredStocks","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"        opt parameters contains name","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"            updatestock -\u003e updatestock: addNewRowForUpdate()","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"            deactivate updatestock","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"            updatestock -\u003e updatestock: getNewStock()","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"            deactivate updatestock","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"        end","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"        updatestock -\u003e stockmanager: getFilteredStocksByName()","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"        updatestock \u003c-- stockmanager: filteredStocks","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"        updatestock -\u003e updatestock: setUpdatesByStockId(stock)","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        deactivate updatestock","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    end","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"a-tph":41}},{"path":"docs/diagrams/ValidatorClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"\u0027 hide the circles in the diagram","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"hide circle","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"\u0027 hide the icons for access modifiers","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"\u0027 to join all the arrows","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"skinparam groupInheritance 3","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"!include style.puml","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"skinparam classBackgroundColor COLOR_UTILITIES_BOX","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"class \"{abstract}\\n MedicineValidator\"{","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    +containsInvalidParameterValues(): boolean \u0026#123;abstract\u0026#125;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    +isValidColumn(): boolean \u0026#123;abstract\u0026#125;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    +containsInvalidParametersAndValues(): boolean","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    +containsInvalidParameters(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    +isValidName(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    +isValidQuantity(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    +hasNameParamChecker(): boolean","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    +hasQuantityParamChecker: boolean","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"class \"StockValidator\"{","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    +StockValidator()","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    +containsInvalidParameterValues(): boolean;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    +isValidStockId(): boolean","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    +isValidPrice(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    +isValidExpiry(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    +isValidDescription(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    +isValidMaxQuantity(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    +isValidColumn(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    +quantityValidityChecker(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    +dateValidityChecker(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"class \"PrescriptionValidator\"{","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    +PrescriptionValidator()","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    +containsInvalidParameterValues(): boolean;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    +isValidDispenseId(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"    +isValidCustomerId(): boolean","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    +isValidStaffName(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"    +isValidColumn(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    +isValidDate(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"class \"OrderValidator\"{","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"    +OrderValidator()","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"    +containsInvalidParameterValues(): boolean;","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    +isValidOrderId(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"    +isValidDate(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    +isValidStatus(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"    +isValidColumn(): boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"\"{abstract}\\n MedicineValidator\" \u003c|---- \"StockValidator\"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"\"{abstract}\\n MedicineValidator\" \u003c|-- \"PrescriptionValidator\"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"\"{abstract}\\n MedicineValidator\" \u003c|---- \"OrderValidator\"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"note \"The input parameters for all functions\\nhas been left out to make this\\ndiagram more compact.\" as n1","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"alvintan01":62}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"!define COLOR_MEDIVAULT #1E90FF","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"!define COLOR_UTILITIES #FF8C00","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"!define COLOR_COMMAND #00FFFF","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"!define COLOR_ERRORS #DC143C","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"!define COLOR_INVENTORY #BA55D3","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"!define COLOR_SPARE #FF69B4","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"!define COLOR_SPARE1 #FFFF00","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"!define COLOR_SPARE3 #00FF00","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"!define COLOR_MEDIVAULT_BOX #ADD8E6","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"!define COLOR_UTILITIES_BOX #FAEBD7","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"!define COLOR_COMMAND_BOX #E0FFFF","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"!define COLOR_ERRORS_BOX #F08080","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"!define COLOR_INVENTORY_BOX #DDA0DD","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"!define COLOR_SPARE_BOX #FFC0CB","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"!define COLOR_SPARE1_BOX #FFFACD","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"!define COLOR_SPARE3_BOX #98FB98","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"alvintan01":1,"a-tph":16}},{"path":"docs/team/a-tph.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"# Teo Phing Huei, Aeron - Project Portfolio Page","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"This is a student project for a university software development course and I am one of the contributors to `MediVault`.","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"## Summary of Contributions","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"Code contributed: more than 2000 lines of","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"code. [[RepoSense](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003da-tph\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003da-tph\u0026tabRepo\u003dAY2122S1-CS2113T-T10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)]","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"### Features","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"#### v1.0:","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"* Implemented `updatestock` command.","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"    * Functionality: Users are able to update stock information with one command.","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"    * Justification: Refrain the need to use both add and delete stock command.","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    * Pull request: [[#25](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/25)]","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"#### v2.0:","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"* Implemented `updateorder` command.","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    * Functionality: Users are able to update order information with one command.","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    * Justification: Refrain the need to use both add and delete order command.","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"    * Pull request: [[#121](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/121)]","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"* Implemented `updateprescription` command.","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"    * Functionality: Users are able to update prescription information with one command.","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"    * Justification: Refrain the need to use both add and delete prescription command.","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"    * Pull request: [[#184](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/184)]","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"### Enhancements to Existing Features","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"* Implemented universal `containsInvalidParameterValues()` method.","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"    * Functionality: Checks if all values provided by the user are valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"    * Justification: This method can be called at the start of `Command` classes that requires checking of valid user","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"      inputs for all parameters.","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    * Pull request: [[#40](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/40)]","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"* Included JUnit tests for:","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"    * `StockValidator` class","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"        * Pull request: [[#59](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/59)]","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"    * `MedicineManager` class","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"        * Pull request: [[#93](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/93)]","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"* Wrote and refractored `Manager` classes for `stock`, `prescription` and `order`.","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"    * Functionality: Contains methods that does specific `stock`, `prescription` or `order` method calls or operations.","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"    * Justification: Makes the overall code cleaner as methods are separated based on their different functionalities.","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"    * Pull","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"      requests: [[#69](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/69), [#141](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/141)]","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"* Added functionality for `deletestock` command to delete all expired stocks.","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"    * Functionality: Users can delete stocks given a specific date. All current existing stocks before the given","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"      specific date will be deleted.","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"    * Justification: Prevents user from prescribing expired medication to customers.","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"    * Pull request: [[#135](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/135)]","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"### Documentation","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"* [User Guide](../UserGuide.md)","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"    * Added documentation for `updatestock`, `updateprescription` and `updateorder` commands. [[#186](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/186)]","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"* [Developer Guide](../DeveloperGuide.md)","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"    * Created skeleton Developer guide for the team. [[#210](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/210)]","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"    * Included [[#213](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/213), [#270](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/270)]","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"        * Design","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"            * Architecture and Command components with class diagram and detailed explanation.","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"        * Implementation","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"            * Initial validation checker sequence diagram and detailed explanation under Main Logic","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"            * `UpdateStockCommand`, `UpdatePrescriptionCommand` and `UpdateOrderCommand` sequence diagrams and detailed","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"              explanation.","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"### Team-Based","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"* Created and contributed to [Trello](https://trello.com/b/nMVm0vgz/cs2113t-user-stories) dashboard.","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"* Attended weekly team meetings.","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"* Contributed to release managements.","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"* Ensured UG and DG has a consistent format.","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"* Pull Requests reviewed with non-trivial review comments. [[#171](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/171), [#295](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/295)]","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"### Community","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"* Reported bugs and provided suggestions for other teams in the class. [[#1](https://github.com/a-tph/ped/issues/1), [#2](https://github.com/a-tph/ped/issues/2), [#3](https://github.com/a-tph/ped/issues/3), [#4](https://github.com/a-tph/ped/issues/4), [#5](https://github.com/a-tph/ped/issues/5)]","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"a-tph":84}},{"path":"docs/team/alvintan01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"# Alvin Tan Guo Hao - Project Portfolio Page","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"This is a student project for a university software development course and I am one of the contributors to `MediVault`.","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"Code contributed: more than 3000 lines of","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"code. [[RepoSense](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dalvintan01\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dalvintan01\u0026tabRepo\u003dAY2122S1-CS2113T-T10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)]","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"### Features","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"v1.0 tasks:","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"- Implemented skeleton code for MediVault.","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    - Functionality: Users were able to type commands and parameters into MediVault.","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    - Justification: Valid commands will be accepted by MediVault. Else, InvalidCommandException will be thrown.","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#10](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/10)]","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"- Implemented `Ui` class for MediVault.","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    - Functionality: Handles all the printing done by MediVault.","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    - Justification: Users will be able to view the stocks, prescriptions and orders in a table format and any other","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"      error messages.","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#10](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/10)]","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"- Implemented sort for `liststock` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    - Functionality: Users will be able to sort any columns of the stocks in ascending or descending order.","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    - Justification: Users will be able to view the stocks in sorted order such as by ascending price.","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#45](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/45)]","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"- Implemented `exit` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    - Functionality: MediVault will quit when `exit` is received.","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    - Justification: Users will be able to quit the application.","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#10](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/10)]","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"- Implemented `purge` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    - Functionality: MediVault will clear all the data in the program when `purge` is received.","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    - Justification: Users will be able to easily clear all the data in MediVault.","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#13](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/13)]","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"- Took over `help` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"    - Functionality: MediVault will print a table to show the command parameters and syntax.","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    - Justification: Users will be able to view all the commands accepted by MediVault in one command. This is also to","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"      have a consistent theme throughout MediVault where most outputs are in table format.","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#45](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/45)]","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"v2.0 tasks:","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"- Implemented mode feature.","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"    - Functionality: MediVault will change modes when `stock`, `prescription` or `order` is received.","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"    - Justification: Users will be able to type shorter commands for operations in MediVault.","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#123](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/123)]","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"- Implemented sort for `listorder` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"    - Functionality: Users will be able to sort any columns of the orders in ascending or descending order.","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    - Justification: Users will be able to view the orders in sorted order such as by ascending date.","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#162](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/162)]","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"- Implemented `listprescription` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"    - Functionality: Users will be able to view all the prescriptions in a table and filter them.","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"    - Justification: Users will be filter the prescriptions by any column such as by customer ID.","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#181](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/181)]","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"- Implemented `receiveorder` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"    - Functionality: Users will be able to receive an order and add the order to the stocks.","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"    - Justification: Users will be able to mark an order as received and add it to the stocks in one step.","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#208](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/208)]","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"v2.1 tasks:","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"- Fixed bug where ID does not reset after `purge`.","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"  - Functionality: MediVault should reset the ID to 1 after `purge` command is executed.","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"  - Justification: To prevent user confusion as they expect ID to start from 1.","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"  - Pull request [[#280](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/280)]","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"- Fixed bug where whitespace renders command invalid.","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"  - Functionality: MediVault should ignore extra whitespaces at the start and end of commands.","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"  - Justification: To allow users to copy and paste commands ignoring extra whitespaces.","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"  - Pull request [[#280](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/280)]","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"- Fixed bug where `receiveorder` does not mark an order as delivered.","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"  - Functionality: MediVault should mark an order as delivered once `receiveorder` is executed successfully.","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"  - Justification: To prevent users from receiving an order multiple times.","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"  - Pull request [[#280](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/280)]","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"### Enhancements to Existing Features","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"- Added order quantity to `liststock` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"    - Functionality: `liststock` command would show the current pending order quantity in the quantity column.","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"    - Justification: To allow pharmacists to know easily if a new order was already placed.","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#109](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/109)]","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"- Refactor `HashMap\u003cString, String\u003e` to `LinkedHashMap\u003cString, String\u003e`.","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"    - Functionality: `LinkedHashMap\u003cString, String\u003e` would preserve the order of parameters","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"      unlike `HashMap\u003cString, String\u003e`.","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"    - Justification: This helps preserve the order of parameters input by the user as MediVault will take the last","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"      occurrence if the same parameter is provided multiple times.","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#123](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/123)]","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"- Refactor `command` objects.","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"    - Functionality: Removed the input parameters of the `execute()` function.","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"    - Justification: Most of the parameters like `Ui` can be made into a singleton.","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#133](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/133)]","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"- Refactor `Dispense` to `Prescription`","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"    - Functionality: Refactor `Dispense` object to `Prescription`.","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"    - Justification: From peer feedback, users were confused what `Dispense` was, as such our team decided","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"      that `Prescription` is a better word to use.","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"    - Pull request [[#208](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/208)]","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"### Documentation","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"- [User Guide](../UserGuide.md)","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"    - Added documentation for `mode`, `purge`, `exit`, `help`, `listprescription` and `receiveorder`. [[#97](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/97)], [[#208](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/208)]","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"    - Added command summary. [[#97](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/97)]","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"    - Reordered the sections into add, list, delete and update. [[#229](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/229)]","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"- [Developer Guide](../DeveloperGuide.md)","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"  - Design","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"    - Main application logic and explanation. [[#163](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/163)]","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"    - Validator class diagram and explanation. [[#198](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/198)]","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"    - Inventory class diagram and explanation. [[#198](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/198)]","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"  - Sections on `list` and `receiveorder` and their respective sequence diagrams. [[#163](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/163)], [[#223](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/223)]","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"### Team-Based","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"- Setting up the GitHub team org/repo.","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"- Assigning user stories to team members.","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"- Maintaining [Trello](https://trello.com/b/nMVm0vgz/cs2113t-user-stories) dashboard.","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"- Hosting weekly team meetings.","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"- Release management.","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"- Ensured UG and DG has a consistent format.","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"### Community","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"- Pull Requests reviewed with non-trivial review comments. [[#74](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/74)], [[#143](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/143)], [[#172](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/172)]","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"alvintan01":124}},{"path":"docs/team/deonchung.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"deonchung"},"content":"# Deon Chung Hui - Project Portfolio Page","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"This is a student project for a university software development course and I am one of the contributors to `MediVault`.","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"## Summary of Contributions","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"deonchung"},"content":"Code contributed: more than 1500 lines of","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"deonchung"},"content":"code. [RepoSense](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003ddeonchung\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25)","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"### Features","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"#### v1.0:","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"* Implemented `addstock` command.","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"    * Functionality: Users are able to add stock information with one command.","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"    * Justification: User will be able to add medication\u0027s price, quantity, maximum quantity, ","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"  description and expiry date using a single command.","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"    * Pull request: [[#23](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/23)]","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"#### v2.0:","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"* Implemented `addprescription` command.","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"    * Functionality: Users are able to add prescription information with one command.","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"    * Justification: Users will be able to track prescription of customers and also deducting the stock when prescribing medication.","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"    * Pull request: [[#74](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/74)]","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"* Implemented `deleteprescription` command.","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"    * Functionality: Users are able to delete prescription information with one command.","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"    * Justification: Users will be able to delete prescription from prescription list and ","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"  also deducting the adding the stock quantity back to stock with a single command.","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"    * Pull request: [[#147](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/147)]","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"* Implemented `deleteorder` command.","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"    * Functionality: Users are able to delete order information with one command.","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"    * Justification: Users will be able to delete order from the order list.","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"    * Pull request: [[#119](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/119)]","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"### Enhancements to Existing Features","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"* Implemented `Prescription Validator` method.","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"    * Functionality: Checks if prescription ID,customer ID, Staff Name,prescription date and prescription column/alias is valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"    * Justification: This method can be called for any of the prescription command that need to check for any of the inputs as stated above.","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"    * Pull request: [[#86](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/86)]","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"* Implemented `Order Validator` method.","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"    * Functionality: Checks if order ID, order status,order date and order column/alias is valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"deonchung"},"content":"    * Justification: This method can be called for any of the order command that need to check for any of the inputs as stated above.","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"    * Pull request: [[#119](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/119)]","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"* Implemented `getNotExpiredStockQuantity` method in `PrescriptionManager`","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"deonchung"},"content":"  * Functionality: Retrieves the total stock quantity for medicine with same name that has not expired.","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"  * Justification: This method can be called for any of the prescription command that need to retrieve quantity that has not expired.","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"  * Pull request: [[#295](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/295)]","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"deonchung"},"content":"* Included JUnit tests for:","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"deonchung"},"content":"    * `Prescription Validator` class","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"deonchung"},"content":"        * Pull request: [[#89](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/89)]","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"deonchung"},"content":"    * `Order Validator` class","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"deonchung"},"content":"        * Pull request: [[#140](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/140)]","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"deonchung"},"content":"        ","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"deonchung"},"content":"* Added functionality for `addstock` command to limit number of medication for stock.","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"deonchung"},"content":"    * Functionality: User will not be able to input quantity above the maximum quantity. ","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"deonchung"},"content":"    * Justification: Prevents user from adding too much medication to the stock.","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"deonchung"},"content":"    * Pull request: [[#42](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/42)]","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"deonchung"},"content":"### Documentation","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"deonchung"},"content":"* [User Guide](../UserGuide.md)","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"deonchung"},"content":"    * Added documentation for `addstock` commands","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"deonchung"},"content":"      . [[#96](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/96)]","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"deonchung"},"content":"    * Added documentation for `addprescription`, `deleteprescription` and `deleteorder` commands","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"deonchung"},"content":"      . [[#171](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/171)]","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"deonchung"},"content":"* [Developer Guide](../DeveloperGuide.md) ","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"deonchung"},"content":"  * Acknowledgement ","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"deonchung"},"content":"    * [[#194](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/194)]","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"deonchung"},"content":"  * Setting up environment","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"deonchung"},"content":"    * Added explanation on how to set up and start the program.","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"deonchung"},"content":"             [[#194](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/194)]","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"deonchung"},"content":"  * Implementation","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"deonchung"},"content":"    * `addstock`, `addprescription` ,`deleteprescription` and `UpdateOrderCommand` sequence diagrams and detailed explanation.","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"deonchung"},"content":"             [[#171](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/171)]","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"deonchung"},"content":"  * User stories","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"deonchung"},"content":"    * Added all the user stories.","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"deonchung"},"content":"             [[#255](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/255)]","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"deonchung"},"content":"  * Instruction for manual testing","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"deonchung"},"content":"    * Added details and explanation for manual testing.","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"deonchung"},"content":"             [[#258](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/258)]","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"deonchung"},"content":"### Team-Based","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"deonchung"},"content":"* Attended weekly team meetings.","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"deonchung"},"content":"* Release management.","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"deonchung"},"content":"* Pull Requests reviewed with non-trivial review comments. [[#298](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/298)","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"deonchung"},"content":"### Community","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"deonchung"},"content":"* Reported bugs and suggestions for other teams in the class. [[#1](https://github.com/deonchung/ped/issues/1)], [[#2](https://github.com/deonchung/ped/issues/2)],","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"deonchung"},"content":"  [[#3](https://github.com/deonchung/ped/issues/3)], [[#4](https://github.com/deonchung/ped/issues/4)], [[#5](https://github.com/deonchung/ped/issues/5)],   ","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"deonchung"},"content":"  [[#6](https://github.com/deonchung/ped/issues/6)], [[#7](https://github.com/deonchung/ped/issues/7)]","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"deonchung":101}},{"path":"docs/team/jiangweichen835.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiangweichen835"},"content":"# Jiang Weichen - Project Portfolio Page","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"jiangweichen835"},"content":"This is a student project for a university software development course and I am one of the contributors to `MediVault`.","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"jiangweichen835"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"jiangweichen835"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"jiangweichen835"},"content":"Code contributed: more than 600 lines of","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"jiangweichen835"},"content":"code. [[RepoSense](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djiangweichen835\u0026tabRepo\u003dAY2122S1-CS2113T-T10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)]","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"jiangweichen835"},"content":"### Features","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"jiangweichen835"},"content":"#### v1.0:","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"jiangweichen835"},"content":"* Implemented listing by medicine name and description to `liststock` command.","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"jiangweichen835"},"content":"  * Functionality: Users are able to search for medicine with one command.","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"jiangweichen835"},"content":"  * Justification: Users will be able to search for medicine by name or description.","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"jiangweichen835"},"content":"  * Pull request: [[#26](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/26)]","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"jiangweichen835"},"content":"#### v2.0:","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"jiangweichen835"},"content":"* Implemented `addorder` command.","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"jiangweichen835"},"content":"  * Functionality: Users are able to add order for medicine with one command.","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"jiangweichen835"},"content":"  * Justification: Users will be able to add medication\u0027s name, quantity and order date using a single command.","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"jiangweichen835"},"content":"  * Pull request: [[#139](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/139)]","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"jiangweichen835"},"content":"### Enhancements to Existing Features","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"jiangweichen835"},"content":"* Included JUnit tests for:","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"jiangweichen835"},"content":"  * `StockValidator` class","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"jiangweichen835"},"content":"  * `MedicineValidator` class","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"jiangweichen835"},"content":"  * Pull request: [[#91](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/91)]","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"jiangweichen835"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"jiangweichen835"},"content":"* Added functionality to `addorder` command to set order date as optional and limit order quantity","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"jiangweichen835"},"content":"  * Functionality: User will not be able to add order if total existing quantity in stock and order quantity exceeds maximum quantity.","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"jiangweichen835"},"content":"  Order date will be set as the date when user placed the order if order parameter not given. ","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"jiangweichen835"},"content":"  * Pull request: [[#172](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/172)]","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"jiangweichen835"},"content":"### Documentation","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"jiangweichen835"},"content":"* [User Guide](../UserGuide.md)","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"jiangweichen835"},"content":"  * Added documentations for `liststock` and `addorder` commands","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"jiangweichen835"},"content":"  * Pull request: [[#99](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/99)","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"jiangweichen835"},"content":"  , [#188](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/188)]","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"jiangweichen835"},"content":"* [Developer Guide](../DeveloperGuide.md)","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"jiangweichen835"},"content":"  * Implementation ","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"jiangweichen835"},"content":"    * `addorder` sequence diagram and detailed explanation.","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"jiangweichen835"},"content":"    * Pull request: [[#174](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/174)]","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"jiangweichen835":49}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# John Doe - Project Portfolio Page","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"This is a student project for a university software development course and I am one of the contributors to `MediVault`.","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"## Summary of Contributions","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"Given below are my contributions to the project","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"### Features","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"v1.0 tasks:","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"v2.0 tasks:","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"v2.1 tasks:","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"### Enhancements to Existing Features","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"### Documentation","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"- [User Guide](../UserGuide.md)","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"- [Developer Guide](../DeveloperGuide.md)","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"### Community","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"- Pull Requests reviewed with non-trivial review comments","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"-":4,"a-tph":23}},{"path":"docs/team/remusteo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"# Teo Chin Kai Remus - Project Portfolio Page","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"This is a student project for a university software development course and I am one of the contributors to `MediVault`.","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"Code contributed: more than 1600 lines of","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"code. [[RepoSense](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dRemusTeo\u0026tabRepo\u003dAY2122S1-CS2113T-T10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)]","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"### Features","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"#### v1.0:","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"* Implemented `deletestock` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"    * Functionality: Users are able to delete stock information with one command.","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"    * Justification: Allow user to delete stock information for whatever reason","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"    * Pull request: [[#19](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/19)]","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"  ","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"* Implemented `help` command. (Only implemented in 1.0, did not maintain it till the end)","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"  * Functionality: Users are able to display help information with one command.","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"  * Justification: Allow user to have some place to reference command usage.","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"  * Pull request: [[#27](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/27)]","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"  ","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"#### v2.0:","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"* Implemented `listorder` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"    * Functionality: Users are able to list order information with one command. User are also able to input optional parameters such as listing by id, name, quantity, date, status.","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"    * Justification: Allow user to see current order information. Allow user to specifically list order based on any column.","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"    * Pull request: [[#116](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/116), [#134](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/134), [#178](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/178)]","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"* Implemented `Storage` class. ","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"    * Functionality: Persistent Data Storage for Stock, Prescription \u0026 Order. MediVault will store Stock, Prescription and Orders into 3 files which are data/stock.txt, data/prescription.txt, data/order.txt respectively. Every operation that modifies any of the 3, will be stored in data file. On startup, MediVault will load from data files.","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"    * Justification: Allow user to retain data across sessions. ","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"    * Pull request: [[#127](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/127), [#183](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/183)]","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"  ","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"* Implemented `FileParser` class. ","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"    * Functionality: Data Validation for Stock, Prescription \u0026 Order data files. Throw error suggesting specific line in specific file to fix error if detected.","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"    * Justification: Prevent invalid input from entering MediVault through direct tampering of data file.","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"    * Pull request: [[#154](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/154), [#200](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/200)]","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"RemusTeo"},"content":"* Implemented `archiveprescription` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"RemusTeo"},"content":"    * Functionality: Archive prescriptions to remove prescriptions records \u003c\u003d specified date and input into a static file `data/prescriptions_archive.txt` that has readable format. ","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"RemusTeo"},"content":"    * Justification: Allow user to remove cluttered records. After long term usage will have many insignificant records. ","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"RemusTeo"},"content":"    * Pull request: [[#193](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/193), [#226](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/226)]","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"RemusTeo"},"content":"* Implemented `archiveorder` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"RemusTeo"},"content":"    * Functionality: Archive orders to remove DELIVERED order records \u003c\u003d specified date and input into a static file `data/order_archive.txt` that has readable format.","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"RemusTeo"},"content":"    * Justification: Allow user to remove cluttered records. After long term usage will have many insignificant records.","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"RemusTeo"},"content":"    * Pull request: [[#193](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/193), [#226](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/226)]","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"RemusTeo"},"content":"### Enhancements to Existing Features","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"RemusTeo"},"content":"* Added checking for existing stock in `StockValidator isValidStockId()` method.","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"RemusTeo"},"content":"    * Functionality: Check if stock already exists.","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"RemusTeo"},"content":"    * Justification: Cannot be a valid stockId if already exists in stock.","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"RemusTeo"},"content":"    * Pull request: [[#19](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/19)]","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"RemusTeo"},"content":"* Included JUnit tests for:","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"RemusTeo"},"content":"    * `isValidStockId()` method","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"RemusTeo"},"content":"        * Pull request: [[#55](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/55)]","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"RemusTeo"},"content":"    * `DateParser` class","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"RemusTeo"},"content":"        * Pull request: [[#90](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/90), [#125](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/125)]","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"RemusTeo"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"RemusTeo"},"content":"* Refactor all usage of `stockID` to `stockId` to maintain consistency with `orderId` and `prescriptionId`.","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"RemusTeo"},"content":"    * Functionality: Consistency","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"RemusTeo"},"content":"    * Justification: Consistency","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"RemusTeo"},"content":"    * Pull requests: [[#141](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/141)]","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"RemusTeo"},"content":"* Implemented `removeTime()` method in `DateParser`.","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"RemusTeo"},"content":"    * Functionality: Remove time from Date object.","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"RemusTeo"},"content":"    * Justification: For use when archiving to match user specified date.","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"RemusTeo"},"content":"    * Pull request: [[#222](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/222)]","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"RemusTeo"},"content":"### Documentation","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"RemusTeo"},"content":"* [User Guide](../UserGuide.md)","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"RemusTeo"},"content":"    * Added documentation for `deletestock`, `listorder`, `archiveorder`, `archiveprescription` commands","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"RemusTeo"},"content":"      . [[#101](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/101), [#176](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/176), [#202](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/202), [#228](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/228)]","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"RemusTeo"},"content":"    * Added documentation for `Data Storage`, `Data Editing`, `FAQ` sections in UG","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"RemusTeo"},"content":"      . [[#202](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/202)]","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"RemusTeo"},"content":"* [Developer Guide](../DeveloperGuide.md)","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"RemusTeo"},"content":"    * Storage Component","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"RemusTeo"},"content":"      . [[#282](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/282)]","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"RemusTeo"},"content":"    * Sections on `DeleteStockCommand`, `ArchivePrescriptionCommand`, `ArchiveOrderCommand`","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"RemusTeo"},"content":"      . [[#219](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/219), [#274](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/274)]","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"RemusTeo"},"content":"    * Value Proposition ","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"RemusTeo"},"content":"      . [[#266](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/266)]","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"RemusTeo"},"content":"    * Non Functional Requirements","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"RemusTeo"},"content":"      . [[#266](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/266)]","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"RemusTeo"},"content":"### Community","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"RemusTeo"},"content":"* Pull Requests reviewed with non-trivial review comments","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"RemusTeo"},"content":"  . [[#45](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/45), [#99](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/99), [#204](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/204), [#211](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/211), [#280](https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/280)]","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"RemusTeo"},"content":"* Reported bugs and suggestions for other teams in the class [[#1](https://github.com/RemusTeo/ped/issues/1), [#2](https://github.com/RemusTeo/ped/issues/2), [#3](https://github.com/RemusTeo/ped/issues/3), [#4](https://github.com/RemusTeo/ped/issues/4), [#5](https://github.com/RemusTeo/ped/issues/5), [#6](https://github.com/RemusTeo/ped/issues/6), [#7](https://github.com/RemusTeo/ped/issues/7), [#8](https://github.com/RemusTeo/ped/issues/8)]","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"RemusTeo":106}},{"path":"src/main/java/MediVault.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"import command.Command;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"import command.CommandList;","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import errors.InvalidCommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import utilities.parser.CommandParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import utilities.parser.Mode;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"import static utilities.parser.Mode.ORDER;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"import static utilities.parser.Mode.PRESCRIPTION;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"import static utilities.parser.Mode.STOCK;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":" * Helps to start the application, and initialise all variables.","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":" * It will continuously prompt for input from the user until \"EXIT\" is received.","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"public class MediVault {","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    private static Logger logger \u003d Logger.getLogger(\"MediVault\");","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    private Mode mode \u003d Mode.STOCK;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    public MediVault() {","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        medicines.addAll(storage.loadData());","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        logger.log(Level.INFO, \"All variables are initialised.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        logger.log(Level.INFO, \"Medivault is starting up\");","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        new MediVault().run();","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"     * Prompts input from user and processes it indefinitely until \"EXIT\" is received.","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    private void run() {","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        // Loops till exit is received","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"        while (true) {","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"            System.out.print(\"[\" + mode + \"] \u003e \");","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"            // Reads user input","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"            userInput \u003d ui.getInput();","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"            try {","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"                String[] userCommand \u003d commandParser.parseCommand(userInput);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"                String commandString \u003d userCommand[0];","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"                String commandParameters \u003d userCommand[1];","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"                // Check is user is changing modes","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"                if (commandString.equalsIgnoreCase(STOCK.name()) || commandString.equalsIgnoreCase(PRESCRIPTION.name())","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"                        || commandString.equalsIgnoreCase(ORDER.name())) {","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"                    mode \u003d commandParser.changeMode(ui, commandString, mode);","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"                    continue;","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"                Command command \u003d commandParser.processCommand(commandString, commandParameters, mode);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"                command.execute();","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"                if (commandString.equals(CommandList.EXIT)) { // User entered exit","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"                // Invalid Command","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"                ui.printInvalidCommandMessage();","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"                logger.log(Level.WARNING, \"An invalid command was entered!\");","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"        logger.log(Level.INFO, \"MediVault is shutting down\");","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":76,"RemusTeo":1,"a-tph":6}},{"path":"src/main/java/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" * Represents the generic command. Helps to declare the abstract methods. It is inherited by all commands.","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    protected LinkedHashMap\u003cString, String\u003e parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public abstract void execute();","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":12}},{"path":"src/main/java/command/CommandList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Represents all the commands available in the application.","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"public class CommandList {","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD \u003d \"add\";","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD_PRESCRIPTION \u003d \"addprescription\";","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD_STOCK \u003d \"addstock\";","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD_ORDER \u003d \"addorder\";","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String ARCHIVE \u003d \"archive\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"    public static final String ARCHIVE_ORDER \u003d \"archiveorder\";","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String ARCHIVE_PRESCRIPTION \u003d \"archiveprescription\";","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String DELETE_PRESCRIPTION \u003d \"deleteprescription\";","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String DELETE_STOCK \u003d \"deletestock\";","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String DELETE_ORDER \u003d \"deleteorder\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public static final String EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public static final String HELP \u003d \"help\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST_PRESCRIPTION \u003d \"listprescription\";","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST_STOCK \u003d \"liststock\";","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST_ORDER \u003d \"listorder\";","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public static final String PURGE \u003d \"purge\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public static final String RECEIVE \u003d \"receive\";","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    public static final String RECEIVE_ORDER \u003d \"receiveorder\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public static final String UPDATE \u003d \"update\";","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    public static final String UPDATE_STOCK \u003d \"updatestock\";","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    public static final String UPDATE_PRESCRIPTION \u003d \"updateprescription\";","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    public static final String UPDATE_ORDER \u003d \"updateorder\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":30,"RemusTeo":1}},{"path":"src/main/java/command/CommandParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Represents all the commands parameters used in the application.","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"public class CommandParameters {","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"    public static final String CUSTOMER_ID \u003d \"c\";","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"    public static final String DATE \u003d \"d\";","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    public static final String DESCRIPTION \u003d \"d\";","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    public static final String EXPIRING \u003d \"expiring\";","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String EXPIRY_DATE \u003d \"e\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String ID \u003d \"i\";","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String MAX_QUANTITY \u003d \"m\";","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME \u003d \"n\";","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String PRICE \u003d \"p\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String LOW \u003d \"low\";","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY \u003d \"q\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public static final String REVERSED_SORT \u003d \"rsort\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public static final String SORT \u003d \"sort\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final String STAFF \u003d \"s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"    public static final String STATUS \u003d \"s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public static final String STOCK_ID \u003d \"sid\";","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":22,"RemusTeo":1}},{"path":"src/main/java/command/CommandSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Contains all the valid command syntax accepted by the application. Also contains methods to validate if the","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" * parameter and its value is valid for a given command.","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"public class CommandSyntax {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"    private String commandName;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    private String commandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    public static final String COMMAND \u003d \"COMMAND\";","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String COMMAND_SYNTAX \u003d \"COMMAND SYNTAX\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String[] COLUMNS \u003d {COMMAND, COMMAND_SYNTAX};","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final int NO_OF_COLUMNS \u003d 2;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD_PRESCRIPTION_COMMAND \u003d \"addprescription n/NAME q/QUANTITY c/CUSTOMER_ID \"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"            + \"s/STAFF_NAME\";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD_STOCK_COMMAND \u003d \"addstock n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE \"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"            + \"(d/DESCRIPTION m/MAX_QUANTITY)\";","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD_ORDER_COMMAND \u003d \"addorder n/NAME q/QUANTITY {d/DATE}\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final String ARCHIVE_PRESCRIPTION_COMMAND \u003d \"archiveprescription d/DATE\";","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"    public static final String ARCHIVE_ORDER_COMMAND \u003d \"archiveorder d/DATE\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"    public static final String DELETE_STOCK_COMMAND \u003d \"deletestock [i/ID expiring/EXPIRY_DATE]\";","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"    public static final String DELETE_ORDER_COMMAND \u003d \"deleteorder i/ID\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public static final String DELETE_PRESCRIPTION_COMMAND \u003d \"deleteprescription i/ID\";","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public static final String EXIT_COMMAND \u003d \"exit\";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    public static final String HELP_COMMAND \u003d \"help\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST_PRESCRIPTION_COMMAND \u003d \"listprescription {i/ID q/QUANTITY c/CUSTOMER_ID d/DATE \"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"            + \"s/STAFF_NAME sid/STOCK_ID sort/COLUMN_NAME rsort/COLUMN_NAME}\";","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST_ORDER_COMMAND \u003d \"listorder {i/ID n/NAME q/QUANTITY d/DATE s/STATUS \"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"            + \"sort/COLUMN_NAME rsort/COLUMN_NAME}\";","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST_STOCK_COMMAND \u003d \"liststock {i/ID p/PRICE q/QUANTITY low/LESS_THAN_OR_EQUAL_QUANTITY\"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"            + \" e/EXPIRY_DATE expiring/LESS_THAN_OR_EQUAL_EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY sort/COLUMN_NAME\"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"            + \" rsort/COLUMN_NAME}\";","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    public static final String PURGE_COMMAND \u003d \"purge\";","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    public static final String RECEIVE_ORDER_COMMAND \u003d \"receiveorder i/ID p/PRICE e/EXPIRY_DATE (d/DESCRIPTION \"","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"            + \"m/MAX_QUANTITY)\";","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"    public static final String UPDATE_PRESCRIPTION_COMMAND \u003d \"updateprescription i/ID [n/NAME q/QUANTITY c/CUSTOMER_ID \"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"            + \"d/DATE s/STAFF_NAME]\";","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    public static final String UPDATE_ORDER_COMMAND \u003d \"updateorder i/ID [n/NAME q/QUANTITY d/DATE]\";","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    public static final String UPDATE_STOCK_COMMAND \u003d \"updatestock i/ID [n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE \"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"            + \"d/DESCRIPTION m/MAX_QUANTITY]\";","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    public CommandSyntax(String commandName, String commandSyntax) {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"        this.commandSyntax \u003d commandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"    public String getCommandName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"        return commandName;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"    public void setCommandName(String commandName) {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"    public String getCommandSyntax() {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"        return commandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"    public void setCommandSyntax(String commandSyntax) {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"        this.commandSyntax \u003d commandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":58,"RemusTeo":1,"deonchung":1,"a-tph":4}},{"path":"src/main/java/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" * Helps to process the exit command and prints the exit message.","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        storage.saveData(medicines);","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        ui.printExit();","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"alvintan01":23,"a-tph":2}},{"path":"src/main/java/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"package command;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" * Display help message containing command usage information.","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cCommandSyntax\u003e commandSyntaxes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.ADD_STOCK, CommandSyntax.ADD_STOCK_COMMAND));","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.DELETE_STOCK, CommandSyntax.DELETE_STOCK_COMMAND));","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.UPDATE_STOCK, CommandSyntax.UPDATE_STOCK_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.LIST_STOCK, CommandSyntax.LIST_STOCK_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.ADD_PRESCRIPTION, CommandSyntax.ADD_PRESCRIPTION_COMMAND));","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.DELETE_PRESCRIPTION,","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"                CommandSyntax.DELETE_PRESCRIPTION_COMMAND));","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.UPDATE_PRESCRIPTION,","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"                CommandSyntax.UPDATE_PRESCRIPTION_COMMAND));","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.LIST_PRESCRIPTION, CommandSyntax.LIST_PRESCRIPTION_COMMAND));","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.ARCHIVE_PRESCRIPTION,","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"                CommandSyntax.ARCHIVE_PRESCRIPTION_COMMAND));","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.ADD_ORDER, CommandSyntax.ADD_ORDER_COMMAND));","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.DELETE_ORDER, CommandSyntax.DELETE_ORDER_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.UPDATE_ORDER, CommandSyntax.UPDATE_ORDER_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.LIST_ORDER, CommandSyntax.LIST_ORDER_COMMAND));","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.ARCHIVE_ORDER, CommandSyntax.ARCHIVE_ORDER_COMMAND));","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.RECEIVE_ORDER, CommandSyntax.RECEIVE_ORDER_COMMAND));","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.PURGE, CommandSyntax.PURGE_COMMAND));","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.HELP, CommandSyntax.HELP_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.EXIT, CommandSyntax.EXIT_COMMAND));","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        ui.printHelpMessage(commandSyntaxes);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"alvintan01":39,"RemusTeo":5,"a-tph":1}},{"path":"src/main/java/command/PurgeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import inventory.Prescription;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":" * Helps to process the purge command and prompts the user for confirmation.","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"public class PurgeCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        ui.print(\"Are you sure you want to delete all data? (Y/N)\");","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        if (\"Y\".equals(in.nextLine())) {","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"            medicines.clear();","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"            // Reset the IDs for Stock, Prescription and Orders","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"            Stock.setStockCount(0);","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"            Prescription.setPrescriptionCount(0);","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"            Order.setOrderCount(0);","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"All data has been cleared!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"            storage.saveData(medicines);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Purge aborted!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":37,"a-tph":2}},{"path":"src/main/java/command/order/AddOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiangweichen835"},"content":"package command.order;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jiangweichen835"},"content":"import command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jiangweichen835"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jiangweichen835"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jiangweichen835"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Order;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"jiangweichen835"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jiangweichen835"},"content":"import utilities.parser.OrderManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import utilities.parser.OrderValidator;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jiangweichen835"},"content":"import utilities.parser.StockManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jiangweichen835"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"jiangweichen835"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jiangweichen835"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"jiangweichen835"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jiangweichen835"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"jiangweichen835"},"content":"//@@author jiangweichen835","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"jiangweichen835"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"jiangweichen835"},"content":" * Add order for medication based on user input.","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"jiangweichen835"},"content":" * User input include medication name, quantity and the order date.","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jiangweichen835"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"jiangweichen835"},"content":"public class AddOrderCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"jiangweichen835"},"content":"    private static Logger logger \u003d Logger.getLogger(\"AddOrder\");","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"jiangweichen835"},"content":"    public AddOrderCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jiangweichen835"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"jiangweichen835"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"jiangweichen835"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"jiangweichen835"},"content":"        logger.log(Level.INFO, \"Start addition of orders\");","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"jiangweichen835"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"jiangweichen835"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"jiangweichen835"},"content":"        String[] requiredParameters \u003d {CommandParameters.NAME, CommandParameters.QUANTITY};","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"jiangweichen835"},"content":"        String[] optionalParameter \u003d {CommandParameters.DATE};","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"jiangweichen835"},"content":"        OrderValidator orderValidator \u003d new OrderValidator();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"jiangweichen835"},"content":"        if (checkValidParameterValues(ui, parameters, medicines, requiredParameters, optionalParameter,","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"jiangweichen835"},"content":"                orderValidator)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"jiangweichen835"},"content":"            return;","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"jiangweichen835"},"content":"        boolean nameExistsInOrder \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"jiangweichen835"},"content":"        boolean nameExistsInStock \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"jiangweichen835"},"content":"        String nameToAdd \u003d parameters.get(CommandParameters.NAME);","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"jiangweichen835"},"content":"        String quantityToAdd \u003d parameters.get(CommandParameters.QUANTITY);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"jiangweichen835"},"content":"        int orderQuantity \u003d Integer.parseInt(quantityToAdd);","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"jiangweichen835"},"content":"        String dateToAdd \u003d parameters.get(CommandParameters.DATE);","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"jiangweichen835"},"content":"        int maxQuantity \u003d Integer.MAX_VALUE;","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"jiangweichen835"},"content":"        if (orderQuantity \u003d\u003d 0) {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"jiangweichen835"},"content":"            ui.print(\"Order Quantity cannot be 0.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"jiangweichen835"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"jiangweichen835"},"content":"        if (parameters.containsKey(CommandParameters.NAME)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"jiangweichen835"},"content":"            nameToAdd \u003d parameters.get(CommandParameters.NAME);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"jiangweichen835"},"content":"            for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"jiangweichen835"},"content":"                if (medicine instanceof Order \u0026\u0026 medicine.getMedicineName().equalsIgnoreCase(nameToAdd)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"jiangweichen835"},"content":"                    nameExistsInOrder \u003d true;","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"jiangweichen835"},"content":"                    break;","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"jiangweichen835"},"content":"                }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"jiangweichen835"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"jiangweichen835"},"content":"        if (nameExistsInOrder) {","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"jiangweichen835"},"content":"            if (parameters.containsKey(CommandParameters.NAME)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"jiangweichen835"},"content":"                nameToAdd \u003d parameters.get(CommandParameters.NAME);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"jiangweichen835"},"content":"                for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"jiangweichen835"},"content":"                    if (medicine instanceof Stock \u0026\u0026 medicine.getMedicineName().equalsIgnoreCase(nameToAdd)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"jiangweichen835"},"content":"                        nameExistsInStock \u003d true;","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"jiangweichen835"},"content":"                        break;","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"jiangweichen835"},"content":"                    }","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"jiangweichen835"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"jiangweichen835"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"jiangweichen835"},"content":"            if (!nameExistsInStock) {","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"jiangweichen835"},"content":"                if (orderQuantity \u003c maxQuantity) {","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"jiangweichen835"},"content":"                    addOrder(ui, medicines, nameToAdd, orderQuantity, addDate(dateToAdd));","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"jiangweichen835"},"content":"                }","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"jiangweichen835"},"content":"            } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"jiangweichen835"},"content":"                int existingOrdersQuantity \u003d OrderManager.getTotalOrderQuantity(medicines, nameToAdd);","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"jiangweichen835"},"content":"                int existingStockQuantity \u003d StockManager.getTotalStockQuantity(medicines, nameToAdd);","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"jiangweichen835"},"content":"                int totalQuantity \u003d existingStockQuantity + existingOrdersQuantity;","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"jiangweichen835"},"content":"                maxQuantity \u003d StockManager.getMaxStockQuantity(medicines, nameToAdd);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"jiangweichen835"},"content":"                if (orderQuantity + totalQuantity \u003c\u003d maxQuantity) {","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"jiangweichen835"},"content":"                    addOrder(ui, medicines, nameToAdd, orderQuantity, addDate(dateToAdd));","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"jiangweichen835"},"content":"                } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"jiangweichen835"},"content":"                    ui.print(\"Order for \" + nameToAdd + \" exists.\\nUnable to add order as total order quantity \"","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"jiangweichen835"},"content":"                            + \"exceeds maximum stock quantity of \" + maxQuantity + \".\\nExisting quantity in stock: \"","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"jiangweichen835"},"content":"                            + existingStockQuantity + \"\\nPending order quantity: \" + existingOrdersQuantity);","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"jiangweichen835"},"content":"                }","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"jiangweichen835"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"jiangweichen835"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"jiangweichen835"},"content":"            addOrder(ui, medicines, nameToAdd, orderQuantity, addDate(dateToAdd));","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"jiangweichen835"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"jiangweichen835"},"content":"     * Add order based on user input.","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"jiangweichen835"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"jiangweichen835"},"content":"     * @param ui        Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"jiangweichen835"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"jiangweichen835"},"content":"     * @param name      Medication name to order.","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"jiangweichen835"},"content":"     * @param quantity  Quantity of medication to order.","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"jiangweichen835"},"content":"     * @param date      Order date.","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"jiangweichen835"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"jiangweichen835"},"content":"    private void addOrder(Ui ui, ArrayList\u003cMedicine\u003e medicines, String name, int quantity, Date date) {","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"jiangweichen835"},"content":"        Order order \u003d new Order(name, quantity, date);","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"jiangweichen835"},"content":"        medicines.add(order);","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"jiangweichen835"},"content":"        ui.print(\"Order added: \" + name);","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"jiangweichen835"},"content":"        ui.printOrder(order);","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"jiangweichen835"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"jiangweichen835"},"content":"        storage.saveData(medicines);","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"jiangweichen835"},"content":"        logger.log(Level.INFO, \"Successful addition of order\");","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"jiangweichen835"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"jiangweichen835"},"content":"     * Add date based on user input.","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"jiangweichen835"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"jiangweichen835"},"content":"     * @param dateToAdd Order date input by user (check if it is in correct date format).","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"jiangweichen835"},"content":"     * @return Default date or order date.","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"jiangweichen835"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"jiangweichen835"},"content":"    private Date addDate(String dateToAdd) {","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"jiangweichen835"},"content":"        if (dateToAdd \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"jiangweichen835"},"content":"            Date defaultDate \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"jiangweichen835"},"content":"            defaultDate \u003d new Date();","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"jiangweichen835"},"content":"            return defaultDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"jiangweichen835"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"jiangweichen835"},"content":"            Date orderDate \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"jiangweichen835"},"content":"            orderDate \u003d DateParser.stringToDate(dateToAdd);","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"jiangweichen835"},"content":"            return orderDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"jiangweichen835"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"jiangweichen835"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"jiangweichen835"},"content":"        return null;","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"jiangweichen835"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"jiangweichen835"},"content":"     * Checks if user inputs are valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"jiangweichen835"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"jiangweichen835"},"content":"     * @param ui                 Reference to the UI object to print messages.","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"jiangweichen835"},"content":"     * @param parameters         The parameter that is not found.","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"jiangweichen835"},"content":"     * @param medicines          List of all medicines.","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"jiangweichen835"},"content":"     * @param requiredParameters The required parameters to check.","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"jiangweichen835"},"content":"     * @param optionalParameters The optional parameters to check.","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"jiangweichen835"},"content":"     * @param orderValidator     Reference to OrderValidator object.","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"jiangweichen835"},"content":"     * @return Boolean value indicating if parameter and parameter values are valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"jiangweichen835"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"jiangweichen835"},"content":"    private boolean checkValidParameterValues(Ui ui, LinkedHashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"jiangweichen835"},"content":"                                              ArrayList\u003cMedicine\u003e medicines, String[] requiredParameters,","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"jiangweichen835"},"content":"                                              String[] optionalParameters, OrderValidator orderValidator) {","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"jiangweichen835"},"content":"        boolean isInvalidInput \u003d orderValidator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"jiangweichen835"},"content":"                requiredParameters, optionalParameters, CommandSyntax.ADD_ORDER_COMMAND, false, orderValidator);","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"jiangweichen835"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"jiangweichen835"},"content":"            logger.log(Level.WARNING, \"Invalid parameter or value specified by user\");","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"jiangweichen835"},"content":"            return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"jiangweichen835"},"content":"        return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"jiangweichen835"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"alvintan01":2,"jiangweichen835":168,"a-tph":4}},{"path":"src/main/java/command/order/ArchiveOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"package command.order;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import command.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"import utilities.parser.OrderValidator;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"//@@author RemusTeo","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":" * Archive orders based on user input given date.","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"public class ArchiveOrderCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ArchiveOrder\");","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"    public ArchiveOrderCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"        logger.log(Level.INFO, \"Start archiving of order\");","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"        String[] requiredParameters \u003d {CommandParameters.DATE};","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"        MedicineValidator validator \u003d new OrderValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"                requiredParameters, optionalParameters, CommandSyntax.ARCHIVE_ORDER_COMMAND, true, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"RemusTeo"},"content":"            logger.log(Level.INFO, \"Unsuccessful archive of order\");","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"RemusTeo"},"content":"            return;","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"RemusTeo"},"content":"        Date orderArchiveDate \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"RemusTeo"},"content":"        String orderArchiveDateStr \u003d parameters.get(CommandParameters.DATE);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"RemusTeo"},"content":"            orderArchiveDate \u003d DateParser.stringToDate(orderArchiveDateStr);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"RemusTeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"RemusTeo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cMedicine\u003e filteredOrders \u003d ordersToArchive(medicines, orderArchiveDate);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"RemusTeo"},"content":"        removeFromOrders(medicines, filteredOrders);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"RemusTeo"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"RemusTeo"},"content":"        storage.archiveData(filteredOrders);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"RemusTeo"},"content":"        storage.saveData(medicines);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"RemusTeo"},"content":"        ui.print(\"Archived \" + filteredOrders.size() + \" delivered orders from \"","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"RemusTeo"},"content":"                + DateParser.dateToString(orderArchiveDate));","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"RemusTeo"},"content":"        logger.log(Level.INFO, \"Successful archive of order\");","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"RemusTeo"},"content":"     * Checks through all orders and look for records that are DELIVERED and have order date \u003c\u003d specified date.","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"RemusTeo"},"content":"     * @param medicines        Arraylist of all medicines.","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"RemusTeo"},"content":"     * @param orderArchiveDate Date that user specified to archive.","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"RemusTeo"},"content":"     * @return Arraylist of orders that meet the archive requirements.","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"RemusTeo"},"content":"    private ArrayList\u003cMedicine\u003e ordersToArchive(ArrayList\u003cMedicine\u003e medicines, Date orderArchiveDate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cMedicine\u003e filteredOrders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"RemusTeo"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"RemusTeo"},"content":"            if (!(medicine instanceof Order)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"RemusTeo"},"content":"                continue;","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"RemusTeo"},"content":"            Order order \u003d (Order) medicine;","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"RemusTeo"},"content":"            Date orderDate \u003d DateParser.removeTime(order.getDate());","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"RemusTeo"},"content":"            if (order.getStatus().equalsIgnoreCase(\"DELIVERED\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"RemusTeo"},"content":"                if (orderDate.before(orderArchiveDate) || orderDate.equals(orderArchiveDate)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"RemusTeo"},"content":"                    filteredOrders.add(order);","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"RemusTeo"},"content":"                }","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"RemusTeo"},"content":"        return filteredOrders;","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"RemusTeo"},"content":"     * Removal of orders from order list after archive.","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"RemusTeo"},"content":"     * @param medicines      Arraylist of all medicines.","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"RemusTeo"},"content":"     * @param filteredOrders Arraylist of orders that meet the archive requirements.","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"RemusTeo"},"content":"    private void removeFromOrders(ArrayList\u003cMedicine\u003e medicines, ArrayList\u003cMedicine\u003e filteredOrders) {","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"RemusTeo"},"content":"        for (Medicine medicine : filteredOrders) {","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"RemusTeo"},"content":"            medicines.remove(medicine);","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"RemusTeo":105,"a-tph":1}},{"path":"src/main/java/command/order/DeleteOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deonchung"},"content":"package command.order;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"import command.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.OrderValidator;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"//@@author deonchung","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":" * Delete order based on user input given order id.","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"public class DeleteOrderCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Delete Order\");","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"    public DeleteOrderCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"        logger.log(Level.INFO, \"Start deletion of order\");","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"        String orderIdToDelete \u003d parameters.get(CommandParameters.ID);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"        if (!isValidOrderParameters(ui, medicines, orderIdToDelete)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"            return;","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"        int orderId \u003d Integer.parseInt(orderIdToDelete);","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"        assert orderId \u003c\u003d Order.getOrderCount() : \"order Id should not exceed max order count\";","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"deonchung"},"content":"            if (!(medicine instanceof Order)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"                continue;","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"deonchung"},"content":"            Order order \u003d (Order) medicine;","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"            if (order.getOrderId() \u003d\u003d orderId) {","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"                medicines.remove(order);","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"deonchung"},"content":"                logger.log(Level.INFO, \"Order id found and deleted\");","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"deonchung"},"content":"        ui.print(\"Order deleted for Order ID \" + orderId);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"deonchung"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"deonchung"},"content":"        storage.saveData(medicines);","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"deonchung"},"content":"        logger.log(Level.INFO, \"Successful deletion of order\");","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"deonchung"},"content":"     * Check if parameters values for Order are valid and if Order ID exist.","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"deonchung"},"content":"     * @param ui              Reference to the UI object to print messages.","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"deonchung"},"content":"     * @param medicines       Arraylist of medicines","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"deonchung"},"content":"     * @param orderIdToDelete Order ID to delete.","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"deonchung"},"content":"     * @return Boolean Value indicating if parameters values for Order are valid and Order ID exist.","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"deonchung"},"content":"    private boolean isValidOrderParameters(Ui ui, ArrayList\u003cMedicine\u003e medicines, String orderIdToDelete) {","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"deonchung"},"content":"        MedicineValidator validator \u003d new OrderValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"deonchung"},"content":"        String[] requiredParameters \u003d {CommandParameters.ID};","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"deonchung"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"deonchung"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"deonchung"},"content":"                requiredParameters, optionalParameters, CommandSyntax.DELETE_ORDER_COMMAND, false, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"deonchung"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"deonchung"},"content":"            logger.log(Level.WARNING, \"Invalid parameter or value specified by user\");","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"deonchung"},"content":"            logger.log(Level.INFO, \"Unsuccessful deletion of order\");","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"deonchung"},"content":"            return false;","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"deonchung"},"content":"        return true;","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"alvintan01":2,"deonchung":90,"a-tph":3}},{"path":"src/main/java/command/order/ListOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"package command.order;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import command.Command;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import utilities.comparators.OrderComparator;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import utilities.parser.OrderValidator;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"//@@author RemusTeo","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":" * Helps to process the listorder command together with filters and sort.","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"public class ListOrderCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ListOrder\");","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"    public ListOrderCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"        logger.log(Level.INFO, \"Start listing of order records\");","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"        String[] requiredParameters \u003d {};","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"        String[] optionalParameters \u003d {CommandParameters.ID, CommandParameters.NAME, CommandParameters.QUANTITY,","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"                CommandParameters.DATE, CommandParameters.STATUS, CommandParameters.SORT,","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"                CommandParameters.REVERSED_SORT};","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"        MedicineValidator validator \u003d new OrderValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"RemusTeo"},"content":"                requiredParameters, optionalParameters, CommandSyntax.LIST_ORDER_COMMAND, false, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"RemusTeo"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"RemusTeo"},"content":"            return;","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cOrder\u003e filteredOrders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"RemusTeo"},"content":"        assert (filteredOrders !\u003d null) : \"Array is not initialised\";","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"RemusTeo"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"RemusTeo"},"content":"            if (medicine instanceof Order) {","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"RemusTeo"},"content":"                filteredOrders.add((Order) medicine);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"RemusTeo"},"content":"        filteredOrders \u003d filterOrders(parameters, filteredOrders);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"RemusTeo"},"content":"        ui.printOrders(filteredOrders);","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"RemusTeo"},"content":"        logger.log(Level.INFO, \"Successful listing of order\");","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"RemusTeo"},"content":"     * Helps to filter order records based on the user\u0027s input.","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"RemusTeo"},"content":"     * @param parameters     HashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"RemusTeo"},"content":"     * @param filteredOrders Arraylist of Order objects.","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"RemusTeo"},"content":"     * @return Arraylist of filtered Order objects based on the user\u0027s parameters values.","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"RemusTeo"},"content":"    private ArrayList\u003cOrder\u003e filterOrders(LinkedHashMap\u003cString, String\u003e parameters, ArrayList\u003cOrder\u003e filteredOrders) {","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"RemusTeo"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"RemusTeo"},"content":"            String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"RemusTeo"},"content":"            switch (parameter) {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"RemusTeo"},"content":"            case CommandParameters.ID:","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"RemusTeo"},"content":"                filteredOrders \u003d (ArrayList\u003cOrder\u003e) filteredOrders.stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"RemusTeo"},"content":"                        .filter((m) -\u003e (m).getOrderId() \u003d\u003d Integer.parseInt(parameterValue))","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"RemusTeo"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"RemusTeo"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"RemusTeo"},"content":"            case CommandParameters.NAME:","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"RemusTeo"},"content":"                filteredOrders \u003d (ArrayList\u003cOrder\u003e) filteredOrders.stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"RemusTeo"},"content":"                        .filter((m) -\u003e (m.getMedicineName().toUpperCase()).contains(parameterValue.toUpperCase()))","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"RemusTeo"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"RemusTeo"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"RemusTeo"},"content":"            case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"RemusTeo"},"content":"                filteredOrders \u003d (ArrayList\u003cOrder\u003e) filteredOrders.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"RemusTeo"},"content":"                        m.getQuantity() \u003d\u003d Integer.parseInt(parameterValue)).collect(Collectors.toList());","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"RemusTeo"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"RemusTeo"},"content":"            case CommandParameters.DATE:","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"RemusTeo"},"content":"                try {","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"RemusTeo"},"content":"                    Date date \u003d DateParser.stringToDate(parameterValue);","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"RemusTeo"},"content":"                    filteredOrders \u003d (ArrayList\u003cOrder\u003e) filteredOrders.stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"RemusTeo"},"content":"                            .filter((m) -\u003e (m).getDate().equals(date))","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"RemusTeo"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"RemusTeo"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"RemusTeo"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"RemusTeo"},"content":"                }","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"RemusTeo"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"RemusTeo"},"content":"            case CommandParameters.STATUS:","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"RemusTeo"},"content":"                filteredOrders \u003d (ArrayList\u003cOrder\u003e) filteredOrders.stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"RemusTeo"},"content":"                        .filter((m) -\u003e (m.getStatus()).equalsIgnoreCase(parameterValue))","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"RemusTeo"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"RemusTeo"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"RemusTeo"},"content":"            case CommandParameters.SORT:","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"RemusTeo"},"content":"                filteredOrders.sort(new OrderComparator(parameterValue.toLowerCase(), false));","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"RemusTeo"},"content":"                break;","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"RemusTeo"},"content":"            case CommandParameters.REVERSED_SORT:","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"RemusTeo"},"content":"                filteredOrders.sort(new OrderComparator(parameterValue.toLowerCase(), true));","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"RemusTeo"},"content":"                break;","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"RemusTeo"},"content":"            default:","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"RemusTeo"},"content":"                return filteredOrders;","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"RemusTeo"},"content":"        return filteredOrders;","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"alvintan01":2,"RemusTeo":114,"a-tph":4}},{"path":"src/main/java/command/order/ReceiveOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command.order;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import command.stock.AddStockCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"deonchung"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import utilities.parser.OrderValidator;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import utilities.parser.StockValidator;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":" * Helps to add an order to stocks and mark the order as delivered.","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"public class ReceiveOrderCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ReceiveOrder\");","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public ReceiveOrderCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    public void execute() {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        if (!checkOrderIdExist(ui, medicines)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        int orderId \u003d Integer.parseInt(parameters.get(CommandParameters.ID));","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        parameters.remove(CommandParameters.ID); // Remove ID to prevent checks against stock ID","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"        String name \u003d \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        Order existingOrder \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"            if (medicine instanceof Order \u0026\u0026 ((Order) medicine).getOrderId() \u003d\u003d orderId","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"                    \u0026\u0026 !((Order) medicine).isDelivered()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"                existingOrder \u003d (Order) medicine; // Found existing order, add to parameters","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"                name \u003d existingOrder.getMedicineName();","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"                parameters.put(CommandParameters.NAME, name);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"                parameters.put(CommandParameters.QUANTITY, String.valueOf(existingOrder.getQuantity()));","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"        if (!isStockParametersValid(ui, medicines, name)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"        assert (existingOrder !\u003d null) : \"Order object is not initialised!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"        int currentQuantity \u003d getCurrentQuantity(medicines, name);","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"        new AddStockCommand(parameters).execute(); // Add to stock","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"        int afterAddedQuantity \u003d getCurrentQuantity(medicines, name);","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"        // Check if quantity increased","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"        if (afterAddedQuantity \u003e currentQuantity) {","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"            existingOrder.setDelivered();","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"     * Check if same medication name and expiry date exist and returns the current quantity.","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"     * @param name      Medication name to be searched.","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"     * @return Integer value indicating the current quantity.","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"    private int getCurrentQuantity(ArrayList\u003cMedicine\u003e medicines, String name) {","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"        int currentQuantity \u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"        String expiryToAdd \u003d parameters.get(CommandParameters.EXPIRY_DATE);","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"        Date expiryDate \u003d null;","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"            expiryDate \u003d DateParser.stringToDate(expiryToAdd);","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"            if (medicine instanceof Stock \u0026\u0026 medicine.getMedicineName().equalsIgnoreCase(name)","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"                    \u0026\u0026 !((Stock) medicine).isDeleted() \u0026\u0026 ((Stock) medicine).getExpiry().equals(expiryDate)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"                currentQuantity \u003d medicine.getQuantity();","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"        return currentQuantity;","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medication exists in stock.","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"     * @param name      Medication name to be searched.","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if the stock exists.","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"    private boolean checkStockExist(ArrayList\u003cMedicine\u003e medicines, String name) {","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"        // Search if current medication exist in stock","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"            if (medicine instanceof Stock \u0026\u0026 medicine.getMedicineName().equalsIgnoreCase(name)","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"                    \u0026\u0026 !((Stock) medicine).isDeleted()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"                return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"     * Checks if an order ID exists and is not delivered.","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"     * @param ui        Reference to UI object to print messages.","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if order ID is valid.","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"    private boolean checkOrderIdExist(Ui ui, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"        MedicineValidator validator \u003d new OrderValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"        String[] orderRequiredParameters \u003d {CommandParameters.ID};","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e orderParameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"        if (parameters.containsKey(CommandParameters.ID)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"            orderParameters.put(CommandParameters.ID, parameters.get(CommandParameters.ID));","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"        boolean orderIdNotProvided \u003d validator.containsInvalidParametersAndValues(ui, medicines, orderParameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"                orderRequiredParameters, optionalParameters, CommandSyntax.RECEIVE_ORDER_COMMAND, false, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"        if (orderIdNotProvided) {","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"            logger.log(Level.WARNING, \"Order id is not specified by user!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"        int orderId \u003d Integer.parseInt(parameters.get(CommandParameters.ID));","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"            if (!(medicine instanceof Order)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"                continue;","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"            Order order \u003d (Order) medicine;","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"            if (order.getOrderId() \u003d\u003d orderId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"                if (order.isDelivered()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"                    ui.print(\"Order is already delivered!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"                    return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"                } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"                    return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"     * Helps to ensure that the parameters values for Stock are valid.","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"     * @param ui        Reference to UI object to print messages.","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"     * @param name      Medication name to be searched.","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if Stock parameters are valid.","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"    private boolean isStockParametersValid(Ui ui, ArrayList\u003cMedicine\u003e medicines, String name) {","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"        MedicineValidator validator \u003d new StockValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"alvintan01"},"content":"        String[] requiredParameters \u003d {CommandParameters.PRICE, CommandParameters.EXPIRY_DATE};","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"        if (!checkStockExist(medicines, name)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"alvintan01"},"content":"            requiredParameters \u003d new String[]{CommandParameters.PRICE, CommandParameters.EXPIRY_DATE,","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"alvintan01"},"content":"                    CommandParameters.DESCRIPTION, CommandParameters.MAX_QUANTITY};","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"alvintan01"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"alvintan01"},"content":"                requiredParameters, optionalParameters, CommandSyntax.RECEIVE_ORDER_COMMAND, false, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":180,"author":{"gitId":"alvintan01"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"alvintan01"},"content":"            logger.log(Level.WARNING, \"Invalid parameter or value specified by user\");","lastModifiedDate":"2021-11-03"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"alvintan01"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"alvintan01":182,"deonchung":3,"a-tph":1}},{"path":"src/main/java/command/order/UpdateOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package command.order;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import command.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import utilities.parser.OrderManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import utilities.parser.OrderValidator;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import utilities.parser.StockManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"import utilities.parser.StockValidator;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"//@@author a-tph","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":" * Update medication information based on user input given order id.","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"public class UpdateOrderCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"    private static Logger logger \u003d Logger.getLogger(\"UpdateOrder\");","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"    public UpdateOrderCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"        logger.log(Level.INFO, \"Start of UpdateOrder command execution.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"        String[] requiredParameters \u003d {CommandParameters.ID};","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"        String[] optionalParameters \u003d {CommandParameters.NAME, CommandParameters.QUANTITY, CommandParameters.DATE};","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"        MedicineValidator validator \u003d new OrderValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"                requiredParameters, optionalParameters, CommandSyntax.UPDATE_ORDER_COMMAND, true, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"        Order order \u003d OrderManager.extractOrderObject(parameters, medicines);","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"        if (order.isDelivered()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Update aborted! Unable to update order that has been delivered\");","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"        int maxQuantity \u003d StockManager.getMaxStockQuantity(medicines, order.getMedicineName());","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"        assert maxQuantity \u003e\u003d 0 : \"Max quantity must not be less than 0\";","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"        boolean existName \u003d maxQuantity \u003e 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"        boolean existQuantityParam \u003d parameters.containsKey(CommandParameters.QUANTITY);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"        if (existName \u0026\u0026 existQuantityParam) {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"            boolean isValidQuantity \u003d checkUpdateQuantity(ui, medicines, order, maxQuantity);","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"            if (!isValidQuantity) {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"                return;","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cOrder\u003e filteredOrders \u003d OrderManager.getFilteredOrdersByName(medicines, order.getMedicineName());","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"        // Default value for updating all affected rows","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"        int rowsAffected \u003d filteredOrders.size();","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"        if (!parameters.containsKey(CommandParameters.NAME)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"            filteredOrders.clear();","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"            filteredOrders.add(order);","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"            rowsAffected \u003d filteredOrders.size();","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"        setUpdatesByOrderId(filteredOrders, order);","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"        ui.print(\"Updated! Number of rows affected: \" + rowsAffected);","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"        ui.printOrders(filteredOrders);","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"        storage.saveData(medicines);","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"        logger.log(Level.INFO, \"End of UpdateOrder command execution.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"     * Checks if the updated order quantity exceeds the maximum quantity.","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"     * @param ui          Reference to the UI object to print messages.","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"     * @param medicines   Arraylist of all medicines.","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"     * @param order       Order object to be updated.","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"     * @param maxQuantity Maximum quantity for the provided stock.","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"     * @return Boolean true if quantity given can be updated.","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"    private boolean checkUpdateQuantity(Ui ui, ArrayList\u003cMedicine\u003e medicines, Order order, int maxQuantity) {","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"        int totalQuantity \u003d OrderManager.getTotalOrderQuantity(medicines, order.getMedicineName());","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"        int orderQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.QUANTITY));","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"        int actualTotalQuantity \u003d totalQuantity - order.getQuantity() + orderQuantity;","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"        StockValidator stockValidator \u003d new StockValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"        boolean isValidQuantity \u003d stockValidator.quantityValidityChecker(ui, actualTotalQuantity, maxQuantity);","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"        if (!isValidQuantity) {","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"        return true;","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"     * Update values provided by user for a given order id.","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"     * @param filteredOrders Arraylist of filtered medicine orders.","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"     * @param order          Order object of the given order id.","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"    private void setUpdatesByOrderId(ArrayList\u003cOrder\u003e filteredOrders, Order order) {","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"        logger.log(Level.INFO, \"Attempt to update order information.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"            String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"            switch (parameter) {","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.NAME:","lastModifiedDate":"2021-10-15"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"                for (Order targetOrder : filteredOrders) {","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"                    targetOrder.setMedicineName(parameterValue);","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"                order.setQuantity(Integer.parseInt(parameterValue));","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.DATE:","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"                try {","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"                    order.setDate(DateParser.stringToDate(parameterValue));","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"            default:","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"        logger.log(Level.INFO, \"Updated order information with given user input.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"alvintan01":1,"a-tph":141}},{"path":"src/main/java/command/prescription/AddPrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command.prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"import command.Command;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import utilities.parser.PrescriptionValidator;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"import utilities.parser.PrescriptionManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"import utilities.parser.StockManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"//@@author deonchung","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":" * Prescribes medication based on user input.","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":" * User input includes medication name, quantity to prescribe, Customer\u0027s NRIC and Staff name.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"public class AddPrescriptionCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"    public AddPrescriptionCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"        String medicationName \u003d parameters.get(CommandParameters.NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"        String quantity \u003d parameters.get(CommandParameters.QUANTITY);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"        String customerId \u003d parameters.get(CommandParameters.CUSTOMER_ID);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"        String staffName \u003d parameters.get(CommandParameters.STAFF);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"        String[] requiredParameters \u003d {CommandParameters.NAME, CommandParameters.QUANTITY,","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"                CommandParameters.CUSTOMER_ID, CommandParameters.STAFF};","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"        MedicineValidator validator \u003d new PrescriptionValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"deonchung"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"                requiredParameters, optionalParameters, CommandSyntax.ADD_PRESCRIPTION_COMMAND, false, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"            return;","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"        int prescriptionQuantity \u003d Integer.parseInt(quantity);","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"        int quantityToPrescribe \u003d prescriptionQuantity;","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"deonchung"},"content":"        if (quantityToPrescribe \u003d\u003d 0) {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Prescription Quantity cannot be 0.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"deonchung"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"deonchung"},"content":"        ArrayList\u003cStock\u003e filteredStocks \u003d StockManager.getFilteredStocksByName(medicines, medicationName);","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"deonchung"},"content":"        if (filteredStocks.isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Medicine not available!\");","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"deonchung"},"content":"            return;","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"deonchung"},"content":"        Date prescribeDate \u003d new Date(); //prescribe date will be today\u0027s date","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"deonchung"},"content":"        String prescribeDateString \u003d DateParser.dateToString(prescribeDate);","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"deonchung"},"content":"        filteredStocks.sort(new utilities.comparators.StockComparator(CommandParameters.EXPIRY_DATE, false));","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"deonchung"},"content":"        int totalStock \u003d PrescriptionManager.getNotExpiredStockQuantity(medicines, medicationName, prescribeDate);","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"deonchung"},"content":"        if (prescriptionQuantity \u003e totalStock) {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Unable to Prescribe! Prescription quantity is more than stock available!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Prescription quantity: \" + prescriptionQuantity + \" Stock available: \" + totalStock);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"deonchung"},"content":"            return;","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"deonchung"},"content":"        for (Stock stock : filteredStocks) {","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"deonchung"},"content":"            int existingQuantity \u003d stock.getQuantity();","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"deonchung"},"content":"            int existingId \u003d stock.getStockId();","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"deonchung"},"content":"            Date existingExpiry \u003d stock.getExpiry();","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"deonchung"},"content":"            String expiryString \u003d DateParser.dateToString(existingExpiry);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"deonchung"},"content":"            if (existingExpiry.after(prescribeDate) || prescribeDateString.equals(expiryString)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"deonchung"},"content":"                int setStockValue \u003d 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"deonchung"},"content":"                if (existingQuantity \u003d\u003d quantityToPrescribe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"deonchung"},"content":"                    prescribe(ui, medicines, medicationName, customerId, staffName, existingQuantity, prescribeDate,","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"deonchung"},"content":"                            stock, existingId, existingExpiry, setStockValue);","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"deonchung"},"content":"                    return;","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"deonchung"},"content":"                if (existingQuantity \u003e quantityToPrescribe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"deonchung"},"content":"                    setStockValue \u003d existingQuantity - quantityToPrescribe;","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"deonchung"},"content":"                    prescribe(ui, medicines, medicationName, customerId, staffName, quantityToPrescribe, prescribeDate,","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"deonchung"},"content":"                            stock, existingId, existingExpiry, setStockValue);","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"deonchung"},"content":"                    return;","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"deonchung"},"content":"                if (existingQuantity \u003c prescriptionQuantity \u0026\u0026 existingQuantity !\u003d 0) {","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"deonchung"},"content":"                    quantityToPrescribe \u003d quantityToPrescribe - existingQuantity;","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"deonchung"},"content":"                    prescribe(ui, medicines, medicationName, customerId, staffName, existingQuantity, prescribeDate,","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"deonchung"},"content":"                            stock, existingId, existingExpiry, setStockValue);","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"deonchung"},"content":"        ui.print(\"Unable to Prescribe! Medicine has expired!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"deonchung"},"content":"     * Change the stock quantity based on prescription quantity. Add prescribed medication to prescription list.","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"deonchung"},"content":"     * @param ui                  Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"deonchung"},"content":"     * @param medicines           Arraylist of all medicines.","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"deonchung"},"content":"     * @param medicationName      Medication to prescribe.","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"deonchung"},"content":"     * @param customerId          Customer ID whom medicine will be prescribed to.","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"deonchung"},"content":"     * @param staffName           Staff who prescribe the medication.","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"deonchung"},"content":"     * @param quantityToPrescribe Quantity of medication to prescribe.","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"deonchung"},"content":"     * @param prescribeDate       Date which medication is prescribed","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"deonchung"},"content":"     * @param stock               Stock object of the given stock id.","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"deonchung"},"content":"     * @param existingId          Existing id of the stock object.","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"deonchung"},"content":"     * @param existingExpiry      Existing expiry of the stock object.","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"deonchung"},"content":"     * @param setStockValue       Stock quantity to set to after prescription.","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"deonchung"},"content":"    private void prescribe(Ui ui, ArrayList\u003cMedicine\u003e medicines, String medicationName, String customerId,","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"deonchung"},"content":"                           String staffName, int quantityToPrescribe, Date prescribeDate, Stock stock,","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"deonchung"},"content":"                           int existingId, Date existingExpiry, int setStockValue) {","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"deonchung"},"content":"        String expiry \u003d DateParser.dateToString(existingExpiry);","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"deonchung"},"content":"        stock.setQuantity(setStockValue);","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"deonchung"},"content":"        Prescription prescription \u003d new Prescription(medicationName, quantityToPrescribe, customerId, prescribeDate,","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"deonchung"},"content":"                staffName, existingId);","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"deonchung"},"content":"        medicines.add(prescription);","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"deonchung"},"content":"        ui.print(\"Prescribed:\" + medicationName + \" Quantity:\" + quantityToPrescribe + \" Expiry \"","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"deonchung"},"content":"                + \"Date:\" + expiry);","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"deonchung"},"content":"        ui.printPrescription(prescription);","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"deonchung"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"deonchung"},"content":"        storage.saveData(medicines);","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"alvintan01":4,"deonchung":142,"a-tph":4}},{"path":"src/main/java/command/prescription/ArchivePrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command.prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import utilities.parser.OrderValidator;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import utilities.parser.PrescriptionValidator;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"//@@author RemusTeo","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":" * Archive prescription based on user input given date.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"public class ArchivePrescriptionCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ArchivePrescription\");","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"    public ArchivePrescriptionCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"    public void execute() {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"        logger.log(Level.INFO, \"Start archiving of prescription\");","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"        String[] requiredParameters \u003d {CommandParameters.DATE};","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"        MedicineValidator validator \u003d new PrescriptionValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"                requiredParameters, optionalParameters, CommandSyntax.ARCHIVE_PRESCRIPTION_COMMAND, true, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"RemusTeo"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"RemusTeo"},"content":"            logger.log(Level.INFO, \"Unsuccessful archive of prescription\");","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"RemusTeo"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"RemusTeo"},"content":"        Date prescriptionArchiveDate \u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"RemusTeo"},"content":"        String prescriptionArchiveDateStr \u003d parameters.get(CommandParameters.DATE);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"RemusTeo"},"content":"            prescriptionArchiveDate \u003d DateParser.stringToDate(prescriptionArchiveDateStr);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"RemusTeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"RemusTeo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cMedicine\u003e filteredPrescriptions \u003d prescriptionsToArchive(medicines, prescriptionArchiveDate);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"RemusTeo"},"content":"        removeFromPrescriptions(medicines, filteredPrescriptions);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"RemusTeo"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"RemusTeo"},"content":"        storage.archiveData(filteredPrescriptions);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"RemusTeo"},"content":"        storage.saveData(medicines);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"RemusTeo"},"content":"        ui.print(\"Archived \" + filteredPrescriptions.size() + \" prescriptions from \"","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"RemusTeo"},"content":"                + DateParser.dateToString(prescriptionArchiveDate));","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"RemusTeo"},"content":"        logger.log(Level.INFO, \"Successful archive of prescriptions\");","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"RemusTeo"},"content":"     * Checks through all prescriptions and look for records that have prescription date \u003c\u003d specified date.","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"RemusTeo"},"content":"     * @param medicines               Arraylist of all medicines.","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"RemusTeo"},"content":"     * @param prescriptionArchiveDate Date that user specified to archive.","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"RemusTeo"},"content":"     * @return Arraylist of prescriptions that meet the archive requirements.","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"RemusTeo"},"content":"    private ArrayList\u003cMedicine\u003e prescriptionsToArchive(ArrayList\u003cMedicine\u003e medicines, Date prescriptionArchiveDate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cMedicine\u003e filteredPrescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"RemusTeo"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"RemusTeo"},"content":"            if (!(medicine instanceof Prescription)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"RemusTeo"},"content":"                continue;","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"RemusTeo"},"content":"            Prescription prescription \u003d (Prescription) medicine;","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"RemusTeo"},"content":"            Date prescriptionDate \u003d DateParser.removeTime(prescription.getDate());","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"RemusTeo"},"content":"            if (prescriptionDate.before(prescriptionArchiveDate)","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"RemusTeo"},"content":"                    || prescriptionDate.equals(prescriptionArchiveDate)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"RemusTeo"},"content":"                filteredPrescriptions.add(prescription);","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"RemusTeo"},"content":"        return filteredPrescriptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"RemusTeo"},"content":"     * Removal of prescriptions from prescription list after archive.","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"RemusTeo"},"content":"     * @param medicines             Arraylist of all medicines.","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"RemusTeo"},"content":"     * @param filteredPrescriptions Arraylist of prescriptions that meet the archive requirements.","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"RemusTeo"},"content":"    private void removeFromPrescriptions(ArrayList\u003cMedicine\u003e medicines, ArrayList\u003cMedicine\u003e filteredPrescriptions) {","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"RemusTeo"},"content":"        for (Medicine medicine : filteredPrescriptions) {","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"RemusTeo"},"content":"            medicines.remove(medicine);","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"alvintan01":19,"RemusTeo":85,"a-tph":2}},{"path":"src/main/java/command/prescription/DeletePrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command.prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"import command.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import utilities.parser.PrescriptionValidator;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"//@@author deonchung","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":" * Delete prescription based on user input given prescription id.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"public class DeletePrescriptionCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"    private static Logger logger \u003d Logger.getLogger(\"DeletePrescription\");","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"    public DeletePrescriptionCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"        logger.log(Level.INFO, \"Start deletion of prescription\");","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"        String prescriptionIdToDelete \u003d parameters.get(CommandParameters.ID);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"        if (!isValidPrescriptionParameters(ui, medicines, prescriptionIdToDelete)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"            return;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"        int prescriptionId \u003d Integer.parseInt(prescriptionIdToDelete);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"        assert prescriptionId \u003c\u003d Prescription.getPrescriptionCount() : \"Prescription Id should not exceed max \"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"                + \"prescription count\";","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"        int stockIdToPrescribe;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"        int prescribeQuantity;","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"deonchung"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"            if (!(medicine instanceof Prescription)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"                continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"deonchung"},"content":"            Prescription prescription \u003d (Prescription) medicine;","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"deonchung"},"content":"            if (prescription.getPrescriptionId() \u003d\u003d prescriptionId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"deonchung"},"content":"                stockIdToPrescribe \u003d prescription.getStockId();","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"deonchung"},"content":"                prescribeQuantity \u003d prescription.getQuantity();","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"deonchung"},"content":"                if (setStockQuantity(ui, medicines, stockIdToPrescribe, prescribeQuantity)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"deonchung"},"content":"                    return;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"deonchung"},"content":"                medicines.remove(prescription);","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"deonchung"},"content":"                ui.print(\"Prescription deleted for Prescription Id \" + prescriptionId);","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"deonchung"},"content":"                Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"deonchung"},"content":"                storage.saveData(medicines);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"deonchung"},"content":"                logger.log(Level.INFO, \"Successful deletion of Prescription\");","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"deonchung"},"content":"                return;","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"deonchung"},"content":"     * Check if parameters values for Prescription are valid and if Prescription ID exist.","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"deonchung"},"content":"     * @param ui                     Reference to the UI object to print messages.","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"deonchung"},"content":"     * @param medicines              Arraylist of medicines.","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"deonchung"},"content":"     * @param prescriptionIdToDelete Prescription ID to delete.","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"deonchung"},"content":"     * @return Boolean Value indicating if parameters values for Prescription are valid and Prescription ID exist.","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"deonchung"},"content":"    private boolean isValidPrescriptionParameters(Ui ui, ArrayList\u003cMedicine\u003e medicines, String prescriptionIdToDelete) {","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"deonchung"},"content":"        MedicineValidator validator \u003d new PrescriptionValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"deonchung"},"content":"        String[] requiredParameters \u003d {CommandParameters.ID};","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"deonchung"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"deonchung"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"deonchung"},"content":"                requiredParameters, optionalParameters, CommandSyntax.DELETE_PRESCRIPTION_COMMAND, true, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"deonchung"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"deonchung"},"content":"            logger.log(Level.WARNING, \"Invalid parameter or value specified by user\");","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"deonchung"},"content":"            logger.log(Level.INFO, \"Unsuccessful deletion of prescription\");","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"deonchung"},"content":"            return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"deonchung"},"content":"        return true;","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"deonchung"},"content":"     * Check stock if stock exist. If stock exist, add the quantity to the stock quantity.","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"deonchung"},"content":"     * @param ui                 Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"deonchung"},"content":"     * @param medicines          Arraylist of medicines","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"deonchung"},"content":"     * @param stockIdToPrescribe Stock ID prescribe.","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"deonchung"},"content":"     * @param prescribedQuantity Quantity prescribed.","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if stock id exist.","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"deonchung"},"content":"    private boolean setStockQuantity(Ui ui, ArrayList\u003cMedicine\u003e medicines, int stockIdToPrescribe,","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"deonchung"},"content":"                                     int prescribedQuantity) {","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"deonchung"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"deonchung"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"deonchung"},"content":"                continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"deonchung"},"content":"            Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"deonchung"},"content":"            if (stock.getStockId() \u003d\u003d stockIdToPrescribe) {","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"deonchung"},"content":"                if (stock.isDeleted()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"deonchung"},"content":"                    stock.setDeleted(false);","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"deonchung"},"content":"                int quantityToRestore \u003d stock.getQuantity() + prescribedQuantity;","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"deonchung"},"content":"                if (quantityToRestore \u003e stock.getMaxQuantity()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"deonchung"},"content":"                    ui.print(\"Unable to delete prescription. Quantity added will exceed maximum quantity.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"deonchung"},"content":"                    ui.print(\"Maximum quantity: \" + stock.getMaxQuantity() + \" Total Quantity after deletion: \"","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"deonchung"},"content":"                            + quantityToRestore);","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"deonchung"},"content":"                    return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"deonchung"},"content":"                stock.setQuantity(quantityToRestore);","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"alvintan01":4,"deonchung":134,"a-tph":2}},{"path":"src/main/java/command/prescription/ListPrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command.prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import utilities.comparators.PrescriptionComparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import utilities.parser.PrescriptionValidator;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":" * Helps to process the listprescription command together with filters and sort.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"public class ListPrescriptionCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ListPrescription\");","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    public ListPrescriptionCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        logger.log(Level.INFO, \"Start listing of prescription records\");","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        String[] requiredParameters \u003d {};","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        String[] optionalParameters \u003d {CommandParameters.ID, CommandParameters.NAME, CommandParameters.QUANTITY,","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"                CommandParameters.CUSTOMER_ID, CommandParameters.DATE, CommandParameters.STAFF,","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"                CommandParameters.STOCK_ID,","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"                CommandParameters.SORT, CommandParameters.REVERSED_SORT};","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        MedicineValidator validator \u003d new PrescriptionValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"                requiredParameters, optionalParameters, CommandSyntax.LIST_PRESCRIPTION_COMMAND, false, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"            return;","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cPrescription\u003e filteredPrescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"        assert (filteredPrescriptions !\u003d null) : \"Array is not initialised\";","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"            if (medicine instanceof Prescription) {","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"                filteredPrescriptions.add((Prescription) medicine);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"        filteredPrescriptions \u003d filterPrescription(filteredPrescriptions);","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"        ui.printPrescriptions(filteredPrescriptions);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"        logger.log(Level.INFO, \"Successful listing of prescription\");","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"     * Helps to filter prescription records based on the user\u0027s input.","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"     * @param filteredPrescriptions Arraylist of Prescription objects.","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"     * @return Arraylist of filtered Prescription objects based on the user\u0027s parameters values.","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"    private ArrayList\u003cPrescription\u003e filterPrescription(ArrayList\u003cPrescription\u003e filteredPrescriptions) {","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"            String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"            switch (parameter) {","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.ID:","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"                filteredPrescriptions \u003d (ArrayList\u003cPrescription\u003e) filteredPrescriptions.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"                        .filter((d) -\u003e d.getPrescriptionId() \u003d\u003d Integer.parseInt(parameterValue))","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.NAME:","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"                filteredPrescriptions \u003d (ArrayList\u003cPrescription\u003e) filteredPrescriptions.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"                        .filter((d) -\u003e d.getMedicineName().toUpperCase().contains(parameterValue.toUpperCase()))","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"                filteredPrescriptions \u003d (ArrayList\u003cPrescription\u003e) filteredPrescriptions.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"                        .filter((d) -\u003e d.getQuantity() \u003d\u003d Integer.parseInt(parameterValue))","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.CUSTOMER_ID:","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"                filteredPrescriptions \u003d (ArrayList\u003cPrescription\u003e) filteredPrescriptions.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"                        .filter((d) -\u003e d.getCustomerId().toUpperCase().contains(parameterValue.toUpperCase()))","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.DATE:","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"                try {","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"                    Date date \u003d DateParser.stringToDate(parameterValue);","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"                    filteredPrescriptions \u003d (ArrayList\u003cPrescription\u003e) filteredPrescriptions.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"                            .filter((m) -\u003e m.getDate().equals(date))","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.STAFF:","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"                filteredPrescriptions \u003d (ArrayList\u003cPrescription\u003e) filteredPrescriptions.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"                        .filter((d) -\u003e d.getStaff().toUpperCase().contains(parameterValue.toUpperCase()))","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.STOCK_ID:","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"                filteredPrescriptions \u003d (ArrayList\u003cPrescription\u003e) filteredPrescriptions.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"                        .filter((d) -\u003e d.getStockId() \u003d\u003d Integer.parseInt(parameterValue))","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.SORT:","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"                filteredPrescriptions.sort(new PrescriptionComparator(parameterValue.toLowerCase(), false));","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.REVERSED_SORT:","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"                filteredPrescriptions.sort(new PrescriptionComparator(parameterValue.toLowerCase(), true));","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"            default:","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"                return filteredPrescriptions;","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"        return filteredPrescriptions;","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"alvintan01":128,"a-tph":3}},{"path":"src/main/java/command/prescription/UpdatePrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command.prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import utilities.parser.PrescriptionManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import utilities.parser.PrescriptionValidator;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import utilities.parser.StockManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"import utilities.parser.StockValidator;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"//@@author a-tph","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":" * Update prescription information based on user input given prescription id.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"public class UpdatePrescriptionCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"    private static Logger logger \u003d Logger.getLogger(\"UpdatePrescription\");","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"    public UpdatePrescriptionCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"    public void execute() {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"        String[] requiredParameters \u003d {CommandParameters.ID};","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"        String[] optionalParameters \u003d {CommandParameters.NAME, CommandParameters.QUANTITY,","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"                CommandParameters.CUSTOMER_ID, CommandParameters.STAFF, CommandParameters.DATE};","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"        MedicineValidator validator \u003d new PrescriptionValidator();","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"                requiredParameters, optionalParameters, CommandSyntax.UPDATE_PRESCRIPTION_COMMAND, true, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"        Prescription prescription \u003d PrescriptionManager.extractPrescriptionObject(parameters, medicines);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"        assert (prescription !\u003d null) : \"Prescription object should not be null\";","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"        boolean hasNameParam \u003d validator.hasNameParamChecker(parameters, prescription.getMedicineName());","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"        Date date \u003d PrescriptionManager.getUpdatedDate(parameters, prescription.getDate());","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"        String customerId \u003d PrescriptionManager.getUpdatedCustomerId(parameters, prescription.getCustomerId());","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"        String staffName \u003d PrescriptionManager.getUpdatedStaff(parameters, prescription.getStaff());","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"        boolean hasQuantityParam \u003d validator.hasQuantityParamChecker(parameters, prescription.getQuantity());","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"        boolean isSuccessfulUpdate \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"        if (hasNameParam \u0026\u0026 hasQuantityParam) {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"            isSuccessfulUpdate \u003d processGivenNameAndQuantity(ui, medicines, prescription, customerId, date, staffName);","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"        } else if (hasNameParam \u0026\u0026 !hasQuantityParam) {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"            isSuccessfulUpdate \u003d processGivenName(ui, medicines, prescription, customerId, date, staffName);","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"        } else if (!hasNameParam \u0026\u0026 hasQuantityParam) {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"            isSuccessfulUpdate \u003d processGivenQuantity(ui, medicines, prescription, customerId, date, staffName);","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"            isSuccessfulUpdate \u003d processOtherFields(ui, medicines, prescription, customerId, date, staffName);","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"        if (!isSuccessfulUpdate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"        storage.saveData(medicines);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"     * Processes name and quantity field provided by user for updating prescription information.","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"     * @param ui           Reference to the UI object to print messages.","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"     * @param medicines    Arraylist of all medicines.","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"     * @param prescription The associated prescription object.","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"     * @param customerId   CustomerId of customers.","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"     * @param date         Date of prescription.","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"     * @param staffName    Staff responsible for the prescription of medication.","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value true if update is successful.","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"    private boolean processGivenNameAndQuantity(Ui ui, ArrayList\u003cMedicine\u003e medicines, Prescription prescription,","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"                                                String customerId, Date date, String staffName) {","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"        StockValidator stockValidator \u003d new StockValidator();","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"        String currentName \u003d prescription.getMedicineName();","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"        int currentStockId \u003d prescription.getStockId();","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"        String updatedName \u003d parameters.get(CommandParameters.NAME);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"        Stock targetRestoreStock \u003d StockManager.extractStockObject(medicines, currentName, currentStockId);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"        if (targetRestoreStock \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Medicine not found in stock\");","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"        int restoreStockQuantity \u003d targetRestoreStock.getQuantity();","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"        int restoredQuantity \u003d prescription.getQuantity();","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"        int totalQuantity \u003d restoredQuantity + restoreStockQuantity;","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"        int restoreMaxQuantity \u003d targetRestoreStock.getMaxQuantity();","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"        boolean isValidRestore \u003d stockValidator.quantityValidityChecker(ui, totalQuantity, restoreMaxQuantity);","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"        if (!isValidRestore) {","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Restoring of medication aborted!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cStock\u003e targetPrescriptionStocks \u003d StockManager.getUnexpiredFilteredStocksByName(medicines,","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"                updatedName);","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"        if (targetPrescriptionStocks.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Action aborted! Either medication not found or stock has expired.\");","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"        String updatedQuantity \u003d parameters.get(CommandParameters.QUANTITY);","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"        int prescriptionQuantity \u003d Integer.parseInt(updatedQuantity);","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"        int availableQuantity \u003d StockManager.getTotalStockQuantity(medicines, updatedName);","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"        boolean isValidPrescription \u003d stockValidator.quantityValidityChecker(ui, prescriptionQuantity,","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"                availableQuantity);","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"        if (!isValidPrescription) {","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Prescription of medication aborted!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"        // Guarantee is be able to restore \u0026 prescribe","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"        PrescriptionManager.restoreStock(targetRestoreStock, totalQuantity);","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cPrescription\u003e updatedPrescriptions \u003d PrescriptionManager.prescribeStock(medicines,","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"                targetPrescriptionStocks, prescriptionQuantity, customerId, date, staffName);","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"        // Add to prescription","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"        for (Prescription updatedPrescription : updatedPrescriptions) {","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"            medicines.add(updatedPrescription);","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"        medicines.remove(prescription);","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"        ui.print(\"Restored \" + restoredQuantity + \" \" + targetRestoreStock.getMedicineName());","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"        ui.print(\"Updated prescription information!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"        ui.printPrescriptions(updatedPrescriptions);","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"        return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"     * Processes name field provided by user for updating prescription information.","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"a-tph"},"content":"     * @param ui           Reference to the UI object to print messages.","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"a-tph"},"content":"     * @param medicines    Arraylist of all medicines.","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"a-tph"},"content":"     * @param prescription The associated prescription object.","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"a-tph"},"content":"     * @param customerId   CustomerId of customers.","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"a-tph"},"content":"     * @param date         Date of prescription.","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"a-tph"},"content":"     * @param staffName    Staff responsible for the prescription of medication.","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value true if update is successful.","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"a-tph"},"content":"    private boolean processGivenName(Ui ui, ArrayList\u003cMedicine\u003e medicines, Prescription prescription, String customerId,","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"a-tph"},"content":"                                     Date date, String staffName) {","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"a-tph"},"content":"        StockValidator stockValidator \u003d new StockValidator();","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"a-tph"},"content":"        String currentName \u003d prescription.getMedicineName();","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"a-tph"},"content":"        int currentStockId \u003d prescription.getStockId();","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"a-tph"},"content":"        String updatedName \u003d parameters.get(CommandParameters.NAME);","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"a-tph"},"content":"        Stock targetRestoreStock \u003d StockManager.extractStockObject(medicines, currentName, currentStockId);","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"a-tph"},"content":"        if (targetRestoreStock \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Medicine not found in stock\");","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"a-tph"},"content":"        int restoreStockQuantity \u003d targetRestoreStock.getQuantity();","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"a-tph"},"content":"        int restoredQuantity \u003d prescription.getQuantity();","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"a-tph"},"content":"        int totalQuantity \u003d restoredQuantity + restoreStockQuantity;","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"a-tph"},"content":"        int restoreMaxQuantity \u003d targetRestoreStock.getMaxQuantity();","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"a-tph"},"content":"        boolean isValidRestore \u003d stockValidator.quantityValidityChecker(ui, totalQuantity, restoreMaxQuantity);","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"a-tph"},"content":"        if (!isValidRestore) {","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Restoring of medication aborted!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cStock\u003e targetPrescriptionStocks \u003d StockManager.getUnexpiredFilteredStocksByName(medicines,","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"a-tph"},"content":"                updatedName);","lastModifiedDate":"2021-11-02"},{"lineNumber":180,"author":{"gitId":"a-tph"},"content":"        if (targetPrescriptionStocks.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Action aborted! Either medication not found or stock has expired.\");","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"a-tph"},"content":"        int availableQuantity \u003d StockManager.getTotalStockQuantity(medicines, updatedName);","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"a-tph"},"content":"        boolean isValidPrescription \u003d stockValidator.quantityValidityChecker(ui, restoredQuantity, availableQuantity);","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"a-tph"},"content":"        if (!isValidPrescription) {","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Prescription of medication aborted!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"a-tph"},"content":"        // Guarantee to be able to restore \u0026 prescribe","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"a-tph"},"content":"        PrescriptionManager.restoreStock(targetRestoreStock, totalQuantity);","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cPrescription\u003e updatedPrescriptions \u003d PrescriptionManager.prescribeStock(medicines,","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"a-tph"},"content":"                targetPrescriptionStocks, restoredQuantity, customerId, date, staffName);","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"a-tph"},"content":"        // Add to prescription","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"a-tph"},"content":"        for (Prescription updatedPrescription : updatedPrescriptions) {","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"a-tph"},"content":"            medicines.add(updatedPrescription);","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"a-tph"},"content":"        medicines.remove(prescription);","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"a-tph"},"content":"        ui.print(\"Restored \" + restoredQuantity + \" \" + targetRestoreStock.getMedicineName());","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"a-tph"},"content":"        ui.print(\"Updated prescription information!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"a-tph"},"content":"        ui.printPrescriptions(updatedPrescriptions);","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"a-tph"},"content":"        return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"a-tph"},"content":"     * Processes quantity field provided by user for updating prescription information.","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"a-tph"},"content":"     * @param ui           Reference to the UI object to print messages.","lastModifiedDate":"2021-11-03"},{"lineNumber":211,"author":{"gitId":"a-tph"},"content":"     * @param medicines    Arraylist of all medicines.","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"a-tph"},"content":"     * @param prescription The associated prescription object.","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"a-tph"},"content":"     * @param customerId   CustomerId of customers.","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"a-tph"},"content":"     * @param date         Date of prescription.","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"a-tph"},"content":"     * @param staffName    Staff responsible for the prescription of medication.","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value true if update is successful.","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"a-tph"},"content":"    private boolean processGivenQuantity(Ui ui, ArrayList\u003cMedicine\u003e medicines, Prescription prescription,","lastModifiedDate":"2021-11-03"},{"lineNumber":219,"author":{"gitId":"a-tph"},"content":"                                         String customerId, Date date, String staffName) {","lastModifiedDate":"2021-11-03"},{"lineNumber":220,"author":{"gitId":"a-tph"},"content":"        int currentQuantity \u003d prescription.getQuantity();","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"a-tph"},"content":"        int updatedQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.QUANTITY));","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"a-tph"},"content":"        boolean isSuccessful \u003d false;","lastModifiedDate":"2021-11-02"},{"lineNumber":223,"author":{"gitId":"a-tph"},"content":"        if (updatedQuantity \u003c currentQuantity) {","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"a-tph"},"content":"            isSuccessful \u003d processRestoration(ui, medicines, prescription, customerId, date, staffName);","lastModifiedDate":"2021-11-03"},{"lineNumber":225,"author":{"gitId":"a-tph"},"content":"        } else if (updatedQuantity \u003e currentQuantity) {","lastModifiedDate":"2021-11-02"},{"lineNumber":226,"author":{"gitId":"a-tph"},"content":"            isSuccessful \u003d processPrescription(ui, medicines, prescription, customerId, date, staffName);","lastModifiedDate":"2021-11-03"},{"lineNumber":227,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"a-tph"},"content":"        if (!isSuccessful) {","lastModifiedDate":"2021-11-02"},{"lineNumber":229,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"a-tph"},"content":"        return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":232,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":233,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":234,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":235,"author":{"gitId":"a-tph"},"content":"     * Process prescription of medication for a prescription record.","lastModifiedDate":"2021-11-02"},{"lineNumber":236,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":237,"author":{"gitId":"a-tph"},"content":"     * @param ui           Reference to the UI object to print messages.","lastModifiedDate":"2021-11-03"},{"lineNumber":238,"author":{"gitId":"a-tph"},"content":"     * @param medicines    Arraylist of all medicines.","lastModifiedDate":"2021-11-02"},{"lineNumber":239,"author":{"gitId":"a-tph"},"content":"     * @param prescription The associated prescription object.","lastModifiedDate":"2021-11-02"},{"lineNumber":240,"author":{"gitId":"a-tph"},"content":"     * @param customerId   CustomerId of customers.","lastModifiedDate":"2021-11-02"},{"lineNumber":241,"author":{"gitId":"a-tph"},"content":"     * @param date         Date of prescription.","lastModifiedDate":"2021-11-02"},{"lineNumber":242,"author":{"gitId":"a-tph"},"content":"     * @param staffName    Staff responsible for the prescription of medication.","lastModifiedDate":"2021-11-02"},{"lineNumber":243,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value true if prescription is successful.","lastModifiedDate":"2021-11-02"},{"lineNumber":244,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":245,"author":{"gitId":"a-tph"},"content":"    private boolean processPrescription(Ui ui, ArrayList\u003cMedicine\u003e medicines, Prescription prescription,","lastModifiedDate":"2021-11-03"},{"lineNumber":246,"author":{"gitId":"a-tph"},"content":"                                        String customerId, Date date, String staffName) {","lastModifiedDate":"2021-11-03"},{"lineNumber":247,"author":{"gitId":"a-tph"},"content":"        StockValidator stockValidator \u003d new StockValidator();","lastModifiedDate":"2021-11-02"},{"lineNumber":248,"author":{"gitId":"a-tph"},"content":"        String currentName \u003d prescription.getMedicineName();","lastModifiedDate":"2021-11-02"},{"lineNumber":249,"author":{"gitId":"a-tph"},"content":"        int currentQuantity \u003d prescription.getQuantity();","lastModifiedDate":"2021-11-02"},{"lineNumber":250,"author":{"gitId":"a-tph"},"content":"        int stockId \u003d prescription.getStockId();","lastModifiedDate":"2021-11-02"},{"lineNumber":251,"author":{"gitId":"a-tph"},"content":"        int updatedQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.QUANTITY));","lastModifiedDate":"2021-11-02"},{"lineNumber":252,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cStock\u003e targetPrescriptionStocks \u003d StockManager.getUnexpiredFilteredStocksByName(medicines,","lastModifiedDate":"2021-11-02"},{"lineNumber":254,"author":{"gitId":"a-tph"},"content":"                currentName);","lastModifiedDate":"2021-11-02"},{"lineNumber":255,"author":{"gitId":"a-tph"},"content":"        if (targetPrescriptionStocks.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Action aborted! Either medication not found or stock has expired.\");","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":260,"author":{"gitId":"a-tph"},"content":"        int prescribedQuantity \u003d updatedQuantity - currentQuantity;","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"a-tph"},"content":"        int stockQuantity \u003d StockManager.getTotalStockQuantity(medicines, currentName);","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"a-tph"},"content":"        boolean isValidPrescription \u003d stockValidator.quantityValidityChecker(ui, prescribedQuantity, stockQuantity);","lastModifiedDate":"2021-10-25"},{"lineNumber":263,"author":{"gitId":"a-tph"},"content":"        if (!isValidPrescription) {","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Prescription of medication aborted!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":268,"author":{"gitId":"a-tph"},"content":"        // guarantee can prescribe","lastModifiedDate":"2021-11-02"},{"lineNumber":269,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cPrescription\u003e updatedPrescriptions \u003d PrescriptionManager.prescribeStock(medicines,","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"a-tph"},"content":"                targetPrescriptionStocks, prescribedQuantity, customerId, date, staffName);","lastModifiedDate":"2021-10-26"},{"lineNumber":271,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"a-tph"},"content":"        medicines.remove(prescription);","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"a-tph"},"content":"        for (Prescription updatedPrescription : updatedPrescriptions) {","lastModifiedDate":"2021-10-25"},{"lineNumber":274,"author":{"gitId":"a-tph"},"content":"            if (updatedPrescription.getStockId() \u003d\u003d stockId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"a-tph"},"content":"                int newQuantity \u003d currentQuantity + updatedPrescription.getQuantity();","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"a-tph"},"content":"                updatedPrescription.setQuantity(newQuantity);","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":279,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"a-tph"},"content":"        // Add to prescription","lastModifiedDate":"2021-10-25"},{"lineNumber":282,"author":{"gitId":"a-tph"},"content":"        for (Prescription updatedPrescription : updatedPrescriptions) {","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"a-tph"},"content":"            medicines.add(updatedPrescription);","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":285,"author":{"gitId":"a-tph"},"content":"        ui.print(\"Updated prescription information!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"a-tph"},"content":"        ui.printPrescriptions(updatedPrescriptions);","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"a-tph"},"content":"        return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":288,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":290,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":291,"author":{"gitId":"a-tph"},"content":"     * Process restoration for a prescription record.","lastModifiedDate":"2021-11-02"},{"lineNumber":292,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":293,"author":{"gitId":"a-tph"},"content":"     * @param ui           Reference to the UI object to print messages.","lastModifiedDate":"2021-11-03"},{"lineNumber":294,"author":{"gitId":"a-tph"},"content":"     * @param medicines    Arraylist of all medicines.","lastModifiedDate":"2021-11-02"},{"lineNumber":295,"author":{"gitId":"a-tph"},"content":"     * @param prescription The associated prescription object.","lastModifiedDate":"2021-11-02"},{"lineNumber":296,"author":{"gitId":"a-tph"},"content":"     * @param customerId   CustomerId of customers.","lastModifiedDate":"2021-11-02"},{"lineNumber":297,"author":{"gitId":"a-tph"},"content":"     * @param date         Date of prescription.","lastModifiedDate":"2021-11-02"},{"lineNumber":298,"author":{"gitId":"a-tph"},"content":"     * @param staffName    Staff responsible for the prescription of medication.","lastModifiedDate":"2021-11-02"},{"lineNumber":299,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value true if restoration is successful.","lastModifiedDate":"2021-11-02"},{"lineNumber":300,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":301,"author":{"gitId":"a-tph"},"content":"    private boolean processRestoration(Ui ui, ArrayList\u003cMedicine\u003e medicines, Prescription prescription,","lastModifiedDate":"2021-11-03"},{"lineNumber":302,"author":{"gitId":"a-tph"},"content":"                                       String customerId,","lastModifiedDate":"2021-11-03"},{"lineNumber":303,"author":{"gitId":"a-tph"},"content":"                                       Date date, String staffName) {","lastModifiedDate":"2021-11-02"},{"lineNumber":304,"author":{"gitId":"a-tph"},"content":"        StockValidator stockValidator \u003d new StockValidator();","lastModifiedDate":"2021-11-02"},{"lineNumber":305,"author":{"gitId":"a-tph"},"content":"        String currentName \u003d prescription.getMedicineName();","lastModifiedDate":"2021-11-02"},{"lineNumber":306,"author":{"gitId":"a-tph"},"content":"        int currentStockId \u003d prescription.getStockId();","lastModifiedDate":"2021-11-02"},{"lineNumber":307,"author":{"gitId":"a-tph"},"content":"        int currentQuantity \u003d prescription.getQuantity();","lastModifiedDate":"2021-11-02"},{"lineNumber":308,"author":{"gitId":"a-tph"},"content":"        int updatedQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.QUANTITY));","lastModifiedDate":"2021-11-02"},{"lineNumber":309,"author":{"gitId":"a-tph"},"content":"        Stock stock \u003d StockManager.extractStockObject(medicines, currentName, currentStockId);","lastModifiedDate":"2021-11-02"},{"lineNumber":310,"author":{"gitId":"a-tph"},"content":"        if (stock \u003d\u003d null) {","lastModifiedDate":"2021-11-02"},{"lineNumber":311,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Medicine not found in stock\");","lastModifiedDate":"2021-11-02"},{"lineNumber":312,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":313,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":314,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":315,"author":{"gitId":"a-tph"},"content":"        int restoreQuantity \u003d currentQuantity - updatedQuantity;","lastModifiedDate":"2021-11-02"},{"lineNumber":316,"author":{"gitId":"a-tph"},"content":"        int stockQuantity \u003d stock.getQuantity();","lastModifiedDate":"2021-11-02"},{"lineNumber":317,"author":{"gitId":"a-tph"},"content":"        int stockMaxQuantity \u003d stock.getMaxQuantity();","lastModifiedDate":"2021-11-02"},{"lineNumber":318,"author":{"gitId":"a-tph"},"content":"        int totalQuantity \u003d stockQuantity + restoreQuantity;","lastModifiedDate":"2021-11-02"},{"lineNumber":319,"author":{"gitId":"a-tph"},"content":"        boolean isValidRestore \u003d stockValidator.quantityValidityChecker(ui, totalQuantity, stockMaxQuantity);","lastModifiedDate":"2021-11-02"},{"lineNumber":320,"author":{"gitId":"a-tph"},"content":"        if (!isValidRestore) {","lastModifiedDate":"2021-11-02"},{"lineNumber":321,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Restoring of medication aborted!\");","lastModifiedDate":"2021-11-02"},{"lineNumber":322,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":323,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":324,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":325,"author":{"gitId":"a-tph"},"content":"        // guarantee can restore","lastModifiedDate":"2021-11-02"},{"lineNumber":326,"author":{"gitId":"a-tph"},"content":"        int stockId \u003d prescription.getStockId();","lastModifiedDate":"2021-11-02"},{"lineNumber":327,"author":{"gitId":"a-tph"},"content":"        PrescriptionManager.restoreStock(stock, totalQuantity);","lastModifiedDate":"2021-11-02"},{"lineNumber":328,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":329,"author":{"gitId":"a-tph"},"content":"        medicines.remove(prescription);","lastModifiedDate":"2021-11-02"},{"lineNumber":330,"author":{"gitId":"a-tph"},"content":"        Prescription newPrescription \u003d new Prescription(currentName, updatedQuantity, customerId, date, staffName,","lastModifiedDate":"2021-11-02"},{"lineNumber":331,"author":{"gitId":"a-tph"},"content":"                stockId);","lastModifiedDate":"2021-11-02"},{"lineNumber":332,"author":{"gitId":"a-tph"},"content":"        medicines.add(newPrescription);","lastModifiedDate":"2021-11-02"},{"lineNumber":333,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":334,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cPrescription\u003e updatedPrescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-02"},{"lineNumber":335,"author":{"gitId":"a-tph"},"content":"        updatedPrescriptions.add(newPrescription);","lastModifiedDate":"2021-11-02"},{"lineNumber":336,"author":{"gitId":"a-tph"},"content":"        ui.print(\"Restored \" + restoreQuantity + \" \" + stock.getMedicineName());","lastModifiedDate":"2021-11-02"},{"lineNumber":337,"author":{"gitId":"a-tph"},"content":"        ui.print(\"Updated prescription information!\");","lastModifiedDate":"2021-11-02"},{"lineNumber":338,"author":{"gitId":"a-tph"},"content":"        ui.printPrescriptions(updatedPrescriptions);","lastModifiedDate":"2021-11-02"},{"lineNumber":339,"author":{"gitId":"a-tph"},"content":"        return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"a-tph"},"content":"     * Processes other fields provided by user for updating prescription information.","lastModifiedDate":"2021-10-25"},{"lineNumber":344,"author":{"gitId":"a-tph"},"content":"     * The other field are the customerId, date and staffName.","lastModifiedDate":"2021-10-21"},{"lineNumber":345,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":346,"author":{"gitId":"a-tph"},"content":"     * @param ui           Reference to the UI object to print messages.","lastModifiedDate":"2021-11-03"},{"lineNumber":347,"author":{"gitId":"a-tph"},"content":"     * @param medicines    Arraylist of all medicines.","lastModifiedDate":"2021-10-21"},{"lineNumber":348,"author":{"gitId":"a-tph"},"content":"     * @param prescription The associated prescription object.","lastModifiedDate":"2021-10-25"},{"lineNumber":349,"author":{"gitId":"a-tph"},"content":"     * @param customerId   CustomerId of customers.","lastModifiedDate":"2021-10-21"},{"lineNumber":350,"author":{"gitId":"a-tph"},"content":"     * @param date         Date of prescription.","lastModifiedDate":"2021-10-25"},{"lineNumber":351,"author":{"gitId":"a-tph"},"content":"     * @param staffName    Staff responsible for the prescription of medication.","lastModifiedDate":"2021-10-25"},{"lineNumber":352,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value true if update is successful.","lastModifiedDate":"2021-10-21"},{"lineNumber":353,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":354,"author":{"gitId":"a-tph"},"content":"    private boolean processOtherFields(Ui ui, ArrayList\u003cMedicine\u003e medicines, Prescription prescription,","lastModifiedDate":"2021-11-03"},{"lineNumber":355,"author":{"gitId":"a-tph"},"content":"                                       String customerId,","lastModifiedDate":"2021-11-03"},{"lineNumber":356,"author":{"gitId":"a-tph"},"content":"                                       Date date, String staffName) {","lastModifiedDate":"2021-11-02"},{"lineNumber":357,"author":{"gitId":"a-tph"},"content":"        if (prescription \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":358,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":359,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":360,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-21"},{"lineNumber":361,"author":{"gitId":"a-tph"},"content":"            if (!(medicine instanceof Prescription)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":362,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-10-21"},{"lineNumber":363,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":364,"author":{"gitId":"a-tph"},"content":"            Prescription targetPrescription \u003d (Prescription) medicine;","lastModifiedDate":"2021-10-25"},{"lineNumber":365,"author":{"gitId":"a-tph"},"content":"            boolean isSameStockId \u003d targetPrescription.getStockId() \u003d\u003d prescription.getStockId();","lastModifiedDate":"2021-10-25"},{"lineNumber":366,"author":{"gitId":"a-tph"},"content":"            if (isSameStockId) {","lastModifiedDate":"2021-10-21"},{"lineNumber":367,"author":{"gitId":"a-tph"},"content":"                ((Prescription) medicine).setCustomerId(customerId);","lastModifiedDate":"2021-10-25"},{"lineNumber":368,"author":{"gitId":"a-tph"},"content":"                ((Prescription) medicine).setDate(date);","lastModifiedDate":"2021-10-25"},{"lineNumber":369,"author":{"gitId":"a-tph"},"content":"                ((Prescription) medicine).setStaff(staffName);","lastModifiedDate":"2021-10-25"},{"lineNumber":370,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-11-02"},{"lineNumber":371,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":372,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":373,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cPrescription\u003e newPrescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":374,"author":{"gitId":"a-tph"},"content":"        newPrescriptions.add(prescription);","lastModifiedDate":"2021-10-25"},{"lineNumber":375,"author":{"gitId":"a-tph"},"content":"        ui.print(\"Updated prescription information!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":376,"author":{"gitId":"a-tph"},"content":"        ui.printPrescriptions(newPrescriptions);","lastModifiedDate":"2021-10-25"},{"lineNumber":377,"author":{"gitId":"a-tph"},"content":"        return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":378,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":379,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":380,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"alvintan01":4,"a-tph":376}},{"path":"src/main/java/command/stock/AddStockCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package command.stock;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"import command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import utilities.parser.StockManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import utilities.parser.StockValidator;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"//@@author deonchung","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":" * Add medication based on user input.","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":" * User input include name, price, quantity, expiry date, description and maximum quantity of medication.","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"public class AddStockCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"    private static Logger logger \u003d Logger.getLogger(\"AddCommand\");","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"    public AddStockCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"        logger.log(Level.INFO, \"Start addition of stock\");","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"        StockValidator stockValidator \u003d new StockValidator();","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"        ArrayList\u003cStock\u003e filteredStocks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"        String[] requiredParam \u003d {CommandParameters.NAME, CommandParameters.QUANTITY,","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"                CommandParameters.EXPIRY_DATE, CommandParameters.DESCRIPTION, CommandParameters.MAX_QUANTITY};","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"deonchung"},"content":"        if (!checkValidParametersAndValues(ui, parameters, medicines, requiredParam,","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"                optionalParameters)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"            return;","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"        String nameToAdd \u003d parameters.get(CommandParameters.NAME);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"        String expiryDate \u003d parameters.get(CommandParameters.EXPIRY_DATE);","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"deonchung"},"content":"        Date formatExpiryDate \u003d checkExpiryDate(ui, expiryDate);","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"deonchung"},"content":"        if (formatExpiryDate \u003d\u003d null) { //if medication has expired","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"deonchung"},"content":"            return;","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"deonchung"},"content":"        boolean nameExist \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"deonchung"},"content":"        if (parameters.containsKey(CommandParameters.NAME)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"deonchung"},"content":"            nameToAdd \u003d parameters.get(CommandParameters.NAME);","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"deonchung"},"content":"            for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"deonchung"},"content":"                if (medicine instanceof Stock \u0026\u0026 medicine.getMedicineName().equalsIgnoreCase(nameToAdd)","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"deonchung"},"content":"                        \u0026\u0026 !((Stock) medicine).isDeleted()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"deonchung"},"content":"                    filteredStocks.add((Stock) medicine);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"deonchung"},"content":"                    nameExist \u003d true;","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"deonchung"},"content":"        if (nameExist) {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"deonchung"},"content":"            String[] requiredParameters \u003d {CommandParameters.NAME, CommandParameters.QUANTITY,","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"deonchung"},"content":"                    CommandParameters.EXPIRY_DATE};","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"deonchung"},"content":"            if (!checkValidParametersAndValues(ui, parameters, medicines, requiredParameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"deonchung"},"content":"                    optionalParameters)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"deonchung"},"content":"                return;","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"deonchung"},"content":"            String quantityToAdd \u003d parameters.get(CommandParameters.QUANTITY);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"deonchung"},"content":"            int totalStock \u003d StockManager.getTotalStockQuantity(medicines, nameToAdd);","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"deonchung"},"content":"            assert totalStock \u003e 0 : \"Total Stock should be more than 0\";","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"deonchung"},"content":"            if (isExpiryExist(ui, stockValidator, filteredStocks, quantityToAdd, formatExpiryDate, totalStock)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"deonchung"},"content":"                return;","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"deonchung"},"content":"            String[] requiredParams \u003d {CommandParameters.NAME, CommandParameters.PRICE,","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"deonchung"},"content":"                    CommandParameters.QUANTITY, CommandParameters.EXPIRY_DATE};","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"deonchung"},"content":"            if (!checkValidParametersAndValues(ui, parameters, medicines, requiredParams,","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"deonchung"},"content":"                    optionalParameters)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"deonchung"},"content":"                return;","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"deonchung"},"content":"            if (addSameMedicine(ui, medicines, nameToAdd, stockValidator, filteredStocks, quantityToAdd,","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"deonchung"},"content":"                    formatExpiryDate, totalStock)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"deonchung"},"content":"                return;","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"deonchung"},"content":"        } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"deonchung"},"content":"            String[] requiredParameters \u003d {CommandParameters.NAME, CommandParameters.PRICE,","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"deonchung"},"content":"                    CommandParameters.QUANTITY, CommandParameters.EXPIRY_DATE,","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"deonchung"},"content":"                    CommandParameters.DESCRIPTION, CommandParameters.MAX_QUANTITY};","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"deonchung"},"content":"            if (!checkValidParametersAndValues(ui, parameters, medicines, requiredParameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"deonchung"},"content":"                    optionalParameters)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"deonchung"},"content":"                return;","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"deonchung"},"content":"            String priceToAdd \u003d parameters.get(CommandParameters.PRICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"deonchung"},"content":"            String quantityToAdd \u003d parameters.get(CommandParameters.QUANTITY);","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"deonchung"},"content":"            String descriptionToAdd \u003d parameters.get(CommandParameters.DESCRIPTION);","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"deonchung"},"content":"            String maxQuantityToAdd \u003d parameters.get(CommandParameters.MAX_QUANTITY);","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"deonchung"},"content":"            int maxQuantity \u003d Integer.parseInt(maxQuantityToAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"deonchung"},"content":"            int quantity \u003d Integer.parseInt(quantityToAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"deonchung"},"content":"            double price \u003d Double.parseDouble(priceToAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"deonchung"},"content":"            if (isValidQuantity(ui, stockValidator, maxQuantity, quantity)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"deonchung"},"content":"                return;","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"deonchung"},"content":"            addMedicine(ui, medicines, nameToAdd, descriptionToAdd, price, quantity, formatExpiryDate, maxQuantity);","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"deonchung"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"deonchung"},"content":"        storage.saveData(medicines);","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":132,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":133,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"deonchung"},"content":"     * Check if medication had expired.","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"deonchung"},"content":"     * @param ui         Reference to the UI object to print messages.","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"deonchung"},"content":"     * @param expiryDate Expiry Date of medication to add.","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"deonchung"},"content":"     * @return Expiry Date of medication if medication has not expired. Null if medication has expired.","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"deonchung"},"content":"    private Date checkExpiryDate(Ui ui, String expiryDate) {","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"deonchung"},"content":"        Date formatExpiryDate \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"deonchung"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"deonchung"},"content":"            formatExpiryDate \u003d DateParser.stringToDate(expiryDate);","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"deonchung"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"deonchung"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"deonchung"},"content":"        Date todayDate \u003d new Date();","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"deonchung"},"content":"        String todayDateString \u003d DateParser.dateToString(todayDate);","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"deonchung"},"content":"        Date formatTodayDate \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"deonchung"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"deonchung"},"content":"            formatTodayDate \u003d DateParser.stringToDate(todayDateString);","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"deonchung"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"deonchung"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":157,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"deonchung"},"content":"        if (formatExpiryDate.before(formatTodayDate)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Unable to add medicine. Medicine is expired.\");","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"deonchung"},"content":"            return null;","lastModifiedDate":"2021-11-02"},{"lineNumber":161,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"deonchung"},"content":"        return formatExpiryDate;","lastModifiedDate":"2021-11-02"},{"lineNumber":163,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":164,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":165,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"deonchung"},"content":"     * Check if same expiry for the same medication name exist.","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"deonchung"},"content":"     * @param ui             Reference to the UI object to print messages.","lastModifiedDate":"2021-10-31"},{"lineNumber":169,"author":{"gitId":"deonchung"},"content":"     * @param stockValidator Reference to StockValidator object.","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"deonchung"},"content":"     * @param filteredStocks List of medication with the same medication name as user input.","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"deonchung"},"content":"     * @param quantityToAdd  Quantity of medication to add.","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"deonchung"},"content":"     * @param formatExpiry   Formatted Expiry Date of medication to add.","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"deonchung"},"content":"     * @param totalStock     Total Quantity of the same stock.","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"deonchung"},"content":"     * @return Boolean Value indicating if same medication exists.","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"deonchung"},"content":"    private boolean isExpiryExist(Ui ui, StockValidator stockValidator, ArrayList\u003cStock\u003e filteredStocks,","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"deonchung"},"content":"                                  String quantityToAdd, Date formatExpiry, int totalStock) {","lastModifiedDate":"2021-10-31"},{"lineNumber":178,"author":{"gitId":"deonchung"},"content":"        for (Stock stock : filteredStocks) {","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"deonchung"},"content":"            int quantity \u003d Integer.parseInt(quantityToAdd);","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"deonchung"},"content":"            if (isValidQuantity(ui, stockValidator, stock.getMaxQuantity(), totalStock + quantity)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":182,"author":{"gitId":"deonchung"},"content":"                return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":183,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":185,"author":{"gitId":"deonchung"},"content":"            if (formatExpiry.equals(stock.getExpiry())) {","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"deonchung"},"content":"                quantity +\u003d stock.getQuantity();","lastModifiedDate":"2021-10-31"},{"lineNumber":187,"author":{"gitId":"deonchung"},"content":"                stock.setQuantity(quantity);","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"deonchung"},"content":"                ui.print(\"Same Medication and Expiry Date exist. Updating existing quantity.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":189,"author":{"gitId":"deonchung"},"content":"                ui.printStock(stock);","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"deonchung"},"content":"                return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":191,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":192,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":193,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":194,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":195,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":196,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":197,"author":{"gitId":"deonchung"},"content":"     * Adds the medication to same stock if same name exist.","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":199,"author":{"gitId":"deonchung"},"content":"     * @param ui             Reference to the UI object to print messages.","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"deonchung"},"content":"     * @param medicines      List of all medicines.","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"deonchung"},"content":"     * @param nameToAdd      Name of medication to add.","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"deonchung"},"content":"     * @param stockValidator Reference to StockValidator object.","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"deonchung"},"content":"     * @param filteredStocks List of medication with the same medication name as user input.","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"deonchung"},"content":"     * @param quantityToAdd  Quantity of medication to add.","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"deonchung"},"content":"     * @param formatExpiry   Formatted Expiry Date of medication to add.","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"deonchung"},"content":"     * @param totalStock     Total Quantity of the same stock.","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"deonchung"},"content":"     * @return Boolean Value indicating if the same medication name exist.","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":209,"author":{"gitId":"deonchung"},"content":"    private boolean addSameMedicine(Ui ui, ArrayList\u003cMedicine\u003e medicines, String nameToAdd,","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"deonchung"},"content":"                                    StockValidator stockValidator,","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"deonchung"},"content":"                                    ArrayList\u003cStock\u003e filteredStocks, String quantityToAdd, Date formatExpiry,","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"deonchung"},"content":"                                    int totalStock) {","lastModifiedDate":"2021-10-28"},{"lineNumber":213,"author":{"gitId":"deonchung"},"content":"        for (Stock stock : filteredStocks) {","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":215,"author":{"gitId":"deonchung"},"content":"            int quantity \u003d Integer.parseInt(quantityToAdd);","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"deonchung"},"content":"            int existingMaxQuantity \u003d stock.getMaxQuantity();","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"deonchung"},"content":"            if (isValidQuantity(ui, stockValidator, existingMaxQuantity, totalStock + quantity)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":219,"author":{"gitId":"deonchung"},"content":"                return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":220,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":221,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"deonchung"},"content":"            String existingDescription \u003d stock.getDescription();","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"deonchung"},"content":"            String priceToAdd \u003d parameters.get(CommandParameters.PRICE);","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"deonchung"},"content":"            double price \u003d Double.parseDouble(priceToAdd);","lastModifiedDate":"2021-10-28"},{"lineNumber":225,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Medicine exists. Using existing description and maximum quantity.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"deonchung"},"content":"            addMedicine(ui, medicines, nameToAdd, existingDescription, price,","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"deonchung"},"content":"                    quantity, formatExpiry, existingMaxQuantity);","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"deonchung"},"content":"            return true;","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"deonchung"},"content":"     * Check if quantity added is less than the maximum quantity of stock.","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"deonchung"},"content":"     * @param ui             Reference to the UI object to print messages.","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"deonchung"},"content":"     * @param stockValidator Reference to StockValidator object.","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"deonchung"},"content":"     * @param maxQuantity    Maximum quantity of medication.","lastModifiedDate":"2021-10-28"},{"lineNumber":239,"author":{"gitId":"deonchung"},"content":"     * @param quantity       Quantity of medication to add.","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"deonchung"},"content":"     * @return Boolean Value indicating if quantity added is less than maximum quantity.","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"deonchung"},"content":"    private boolean isValidQuantity(Ui ui, StockValidator stockValidator, int maxQuantity, int quantity) {","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"deonchung"},"content":"        boolean isValidQuantity \u003d stockValidator.quantityValidityChecker(ui, quantity, maxQuantity);","lastModifiedDate":"2021-11-03"},{"lineNumber":244,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"deonchung"},"content":"        if (!isValidQuantity) {","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"deonchung"},"content":"            logger.log(Level.WARNING, \"Invalid Quantity is specified by user\");","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"deonchung"},"content":"            logger.log(Level.INFO, \"Unsuccessful addition of stock\");","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"deonchung"},"content":"            return true;","lastModifiedDate":"2021-10-28"},{"lineNumber":249,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":251,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":252,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":253,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":254,"author":{"gitId":"deonchung"},"content":"     * Check if input contains Invalid Parameters and Invalid Parameter Values.","lastModifiedDate":"2021-10-11"},{"lineNumber":255,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":256,"author":{"gitId":"deonchung"},"content":"     * @param ui                 Reference to the UI object to print messages.","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"deonchung"},"content":"     * @param parameters         The parameter that is not found.","lastModifiedDate":"2021-10-11"},{"lineNumber":258,"author":{"gitId":"deonchung"},"content":"     * @param medicines          List of all medicines.","lastModifiedDate":"2021-10-11"},{"lineNumber":259,"author":{"gitId":"deonchung"},"content":"     * @param requiredParameters The required parameters to check.","lastModifiedDate":"2021-10-11"},{"lineNumber":260,"author":{"gitId":"deonchung"},"content":"     * @param optionalParameters The optional parameters to check.","lastModifiedDate":"2021-10-11"},{"lineNumber":261,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if parameter and parameter values are valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":262,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":263,"author":{"gitId":"deonchung"},"content":"    private boolean checkValidParametersAndValues(Ui ui, LinkedHashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-10-15"},{"lineNumber":264,"author":{"gitId":"deonchung"},"content":"                                                  ArrayList\u003cMedicine\u003e medicines, String[] requiredParameters,","lastModifiedDate":"2021-10-08"},{"lineNumber":265,"author":{"gitId":"deonchung"},"content":"                                                  String[] optionalParameters) {","lastModifiedDate":"2021-11-03"},{"lineNumber":266,"author":{"gitId":"deonchung"},"content":"        MedicineValidator validator \u003d new StockValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":267,"author":{"gitId":"deonchung"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":268,"author":{"gitId":"deonchung"},"content":"                requiredParameters, optionalParameters, CommandSyntax.ADD_STOCK_COMMAND, false, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":269,"author":{"gitId":"deonchung"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":270,"author":{"gitId":"deonchung"},"content":"            logger.log(Level.INFO, \"Unsuccessful addition of stock\");","lastModifiedDate":"2021-10-11"},{"lineNumber":271,"author":{"gitId":"deonchung"},"content":"            return false;","lastModifiedDate":"2021-11-03"},{"lineNumber":272,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":273,"author":{"gitId":"deonchung"},"content":"        return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":274,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":275,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":276,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":277,"author":{"gitId":"deonchung"},"content":"     * Add medication based on user input.","lastModifiedDate":"2021-10-11"},{"lineNumber":278,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":279,"author":{"gitId":"deonchung"},"content":"     * @param ui          Reference to the UI object to print messages.","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"deonchung"},"content":"     * @param medicines   List of all medicines.","lastModifiedDate":"2021-10-11"},{"lineNumber":281,"author":{"gitId":"deonchung"},"content":"     * @param name        Name of medication to add.","lastModifiedDate":"2021-10-11"},{"lineNumber":282,"author":{"gitId":"deonchung"},"content":"     * @param description Description of medication to add.","lastModifiedDate":"2021-10-11"},{"lineNumber":283,"author":{"gitId":"deonchung"},"content":"     * @param price       Price of medication to add.","lastModifiedDate":"2021-10-11"},{"lineNumber":284,"author":{"gitId":"deonchung"},"content":"     * @param quantity    Quantity of medication to add.","lastModifiedDate":"2021-10-11"},{"lineNumber":285,"author":{"gitId":"deonchung"},"content":"     * @param expiryDate  Expiry Date of medication to add.","lastModifiedDate":"2021-10-11"},{"lineNumber":286,"author":{"gitId":"deonchung"},"content":"     * @param maxQuantity Maximum Quantity of medication to add.","lastModifiedDate":"2021-10-11"},{"lineNumber":287,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":288,"author":{"gitId":"deonchung"},"content":"    private void addMedicine(Ui ui, ArrayList\u003cMedicine\u003e medicines, String name, String description,","lastModifiedDate":"2021-10-08"},{"lineNumber":289,"author":{"gitId":"deonchung"},"content":"                             double price, int quantity, Date expiryDate, int maxQuantity) {","lastModifiedDate":"2021-10-08"},{"lineNumber":290,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":291,"author":{"gitId":"deonchung"},"content":"        Stock stock \u003d new Stock(name, price, quantity, expiryDate, description, maxQuantity);","lastModifiedDate":"2021-10-08"},{"lineNumber":292,"author":{"gitId":"deonchung"},"content":"        medicines.add(stock);","lastModifiedDate":"2021-10-08"},{"lineNumber":293,"author":{"gitId":"deonchung"},"content":"        ui.print(\"Medication added: \" + name);","lastModifiedDate":"2021-10-08"},{"lineNumber":294,"author":{"gitId":"deonchung"},"content":"        ui.printStock(stock);","lastModifiedDate":"2021-10-08"},{"lineNumber":295,"author":{"gitId":"deonchung"},"content":"        logger.log(Level.INFO, \"Successful addition of stock\");","lastModifiedDate":"2021-10-11"},{"lineNumber":296,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":297,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":298,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"alvintan01":3,"deonchung":288,"a-tph":7}},{"path":"src/main/java/command/stock/DeleteStockCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package command.stock;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import utilities.parser.StockValidator;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"//@@author RemusTeo","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":" * Delete medication based on user input given stock id.","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"public class DeleteStockCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"    private static Logger logger \u003d Logger.getLogger(\"DeleteStock\");","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"    public DeleteStockCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"        logger.log(Level.INFO, \"Start deletion of stock\");","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"        String[] requiredParameters \u003d {};","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"        String[] optionalParameters \u003d {CommandParameters.ID, CommandParameters.EXPIRING};","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"        MedicineValidator validator \u003d new StockValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"                requiredParameters, optionalParameters, CommandSyntax.DELETE_STOCK_COMMAND, true, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"RemusTeo"},"content":"            logger.log(Level.INFO, \"Unsuccessful deletion of stock\");","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"RemusTeo"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"RemusTeo"},"content":"        boolean hasStockId \u003d parameters.containsKey(CommandParameters.ID);","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"RemusTeo"},"content":"        boolean hasExpiryDate \u003d parameters.containsKey(CommandParameters.EXPIRING);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"RemusTeo"},"content":"        // Both fields should not be provided for deletion of stock.","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"RemusTeo"},"content":"        if (hasStockId \u0026\u0026 hasExpiryDate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"RemusTeo"},"content":"            ui.print(\"Deleted aborted! Please provide only one parameter\");","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"RemusTeo"},"content":"            return;","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"RemusTeo"},"content":"        if (hasStockId \u0026\u0026 !hasExpiryDate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"RemusTeo"},"content":"            deleteStockById(ui, medicines);","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"RemusTeo"},"content":"        } else if (!hasStockId \u0026\u0026 hasExpiryDate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"RemusTeo"},"content":"            deleteStockByExpiry(ui, medicines);","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"RemusTeo"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"RemusTeo"},"content":"        storage.saveData(medicines);","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"RemusTeo"},"content":"        logger.log(Level.INFO, \"Successful deletion of stock\");","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"RemusTeo"},"content":"     * Deletion of stock given an id.","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"RemusTeo"},"content":"     * @param ui        Reference to the UI object to print messages.","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"RemusTeo"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"RemusTeo"},"content":"    private void deleteStockById(Ui ui, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"RemusTeo"},"content":"        String stockIdToDelete \u003d parameters.get(CommandParameters.ID);","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"RemusTeo"},"content":"        int stockId \u003d Integer.parseInt(stockIdToDelete);","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"RemusTeo"},"content":"        assert stockId \u003e 0 : \"Stock Id should be more than 0\";","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"RemusTeo"},"content":"        assert stockId \u003c\u003d Stock.getStockCount() : \"Stock Id should not exceed max stock count\";","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"RemusTeo"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"RemusTeo"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"RemusTeo"},"content":"                continue;","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"RemusTeo"},"content":"            Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"RemusTeo"},"content":"            if (stock.getStockId() \u003d\u003d stockId) {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"RemusTeo"},"content":"                stock.setQuantity(0);","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"RemusTeo"},"content":"                stock.setDeleted(true);","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"RemusTeo"},"content":"                logger.log(Level.INFO, \"Stock id found and deleted\");","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"RemusTeo"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":94,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"RemusTeo"},"content":"        ui.print(\"Deleted row with Stock Id: \" + stockId);","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"    //@@author a-tph","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"     * Deletion of expired stocks given a date.","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"     * @param ui        Reference to the UI object to print messages.","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"    private void deleteStockByExpiry(Ui ui, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"        String dateString \u003d parameters.get(CommandParameters.EXPIRING);","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"        Date date \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"            date \u003d DateParser.stringToDate(dateString);","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"        int rowsDeleted \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"            Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"            Date stockExpiryDate \u003d stock.getExpiry();","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"            if (stock.isDeleted()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"            if (stockExpiryDate.before(date) || stockExpiryDate.equals(date)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"                stock.setQuantity(0);","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"                stock.setDeleted(true);","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"                rowsDeleted++;","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"        assert rowsDeleted \u003e\u003d 0 : \"Rows deleted cannot be negative\";","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"        if (rowsDeleted \u003e 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"            logger.log(Level.INFO, \"Expired stock found: deleted \" + rowsDeleted);","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Deleted expired medications! Rows deleted: \" + rowsDeleted);","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"            logger.log(Level.INFO, \"No expired stocks found\");","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Delete aborted! Unable to find expired medications!\");","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"alvintan01":3,"RemusTeo":87,"a-tph":55}},{"path":"src/main/java/command/stock/ListStockCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package command.stock;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.Command;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import utilities.comparators.StockComparator;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import utilities.parser.StockValidator;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"jiangweichen835"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"jiangweichen835"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"jiangweichen835"},"content":"//@@author jiangweichen835","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"jiangweichen835"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"jiangweichen835"},"content":" * Helps to process the liststock command together with filters and sort.","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"jiangweichen835"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"jiangweichen835"},"content":"public class ListStockCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jiangweichen835"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ListStock\");","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"jiangweichen835"},"content":"    public ListStockCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"jiangweichen835"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"jiangweichen835"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"jiangweichen835"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"jiangweichen835"},"content":"        logger.log(Level.INFO, \"Start listing of available stock\");","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"jiangweichen835"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"jiangweichen835"},"content":"        String[] requiredParameter \u003d {};","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"jiangweichen835"},"content":"        String[] optionalParameters \u003d {CommandParameters.ID, CommandParameters.NAME, CommandParameters.PRICE,","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"jiangweichen835"},"content":"                CommandParameters.QUANTITY, CommandParameters.EXPIRY_DATE, CommandParameters.DESCRIPTION,","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"jiangweichen835"},"content":"                CommandParameters.MAX_QUANTITY, CommandParameters.SORT, CommandParameters.REVERSED_SORT,","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"jiangweichen835"},"content":"                CommandParameters.EXPIRING, CommandParameters.LOW};","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"jiangweichen835"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"jiangweichen835"},"content":"        if (!checkValidParameterValues(ui, medicines, requiredParameter, optionalParameters)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"jiangweichen835"},"content":"            return;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"jiangweichen835"},"content":"        ArrayList\u003cStock\u003e filteredStocks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"jiangweichen835"},"content":"        assert (filteredStocks !\u003d null) : \"Array is not initialised\";","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"jiangweichen835"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"jiangweichen835"},"content":"            if (medicine instanceof Stock) { // Ensure that it is a medicine object","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"jiangweichen835"},"content":"                Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"jiangweichen835"},"content":"                if (!stock.isDeleted()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"jiangweichen835"},"content":"                    filteredStocks.add(stock);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"jiangweichen835"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"jiangweichen835"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"jiangweichen835"},"content":"        filteredStocks \u003d filterStocks(filteredStocks);","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"jiangweichen835"},"content":"        ui.printStocks(filteredStocks, medicines);","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"jiangweichen835"},"content":"        logger.log(Level.INFO, \"Successful listing of stock\");","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"jiangweichen835"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"jiangweichen835"},"content":"     * Helps to filter stocks based on the user\u0027s input.","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"jiangweichen835"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"jiangweichen835"},"content":"     * @param filteredStocks Arraylist of Stock objects.","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"jiangweichen835"},"content":"     * @return Arraylist of filtered Stock objects based on the user\u0027s parameters values.","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"jiangweichen835"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"jiangweichen835"},"content":"    private ArrayList\u003cStock\u003e filterStocks(ArrayList\u003cStock\u003e filteredStocks) {","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"jiangweichen835"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"jiangweichen835"},"content":"            String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"jiangweichen835"},"content":"            switch (parameter) {","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"jiangweichen835"},"content":"            case CommandParameters.ID:","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"jiangweichen835"},"content":"                filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"jiangweichen835"},"content":"                        m.getStockId() \u003d\u003d Integer.parseInt(parameterValue)).collect(Collectors.toList());","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"jiangweichen835"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"jiangweichen835"},"content":"            case CommandParameters.NAME:","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"jiangweichen835"},"content":"                filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"jiangweichen835"},"content":"                                (m.getMedicineName().toUpperCase()).contains(parameterValue.toUpperCase()))","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"jiangweichen835"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"jiangweichen835"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"jiangweichen835"},"content":"            case CommandParameters.PRICE:","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"jiangweichen835"},"content":"                filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"jiangweichen835"},"content":"                        m.getPrice() \u003d\u003d Double.parseDouble(parameterValue)).collect(Collectors.toList());","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"jiangweichen835"},"content":"                break;","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"jiangweichen835"},"content":"            case CommandParameters.LOW:","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"jiangweichen835"},"content":"                filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"jiangweichen835"},"content":"                        m.getQuantity() \u003c\u003d Integer.parseInt(parameterValue)).collect(Collectors.toList());","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"jiangweichen835"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"jiangweichen835"},"content":"            case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"jiangweichen835"},"content":"                filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"jiangweichen835"},"content":"                        m.getQuantity() \u003d\u003d Integer.parseInt(parameterValue)).collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"jiangweichen835"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"jiangweichen835"},"content":"            case CommandParameters.EXPIRING:","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"jiangweichen835"},"content":"                try {","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"jiangweichen835"},"content":"                    Date expiryDate \u003d DateParser.stringToDate(parameterValue);","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"jiangweichen835"},"content":"                    filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"jiangweichen835"},"content":"                                    m.getExpiry().before(expiryDate) || m.getExpiry().equals(expiryDate))","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"jiangweichen835"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"jiangweichen835"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"jiangweichen835"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"jiangweichen835"},"content":"                }","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"jiangweichen835"},"content":"                break;","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"jiangweichen835"},"content":"            case CommandParameters.EXPIRY_DATE:","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"jiangweichen835"},"content":"                try {","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"jiangweichen835"},"content":"                    Date expiryDate \u003d DateParser.stringToDate(parameterValue);","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"jiangweichen835"},"content":"                    filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"jiangweichen835"},"content":"                            m.getExpiry().equals(expiryDate)).collect(Collectors.toList());","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"jiangweichen835"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"jiangweichen835"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"jiangweichen835"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"jiangweichen835"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"jiangweichen835"},"content":"            case CommandParameters.DESCRIPTION:","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"jiangweichen835"},"content":"                filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"jiangweichen835"},"content":"                                (m.getDescription().toUpperCase()).contains(parameterValue.toUpperCase()))","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"jiangweichen835"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"jiangweichen835"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"jiangweichen835"},"content":"            case CommandParameters.MAX_QUANTITY:","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"jiangweichen835"},"content":"                filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"jiangweichen835"},"content":"                        m.getMaxQuantity() \u003d\u003d Integer.parseInt(parameterValue)).collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"jiangweichen835"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"jiangweichen835"},"content":"            case CommandParameters.SORT:","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"jiangweichen835"},"content":"                filteredStocks.sort(new StockComparator(parameterValue.toLowerCase(), false));","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"jiangweichen835"},"content":"                break;","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"jiangweichen835"},"content":"            case CommandParameters.REVERSED_SORT:","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"jiangweichen835"},"content":"                filteredStocks.sort(new StockComparator(parameterValue.toLowerCase(), true));","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"jiangweichen835"},"content":"                break;","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"jiangweichen835"},"content":"            default:","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"jiangweichen835"},"content":"                return filteredStocks;","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"jiangweichen835"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"jiangweichen835"},"content":"        return filteredStocks;","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"jiangweichen835"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"jiangweichen835"},"content":"     * Checks if user input are valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"jiangweichen835"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"jiangweichen835"},"content":"     * @param ui                 Reference to the UI object to print messages.","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"jiangweichen835"},"content":"     * @param medicines          List of all medicines.","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"jiangweichen835"},"content":"     * @param requiredParameters The required parameters to check.","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"jiangweichen835"},"content":"     * @param optionalParameters The optional parameters to check.","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"jiangweichen835"},"content":"     * @return Boolean value indicating if parameter and parameter values are valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"jiangweichen835"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"jiangweichen835"},"content":"    private boolean checkValidParameterValues(Ui ui, ArrayList\u003cMedicine\u003e medicines, String[] requiredParameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"jiangweichen835"},"content":"                                              String[] optionalParameters) {","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"jiangweichen835"},"content":"        MedicineValidator validator \u003d new StockValidator();","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"jiangweichen835"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"jiangweichen835"},"content":"                requiredParameters, optionalParameters, CommandSyntax.LIST_STOCK_COMMAND, false, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"jiangweichen835"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"jiangweichen835"},"content":"            return false;","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"jiangweichen835"},"content":"        return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"jiangweichen835"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"alvintan01":14,"a-tph":5,"jiangweichen835":141}},{"path":"src/main/java/command/stock/UpdateStockCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package command.stock;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.MedicineValidator;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import utilities.parser.StockManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import utilities.parser.StockValidator;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import utilities.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"//@@author a-tph","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":" * Update medication information based on user input given stock id.","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"public class UpdateStockCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"    private static Logger logger \u003d Logger.getLogger(\"UpdateStock\");","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"    public UpdateStockCommand(LinkedHashMap\u003cString, String\u003e parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"    public void execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"        logger.log(Level.INFO, \"Start of UpdateStock command execution.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"        String[] requiredParameters \u003d {CommandParameters.ID};","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"        String[] optionalParameters \u003d {CommandParameters.PRICE, CommandParameters.QUANTITY,","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"                CommandParameters.EXPIRY_DATE, CommandParameters.DESCRIPTION, CommandParameters.NAME,","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"                CommandParameters.MAX_QUANTITY};","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"        MedicineValidator validator \u003d new StockValidator();","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"        boolean isInvalidInput \u003d validator.containsInvalidParametersAndValues(ui, medicines, parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"                requiredParameters, optionalParameters, CommandSyntax.UPDATE_STOCK_COMMAND, true, validator);","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"        Stock stock \u003d StockManager.extractStockObject(parameters, medicines);","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"        boolean isValidQuantityValues \u003d processQuantityValues(ui, medicines, stock);","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"        if (!isValidQuantityValues) {","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"        boolean isValidExpDate \u003d processDateInput(ui, medicines, stock);","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"        if (!isValidExpDate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cStock\u003e oldFilteredStocks \u003d StockManager.getFilteredStocksByName(medicines, stock.getMedicineName());","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"        if (parameters.containsKey(CommandParameters.NAME)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"            addNewRowForUpdates(oldFilteredStocks, medicines);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"            stock \u003d getNewStock(medicines, stock);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cStock\u003e filteredStocks \u003d StockManager.getFilteredStocksByName(medicines, stock.getMedicineName());","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"        // Default value for updating all affected rows","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"        boolean isAffectedCommand \u003d checkAffectedCommand();","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"        if (!isAffectedCommand) {","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"            filteredStocks.clear();","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"            filteredStocks.add(stock);","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"        int rowsAffected \u003d filteredStocks.size();","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"        setUpdatesByStockId(filteredStocks, stock);","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"        ui.print(\"Updated! Number of rows affected: \" + rowsAffected);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"        printUpdatedStockId(ui, filteredStocks, oldFilteredStocks);","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"        ui.printStocks(filteredStocks, medicines);","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"        storage.saveData(medicines);","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"        logger.log(Level.INFO, \"End of UpdateStock command execution.\");","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"     * Prints the change of stock id for affected records.","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"     * @param ui                Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"     * @param filteredStocks    Filtered stocks of the updated records.","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"     * @param oldFilteredStocks Filtered stocks of the old records.","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"    private void printUpdatedStockId(Ui ui, ArrayList\u003cStock\u003e filteredStocks, ArrayList\u003cStock\u003e oldFilteredStocks) {","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"        if (parameters.containsKey(CommandParameters.NAME)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Stock Id changed from:\");","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"            for (int i \u003d 0; i \u003c filteredStocks.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"                ui.print(oldFilteredStocks.get(i).getStockId() + \" -\u003e \" + filteredStocks.get(i).getStockId());","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"     * Checks if the command triggers multiple row updates.","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"     * @return Boolean true if the command triggers multiple row updates.","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"    private boolean checkAffectedCommand() {","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"        String[] affectedCommands \u003d {CommandParameters.NAME, CommandParameters.DESCRIPTION,","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"                CommandParameters.MAX_QUANTITY};","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"        boolean isAffectedCommand \u003d false;","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"        for (String affectedCommand : affectedCommands) {","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"            if (parameters.containsKey(affectedCommand)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"                isAffectedCommand \u003d true;","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"        return isAffectedCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"     * Retrieves the updated stock object.","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"     * @param stock     Stock object of the given stock id.","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"     * @return The updated stock object.","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"    private Stock getNewStock(ArrayList\u003cMedicine\u003e medicines, Stock stock) {","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"        Stock newStock \u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"            if (((Stock) medicine).isDeleted()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"            boolean isSameName \u003d medicine.getMedicineName().equalsIgnoreCase(stock.getMedicineName());","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"            boolean isSameExpDate \u003d ((Stock) medicine).getExpiry().equals(stock.getExpiry());","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"            if (isSameName \u0026\u0026 isSameExpDate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"                String newStockId \u003d String.valueOf(((Stock) medicine).getStockId());","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"                parameters.put(CommandParameters.ID, newStockId);","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"                newStock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"a-tph"},"content":"        return newStock;","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"a-tph"},"content":"     * Add new rows when medicine name gets updated.","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"a-tph"},"content":"     * @param filteredStocks Arraylist of filtered medicine stocks.","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"a-tph"},"content":"     * @param medicines      Arraylist of all medicines.","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"a-tph"},"content":"    private void addNewRowForUpdates(ArrayList\u003cStock\u003e filteredStocks, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"a-tph"},"content":"        // Initialise new stock to get a new Stock Id","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"a-tph"},"content":"        for (Stock stock : filteredStocks) {","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"a-tph"},"content":"            String name \u003d stock.getMedicineName();","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"a-tph"},"content":"            double price \u003d stock.getPrice();","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"a-tph"},"content":"            int quantity \u003d stock.getQuantity();","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"a-tph"},"content":"            Date expiryDate \u003d stock.getExpiry();","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"a-tph"},"content":"            String description \u003d stock.getDescription();","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"a-tph"},"content":"            int maxQuantity \u003d stock.getMaxQuantity();","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"a-tph"},"content":"            Stock newStock \u003d new Stock(name, price, quantity, expiryDate, description, maxQuantity);","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"a-tph"},"content":"            medicines.add(newStock);","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"a-tph"},"content":"        for (Stock stock : filteredStocks) {","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"a-tph"},"content":"            for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"a-tph"},"content":"                if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"a-tph"},"content":"                    continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"a-tph"},"content":"                int stockId \u003d ((Stock) medicine).getStockId();","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"a-tph"},"content":"                if (stockId \u003d\u003d stock.getStockId()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"a-tph"},"content":"                    ((Stock) medicine).setDeleted(true);","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"a-tph"},"content":"                    medicine.setQuantity(0);","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"a-tph"},"content":"     * Process valid date input to be updated given a stock id.","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"a-tph"},"content":"     * @param ui        Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"a-tph"},"content":"     * @param stock     Stock object of the given stock id.","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value indicating if quantity values are valid.","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"a-tph"},"content":"    private boolean processDateInput(Ui ui, ArrayList\u003cMedicine\u003e medicines, Stock stock) {","lastModifiedDate":"2021-11-03"},{"lineNumber":191,"author":{"gitId":"a-tph"},"content":"        logger.log(Level.INFO, \"Processing date input for update stock...\");","lastModifiedDate":"2021-10-16"},{"lineNumber":192,"author":{"gitId":"a-tph"},"content":"        boolean hasExpiryDate \u003d parameters.containsKey(CommandParameters.EXPIRY_DATE);","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"a-tph"},"content":"        if (!hasExpiryDate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"a-tph"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"a-tph"},"content":"        Date expiryDate \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":199,"author":{"gitId":"a-tph"},"content":"            expiryDate \u003d DateParser.stringToDate(parameters.get(CommandParameters.EXPIRY_DATE));","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"a-tph"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"a-tph"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-06"},{"lineNumber":202,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":203,"author":{"gitId":"a-tph"},"content":"        StockValidator stockValidator \u003d new StockValidator();","lastModifiedDate":"2021-11-02"},{"lineNumber":204,"author":{"gitId":"a-tph"},"content":"        String name \u003d stock.getMedicineName();","lastModifiedDate":"2021-10-16"},{"lineNumber":205,"author":{"gitId":"a-tph"},"content":"        logger.log(Level.INFO, \"End processing date input for update stock.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":206,"author":{"gitId":"a-tph"},"content":"        return stockValidator.dateValidityChecker(ui, medicines, expiryDate, name);","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":208,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":209,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":210,"author":{"gitId":"a-tph"},"content":"     * Process quantity values to be updated given a stock id.","lastModifiedDate":"2021-10-06"},{"lineNumber":211,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":212,"author":{"gitId":"a-tph"},"content":"     * @param ui        Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-03"},{"lineNumber":213,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-10-04"},{"lineNumber":214,"author":{"gitId":"a-tph"},"content":"     * @param stock     Stock object of the given stock id.","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value indicating if quantity values are valid.","lastModifiedDate":"2021-10-06"},{"lineNumber":216,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":217,"author":{"gitId":"a-tph"},"content":"    private boolean processQuantityValues(Ui ui, ArrayList\u003cMedicine\u003e medicines, Stock stock) {","lastModifiedDate":"2021-11-03"},{"lineNumber":218,"author":{"gitId":"a-tph"},"content":"        logger.log(Level.INFO, \"Processing quantity values for update stock...\");","lastModifiedDate":"2021-10-16"},{"lineNumber":219,"author":{"gitId":"a-tph"},"content":"        String name \u003d stock.getMedicineName();","lastModifiedDate":"2021-10-06"},{"lineNumber":220,"author":{"gitId":"a-tph"},"content":"        int quantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":221,"author":{"gitId":"a-tph"},"content":"        int maxQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":222,"author":{"gitId":"a-tph"},"content":"        int totalStockQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":223,"author":{"gitId":"a-tph"},"content":"        int initialQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":224,"author":{"gitId":"a-tph"},"content":"        int updatedQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":225,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":226,"author":{"gitId":"a-tph"},"content":"        boolean hasQuantity \u003d parameters.containsKey(CommandParameters.QUANTITY);","lastModifiedDate":"2021-10-03"},{"lineNumber":227,"author":{"gitId":"a-tph"},"content":"        boolean hasMaxQuantity \u003d parameters.containsKey(CommandParameters.MAX_QUANTITY);","lastModifiedDate":"2021-10-03"},{"lineNumber":228,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":229,"author":{"gitId":"a-tph"},"content":"        // initialise quantity and max quantity based on the different combinations of user inputs","lastModifiedDate":"2021-10-06"},{"lineNumber":230,"author":{"gitId":"a-tph"},"content":"        if (hasQuantity \u0026\u0026 hasMaxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":231,"author":{"gitId":"a-tph"},"content":"            totalStockQuantity \u003d StockManager.getTotalStockQuantity(medicines, name);","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"a-tph"},"content":"            initialQuantity \u003d stock.getQuantity();","lastModifiedDate":"2021-10-06"},{"lineNumber":233,"author":{"gitId":"a-tph"},"content":"            updatedQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.QUANTITY));","lastModifiedDate":"2021-10-06"},{"lineNumber":234,"author":{"gitId":"a-tph"},"content":"            quantity \u003d totalStockQuantity - initialQuantity + updatedQuantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":235,"author":{"gitId":"a-tph"},"content":"            maxQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.MAX_QUANTITY));","lastModifiedDate":"2021-10-06"},{"lineNumber":236,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":237,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":238,"author":{"gitId":"a-tph"},"content":"        if (hasQuantity \u0026\u0026 !hasMaxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":239,"author":{"gitId":"a-tph"},"content":"            totalStockQuantity \u003d StockManager.getTotalStockQuantity(medicines, name);","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"a-tph"},"content":"            initialQuantity \u003d stock.getQuantity();","lastModifiedDate":"2021-10-06"},{"lineNumber":241,"author":{"gitId":"a-tph"},"content":"            updatedQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.QUANTITY));","lastModifiedDate":"2021-10-06"},{"lineNumber":242,"author":{"gitId":"a-tph"},"content":"            quantity \u003d totalStockQuantity - initialQuantity + updatedQuantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":243,"author":{"gitId":"a-tph"},"content":"            maxQuantity \u003d StockManager.getMaxStockQuantity(medicines, name);","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":245,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":246,"author":{"gitId":"a-tph"},"content":"        if (!hasQuantity \u0026\u0026 hasMaxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":247,"author":{"gitId":"a-tph"},"content":"            quantity \u003d StockManager.getTotalStockQuantity(medicines, name);","lastModifiedDate":"2021-10-18"},{"lineNumber":248,"author":{"gitId":"a-tph"},"content":"            maxQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.MAX_QUANTITY));","lastModifiedDate":"2021-10-06"},{"lineNumber":249,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":250,"author":{"gitId":"a-tph"},"content":"        StockValidator stockValidator \u003d new StockValidator();","lastModifiedDate":"2021-11-02"},{"lineNumber":251,"author":{"gitId":"a-tph"},"content":"        logger.log(Level.INFO, \"End processing quantity values for update stock.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":252,"author":{"gitId":"a-tph"},"content":"        return stockValidator.quantityValidityChecker(ui, quantity, maxQuantity);","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":254,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":255,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":256,"author":{"gitId":"a-tph"},"content":"     * Update values provided by user for a given stock id.","lastModifiedDate":"2021-10-03"},{"lineNumber":257,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":258,"author":{"gitId":"a-tph"},"content":"     * @param filteredStocks Arraylist of filtered medicine stocks.","lastModifiedDate":"2021-10-13"},{"lineNumber":259,"author":{"gitId":"a-tph"},"content":"     * @param stock          Stock object of the given stock id.","lastModifiedDate":"2021-10-04"},{"lineNumber":260,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":261,"author":{"gitId":"a-tph"},"content":"    private void setUpdatesByStockId(ArrayList\u003cStock\u003e filteredStocks, Stock stock) {","lastModifiedDate":"2021-11-03"},{"lineNumber":262,"author":{"gitId":"a-tph"},"content":"        logger.log(Level.INFO, \"Attempt to update stock information.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":263,"author":{"gitId":"a-tph"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":264,"author":{"gitId":"a-tph"},"content":"            String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-03"},{"lineNumber":265,"author":{"gitId":"a-tph"},"content":"            switch (parameter) {","lastModifiedDate":"2021-10-03"},{"lineNumber":266,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.NAME:","lastModifiedDate":"2021-10-10"},{"lineNumber":267,"author":{"gitId":"a-tph"},"content":"                for (Stock targetStock : filteredStocks) {","lastModifiedDate":"2021-10-13"},{"lineNumber":268,"author":{"gitId":"a-tph"},"content":"                    targetStock.setMedicineName(parameterValue);","lastModifiedDate":"2021-10-06"},{"lineNumber":269,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":270,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":271,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.PRICE:","lastModifiedDate":"2021-10-03"},{"lineNumber":272,"author":{"gitId":"a-tph"},"content":"                stock.setPrice(Double.parseDouble(parameterValue));","lastModifiedDate":"2021-10-04"},{"lineNumber":273,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":274,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-03"},{"lineNumber":275,"author":{"gitId":"a-tph"},"content":"                stock.setQuantity(Integer.parseInt(parameterValue));","lastModifiedDate":"2021-10-04"},{"lineNumber":276,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":277,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.EXPIRY_DATE:","lastModifiedDate":"2021-10-03"},{"lineNumber":278,"author":{"gitId":"a-tph"},"content":"                try {","lastModifiedDate":"2021-10-03"},{"lineNumber":279,"author":{"gitId":"a-tph"},"content":"                    stock.setExpiry(DateParser.stringToDate(parameterValue));","lastModifiedDate":"2021-10-04"},{"lineNumber":280,"author":{"gitId":"a-tph"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":281,"author":{"gitId":"a-tph"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-10-03"},{"lineNumber":282,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-03"},{"lineNumber":283,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":284,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.DESCRIPTION:","lastModifiedDate":"2021-10-03"},{"lineNumber":285,"author":{"gitId":"a-tph"},"content":"                for (Stock targetStock : filteredStocks) {","lastModifiedDate":"2021-10-13"},{"lineNumber":286,"author":{"gitId":"a-tph"},"content":"                    targetStock.setDescription(parameterValue);","lastModifiedDate":"2021-10-13"},{"lineNumber":287,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":288,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":289,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.MAX_QUANTITY:","lastModifiedDate":"2021-10-03"},{"lineNumber":290,"author":{"gitId":"a-tph"},"content":"                for (Stock targetStock : filteredStocks) {","lastModifiedDate":"2021-10-13"},{"lineNumber":291,"author":{"gitId":"a-tph"},"content":"                    targetStock.setMaxQuantity(Integer.parseInt(parameterValue));","lastModifiedDate":"2021-10-13"},{"lineNumber":292,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":293,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":294,"author":{"gitId":"a-tph"},"content":"            default:","lastModifiedDate":"2021-10-03"},{"lineNumber":295,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":296,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":297,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":298,"author":{"gitId":"a-tph"},"content":"        logger.log(Level.INFO, \"Updated stock information with given user input\");","lastModifiedDate":"2021-10-10"},{"lineNumber":299,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":300,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"alvintan01":3,"a-tph":297}},{"path":"src/main/java/errors/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package errors;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" * Represents the InvalidCommandException thrown when a command is not found in command.CommandList.","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"alvintan01":9}},{"path":"src/main/java/errors/InvalidDataException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"package errors;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"//@@author RemusTeo","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":" * Represents the InvalidDataException thrown when data is corrupted or missing during loading from file.","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"public class InvalidDataException extends Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"    public InvalidDataException(String message) {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"        super(message);","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"RemusTeo":11}},{"path":"src/main/java/inventory/Medicine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" * Represents the generic stock for the application. It contains the medicine name and quantity.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":" * It is inherited by Prescription, Medicine and Order objects.","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"public abstract class Medicine {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    protected String medicineName;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    protected int quantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    private static ArrayList\u003cMedicine\u003e medicines \u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"     * Helps to create the medicine arraylist or returns the arraylist if it exists.","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"     * @return The medicine\u0027s arraylist.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public static ArrayList\u003cMedicine\u003e getInstance() {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        if (medicines \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"            medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        return medicines;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    public Medicine(String medicineName, int quantity) {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        this.medicineName \u003d medicineName;","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public String getMedicineName() {","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        return medicineName;","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    public void setMedicineName(String medicineName) {","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        this.medicineName \u003d medicineName;","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    public int getQuantity() {","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        return quantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    public void setQuantity(int quantity) {","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"RemusTeo"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"RemusTeo"},"content":"    public abstract String toArchiveFormat();","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"alvintan01":46,"RemusTeo":4}},{"path":"src/main/java/inventory/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":" * Represents an Order. An Order is represented by order_id, medicine name, quantity, date and isDelivered.","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"public class Order extends Medicine {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String ID \u003d \"ID\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME \u003d \"NAME\";","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY \u003d \"QUANTITY\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String DATE \u003d \"DATE\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String STATUS \u003d \"STATUS\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    // Used for sorting","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public static final String ID_LOWERCASE \u003d \"id\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME_LOWERCASE \u003d \"name\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY_LOWERCASE \u003d \"quantity\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public static final String DATE_LOWERCASE \u003d \"date\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public static final String STATUS_LOWERCASE \u003d \"status\";","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public static final String[] COLUMNS \u003d {ID, NAME, QUANTITY, DATE, STATUS};","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    private static int orderCount \u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    protected int orderId;","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    protected Date date;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    protected boolean isDelivered;","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public Order(String medicineName, int quantity, Date date) {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        super(medicineName, quantity);","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        orderCount++;","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        this.orderId \u003d orderCount;","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        this.isDelivered \u003d false;","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    public static int getOrderCount() {","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        return orderCount;","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    public static void setOrderCount(int orderCount) {","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        Order.orderCount \u003d orderCount;","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"    public int getOrderId() {","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        return orderId;","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    public void setOrderId(int orderId) {","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        this.orderId \u003d orderId;","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"    public Date getDate() {","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        return date;","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"    public void setDate(Date date) {","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"    public boolean isDelivered() {","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"        return isDelivered;","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"    public void setDelivered() {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"        isDelivered \u003d true;","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"    public String getStatus() {","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"        if (isDelivered) {","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"            return \"DELIVERED\";","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"            return \"PENDING\";","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"RemusTeo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"RemusTeo"},"content":"        String fileFormat \u003d getOrderId() + \"|\" + getMedicineName() + \"|\" + getQuantity() + \"|\"","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"RemusTeo"},"content":"                + DateParser.dateToString(getDate()) + \"|\" + getStatus();","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"RemusTeo"},"content":"        return fileFormat;","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"RemusTeo"},"content":"    public String toArchiveFormat() {","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"RemusTeo"},"content":"        String archiveFormat \u003d \"[ORDER ID: \" + getOrderId() + \"] \" + getQuantity() + \" \" + getMedicineName()","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"RemusTeo"},"content":"                + \" WAS ORDERED ON \" + DateParser.dateToString(getDate()) + \". STATUS: \" + getStatus();","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"RemusTeo"},"content":"        return archiveFormat;","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"alvintan01":76,"RemusTeo":14}},{"path":"src/main/java/inventory/Prescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":" * Represents a Dispensed object. A Dispensed object is represented by medicine name, quantity, customer\u0027s NRIC,","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":" * date and staff name.","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"public class Prescription extends Medicine {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String ID \u003d \"ID\";","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME \u003d \"NAME\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY \u003d \"QUANTITY\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String CUSTOMER_ID \u003d \"CUSTOMER ID\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String DATE \u003d \"DATE\";","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String STAFF \u003d \"STAFF\";","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"    public static final String STOCK_ID \u003d \"STOCK ID\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    // Used for sorting","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public static final String ID_LOWERCASE \u003d \"id\";","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME_LOWERCASE \u003d \"name\";","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY_LOWERCASE \u003d \"quantity\";","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public static final String CUSTOMER_ID_LOWERCASE \u003d \"customer id\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public static final String DATE_LOWERCASE \u003d \"date\";","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    public static final String STAFF_LOWERCASE \u003d \"staff\";","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public static final String STOCK_ID_LOWERCASE \u003d \"stock id\";","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    public static final String[] COLUMNS \u003d {ID, NAME, QUANTITY, CUSTOMER_ID, DATE, STAFF, STOCK_ID};","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    private static int prescriptionCount \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    protected int prescriptionId;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"    protected String customerId;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    protected Date date;","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    protected String staff;","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"    protected int stockId;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"    public Prescription(String medicineName, int quantity, String customerId, Date date, String staff, int stockId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        super(medicineName, quantity);","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        prescriptionCount++;","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        this.prescriptionId \u003d prescriptionCount;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        this.staff \u003d staff;","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"        this.stockId \u003d stockId;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"    public static int getPrescriptionCount() {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"        return prescriptionCount;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"    public static void setPrescriptionCount(int prescriptionCount) {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"        Prescription.prescriptionCount \u003d prescriptionCount;","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"    public int getPrescriptionId() {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"        return prescriptionId;","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"    public void setPrescriptionId(int prescriptionId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"        this.prescriptionId \u003d prescriptionId;","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"deonchung"},"content":"    public String getCustomerId() {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"deonchung"},"content":"        return customerId;","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"deonchung"},"content":"    public void setCustomerId(String customerId) {","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"deonchung"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"    public Date getDate() {","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"        return date;","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"    public void setDate(Date date) {","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"    public String getStaff() {","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"        return staff;","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"    public void setStaff(String staff) {","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"        this.staff \u003d staff;","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"deonchung"},"content":"    public int getStockId() {","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"deonchung"},"content":"        return stockId;","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"deonchung"},"content":"    public void setStockId(int stockId) {","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"deonchung"},"content":"        this.stockId \u003d stockId;","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"RemusTeo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"        String fileFormat \u003d getPrescriptionId() + \"|\" + getMedicineName() + \"|\" + getQuantity() + \"|\"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"RemusTeo"},"content":"                + getCustomerId() + \"|\" + DateParser.dateToString(getDate()) + \"|\" + getStaff() + \"|\" + getStockId();","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"RemusTeo"},"content":"        return fileFormat;","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"RemusTeo"},"content":"    public String toArchiveFormat() {","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"        String archiveFormat \u003d \"[PRESCRIPTION ID: \" + getPrescriptionId() + \"] \" + getQuantity() + \" \"","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"                + getMedicineName() + \" [STOCK ID: \" + getStockId() + \"] WAS PRESCRIBED BY \" + getStaff().toUpperCase()","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"                + \" TO \" + getCustomerId().toUpperCase() + \" ON \" + DateParser.dateToString(getDate());","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"RemusTeo"},"content":"        return archiveFormat;","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"alvintan01":80,"RemusTeo":11,"deonchung":18}},{"path":"src/main/java/inventory/Stock.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":" * Represents a Medicine object. A Medicine object is represented by stock_id, name, price, quantity, expiry,","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":" * description and max quantity.","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"public class Stock extends Medicine {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String ID \u003d \"ID\";","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME \u003d \"NAME\";","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String PRICE \u003d \"PRICE\";","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY \u003d \"QUANTITY\";","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String EXPIRY_DATE \u003d \"EXPIRY_DATE\";","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String DESCRIPTION \u003d \"DESCRIPTION\";","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public static final String MAX_QUANTITY \u003d \"MAX_QUANTITY\";","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    // Used for sorting","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public static final String ID_LOWERCASE \u003d \"id\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME_LOWERCASE \u003d \"name\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public static final String PRICE_LOWERCASE \u003d \"price\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY_LOWERCASE \u003d \"quantity\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public static final String EXPIRY_DATE_LOWERCASE \u003d \"expiry\";","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    public static final String DESCRIPTION_LOWERCASE \u003d \"description\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public static final String MAX_QUANTITY_LOWERCASE \u003d \"max_quantity\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    public static final String[] COLUMNS \u003d {ID, NAME, PRICE, QUANTITY, EXPIRY_DATE, DESCRIPTION, MAX_QUANTITY};","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    private static int stockCount \u003d 0;","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"    protected int stockId;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    protected double price;","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    protected Date expiry;","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    protected String description;","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    protected int maxQuantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    protected boolean isDeleted \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    public Stock(String name, double price, int quantity, Date expiry, String description, int maxQuantity) {","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        super(name, quantity);","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        stockCount++;","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"        this.stockId \u003d stockCount;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        this.expiry \u003d expiry;","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        this.maxQuantity \u003d maxQuantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"    public static int getStockCount() {","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        return stockCount;","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    public static void setStockCount(int stockCount) {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"        Stock.stockCount \u003d stockCount;","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"RemusTeo"},"content":"    public int getStockId() {","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"RemusTeo"},"content":"        return stockId;","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"RemusTeo"},"content":"    public void setStockId(int stockId) {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"RemusTeo"},"content":"        this.stockId \u003d stockId;","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"    public double getPrice() {","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"        return price;","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"    public void setPrice(double price) {","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"    public Date getExpiry() {","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"        return expiry;","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"    public void setExpiry(Date expiry) {","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"        this.expiry \u003d expiry;","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"        return description;","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"    public int getMaxQuantity() {","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"        return maxQuantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"    public void setMaxQuantity(int maxQuantity) {","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"        this.maxQuantity \u003d maxQuantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"    public boolean isDeleted() {","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"        return isDeleted;","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"    public void setDeleted(boolean deleted) {","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"        isDeleted \u003d deleted;","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"RemusTeo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"RemusTeo"},"content":"        String fileFormat \u003d getStockId() + \"|\" + getMedicineName() + \"|\" + getPrice() + \"|\" + getQuantity() + \"|\"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"RemusTeo"},"content":"                + DateParser.dateToString(getExpiry()) + \"|\" + getDescription() + \"|\" + getMaxQuantity() + \"|\"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"RemusTeo"},"content":"                + isDeleted();","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"RemusTeo"},"content":"        return fileFormat;","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"RemusTeo"},"content":"    // Dummy method since Stock does not use archive.","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"RemusTeo"},"content":"    public String toArchiveFormat() {","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"RemusTeo"},"content":"        String archiveFormat \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"RemusTeo"},"content":"        return archiveFormat;","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"alvintan01":96,"RemusTeo":20,"a-tph":1}},{"path":"src/main/java/utilities/comparators/OrderComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package utilities.comparators;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * Helps to sort the order based on the column provided.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"public class OrderComparator implements Comparator\u003cOrder\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    private String column;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    private Boolean isReversed;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public OrderComparator(String column, Boolean isReversed) {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        this.column \u003d column;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        this.isReversed \u003d isReversed;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public int compare(Order order1, Order order2) {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        Order order;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        if (isReversed) { // If the user chooses to sort in reverse order","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"            order \u003d order2;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"            order2 \u003d order1;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"            order1 \u003d order;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        switch (column) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        case Order.ID_LOWERCASE:","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.ID:","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(order1.getOrderId(), order2.getOrderId());","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        case Order.NAME_LOWERCASE:","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.NAME:","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            return order1.getMedicineName().compareTo(order2.getMedicineName());","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        case Order.QUANTITY_LOWERCASE:","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(order1.getQuantity(), order2.getQuantity());","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        case Order.DATE_LOWERCASE:","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.DATE:","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"            return order1.getDate().compareTo(order2.getDate());","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"        case Order.STATUS_LOWERCASE:","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.STATUS:","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"            return order1.getStatus().compareTo(order2.getStatus());","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        default:","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"            return 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"alvintan01":52}},{"path":"src/main/java/utilities/comparators/PrescriptionComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package utilities.comparators;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * Helps to sort the medicines based on the column provided.","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"public class PrescriptionComparator implements Comparator\u003cPrescription\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    private String column;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    private Boolean isReversed;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public PrescriptionComparator(String column, Boolean isReversed) {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        this.column \u003d column;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        this.isReversed \u003d isReversed;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public int compare(Prescription prescription1, Prescription prescription2) {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        Prescription prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        if (isReversed) { // If the user chooses to sort in reverse order","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"            prescription \u003d prescription2;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"            prescription2 \u003d prescription1;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"            prescription1 \u003d prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        switch (column) {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        case Prescription.ID_LOWERCASE:","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.ID:","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(prescription1.getPrescriptionId(), prescription2.getPrescriptionId());","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        case Prescription.NAME_LOWERCASE:","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.NAME:","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            return prescription1.getMedicineName().compareTo(prescription2.getMedicineName());","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        case Prescription.QUANTITY_LOWERCASE:","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(prescription1.getQuantity(), prescription2.getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        case Prescription.CUSTOMER_ID_LOWERCASE:","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.CUSTOMER_ID:","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"            return prescription1.getCustomerId().compareTo(prescription2.getCustomerId());","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"        case Prescription.DATE_LOWERCASE:","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.DATE:","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"            return prescription1.getDate().compareTo(prescription2.getDate());","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        case Prescription.STAFF_LOWERCASE:","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.STAFF:","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"            return prescription1.getStaff().compareTo(prescription2.getStaff());","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"        case Prescription.STOCK_ID_LOWERCASE:","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.STOCK_ID:","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(prescription1.getStockId(), prescription2.getStockId());","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"            return 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"alvintan01":58}},{"path":"src/main/java/utilities/comparators/StockComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.comparators;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * Helps to sort the medicines based on the column provided.","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"public class StockComparator implements Comparator\u003cStock\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    private String column;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    private Boolean isReversed;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public StockComparator(String column, Boolean isReversed) {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        this.column \u003d column;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        this.isReversed \u003d isReversed;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public int compare(Stock stock1, Stock stock2) {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        Stock stock;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        if (isReversed) { // If the user chooses to sort in reverse order","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"            stock \u003d stock2;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"            stock2 \u003d stock1;","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"            stock1 \u003d stock;","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        switch (column) {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        case Stock.ID_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.ID:","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(stock1.getStockId(), stock2.getStockId());","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        case Stock.NAME_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.NAME:","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"            return stock1.getMedicineName().compareTo(stock2.getMedicineName());","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        case Stock.PRICE_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.PRICE:","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"            return Double.compare(stock1.getPrice(), stock2.getPrice());","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        case Stock.QUANTITY_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(stock1.getQuantity(), stock2.getQuantity());","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        case Stock.EXPIRY_DATE_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.EXPIRY_DATE:","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"            return stock1.getExpiry().compareTo(stock2.getExpiry());","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        case Stock.DESCRIPTION_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.DESCRIPTION:","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"            return stock1.getDescription().compareTo(stock2.getDescription());","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        case Stock.MAX_QUANTITY_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.MAX_QUANTITY:","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(stock1.getMaxQuantity(), stock2.getMaxQuantity());","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"        default:","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"            return 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"alvintan01":56,"a-tph":1}},{"path":"src/main/java/utilities/parser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.Command;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import command.ExitCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import command.HelpCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import command.PurgeCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import command.order.ReceiveOrderCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import command.prescription.AddPrescriptionCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import command.prescription.ArchivePrescriptionCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import command.prescription.DeletePrescriptionCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import command.prescription.ListPrescriptionCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import command.prescription.UpdatePrescriptionCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"import command.stock.AddStockCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"import command.stock.DeleteStockCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"import command.stock.ListStockCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"import command.stock.UpdateStockCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jiangweichen835"},"content":"import command.order.AddOrderCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"import command.order.ArchiveOrderCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"import command.order.DeleteOrderCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"import command.order.ListOrderCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"import command.order.UpdateOrderCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"import errors.InvalidCommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.ADD;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.ADD_PRESCRIPTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.ADD_ORDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.ADD_STOCK;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"import static command.CommandList.ARCHIVE;","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.ARCHIVE_PRESCRIPTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"import static command.CommandList.ARCHIVE_ORDER;","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.DELETE;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.DELETE_PRESCRIPTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.DELETE_STOCK;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.DELETE_ORDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.EXIT;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.HELP;","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.LIST;","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.LIST_PRESCRIPTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.LIST_STOCK;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.LIST_ORDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.PURGE;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.RECEIVE;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.RECEIVE_ORDER;","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.UPDATE;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.UPDATE_PRESCRIPTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.UPDATE_STOCK;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"jiangweichen835"},"content":"import static command.CommandList.UPDATE_ORDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"import static utilities.parser.Mode.PRESCRIPTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"import static utilities.parser.Mode.ORDER;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"import static utilities.parser.Mode.STOCK;","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":" * Helps to parse the commands given by the user as well as extract the parameters provided.","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"public class CommandParser {","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"    public CommandParser() {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"    private static final String SPACE_DELIMITER \u003d \"\\\\s+\";","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"     * Processes the user input into a Command Object.","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"     * @param command          Input provided by user.","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"     * @param parametersString String parameter entered by user.","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"     * @param mode             The current mode of the program.","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"     * @return A Command object.","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"     * @throws InvalidCommandException If a command does not exist.","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"    public Command processCommand(String command, String parametersString, Mode mode) throws InvalidCommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"        // Append user\u0027s command with mode","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"        if (command.equals(ADD) || command.equals(LIST) || command.equals(UPDATE)","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"                || command.equals(DELETE) || command.equals(ARCHIVE) || command.equals(RECEIVE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"            command \u003d command + mode.name().toLowerCase();","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d parseParameters(parametersString);","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"        switch (command) {","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"        case ADD_PRESCRIPTION:","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"            return new AddPrescriptionCommand(parameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"        case ADD_STOCK:","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"            return new AddStockCommand(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"        case ADD_ORDER:","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"            return new AddOrderCommand(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"        case ARCHIVE_ORDER:","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"            return new ArchiveOrderCommand(parameters);","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"        case ARCHIVE_PRESCRIPTION:","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"            return new ArchivePrescriptionCommand(parameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"        case DELETE_PRESCRIPTION:","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"            return new DeletePrescriptionCommand(parameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"        case DELETE_STOCK:","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"            return new DeleteStockCommand(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"        case DELETE_ORDER:","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"            return new DeleteOrderCommand(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"        case EXIT:","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"        case HELP:","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"        case LIST_PRESCRIPTION:","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"            return new ListPrescriptionCommand(parameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"        case LIST_STOCK:","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"            return new ListStockCommand(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"        case LIST_ORDER:","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"            return new ListOrderCommand(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"        case PURGE:","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"            return new PurgeCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"        case RECEIVE_ORDER:","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"            return new ReceiveOrderCommand(parameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"        case UPDATE_STOCK:","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"            return new UpdateStockCommand(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"        case UPDATE_PRESCRIPTION:","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"            return new UpdatePrescriptionCommand(parameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"        case UPDATE_ORDER:","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"            return new UpdateOrderCommand(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"        default:","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"     * Splits the user input into command and command parameters.","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"     * @param userInput String input from user.","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"     * @return Array of string with size 2 with index 0 representing the command and index 1 representing the","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"     *     command parameters.","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"    public String[] parseCommand(String userInput) {","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"        // Splits user input by spaces","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"        String[] userInputSplit \u003d userInput.trim().split(SPACE_DELIMITER, 2);","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"        assert (userInputSplit.length \u003c\u003d 2) : \"Command extraction failed! More than 2 values were returned!\";","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"        String command \u003d userInputSplit[0].toLowerCase();","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"        String commandParameters \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"        if (userInputSplit.length \u003e 1) { // Ensure command parameter exists","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"            commandParameters \u003d userInputSplit[1];","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"        return new String[]{command, commandParameters};","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"     * Returns all the parameters entered as a LinkedHashMap.","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"     * @param parameterString String of parameters.","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"     * @return LinkedHashMap with parameter as key and parameter contents as value.","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"    public LinkedHashMap\u003cString, String\u003e parseParameters(String parameterString) {","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"        if (parameterString.equals(\"\")) { // Ensure parameter string is not empty","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"            return parameters;","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"alvintan01"},"content":"        String[] parameterSplit \u003d parameterString.split(SPACE_DELIMITER); // Split by space","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"        String commandParameter \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"        StringBuilder parameterContents \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"        for (String s : parameterSplit) {","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"            if (s.contains(DELIMITER)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"                if (!commandParameter.equals(\"\")) { // Ensure it is not the first iteration","lastModifiedDate":"2021-10-02"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"                    // Add to linkedhashmap before resetting values","lastModifiedDate":"2021-10-15"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"                    parameters.put(commandParameter, parameterContents.toString());","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"                parameterContents \u003d new StringBuilder(); // Reset the values","lastModifiedDate":"2021-10-02"},{"lineNumber":174,"author":{"gitId":"alvintan01"},"content":"                String[] commandSplit \u003d s.split(DELIMITER);","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"alvintan01"},"content":"                if (commandSplit.length !\u003d 0) { // Ensure \u0027/\u0027 exists","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"alvintan01"},"content":"                    commandParameter \u003d commandSplit[0].toLowerCase();","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":180,"author":{"gitId":"alvintan01"},"content":"                if (commandSplit.length \u003e 1) {","lastModifiedDate":"2021-10-02"},{"lineNumber":181,"author":{"gitId":"alvintan01"},"content":"                    parameterContents \u003d new StringBuilder(commandSplit[1]);","lastModifiedDate":"2021-10-02"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":183,"author":{"gitId":"alvintan01"},"content":"            } else { // Add the rest of the string","lastModifiedDate":"2021-10-02"},{"lineNumber":184,"author":{"gitId":"alvintan01"},"content":"                parameterContents.append(\" \").append(s);","lastModifiedDate":"2021-10-02"},{"lineNumber":185,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":186,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":187,"author":{"gitId":"alvintan01"},"content":"        parameters.put(commandParameter, parameterContents.toString()); // Add to linkedhashmap for the last parameter","lastModifiedDate":"2021-10-15"},{"lineNumber":188,"author":{"gitId":"alvintan01"},"content":"        return parameters;","lastModifiedDate":"2021-10-02"},{"lineNumber":189,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":190,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":191,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":192,"author":{"gitId":"alvintan01"},"content":"     * Helps to set the mode of the program.","lastModifiedDate":"2021-10-15"},{"lineNumber":193,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":194,"author":{"gitId":"alvintan01"},"content":"     * @param ui      Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"alvintan01"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2021-10-15"},{"lineNumber":196,"author":{"gitId":"alvintan01"},"content":"     * @param mode    Current mode of the program.","lastModifiedDate":"2021-10-15"},{"lineNumber":197,"author":{"gitId":"alvintan01"},"content":"     * @return New mode requested by the user.","lastModifiedDate":"2021-10-15"},{"lineNumber":198,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":199,"author":{"gitId":"alvintan01"},"content":"    public Mode changeMode(Ui ui, String command, Mode mode) {","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"alvintan01"},"content":"        Mode newMode \u003d mode;","lastModifiedDate":"2021-10-15"},{"lineNumber":201,"author":{"gitId":"alvintan01"},"content":"        if (command.equalsIgnoreCase(STOCK.name()) \u0026\u0026 !mode.name().equalsIgnoreCase(STOCK.name())) {","lastModifiedDate":"2021-10-15"},{"lineNumber":202,"author":{"gitId":"alvintan01"},"content":"            newMode \u003d STOCK;","lastModifiedDate":"2021-10-15"},{"lineNumber":203,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Mode has changed to STOCK.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":204,"author":{"gitId":"alvintan01"},"content":"        } else if (command.equalsIgnoreCase(Mode.PRESCRIPTION.name())","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"alvintan01"},"content":"                \u0026\u0026 !mode.name().equalsIgnoreCase(PRESCRIPTION.name())) {","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"alvintan01"},"content":"            newMode \u003d Mode.PRESCRIPTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Mode has changed to PRESCRIPTION.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"alvintan01"},"content":"        } else if (command.equalsIgnoreCase(ORDER.name()) \u0026\u0026 !mode.name().equalsIgnoreCase(ORDER.name())) {","lastModifiedDate":"2021-10-15"},{"lineNumber":209,"author":{"gitId":"alvintan01"},"content":"            newMode \u003d ORDER;","lastModifiedDate":"2021-10-15"},{"lineNumber":210,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Mode has changed to ORDER.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":211,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-10-15"},{"lineNumber":212,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Already in \" + mode.name() + \" mode!\");","lastModifiedDate":"2021-10-15"},{"lineNumber":213,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":214,"author":{"gitId":"alvintan01"},"content":"        return newMode;","lastModifiedDate":"2021-10-15"},{"lineNumber":215,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":216,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":217,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":186,"RemusTeo":5,"deonchung":1,"a-tph":9,"jiangweichen835":16}},{"path":"src/main/java/utilities/parser/DateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"import java.util.Calendar;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" * Contains the parser for date objects.","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"public class DateParser {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String INPUT_DATE_FORMAT \u003d \"d-M-yyyy\";","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String OUTPUT_DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"     * Helps to parse a string to a LocalDate object.","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"     * @param date String date to be converted.","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"     * @return LocalDate object representing date.","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"     * @throws ParseException If date is invalid.","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    public static Date stringToDate(String date) throws ParseException {","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(INPUT_DATE_FORMAT);","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"            dateTimeFormatter.parse(date); // To check if date was in valid format","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"            throw new ParseException(\"Unknown date\", 0);","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        return new SimpleDateFormat(INPUT_DATE_FORMAT).parse(date);","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"     * Helps to parse a LocalDate object to string.","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"     * @param date Date object to be converted to string.","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"     * @return String value of date.","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"    public static String dateToString(Date date) {","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        return new SimpleDateFormat(OUTPUT_DATE_FORMAT).format(date);","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"     * Helps to remove time from date object.","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"     * @param date Date object which time will be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"     * @return Date object without time.","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"    public static Date removeTime(Date date) {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"        Calendar cal \u003d Calendar.getInstance();","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"        cal.setTime(date);","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"        cal.set(Calendar.HOUR_OF_DAY, 0);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        cal.set(Calendar.MINUTE, 0);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"        cal.set(Calendar.SECOND, 0);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"        cal.set(Calendar.MILLISECOND, 0);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"        return cal.getTime();","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":59,"RemusTeo":1,"a-tph":1}},{"path":"src/main/java/utilities/parser/FileParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import errors.InvalidDataException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"//@@author RemusTeo","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":" * FileParser class handles all validation of input from data/stock.txt, data/order.txt, data/prescription.txt","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"public class FileParser {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"    private static HashSet\u003cInteger\u003e stockIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"    private static HashSet\u003cInteger\u003e orderIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"    private static HashSet\u003cInteger\u003e prescriptionIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Stock Id during parsing from file.","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"     * @param splitStockDetails Stock details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"     * @param stockRow          Stock row identifier for use in error message.","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"     * @return Stock Id of integer data type for creation of Stock object.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"    public static int parseStockId(String[] splitStockDetails, int stockRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"            int stockId \u003d Integer.parseInt(splitStockDetails[0]);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"            if (stockId \u003c\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"                throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID STOCK ID [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"            if (stockIds.contains(stockId)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"                throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID STOCK ID [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"            stockIds.add(stockId);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"            return stockId;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID STOCK ID [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Stock name during parsing from file.","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"     * @param splitStockDetails Stock details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"RemusTeo"},"content":"     * @param stockRow          Stock row identifier for use in error message.","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"RemusTeo"},"content":"     * @return Stock name of String data type for creation of Stock object.","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"RemusTeo"},"content":"    public static String parseStockName(String[] splitStockDetails, int stockRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"RemusTeo"},"content":"        String stockName \u003d splitStockDetails[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"RemusTeo"},"content":"        if (stockName.equals(\"\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID STOCK MEDICINE NAME [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"RemusTeo"},"content":"        return stockName;","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Stock price during parsing from file.","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"RemusTeo"},"content":"     * @param splitStockDetails Stock details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"RemusTeo"},"content":"     * @param stockRow          Stock row identifier for use in error message.","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"RemusTeo"},"content":"     * @return Stock price of double data type for creation of Stock object.","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"RemusTeo"},"content":"    public static Double parseStockPrice(String[] splitStockDetails, int stockRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"RemusTeo"},"content":"            double stockPrice \u003d Double.parseDouble(splitStockDetails[2]);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"RemusTeo"},"content":"            if (stockPrice \u003c 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"RemusTeo"},"content":"                throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID STOCK PRICE [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"RemusTeo"},"content":"            return stockPrice;","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"RemusTeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID STOCK PRICE [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Stock quantity during parsing from file.","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"RemusTeo"},"content":"     * @param splitStockDetails Stock details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"RemusTeo"},"content":"     * @param stockRow          Stock row identifier for use in error message.","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"RemusTeo"},"content":"     * @return Stock quantity of integer data type for creation of Stock object.","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"RemusTeo"},"content":"    public static int parseStockQuantity(String[] splitStockDetails, int stockRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"RemusTeo"},"content":"            int stockQuantity \u003d Integer.parseInt(splitStockDetails[3]);","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"RemusTeo"},"content":"            if (stockQuantity \u003c 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"RemusTeo"},"content":"                throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID STOCK QUANTITY [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"RemusTeo"},"content":"            return stockQuantity;","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"RemusTeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID STOCK QUANTITY [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Stock expiry date during parsing from file.","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"RemusTeo"},"content":"     * @param splitStockDetails Stock details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"RemusTeo"},"content":"     * @param stockRow          Stock row identifier for use in error message.","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"RemusTeo"},"content":"     * @return Stock expiry date of Date data type for creation of Stock object.","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"RemusTeo"},"content":"    public static Date parseStockExpiry(String[] splitStockDetails, int stockRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"RemusTeo"},"content":"            String dateExpiryStr \u003d splitStockDetails[4];","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"RemusTeo"},"content":"            Date stockExpiry \u003d DateParser.stringToDate(dateExpiryStr);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"RemusTeo"},"content":"            return stockExpiry;","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"RemusTeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID STOCK EXPIRY DATE [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Stock description during parsing from file.","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"RemusTeo"},"content":"     * @param splitStockDetails Stock details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"RemusTeo"},"content":"     * @param stockRow          Stock row identifier for use in error message.","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"RemusTeo"},"content":"     * @return Stock description of String data type for creation of Stock object.","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"RemusTeo"},"content":"    public static String parseStockDescription(String[] splitStockDetails, int stockRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"RemusTeo"},"content":"        String stockDescription \u003d splitStockDetails[5];","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"RemusTeo"},"content":"        if (stockDescription.equals(\"\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID STOCK DESCRIPTION [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"RemusTeo"},"content":"        return stockDescription;","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Stock max quantity during parsing from file.","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"RemusTeo"},"content":"     * @param splitStockDetails Stock details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"RemusTeo"},"content":"     * @param stockRow          Stock row identifier for use in error message.","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"RemusTeo"},"content":"     * @return Stock max quantity of integer data type for creation of Stock object.","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"RemusTeo"},"content":"    public static int parseStockMaxQuantity(String[] splitStockDetails, int stockRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"RemusTeo"},"content":"            int stockMaxQuantity \u003d Integer.parseInt(splitStockDetails[6]);","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"RemusTeo"},"content":"            if (stockMaxQuantity \u003c 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"RemusTeo"},"content":"                throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID STOCK MAX QUANTITY [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"RemusTeo"},"content":"            return stockMaxQuantity;","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"RemusTeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID STOCK MAX QUANTITY [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Stock isDeleted field during parsing from file.","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"RemusTeo"},"content":"     * @param splitStockDetails Stock details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"RemusTeo"},"content":"     * @param stockRow          Stock row identifier for use in error message.","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"RemusTeo"},"content":"     * @return Stock isDeleted of boolean data type for creation of Stock object.","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"RemusTeo"},"content":"    public static boolean parseStockIsDeleted(String[] splitStockDetails, int stockRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"RemusTeo"},"content":"        String isDeleted \u003d splitStockDetails[7];","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"RemusTeo"},"content":"        if (isDeleted.equalsIgnoreCase(\"TRUE\") || isDeleted.equalsIgnoreCase(\"FALSE\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"RemusTeo"},"content":"            boolean stockIsDeleted \u003d Boolean.parseBoolean(splitStockDetails[7]);","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"RemusTeo"},"content":"            return stockIsDeleted;","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"RemusTeo"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID STOCK ISDELETED [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Order Id during parsing from file.","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"RemusTeo"},"content":"     * @param splitOrderDetails Order details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"RemusTeo"},"content":"     * @param orderRow          Order row identifier for use in error message.","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"RemusTeo"},"content":"     * @return Order Id of integer data type for creation of Order object.","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"RemusTeo"},"content":"    public static int parseOrderId(String[] splitOrderDetails, int orderRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"RemusTeo"},"content":"            int orderId \u003d Integer.parseInt(splitOrderDetails[0]);","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"RemusTeo"},"content":"            if (orderId \u003c\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"RemusTeo"},"content":"                throw new InvalidDataException(\"[ROW: \" + orderRow + \"] INVALID ORDER ID [data/order.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"RemusTeo"},"content":"            if (orderIds.contains(orderId)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"RemusTeo"},"content":"                throw new InvalidDataException(\"[ROW: \" + orderRow + \"] INVALID ORDER ID [data/order.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"RemusTeo"},"content":"            orderIds.add(orderId);","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"RemusTeo"},"content":"            return orderId;","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"RemusTeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + orderRow + \"] INVALID ORDER ID [data/order.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Order medication name during parsing from file.","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"RemusTeo"},"content":"     * @param splitOrderDetails Order details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"RemusTeo"},"content":"     * @param orderRow          Order row identifier for use in error message.","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"RemusTeo"},"content":"     * @return Order medication name of String data type for creation of Order object.","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"RemusTeo"},"content":"    public static String parseOrderName(String[] splitOrderDetails, int orderRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"RemusTeo"},"content":"        String orderName \u003d splitOrderDetails[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"RemusTeo"},"content":"        if (orderName.equals(\"\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + orderRow + \"] INVALID ORDER MEDICINE NAME [data/order.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"RemusTeo"},"content":"        return orderName;","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Order quantity during parsing from file.","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"RemusTeo"},"content":"     * @param splitOrderDetails Order details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"RemusTeo"},"content":"     * @param orderRow          Order row identifier for use in error message.","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"RemusTeo"},"content":"     * @return Order quantity of integer data type for creation of Order object.","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"RemusTeo"},"content":"    public static int parseOrderQuantity(String[] splitOrderDetails, int orderRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"RemusTeo"},"content":"            int orderQuantity \u003d Integer.parseInt(splitOrderDetails[2]);","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"RemusTeo"},"content":"            if (orderQuantity \u003c\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"RemusTeo"},"content":"                throw new InvalidDataException(\"[ROW: \" + orderRow + \"] INVALID ORDER QUANTITY [data/order.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"RemusTeo"},"content":"            return orderQuantity;","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"RemusTeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + orderRow + \"] INVALID ORDER QUANTITY [data/order.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Order date during parsing from file.","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"RemusTeo"},"content":"     * @param splitOrderDetails Order details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"RemusTeo"},"content":"     * @param orderRow          Order row identifier for use in error message.","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"RemusTeo"},"content":"     * @return Order date of Date data type for creation of Order object.","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"RemusTeo"},"content":"    public static Date parseOrderDate(String[] splitOrderDetails, int orderRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"RemusTeo"},"content":"            String orderDateStr \u003d splitOrderDetails[3];","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"RemusTeo"},"content":"            Date orderDate \u003d DateParser.stringToDate(orderDateStr);","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"RemusTeo"},"content":"            return orderDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"RemusTeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + orderRow + \"] INVALID ORDER DATE [data/order.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Order status during parsing from file.","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"RemusTeo"},"content":"     * @param splitOrderDetails Order details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"RemusTeo"},"content":"     * @param orderRow          Order row identifier for use in error message.","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"RemusTeo"},"content":"     * @return Order status of boolean data type for creation of Order object.","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"RemusTeo"},"content":"    public static boolean parseOrderStatus(String[] splitOrderDetails, int orderRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"RemusTeo"},"content":"        String orderStatusStr \u003d splitOrderDetails[4];","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"RemusTeo"},"content":"        boolean orderStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"RemusTeo"},"content":"        if (orderStatusStr.equalsIgnoreCase(\"DELIVERED\")) {","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"RemusTeo"},"content":"            orderStatus \u003d true;","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"RemusTeo"},"content":"            return orderStatus;","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"RemusTeo"},"content":"        } else if (orderStatusStr.equalsIgnoreCase(\"PENDING\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"RemusTeo"},"content":"            orderStatus \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"RemusTeo"},"content":"            return orderStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":266,"author":{"gitId":"RemusTeo"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":267,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + orderRow + \"] INVALID ORDER STATUS [data/order.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":269,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Prescription Id during parsing from file.","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"RemusTeo"},"content":"     * @param splitPrescriptionDetails Prescription details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"RemusTeo"},"content":"     * @param prescriptionRow          Prescription row identifier for use in error message.","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"RemusTeo"},"content":"     * @return Prescription Id of integer data type for creation of Prescription object.","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":278,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":279,"author":{"gitId":"RemusTeo"},"content":"    public static int parsePrescriptionId(String[] splitPrescriptionDetails, int prescriptionRow)","lastModifiedDate":"2021-10-25"},{"lineNumber":280,"author":{"gitId":"RemusTeo"},"content":"            throws InvalidDataException {","lastModifiedDate":"2021-10-25"},{"lineNumber":281,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":282,"author":{"gitId":"RemusTeo"},"content":"            int prescriptionId \u003d Integer.parseInt(splitPrescriptionDetails[0]);","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"RemusTeo"},"content":"            if (prescriptionId \u003c\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"RemusTeo"},"content":"                throw new InvalidDataException(\"[ROW: \" + prescriptionRow + \"] INVALID PRESCRIPTION \"","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"RemusTeo"},"content":"                        + \"ID [data/prescription.txt]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":287,"author":{"gitId":"RemusTeo"},"content":"            if (prescriptionIds.contains(prescriptionId)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":288,"author":{"gitId":"RemusTeo"},"content":"                throw new InvalidDataException(\"[ROW: \" + prescriptionRow + \"] INVALID PRESCRIPTION \"","lastModifiedDate":"2021-10-25"},{"lineNumber":289,"author":{"gitId":"RemusTeo"},"content":"                        + \"ID [data/prescription.txt]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":290,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":291,"author":{"gitId":"RemusTeo"},"content":"            prescriptionIds.add(prescriptionId);","lastModifiedDate":"2021-10-25"},{"lineNumber":292,"author":{"gitId":"RemusTeo"},"content":"            return prescriptionId;","lastModifiedDate":"2021-10-25"},{"lineNumber":293,"author":{"gitId":"RemusTeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":294,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + prescriptionRow + \"] INVALID PRESCRIPTION \"","lastModifiedDate":"2021-10-25"},{"lineNumber":295,"author":{"gitId":"RemusTeo"},"content":"                    + \"ID [data/prescription.txt]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":296,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":297,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":298,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":300,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Prescription medication name during parsing from file.","lastModifiedDate":"2021-10-25"},{"lineNumber":301,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":302,"author":{"gitId":"RemusTeo"},"content":"     * @param splitPrescriptionDetails Prescription details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-25"},{"lineNumber":303,"author":{"gitId":"RemusTeo"},"content":"     * @param prescriptionRow          Prescription row identifier for use in error message.","lastModifiedDate":"2021-10-25"},{"lineNumber":304,"author":{"gitId":"RemusTeo"},"content":"     * @return Prescription medication name of String data type for creation of Prescription object.","lastModifiedDate":"2021-10-25"},{"lineNumber":305,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":306,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":307,"author":{"gitId":"RemusTeo"},"content":"    public static String parsePrescriptionName(String[] splitPrescriptionDetails, int prescriptionRow)","lastModifiedDate":"2021-10-25"},{"lineNumber":308,"author":{"gitId":"RemusTeo"},"content":"            throws InvalidDataException {","lastModifiedDate":"2021-10-25"},{"lineNumber":309,"author":{"gitId":"RemusTeo"},"content":"        String prescriptionName \u003d splitPrescriptionDetails[1];","lastModifiedDate":"2021-10-25"},{"lineNumber":310,"author":{"gitId":"RemusTeo"},"content":"        if (prescriptionName.equals(\"\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":311,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + prescriptionRow + \"] INVALID PRESCRIBED MEDICATION NAME \"","lastModifiedDate":"2021-10-25"},{"lineNumber":312,"author":{"gitId":"RemusTeo"},"content":"                    + \"[data/prescription.txt]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":313,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":314,"author":{"gitId":"RemusTeo"},"content":"        return prescriptionName;","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":317,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":318,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Prescription quantity during parsing from file.","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":320,"author":{"gitId":"RemusTeo"},"content":"     * @param splitPrescriptionDetails Prescription details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-25"},{"lineNumber":321,"author":{"gitId":"RemusTeo"},"content":"     * @param prescriptionRow          Prescription row identifier for use in error message.","lastModifiedDate":"2021-10-25"},{"lineNumber":322,"author":{"gitId":"RemusTeo"},"content":"     * @return Prescription quantity of integer data type for creation of Prescription object.","lastModifiedDate":"2021-10-25"},{"lineNumber":323,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":324,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":325,"author":{"gitId":"RemusTeo"},"content":"    public static int parsePrescriptionQuantity(String[] splitPrescriptionDetails, int prescriptionRow) throws","lastModifiedDate":"2021-10-25"},{"lineNumber":326,"author":{"gitId":"RemusTeo"},"content":"            InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":327,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":328,"author":{"gitId":"RemusTeo"},"content":"            int prescriptionQuantity \u003d Integer.parseInt(splitPrescriptionDetails[2]);","lastModifiedDate":"2021-10-25"},{"lineNumber":329,"author":{"gitId":"RemusTeo"},"content":"            if (prescriptionQuantity \u003c\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":330,"author":{"gitId":"RemusTeo"},"content":"                throw new InvalidDataException(\"[ROW: \" + prescriptionRow + \"] INVALID PRESCRIPTION QUANTITY\"","lastModifiedDate":"2021-10-25"},{"lineNumber":331,"author":{"gitId":"RemusTeo"},"content":"                        + \" [data/prescription.txt]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":332,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":333,"author":{"gitId":"RemusTeo"},"content":"            return prescriptionQuantity;","lastModifiedDate":"2021-10-25"},{"lineNumber":334,"author":{"gitId":"RemusTeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":335,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + prescriptionRow + \"] INVALID PRESCRIPTION \"","lastModifiedDate":"2021-10-25"},{"lineNumber":336,"author":{"gitId":"RemusTeo"},"content":"                    + \"QUANTITY [data/prescription.txt]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":337,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":338,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":341,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Prescription customer id during parsing from file.","lastModifiedDate":"2021-10-25"},{"lineNumber":342,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":343,"author":{"gitId":"RemusTeo"},"content":"     * @param splitPrescriptionDetails Prescription details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-25"},{"lineNumber":344,"author":{"gitId":"RemusTeo"},"content":"     * @param prescriptionRow          Prescription row identifier for use in error message.","lastModifiedDate":"2021-10-25"},{"lineNumber":345,"author":{"gitId":"RemusTeo"},"content":"     * @return Prescription customer id of String data type for creation of Prescription object.","lastModifiedDate":"2021-10-25"},{"lineNumber":346,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":347,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":348,"author":{"gitId":"RemusTeo"},"content":"    public static String parsePrescriptionCustomerId(String[] splitPrescriptionDetails, int prescriptionRow) throws","lastModifiedDate":"2021-10-25"},{"lineNumber":349,"author":{"gitId":"RemusTeo"},"content":"            InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":350,"author":{"gitId":"RemusTeo"},"content":"        String prescriptionCustomerId \u003d splitPrescriptionDetails[3];","lastModifiedDate":"2021-10-25"},{"lineNumber":351,"author":{"gitId":"RemusTeo"},"content":"        if (prescriptionCustomerId.equals(\"\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":352,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + prescriptionRow + \"] INVALID PRESCRIPTION CUSTOMER ID \"","lastModifiedDate":"2021-10-25"},{"lineNumber":353,"author":{"gitId":"RemusTeo"},"content":"                    + \"[data/prescription.txt]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":354,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":355,"author":{"gitId":"RemusTeo"},"content":"        return prescriptionCustomerId;","lastModifiedDate":"2021-10-25"},{"lineNumber":356,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":357,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":358,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":359,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Prescription date during parsing from file.","lastModifiedDate":"2021-10-25"},{"lineNumber":360,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":361,"author":{"gitId":"RemusTeo"},"content":"     * @param splitPrescriptionDetails Prescription details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-25"},{"lineNumber":362,"author":{"gitId":"RemusTeo"},"content":"     * @param prescriptionRow          Prescription row identifier for use in error message.","lastModifiedDate":"2021-10-25"},{"lineNumber":363,"author":{"gitId":"RemusTeo"},"content":"     * @return Prescription date of Date data type for creation of Prescription object.","lastModifiedDate":"2021-10-25"},{"lineNumber":364,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":365,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":366,"author":{"gitId":"RemusTeo"},"content":"    public static Date parsePrescriptionDate(String[] splitPrescriptionDetails, int prescriptionRow)","lastModifiedDate":"2021-10-25"},{"lineNumber":367,"author":{"gitId":"RemusTeo"},"content":"            throws InvalidDataException {","lastModifiedDate":"2021-10-25"},{"lineNumber":368,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":369,"author":{"gitId":"RemusTeo"},"content":"            String prescriptionDateStr \u003d splitPrescriptionDetails[4];","lastModifiedDate":"2021-10-25"},{"lineNumber":370,"author":{"gitId":"RemusTeo"},"content":"            Date prescriptionDate \u003d DateParser.stringToDate(prescriptionDateStr);","lastModifiedDate":"2021-10-25"},{"lineNumber":371,"author":{"gitId":"RemusTeo"},"content":"            return prescriptionDate;","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"RemusTeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":373,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + prescriptionRow + \"] INVALID PRESCRIPTION DATE \"","lastModifiedDate":"2021-10-25"},{"lineNumber":374,"author":{"gitId":"RemusTeo"},"content":"                    + \"[data/prescription.txt]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":375,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":376,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":377,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":378,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":379,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Prescription staff name during parsing from file.","lastModifiedDate":"2021-10-25"},{"lineNumber":380,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":381,"author":{"gitId":"RemusTeo"},"content":"     * @param splitPrescriptionDetails Prescription details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-25"},{"lineNumber":382,"author":{"gitId":"RemusTeo"},"content":"     * @param prescriptionRow          Prescription row identifier for use in error message.","lastModifiedDate":"2021-10-25"},{"lineNumber":383,"author":{"gitId":"RemusTeo"},"content":"     * @return Prescription staff name of String data type for creation of Prescription object.","lastModifiedDate":"2021-10-25"},{"lineNumber":384,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":385,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":386,"author":{"gitId":"RemusTeo"},"content":"    public static String parsePrescriptionStaff(String[] splitPrescriptionDetails, int prescriptionRow) throws","lastModifiedDate":"2021-10-25"},{"lineNumber":387,"author":{"gitId":"RemusTeo"},"content":"            InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":388,"author":{"gitId":"RemusTeo"},"content":"        String prescriptionStaff \u003d splitPrescriptionDetails[5];","lastModifiedDate":"2021-10-25"},{"lineNumber":389,"author":{"gitId":"RemusTeo"},"content":"        if (prescriptionStaff.equals(\"\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":390,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + prescriptionRow + \"] INVALID PRESCRIPTION STAFF NAME \"","lastModifiedDate":"2021-10-25"},{"lineNumber":391,"author":{"gitId":"RemusTeo"},"content":"                    + \"[data/prescription.txt]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":392,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":393,"author":{"gitId":"RemusTeo"},"content":"        return prescriptionStaff;","lastModifiedDate":"2021-10-25"},{"lineNumber":394,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":395,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":396,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":397,"author":{"gitId":"RemusTeo"},"content":"     * Perform validation of Prescription stock id during parsing from file.","lastModifiedDate":"2021-10-25"},{"lineNumber":398,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":399,"author":{"gitId":"RemusTeo"},"content":"     * @param splitPrescriptionDetails Prescription details array fields split by delimiter \u0027|\u0027.","lastModifiedDate":"2021-10-25"},{"lineNumber":400,"author":{"gitId":"RemusTeo"},"content":"     * @param prescriptionRow          Prescription row identifier for use in error message.","lastModifiedDate":"2021-10-25"},{"lineNumber":401,"author":{"gitId":"RemusTeo"},"content":"     * @return Prescription stock id of integer data type for creation of Prescription object.","lastModifiedDate":"2021-10-25"},{"lineNumber":402,"author":{"gitId":"RemusTeo"},"content":"     * @throws InvalidDataException Invalid data will trigger exception.","lastModifiedDate":"2021-10-24"},{"lineNumber":403,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":404,"author":{"gitId":"RemusTeo"},"content":"    public static int parsePrescriptionStockId(String[] splitPrescriptionDetails, int prescriptionRow)","lastModifiedDate":"2021-10-25"},{"lineNumber":405,"author":{"gitId":"RemusTeo"},"content":"            throws InvalidDataException {","lastModifiedDate":"2021-10-25"},{"lineNumber":406,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":407,"author":{"gitId":"RemusTeo"},"content":"            int prescriptionStockId \u003d Integer.parseInt(splitPrescriptionDetails[6]);","lastModifiedDate":"2021-10-25"},{"lineNumber":408,"author":{"gitId":"RemusTeo"},"content":"            if (prescriptionStockId \u003c\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":409,"author":{"gitId":"RemusTeo"},"content":"                throw new InvalidDataException(\"[ROW: \" + prescriptionRow + \"] INVALID PRESCRIPTION STOCK ID \"","lastModifiedDate":"2021-10-25"},{"lineNumber":410,"author":{"gitId":"RemusTeo"},"content":"                        + \"[data/prescription.txt]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":411,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":412,"author":{"gitId":"RemusTeo"},"content":"            return prescriptionStockId;","lastModifiedDate":"2021-10-25"},{"lineNumber":413,"author":{"gitId":"RemusTeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":414,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + prescriptionRow + \"] INVALID PRESCRIPTION STOCK ID \"","lastModifiedDate":"2021-10-25"},{"lineNumber":415,"author":{"gitId":"RemusTeo"},"content":"                    + \"[data/prescription.txt]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":416,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":417,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":418,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"RemusTeo":417,"a-tph":1}},{"path":"src/main/java/utilities/parser/MedicineValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":" * Contains all the methods to validate if a Medicine\u0027s input parameters are valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"public abstract class MedicineValidator {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"    private static Logger logger \u003d Logger.getLogger(\"MedicineValidator\");","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public MedicineValidator(){","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public abstract boolean containsInvalidParameterValues(Ui ui, LinkedHashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"                                                           ArrayList\u003cMedicine\u003e medicines, String commandSyntax);","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public abstract boolean isValidColumn(Ui ui, String columnName);","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"     * Helps to check if the parameters and values required are provided by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"     * @param ui                         Reference to the UI object to print messages.","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"     * @param medicines                  Arraylist of all medicines.","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"     * @param parameters                 Parameters entered in by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"     * @param requiredParameters         Parameters required by the command.","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"     * @param optionalParameters         Parameters that are optional.","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"     * @param commandSyntax              The command\u0027s valid syntax.","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"     * @param requiresOptionalParameters Boolean value of whether command required optional parameters.","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"     * @param validator                  Validator object used for validation checks.","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"     * @return A boolean value indicating if the parameters and values required are entered by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    public boolean containsInvalidParametersAndValues(Ui ui, ArrayList\u003cMedicine\u003e medicines,","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"                                                      LinkedHashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"                                                      String[] requiredParameters, String[] optionalParameters,","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"                                                      String commandSyntax, boolean requiresOptionalParameters,","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"                                                      MedicineValidator validator) {","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"        boolean isInvalidParameter \u003d validator.containsInvalidParameters(ui, parameters, requiredParameters,","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"                optionalParameters, commandSyntax, requiresOptionalParameters);","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"        if (isInvalidParameter) {","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"            logger.log(Level.WARNING, \"Invalid parameters given by user\");","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"            return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"        boolean isInvalidParameterValues \u003d validator.containsInvalidParameterValues(ui, parameters,","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"                medicines, commandSyntax);","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"        if (isInvalidParameterValues) {","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"            logger.log(Level.WARNING, \"Invalid parameters values given by user\");","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"            return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"        return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"     * Helps to check if the parameters required are provided by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"     * @param ui                         Reference to the UI object to print messages.","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"     * @param parameters                 Parameters entered in by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"     * @param requiredParameters         Parameters required by the command.","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"     * @param optionalParameters         Parameters that are optional.","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"     * @param commandSyntax              The command\u0027s valid syntax.","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"     * @param requiresOptionalParameters Boolean value of whether command required optional parameters.","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"     * @return A boolean value indicating if the parameters required are entered by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"    public boolean containsInvalidParameters(Ui ui, LinkedHashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"                                             String[] requiredParameters, String[] optionalParameters,","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"                                             String commandSyntax, boolean requiresOptionalParameters) {","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"        // User did not provide parameters all the parameters","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"        /*if (parameters.keySet().size() \u003c requiredParametersLength) {","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"            ui.printInvalidParameter(\"\", commandSyntax);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"        }*/","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"        boolean providedRequiredParameter \u003d true;","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cString\u003e missingParametersList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"        for (String requiredParameter : requiredParameters) {","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"            if (!parameters.containsKey(requiredParameter)) { // Checks if required parameters are found","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"                missingParametersList.add(requiredParameter);","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"                providedRequiredParameter \u003d false;","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"        if (!providedRequiredParameter) {","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"            ui.printRequiredParameters(missingParametersList, commandSyntax);","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"        int requiredParametersLength \u003d requiredParameters.length;","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"        int optionalParametersLength \u003d optionalParameters.length;","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"        // Optional parameters not provided considered valid","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"        if (optionalParameters \u003d\u003d null || optionalParametersLength \u003d\u003d 0) {","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"        int emptyOptionalFieldCount \u003d parameters.size() - requiredParametersLength;","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"        if (emptyOptionalFieldCount \u003c\u003d 0 \u0026\u0026 requiresOptionalParameters) {","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Please provide at least one optional field!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"            ui.printCommandSyntax(commandSyntax);","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"        // Combine both parameter array to check if optional parameter is valid","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"        String[] mergedParameters \u003d new String[requiredParametersLength + optionalParametersLength];","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"        System.arraycopy(requiredParameters, 0, mergedParameters, 0, requiredParametersLength);","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"        System.arraycopy(optionalParameters, 0, mergedParameters, requiredParametersLength, optionalParametersLength);","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"            boolean isValid \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"            for (String mergedParameter : mergedParameters) {","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"                if (mergedParameter.equalsIgnoreCase(parameter)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"                    isValid \u003d true;","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"            if (!isValid) {","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"                ui.print(\"Please enter a valid optional parameter!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"                ui.printCommandSyntax(commandSyntax);","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"                return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"deonchung"},"content":"     * Checks if a medicine name is empty.","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"     * @param ui   Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"deonchung"},"content":"     * @param name Medicine name to be checked.","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if medicine name is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"    public boolean isValidName(Ui ui, String name) {","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"deonchung"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Medication name cannot be empty!\");","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"deonchung"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"deonchung"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"deonchung"},"content":"     * Checks if a medicine quantity is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"     * @param ui             Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"deonchung"},"content":"     * @param quantityString Quantity of the medicine.","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if medicine quantity is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"    public boolean isValidQuantity(Ui ui, String quantityString) {","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"deonchung"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"deonchung"},"content":"            int quantity \u003d Integer.parseInt(quantityString);","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"deonchung"},"content":"            if (quantity \u003c 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"deonchung"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"deonchung"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"deonchung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Invalid quantity provided!\");","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"a-tph"},"content":"     * Checks if name parameter exists.","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"a-tph"},"content":"     * @param parameters   Parameters entered in by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":173,"author":{"gitId":"a-tph"},"content":"     * @param medicineName Medicine name of the given object.","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"a-tph"},"content":"     * @return A boolean value to return whether a parameter exist.","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":176,"author":{"gitId":"a-tph"},"content":"    public boolean hasNameParamChecker(LinkedHashMap\u003cString, String\u003e parameters, String medicineName) {","lastModifiedDate":"2021-11-02"},{"lineNumber":177,"author":{"gitId":"a-tph"},"content":"        boolean hasNameParam \u003d parameters.containsKey(CommandParameters.NAME);","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"a-tph"},"content":"        if (hasNameParam) {","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"a-tph"},"content":"            String currentName \u003d medicineName;","lastModifiedDate":"2021-11-02"},{"lineNumber":180,"author":{"gitId":"a-tph"},"content":"            String updatedName \u003d parameters.get(CommandParameters.NAME);","lastModifiedDate":"2021-11-02"},{"lineNumber":181,"author":{"gitId":"a-tph"},"content":"            if (updatedName.equalsIgnoreCase(currentName)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"a-tph"},"content":"                hasNameParam \u003d false;","lastModifiedDate":"2021-11-02"},{"lineNumber":183,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":184,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":185,"author":{"gitId":"a-tph"},"content":"        return hasNameParam;","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":189,"author":{"gitId":"a-tph"},"content":"     * Checks if given quantity and stored quantity are the same.","lastModifiedDate":"2021-11-02"},{"lineNumber":190,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":191,"author":{"gitId":"a-tph"},"content":"     * @param parameters Parameters entered in by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"a-tph"},"content":"     * @param quantity   Current quantity in stocks.","lastModifiedDate":"2021-11-02"},{"lineNumber":193,"author":{"gitId":"a-tph"},"content":"     * @return A boolean value to return whether a parameter exist.","lastModifiedDate":"2021-11-02"},{"lineNumber":194,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":195,"author":{"gitId":"a-tph"},"content":"    public boolean hasQuantityParamChecker(LinkedHashMap\u003cString, String\u003e parameters, int quantity) {","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"a-tph"},"content":"        boolean hasQuantityParam \u003d parameters.containsKey(CommandParameters.QUANTITY);","lastModifiedDate":"2021-11-02"},{"lineNumber":197,"author":{"gitId":"a-tph"},"content":"        if (hasQuantityParam) {","lastModifiedDate":"2021-11-02"},{"lineNumber":198,"author":{"gitId":"a-tph"},"content":"            int currentQuantity \u003d quantity;","lastModifiedDate":"2021-11-02"},{"lineNumber":199,"author":{"gitId":"a-tph"},"content":"            int updatedQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.QUANTITY));","lastModifiedDate":"2021-11-02"},{"lineNumber":200,"author":{"gitId":"a-tph"},"content":"            if (currentQuantity \u003d\u003d updatedQuantity) {","lastModifiedDate":"2021-11-02"},{"lineNumber":201,"author":{"gitId":"a-tph"},"content":"                hasQuantityParam \u003d false;","lastModifiedDate":"2021-11-02"},{"lineNumber":202,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":203,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":204,"author":{"gitId":"a-tph"},"content":"        return hasQuantityParam;","lastModifiedDate":"2021-11-02"},{"lineNumber":205,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":206,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"alvintan01":90,"deonchung":37,"a-tph":79}},{"path":"src/main/java/utilities/parser/Mode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" * Contains all modes available in the program.","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"public enum Mode {","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    STOCK,","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    PRESCRIPTION,","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    ORDER","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"alvintan01":11,"a-tph":1}},{"path":"src/main/java/utilities/parser/OrderManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"//@@author a-tph","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":" * Manages medicines that are order objects.","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"public class OrderManager {","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"     * Extracts the order object for a given order id.","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"     * @param parameters LinkedHashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"     * @param medicines  Arraylist of all medicines.","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"     * @return Stock object of the provided order id by user","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    public static Order extractOrderObject(LinkedHashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"        int orderId \u003d Integer.parseInt(parameters.get(CommandParameters.ID));","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"        Order order \u003d null;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"            if (medicine instanceof Order \u0026\u0026 orderId \u003d\u003d ((Order) medicine).getOrderId()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"                order \u003d (Order) medicine;","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"        assert (order !\u003d null) : \"Expected an order object but none extracted\";","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"        return order;","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"     * Retrieves the total order quantity for order with same name.","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of medicines.","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"     * @param name      Medicine name.","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"     * @return Total order quantity for the medicine.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"    public static int getTotalOrderQuantity(ArrayList\u003cMedicine\u003e medicines, String name) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"        int existingQuantity \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"            if (!(medicine instanceof Order) || ((Order) medicine).isDelivered()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"            boolean isSameMedicineName \u003d medicine.getMedicineName().equalsIgnoreCase(name);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"            if (isSameMedicineName) {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"                existingQuantity +\u003d medicine.getQuantity();","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"        return existingQuantity;","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"     * Extracts the filtered orders for stocks with same name.","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"     * @param orderName Medicine name for a given order.","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"     * @return ArrayList of filteredStocks of the same stock name.","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"    public static ArrayList\u003cOrder\u003e getFilteredOrdersByName(ArrayList\u003cMedicine\u003e medicines, String orderName) {","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cOrder\u003e filteredOrders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"            boolean isOrderInstance \u003d medicine instanceof Order;","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"            if (isOrderInstance) {","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"                boolean isSameName \u003d medicine.getMedicineName().equalsIgnoreCase(orderName);","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"                boolean isPending \u003d !(((Order) medicine).isDelivered());","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"                if (isSameName \u0026\u0026 isPending) {","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"                    filteredOrders.add((Order) medicine);","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"        return filteredOrders;","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"alvintan01":1,"a-tph":77}},{"path":"src/main/java/utilities/parser/OrderValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"//@@author deonchung","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":" * Contains all the methods to validate if an Order\u0027s input parameters are valid.","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"public class OrderValidator extends MedicineValidator {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"    public OrderValidator() {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"     * Checks if parameter values are valid for Order objects.","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"     * @param ui            Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"     * @param parameters    LinkedHashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"     * @param medicines     Arraylist of all medicines.","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"     * @param commandSyntax The command\u0027s valid syntax.","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"     * @return A boolean value indicating whether parameter values are valid.","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"    public boolean containsInvalidParameterValues(Ui ui, LinkedHashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"                                                  ArrayList\u003cMedicine\u003e medicines, String commandSyntax) {","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"            boolean isValid \u003d false;","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"            String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"            switch (parameter) {","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.ID:","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"                isValid \u003d isValidOrderId(ui, parameterValue, medicines);","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.NAME:","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"                isValid \u003d isValidName(ui, parameterValue);","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"                isValid \u003d isValidQuantity(ui, parameterValue);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.DATE:","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"deonchung"},"content":"                isValid \u003d isValidDate(ui, parameterValue);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.STATUS:","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"                isValid \u003d isValidStatus(ui, parameterValue);","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.SORT:","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"                // Fallthrough","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.REVERSED_SORT:","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"deonchung"},"content":"                isValid \u003d isValidColumn(ui, parameterValue);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"deonchung"},"content":"            default:","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"deonchung"},"content":"                ui.printInvalidParameter(parameter, commandSyntax);","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"deonchung"},"content":"            if (!isValid) {","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"deonchung"},"content":"                return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"deonchung"},"content":"     * Checks if the given order id is valid.","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"deonchung"},"content":"     * @param ui        Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"deonchung"},"content":"     * @param oid       ID of the order to be checked.","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"deonchung"},"content":"     * @param medicines List of all medicines.","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if order ID is valid.","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"deonchung"},"content":"    public boolean isValidOrderId(Ui ui, String oid, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"deonchung"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"deonchung"},"content":"            int orderId \u003d Integer.parseInt(oid);","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"deonchung"},"content":"            if (orderId \u003c\u003d 0 || orderId \u003e Order.getOrderCount()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"deonchung"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"deonchung"},"content":"            boolean orderExist \u003d false;","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"deonchung"},"content":"            for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"deonchung"},"content":"                if (!(medicine instanceof Order)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"deonchung"},"content":"                    continue;","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"deonchung"},"content":"                Order order \u003d (Order) medicine;","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"deonchung"},"content":"                if (order.getOrderId() \u003d\u003d orderId) {","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"deonchung"},"content":"                    orderExist \u003d true;","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"deonchung"},"content":"                    break;","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"deonchung"},"content":"            if (!orderExist) {","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"deonchung"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"deonchung"},"content":"            return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"deonchung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Invalid order id provided!\");","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"deonchung"},"content":"     * Checks if a medicine order date is valid.","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"deonchung"},"content":"     * @param ui         Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"deonchung"},"content":"     * @param dateString Date of the medicine.","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if medicine expiry date is valid.","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"deonchung"},"content":"    public boolean isValidDate(Ui ui, String dateString) {","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"deonchung"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"deonchung"},"content":"            DateParser.stringToDate(dateString);","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"deonchung"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"deonchung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Invalid date! Ensure date is in \" + DateParser.OUTPUT_DATE_FORMAT + \".\");","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"deonchung"},"content":"     * Checks if a medicine order status is valid.","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"deonchung"},"content":"     * @param ui           Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"deonchung"},"content":"     * @param statusString Status of medicine order.","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if medicine expiry date is valid.","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"deonchung"},"content":"    public boolean isValidStatus(Ui ui, String statusString) {","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"deonchung"},"content":"        if (statusString.equalsIgnoreCase(\"PENDING\")","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"deonchung"},"content":"                || statusString.equalsIgnoreCase(\"DELIVERED\")) {","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"deonchung"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"deonchung"},"content":"        ui.print(\"Invalid status! Ensure status is either PENDING or DELIVERED\");","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"deonchung"},"content":"     * Checks if a order column/alias exists.","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"deonchung"},"content":"     * @param ui         Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"deonchung"},"content":"     * @param columnName Column name/alias to be validated.","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if column name is value.","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"deonchung"},"content":"    public boolean isValidColumn(Ui ui, String columnName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"deonchung"},"content":"        String[] columnAlias \u003d new String[]{CommandParameters.ID, CommandParameters.NAME, CommandParameters.QUANTITY,","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"deonchung"},"content":"                CommandParameters.DATE, CommandParameters.STATUS};","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"deonchung"},"content":"        if (Arrays.asList(Order.COLUMNS).contains(columnName.toUpperCase()) || Arrays.asList(columnAlias)","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"deonchung"},"content":"                .contains(columnName.toLowerCase())) {","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"deonchung"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"deonchung"},"content":"        ui.print(\"Invalid column name/alias! Column names can only be \" + Arrays.toString(Order.COLUMNS) + \" and \"","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"deonchung"},"content":"                + \"the respective aliases are \" + Arrays.toString(columnAlias) + \".\");","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"alvintan01":2,"deonchung":150,"a-tph":3}},{"path":"src/main/java/utilities/parser/PrescriptionManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import utilities.comparators.StockComparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"//@@author a-tph","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":" * Manages medicines that are prescription objects.","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"public class PrescriptionManager {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"     * Extracts the prescription object for a given prescription id.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"     * @param parameters LinkedHashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"     * @param medicines  Arraylist of all medicines.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"     * @return Stock object of the provided order id by user","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"    public static Prescription extractPrescriptionObject(LinkedHashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"                                                         ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"        int orderId \u003d Integer.parseInt(parameters.get(CommandParameters.ID));","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"        Prescription prescription \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"            if (medicine instanceof Prescription \u0026\u0026 orderId \u003d\u003d ((Prescription) medicine).getPrescriptionId()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"                prescription \u003d (Prescription) medicine;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"        assert (prescription !\u003d null) : \"Expected a prescription object but none extracted\";","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        return prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"     * Handles restoration of stock of a prescribed medication.","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"     * @param targetRestoreStock The target stock object to restore quantity.","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"     * @param restoreQuantity    The quantity of the medication.","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"    public static void restoreStock(Stock targetRestoreStock, int restoreQuantity) {","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"        targetRestoreStock.setDeleted(false);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"        targetRestoreStock.setQuantity(restoreQuantity);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"     * Handles dispensing more stocks of a prescribed medication of different names.","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"     * @param medicines                Arraylist of all medicines.","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"     * @param targetPrescriptionStocks The target stock array list to prescribe quantity.","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"     * @param prescribeQuantity        The quantity to prescribe from the stocks.","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"     * @param customerId               The customer Id of the associated prescription object.","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"     * @param date                     Date of prescription.","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"     * @param staffName                The staff Id of the associated prescription object.","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"     * @returns ArrayList of updated prescriptions.","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"    public static ArrayList\u003cPrescription\u003e prescribeStock(ArrayList\u003cMedicine\u003e medicines,","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"                                                         ArrayList\u003cStock\u003e targetPrescriptionStocks,","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"                                                         int prescribeQuantity,","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"                                                         String customerId, Date date, String staffName) {","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cPrescription\u003e newPrescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"        targetPrescriptionStocks.sort(new StockComparator(CommandParameters.EXPIRY_DATE, false));","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"        while (prescribeQuantity !\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"            for (Stock stock : targetPrescriptionStocks) {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"                Prescription prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"                if (stock.getQuantity() \u003c\u003d prescribeQuantity) {","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"                    prescription \u003d new Prescription(stock.getMedicineName(), stock.getQuantity(), customerId, date,","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"                            staffName, stock.getStockId());","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"                    newPrescriptions.add(prescription);","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"                    prescribeQuantity -\u003d stock.getQuantity();","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"                    stock.setQuantity(0);","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"                } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"                    int remainingStocks \u003d stock.getQuantity() - prescribeQuantity;","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"                    prescription \u003d new Prescription(stock.getMedicineName(), prescribeQuantity, customerId, date,","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"                            staffName, stock.getStockId());","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"                    newPrescriptions.add(prescription);","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"                    stock.setQuantity(remainingStocks);","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"                    prescribeQuantity \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"                    break;","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"        // Updating quantity in stocks","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"        for (Stock targetStock : targetPrescriptionStocks) {","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"            for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"                if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"                    continue;","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"                Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"                boolean isSameStockId \u003d stock.getStockId() \u003d\u003d targetStock.getStockId();","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"                boolean isDeleted \u003d stock.isDeleted();","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"                if (isSameStockId \u0026\u0026 !isDeleted) {","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"                    medicine.setQuantity(targetStock.getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"        return newPrescriptions;","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"     * Extracts the date value if it is provided.","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"     * @param parameters Parameters entered in by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"     * @param storedDate Date field currently in the prescription.","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"     * @return The date to be updated.","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"    public static Date getUpdatedDate(LinkedHashMap\u003cString, String\u003e parameters, Date storedDate) {","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"        boolean hasDateParam \u003d parameters.containsKey(CommandParameters.DATE);","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"        Date date \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"        if (hasDateParam) {","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"            try {","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"                date \u003d DateParser.stringToDate(parameters.get(CommandParameters.DATE));","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"            date \u003d storedDate;","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"        assert date !\u003d null : \"Date should not be null\";","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"        return date;","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"     * Extracts the Customer Id if it is provided.","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"     * @param parameters       Parameters entered in by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"     * @param storedCustomerId Customer Id field currently in the prescription.","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"     * @return The Customer Id to be updated.","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"    public static String getUpdatedCustomerId(LinkedHashMap\u003cString, String\u003e parameters, String storedCustomerId) {","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"        boolean hasCustomerParam \u003d parameters.containsKey(CommandParameters.CUSTOMER_ID);","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"        String customerId;","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"        if (hasCustomerParam) {","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"            customerId \u003d parameters.get(CommandParameters.CUSTOMER_ID);","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"            customerId \u003d storedCustomerId;","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"        return customerId;","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"a-tph"},"content":"     * Extracts the Staff information if it is provided.","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"a-tph"},"content":"     * @param parameters  Parameters entered in by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"a-tph"},"content":"     * @param storedStaff Staff field currently in the prescription.","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"a-tph"},"content":"     * @return The Staff to be updated.","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"a-tph"},"content":"    public static String getUpdatedStaff(LinkedHashMap\u003cString, String\u003e parameters, String storedStaff) {","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"a-tph"},"content":"        boolean hasStaffParam \u003d parameters.containsKey(CommandParameters.STAFF);","lastModifiedDate":"2021-11-02"},{"lineNumber":157,"author":{"gitId":"a-tph"},"content":"        String staffName;","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"a-tph"},"content":"        if (hasStaffParam) {","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"a-tph"},"content":"            staffName \u003d parameters.get(CommandParameters.STAFF);","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"a-tph"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":161,"author":{"gitId":"a-tph"},"content":"            staffName \u003d storedStaff;","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":163,"author":{"gitId":"a-tph"},"content":"        return staffName;","lastModifiedDate":"2021-11-02"},{"lineNumber":164,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":165,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":166,"author":{"gitId":"deonchung"},"content":"    //@@author deonchung","lastModifiedDate":"2021-11-02"},{"lineNumber":167,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":169,"author":{"gitId":"deonchung"},"content":"     * Retrieves the total stock quantity for medicine with same name that has not expired.","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"deonchung"},"content":"     * @param medicines     Arraylist of medicines.","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"deonchung"},"content":"     * @param name          Medicine name.","lastModifiedDate":"2021-11-02"},{"lineNumber":173,"author":{"gitId":"deonchung"},"content":"     * @param prescribeDate Date of Prescription.","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"deonchung"},"content":"     * @return Total stock quantity for the medicine that has not expired.","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":176,"author":{"gitId":"deonchung"},"content":"    public static int getNotExpiredStockQuantity(ArrayList\u003cMedicine\u003e medicines, String name, Date prescribeDate) {","lastModifiedDate":"2021-11-02"},{"lineNumber":177,"author":{"gitId":"deonchung"},"content":"        int existingQuantity \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"deonchung"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"deonchung"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":180,"author":{"gitId":"deonchung"},"content":"                continue;","lastModifiedDate":"2021-11-02"},{"lineNumber":181,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"deonchung"},"content":"            boolean isSameMedicineName \u003d medicine.getMedicineName().equalsIgnoreCase(name);","lastModifiedDate":"2021-11-02"},{"lineNumber":183,"author":{"gitId":"deonchung"},"content":"            boolean isDeleted \u003d ((Stock) medicine).isDeleted();","lastModifiedDate":"2021-11-02"},{"lineNumber":184,"author":{"gitId":"deonchung"},"content":"            Date existingExpiry \u003d ((Stock) medicine).getExpiry();","lastModifiedDate":"2021-11-02"},{"lineNumber":185,"author":{"gitId":"deonchung"},"content":"            String expiryString \u003d DateParser.dateToString(existingExpiry);","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"deonchung"},"content":"            String prescribeDateString \u003d DateParser.dateToString(prescribeDate);","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"deonchung"},"content":"            boolean isNotExpired \u003d (existingExpiry.after(prescribeDate) || prescribeDateString.equals(expiryString));","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":189,"author":{"gitId":"deonchung"},"content":"            if (isSameMedicineName \u0026\u0026 !isDeleted \u0026\u0026 isNotExpired) {","lastModifiedDate":"2021-11-02"},{"lineNumber":190,"author":{"gitId":"deonchung"},"content":"                existingQuantity +\u003d medicine.getQuantity();","lastModifiedDate":"2021-11-02"},{"lineNumber":191,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":193,"author":{"gitId":"deonchung"},"content":"        return existingQuantity;","lastModifiedDate":"2021-11-02"},{"lineNumber":194,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":195,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"alvintan01":12,"deonchung":31,"a-tph":153}},{"path":"src/main/java/utilities/parser/PrescriptionValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"//@@author deonchung","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":" * Contains all the methods to validate if a Prescription input parameters are valid.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"public class PrescriptionValidator extends MedicineValidator {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"    public PrescriptionValidator() {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"     * Checks if parameter values are valid for Prescription objects.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"     * @param ui            Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"     * @param parameters    LinkedHashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"     * @param medicines     Arraylist of all medicines.","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"     * @param commandSyntax The command\u0027s valid syntax.","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"     * @return A boolean value indicating whether parameter values are valid.","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"    public boolean containsInvalidParameterValues(Ui ui, LinkedHashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"                                                  ArrayList\u003cMedicine\u003e medicines, String commandSyntax) {","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"            boolean isValid \u003d false;","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"            String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"            switch (parameter) {","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.ID:","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"                isValid \u003d isValidPrescriptionId(ui, parameterValue, medicines);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.NAME:","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"                isValid \u003d isValidName(ui, parameterValue);","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"                isValid \u003d isValidQuantity(ui, parameterValue);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.CUSTOMER_ID:","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"deonchung"},"content":"                isValid \u003d isValidCustomerId(ui, parameterValue);","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.DATE:","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"                isValid \u003d isValidDate(ui, parameterValue);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.STAFF:","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"                isValid \u003d isValidStaffName(ui, parameterValue);","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.STOCK_ID:","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"deonchung"},"content":"                StockValidator stockValidator \u003d new StockValidator();","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"deonchung"},"content":"                isValid \u003d stockValidator.isValidStockId(ui, parameterValue, medicines);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.SORT:","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"deonchung"},"content":"                // Fallthrough","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.REVERSED_SORT:","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"deonchung"},"content":"                isValid \u003d isValidColumn(ui, parameterValue);","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"deonchung"},"content":"            default:","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"deonchung"},"content":"                ui.printInvalidParameter(parameter, commandSyntax);","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"deonchung"},"content":"            if (!isValid) {","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"deonchung"},"content":"                return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"deonchung"},"content":"     * Checks if a prescription ID is valid.","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"deonchung"},"content":"     * @param ui        Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"deonchung"},"content":"     * @param id        ID of the prescription record to be checked.","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"deonchung"},"content":"     * @param medicines List of all medicines.","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if Prescription ID is valid.","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"deonchung"},"content":"    public boolean isValidPrescriptionId(Ui ui, String id, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"deonchung"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"deonchung"},"content":"            int prescriptionId \u003d Integer.parseInt(id);","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"deonchung"},"content":"            if (prescriptionId \u003c\u003d 0 || prescriptionId \u003e Prescription.getPrescriptionCount()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"deonchung"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"deonchung"},"content":"            boolean prescriptionExist \u003d false;","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"deonchung"},"content":"            for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"deonchung"},"content":"                if (!(medicine instanceof Prescription)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"deonchung"},"content":"                    continue;","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"deonchung"},"content":"                Prescription prescription \u003d (Prescription) medicine;","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"deonchung"},"content":"                if (prescription.getPrescriptionId() \u003d\u003d prescriptionId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"deonchung"},"content":"                    prescriptionExist \u003d true;","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"deonchung"},"content":"                    break;","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"deonchung"},"content":"            if (!prescriptionExist) {","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"deonchung"},"content":"                ui.print(\"Invalid prescription id provided!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"deonchung"},"content":"                return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"deonchung"},"content":"            return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"deonchung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Invalid prescription id provided!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"deonchung"},"content":"     * Checks if a customer ID is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"deonchung"},"content":"     * @param ui         Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"deonchung"},"content":"     * @param customerId Customer ID to be checked.","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if Customer ID is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"deonchung"},"content":"    public boolean isValidCustomerId(Ui ui, String customerId) {","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"deonchung"},"content":"        if (customerId.equals(\"\")) {","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Customer ID cannot be empty!\");","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"deonchung"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"deonchung"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"deonchung"},"content":"     * Checks if a Staff Name is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"deonchung"},"content":"     * @param ui        Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"deonchung"},"content":"     * @param staffName Staff Name to be checked.","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if Staff Name is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"deonchung"},"content":"    public boolean isValidStaffName(Ui ui, String staffName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"deonchung"},"content":"        if (staffName.equals(\"\")) {","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Staff name cannot be empty!\");","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"deonchung"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"deonchung"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":143,"author":{"gitId":"deonchung"},"content":"     * Checks if a prescription column/alias exists.","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"deonchung"},"content":"     * @param ui         Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"deonchung"},"content":"     * @param columnName Column name/alias to be validated.","lastModifiedDate":"2021-10-15"},{"lineNumber":147,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating column is valid.","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":149,"author":{"gitId":"deonchung"},"content":"    public boolean isValidColumn(Ui ui, String columnName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"deonchung"},"content":"        String[] columnAlias \u003d new String[]{CommandParameters.ID, CommandParameters.NAME, CommandParameters.QUANTITY,","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"deonchung"},"content":"                CommandParameters.CUSTOMER_ID, CommandParameters.DATE, CommandParameters.STAFF,","lastModifiedDate":"2021-10-15"},{"lineNumber":152,"author":{"gitId":"deonchung"},"content":"                CommandParameters.STOCK_ID};","lastModifiedDate":"2021-10-15"},{"lineNumber":153,"author":{"gitId":"deonchung"},"content":"        if (Arrays.asList(Prescription.COLUMNS).contains(columnName.toUpperCase()) || Arrays.asList(columnAlias)","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"deonchung"},"content":"                .contains(columnName.toLowerCase())) {","lastModifiedDate":"2021-10-15"},{"lineNumber":155,"author":{"gitId":"deonchung"},"content":"            return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"deonchung"},"content":"        ui.print(\"Invalid column name/alias! Column names can only be \" + Arrays.toString(Prescription.COLUMNS) + \" and\"","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"deonchung"},"content":"                + \" the respective aliases are \" + Arrays.toString(columnAlias) + \".\");","lastModifiedDate":"2021-10-15"},{"lineNumber":159,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":160,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":161,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":162,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"deonchung"},"content":"     * Checks if a prescription date is valid.","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":165,"author":{"gitId":"deonchung"},"content":"     * @param ui         Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"deonchung"},"content":"     * @param dateString Date of the prescription.","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if the date is valid.","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":169,"author":{"gitId":"deonchung"},"content":"    public boolean isValidDate(Ui ui, String dateString) {","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"deonchung"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":171,"author":{"gitId":"deonchung"},"content":"            DateParser.stringToDate(dateString);","lastModifiedDate":"2021-10-15"},{"lineNumber":172,"author":{"gitId":"deonchung"},"content":"            return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":173,"author":{"gitId":"deonchung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":174,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Invalid date! Ensure date is in \" + DateParser.OUTPUT_DATE_FORMAT + \".\");","lastModifiedDate":"2021-10-15"},{"lineNumber":175,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":176,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":177,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":178,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"alvintan01":5,"deonchung":170,"a-tph":4}},{"path":"src/main/java/utilities/parser/StockManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"//@@author a-tph","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":" * Manages medicines that are stock objects.","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"public class StockManager {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"     * Retrieves the total stock quantity for medicine with same name.","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of medicines.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"     * @param name      Medicine name.","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"     * @return Total stock quantity for the medicine.","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"    public static int getTotalStockQuantity(ArrayList\u003cMedicine\u003e medicines, String name) {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"        int existingQuantity \u003d 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"            boolean isSameMedicineName \u003d medicine.getMedicineName().equalsIgnoreCase(name);","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"            boolean isDeleted \u003d ((Stock) medicine).isDeleted();","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"            if (isSameMedicineName \u0026\u0026 !isDeleted) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"                existingQuantity +\u003d medicine.getQuantity();","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        return existingQuantity;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"     * Retrieves the maximum stock quantity for medicine with same name.","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of medicines.","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"     * @param name      Medicine name.","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"     * @return Total maximum stock quantity for the medicine.","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"    public static int getMaxStockQuantity(ArrayList\u003cMedicine\u003e medicines, String name) {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"        int existingMaxQuantity \u003d 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"            boolean isSameMedicineName \u003d medicine.getMedicineName().equalsIgnoreCase(name);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"            boolean isDeleted \u003d ((Stock) medicine).isDeleted();","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"            if (isSameMedicineName \u0026\u0026 !isDeleted) {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"                existingMaxQuantity \u003d ((Stock) medicine).getMaxQuantity();","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"        assert (existingMaxQuantity \u003e 0) : \"Invalid max quantity\";","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"        return existingMaxQuantity;","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"     * Extracts the stock object for a given stock id.","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"     * @param parameters HashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"     * @param medicines  Arraylist of all medicines.","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"     * @return Stock object of the provided stock id by user","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"    public static Stock extractStockObject(HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"        int stockId \u003d Integer.parseInt(parameters.get(CommandParameters.ID));","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"        Stock stock \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"            if (medicine instanceof Stock \u0026\u0026 stockId \u003d\u003d ((Stock) medicine).getStockId()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"                stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"        assert (stock !\u003d null) : \"Expected a stock object but none extracted\";","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"        assert (stock.isDeleted() \u003d\u003d false) : \"Stock object should not be deleted\";","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"        return stock;","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"     * Extracts the stock object by a given medicine name and stock Id.","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"     * @param name      Name of the medicine.","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"     * @param stockId   Stock Id of the medicine.","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"     * @return Stock object of the provided stock id by user","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"    public static Stock extractStockObject(ArrayList\u003cMedicine\u003e medicines, String name, int stockId) {","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"            Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"            boolean isSameName \u003d name.equalsIgnoreCase(stock.getMedicineName());","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"            boolean isSameId \u003d stockId \u003d\u003d stock.getStockId();","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"            if (isSameName \u0026\u0026 isSameId) {","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"                return stock;","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"        return null;","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"     * Extracts the filtered stocks for stocks with same name.","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"     * @param stockName Stock name for a given stock.","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"     * @return ArrayList of filteredStocks of the same stock name.","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"    public static ArrayList\u003cStock\u003e getFilteredStocksByName(ArrayList\u003cMedicine\u003e medicines, String stockName) {","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cStock\u003e filteredStocks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"            boolean isSameName \u003d medicine.getMedicineName().equalsIgnoreCase(stockName);","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"            boolean isDeleted \u003d ((Stock) medicine).isDeleted();","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"            if (isSameName \u0026\u0026 !isDeleted) {","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"                filteredStocks.add((Stock) medicine);","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"        return filteredStocks;","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"     * Extracts the unexpired filtered stock for stocks with same name.","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of all medicines.","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"     * @param stockName Stock name for a given stock.","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"     * @return ArrayList of filteredStocks of the same stock name.","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"    public static ArrayList\u003cStock\u003e getUnexpiredFilteredStocksByName(ArrayList\u003cMedicine\u003e medicines, String stockName) {","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cStock\u003e filteredStocks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"            Date currentDate \u003d new Date();","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"            String currentDateString \u003d DateParser.dateToString(currentDate);","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"a-tph"},"content":"            try {","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"                currentDate \u003d DateParser.stringToDate(currentDateString);","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"a-tph"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"a-tph"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"a-tph"},"content":"            boolean isSameName \u003d medicine.getMedicineName().equalsIgnoreCase(stockName);","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"a-tph"},"content":"            boolean isDeleted \u003d ((Stock) medicine).isDeleted();","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"a-tph"},"content":"            boolean isExpired \u003d ((Stock) medicine).getExpiry().before(currentDate);","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"a-tph"},"content":"            if (isSameName \u0026\u0026 !isDeleted \u0026\u0026 !isExpired) {","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"a-tph"},"content":"                filteredStocks.add((Stock) medicine);","lastModifiedDate":"2021-11-02"},{"lineNumber":157,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"a-tph"},"content":"        return filteredStocks;","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":161,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"a-tph":162}},{"path":"src/main/java/utilities/parser/StockValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":" * Contains all the methods to validate if a Medicine\u0027s input parameters are valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"public class StockValidator extends MedicineValidator {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public StockValidator() {","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"     * Checks if parameter values are valid for Stock objects.","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"     * @param ui            Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"     * @param parameters    LinkedHashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"     * @param medicines     Arraylist of all medicines.","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"     * @param commandSyntax The command\u0027s valid syntax.","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"     * @return A boolean value indicating whether parameter values are valid.","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public boolean containsInvalidParameterValues(Ui ui, LinkedHashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"                                                  ArrayList\u003cMedicine\u003e medicines, String commandSyntax) {","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"            boolean isValid \u003d false;","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"            String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"            switch (parameter) {","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.ID:","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"                isValid \u003d isValidStockId(ui, parameterValue, medicines);","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.NAME:","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d isValidName(ui, parameterValue);","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.PRICE:","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"                isValid \u003d isValidPrice(ui, parameterValue);","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.LOW:","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d isValidQuantity(ui, parameterValue);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.EXPIRING:","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"                // Fallthrough","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.EXPIRY_DATE:","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"                isValid \u003d isValidExpiry(ui, parameterValue);","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.DESCRIPTION:","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"                isValid \u003d isValidDescription(ui, parameterValue);","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.MAX_QUANTITY:","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"                isValid \u003d isValidMaxQuantity(ui, parameterValue);","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.SORT:","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"                // Fallthrough","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.REVERSED_SORT:","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"                isValid \u003d isValidColumn(ui, parameterValue);","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"            default:","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"                ui.printInvalidParameter(parameter, commandSyntax);","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"            if (!isValid) {","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"                return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"        return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"RemusTeo"},"content":"     * Checks if the given stock id is valid.","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"     * @param ui        Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"     * @param id        ID of the medicine to be checked.","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"     * @param medicines List of all medicines.","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine ID is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"    public boolean isValidStockId(Ui ui, String id, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"            int stockId \u003d Integer.parseInt(id);","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"            if (stockId \u003c\u003d 0 || stockId \u003e Stock.getStockCount()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"RemusTeo"},"content":"            boolean stockExist \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"            for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"                if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"                    continue;","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"                Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"RemusTeo"},"content":"                if (stock.getStockId() \u003d\u003d stockId \u0026\u0026 !stock.isDeleted()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"RemusTeo"},"content":"                    stockExist \u003d true;","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"RemusTeo"},"content":"                    break;","lastModifiedDate":"2021-10-03"},{"lineNumber":101,"author":{"gitId":"RemusTeo"},"content":"                }","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":103,"author":{"gitId":"RemusTeo"},"content":"            if (!stockExist) {","lastModifiedDate":"2021-10-03"},{"lineNumber":104,"author":{"gitId":"RemusTeo"},"content":"                ui.print(\"Invalid stock id provided!\");","lastModifiedDate":"2021-10-03"},{"lineNumber":105,"author":{"gitId":"RemusTeo"},"content":"                return false;","lastModifiedDate":"2021-10-03"},{"lineNumber":106,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Invalid stock id provided!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine price is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"     * @param ui          Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"     * @param priceString Price of the medicine to be checked.","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine price is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"    public boolean isValidPrice(Ui ui, String priceString) {","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"            double price \u003d Double.parseDouble(priceString);","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"            if (price \u003c 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Invalid price provided!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine expiry date is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"     * @param ui           Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"     * @param expiryString Expiry date of the medicine.","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine expiry date is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"    public boolean isValidExpiry(Ui ui, String expiryString) {","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"            DateParser.stringToDate(expiryString);","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Invalid expiry date! Ensure date is in \" + DateParser.OUTPUT_DATE_FORMAT + \".\");","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine description is empty.","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"     * @param ui          Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"     * @param description Medicine description to be checked.","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine name is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"    public boolean isValidDescription(Ui ui, String description) {","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Description cannot be empty!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":161,"author":{"gitId":"alvintan01"},"content":"            return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"        return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine max quantity is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"     * @param ui                Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"     * @param maxQuantityString Max quantity of the medicine.","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if max medicine quantity is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"    public boolean isValidMaxQuantity(Ui ui, String maxQuantityString) {","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"alvintan01"},"content":"            int maxQuantity \u003d Integer.parseInt(maxQuantityString);","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"alvintan01"},"content":"            if (maxQuantity \u003c 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":177,"author":{"gitId":"alvintan01"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-02"},{"lineNumber":178,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":179,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":180,"author":{"gitId":"alvintan01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":181,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Invalid max quantity provided!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":183,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":184,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":185,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":186,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":187,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine column/alias exists.","lastModifiedDate":"2021-10-02"},{"lineNumber":188,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":189,"author":{"gitId":"alvintan01"},"content":"     * @param ui         Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"alvintan01"},"content":"     * @param columnName Column name/alias to be validated.","lastModifiedDate":"2021-10-02"},{"lineNumber":191,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if column name is value.","lastModifiedDate":"2021-10-15"},{"lineNumber":192,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":193,"author":{"gitId":"alvintan01"},"content":"    public boolean isValidColumn(Ui ui, String columnName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"alvintan01"},"content":"        String[] columnAlias \u003d new String[]{CommandParameters.ID, CommandParameters.NAME, CommandParameters.PRICE,","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"alvintan01"},"content":"                CommandParameters.QUANTITY, CommandParameters.EXPIRY_DATE, CommandParameters.DESCRIPTION,","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"alvintan01"},"content":"                CommandParameters.MAX_QUANTITY};","lastModifiedDate":"2021-10-02"},{"lineNumber":197,"author":{"gitId":"alvintan01"},"content":"        if (Arrays.asList(Stock.COLUMNS).contains(columnName.toUpperCase()) || Arrays.asList(columnAlias)","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"alvintan01"},"content":"                .contains(columnName.toLowerCase())) {","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":200,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":201,"author":{"gitId":"alvintan01"},"content":"        ui.print(\"Invalid column name/alias! Column names can only be \" + Arrays.toString(Stock.COLUMNS) + \" and \"","lastModifiedDate":"2021-10-04"},{"lineNumber":202,"author":{"gitId":"alvintan01"},"content":"                + \"the respective aliases are \" + Arrays.toString(columnAlias) + \".\");","lastModifiedDate":"2021-10-02"},{"lineNumber":203,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":204,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":205,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":206,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":207,"author":{"gitId":"a-tph"},"content":"     * Checks if total quantity of medicine is below max quantity.","lastModifiedDate":"2021-10-06"},{"lineNumber":208,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":209,"author":{"gitId":"alvintan01"},"content":"     * @param ui          Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"a-tph"},"content":"     * @param quantity    Quantity of the medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":211,"author":{"gitId":"a-tph"},"content":"     * @param maxQuantity Max quantity of medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":212,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value indicating if total quantity is less than max quantity.","lastModifiedDate":"2021-10-06"},{"lineNumber":213,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":214,"author":{"gitId":"alvintan01"},"content":"    public boolean quantityValidityChecker(Ui ui, int quantity, int maxQuantity) {","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"a-tph"},"content":"        if (quantity \u003e maxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":216,"author":{"gitId":"a-tph"},"content":"            String message \u003d \"Quantity: \" + quantity + \", Max Quantity: \" + maxQuantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":217,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Quantity cannot be more than maximum quantity!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":218,"author":{"gitId":"a-tph"},"content":"            ui.print(message);","lastModifiedDate":"2021-10-06"},{"lineNumber":219,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":220,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":221,"author":{"gitId":"a-tph"},"content":"        return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":222,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":223,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":224,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":225,"author":{"gitId":"a-tph"},"content":"     * Checks if input date for medicine already exists.","lastModifiedDate":"2021-10-06"},{"lineNumber":226,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":227,"author":{"gitId":"alvintan01"},"content":"     * @param ui         Reference to the UI object to print messages.","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"a-tph"},"content":"     * @param medicines  List of all medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":229,"author":{"gitId":"a-tph"},"content":"     * @param expiryDate Expiry date given by user","lastModifiedDate":"2021-10-06"},{"lineNumber":230,"author":{"gitId":"a-tph"},"content":"     * @param name       Medicine name to check against","lastModifiedDate":"2021-10-06"},{"lineNumber":231,"author":{"gitId":"a-tph"},"content":"     * @return Boolean false if same expiry date exist","lastModifiedDate":"2021-10-06"},{"lineNumber":232,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":233,"author":{"gitId":"alvintan01"},"content":"    public boolean dateValidityChecker(Ui ui, ArrayList\u003cMedicine\u003e medicines, Date expiryDate, String name) {","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cStock\u003e filteredStocks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":236,"author":{"gitId":"a-tph"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"a-tph"},"content":"            Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"a-tph"},"content":"            boolean isSameName \u003d name.equalsIgnoreCase(stock.getMedicineName());","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"a-tph"},"content":"            boolean isDeleted \u003d stock.isDeleted();","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"a-tph"},"content":"            if (isSameName \u0026\u0026 !isDeleted) {","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"a-tph"},"content":"                filteredStocks.add(stock);","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":245,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":246,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":247,"author":{"gitId":"a-tph"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2021-11-02"},{"lineNumber":248,"author":{"gitId":"a-tph"},"content":"        String currentDateString \u003d DateParser.dateToString(currentDate);","lastModifiedDate":"2021-11-02"},{"lineNumber":249,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":250,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":251,"author":{"gitId":"a-tph"},"content":"            currentDate \u003d DateParser.stringToDate(currentDateString);","lastModifiedDate":"2021-11-02"},{"lineNumber":252,"author":{"gitId":"a-tph"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":253,"author":{"gitId":"a-tph"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":254,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":255,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":256,"author":{"gitId":"a-tph"},"content":"        if (expiryDate.before(currentDate)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Expired date detected! Action aborted.\");","lastModifiedDate":"2021-11-02"},{"lineNumber":258,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":259,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":260,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":261,"author":{"gitId":"a-tph"},"content":"        for (Stock filteredStock : filteredStocks) {","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"a-tph"},"content":"            if (expiryDate.equals(filteredStock.getExpiry())) {","lastModifiedDate":"2021-10-06"},{"lineNumber":263,"author":{"gitId":"a-tph"},"content":"                ui.print(\"Same expiry date already exists! Action aborted.\");","lastModifiedDate":"2021-11-02"},{"lineNumber":264,"author":{"gitId":"a-tph"},"content":"                return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":265,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":266,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":267,"author":{"gitId":"a-tph"},"content":"        return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":268,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":269,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":145,"RemusTeo":11,"a-tph":113}},{"path":"src/main/java/utilities/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import errors.InvalidDataException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import utilities.parser.FileParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"import java.io.File;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"//@@author RemusTeo","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":" * Storage class handles all saving and loading of data.","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"public class Storage {","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"    private static final String DIRECTORY_PATH \u003d \"data\";","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"    private static final String STOCK_FILE_PATH \u003d \"data/stock.txt\";","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"    private static final String ORDER_FILE_PATH \u003d \"data/order.txt\";","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"    private static final String PRESCRIPTION_FILE_PATH \u003d \"data/prescription.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"    private static final String ORDER_ARCHIVE_FILE_PATH \u003d \"data/order_archive.txt\";","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"    private static final String PRESCRIPTION_ARCHIVE_FILE_PATH \u003d \"data/prescription_archive.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"    private static final String DELIMITER \u003d \"\\\\|\";","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"    private static final int NUMBER_OF_STOCK_DATA_FIELDS \u003d 8;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"    private static final int NUMBER_OF_ORDER_DATA_FIELDS \u003d 5;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"    private static final int NUMBER_OF_PRESCRIPTION_DATA_FIELDS \u003d 7;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"    private static File stockFile;","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"    private static File orderFile;","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"    private static File prescriptionFile;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"    private static File orderArchiveFile;","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"    private static File prescriptionArchiveFile;","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"    private static Storage storage \u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"    int highestStockId \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"    int highestOrderId \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"    int highestPrescriptionId \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"RemusTeo"},"content":"     * Helps to create the Storage instance or returns the Storage instance if it exists.","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"RemusTeo"},"content":"     * @return The Storage instance.","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"RemusTeo"},"content":"    public static Storage getInstance() {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"RemusTeo"},"content":"        if (storage \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"RemusTeo"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"RemusTeo"},"content":"        return storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"RemusTeo"},"content":"     * Constructor of Storage class.","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"RemusTeo"},"content":"     * Initializes all files objects.","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"RemusTeo"},"content":"    public Storage() {","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"RemusTeo"},"content":"        stockFile \u003d new File(STOCK_FILE_PATH);","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"RemusTeo"},"content":"        orderFile \u003d new File(ORDER_FILE_PATH);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"RemusTeo"},"content":"        prescriptionFile \u003d new File(PRESCRIPTION_FILE_PATH);","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"RemusTeo"},"content":"        orderArchiveFile \u003d new File(ORDER_ARCHIVE_FILE_PATH);","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"RemusTeo"},"content":"        prescriptionArchiveFile \u003d new File(PRESCRIPTION_ARCHIVE_FILE_PATH);","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"RemusTeo"},"content":"     * Save data into specific files after categorising them into Stock, Order and Prescription.","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"RemusTeo"},"content":"    public void saveData(ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"RemusTeo"},"content":"        String stockData \u003d \"\";","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"RemusTeo"},"content":"        String orderData \u003d \"\";","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"RemusTeo"},"content":"        String prescriptionData \u003d \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"RemusTeo"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"RemusTeo"},"content":"            String data \u003d medicine.toFileFormat() + System.lineSeparator();","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"RemusTeo"},"content":"            if (medicine instanceof Stock) {","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"RemusTeo"},"content":"                stockData +\u003d data;","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"RemusTeo"},"content":"            } else if (medicine instanceof Order) {","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"RemusTeo"},"content":"                orderData +\u003d data;","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"RemusTeo"},"content":"            } else if (medicine instanceof Prescription) {","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"RemusTeo"},"content":"                prescriptionData +\u003d data;","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"RemusTeo"},"content":"        File dataDirectory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"RemusTeo"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"RemusTeo"},"content":"            dataDirectory.mkdir();","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"RemusTeo"},"content":"            stockFile.createNewFile();","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"RemusTeo"},"content":"            writeToFile(stockData, STOCK_FILE_PATH);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"RemusTeo"},"content":"            orderFile.createNewFile();","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"RemusTeo"},"content":"            writeToFile(orderData, ORDER_FILE_PATH);","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"RemusTeo"},"content":"            prescriptionFile.createNewFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"RemusTeo"},"content":"            writeToFile(prescriptionData, PRESCRIPTION_FILE_PATH);","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"RemusTeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"RemusTeo"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"RemusTeo"},"content":"     * Archive data into specific files after categorising them into Order and Prescription.","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"RemusTeo"},"content":"    public void archiveData(ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"RemusTeo"},"content":"        String orderArchiveData \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"RemusTeo"},"content":"        String prescriptionData \u003d \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"RemusTeo"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"RemusTeo"},"content":"            String data \u003d medicine.toArchiveFormat() + System.lineSeparator();","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"RemusTeo"},"content":"            if (medicine instanceof Stock) {","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"RemusTeo"},"content":"                continue; // No archive for stock","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"RemusTeo"},"content":"            } else if (medicine instanceof Order) {","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"RemusTeo"},"content":"                orderArchiveData +\u003d data;","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"RemusTeo"},"content":"            } else if (medicine instanceof Prescription) {","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"RemusTeo"},"content":"                prescriptionData +\u003d data;","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"RemusTeo"},"content":"        File dataDirectory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"RemusTeo"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"RemusTeo"},"content":"            dataDirectory.mkdir();","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"RemusTeo"},"content":"            orderArchiveFile.createNewFile();","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"RemusTeo"},"content":"            appendToFile(orderArchiveData, ORDER_ARCHIVE_FILE_PATH);","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"RemusTeo"},"content":"            prescriptionArchiveFile.createNewFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"RemusTeo"},"content":"            appendToFile(prescriptionData, PRESCRIPTION_ARCHIVE_FILE_PATH);","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"RemusTeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"RemusTeo"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"RemusTeo"},"content":"     * Write data into file corresponding files.","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"RemusTeo"},"content":"     * @param data Data to be written into the file.","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"RemusTeo"},"content":"     * @throws IOException If unable to write into file.","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"RemusTeo"},"content":"    private void writeToFile(String data, String filePath) throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"RemusTeo"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"RemusTeo"},"content":"        fw.write(data);","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"RemusTeo"},"content":"        fw.close();","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"RemusTeo"},"content":"     * Append data into file corresponding files.","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"RemusTeo"},"content":"     * @param data Data to be appended into the file.","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"RemusTeo"},"content":"     * @throws IOException If unable to append into file.","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"RemusTeo"},"content":"    private void appendToFile(String data, String filePath) throws IOException {","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"RemusTeo"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"RemusTeo"},"content":"        fw.write(data);","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"RemusTeo"},"content":"        fw.close();","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"RemusTeo"},"content":"     * Load saved data from data/stock.txt, data/order.txt, data/prescription.txt.","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"RemusTeo"},"content":"    public ArrayList\u003cMedicine\u003e loadData() {","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"RemusTeo"},"content":"        if (stockFile.exists()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"RemusTeo"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"RemusTeo"},"content":"                medicines.addAll(readFromFile(\"STOCK\", stockFile));","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"RemusTeo"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"RemusTeo"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"RemusTeo"},"content":"        if (orderFile.exists()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"RemusTeo"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"RemusTeo"},"content":"                medicines.addAll(readFromFile(\"ORDER\", orderFile));","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"RemusTeo"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"RemusTeo"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"RemusTeo"},"content":"        if (prescriptionFile.exists()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"RemusTeo"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"RemusTeo"},"content":"                medicines.addAll(readFromFile(\"PRESCRIPTION\", prescriptionFile));","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"RemusTeo"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"RemusTeo"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"RemusTeo"},"content":"        return medicines;","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"RemusTeo"},"content":"     * Read and process medicine details from corresponding file to restore medicine state in program.","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"RemusTeo"},"content":"     * @param file File object of data/stock.txt, data/order.txt, or data/prescription.txt","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"RemusTeo"},"content":"     * @throws FileNotFoundException If file is not found.","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"RemusTeo"},"content":"    private ArrayList\u003cMedicine\u003e readFromFile(String fileType, File file) throws FileNotFoundException {","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"RemusTeo"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"RemusTeo"},"content":"        int stockRow \u003d 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"RemusTeo"},"content":"        int orderRow \u003d 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"RemusTeo"},"content":"        int prescriptionRow \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"RemusTeo"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"RemusTeo"},"content":"            String medicineDetails \u003d sc.nextLine();","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"RemusTeo"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"RemusTeo"},"content":"                switch (fileType) {","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"RemusTeo"},"content":"                case \"STOCK\":","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"RemusTeo"},"content":"                    Medicine parsedStock \u003d parseStockData(medicineDetails, stockRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"RemusTeo"},"content":"                    medicines.add(parsedStock);","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"RemusTeo"},"content":"                    stockRow++;","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"RemusTeo"},"content":"                    break;","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"RemusTeo"},"content":"                case \"ORDER\":","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"RemusTeo"},"content":"                    Medicine parsedOrder \u003d parseOrderData(medicineDetails, orderRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"RemusTeo"},"content":"                    medicines.add(parsedOrder);","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"RemusTeo"},"content":"                    orderRow++;","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"RemusTeo"},"content":"                    break;","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"RemusTeo"},"content":"                case \"PRESCRIPTION\":","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"RemusTeo"},"content":"                    Medicine parsedPrescription \u003d parsePrescriptionData(medicineDetails, prescriptionRow);","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"RemusTeo"},"content":"                    medicines.add(parsedPrescription);","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"RemusTeo"},"content":"                    prescriptionRow++;","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"RemusTeo"},"content":"                    break;","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"RemusTeo"},"content":"                default:","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"RemusTeo"},"content":"                    break;","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"RemusTeo"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"RemusTeo"},"content":"            } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"RemusTeo"},"content":"                Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"RemusTeo"},"content":"                ui.print(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"RemusTeo"},"content":"                ui.print(\"Corrupted data detected in file. Please fix error in file. Quitting MediVault now.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"RemusTeo"},"content":"                System.exit(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"RemusTeo"},"content":"        return medicines;","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"RemusTeo"},"content":"     * Parse stock data and create a stock object based on it.","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"RemusTeo"},"content":"     * @param stockDetails String of data of specific stock from file data/stock.txt.","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"RemusTeo"},"content":"     * @return Stock object for adding into medicines.","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"RemusTeo"},"content":"    private Medicine parseStockData(String stockDetails, int stockRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"RemusTeo"},"content":"        String[] splitStockDetails \u003d stockDetails.split(DELIMITER);","lastModifiedDate":"2021-11-02"},{"lineNumber":243,"author":{"gitId":"RemusTeo"},"content":"        if (splitStockDetails.length !\u003d NUMBER_OF_STOCK_DATA_FIELDS) {","lastModifiedDate":"2021-11-02"},{"lineNumber":244,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + stockRow + \"] INVALID NUMBER OF DELIMITER OR FIELDS\"","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"RemusTeo"},"content":"                    + \" [data/stock.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"RemusTeo"},"content":"        int stockId \u003d FileParser.parseStockId(splitStockDetails, stockRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"RemusTeo"},"content":"        String stockName \u003d FileParser.parseStockName(splitStockDetails, stockRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"RemusTeo"},"content":"        double stockPrice \u003d FileParser.parseStockPrice(splitStockDetails, stockRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"RemusTeo"},"content":"        int stockQuantity \u003d FileParser.parseStockQuantity(splitStockDetails, stockRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"RemusTeo"},"content":"        Date stockExpiry \u003d FileParser.parseStockExpiry(splitStockDetails, stockRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"RemusTeo"},"content":"        String stockDescription \u003d FileParser.parseStockDescription(splitStockDetails, stockRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"RemusTeo"},"content":"        int stockMaxQuantity \u003d FileParser.parseStockMaxQuantity(splitStockDetails, stockRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"RemusTeo"},"content":"        boolean stockIsDeleted \u003d FileParser.parseStockIsDeleted(splitStockDetails, stockRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":256,"author":{"gitId":"RemusTeo"},"content":"        Stock stock \u003d new Stock(stockName, stockPrice, stockQuantity, stockExpiry, stockDescription, stockMaxQuantity);","lastModifiedDate":"2021-10-17"},{"lineNumber":257,"author":{"gitId":"RemusTeo"},"content":"        if (stockId \u003e highestStockId) {","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"RemusTeo"},"content":"            stock.setStockId(stockId);","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"RemusTeo"},"content":"            stock.setStockCount(stockId);","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"RemusTeo"},"content":"            highestStockId \u003d stockId;","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"RemusTeo"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"RemusTeo"},"content":"            stock.setStockId(stockId);","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"RemusTeo"},"content":"            stock.setStockCount(highestStockId);","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"RemusTeo"},"content":"        stock.setDeleted(stockIsDeleted);","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"RemusTeo"},"content":"        return stock;","lastModifiedDate":"2021-10-17"},{"lineNumber":267,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":268,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":269,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":270,"author":{"gitId":"RemusTeo"},"content":"     * Parse order data and create an order object based on it.","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"RemusTeo"},"content":"     * @param orderDetails String of data of specific order from file data/order.txt.","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"RemusTeo"},"content":"     * @return Order object for adding into medicines.","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":275,"author":{"gitId":"RemusTeo"},"content":"    private Medicine parseOrderData(String orderDetails, int orderRow) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":276,"author":{"gitId":"RemusTeo"},"content":"        String[] orderStockDetails \u003d orderDetails.split(DELIMITER);","lastModifiedDate":"2021-11-02"},{"lineNumber":277,"author":{"gitId":"RemusTeo"},"content":"        if (orderStockDetails.length !\u003d NUMBER_OF_ORDER_DATA_FIELDS) {","lastModifiedDate":"2021-11-02"},{"lineNumber":278,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + orderRow + \"] INVALID NUMBER OF DELIMITER OR FIELDS\"","lastModifiedDate":"2021-10-24"},{"lineNumber":279,"author":{"gitId":"RemusTeo"},"content":"                    + \" [data/order.txt]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":280,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":281,"author":{"gitId":"RemusTeo"},"content":"        int orderId \u003d FileParser.parseOrderId(orderStockDetails, orderRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":282,"author":{"gitId":"RemusTeo"},"content":"        String orderName \u003d FileParser.parseOrderName(orderStockDetails, orderRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":283,"author":{"gitId":"RemusTeo"},"content":"        int orderQuantity \u003d FileParser.parseOrderQuantity(orderStockDetails, orderRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"RemusTeo"},"content":"        Date orderDate \u003d FileParser.parseOrderDate(orderStockDetails, orderRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":285,"author":{"gitId":"RemusTeo"},"content":"        boolean orderStatus \u003d FileParser.parseOrderStatus(orderStockDetails, orderRow);","lastModifiedDate":"2021-10-24"},{"lineNumber":286,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"RemusTeo"},"content":"        Order order \u003d new Order(orderName, orderQuantity, orderDate);","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"RemusTeo"},"content":"        if (orderStatus) {","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"RemusTeo"},"content":"            order.setDelivered();","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":291,"author":{"gitId":"RemusTeo"},"content":"        if (orderId \u003e highestOrderId) {","lastModifiedDate":"2021-10-24"},{"lineNumber":292,"author":{"gitId":"RemusTeo"},"content":"            order.setOrderId(orderId);","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"RemusTeo"},"content":"            order.setOrderCount(orderId);","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"RemusTeo"},"content":"            highestOrderId \u003d orderId;","lastModifiedDate":"2021-10-24"},{"lineNumber":295,"author":{"gitId":"RemusTeo"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":296,"author":{"gitId":"RemusTeo"},"content":"            order.setOrderId(orderId);","lastModifiedDate":"2021-10-24"},{"lineNumber":297,"author":{"gitId":"RemusTeo"},"content":"            order.setOrderCount(highestOrderId);","lastModifiedDate":"2021-10-24"},{"lineNumber":298,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":299,"author":{"gitId":"RemusTeo"},"content":"        return order;","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"RemusTeo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"RemusTeo"},"content":"     * Parse prescription data and create a prescription object based on it.","lastModifiedDate":"2021-10-25"},{"lineNumber":304,"author":{"gitId":"RemusTeo"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"RemusTeo"},"content":"     * @param prescriptionDetails String of data of specific stock from file data/prescription.txt.","lastModifiedDate":"2021-10-25"},{"lineNumber":306,"author":{"gitId":"RemusTeo"},"content":"     * @param prescriptionRow     Row ID of the prescription.","lastModifiedDate":"2021-10-25"},{"lineNumber":307,"author":{"gitId":"RemusTeo"},"content":"     * @return Prescription object for adding into medicines.","lastModifiedDate":"2021-10-25"},{"lineNumber":308,"author":{"gitId":"RemusTeo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"RemusTeo"},"content":"    private Medicine parsePrescriptionData(String prescriptionDetails, int prescriptionRow)","lastModifiedDate":"2021-10-25"},{"lineNumber":310,"author":{"gitId":"RemusTeo"},"content":"            throws InvalidDataException {","lastModifiedDate":"2021-10-25"},{"lineNumber":311,"author":{"gitId":"RemusTeo"},"content":"        String[] splitPrescriptionDetails \u003d prescriptionDetails.split(DELIMITER);","lastModifiedDate":"2021-11-02"},{"lineNumber":312,"author":{"gitId":"RemusTeo"},"content":"        if (splitPrescriptionDetails.length !\u003d NUMBER_OF_PRESCRIPTION_DATA_FIELDS) {","lastModifiedDate":"2021-11-02"},{"lineNumber":313,"author":{"gitId":"RemusTeo"},"content":"            throw new InvalidDataException(\"[ROW: \" + prescriptionRow + \"] INVALID NUMBER OF DELIMITER OR FIELDS\"","lastModifiedDate":"2021-10-25"},{"lineNumber":314,"author":{"gitId":"RemusTeo"},"content":"                    + \" [data/prescription.txt]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":316,"author":{"gitId":"RemusTeo"},"content":"        int prescriptionId \u003d FileParser.parsePrescriptionId(splitPrescriptionDetails, prescriptionRow);","lastModifiedDate":"2021-10-25"},{"lineNumber":317,"author":{"gitId":"RemusTeo"},"content":"        String prescriptionName \u003d FileParser.parsePrescriptionName(splitPrescriptionDetails, prescriptionRow);","lastModifiedDate":"2021-10-25"},{"lineNumber":318,"author":{"gitId":"RemusTeo"},"content":"        int prescriptionQuantity \u003d FileParser.parsePrescriptionQuantity(splitPrescriptionDetails, prescriptionRow);","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"RemusTeo"},"content":"        String prescriptionCustomerId \u003d FileParser.parsePrescriptionCustomerId(splitPrescriptionDetails,","lastModifiedDate":"2021-11-02"},{"lineNumber":320,"author":{"gitId":"RemusTeo"},"content":"                prescriptionRow);","lastModifiedDate":"2021-11-02"},{"lineNumber":321,"author":{"gitId":"RemusTeo"},"content":"        Date prescriptionDate \u003d FileParser.parsePrescriptionDate(splitPrescriptionDetails, prescriptionRow);","lastModifiedDate":"2021-10-25"},{"lineNumber":322,"author":{"gitId":"RemusTeo"},"content":"        String prescriptionStaff \u003d FileParser.parsePrescriptionStaff(splitPrescriptionDetails, prescriptionRow);","lastModifiedDate":"2021-10-25"},{"lineNumber":323,"author":{"gitId":"RemusTeo"},"content":"        int prescriptionStockId \u003d FileParser.parsePrescriptionStockId(splitPrescriptionDetails, prescriptionRow);","lastModifiedDate":"2021-10-25"},{"lineNumber":324,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":325,"author":{"gitId":"RemusTeo"},"content":"        Prescription prescription \u003d new Prescription(prescriptionName, prescriptionQuantity, prescriptionCustomerId,","lastModifiedDate":"2021-10-25"},{"lineNumber":326,"author":{"gitId":"RemusTeo"},"content":"                prescriptionDate, prescriptionStaff, prescriptionStockId);","lastModifiedDate":"2021-10-25"},{"lineNumber":327,"author":{"gitId":"RemusTeo"},"content":"        if (prescriptionId \u003e highestPrescriptionId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":328,"author":{"gitId":"RemusTeo"},"content":"            prescription.setPrescriptionId(prescriptionId);","lastModifiedDate":"2021-10-25"},{"lineNumber":329,"author":{"gitId":"RemusTeo"},"content":"            prescription.setPrescriptionCount(prescriptionId);","lastModifiedDate":"2021-10-25"},{"lineNumber":330,"author":{"gitId":"RemusTeo"},"content":"            highestPrescriptionId \u003d prescriptionId;","lastModifiedDate":"2021-10-25"},{"lineNumber":331,"author":{"gitId":"RemusTeo"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":332,"author":{"gitId":"RemusTeo"},"content":"            prescription.setPrescriptionId(prescriptionId);","lastModifiedDate":"2021-10-25"},{"lineNumber":333,"author":{"gitId":"RemusTeo"},"content":"            prescription.setPrescriptionCount(highestPrescriptionId);","lastModifiedDate":"2021-10-25"},{"lineNumber":334,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":335,"author":{"gitId":"RemusTeo"},"content":"        return prescription;","lastModifiedDate":"2021-10-25"},{"lineNumber":336,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":337,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"alvintan01":2,"RemusTeo":333,"a-tph":2}},{"path":"src/main/java/utilities/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Prescription;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import utilities.parser.OrderManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"//@@author alvintan01","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":" * Handles printing all messages in the application to the console.","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"public class Ui {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    private static final int TABLE_PADDING \u003d 2;","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    private static final int DESCRIPTION_MAX_WIDTH \u003d 40;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    private static final int HELP_MAX_WIDTH \u003d 50;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    private static Ui ui \u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    private static Scanner scanner;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"     * Helps to create the UI instance or returns the UI instance if it exists.","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"     * @return The Ui instance.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public static Ui getInstance() {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        if (ui \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        return ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"     * Helps to create the Scanner instance and returns the user input.","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"     * @return The input given by user.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    public String getInput() {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        if (scanner \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"            scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"     * Prints the welcome message and logo.","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"        String logo \u003d \"|  \\\\/  |          | |(_)| | | |              | || |  \\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"                + \"| .  . |  ___   __| | _ | | | |  __ _  _   _ | || |_ \\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"                + \"| |\\\\/| | / _ \\\\ / _` || || | | | / _` || | | || || __|\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"                + \"| |  | ||  __/| (_| || |\\\\ \\\\_/ /| (_| || |_| || || |_ \\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"                + \"\\\\_|  |_/ \\\\___| \\\\__,_||_| \\\\___/  \\\\__,_| \\\\__,_||_| \\\\__|\\n\";","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"        print(logo + \"Welcome to MediVault!\");","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"     * Prints the invalid command message.","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"    public void printInvalidCommandMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"        print(\"Sorry! I did not understand your command.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"     * Prints the statements.","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"     * @param statement Statement to be printed.","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"    public void print(String statement) {","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"        System.out.println(statement);","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"     * Prints the invalid parameter message.","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"     * @param parameter     The invalid parameter found.","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"     * @param commandSyntax The command syntax of the command.","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"    public void printInvalidParameter(String parameter, String commandSyntax) {","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"        if (parameter.equals(\"\")) {","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"            print(\"Please provide all the required parameters!\");","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"            print(\"An invalid parameter \" + parameter + \" is provided!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"        printCommandSyntax(commandSyntax);","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"     * Prints the missing parameters message.","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"     * @param parameters    The parameters that are not found.","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"     * @param commandSyntax The command syntax of the command.","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"    public void printRequiredParameters(ArrayList\u003cString\u003e parameters, String commandSyntax) {","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"        if (parameters.size() \u003d\u003d 1) {","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"            print(\"Required parameter \" + parameters.toString() + \" is missing!\");","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"            print(\"Required parameters \" + parameters.toString() + \" are missing!\");","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"        printCommandSyntax(commandSyntax);","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"     * Prints the command syntax.","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"     * @param commandSyntax The command syntax of the command.","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"    public void printCommandSyntax(String commandSyntax) {","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"        print(\"COMMAND SYNTAX: \" + commandSyntax);","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"     * Prints out the medicine in a table format.","lastModifiedDate":"2021-10-03"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"     * @param stock Stock to be printed.","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"    public void printStock(Stock stock) {","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cStock\u003e stocks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"        stocks.add(stock);","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"        printStocks(stocks, medicines);","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"     * Prints out all the stocks in the Arraylist in a table format.","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"     * @param stocks    Arraylist of the stocks.","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"     * @param medicines Arraylist of the medicines.","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"    public void printStocks(ArrayList\u003cStock\u003e stocks, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"        if (stocks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"            print(\"There are no stocks found.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"            return;","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"        int idWidth \u003d Stock.COLUMNS[0].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"        int nameWidth \u003d Stock.COLUMNS[1].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"        int priceWidth \u003d Stock.COLUMNS[2].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"        int quantityWidth \u003d Stock.COLUMNS[3].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"        int expiryWidth \u003d Stock.COLUMNS[4].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"        int descriptionWidth \u003d Stock.COLUMNS[5].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"        int maxQuantityWidth \u003d Stock.COLUMNS[6].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"        // Find the longest width of each column","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"        for (Stock stock : stocks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"            idWidth \u003d Math.max(String.valueOf(stock.getStockId()).length(), idWidth);","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"            nameWidth \u003d Math.max(stock.getMedicineName().length(), nameWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"            priceWidth \u003d Math.max(String.format(\"$%.2f\", stock.getPrice()).length(), priceWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"            quantityWidth \u003d Math.max(String.valueOf(stock.getQuantity()).length(), quantityWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"            int orderQuantity \u003d OrderManager.getTotalOrderQuantity(medicines, stock.getMedicineName());","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"            if (orderQuantity !\u003d 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"                quantityWidth \u003d Math.max((\"PENDING: \" + orderQuantity).length(), quantityWidth);","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"            expiryWidth \u003d Math.max(DateParser.dateToString(stock.getExpiry()).length(), expiryWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"            descriptionWidth \u003d Math.max(stock.getDescription().length(), descriptionWidth);","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"            maxQuantityWidth \u003d Math.max(String.valueOf(stock.getMaxQuantity()).length(), maxQuantityWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":161,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"        descriptionWidth \u003d Math.min(descriptionWidth, DESCRIPTION_MAX_WIDTH);","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"        int[] columnWidths \u003d {idWidth, nameWidth, priceWidth, quantityWidth, expiryWidth, descriptionWidth,","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"                maxQuantityWidth};","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"        // Pad the data in the columns","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"        String idFormat \u003d \"| %1$-\" + idWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"        String nameFormat \u003d \"%1$-\" + nameWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"        String priceFormat \u003d \"%1$-\" + priceWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"alvintan01"},"content":"        String quantityFormat \u003d \"%1$-\" + quantityWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"        String expiryFormat \u003d \"%1$-\" + expiryWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"        String descriptionFormat \u003d \"%1$-\" + descriptionWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":174,"author":{"gitId":"alvintan01"},"content":"        String maxQuantityFormat \u003d \"%1$-\" + maxQuantityWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"alvintan01"},"content":"        String[] formats \u003d {idFormat, nameFormat, priceFormat, quantityFormat, expiryFormat, descriptionFormat,","lastModifiedDate":"2021-10-02"},{"lineNumber":177,"author":{"gitId":"alvintan01"},"content":"                maxQuantityFormat};","lastModifiedDate":"2021-10-02"},{"lineNumber":178,"author":{"gitId":"alvintan01"},"content":"        StringBuilder headers \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":179,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c columnWidths.length; i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"alvintan01"},"content":"            headers.append(String.format(formats[i], centerString(columnWidths[i], Stock.COLUMNS[i])));","lastModifiedDate":"2021-10-04"},{"lineNumber":181,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":183,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"alvintan01"},"content":"        System.out.println(headers);","lastModifiedDate":"2021-10-02"},{"lineNumber":185,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"alvintan01"},"content":"        for (Stock stock : stocks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"alvintan01"},"content":"            String description \u003d stock.getDescription();","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"alvintan01"},"content":"            String truncatedDescription \u003d truncateDescription(description, 0, DESCRIPTION_MAX_WIDTH);","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"alvintan01"},"content":"            int orderQuantity \u003d OrderManager.getTotalOrderQuantity(medicines, stock.getMedicineName());","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"alvintan01"},"content":"            int descriptionIndex \u003d truncatedDescription.length();","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":193,"author":{"gitId":"alvintan01"},"content":"            String row \u003d String.format(idFormat, centerString(idWidth, String.valueOf(stock.getStockId())))","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"alvintan01"},"content":"                    + String.format(nameFormat, centerString(nameWidth, stock.getMedicineName()))","lastModifiedDate":"2021-10-04"},{"lineNumber":195,"author":{"gitId":"alvintan01"},"content":"                    + String.format(priceFormat, centerString(priceWidth, String.format(\"$%.2f\", stock.getPrice())))","lastModifiedDate":"2021-10-04"},{"lineNumber":196,"author":{"gitId":"alvintan01"},"content":"                    + String.format(quantityFormat, centerString(quantityWidth, String.valueOf(stock.getQuantity())))","lastModifiedDate":"2021-10-04"},{"lineNumber":197,"author":{"gitId":"alvintan01"},"content":"                    + String.format(expiryFormat, centerString(expiryWidth,","lastModifiedDate":"2021-10-03"},{"lineNumber":198,"author":{"gitId":"alvintan01"},"content":"                    DateParser.dateToString(stock.getExpiry())))","lastModifiedDate":"2021-10-04"},{"lineNumber":199,"author":{"gitId":"alvintan01"},"content":"                    + String.format(descriptionFormat, centerString(descriptionWidth, truncatedDescription))","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"alvintan01"},"content":"                    + String.format(maxQuantityFormat, centerString(maxQuantityWidth,","lastModifiedDate":"2021-10-03"},{"lineNumber":201,"author":{"gitId":"alvintan01"},"content":"                    String.valueOf(stock.getMaxQuantity())));","lastModifiedDate":"2021-10-04"},{"lineNumber":202,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"alvintan01"},"content":"            while (descriptionIndex \u003c description.length() || orderQuantity !\u003d 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":204,"author":{"gitId":"alvintan01"},"content":"                truncatedDescription \u003d truncateDescription(description, descriptionIndex, DESCRIPTION_MAX_WIDTH);","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"alvintan01"},"content":"                descriptionIndex +\u003d truncatedDescription.length();","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"alvintan01"},"content":"                row +\u003d \"\\n\" + String.format(idFormat, \"\") + String.format(nameFormat, \"\")","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"alvintan01"},"content":"                        + String.format(priceFormat, \"\")","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"alvintan01"},"content":"                        + String.format(quantityFormat, (orderQuantity \u003d\u003d 0) ? \"\" : (\"PENDING: \" + orderQuantity))","lastModifiedDate":"2021-10-13"},{"lineNumber":210,"author":{"gitId":"alvintan01"},"content":"                        + String.format(expiryFormat, \"\")","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"alvintan01"},"content":"                        + String.format(descriptionFormat, centerString(descriptionWidth, truncatedDescription))","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"alvintan01"},"content":"                        + String.format(maxQuantityFormat, \"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":213,"author":{"gitId":"alvintan01"},"content":"                orderQuantity \u003d 0; // Reset the quantity count to prevent looping","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":215,"author":{"gitId":"alvintan01"},"content":"            System.out.println(row.toUpperCase());","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"alvintan01"},"content":"            printRowBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":217,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":219,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":220,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":221,"author":{"gitId":"alvintan01"},"content":"     * Helps to truncate the description of a table column and ensure that it does not truncate a word in the middle.","lastModifiedDate":"2021-11-02"},{"lineNumber":222,"author":{"gitId":"alvintan01"},"content":"     * It will ensure that the truncated description returned contains valid words.","lastModifiedDate":"2021-10-09"},{"lineNumber":223,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"alvintan01"},"content":"     * @param description   Description value in the column.","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"alvintan01"},"content":"     * @param startingIndex The starting index to truncate the description.","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"alvintan01"},"content":"     * @param maxWidth      The maximum number of characters allowed per row.","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":228,"author":{"gitId":"alvintan01"},"content":"    private String truncateDescription(String description, int startingIndex, int maxWidth) {","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"alvintan01"},"content":"        String truncatedDescription \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"alvintan01"},"content":"        int descriptionIndex \u003d Math.min(description.length(), startingIndex + maxWidth);","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"alvintan01"},"content":"        truncatedDescription \u003d description.substring(startingIndex, descriptionIndex);","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"alvintan01"},"content":"        String[] descriptionSplit \u003d truncatedDescription.split(\"\\\\s\"); // Split by spaces","lastModifiedDate":"2021-10-09"},{"lineNumber":234,"author":{"gitId":"alvintan01"},"content":"        // Ensure that last word is not a space","lastModifiedDate":"2021-10-09"},{"lineNumber":235,"author":{"gitId":"alvintan01"},"content":"        if (descriptionIndex \u003c description.length()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"alvintan01"},"content":"            if (description.charAt(descriptionIndex) !\u003d \u0027 \u0027 \u0026\u0026 descriptionSplit.length \u003e 1) {","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"alvintan01"},"content":"                descriptionSplit[descriptionSplit.length - 1] \u003d \"\"; // Remove the last partial word","lastModifiedDate":"2021-10-09"},{"lineNumber":238,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":239,"author":{"gitId":"alvintan01"},"content":"            truncatedDescription \u003d String.join(\" \", descriptionSplit);","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":241,"author":{"gitId":"alvintan01"},"content":"        return truncatedDescription;","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":243,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":244,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":245,"author":{"gitId":"alvintan01"},"content":"     * Prints the header borders for a table.","lastModifiedDate":"2021-10-02"},{"lineNumber":246,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":247,"author":{"gitId":"alvintan01"},"content":"     * @param columnWidths Array of the columns widths in the table.","lastModifiedDate":"2021-10-02"},{"lineNumber":248,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":249,"author":{"gitId":"alvintan01"},"content":"    private void printHeaderBorder(int[] columnWidths) {","lastModifiedDate":"2021-10-09"},{"lineNumber":250,"author":{"gitId":"alvintan01"},"content":"        StringBuilder headerBorder \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":251,"author":{"gitId":"alvintan01"},"content":"        for (int columnWidth : columnWidths) {","lastModifiedDate":"2021-10-09"},{"lineNumber":252,"author":{"gitId":"alvintan01"},"content":"            headerBorder.append(\"+\");","lastModifiedDate":"2021-10-02"},{"lineNumber":253,"author":{"gitId":"alvintan01"},"content":"            int width \u003d columnWidth + TABLE_PADDING;","lastModifiedDate":"2021-10-09"},{"lineNumber":254,"author":{"gitId":"alvintan01"},"content":"            headerBorder.append(\"\u003d\".repeat(width));","lastModifiedDate":"2021-10-02"},{"lineNumber":255,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":256,"author":{"gitId":"alvintan01"},"content":"        headerBorder.append(\"+\");","lastModifiedDate":"2021-10-02"},{"lineNumber":257,"author":{"gitId":"alvintan01"},"content":"        System.out.println(headerBorder);","lastModifiedDate":"2021-10-02"},{"lineNumber":258,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":259,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":260,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":261,"author":{"gitId":"alvintan01"},"content":"     * Prints the row borders for a table.","lastModifiedDate":"2021-10-02"},{"lineNumber":262,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":263,"author":{"gitId":"alvintan01"},"content":"     * @param columnWidths Array of the columns widths in the table.","lastModifiedDate":"2021-10-02"},{"lineNumber":264,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":265,"author":{"gitId":"alvintan01"},"content":"    private void printRowBorder(int[] columnWidths) {","lastModifiedDate":"2021-10-09"},{"lineNumber":266,"author":{"gitId":"alvintan01"},"content":"        StringBuilder rowBorder \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":267,"author":{"gitId":"alvintan01"},"content":"        for (int columnWidth : columnWidths) {","lastModifiedDate":"2021-10-09"},{"lineNumber":268,"author":{"gitId":"alvintan01"},"content":"            rowBorder.append(\"+\");","lastModifiedDate":"2021-10-02"},{"lineNumber":269,"author":{"gitId":"alvintan01"},"content":"            int width \u003d columnWidth + TABLE_PADDING;","lastModifiedDate":"2021-10-09"},{"lineNumber":270,"author":{"gitId":"alvintan01"},"content":"            rowBorder.append(\"-\".repeat(width));","lastModifiedDate":"2021-10-02"},{"lineNumber":271,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":272,"author":{"gitId":"alvintan01"},"content":"        rowBorder.append(\"+\");","lastModifiedDate":"2021-10-02"},{"lineNumber":273,"author":{"gitId":"alvintan01"},"content":"        System.out.println(rowBorder);","lastModifiedDate":"2021-10-02"},{"lineNumber":274,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":275,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":276,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":277,"author":{"gitId":"alvintan01"},"content":"     * Centralise a string given a width.","lastModifiedDate":"2021-10-02"},{"lineNumber":278,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":279,"author":{"gitId":"alvintan01"},"content":"     * @param width Width of the column.","lastModifiedDate":"2021-10-02"},{"lineNumber":280,"author":{"gitId":"alvintan01"},"content":"     * @param s     String to be centralised.","lastModifiedDate":"2021-10-02"},{"lineNumber":281,"author":{"gitId":"alvintan01"},"content":"     * @return The centralised string.","lastModifiedDate":"2021-10-02"},{"lineNumber":282,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":283,"author":{"gitId":"alvintan01"},"content":"    private String centerString(int width, String s) {","lastModifiedDate":"2021-10-02"},{"lineNumber":284,"author":{"gitId":"alvintan01"},"content":"        int middleIndex \u003d (s.length() + (width - s.length()) / 2);","lastModifiedDate":"2021-10-31"},{"lineNumber":285,"author":{"gitId":"alvintan01"},"content":"        return String.format(\"%-\" + width + \"s\", String.format(\"%\" + middleIndex + \"s\", s));","lastModifiedDate":"2021-10-31"},{"lineNumber":286,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":287,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":288,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":289,"author":{"gitId":"alvintan01"},"content":"     * Prints out help table with the accepted commands and their respective syntaxes.","lastModifiedDate":"2021-10-07"},{"lineNumber":290,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":291,"author":{"gitId":"alvintan01"},"content":"     * @param commandSyntaxes Arraylist of the commandSyntax to be printed.","lastModifiedDate":"2021-10-07"},{"lineNumber":292,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":293,"author":{"gitId":"alvintan01"},"content":"    public void printHelpMessage(ArrayList\u003cCommandSyntax\u003e commandSyntaxes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":294,"author":{"gitId":"alvintan01"},"content":"        int commandWidth \u003d CommandSyntax.COMMAND.length();","lastModifiedDate":"2021-10-07"},{"lineNumber":295,"author":{"gitId":"alvintan01"},"content":"        int commandSyntaxWidth \u003d CommandSyntax.COMMAND_SYNTAX.length();","lastModifiedDate":"2021-10-07"},{"lineNumber":296,"author":{"gitId":"alvintan01"},"content":"        for (CommandSyntax commandSyntax : commandSyntaxes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":297,"author":{"gitId":"alvintan01"},"content":"            commandWidth \u003d Math.max(commandWidth, commandSyntax.getCommandName().length());","lastModifiedDate":"2021-10-07"},{"lineNumber":298,"author":{"gitId":"alvintan01"},"content":"            commandSyntaxWidth \u003d Math.max(commandSyntaxWidth, commandSyntax.getCommandSyntax().length());","lastModifiedDate":"2021-10-07"},{"lineNumber":299,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":300,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxWidth \u003d Math.min(commandSyntaxWidth, HELP_MAX_WIDTH);","lastModifiedDate":"2021-10-23"},{"lineNumber":301,"author":{"gitId":"alvintan01"},"content":"        int[] columnWidths \u003d {commandWidth, commandSyntaxWidth};","lastModifiedDate":"2021-10-07"},{"lineNumber":302,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":303,"author":{"gitId":"alvintan01"},"content":"        String commandFormat \u003d \"| %1$-\" + commandWidth + \"s | \";","lastModifiedDate":"2021-10-07"},{"lineNumber":304,"author":{"gitId":"alvintan01"},"content":"        String commandSyntaxFormat \u003d \"%1$-\" + commandSyntaxWidth + \"s | \";","lastModifiedDate":"2021-10-07"},{"lineNumber":305,"author":{"gitId":"alvintan01"},"content":"        String[] formats \u003d {commandFormat, commandSyntaxFormat};","lastModifiedDate":"2021-10-07"},{"lineNumber":306,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":307,"author":{"gitId":"alvintan01"},"content":"        StringBuilder headers \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":308,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c CommandSyntax.NO_OF_COLUMNS; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":309,"author":{"gitId":"alvintan01"},"content":"            headers.append(String.format(formats[i], centerString(columnWidths[i], CommandSyntax.COLUMNS[i])));","lastModifiedDate":"2021-10-07"},{"lineNumber":310,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":311,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"Welcome to the help page.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":312,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"Your current mode is indicated in the square brackets at the bottom left of the console.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"It allows you to type add, list, update, delete without typing in the full command.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"Type stock, prescription or order to change to respective modes.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"Note that parameters in {curly braces} are optional.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":316,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"Parameters in [square braces] indicate that at least one of the parameter(s) must be \"","lastModifiedDate":"2021-10-07"},{"lineNumber":317,"author":{"gitId":"alvintan01"},"content":"                + \"provided.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":318,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"Parameters enclosed in (round brackets) are conditional optional parameters. For example,\"","lastModifiedDate":"2021-11-02"},{"lineNumber":319,"author":{"gitId":"alvintan01"},"content":"                + \" the parameters d/DESCRIPTION and m/MAX_QUANTITY in addstock and receiveorder will be optional only\"","lastModifiedDate":"2021-11-02"},{"lineNumber":320,"author":{"gitId":"alvintan01"},"content":"                + \" if the stock exists.\");","lastModifiedDate":"2021-11-02"},{"lineNumber":321,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":322,"author":{"gitId":"alvintan01"},"content":"        System.out.println(headers);","lastModifiedDate":"2021-10-07"},{"lineNumber":323,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":324,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":325,"author":{"gitId":"alvintan01"},"content":"        for (CommandSyntax commandSyntax : commandSyntaxes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":326,"author":{"gitId":"alvintan01"},"content":"            String commandSyntaxString \u003d commandSyntax.getCommandSyntax();","lastModifiedDate":"2021-10-23"},{"lineNumber":327,"author":{"gitId":"alvintan01"},"content":"            int currentIndex \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":328,"author":{"gitId":"alvintan01"},"content":"            String truncatedCommandSyntax \u003d truncateDescription(commandSyntaxString, currentIndex, HELP_MAX_WIDTH);","lastModifiedDate":"2021-10-23"},{"lineNumber":329,"author":{"gitId":"alvintan01"},"content":"            currentIndex +\u003d truncatedCommandSyntax.length();","lastModifiedDate":"2021-10-23"},{"lineNumber":330,"author":{"gitId":"alvintan01"},"content":"            String row \u003d String.format(commandFormat, centerString(commandWidth, commandSyntax.getCommandName()))","lastModifiedDate":"2021-10-07"},{"lineNumber":331,"author":{"gitId":"alvintan01"},"content":"                    + String.format(commandSyntaxFormat, truncatedCommandSyntax);","lastModifiedDate":"2021-10-23"},{"lineNumber":332,"author":{"gitId":"alvintan01"},"content":"            System.out.println(row);","lastModifiedDate":"2021-10-07"},{"lineNumber":333,"author":{"gitId":"alvintan01"},"content":"            // Truncate the help command syntax","lastModifiedDate":"2021-10-23"},{"lineNumber":334,"author":{"gitId":"alvintan01"},"content":"            while (currentIndex \u003c commandSyntaxString.length()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":335,"author":{"gitId":"alvintan01"},"content":"                truncatedCommandSyntax \u003d truncateDescription(commandSyntaxString, currentIndex, HELP_MAX_WIDTH);","lastModifiedDate":"2021-10-23"},{"lineNumber":336,"author":{"gitId":"alvintan01"},"content":"                row \u003d String.format(commandFormat, centerString(commandWidth, \"\"))","lastModifiedDate":"2021-10-23"},{"lineNumber":337,"author":{"gitId":"alvintan01"},"content":"                        + String.format(commandSyntaxFormat, truncatedCommandSyntax);","lastModifiedDate":"2021-10-23"},{"lineNumber":338,"author":{"gitId":"alvintan01"},"content":"                System.out.println(row);","lastModifiedDate":"2021-10-23"},{"lineNumber":339,"author":{"gitId":"alvintan01"},"content":"                currentIndex +\u003d truncatedCommandSyntax.length();","lastModifiedDate":"2021-10-23"},{"lineNumber":340,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":341,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":342,"author":{"gitId":"alvintan01"},"content":"            printRowBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":343,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":344,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"For more information, refer to User Guide: https://ay2122s1-cs2113t-t10-1.github.io/tp/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":345,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":346,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":347,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":348,"author":{"gitId":"alvintan01"},"content":"     * Prints out the order in a table format.","lastModifiedDate":"2021-10-26"},{"lineNumber":349,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":350,"author":{"gitId":"alvintan01"},"content":"     * @param order Order to be printed.","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":352,"author":{"gitId":"alvintan01"},"content":"    public void printOrder(Order order) {","lastModifiedDate":"2021-10-18"},{"lineNumber":353,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":354,"author":{"gitId":"alvintan01"},"content":"        orders.add(order);","lastModifiedDate":"2021-10-18"},{"lineNumber":355,"author":{"gitId":"alvintan01"},"content":"        printOrders(orders);","lastModifiedDate":"2021-10-18"},{"lineNumber":356,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":357,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":358,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":359,"author":{"gitId":"alvintan01"},"content":"     * Prints out all the orders in the Arraylist in a table format.","lastModifiedDate":"2021-10-09"},{"lineNumber":360,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":361,"author":{"gitId":"alvintan01"},"content":"     * @param orders Arraylist of the orders.","lastModifiedDate":"2021-10-14"},{"lineNumber":362,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":363,"author":{"gitId":"alvintan01"},"content":"    public void printOrders(ArrayList\u003cOrder\u003e orders) {","lastModifiedDate":"2021-10-14"},{"lineNumber":364,"author":{"gitId":"alvintan01"},"content":"        if (orders.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":365,"author":{"gitId":"alvintan01"},"content":"            print(\"There are no orders found.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":366,"author":{"gitId":"alvintan01"},"content":"            return;","lastModifiedDate":"2021-10-09"},{"lineNumber":367,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":368,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":369,"author":{"gitId":"alvintan01"},"content":"        int idWidth \u003d Order.COLUMNS[0].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":370,"author":{"gitId":"alvintan01"},"content":"        int nameWidth \u003d Order.COLUMNS[1].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":371,"author":{"gitId":"alvintan01"},"content":"        int quantityWidth \u003d Order.COLUMNS[2].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":372,"author":{"gitId":"alvintan01"},"content":"        int dateWidth \u003d Order.COLUMNS[3].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":373,"author":{"gitId":"alvintan01"},"content":"        int statusWidth \u003d Order.COLUMNS[4].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":374,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":375,"author":{"gitId":"alvintan01"},"content":"        // Find the longest width of each column","lastModifiedDate":"2021-10-09"},{"lineNumber":376,"author":{"gitId":"alvintan01"},"content":"        for (Order order : orders) {","lastModifiedDate":"2021-10-09"},{"lineNumber":377,"author":{"gitId":"alvintan01"},"content":"            idWidth \u003d Math.max(String.valueOf(order.getOrderId()).length(), idWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":378,"author":{"gitId":"alvintan01"},"content":"            nameWidth \u003d Math.max(order.getMedicineName().length(), nameWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":379,"author":{"gitId":"alvintan01"},"content":"            quantityWidth \u003d Math.max(String.valueOf(order.getQuantity()).length(), quantityWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":380,"author":{"gitId":"alvintan01"},"content":"            dateWidth \u003d Math.max(DateParser.dateToString(order.getDate()).length(), dateWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":381,"author":{"gitId":"alvintan01"},"content":"            statusWidth \u003d Math.max(order.getStatus().length(), statusWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":382,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":383,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":384,"author":{"gitId":"alvintan01"},"content":"        int[] columnWidths \u003d {idWidth, nameWidth, quantityWidth, dateWidth, statusWidth};","lastModifiedDate":"2021-10-09"},{"lineNumber":385,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":386,"author":{"gitId":"alvintan01"},"content":"        // Pad the data in the columns","lastModifiedDate":"2021-10-09"},{"lineNumber":387,"author":{"gitId":"alvintan01"},"content":"        String idFormat \u003d \"| %1$-\" + idWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":388,"author":{"gitId":"alvintan01"},"content":"        String nameFormat \u003d \"%1$-\" + nameWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":389,"author":{"gitId":"alvintan01"},"content":"        String quantityFormat \u003d \"%1$-\" + quantityWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":390,"author":{"gitId":"alvintan01"},"content":"        String dateFormat \u003d \"%1$-\" + dateWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":391,"author":{"gitId":"alvintan01"},"content":"        String statusFormat \u003d \"%1$-\" + statusWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":392,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":393,"author":{"gitId":"alvintan01"},"content":"        String[] formats \u003d {idFormat, nameFormat, quantityFormat, dateFormat, statusFormat};","lastModifiedDate":"2021-10-09"},{"lineNumber":394,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":395,"author":{"gitId":"alvintan01"},"content":"        StringBuilder headers \u003d new StringBuilder();","lastModifiedDate":"2021-10-09"},{"lineNumber":396,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c columnWidths.length; i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":397,"author":{"gitId":"alvintan01"},"content":"            headers.append(String.format(formats[i], centerString(columnWidths[i], Order.COLUMNS[i])));","lastModifiedDate":"2021-10-09"},{"lineNumber":398,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":399,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":400,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":401,"author":{"gitId":"alvintan01"},"content":"        System.out.println(headers);","lastModifiedDate":"2021-10-09"},{"lineNumber":402,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":403,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":404,"author":{"gitId":"alvintan01"},"content":"        for (Order order : orders) {","lastModifiedDate":"2021-10-09"},{"lineNumber":405,"author":{"gitId":"alvintan01"},"content":"            String row \u003d String.format(idFormat, centerString(idWidth, String.valueOf(order.getOrderId())))","lastModifiedDate":"2021-10-09"},{"lineNumber":406,"author":{"gitId":"alvintan01"},"content":"                    + String.format(nameFormat, centerString(nameWidth, order.getMedicineName()))","lastModifiedDate":"2021-10-09"},{"lineNumber":407,"author":{"gitId":"alvintan01"},"content":"                    + String.format(quantityFormat, centerString(quantityWidth, String.valueOf(order.getQuantity())))","lastModifiedDate":"2021-10-09"},{"lineNumber":408,"author":{"gitId":"alvintan01"},"content":"                    + String.format(dateFormat, centerString(dateWidth, DateParser.dateToString(order.getDate())))","lastModifiedDate":"2021-10-09"},{"lineNumber":409,"author":{"gitId":"alvintan01"},"content":"                    + String.format(statusFormat, centerString(statusWidth, String.valueOf(order.getStatus())));","lastModifiedDate":"2021-10-09"},{"lineNumber":410,"author":{"gitId":"alvintan01"},"content":"            System.out.println(row.toUpperCase());","lastModifiedDate":"2021-10-26"},{"lineNumber":411,"author":{"gitId":"alvintan01"},"content":"            printRowBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":412,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":413,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":414,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":415,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":416,"author":{"gitId":"alvintan01"},"content":"     * Prints out the prescription in a table format.","lastModifiedDate":"2021-10-26"},{"lineNumber":417,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":418,"author":{"gitId":"alvintan01"},"content":"     * @param prescription Prescription to be printed.","lastModifiedDate":"2021-10-26"},{"lineNumber":419,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":420,"author":{"gitId":"alvintan01"},"content":"    public void printPrescription(Prescription prescription) {","lastModifiedDate":"2021-10-26"},{"lineNumber":421,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cPrescription\u003e prescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":422,"author":{"gitId":"alvintan01"},"content":"        prescriptions.add(prescription);","lastModifiedDate":"2021-10-26"},{"lineNumber":423,"author":{"gitId":"alvintan01"},"content":"        printPrescriptions(prescriptions);","lastModifiedDate":"2021-10-26"},{"lineNumber":424,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":425,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":426,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":427,"author":{"gitId":"alvintan01"},"content":"     * Prints out all the medicines prescribed in a table format.","lastModifiedDate":"2021-10-25"},{"lineNumber":428,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":429,"author":{"gitId":"alvintan01"},"content":"     * @param prescriptions Arraylist of the prescription.","lastModifiedDate":"2021-10-25"},{"lineNumber":430,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":431,"author":{"gitId":"alvintan01"},"content":"    public void printPrescriptions(ArrayList\u003cPrescription\u003e prescriptions) {","lastModifiedDate":"2021-10-25"},{"lineNumber":432,"author":{"gitId":"alvintan01"},"content":"        if (prescriptions.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":433,"author":{"gitId":"alvintan01"},"content":"            print(\"There are no records of medicines prescribed.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":434,"author":{"gitId":"alvintan01"},"content":"            return;","lastModifiedDate":"2021-10-09"},{"lineNumber":435,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":436,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":437,"author":{"gitId":"alvintan01"},"content":"        int idWidth \u003d Prescription.COLUMNS[0].length();","lastModifiedDate":"2021-10-25"},{"lineNumber":438,"author":{"gitId":"alvintan01"},"content":"        int nameWidth \u003d Prescription.COLUMNS[1].length();","lastModifiedDate":"2021-10-25"},{"lineNumber":439,"author":{"gitId":"alvintan01"},"content":"        int quantityWidth \u003d Prescription.COLUMNS[2].length();","lastModifiedDate":"2021-10-25"},{"lineNumber":440,"author":{"gitId":"alvintan01"},"content":"        int customerIdWidth \u003d Prescription.COLUMNS[3].length();","lastModifiedDate":"2021-10-25"},{"lineNumber":441,"author":{"gitId":"alvintan01"},"content":"        int dateWidth \u003d Prescription.COLUMNS[4].length();","lastModifiedDate":"2021-10-25"},{"lineNumber":442,"author":{"gitId":"alvintan01"},"content":"        int staffWidth \u003d Prescription.COLUMNS[5].length();","lastModifiedDate":"2021-10-25"},{"lineNumber":443,"author":{"gitId":"alvintan01"},"content":"        int stockIdWidth \u003d Prescription.COLUMNS[6].length();","lastModifiedDate":"2021-10-25"},{"lineNumber":444,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":445,"author":{"gitId":"alvintan01"},"content":"        // Find the longest width of each column","lastModifiedDate":"2021-10-09"},{"lineNumber":446,"author":{"gitId":"alvintan01"},"content":"        for (Prescription prescription : prescriptions) {","lastModifiedDate":"2021-10-25"},{"lineNumber":447,"author":{"gitId":"alvintan01"},"content":"            idWidth \u003d Math.max(String.valueOf(prescription.getPrescriptionId()).length(), idWidth);","lastModifiedDate":"2021-10-25"},{"lineNumber":448,"author":{"gitId":"alvintan01"},"content":"            nameWidth \u003d Math.max(prescription.getMedicineName().length(), nameWidth);","lastModifiedDate":"2021-10-25"},{"lineNumber":449,"author":{"gitId":"alvintan01"},"content":"            quantityWidth \u003d Math.max(String.valueOf(prescription.getQuantity()).length(), quantityWidth);","lastModifiedDate":"2021-10-25"},{"lineNumber":450,"author":{"gitId":"alvintan01"},"content":"            customerIdWidth \u003d Math.max(prescription.getCustomerId().length(), customerIdWidth);","lastModifiedDate":"2021-10-25"},{"lineNumber":451,"author":{"gitId":"alvintan01"},"content":"            dateWidth \u003d Math.max(DateParser.dateToString(prescription.getDate()).length(), dateWidth);","lastModifiedDate":"2021-10-25"},{"lineNumber":452,"author":{"gitId":"alvintan01"},"content":"            staffWidth \u003d Math.max(prescription.getStaff().length(), staffWidth);","lastModifiedDate":"2021-10-25"},{"lineNumber":453,"author":{"gitId":"alvintan01"},"content":"            stockIdWidth \u003d Math.max(String.valueOf(prescription.getStockId()).length(), stockIdWidth);","lastModifiedDate":"2021-10-25"},{"lineNumber":454,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":455,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":456,"author":{"gitId":"alvintan01"},"content":"        int[] columnWidths \u003d {idWidth, nameWidth, quantityWidth, customerIdWidth, dateWidth, staffWidth, stockIdWidth};","lastModifiedDate":"2021-10-14"},{"lineNumber":457,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":458,"author":{"gitId":"alvintan01"},"content":"        // Pad the data in the columns","lastModifiedDate":"2021-10-09"},{"lineNumber":459,"author":{"gitId":"alvintan01"},"content":"        String idFormat \u003d \"| %1$-\" + idWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":460,"author":{"gitId":"alvintan01"},"content":"        String nameFormat \u003d \"%1$-\" + nameWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":461,"author":{"gitId":"alvintan01"},"content":"        String quantityFormat \u003d \"%1$-\" + quantityWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":462,"author":{"gitId":"alvintan01"},"content":"        String customerIdFormat \u003d \"%1$-\" + customerIdWidth + \"s | \";","lastModifiedDate":"2021-10-13"},{"lineNumber":463,"author":{"gitId":"alvintan01"},"content":"        String dateFormat \u003d \"%1$-\" + dateWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":464,"author":{"gitId":"alvintan01"},"content":"        String staffFormat \u003d \"%1$-\" + staffWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":465,"author":{"gitId":"alvintan01"},"content":"        String stockIdFormat \u003d \"%1$-\" + stockIdWidth + \"s | \";","lastModifiedDate":"2021-10-14"},{"lineNumber":466,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":467,"author":{"gitId":"alvintan01"},"content":"        String[] formats \u003d {idFormat, nameFormat, quantityFormat, customerIdFormat, dateFormat, staffFormat,","lastModifiedDate":"2021-10-14"},{"lineNumber":468,"author":{"gitId":"alvintan01"},"content":"                stockIdFormat};","lastModifiedDate":"2021-10-14"},{"lineNumber":469,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":470,"author":{"gitId":"alvintan01"},"content":"        StringBuilder headers \u003d new StringBuilder();","lastModifiedDate":"2021-10-09"},{"lineNumber":471,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c columnWidths.length; i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":472,"author":{"gitId":"alvintan01"},"content":"            headers.append(String.format(formats[i], centerString(columnWidths[i], Prescription.COLUMNS[i])));","lastModifiedDate":"2021-10-25"},{"lineNumber":473,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":474,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":475,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":476,"author":{"gitId":"alvintan01"},"content":"        System.out.println(headers);","lastModifiedDate":"2021-10-09"},{"lineNumber":477,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":478,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":479,"author":{"gitId":"alvintan01"},"content":"        for (Prescription prescription : prescriptions) {","lastModifiedDate":"2021-10-25"},{"lineNumber":480,"author":{"gitId":"alvintan01"},"content":"            String row \u003d String.format(idFormat, centerString(idWidth,","lastModifiedDate":"2021-10-25"},{"lineNumber":481,"author":{"gitId":"alvintan01"},"content":"                    String.valueOf(prescription.getPrescriptionId())))","lastModifiedDate":"2021-10-25"},{"lineNumber":482,"author":{"gitId":"alvintan01"},"content":"                    + String.format(nameFormat, centerString(nameWidth, prescription.getMedicineName()))","lastModifiedDate":"2021-10-25"},{"lineNumber":483,"author":{"gitId":"alvintan01"},"content":"                    + String.format(quantityFormat, centerString(quantityWidth,","lastModifiedDate":"2021-10-25"},{"lineNumber":484,"author":{"gitId":"alvintan01"},"content":"                    String.valueOf(prescription.getQuantity())))","lastModifiedDate":"2021-10-25"},{"lineNumber":485,"author":{"gitId":"alvintan01"},"content":"                    + String.format(customerIdFormat, centerString(customerIdWidth,","lastModifiedDate":"2021-10-13"},{"lineNumber":486,"author":{"gitId":"alvintan01"},"content":"                    String.valueOf(prescription.getCustomerId())))","lastModifiedDate":"2021-10-25"},{"lineNumber":487,"author":{"gitId":"alvintan01"},"content":"                    + String.format(dateFormat, centerString(dateWidth,","lastModifiedDate":"2021-10-25"},{"lineNumber":488,"author":{"gitId":"alvintan01"},"content":"                    DateParser.dateToString(prescription.getDate())))","lastModifiedDate":"2021-10-25"},{"lineNumber":489,"author":{"gitId":"alvintan01"},"content":"                    + String.format(staffFormat, centerString(staffWidth, prescription.getStaff()))","lastModifiedDate":"2021-10-25"},{"lineNumber":490,"author":{"gitId":"alvintan01"},"content":"                    + String.format(stockIdFormat, centerString(stockIdWidth,","lastModifiedDate":"2021-10-25"},{"lineNumber":491,"author":{"gitId":"alvintan01"},"content":"                    String.valueOf(prescription.getStockId())));","lastModifiedDate":"2021-10-25"},{"lineNumber":492,"author":{"gitId":"alvintan01"},"content":"            System.out.println(row.toUpperCase());","lastModifiedDate":"2021-10-26"},{"lineNumber":493,"author":{"gitId":"alvintan01"},"content":"            printRowBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":494,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":495,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":496,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":497,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":498,"author":{"gitId":"alvintan01"},"content":"     * Prints the exit message.","lastModifiedDate":"2021-10-12"},{"lineNumber":499,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":500,"author":{"gitId":"alvintan01"},"content":"    public void printExit() {","lastModifiedDate":"2021-10-12"},{"lineNumber":501,"author":{"gitId":"alvintan01"},"content":"        print(\"Quitting Medivault...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":502,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":503,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":500,"a-tph":3}},{"path":"src/test/java/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"import command.HelpCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"public class HelpCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    @AfterEach","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public void tearDown() {","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    public void helpCommand_noParameters_expectHelpTable() {","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"Welcome to the help page.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"                + \"Your current mode is indicated in the square brackets at the bottom left of the console.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"                + \"It allows you to type add, list, update, delete without typing in the full command.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"                + \"Type stock, prescription or order to change to respective modes.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"                + \"Note that parameters in {curly braces} are optional.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"                + \"Parameters in [square braces] indicate that at least one of the parameter(s) must be provided.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"                + \"Parameters enclosed in (round brackets) are conditional optional parameters. For example, the \"","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"                + \"parameters d/DESCRIPTION and m/MAX_QUANTITY in addstock and receiveorder will be optional only if \"","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"                + \"the stock exists.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"                + \"|       COMMAND       |                   COMMAND SYNTAX                   | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"                + \"|      addstock       | addstock n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE   | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"                + \"|                     | (d/DESCRIPTION m/MAX_QUANTITY)                     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"                + \"|     deletestock     | deletestock [i/ID expiring/EXPIRY_DATE]            | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"                + \"|     updatestock     | updatestock i/ID [n/NAME p/PRICE q/QUANTITY        | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"                + \"|                     | e/EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY]        | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"                + \"|      liststock      | liststock {i/ID p/PRICE q/QUANTITY                 | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"                + \"|                     | low/LESS_THAN_OR_EQUAL_QUANTITY e/EXPIRY_DATE      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"                + \"|                     | expiring/LESS_THAN_OR_EQUAL_EXPIRY_DATE            | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"                + \"|                     | d/DESCRIPTION m/MAX_QUANTITY sort/COLUMN_NAME      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"                + \"|                     | rsort/COLUMN_NAME}                                 | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"                + \"|   addprescription   | addprescription n/NAME q/QUANTITY c/CUSTOMER_ID    | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"                + \"|                     | s/STAFF_NAME                                       | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"                + \"| deleteprescription  | deleteprescription i/ID                            | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"                + \"| updateprescription  | updateprescription i/ID [n/NAME q/QUANTITY         | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"                + \"|                     | c/CUSTOMER_ID d/DATE s/STAFF_NAME]                 | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"                + \"|  listprescription   | listprescription {i/ID q/QUANTITY c/CUSTOMER_ID    | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"                + \"|                     | d/DATE s/STAFF_NAME sid/STOCK_ID                   | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"                + \"|                     | sort/COLUMN_NAME rsort/COLUMN_NAME}                | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"                + \"| archiveprescription | archiveprescription d/DATE                         | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"                + \"|      addorder       | addorder n/NAME q/QUANTITY {d/DATE}                | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"                + \"|     deleteorder     | deleteorder i/ID                                   | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"                + \"|     updateorder     | updateorder i/ID [n/NAME q/QUANTITY d/DATE]        | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"                + \"|      listorder      | listorder {i/ID n/NAME q/QUANTITY d/DATE           | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"                + \"|                     | s/STATUS sort/COLUMN_NAME rsort/COLUMN_NAME}       | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"                + \"|    archiveorder     | archiveorder d/DATE                                | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"                + \"|    receiveorder     | receiveorder i/ID p/PRICE e/EXPIRY_DATE            | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"                + \"|                     | (d/DESCRIPTION m/MAX_QUANTITY)                     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"                + \"|        purge        | purge                                              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"                + \"|        help         | help                                               | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"                + \"|        exit         | exit                                               | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"                + \"+---------------------+----------------------------------------------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"                + \"For more information, refer to User Guide: https://ay2122s1-cs2113t-t10-1.github.io/tp/\";","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"        new HelpCommand().execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"alvintan01":93}},{"path":"src/test/java/PurgeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"import command.Data;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"import command.PurgeCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"public class PurgeCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    private final InputStream sysIn \u003d System.in;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public void getData() {","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        Data.generateTestData();","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    @AfterEach","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public void tearDown() {","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        System.setIn(sysIn);","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        Medicine.getInstance().clear();","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    public void purgeCommand_inputNo_expectDataNotCleared() {","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"N\\n\".getBytes());","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        System.setIn(in); // Send \u0027N\u0027 to scanner","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        new PurgeCommand().execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        assertEquals(Medicine.getInstance().size(), 18);","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    public void purgeCommand_inputYes_expectDataCleared() {","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"Y\\n\".getBytes());","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        System.setIn(in); // Send \u0027Y\u0027 to scanner","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        new PurgeCommand().execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        assertEquals(Medicine.getInstance().size(), 0);","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"alvintan01":42}},{"path":"src/test/java/command/Data.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Order;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import inventory.Prescription;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"public class Data {","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    private static Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"     * Function to clear all the data and reset the IDs.","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public static void clearTestData() {","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"        // Clear all data first and reset count","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        medicines.clear();","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        Stock.setStockCount(0);","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        Prescription.setPrescriptionCount(0);","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        Order.setOrderCount(0);","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    ","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"     * Function to generate test data to test list commands.","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public static void generateTestData() {","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        clearTestData();","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        generateTestStocks(medicines);","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        generateTestPrescriptions(medicines);","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        generateTestOrders(medicines);","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"     * Function to generate stock data to test list commands.","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"     * @param medicines Arraylist of medicines.","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"    public static void generateTestStocks(ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"PANADOL\", 20, 20, DateParser.stringToDate(\"13-9-2022\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"                    \"HEADACHES\", 1000));","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"PANADOL\", 20, 10, DateParser.stringToDate(\"14-9-2022\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"                    \"HEADACHES\", 1000));","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"VICODIN\", 10, 20, DateParser.stringToDate(\"30-9-2022\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"                    \"SEVERE PAIN\",","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"                    500));","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"SIMVASTATIN\", 20, 25, DateParser.stringToDate(\"10-10-2023\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"                    \"HIGH CHOLESTEROL\", 800));","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"LISINOPRIL\", 20, 25, DateParser.stringToDate(\"15-10-2023\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"                    \"HYPOTHYROIDISM\", 800));","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"AZITHROMYCIN\", 20, 35, DateParser.stringToDate(\"15-10-2023\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"                    \"INFECTIONS\", 100));","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"     * Function to generate prescription data to test list commands.","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"     * @param medicines Arraylist of medicines.","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"    public static void generateTestPrescriptions(ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Prescription(\"PANADOL\", 10, \"S1234567A\",","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"                    DateParser.stringToDate(\"9-10-2021\"), \"Jane\", 1));","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Prescription(\"VICODIN\", 15, \"S2345678B\",","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"                    DateParser.stringToDate(\"10-10-2021\"), \"Peter\", 3));","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Prescription(\"SIMVASTATIN\", 20, \"S1234567A\",","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"                    DateParser.stringToDate(\"11-10-2021\"), \"Sam\", 4));","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Prescription(\"LISINOPRIL\", 10, \"S3456789C\",","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"                    DateParser.stringToDate(\"12-10-2021\"), \"Jane\", 5));","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Prescription(\"AZITHROMYCIN\", 5, \"S2345678B\",","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"                    DateParser.stringToDate(\"13-10-2021\"), \"Peter\", 6));","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"     * Function to generate order data to test list commands.","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"     * @param medicines Arraylist of medicines.","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"    public static void generateTestOrders(ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Order(\"PANADOL\", 100, DateParser.stringToDate(\"9-10-2021\")));","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Order(\"VICODIN\", 30, DateParser.stringToDate(\"10-10-2021\")));","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"            Order order \u003d new Order(\"VICODIN\", 50, DateParser.stringToDate(\"11-10-2021\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"            order.setDelivered();","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"            medicines.add(order);","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Order(\"SIMVASTATIN\", 20, DateParser.stringToDate(\"11-10-2021\")));","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Order(\"LISINOPRIL\", 200, DateParser.stringToDate(\"12-12-2021\")));","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Order(\"AZITHROMYCIN\", 100, DateParser.stringToDate(\"13-12-2021\")));","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Order(\"PANADOL\", 50, DateParser.stringToDate(\"13-12-2021\")));","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"alvintan01":107}},{"path":"src/test/java/command/order/ListOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command.order;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.Data;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"public class ListOrderCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    @BeforeAll","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public static void getData() {","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        Data.generateTestData();","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    @AfterEach","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    public void tearDown() {","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    @AfterAll","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    public static void clearData() {","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        Medicine.getInstance().clear();","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"    public void listOrder_sortByIdAscending_expectOrdersWithSortedIdAscending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | QUANTITY |    DATE    |  STATUS   | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    |   100    | 09-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   VICODIN    |    30    | 10-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  |   VICODIN    |    50    | 11-10-2021 | DELIVERED | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  | SIMVASTATIN  |    20    | 11-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  |  LISINOPRIL  |   200    | 12-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"                + \"| 6  | AZITHROMYCIN |   100    | 13-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"                + \"| 7  |   PANADOL    |    50    | 13-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"sort\", \"i\");","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"        new ListOrderCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"    public void listOrder_sortByNameAscending_expectOrdersWithSortedNameAscending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | QUANTITY |    DATE    |  STATUS   | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"                + \"| 6  | AZITHROMYCIN |   100    | 13-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  |  LISINOPRIL  |   200    | 12-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    |   100    | 09-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"                + \"| 7  |   PANADOL    |    50    | 13-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  | SIMVASTATIN  |    20    | 11-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   VICODIN    |    30    | 10-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  |   VICODIN    |    50    | 11-10-2021 | DELIVERED | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"sort\", \"n\");","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"        new ListOrderCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"    public void listOrder_sortByQuantityDescending_expectOrdersWithSortedQuantityDescending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | QUANTITY |    DATE    |  STATUS   | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  |  LISINOPRIL  |   200    | 12-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    |   100    | 09-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"                + \"| 6  | AZITHROMYCIN |   100    | 13-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  |   VICODIN    |    50    | 11-10-2021 | DELIVERED | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"                + \"| 7  |   PANADOL    |    50    | 13-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   VICODIN    |    30    | 10-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  | SIMVASTATIN  |    20    | 11-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"rsort\", \"q\");","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"        new ListOrderCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"    public void listOrder_sortByDateDescending_expectOrdersWithSortedDateDescending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | QUANTITY |    DATE    |  STATUS   | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"                + \"| 6  | AZITHROMYCIN |   100    | 13-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"                + \"| 7  |   PANADOL    |    50    | 13-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  |  LISINOPRIL  |   200    | 12-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  |   VICODIN    |    50    | 11-10-2021 | DELIVERED | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  | SIMVASTATIN  |    20    | 11-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   VICODIN    |    30    | 10-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    |   100    | 09-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"rsort\", \"d\");","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"        new ListOrderCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"    public void listOrder_sortByStatusDescending_expectOrdersWithSortedStatusDescending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | QUANTITY |    DATE    |  STATUS   | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    |   100    | 09-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   VICODIN    |    30    | 10-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  | SIMVASTATIN  |    20    | 11-10-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  |  LISINOPRIL  |   200    | 12-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"                + \"| 6  | AZITHROMYCIN |   100    | 13-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"                + \"| 7  |   PANADOL    |    50    | 13-12-2021 |  PENDING  | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  |   VICODIN    |    50    | 11-10-2021 | DELIVERED | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+------------+-----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"rsort\", \"s\");","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"        new ListOrderCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"    public void listOrder_columnDoesNotExist_expectError() {","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"Invalid column name/alias! Column names can only be [ID, NAME, QUANTITY, DATE, \"","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"alvintan01"},"content":"                + \"STATUS] and the respective aliases are [i, n, q, d, s].\";","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"sort\", \"a\");","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"alvintan01"},"content":"        new ListOrderCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":180,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"alvintan01":181}},{"path":"src/test/java/command/prescription/ListPrescriptionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command.prescription;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.Data;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"public class ListPrescriptionCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    @BeforeAll","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public static void getData() {","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        Data.generateTestData();","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    @AfterEach","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    public void tearDown() {","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    @AfterAll","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    public static void clearData() {","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        Medicine.getInstance().clear();","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_filterByIdTwo_expectPrescriptionsWithIdTwo() {","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |  NAME   | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  | VICODIN |    15    |  S2345678B  | 10-10-2021 | PETER |    3     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"                + \"+----+---------+----------+-------------+------------+-------+----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"i\", \"2\");","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_filterByNamePanadol_expectPrescriptionsWithPanadol() {","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |  NAME   | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  | PANADOL |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"                + \"+----+---------+----------+-------------+------------+-------+----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"n\", \"panadol\");","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_filterByQuantityTen_expectPrescriptionsWithTenQuantity() {","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |    NAME    | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |  PANADOL   |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"                + \"+----+------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  | LISINOPRIL |    10    |  S3456789C  | 12-10-2021 | JANE  |    5     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"                + \"+----+------------+----------+-------------+------------+-------+----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"q\", \"10\");","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_filterByCustomerIdS1234567A_expectPrescriptionsWithCustomerIdS1234567A() {","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |    NAME     | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL   |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"                + \"+----+-------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  | SIMVASTATIN |    20    |  S1234567A  | 11-10-2021 |  SAM  |    4     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"                + \"+----+-------------+----------+-------------+------------+-------+----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"c\", \"S1234567A\");","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_filterByDate13October2021_expectPrescriptionsWithDate13October2021() {","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  | AZITHROMYCIN |    5     |  S2345678B  | 13-10-2021 | PETER |    6     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"d\", \"13-10-2021\");","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_filterByStaffJane_expectPrescriptionsWithStaffJane() {","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |    NAME    | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |  PANADOL   |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"                + \"+----+------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  | LISINOPRIL |    10    |  S3456789C  | 12-10-2021 | JANE  |    5     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"                + \"+----+------------+----------+-------------+------------+-------+----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"s\", \"jane\");","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_filterByStockId1_expectPrescriptionsWithStockId1() {","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |  NAME   | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  | PANADOL |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"                + \"+----+---------+----------+-------------+------------+-------+----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"sid\", \"1\");","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_sortByIdDescending_expectPrescriptionsWithSortedIdDescending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  | AZITHROMYCIN |    5     |  S2345678B  | 13-10-2021 | PETER |    6     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  |  LISINOPRIL  |    10    |  S3456789C  | 12-10-2021 | JANE  |    5     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  | SIMVASTATIN  |    20    |  S1234567A  | 11-10-2021 |  SAM  |    4     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   VICODIN    |    15    |  S2345678B  | 10-10-2021 | PETER |    3     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"rsort\", \"i\");","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_sortByNameAscending_expectPrescriptionsWithSortedNameAscending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  | AZITHROMYCIN |    5     |  S2345678B  | 13-10-2021 | PETER |    6     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  |  LISINOPRIL  |    10    |  S3456789C  | 12-10-2021 | JANE  |    5     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  | SIMVASTATIN  |    20    |  S1234567A  | 11-10-2021 |  SAM  |    4     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":180,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   VICODIN    |    15    |  S2345678B  | 10-10-2021 | PETER |    3     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":183,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"sort\", \"n\");","lastModifiedDate":"2021-11-03"},{"lineNumber":184,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":185,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":186,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":187,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":188,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":189,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":190,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_sortByQuantityAscending_expectPrescriptionsWithSortedQuantityAscending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":191,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":192,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":194,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  | AZITHROMYCIN |    5     |  S2345678B  | 13-10-2021 | PETER |    6     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":196,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":197,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  |  LISINOPRIL  |    10    |  S3456789C  | 12-10-2021 | JANE  |    5     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":200,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   VICODIN    |    15    |  S2345678B  | 10-10-2021 | PETER |    3     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":201,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":202,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  | SIMVASTATIN  |    20    |  S1234567A  | 11-10-2021 |  SAM  |    4     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":203,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":204,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":205,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"sort\", \"q\");","lastModifiedDate":"2021-11-03"},{"lineNumber":206,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":207,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":208,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":209,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":210,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":211,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":212,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_sortByDateDescending_expectPrescriptionsWithSortedDateDescending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":213,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":214,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":215,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":216,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  | AZITHROMYCIN |    5     |  S2345678B  | 13-10-2021 | PETER |    6     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":217,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":218,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  |  LISINOPRIL  |    10    |  S3456789C  | 12-10-2021 | JANE  |    5     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":219,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":220,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  | SIMVASTATIN  |    20    |  S1234567A  | 11-10-2021 |  SAM  |    4     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":221,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":222,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   VICODIN    |    15    |  S2345678B  | 10-10-2021 | PETER |    3     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":223,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":224,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":225,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":226,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":227,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"rsort\", \"d\");","lastModifiedDate":"2021-11-03"},{"lineNumber":228,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":229,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":230,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":231,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":232,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":233,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":234,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_sortByStaffDescending_expectPrescriptionsWithSortedStaffDescending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":235,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":236,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":237,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":238,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  | SIMVASTATIN  |    20    |  S1234567A  | 11-10-2021 |  SAM  |    4     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":239,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":240,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   VICODIN    |    15    |  S2345678B  | 10-10-2021 | PETER |    3     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":241,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":242,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  | AZITHROMYCIN |    5     |  S2345678B  | 13-10-2021 | PETER |    6     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":243,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":244,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":245,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":246,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  |  LISINOPRIL  |    10    |  S3456789C  | 12-10-2021 | JANE  |    5     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":247,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":248,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":249,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"rsort\", \"s\");","lastModifiedDate":"2021-11-03"},{"lineNumber":250,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":251,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":252,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":253,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":254,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":255,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":256,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_sortByStockIdDescending_expectPrescriptionsWithSortedStockIdDescending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":257,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":258,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | QUANTITY | CUSTOMER ID |    DATE    | STAFF | STOCK ID | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":259,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":260,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  | AZITHROMYCIN |    5     |  S2345678B  | 13-10-2021 | PETER |    6     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":261,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":262,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  |  LISINOPRIL  |    10    |  S3456789C  | 12-10-2021 | JANE  |    5     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":263,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":264,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  | SIMVASTATIN  |    20    |  S1234567A  | 11-10-2021 |  SAM  |    4     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":265,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":266,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   VICODIN    |    15    |  S2345678B  | 10-10-2021 | PETER |    3     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":267,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":268,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    |    10    |  S1234567A  | 09-10-2021 | JANE  |    1     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":269,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+----------+-------------+------------+-------+----------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":270,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":271,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"rsort\", \"sid\");","lastModifiedDate":"2021-11-03"},{"lineNumber":272,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":273,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":274,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":275,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":276,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":277,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":278,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_invalidParameter_expectError() {","lastModifiedDate":"2021-11-03"},{"lineNumber":279,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"Please enter a valid optional parameter!\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":280,"author":{"gitId":"alvintan01"},"content":"                + \"COMMAND SYNTAX: listprescription {i/ID q/QUANTITY c/CUSTOMER_ID d/DATE s/STAFF_NAME sid/STOCK_ID \"","lastModifiedDate":"2021-11-03"},{"lineNumber":281,"author":{"gitId":"alvintan01"},"content":"                + \"sort/COLUMN_NAME rsort/COLUMN_NAME}\";","lastModifiedDate":"2021-11-03"},{"lineNumber":282,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":283,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"a\", \"1\");","lastModifiedDate":"2021-11-03"},{"lineNumber":284,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":285,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":286,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":287,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":288,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":289,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":290,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_nameDoesNotExist_expectNoResultsFound() {","lastModifiedDate":"2021-11-03"},{"lineNumber":291,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"There are no records of medicines prescribed.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":292,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":293,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"n\", \"abcd\");","lastModifiedDate":"2021-11-03"},{"lineNumber":294,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":295,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":296,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":297,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":298,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":299,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":300,"author":{"gitId":"alvintan01"},"content":"    public void listPrescription_columnDoesNotExist_expectError() {","lastModifiedDate":"2021-11-03"},{"lineNumber":301,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"Invalid column name/alias! Column names can only be [ID, NAME, QUANTITY, CUSTOMER \"","lastModifiedDate":"2021-11-03"},{"lineNumber":302,"author":{"gitId":"alvintan01"},"content":"                + \"ID, DATE, STAFF, STOCK ID] and the respective aliases are [i, n, q, c, d, s, sid].\";","lastModifiedDate":"2021-11-03"},{"lineNumber":303,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":304,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"sort\", \"a\");","lastModifiedDate":"2021-11-03"},{"lineNumber":305,"author":{"gitId":"alvintan01"},"content":"        new ListPrescriptionCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":306,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":307,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":308,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":309,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"alvintan01":309}},{"path":"src/test/java/command/stock/DeleteStockCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"package command.stock;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import command.Command;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import inventory.Order;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"import inventory.Prescription;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"import inventory.Stock;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"import utilities.parser.DateParser;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"public class DeleteStockCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"    ArrayList\u003cMedicine\u003e medicines \u003d Medicine.getInstance();","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"    void setup() {","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"        medicines.clear();","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"        Stock.setStockCount(0);","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"        Prescription.setPrescriptionCount(0);","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"        Order.setOrderCount(0);","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"    @AfterEach","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"    void restoreStreams() {","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"    void deleteStockCommand_invalidStock_expectInvalid() {","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"RemusTeo"},"content":"        parameters.put(\"i\", \"0\");","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"RemusTeo"},"content":"        Command command \u003d new DeleteStockCommand(parameters);","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"RemusTeo"},"content":"        command.execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"RemusTeo"},"content":"        assertEquals(\"Invalid stock id provided!\", outContent.toString().trim());","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"RemusTeo"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"RemusTeo"},"content":"    void deleteStockCommand_validStock_expectValid() {","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"RemusTeo"},"content":"            medicines.add(new Stock(\"PANADOL\", 20, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"RemusTeo"},"content":"                    \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"RemusTeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"RemusTeo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"RemusTeo"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"RemusTeo"},"content":"        parameters.put(\"i\", \"1\");","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"RemusTeo"},"content":"        Command command \u003d new DeleteStockCommand(parameters);","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"RemusTeo"},"content":"        command.execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"RemusTeo"},"content":"        assertEquals(\"Deleted row with Stock Id: 1\", outContent.toString().trim());","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"RemusTeo":67}},{"path":"src/test/java/command/stock/ListStockTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command.stock;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.Data;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"public class ListStockTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    @BeforeAll","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public static void getData() {","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        Data.generateTestData();","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    @AfterEach","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    public void tearDown() {","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    @AfterAll","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    public static void clearData() {","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        Medicine.getInstance().clear();","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"    public void listStock_sortByIdAscending_expectStocksWithSortedIdAscending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"                \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | PRICE  |   QUANTITY   | EXPIRY_DATE |   DESCRIPTION    | MAX_QUANTITY | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    | $20.00 |      20      | 13-09-2022  |    HEADACHES     |     1000     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 150 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   PANADOL    | $20.00 |      10      | 14-09-2022  |    HEADACHES     |     1000     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 150 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  |   VICODIN    | $10.00 |      20      | 30-09-2022  |   SEVERE PAIN    |     500      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 30  |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  | SIMVASTATIN  | $20.00 |      25      | 10-10-2023  | HIGH CHOLESTEROL |     800      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 20  |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  |  LISINOPRIL  | $20.00 |      25      | 15-10-2023  |  HYPOTHYROIDISM  |     800      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 200 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"                + \"| 6  | AZITHROMYCIN | $20.00 |      35      | 15-10-2023  |    INFECTIONS    |     100      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 100 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"sort\", \"i\");","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"        new ListStockCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"    public void listStock_sortByNameAscending_expectStocksWithSortedNameAscending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"                \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | PRICE  |   QUANTITY   | EXPIRY_DATE |   DESCRIPTION    | MAX_QUANTITY | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"                + \"| 6  | AZITHROMYCIN | $20.00 |      35      | 15-10-2023  |    INFECTIONS    |     100      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 100 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  |  LISINOPRIL  | $20.00 |      25      | 15-10-2023  |  HYPOTHYROIDISM  |     800      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 200 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    | $20.00 |      20      | 13-09-2022  |    HEADACHES     |     1000     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 150 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   PANADOL    | $20.00 |      10      | 14-09-2022  |    HEADACHES     |     1000     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 150 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  | SIMVASTATIN  | $20.00 |      25      | 10-10-2023  | HIGH CHOLESTEROL |     800      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 20  |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  |   VICODIN    | $10.00 |      20      | 30-09-2022  |   SEVERE PAIN    |     500      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 30  |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"sort\", \"n\");","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"        new ListStockCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"    public void listStock_sortByPriceAscending_expectStocksWithSortedPriceAscending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"                \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | PRICE  |   QUANTITY   | EXPIRY_DATE |   DESCRIPTION    | MAX_QUANTITY | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  |   VICODIN    | $10.00 |      20      | 30-09-2022  |   SEVERE PAIN    |     500      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 30  |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    | $20.00 |      20      | 13-09-2022  |    HEADACHES     |     1000     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 150 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   PANADOL    | $20.00 |      10      | 14-09-2022  |    HEADACHES     |     1000     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 150 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  | SIMVASTATIN  | $20.00 |      25      | 10-10-2023  | HIGH CHOLESTEROL |     800      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 20  |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  |  LISINOPRIL  | $20.00 |      25      | 15-10-2023  |  HYPOTHYROIDISM  |     800      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 200 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"                + \"| 6  | AZITHROMYCIN | $20.00 |      35      | 15-10-2023  |    INFECTIONS    |     100      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 100 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"sort\", \"p\");","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"        new ListStockCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"    public void listStock_sortByExpiryDescending_expectStocksWithSortedExpiryDescending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"                \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | PRICE  |   QUANTITY   | EXPIRY_DATE |   DESCRIPTION    | MAX_QUANTITY | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  |  LISINOPRIL  | $20.00 |      25      | 15-10-2023  |  HYPOTHYROIDISM  |     800      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 200 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"                + \"| 6  | AZITHROMYCIN | $20.00 |      35      | 15-10-2023  |    INFECTIONS    |     100      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 100 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  | SIMVASTATIN  | $20.00 |      25      | 10-10-2023  | HIGH CHOLESTEROL |     800      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 20  |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  |   VICODIN    | $10.00 |      20      | 30-09-2022  |   SEVERE PAIN    |     500      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 30  |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   PANADOL    | $20.00 |      10      | 14-09-2022  |    HEADACHES     |     1000     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 150 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    | $20.00 |      20      | 13-09-2022  |    HEADACHES     |     1000     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 150 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"rsort\", \"e\");","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"        new ListStockCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"    public void listStock_sortByDescriptionDescending_expectStocksWithSortedDescriptionDescending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"                \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | PRICE  |   QUANTITY   | EXPIRY_DATE |   DESCRIPTION    | MAX_QUANTITY | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  |   VICODIN    | $10.00 |      20      | 30-09-2022  |   SEVERE PAIN    |     500      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 30  |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"alvintan01"},"content":"                + \"| 6  | AZITHROMYCIN | $20.00 |      35      | 15-10-2023  |    INFECTIONS    |     100      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 100 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  |  LISINOPRIL  | $20.00 |      25      | 15-10-2023  |  HYPOTHYROIDISM  |     800      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 200 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":180,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  | SIMVASTATIN  | $20.00 |      25      | 10-10-2023  | HIGH CHOLESTEROL |     800      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 20  |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":183,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    | $20.00 |      20      | 13-09-2022  |    HEADACHES     |     1000     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":184,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 150 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":185,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":186,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   PANADOL    | $20.00 |      10      | 14-09-2022  |    HEADACHES     |     1000     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":187,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 150 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":188,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":189,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":190,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"rsort\", \"d\");","lastModifiedDate":"2021-11-03"},{"lineNumber":191,"author":{"gitId":"alvintan01"},"content":"        new ListStockCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":192,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":194,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":196,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":197,"author":{"gitId":"alvintan01"},"content":"    public void listStock_sortByMaxQuantityDescending_expectStocksWithSortedMaxQuantityDescending() {","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"alvintan01"},"content":"                \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":200,"author":{"gitId":"alvintan01"},"content":"                + \"| ID |     NAME     | PRICE  |   QUANTITY   | EXPIRY_DATE |   DESCRIPTION    | MAX_QUANTITY | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":201,"author":{"gitId":"alvintan01"},"content":"                + \"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":202,"author":{"gitId":"alvintan01"},"content":"                + \"| 1  |   PANADOL    | $20.00 |      20      | 13-09-2022  |    HEADACHES     |     1000     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":203,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 150 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":204,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":205,"author":{"gitId":"alvintan01"},"content":"                + \"| 2  |   PANADOL    | $20.00 |      10      | 14-09-2022  |    HEADACHES     |     1000     | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":206,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 150 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":207,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":208,"author":{"gitId":"alvintan01"},"content":"                + \"| 4  | SIMVASTATIN  | $20.00 |      25      | 10-10-2023  | HIGH CHOLESTEROL |     800      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":209,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 20  |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":210,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":211,"author":{"gitId":"alvintan01"},"content":"                + \"| 5  |  LISINOPRIL  | $20.00 |      25      | 15-10-2023  |  HYPOTHYROIDISM  |     800      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":212,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 200 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":213,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":214,"author":{"gitId":"alvintan01"},"content":"                + \"| 3  |   VICODIN    | $10.00 |      20      | 30-09-2022  |   SEVERE PAIN    |     500      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":215,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 30  |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":216,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":217,"author":{"gitId":"alvintan01"},"content":"                + \"| 6  | AZITHROMYCIN | $20.00 |      35      | 15-10-2023  |    INFECTIONS    |     100      | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":218,"author":{"gitId":"alvintan01"},"content":"                + \"|    |              |        | PENDING: 100 |             |                  |              | \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":219,"author":{"gitId":"alvintan01"},"content":"                + \"+----+--------------+--------+--------------+-------------+------------------+--------------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":220,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":221,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"rsort\", \"m\");","lastModifiedDate":"2021-11-03"},{"lineNumber":222,"author":{"gitId":"alvintan01"},"content":"        new ListStockCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":223,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":224,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":225,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":226,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":227,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":228,"author":{"gitId":"alvintan01"},"content":"    public void listStock_columnDoesNotExist_expectError() {","lastModifiedDate":"2021-11-03"},{"lineNumber":229,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"Invalid column name/alias! Column names can only be [ID, NAME, PRICE, QUANTITY, \"","lastModifiedDate":"2021-11-03"},{"lineNumber":230,"author":{"gitId":"alvintan01"},"content":"                + \"EXPIRY_DATE, DESCRIPTION, MAX_QUANTITY] and the respective aliases are [i, n, p, q, e, d, m].\";","lastModifiedDate":"2021-11-03"},{"lineNumber":231,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parameters \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":232,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"sort\", \"a\");","lastModifiedDate":"2021-11-03"},{"lineNumber":233,"author":{"gitId":"alvintan01"},"content":"        new ListStockCommand(parameters).execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":234,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":235,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":236,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":237,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"alvintan01":237}},{"path":"src/test/java/utilities/parser/CommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.Command;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import command.ExitCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import command.stock.AddStockCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import errors.InvalidCommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"public class CommandParserTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    @AfterEach","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    public void tearDown() {","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    public void processCommand_exitCommand_expectExitObject() {","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            Command command \u003d commandParser.processCommand(\"exit\", \"\", Mode.STOCK);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"            assertEquals(command.getClass(), ExitCommand.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"    public void processCommand_addCommand_expectAddStockObject() {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"            Command command \u003d commandParser.processCommand(\"add\",","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"                    \"n/name p/10 q/20 e/10-10-2021 d/desc m/100\", Mode.STOCK);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"            assertEquals(command.getClass(), AddStockCommand.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"    public void parseCommand_oneSeparator_expectTwoParts() {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"        String inputString \u003d \"listorder i/1\";","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"        String[] stringParts \u003d commandParser.parseCommand(inputString);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"        assertEquals(2, stringParts.length);","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"    public void parseParameters_twoParameters_expectTwoParts() {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"        String inputString \u003d \"i/1 n/name\";","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parametersValues \u003d commandParser.parseParameters(inputString);","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"        assertEquals(2, parametersValues.keySet().size());","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"    public void parseParameters_threeParameters_expectThreeParts() {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"        String inputString \u003d \"i/1 n/name p/20\";","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"        LinkedHashMap\u003cString, String\u003e parametersValues \u003d commandParser.parseParameters(inputString);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"        assertEquals(3, parametersValues.keySet().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"    public void changeMode_currentModeStockNewModePrescription_expectModePrescription() {","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"        Mode mode \u003d commandParser.changeMode(ui, \"prescription\", Mode.STOCK);","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"        assertEquals(mode, Mode.PRESCRIPTION);","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"    public void changeMode_currentModeStockNewModeOrder_expectModeOrder() {","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"        Mode mode \u003d commandParser.changeMode(ui, \"order\", Mode.STOCK);","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"        assertEquals(mode, Mode.ORDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"    public void changeMode_currentModeOrderNewModeStock_expectModeStock() {","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"        Mode mode \u003d commandParser.changeMode(ui, \"stock\", Mode.ORDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"        assertEquals(mode, Mode.STOCK);","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"    public void changeMode_currentStockNewModeStock_expectModeAlreadyInStockError() {","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"Already in STOCK mode!\";","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"        Mode mode \u003d commandParser.changeMode(ui, \"stock\", Mode.STOCK);","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"    public void changeMode_currentModeOrderNewModeOrder_expectModeAlreadyInOrderError() {","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"Already in ORDER mode!\";","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"        Mode mode \u003d commandParser.changeMode(ui, \"order\", Mode.ORDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"    public void changeMode_currentModePrescriptionNewModePrescription_expectModeAlreadyInPrescriptionError() {","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"        String expectedOutput \u003d \"Already in PRESCRIPTION mode!\";","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"        Mode mode \u003d commandParser.changeMode(ui, \"prescription\", Mode.PRESCRIPTION);","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"        // Output stream will include \\r for each line break","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"        assertEquals(expectedOutput, outputStream.toString().trim().replace(\"\\r\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":115,"deonchung":1,"a-tph":3}},{"path":"src/test/java/utilities/parser/DateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"import java.util.GregorianCalendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"public class DateParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"    public void stringToDate_validDate_expectValid() {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"            Date date \u003d new GregorianCalendar(2021, 8, 13).getTime();","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"            Date parsedDate \u003d DateParser.stringToDate(\"13-9-2021\");","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"            assertEquals(date, parsedDate);","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"    public void stringToDate_invalidDate_exceptionThrown() {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"        assertThrows(ParseException.class, () -\u003e DateParser.stringToDate(\"99-99-2021\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"    public void dateToString_validString_expectValid() {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"        Date date \u003d new GregorianCalendar(2021, 8, 13).getTime();","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"        String parsedStr \u003d DateParser.dateToString(date);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"        assertEquals(\"13-09-2021\", parsedStr);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"    public void removeTime_validDate_expectValid() {","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"        Date date \u003d new GregorianCalendar(2021, 8, 13, 10, 10, 10).getTime();","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"        Date dateWithoutTime \u003d DateParser.removeTime(date);","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"        Date expectedDate \u003d new GregorianCalendar(2021, 8, 13).getTime();","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"        assertEquals(expectedDate, dateWithoutTime);","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"RemusTeo":44,"a-tph":1}},{"path":"src/test/java/utilities/parser/MedicineValidatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"jiangweichen835"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"jiangweichen835"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"jiangweichen835"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"jiangweichen835"},"content":"public class MedicineValidatorTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"jiangweichen835"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    StockValidator stockValidator \u003d new StockValidator();","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidName_validName_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"jiangweichen835"},"content":"        String inputString \u003d \"panadol\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d stockValidator.isValidName(ui, inputString);","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidName_validName_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"jiangweichen835"},"content":"        String inputString \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        boolean isInvalid \u003d stockValidator.isValidName(ui, inputString);","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidQuantity_validQuantity_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"jiangweichen835"},"content":"        String inputString \u003d \"0\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d stockValidator.isValidQuantity(ui, inputString);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidQuantity_validQuantity_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"jiangweichen835"},"content":"        String inputString \u003d \"-1\";","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        boolean isInvalid \u003d stockValidator.isValidQuantity(ui, inputString);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"jiangweichen835"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"alvintan01":5,"a-tph":2,"jiangweichen835":33}},{"path":"src/test/java/utilities/parser/OrderValidatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"deonchung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"public class OrderValidatorTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    OrderValidator orderValidator \u003d new OrderValidator();","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"    public void checkValidOrderId_validId_expectTrue() {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"        ArrayList\u003cMedicine\u003e tempOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"            Order.setOrderCount(0);","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"            tempOrder.add(new Order(\"SIMVASTATIN\", 20, DateParser.stringToDate(\"11-10-2021\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d orderValidator.isValidOrderId(ui, \"1\", tempOrder);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"    public void checkValidStockId_validId_expectFalse() {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"        ArrayList\u003cMedicine\u003e tempOrder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"            tempOrder.add(new Order(\"SIMVASTATIN\", 20, DateParser.stringToDate(\"11-10-2021\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        boolean isInvalid \u003d orderValidator.isValidOrderId(ui, \"5\", tempOrder);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"alvintan01":3,"deonchung":37,"a-tph":2}},{"path":"src/test/java/utilities/parser/PrescriptionValidatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"public class PrescriptionValidatorTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"deonchung"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    PrescriptionValidator prescriptionValidator \u003d new PrescriptionValidator();","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"    public void checkValidCustomerId_validCustomerId_expectTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"        String inputString \u003d \"123\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d prescriptionValidator.isValidCustomerId(ui, inputString);","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"    public void checkValidCustomerId_emptyInput_expectFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"        String inputString \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d prescriptionValidator.isValidCustomerId(ui, inputString);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"        assertFalse(isValid);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"    public void checkValidStaffName_validStaffName_expectTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"        String inputString \u003d \"Mary\";","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d prescriptionValidator.isValidCustomerId(ui, inputString);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"    public void checkValidStaffName_emptyInput_expectFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"        String inputString \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d prescriptionValidator.isValidCustomerId(ui, inputString);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"        assertFalse(isValid);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"alvintan01":6,"deonchung":33,"a-tph":2}},{"path":"src/test/java/utilities/parser/StockManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"public class StockManagerTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"    void getTotalStockQuantity_validStock_expectCorrectQuantity() throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"        // Add dummy medicine values for testing","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 10, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 30, 20, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"AZITHROMYCIN\", 20, 20, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"                \"USED FOR TREATING EAR, THROAT, AND SINUS INFECTIONS\", 2000));","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"        int panadolStockQuantity \u003d StockManager.getTotalStockQuantity(medicines, \"PANADOL\");","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"        int azithromycinStockQuantity \u003d StockManager.getTotalStockQuantity(medicines, \"AZITHROMYCIN\");","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"        assertEquals(40, panadolStockQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"        assertEquals(20, azithromycinStockQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"    void getTotalStockQuantity_emptyStock_expectNoQuantity() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"        int totalStockQuantity \u003d StockManager.getTotalStockQuantity(medicines, \"PANADOL\");","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        assertEquals(0, totalStockQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"    void getMaxStockQuantity_validStock_expectCorrectMaxQuantity() throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"        // Add dummy medicine values for testing","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 10, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 30, 20, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"AZITHROMYCIN\", 20, 20, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"                \"USED FOR TREATING EAR, THROAT, AND SINUS INFECTIONS\", 2000));","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"        int panadolMaxStockQuantity \u003d StockManager.getMaxStockQuantity(medicines, \"PANADOL\");","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"        int azithromycinMaxStockQuantity \u003d StockManager.getMaxStockQuantity(medicines, \"AZITHROMYCIN\");","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"        assertEquals(1000, panadolMaxStockQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"        assertEquals(2000, azithromycinMaxStockQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"    void getMaxStockQuantity_emptyStock_assertionError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"        assertThrows(AssertionError.class, () -\u003e StockManager.getMaxStockQuantity(medicines, \"PANADOL\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"    void extractStockObject_noStock_assertionError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"        HashMap\u003cString, String\u003e parameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"i\", \"1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"        assertThrows(AssertionError.class, () -\u003e StockManager.extractStockObject(parameters, medicines));","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"    void extractStockObject_IdNotFound_assertionError() throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 10, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 30, 20, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"        HashMap\u003cString, String\u003e parameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"i\", \"3\");","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"        assertThrows(AssertionError.class, () -\u003e StockManager.extractStockObject(parameters, medicines));","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"alvintan01":2,"a-tph":83}},{"path":"src/test/java/utilities/parser/StockValidatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package utilities.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import utilities.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"jiangweichen835"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jiangweichen835"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"jiangweichen835"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"public class StockValidatorTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    StockValidator stockValidator \u003d new StockValidator();","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"    public void checkValidStockId_validId_expectTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cMedicine\u003e tempMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"jiangweichen835"},"content":"            Stock.setStockCount(0);","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"            tempMedicines.add(new Stock(\"PANADOL\", 20, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"                    \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d stockValidator.isValidStockId(ui, \"1\", tempMedicines);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidStockId_validId_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"jiangweichen835"},"content":"        ArrayList\u003cMedicine\u003e tempMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"jiangweichen835"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"jiangweichen835"},"content":"            tempMedicines.add(new Stock(\"PANADOL\", 20, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"jiangweichen835"},"content":"                    \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"jiangweichen835"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"jiangweichen835"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        boolean isInvalid \u003d stockValidator.isValidStockId(ui, \"5\", tempMedicines);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"    public void checkValidPrice_validPrice_expectTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"        String inputPrice \u003d \"20\";","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d stockValidator.isValidPrice(ui, inputPrice);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidPrice_validPrice_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"jiangweichen835"},"content":"        String inputPrice \u003d \"-1\";","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"        boolean isInvalid \u003d stockValidator.isValidPrice(ui, inputPrice);","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"    public void checkValidExpiry_validDate_expectTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"        String inputDate \u003d \"08-10-2021\";","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d stockValidator.isValidExpiry(ui, inputDate);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidExpiry_validDate_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"jiangweichen835"},"content":"        String inputDate \u003d \"8 Oct 2021\";","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"        boolean isInvalid \u003d stockValidator.isValidExpiry(ui, inputDate);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidDescription_validDescription_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"jiangweichen835"},"content":"        String inputDescription \u003d \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\";","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d stockValidator.isValidDescription(ui, inputDescription);","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidDescription_validDescription_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"jiangweichen835"},"content":"        String inputDescription \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"        boolean isInvalid \u003d stockValidator.isValidDescription(ui, inputDescription);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidMax_validQuantity_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"jiangweichen835"},"content":"        String inputMaxQuantity \u003d \"100\";","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d stockValidator.isValidMaxQuantity(ui, inputMaxQuantity);","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidMax_validQuantity_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"jiangweichen835"},"content":"        String inputMaxQuantity \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"        boolean isInvalid \u003d stockValidator.isValidMaxQuantity(ui, inputMaxQuantity);","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidColumn_validColumn_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"jiangweichen835"},"content":"        String inputColumnName \u003d \"NAME\";","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d stockValidator.isValidColumn(ui, inputColumnName);","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidColumn_validColumn_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"jiangweichen835"},"content":"        String inputColumnName \u003d \"panadol\";","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"        boolean isInvalid \u003d stockValidator.isValidColumn(ui, inputColumnName);","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidity_checkQuantity_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"jiangweichen835"},"content":"        int quantity \u003d 10;","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"jiangweichen835"},"content":"        int maxQuantity \u003d 100;","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d stockValidator.quantityValidityChecker(ui, quantity, maxQuantity);","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidity_checkQuantity_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"jiangweichen835"},"content":"        int quantity \u003d 10;","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"jiangweichen835"},"content":"        int maxQuantity \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"        boolean isInvalid \u003d stockValidator.quantityValidityChecker(ui, quantity, maxQuantity);","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidity_checkDate_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"jiangweichen835"},"content":"        ArrayList\u003cMedicine\u003e tempMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"jiangweichen835"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"jiangweichen835"},"content":"            tempMedicines.add(new Stock(\"PANADOL\", 20, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"jiangweichen835"},"content":"                    \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"jiangweichen835"},"content":"            final SimpleDateFormat DateFor \u003d new SimpleDateFormat(\"dd/MM/yyyy\");","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"jiangweichen835"},"content":"            final Date expiryDate \u003d DateFor.parse(\"10-10-2021\");","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"jiangweichen835"},"content":"            String inputName \u003d \"panadol\";","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"            boolean isValid \u003d stockValidator.dateValidityChecker(ui, tempMedicines, expiryDate, inputName);","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"jiangweichen835"},"content":"            assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"jiangweichen835"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"jiangweichen835"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidity_checkDate_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"jiangweichen835"},"content":"        ArrayList\u003cMedicine\u003e tempMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"jiangweichen835"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"jiangweichen835"},"content":"            tempMedicines.add(new Stock(\"PANADOL\", 20, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"jiangweichen835"},"content":"                    \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"jiangweichen835"},"content":"            final SimpleDateFormat DateFor \u003d new SimpleDateFormat(\"dd/MM/yyyy\");","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"jiangweichen835"},"content":"            final Date expiryDate \u003d DateFor.parse(\"13-9-2021\");","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"jiangweichen835"},"content":"            String inputName \u003d \"panadol\";","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"            boolean isInvalid \u003d stockValidator.dateValidityChecker(ui, tempMedicines, expiryDate, inputName);","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"jiangweichen835"},"content":"            assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"jiangweichen835"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"jiangweichen835"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"alvintan01":23,"RemusTeo":17,"deonchung":8,"a-tph":8,"jiangweichen835":112}}]
