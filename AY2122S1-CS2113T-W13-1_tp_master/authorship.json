[{"path":".run/Traveller.run.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"conradwee"},"content":"\u003ccomponent name\u003d\"ProjectRunConfigurationManager\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"conradwee"},"content":"  \u003cconfiguration default\u003d\"false\" name\u003d\"Traveller\" type\u003d\"Application\" factoryName\u003d\"Application\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"    \u003coption name\u003d\"ALTERNATIVE_JRE_PATH\" value\u003d\"$USER_HOME$/.jdks/corretto-11.0.12\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"conradwee"},"content":"    \u003coption name\u003d\"MAIN_CLASS_NAME\" value\u003d\"seedu.traveller.Traveller\" /\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"gavienwz"},"content":"    \u003cmodule name\u003d\"tp.main\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"gavienwz"},"content":"    \u003coption name\u003d\"VM_PARAMETERS\" value\u003d\"-ea\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"conradwee"},"content":"    \u003cmethod v\u003d\"2\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"conradwee"},"content":"      \u003coption name\u003d\"Make\" enabled\u003d\"true\" /\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"conradwee"},"content":"    \u003c/method\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"conradwee"},"content":"  \u003c/configuration\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"conradwee"},"content":"\u003c/component\u003e","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"conradwee":8,"gavienwz":2,"Uxinnn":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"    mainClassName \u003d \"seedu.traveller.Traveller\"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"    archiveBaseName \u003d \"traveller\"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Uxinnn":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"conradwee"},"content":"![](./profilePics/ConradWee.jpg) | Conrad Wee | [Github](https://github.com/conradwee) | [Portfolio](./team/conradwee.md)","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"jach23"},"content":"![](./profilePics/FoongXinYu.jpg) | Foong Xin Yu | [Github](https://github.com/Uxinnn) | [Portfolio](./team/Uxinnn.md)","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jach23"},"content":"![](./profilePics/GavienPat.png) | Gavien Pat | [Github](https://github.com/gavienwz) | [Portfolio](./team/gavienwz.md)","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Cuiminjing"},"content":"![](./profilePics/minjing.jpg) | Cui Minjing | [Github](https://github.com/Cuiminjing) | [Portfolio](./team/Cuiminjing.md)","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"jach23"},"content":"![](./profilePics/jared.jpg) | Jared Cheang | [Github](https://github.com/jach23) | [Portfolio](./team/jach23.md)","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"conradwee":1,"jach23":3,"-":4,"Cuiminjing":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"# Traveller Developer Guide","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"![Traveller](./documentationPics/logo.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"## Preface","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"Traveller is a travel planner app that is designed to help holidaymakers like you optimise your trips!","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"It is created for individuals who prefer to use a Command Line Interface (CLI) over a Graphical User Interface (GUI),","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"while still retaining the ease of use of a GUI.","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"Use Traveller so that you can plan your trips with ease and focus on what matters most: Fun!","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"### Purpose of developer guide","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"This developer guide is for developers of Traveller and documents the structure and implementation of Traveller.","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"Developers are recommended to read this guide to understand the code architecture of Traveller before contributing to","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"Use the Table of Contents below to easily navigate to the section you desire.","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"### Legend","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"|Icon|Explanation|","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"|:---:|:---:|","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"|![](documentationPics/info.png)|Shows how this developer guide is formatted.|","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"|![](documentationPics/tip.png)|Shows useful tips when developing Traveller.|","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"|![](documentationPics/warning.png)|Shows potential problems when developing Traveller.|","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"---","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"## Table of Contents","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"* [1. Design \u0026 Implementation](#1-design--implementation)","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"  * [1.1. World Map](#11-world-map)","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"    * [1.1.1. `WorldMap` class](#111-worldmap-class)","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"    * [1.1.2. `GraphList` class](#112-graphlist-class)","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"    * [1.1.3. `Logic` class](#113-logic-class)","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"gavienwz"},"content":"    * [1.1.4. `DataLoader` class](#114-dataloader-class)","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"  * [1.2. Main Traveller](#12-main-traveller)","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"    * [1.2.1. `Traveller` class](#121-traveller-class)","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"    * [1.2.2. `Parser` class](#122-parser-class)","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"    * [1.2.3. `TripsList` class](#123-tripslist-class)","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"    * [1.2.4. `Ui` class](#124-ui-class)","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"gavienwz"},"content":"    * [1.2.5. `SaveLoader` class](#125-saveloader-class)","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"* [2. Product Scope](#2-product-scope)","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"  * [2.1. Target User Profile](#21-target-user-profile)","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"  * [2.2. Value Proposition](#22-value-proposition)","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"* [3. User Stories](#3-user-stories)","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"* [4. Non-Functional Requirements](#4-non-functional-requirements)","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"* [5. Glossary](#5-glossary)","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"* [6. Instructions for Manual Testing](#6-instructions-for-manual-testing)","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"## 1. Design \u0026 Implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"Traveller\u0027s design can be broken down into 2 main components: The World Map, and the Main Traveller code, ","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"as illustrated in figure 1 below.","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"The World Map is the part of the application that handles the calculation of the shortest time/cost ","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"(collectively referred to as distance in this guide) between countries, ","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"while the Main Traveller code handles the interaction with users, and the general logic of the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"![](documentationPics/designOverview.jpeg)","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003eFigure 1: Design Overview of Traveller\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"### 1.1. World Map","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"The World Map is 1 of the 2 major components of the Traveller project.","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"It implements a key feature of the application, which is to find the shortest travel path from 1 country to another.","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"As shown in figure 2, the World Map consists of 4 sub-components, the [`WorldMap`](#111-worldmap-class) class, ","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"gavienwz"},"content":"[`GraphList`](#112-graphlist-class) class, [`Logic`](#113-logic-class) class, and [`DataLoader`](#114-dataloader-class) class.","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"Additionally, the World Map uses 2 other classes to pass data around, the `Country` class, and the `Distance` class.","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"![](documentationPics/worldMapClassDiagram.jpeg)","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003eFigure 2: Design of the World Map\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"Uxinnn"},"content":"These 4 sub-components are implemented to maintain an internal graph of countries and distances. Dijkstra\u0027s algorithm ","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"is then performed on this graph to obtain the shortest travel path from 1 country to another.","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"#### 1.1.1. WorldMap class","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"jach23"},"content":"The `WorldMap` class is the main overarching class for the World Map component of the project. ","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"jach23"},"content":"It instantiates all its subsequent classes, `GraphList`, `DataLoader`, and `Logic`. ","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"Uxinnn"},"content":"Its main functionalities are in the `calcMinDistance` function which calculates the least distance to get from a given source ","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"to destination country. Similarly, the `calcMinCost` function calculates the least cost. ","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"Uxinnn"},"content":"Then, the function then reads either *time.txt* or *cost.txt* and runs `computeSource` and `getToGoal`, ","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"Uxinnn"},"content":"both from the `Logic` class. Also, another key functionality is the `editMap` which is linked to the `Parser` class, ","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"Uxinnn"},"content":"which enables the user to edit a distance from a given source to destination country.","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"jach23"},"content":"As a side note, `initWorldMap` initialises the main World Map which is based on distances, ","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"jach23"},"content":"while `altWorldMap` boots up a side, read-only World Map based on the flight cost paths.     ","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"Uxinnn"},"content":"`WorldMap` also throws various exceptions to ensure the distances and costs are updated in the correct format. ","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"Uxinnn"},"content":"For example, `distanceNonZero` and `distanceNonString` ensure the user\u0027s input is non-zero and is a number-type.","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"jach23"},"content":"{TODO: Add diagram}","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"Uxinnn"},"content":"#### 1.1.2. GraphList class","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"Uxinnn"},"content":"The `GraphList` class is based off the `WorldMap` overarching class and translate it into a more simplistic graph ","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"Uxinnn"},"content":"format, namely referring to its components as vertices and edges.","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"jach23"},"content":"It instantiates subsequent classes like `vertexArray` of Country type and `nameArray` of String type.","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"Uxinnn"},"content":"Its main functionalities are `addVertex` and `findVertex` which are then accessed by classes like `DataLoader` and ","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"Uxinnn"},"content":"`WorldMap`. ","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"Uxinnn"},"content":"Also, functions like `createEdge` link it to the Country class and calls the subsequent function `addNeighbour`, ","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"Uxinnn"},"content":"creating a bidirectional edge for both countries of interest. ","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"Uxinnn"},"content":"Similarly, the `modifyEdge` function calls the subsequent function `updateNeighbour` from the Country class. ","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"Uxinnn"},"content":"The list of distances are all stored in a matrix which is called by `getEdgeMatrix` by the `WorldMap` class.","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"jach23"},"content":"{TODO: Add diagram}","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"Uxinnn"},"content":"#### 1.1.3. Logic class","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"Uxinnn"},"content":"The `Logic` class is the main class driving the logic from the overarching `WorldMap` class. ","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"Uxinnn"},"content":"Namely, it runs Dijkstra\u0027s algorithm on the given WorldMap.","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"Uxinnn"},"content":"This is done through both of its functionalities which need to be called together. ","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"Uxinnn"},"content":"`computeSource` runs Dijkstra\u0027s algorithm from the given starting country and ","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"Uxinnn"},"content":"expands outwards to all other countries, yielding the least distances to all other countries as well. ","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"Uxinnn"},"content":"Then, `getToGoal` backtracks from the target country to trace the shortest path to the source country, ","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"Uxinnn"},"content":"in reverse order. Note that `getToGoal` returns an object of `MinCalcResult` type.","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"gavienwz"},"content":"#### 1.1.4. DataLoader class","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"Uxinnn"},"content":"The `DataLoader` class reads in data from *flightData/time.txt* or *flightData/cost.txt* to create the vertexes ","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"Uxinnn"},"content":"and edges in `GraphList`.","lastModifiedDate":"2021-11-06"},{"lineNumber":120,"author":{"gitId":"gavienwz"},"content":"Its main function is the `readData` or `readAltData` function which passes the relevant lines in ","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"gavienwz"},"content":"*time.txt* or *cost.txt* to either `loadCountries` or `loadDistances` to create vertexes or edges respectively.","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"Uxinnn"},"content":"While `DataLoader` is hardcoded to accept only 5 countries at its implementation, it is possible to increase this ","lastModifiedDate":"2021-11-06"},{"lineNumber":124,"author":{"gitId":"gavienwz"},"content":"number by changing the variable `numberOfCountries` in the class. Reading on, `numberOfCountries` might be used as a","lastModifiedDate":"2021-11-06"},{"lineNumber":125,"author":{"gitId":"gavienwz"},"content":"variable number.","lastModifiedDate":"2021-11-06"},{"lineNumber":126,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"gavienwz"},"content":"![](documentationPics/dataSequenceDiagram.jpg)","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"Uxinnn"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003eFigure 3: DataLoader Sequence Diagram\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"Uxinnn"},"content":"The first line of *time.txt* or *cost.txt* contains the 5 country codes, which are read added as vertexes.","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"Uxinnn"},"content":"The remaining lines contain the country to country distances, which are in a lower triangular matrix, and are added as ","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"gavienwz"},"content":"edges between the vertexes. The total number of lines in each text file is the same number as `numberOfCountries(5)`.","lastModifiedDate":"2021-11-06"},{"lineNumber":133,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"gavienwz"},"content":"Each loop shown in the sequence diagram helps to facilitate the reading of the data ","lastModifiedDate":"2021-11-06"},{"lineNumber":135,"author":{"gitId":"gavienwz"},"content":"according to how it is written in *time.txt* and *cost.txt*. ","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"gavienwz"},"content":"1. The main loop ensures that only `numberOfCountries(5)` lines of text is read. ","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"gavienwz"},"content":"2. The loop in `loadCountries()` ensures that only `numberOfCountries(5)` vertexes is added to the ","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"gavienwz"},"content":"`graphList`. ","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"gavienwz"},"content":"3. The loop in `loadDistances()` ensures that data is read as a lower triangular matrix of length ","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"gavienwz"},"content":"`numberOfCountries - 1 (4)`, to ensure that duplicate edges are not added.","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"gavienwz"},"content":"\u003e![](documentationPics/info.png) Trivial points are omitted from the sequence diagram to keep it more concise.","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"gavienwz"},"content":"\u003e For example, getting the reference of `sourceCountry:Country` and `destinationCountry:Country` ","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"gavienwz"},"content":"\u003e from the `countryArray`. As well as the parsing of each newline read from `scanner` to ensure that the data is read","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"gavienwz"},"content":"\u003e properly. To read more about how data in *time.txt* and *cost.txt* is saved and thus parsed/read, ","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"gavienwz"},"content":"\u003e [click here](#61-data-file).","lastModifiedDate":"2021-11-06"},{"lineNumber":148,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"Uxinnn"},"content":"\u003e![](documentationPics/tip.png) As *time.txt* and *cost.txt* are both read in a specific way, ","lastModifiedDate":"2021-11-06"},{"lineNumber":150,"author":{"gitId":"Uxinnn"},"content":"\u003e there are certain things to take note when modifying it.","lastModifiedDate":"2021-11-06"},{"lineNumber":151,"author":{"gitId":"gavienwz"},"content":"\u003e1. Country codes must only be 3 letters.","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"Uxinnn"},"content":"\u003e2. Distances must be numbers as it will be parsed into a double.","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"gavienwz"},"content":"\u003e3. **numberOfCountries** should be changed to the number of countries on the first line.","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"gavienwz"},"content":"\u003e4. Total number of lines in both text files must be **numberOfCountries**.","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"gavienwz"},"content":"\u003e ","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/warning.png) Invalid information that cannot be read by DataLoader will result in the ","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"Uxinnn"},"content":"\u003e disregard of the entire text file.","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"gavienwz"},"content":"\u003e Please follow the format as stated above for [manual testing](#6-instructions-for-manual-testing).","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"Uxinnn"},"content":"### 1.2. Main Traveller","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"Uxinnn"},"content":"The Main Traveller is the other of the 2 major components of the Traveller project.","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"Uxinnn"},"content":"It implements the essential CRUD features of the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"Uxinnn"},"content":"As shown in Figure 3 below, the Main Traveller consists of 5 sub-components: the Traveller class, Parser class, ","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"Uxinnn"},"content":"TripsList class, Ui class, and Storage class.","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"Uxinnn"},"content":"Additionally, the `Command` class is used to execute various actions in the various sub-components.","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"Uxinnn"},"content":"![](documentationPics/mainTravellerDesign.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"Uxinnn"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003eFigure 4: Design of the Main Traveller\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"Uxinnn"},"content":"Details of each of the sub-components can be found in the subsequent sub-sections.","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"Uxinnn"},"content":"#### 1.2.1. Traveller class","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"Uxinnn"},"content":"The main class of the whole project. The 2 major components of Traveller ([World Map](#11-world-map) and ","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"Uxinnn"},"content":"[Main Traveller](#12-main-traveller)) is initialized here. ","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"Uxinnn"},"content":"Sub-components of [Main Traveller](#12-main-traveller) is also initialized here.","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"Uxinnn"},"content":"The class has a run function which is called to run the whole application. The steps taken in each iteration of the run","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"Uxinnn"},"content":"function is detailed below.","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"Uxinnn"},"content":"1. User input is read by the `Ui`.","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"Uxinnn"},"content":"2. User input is passed to the `Parser` for processing to output an executable `Command`.","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"Uxinnn"},"content":"3. `Command` is executed.","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"Uxinnn"},"content":"4. Any errors associated with [Main Traveller](#12-main-traveller) will be caught here.","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"Uxinnn"},"content":"5. Repeat Steps 1 to 4.","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"Uxinnn"},"content":"#### 1.2.2. Parser class","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"Uxinnn"},"content":"The `Parser` class processes raw user input to return a `Command` object, which can be executed to execute the action","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"Uxinnn"},"content":"specified by the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"Uxinnn"},"content":"It\u0027s main function is the `parse` function, which takes in a user input string obtained by a `Ui` object and output the ","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"Uxinnn"},"content":"`Command` object. Figure 4 below illustrates the code of the `parse` function via a sequence diagram.","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"Uxinnn"},"content":"![](documentationPics/parserSequenceDiagram.jpeg)","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"Uxinnn"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003eFigure 5: Parser Sequence Diagram\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"Uxinnn"},"content":"The steps illustrated by Figure 4 is summarised below.","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"Uxinnn"},"content":"1. The `parse` command is called once per iteration of the main `run` loop in `Traveller`.","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"Uxinnn"},"content":"2. Based on the user input, `parse` calls a private `parseAbcCommand`, which parses the user input for each available","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"Uxinnn"},"content":"command.","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"Uxinnn"},"content":"3. `parseAbcCommand` returns a `Command` object, which is returned by `parse`.","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"Uxinnn"},"content":"4. This `Command` object can then be executed to perform actions on the state of Traveller, such as creating new trips, ","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"Uxinnn"},"content":"viewing trips, or deleting trips.","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"Uxinnn"},"content":"5. If there is an error encountered by `parse` when processing user input, a corresponding `TravellerException` will be","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"Uxinnn"},"content":"thrown.","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"Uxinnn"},"content":"#### 1.2.3. TripsList class","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"Cuiminjing"},"content":"The `TripsList` class is the main class to store the data.","lastModifiedDate":"2021-11-06"},{"lineNumber":209,"author":{"gitId":"Cuiminjing"},"content":"This include:","lastModifiedDate":"2021-11-06"},{"lineNumber":210,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":211,"author":{"gitId":"Cuiminjing"},"content":"1.`Trip`.","lastModifiedDate":"2021-11-06"},{"lineNumber":212,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":213,"author":{"gitId":"Cuiminjing"},"content":"2.`Day`.","lastModifiedDate":"2021-11-06"},{"lineNumber":214,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":215,"author":{"gitId":"Cuiminjing"},"content":"3.`Item`.","lastModifiedDate":"2021-11-06"},{"lineNumber":216,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":217,"author":{"gitId":"Cuiminjing"},"content":"It contains functions that can help control the date inside the list. ","lastModifiedDate":"2021-11-06"},{"lineNumber":218,"author":{"gitId":"Cuiminjing"},"content":"`addTrip` function will create a new space and store the data in it, while the `deleteTrip` function will delete and ","lastModifiedDate":"2021-11-06"},{"lineNumber":219,"author":{"gitId":"Cuiminjing"},"content":"clear the data from the list. `getTrip` and `getTripIndex` can return the specific `Trip` data by giving the name ","lastModifiedDate":"2021-11-06"},{"lineNumber":220,"author":{"gitId":"Cuiminjing"},"content":"or the index of the Also, the `getSize` functions will return the size of the `TripsList`. ","lastModifiedDate":"2021-11-06"},{"lineNumber":221,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"Uxinnn"},"content":"{TODO: Add details}","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"Uxinnn"},"content":"#### 1.2.4. Ui class","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"Uxinnn"},"content":"The `Ui` class processes the interactions with users. The functions in `Ui` class will be called in `command` and then ","lastModifiedDate":"2021-11-06"},{"lineNumber":226,"author":{"gitId":"Uxinnn"},"content":"print messages in the interface.","lastModifiedDate":"2021-11-06"},{"lineNumber":227,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"Cuiminjing"},"content":"{TODO: Add graft}","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"Cuiminjing"},"content":"The steps illustated by Figure 6 is summarised now.","lastModifiedDate":"2021-10-29"},{"lineNumber":230,"author":{"gitId":"Cuiminjing"},"content":"1. Run the `printWelcome` to greet the users.","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"Cuiminjing"},"content":"2. Read user input and pass it to the `Parser`","lastModifiedDate":"2021-10-29"},{"lineNumber":232,"author":{"gitId":"Cuiminjing"},"content":"3. Functions in `Ui` will be repeatedly called by `Command` class.","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"gavienwz"},"content":"#### 1.2.5. SaveLoader class","lastModifiedDate":"2021-10-25"},{"lineNumber":235,"author":{"gitId":"Uxinnn"},"content":"The `SaveLoader` class handles the reading and writing of the save file which stores the existing trips when Traveller ","lastModifiedDate":"2021-11-06"},{"lineNumber":236,"author":{"gitId":"Uxinnn"},"content":"is exited.","lastModifiedDate":"2021-11-06"},{"lineNumber":237,"author":{"gitId":"gavienwz"},"content":"It contains two main functions `readSave()` and `writeSave()`. While `readSave()` is called at the start of Traveller,","lastModifiedDate":"2021-11-06"},{"lineNumber":238,"author":{"gitId":"gavienwz"},"content":"`writeSave()` is called whenever a command from user is received and executed, and when Traveller is exited.","lastModifiedDate":"2021-11-06"},{"lineNumber":239,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":240,"author":{"gitId":"gavienwz"},"content":"\u003e![](documentationPics/info.png) The function `writeSave()` is called whenever is command from user is received and","lastModifiedDate":"2021-11-06"},{"lineNumber":241,"author":{"gitId":"gavienwz"},"content":"\u003e executed to ensure that even if Traveller crashes due to unforeseen circumstances, the save data will always be up to","lastModifiedDate":"2021-11-06"},{"lineNumber":242,"author":{"gitId":"gavienwz"},"content":"\u003e  date. (Suggestion from [Issue #139](https://github.com/AY2122S1-CS2113T-W13-1/tp/issues/139).)","lastModifiedDate":"2021-11-06"},{"lineNumber":243,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"Uxinnn"},"content":"The save file in *save/save.txt* stores the minimum number of commands to recreate the same trip list that was ","lastModifiedDate":"2021-11-06"},{"lineNumber":245,"author":{"gitId":"Uxinnn"},"content":"saved previously.","lastModifiedDate":"2021-11-06"},{"lineNumber":246,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":247,"author":{"gitId":"Uxinnn"},"content":"Loading the save file is similar to the main `run` function of Traveller, as the function reads each line of ","lastModifiedDate":"2021-11-06"},{"lineNumber":248,"author":{"gitId":"gavienwz"},"content":"*save.txt* and executes the corresponding command.","lastModifiedDate":"2021-11-06"},{"lineNumber":249,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"gavienwz"},"content":"Following the loading of the save file, writing of the save file is handled as shown below.","lastModifiedDate":"2021-11-06"},{"lineNumber":251,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"gavienwz"},"content":"![](documentationPics/saveSequenceDiagram.jpg)","lastModifiedDate":"2021-11-06"},{"lineNumber":253,"author":{"gitId":"Uxinnn"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003eFigure 6: Save Sequence Diagram\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"gavienwz"},"content":"The functions `getSaveTrip()`, `getSaveDay()` and `getSaveItem()` return `strings` that corresponds to the ","lastModifiedDate":"2021-11-06"},{"lineNumber":256,"author":{"gitId":"gavienwz"},"content":"command that will be executed in order to add a trip, day or item to the TripList, DaysList or ItemsList respectively.","lastModifiedDate":"2021-11-06"},{"lineNumber":257,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":258,"author":{"gitId":"gavienwz"},"content":"\u003e![](documentationPics/info.png) Trivial points are omitted from the sequence diagram to keep it more concise.","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"gavienwz"},"content":"\u003e To read up more on what the `SaveLoader` class writes, take a look at the `getSaveX` functions from the `Trip` class","lastModifiedDate":"2021-10-25"},{"lineNumber":260,"author":{"gitId":"gavienwz"},"content":"\u003e as shown in the diagram.","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"gavienwz"},"content":"\u003e ","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/warning.png) Invalid commands that are in *save.txt* will be disregarded and not be ","lastModifiedDate":"2021-11-06"},{"lineNumber":263,"author":{"gitId":"Uxinnn"},"content":"\u003e read/executed.","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"Uxinnn"},"content":"\u003e This may result in other following commands to become invalid as well. (Eg. A previous existing trip not being ","lastModifiedDate":"2021-11-06"},{"lineNumber":265,"author":{"gitId":"Uxinnn"},"content":"\u003e created due to an edited save.","lastModifiedDate":"2021-11-06"},{"lineNumber":266,"author":{"gitId":"Uxinnn"},"content":"\u003e Resulting in days/items belonging to that trip becoming invalid.) As *SaveLoader* writes *save.txt* based on the ","lastModifiedDate":"2021-11-06"},{"lineNumber":267,"author":{"gitId":"Uxinnn"},"content":"\u003e existing trips when Traveller is closed, invalid commands in *save.txt* will be deleted.","lastModifiedDate":"2021-11-06"},{"lineNumber":268,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":269,"author":{"gitId":"Uxinnn"},"content":"## 2. Product Scope","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"Uxinnn"},"content":"### 2.1. Target User Profile","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"Cuiminjing"},"content":"* has a need to plan a trip","lastModifiedDate":"2021-10-29"},{"lineNumber":272,"author":{"gitId":"Cuiminjing"},"content":"* want to optimise a flight","lastModifiedDate":"2021-10-29"},{"lineNumber":273,"author":{"gitId":"Cuiminjing"},"content":"* would like to design detailed travel plans","lastModifiedDate":"2021-10-29"},{"lineNumber":274,"author":{"gitId":"gavienwz"},"content":"* prefers desktop and CLI over apps and GUI","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"Cuiminjing"},"content":"* is familiar with command line interface","lastModifiedDate":"2021-10-29"},{"lineNumber":276,"author":{"gitId":"gavienwz"},"content":"* can type fast","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":278,"author":{"gitId":"Uxinnn"},"content":"### 2.2. Value Proposition","lastModifiedDate":"2021-10-22"},{"lineNumber":279,"author":{"gitId":"gavienwz"},"content":"* plans a trip where a direct flight is not available, giving the shortest route based on time","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"gavienwz"},"content":"* manage trips and itinerary faster than a GUI based app","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":282,"author":{"gitId":"Uxinnn"},"content":"## 3. User Stories","lastModifiedDate":"2021-10-22"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":284,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":285,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":286,"author":{"gitId":"Uxinnn"},"content":"|v1.0|user|add a trip|","lastModifiedDate":"2021-10-22"},{"lineNumber":287,"author":{"gitId":"gavienwz"},"content":"|v1.0|user|delete a trip|remove a trip that is no longer relevant|","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"gavienwz"},"content":"|v1.0|user|view all trips and details|manage all my trips and details|","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"gavienwz"},"content":"|v1.0|user|edit a trip|remove outdated details and add new details at the same time|","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"gavienwz"},"content":"|v1.0|frequent traveller|create multiple trips and itineraries|plan multiple trips at once|","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"gavienwz"},"content":"|v2.0|new user|have a help function|know at a glance all the functions and how to use them|","lastModifiedDate":"2021-10-21"},{"lineNumber":292,"author":{"gitId":"gavienwz"},"content":"|v2.0|trip planner|add items in an itinerary according to time|plan a detailed trip|","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"gavienwz"},"content":"|v2.0|trip planner|delete items in an itinerary|remove things that I won\u0027t be doing during the trip|","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"gavienwz"},"content":"|v2.0|detailed planner|edit items in an itinerary|make quick changes to my trip itinerary|","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"gavienwz"},"content":"|v2.0|user|change the criteria of shortest path|plan a trip according to time, distance, or price|","lastModifiedDate":"2021-10-21"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":297,"author":{"gitId":"Uxinnn"},"content":"## 4. Non-Functional Requirements","lastModifiedDate":"2021-10-22"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":299,"author":{"gitId":"gavienwz"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` installed.","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"gavienwz"},"content":"2. Should be able to hold up to 100 trips without any noticeable lag.","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"gavienwz"},"content":"_{More to be added}_","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":304,"author":{"gitId":"Uxinnn"},"content":"## 5. Glossary","lastModifiedDate":"2021-10-22"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":306,"author":{"gitId":"gavienwz"},"content":"* **CLI** - Command Line Interface","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"gavienwz"},"content":"* **GUI** - Graphical User Interface","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"gavienwz"},"content":"* **Mainstream OS** - Windows, Linux, Unix, macOS","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"Uxinnn"},"content":"* **CRUD** - Create, Read, Update, Delete","lastModifiedDate":"2021-10-22"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":311,"author":{"gitId":"Uxinnn"},"content":"## 6. Instructions for manual testing","lastModifiedDate":"2021-10-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":313,"author":{"gitId":"gavienwz"},"content":"### 6.1 Data file","lastModifiedDate":"2021-10-25"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":315,"author":{"gitId":"Uxinnn"},"content":"The data file *flightData/time.txt* or *cost.txt* can be modified following the formatting stated [here](#114-dataloader-class).","lastModifiedDate":"2021-11-04"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":317,"author":{"gitId":"gavienwz"},"content":"To test out the effectiveness of the implemented algorithm, you can add 0 to the distance matrix to tell Traveller that","lastModifiedDate":"2021-10-25"},{"lineNumber":318,"author":{"gitId":"gavienwz"},"content":"there is no flight between the two countries (no edge between the vertexes).","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":320,"author":{"gitId":"gavienwz"},"content":"The lower triangular matrix is read as such.","lastModifiedDate":"2021-10-25"},{"lineNumber":321,"author":{"gitId":"gavienwz"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":322,"author":{"gitId":"gavienwz"},"content":"SIN|MLY|CHN|JPN|SKR","lastModifiedDate":"2021-10-25"},{"lineNumber":323,"author":{"gitId":"gavienwz"},"content":"1","lastModifiedDate":"2021-10-25"},{"lineNumber":324,"author":{"gitId":"gavienwz"},"content":"2|3","lastModifiedDate":"2021-10-25"},{"lineNumber":325,"author":{"gitId":"gavienwz"},"content":"4|5|6","lastModifiedDate":"2021-10-25"},{"lineNumber":326,"author":{"gitId":"gavienwz"},"content":"7|8|9|10","lastModifiedDate":"2021-10-25"},{"lineNumber":327,"author":{"gitId":"gavienwz"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":328,"author":{"gitId":"gavienwz"},"content":"Element11 (Row 1, Column 1) is the distance from SIN to MLY (and vice versa).","lastModifiedDate":"2021-10-25"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":330,"author":{"gitId":"gavienwz"},"content":"Element32 (Row 3, Column 2) is the distance from MLY to JPN (and vice versa).","lastModifiedDate":"2021-10-25"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":332,"author":{"gitId":"gavienwz"},"content":"### 6.2 Save file","lastModifiedDate":"2021-10-25"},{"lineNumber":333,"author":{"gitId":"gavienwz"},"content":"The save file *save/save.txt* can be modified following the formatting stated [here](#125-saveloader-class) and the corresponding command formats","lastModifiedDate":"2021-10-26"},{"lineNumber":334,"author":{"gitId":"gavienwz"},"content":"which can be found in our [UserGuide](https://ay2122s1-cs2113t-w13-1.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"gavienwz":92,"jach23":15,"Uxinnn":177,"-":26,"Cuiminjing":24}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"![Traveller](./documentationPics/logo.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"Traveller is a command line interface (CLI) application that is designed to help holiday-makers plan ","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"their overseas holiday trips with ease. ","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"As the countries start to adapt to the post-COVID situation, ","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"the demand for such an application will increase among people who prefer CLI applications, possibly ","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"due to a CLI application’s simplicity and speed of use.","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"Traveller has many functionalities, such as finding optimal flights to your desired destination, ","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"and creating multiple itineraries with an agenda for each day of your trip.","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Uxinnn":8,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"# Traveller User Guide","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"![Traveller](./documentationPics/logo.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"Thank you for choosing to use Traveller!","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"Traveller is a travel planner app that is designed to help holidaymakers like you plan your overseas trips with ease.","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"It is created for individuals who prefer to use a Command Line Interface (CLI) over a Graphical User Interface (GUI), ","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"while still retaining the ease of use of a GUI.","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"Use Traveller so that you can plan your trips with ease and focus on what matters most: Fun!","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"### What is a Command Line Interface (CLI)?","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"A CLI is a way of interacting with applications via lines of text, instead of the usual way of clicking on the application.","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"Each computer will have their own CLI, such as the Windows\u0027 Powershell and the macOS\u0027s Terminal.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"### What is this guide for?","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"This guide\u0027s purpose is to help users like you understand how to use the Traveller application to its fullest potential.","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"For users who can\u0027t wait to start using Traveller, see [here](#1-quick-start) for a quick guide on how to set it up.","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"gavienwz"},"content":"The [command summary](#5-command-summary) provides you with a summary of the various functionalities currently ","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"supported by Traveller too.","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"For users who are seeking to understand the full functionality of Traveller, details, along with tips and tricks, of ","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"each functionality are explained in the [features](#2-features) section.","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"### Legend","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"|Icon|Explanation|","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"|:---:|:---:|","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"|![](documentationPics/info.png)|Shows how this user guide is formatted.|","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"|![](documentationPics/tip.png)|Shows useful tips when using Traveller.|","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"|![](documentationPics/warning.png)|Shows potential problems when using Traveller.|","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"---","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"## Contents Table","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"* [1. Quick Start](#1-quick-start)","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"* [2. Features](#2-features)","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"  * [2.1. help](#21-getting-help-help)","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"  * [2.2. new](#22-creating-a-trip-new)","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"  * [2.3. add-day](#23-adding-a-day-to-trip-add-day)","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"  * [2.4. add-item](#24-adding-an-item-to-a-day-add-item)","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"  * [2.5. view](#25-viewing-trips-view)","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"  * [2.6. delete](#26-delete-a-trip-delete)","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"  * [2.7. delete-day](#27-deleting-a-day-from-a-trip-delete-day)","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"  * [2.8. delete-item](#28-deleting-an-item-from-a-day-delete-item)","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"  * [2.9. edit](#29-edit-a-trip-edit)","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"  * [2.10. edit-item](#210-edit-an-item-edit-item)","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"  * [2.11. search-item](#211-searching-for-an-item-search-item)","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"  * [2.12. shortest-time](#212-shortest-time-shortest-time)","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"  * [2.13. shortest-cost](#213-least-cost-shortest-cost)","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"conradwee"},"content":"  * [2.14. exit](#214-exiting-the-program-exit)","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"* [3. FAQ](#3-faq)","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"gavienwz"},"content":"* [4. Supported Countries Summary](#4-supported-countries-summary)","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"gavienwz"},"content":"* [5. Command Summary](#5-command-summary)","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"## 1. Quick Start","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"This section provides a guide on how to get Traveller up and running on your computer.","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"2. Download the latest version of `Traveller.zip` from [here](https://github.com/AY2122S1-CS2113T-W13-1/tp/releases).","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"Uxinnn"},"content":"3. Unzip the downloaded folder in an empty directory of your choice.","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"gavienwz"},"content":"4. Navigate to the directory containing `Traveller.jar` in your command prompt and run `java -jar Traveller.jar`.","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"gavienwz"},"content":"   You should see Traveller\u0027s welcome message as shown below.","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"gavienwz"},"content":"![Welcome](./documentationPics/welcome.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Uxinnn"},"content":"5. Enter a command.","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"gavienwz"},"content":"   Some of our basic commands are:","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"gavienwz"},"content":"   * `new FamilyTrip2021 /from SIN /to MLY` : Creates a new trip called `FamilyTrip2021` from Singapore (`SIN`) to Malaysia (`MLY`).","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"   * `view FamilyTrip2021` : Shows your existing trips and their details.","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"gavienwz"},"content":"   * `delete FamilyTrip2021` : Deletes the trip called `FamilyTrip2021`.","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"gavienwz"},"content":"   * `exit` : Exits the program.","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"Uxinnn"},"content":"## 2. Features","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"Uxinnn"},"content":"This section provides details for all commands that Traveller supports.","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"gavienwz"},"content":"For a quick summary of all commands, please click [here](#5-command-summary) instead.","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"gavienwz"},"content":"\u003e ![](documentationPics/info.png) As Traveller is a CLI based app, what and how you type your commands is *very important*.","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"gavienwz"},"content":"\u003e Each command has its specific format so that Traveller can understand what you want to do!","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"Uxinnn"},"content":"### 2.1. Getting help: `help`","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"Uxinnn"},"content":"The help command would return the basic commands that are supported by Traveller.","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"Uxinnn"},"content":"The purpose of the help command is to ensure that even if there is no internet connection, the user is able to utilise the CLI without having to refer to the user guide.","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"conradwee"},"content":"#### Format: `help`","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"Uxinnn"},"content":"### 2.2. Creating a trip: `new`","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"gavienwz"},"content":"Creates a new trip.","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"Uxinnn"},"content":"#### Format: `new TRIP_NAME /from SOURCE_COUNTRY /to DESTINATION_COUNTRY`","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"gavienwz"},"content":"   * The name of the trip must be one word. ","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"gavienwz"},"content":"   * Keywords `/from` and `/to` must be included before the START and END destinations respectively.","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"gavienwz"},"content":"   * `SOURCE_COUNTRY` and `DESTINATION_COUNTRY` destinations must be [supported countries codes](#4-supported-countries-summary).","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"Uxinnn"},"content":"#### Usage Example:","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"gavienwz"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"gavienwz"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"gavienwz"},"content":"$ new FamilyTrip2021 /from SIN /to MLY","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"gavienwz"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"gavienwz"},"content":"\tYou have just created a new trip called FamilyTrip2021.","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"gavienwz"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"gavienwz"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/info.png) A trip is a basic building block of Traveller. To start planning your trips, ","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"Uxinnn"},"content":"\u003e create a trip using this command first. Then, when planning your trip, all details will be tagged to this trip that ","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"Uxinnn"},"content":"\u003e you have created.","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"Uxinnn"},"content":"\u003e ","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/tip.png) If you have accidentally created unwanted trips, use the ","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"Uxinnn"},"content":"\u003e [delete](#26-delete-a-trip-delete) command to delete the unwanted trips.","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"Uxinnn"},"content":"\u003e ","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/tip.png) After creating a trip, you can [view](#25-viewing-trips-view) the trip to find ","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"Uxinnn"},"content":"\u003e the shortest flight path to get to your desired country (Yes, it is automated! :)).","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"Uxinnn"},"content":"\u003e ","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"gavienwz"},"content":"\u003e ![](documentationPics/warning.png) If you encounter an issue where either your Start or End destinations are not recognised by Traveller.","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"Uxinnn"},"content":"\u003e Take a look in *flightData/time.txt* or *flightData/cost.txt* to see how Traveller recognises them!","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":133,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":135,"author":{"gitId":"Uxinnn"},"content":"### 2.3. Adding a day to Trip: `add-day`","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"Uxinnn"},"content":"Your overseas trip may span multiple days.","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"gavienwz"},"content":"This command allows you to create any number of days in your trip.","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"Uxinnn"},"content":"#### Format: `add-day TRIP_NAME /day NUMBER_OF_DAYS`","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"Uxinnn"},"content":"#### Usage Example:","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"Uxinnn"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"Uxinnn"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"Uxinnn"},"content":"$ add-day FamilyTrip2021 /day 3","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"Uxinnn"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"Uxinnn"},"content":"\tAdded 3 days to trip FamilyTrip2021.","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"Uxinnn"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"Uxinnn"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/info.png) After creating a trip, what\u0027s next is to specify the number of days your trip will ","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"Uxinnn"},"content":"\u003e last. Use this command to do so.","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"Uxinnn"},"content":"\u003e ","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/tip.png) If you have accidentally created more days than you want, you can delete the days ","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"Uxinnn"},"content":"\u003e you have created at any time using the [delete-day](#27-deleting-a-day-from-a-trip-delete-day) command.","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"Uxinnn"},"content":"### 2.4. Adding an item to a Day: `add-item`","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"Uxinnn"},"content":"Use this command to add an item to a day of your trip. An item represents an activity that you will do in a day.","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"gavienwz"},"content":"#### Format: `add-item TRIP_NAME /day DAY_INDEX /time ITEM_TIME /name ITEM_NAME`","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"Uxinnn"},"content":"#### Usage Example:","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"Uxinnn"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"Uxinnn"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"jach23"},"content":"$ add-item trip1 /day 0 /time 1900 /name Check-in to HolidayInn","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"Uxinnn"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"Uxinnn"},"content":"\tAdded a new item to day 0 of trip FamilyTrip2021.","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"Uxinnn"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"Uxinnn"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/info.png) In each day of your trip, you will want to have multiple items planned out, ","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"Uxinnn"},"content":"\u003e such as visiting a museum or relaxing at the beach. Use this command to create these items in your trip. Items are","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"Uxinnn"},"content":"\u003e very flexible in what they can represent, so do use them to their fullest!","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"Uxinnn"},"content":"\u003e ","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/info.png) Days are 0-indexed based. That is, the first day of your trip is day 0.","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"Uxinnn"},"content":"\u003e ","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/tip.png) If you decided that you want to remove some items, simply use ","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"Uxinnn"},"content":"\u003e the [delete-item](#28-deleting-an-item-from-a-day-delete-item) command.","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"Uxinnn"},"content":"\u003e ","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/tip.png) If your item spans the whole day, just type in `All day` for the time field!","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"Uxinnn"},"content":"### 2.5. Viewing trips: `view`","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"Uxinnn"},"content":"Shows you details of your existing trips.","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"Uxinnn"},"content":"#### Format: `view TRIP_NAME`","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"Uxinnn"},"content":"#### Usage Example:","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"Uxinnn"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"Uxinnn"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"Uxinnn"},"content":"$ view FamilyTrip2021","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"Uxinnn"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"Uxinnn"},"content":"\tHere are all your trips: ","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"Uxinnn"},"content":"\t\tTripName: FamilyTrip2021","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"Uxinnn"},"content":"\t\t\t Origin: SIN","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"Uxinnn"},"content":"\t\t\t Destination: MLY","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"Uxinnn"},"content":"\t\t\t Path: [SIN, MLY]","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"Uxinnn"},"content":"\t\t\t Time: [1.0]","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"Uxinnn"},"content":"\t\t\t Days: ","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"Uxinnn"},"content":"\t\t\t\tDay 0: ","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"jach23"},"content":"\t\t\t\t\t0:\t1900\t\tCheck-in at HolidayInn","lastModifiedDate":"2021-11-06"},{"lineNumber":208,"author":{"gitId":"Uxinnn"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"Uxinnn"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/info.png) Viewing a trip shows you your trip\u0027s start country, destination country, ","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"Uxinnn"},"content":"\u003e the shortest flight path and its associated duration of flight, and your itinerary for the trip.","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"Uxinnn"},"content":"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/tip.png) To view all trips, simply enter `view all`.","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"Uxinnn"},"content":"### 2.6. Delete a trip: `delete`","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"gavienwz"},"content":"Deletes an existing trip from the trip list.","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"gavienwz"},"content":"#### Format: `delete TRIP_NAME`","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"gavienwz"},"content":"#### Usage Example:","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"Cuiminjing"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"Cuiminjing"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"Uxinnn"},"content":"$ delete FamilyTrip2021","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"Cuiminjing"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"Uxinnn"},"content":"\tYou have just deleted a trip called FamilyTrip2021.","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"Cuiminjing"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"Cuiminjing"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"Uxinnn"},"content":"### 2.7. Deleting a day from a trip: `delete-day`","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"Cuiminjing"},"content":"Deletes an existing day from a trip.","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"Cuiminjing"},"content":"#### Format: `delete-day TRIP_NAME /day DAY_INDEX`","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":238,"author":{"gitId":"Cuiminjing"},"content":"#### Usage Example:","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"Cuiminjing"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"Cuiminjing"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"Uxinnn"},"content":"$ delete-day FamilyTrip2021 /day 0","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"Cuiminjing"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"Uxinnn"},"content":"\tYou have just deleted day 0 of FamilyTrip2021.","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"Cuiminjing"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"Cuiminjing"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":246,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":248,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"Uxinnn"},"content":"### 2.8. Deleting an item from a day: `delete-item`","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"Cuiminjing"},"content":"Deletes an existing item from a trip.","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":252,"author":{"gitId":"Uxinnn"},"content":"#### Format: `delete-item TRIP_NAME /day DAY_INDEX /item ITEM_INDEX`","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":254,"author":{"gitId":"Cuiminjing"},"content":"#### Usage Example:","lastModifiedDate":"2021-10-23"},{"lineNumber":255,"author":{"gitId":"Cuiminjing"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":256,"author":{"gitId":"Cuiminjing"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"Uxinnn"},"content":"$ delete-item FamilyTrip2021 /day 1 /item 0","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"Cuiminjing"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":259,"author":{"gitId":"Uxinnn"},"content":"\tYou have just deleted item 0 of FamilyTrip2021 day 1","lastModifiedDate":"2021-11-04"},{"lineNumber":260,"author":{"gitId":"Cuiminjing"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":261,"author":{"gitId":"Cuiminjing"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":262,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"Uxinnn"},"content":"### 2.9 Edit a trip: `edit`","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"gavienwz"},"content":"Edits any main aspect about an existing trip.","lastModifiedDate":"2021-11-06"},{"lineNumber":267,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":268,"author":{"gitId":"gavienwz"},"content":"#### Format: `edit TRIP_NAME /name NEW_TRIP_NAME /from NEW_SOURCE_COUNTRY /to NEW_DESTINATION_COUNTRY`","lastModifiedDate":"2021-11-06"},{"lineNumber":269,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":270,"author":{"gitId":"gavienwz"},"content":"   * If you want to edit multiple aspects, the format order must be as shown above.","lastModifiedDate":"2021-11-06"},{"lineNumber":271,"author":{"gitId":"gavienwz"},"content":"   * If you only want to edit a trip\u0027s name : `edit TRIP_NAME /name NEW_TRIP_NAME`.","lastModifiedDate":"2021-11-06"},{"lineNumber":272,"author":{"gitId":"gavienwz"},"content":"   * If you only want to edit a trip\u0027s source country : `edit TRIP_NAME /from NEW_SOURCE_COUNTRY`.","lastModifiedDate":"2021-11-06"},{"lineNumber":273,"author":{"gitId":"gavienwz"},"content":"   * If you only want to edit a trip\u0027s destination country : `edit TRIP_NAME /from NEW_DESTINATON_COUNTRY`.","lastModifiedDate":"2021-11-06"},{"lineNumber":274,"author":{"gitId":"gavienwz"},"content":"   * If you want to edit a trip\u0027s name and destination country : ","lastModifiedDate":"2021-11-06"},{"lineNumber":275,"author":{"gitId":"gavienwz"},"content":"`edit TRIP_NAME /name NEW_TRIP_NAME /to NEW_SOURCE_COUNTRY`.","lastModifiedDate":"2021-11-06"},{"lineNumber":276,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"gavienwz"},"content":"#### Usage Example:","lastModifiedDate":"2021-10-21"},{"lineNumber":279,"author":{"gitId":"gavienwz"},"content":"   * `edit FamilyTrip2021 /from SKR /to JPN` edits an existing trip called `FamilyTrip2021` to be from South Korea to","lastModifiedDate":"2021-11-06"},{"lineNumber":280,"author":{"gitId":"gavienwz"},"content":"Japan.","lastModifiedDate":"2021-11-06"},{"lineNumber":281,"author":{"gitId":"gavienwz"},"content":"   * `edit FamilyTrip2021 /name SoloTrip2021` edits an existing trip called `FamilyTrip2021` to now be called ","lastModifiedDate":"2021-11-06"},{"lineNumber":282,"author":{"gitId":"gavienwz"},"content":"`SoloTrip2021`","lastModifiedDate":"2021-11-06"},{"lineNumber":283,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"gavienwz"},"content":"\u003e ![](documentationPics/tip.png) Edit only allows you to change the name, to and from of a trip.","lastModifiedDate":"2021-11-06"},{"lineNumber":285,"author":{"gitId":"gavienwz"},"content":"\u003e To change your trip itinerary use [edit-item](#210-edit-an-item-edit-item) instead!","lastModifiedDate":"2021-10-23"},{"lineNumber":286,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":287,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":288,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":289,"author":{"gitId":"Uxinnn"},"content":"### 2.10. Edit an item: `edit-item`","lastModifiedDate":"2021-10-23"},{"lineNumber":290,"author":{"gitId":"jach23"},"content":"Edits and updates existing item from a trip and updates it to a new corresponding item.","lastModifiedDate":"2021-10-23"},{"lineNumber":291,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":292,"author":{"gitId":"jach23"},"content":"#### Format: `edit-item TRIP_NAME /day DAY_NUMBER /index ITEM_INDEX /time NEW_TIME /name NEW_NAME`","lastModifiedDate":"2021-11-06"},{"lineNumber":293,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":294,"author":{"gitId":"jach23"},"content":"#### Usage Example:","lastModifiedDate":"2021-10-23"},{"lineNumber":295,"author":{"gitId":"jach23"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":296,"author":{"gitId":"jach23"},"content":"_________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"jach23"},"content":"$ edit-item trip1 /day 1 /index 1 /time 0900 /name later breakfast","lastModifiedDate":"2021-11-06"},{"lineNumber":298,"author":{"gitId":"jach23"},"content":"_________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":299,"author":{"gitId":"jach23"},"content":"\tYou have just edited item 1 on day 1 of trip1 to later breakfast at 0900","lastModifiedDate":"2021-11-06"},{"lineNumber":300,"author":{"gitId":"jach23"},"content":"_________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":301,"author":{"gitId":"jach23"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":302,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":303,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":304,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":305,"author":{"gitId":"Uxinnn"},"content":"### 2.11. Searching for an item: `search-item`","lastModifiedDate":"2021-10-23"},{"lineNumber":306,"author":{"gitId":"jach23"},"content":"Searches for an item keyword from a trip and returns the resulting matching items.","lastModifiedDate":"2021-10-23"},{"lineNumber":307,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":308,"author":{"gitId":"Uxinnn"},"content":"#### Format: `search-item TRIP_NAME /day DAY_INDEX /key KEYWORD`","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":310,"author":{"gitId":"Uxinnn"},"content":"\u003e ![](documentationPics/info.png) KEYWORD must be one word and not have any white spaces before or after.","lastModifiedDate":"2021-11-04"},{"lineNumber":311,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":312,"author":{"gitId":"jach23"},"content":"#### Usage Example:","lastModifiedDate":"2021-10-23"},{"lineNumber":313,"author":{"gitId":"jach23"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":314,"author":{"gitId":"jach23"},"content":"_________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"Uxinnn"},"content":"$ search-item FamilyTrip2021 /day 1 /key mealtime","lastModifiedDate":"2021-11-04"},{"lineNumber":316,"author":{"gitId":"jach23"},"content":"_________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":317,"author":{"gitId":"Uxinnn"},"content":"\tYou have just search item keyword n on day 1 in trip called FamilyTrip2021","lastModifiedDate":"2021-11-04"},{"lineNumber":318,"author":{"gitId":"jach23"},"content":"\t","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"jach23"},"content":"\tResults: ","lastModifiedDate":"2021-10-25"},{"lineNumber":320,"author":{"gitId":"jach23"},"content":"\t1. 1400\t\tlunch","lastModifiedDate":"2021-11-06"},{"lineNumber":321,"author":{"gitId":"jach23"},"content":"\t2. 1700\t\tdinner","lastModifiedDate":"2021-11-06"},{"lineNumber":322,"author":{"gitId":"jach23"},"content":"_________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":323,"author":{"gitId":"jach23"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":324,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":325,"author":{"gitId":"Uxinnn"},"content":"### 2.12. Shortest time: `shortest-time`","lastModifiedDate":"2021-11-04"},{"lineNumber":326,"author":{"gitId":"Uxinnn"},"content":"Returns the shortest flight time from the source to destination country.","lastModifiedDate":"2021-11-04"},{"lineNumber":327,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":328,"author":{"gitId":"Uxinnn"},"content":"#### Format: `shortest-time /from SOURCE_COUNTRY /to DESTINATION_COUNTRY`","lastModifiedDate":"2021-11-04"},{"lineNumber":329,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":330,"author":{"gitId":"jach23"},"content":"#### Usage Example:","lastModifiedDate":"2021-10-23"},{"lineNumber":331,"author":{"gitId":"jach23"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":332,"author":{"gitId":"jach23"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":333,"author":{"gitId":"Uxinnn"},"content":"$ shortest-time /from SIN /to JPN","lastModifiedDate":"2021-11-04"},{"lineNumber":334,"author":{"gitId":"jach23"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":335,"author":{"gitId":"Uxinnn"},"content":"\tThe shortest time from SIN to JPN is 6.0.","lastModifiedDate":"2021-11-04"},{"lineNumber":336,"author":{"gitId":"Uxinnn"},"content":"\tTime breakdown: ","lastModifiedDate":"2021-11-04"},{"lineNumber":337,"author":{"gitId":"jach23"},"content":"\t1.0","lastModifiedDate":"2021-10-26"},{"lineNumber":338,"author":{"gitId":"jach23"},"content":"\t5.0","lastModifiedDate":"2021-10-26"},{"lineNumber":339,"author":{"gitId":"jach23"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-23"},{"lineNumber":340,"author":{"gitId":"jach23"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":341,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":342,"author":{"gitId":"jach23"},"content":"### 2.13. Least cost: `shortest-cost`","lastModifiedDate":"2021-10-25"},{"lineNumber":343,"author":{"gitId":"jach23"},"content":"Returns the least expensive flight path from the source to destination country.","lastModifiedDate":"2021-10-25"},{"lineNumber":344,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":345,"author":{"gitId":"jach23"},"content":"#### Format: `shortest-cost /from SOURCE_COUNTRY /to DESTINATION_COUNTRY`","lastModifiedDate":"2021-10-25"},{"lineNumber":346,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":347,"author":{"gitId":"jach23"},"content":"#### Usage Example:","lastModifiedDate":"2021-10-25"},{"lineNumber":348,"author":{"gitId":"jach23"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":349,"author":{"gitId":"jach23"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":350,"author":{"gitId":"jach23"},"content":"$ shortest-cost /from SIN /to JPN","lastModifiedDate":"2021-10-25"},{"lineNumber":351,"author":{"gitId":"jach23"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":352,"author":{"gitId":"jach23"},"content":"\tThe least cost from SIN to JPN is 550.0.","lastModifiedDate":"2021-10-25"},{"lineNumber":353,"author":{"gitId":"jach23"},"content":"\tCost breakdown: ","lastModifiedDate":"2021-10-26"},{"lineNumber":354,"author":{"gitId":"jach23"},"content":"\t150.0","lastModifiedDate":"2021-10-26"},{"lineNumber":355,"author":{"gitId":"jach23"},"content":"\t400.0","lastModifiedDate":"2021-10-26"},{"lineNumber":356,"author":{"gitId":"jach23"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":357,"author":{"gitId":"jach23"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":358,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":359,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":360,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":361,"author":{"gitId":"conradwee"},"content":"### 2.14 Exiting the program: `exit`","lastModifiedDate":"2021-11-03"},{"lineNumber":362,"author":{"gitId":"gavienwz"},"content":"Exits the program.","lastModifiedDate":"2021-10-21"},{"lineNumber":363,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":364,"author":{"gitId":"gavienwz"},"content":"#### Format: `exit`","lastModifiedDate":"2021-10-21"},{"lineNumber":365,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":366,"author":{"gitId":"gavienwz"},"content":"\u003e ![](documentationPics/warning.png) While your Trips are saved periodically when using Traveller, exiting with the ","lastModifiedDate":"2021-11-06"},{"lineNumber":367,"author":{"gitId":"gavienwz"},"content":"\u003e `exit` command ensures that it is saved properly.","lastModifiedDate":"2021-11-06"},{"lineNumber":368,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":369,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":370,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":371,"author":{"gitId":"Uxinnn"},"content":"## 3. FAQ","lastModifiedDate":"2021-10-20"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":375,"author":{"gitId":"Uxinnn"},"content":"**A**: Transfer the entire folder containing the items listed below to the other computer. ","lastModifiedDate":"2021-10-23"},{"lineNumber":376,"author":{"gitId":"gavienwz"},"content":"   * *Traveller.jar*","lastModifiedDate":"2021-10-23"},{"lineNumber":377,"author":{"gitId":"Uxinnn"},"content":"   * *flightData* folder with *time.txt* and *cost.txt* inside","lastModifiedDate":"2021-11-04"},{"lineNumber":378,"author":{"gitId":"gavienwz"},"content":"   * *save* folder with *save.txt* inside","lastModifiedDate":"2021-10-23"},{"lineNumber":379,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":380,"author":{"gitId":"gavienwz"},"content":"**Q**: Why does it keep saying \"Country \u0027X\u0027 doesn\u0027t exist!\"?","lastModifiedDate":"2021-11-06"},{"lineNumber":381,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":382,"author":{"gitId":"gavienwz"},"content":"**A**: Traveller can only read specific words as countries.","lastModifiedDate":"2021-11-06"},{"lineNumber":383,"author":{"gitId":"gavienwz"},"content":"Please check in *flightData/time.txt* or *flightData/cost.txt* for all supported destinations and their specific ","lastModifiedDate":"2021-11-06"},{"lineNumber":384,"author":{"gitId":"gavienwz"},"content":"wordings.","lastModifiedDate":"2021-11-06"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":386,"author":{"gitId":"Uxinnn"},"content":"**Q**: What should I do when creating a new trip if my trip span multiple countries?","lastModifiedDate":"2021-11-04"},{"lineNumber":387,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":388,"author":{"gitId":"Uxinnn"},"content":"**A**: As of our current version v2.1, we unfortunately do not support multiple countries in 1 trip.","lastModifiedDate":"2021-11-04"},{"lineNumber":389,"author":{"gitId":"Uxinnn"},"content":"However, you can create multiple trips instead, 1 for each country that you plan to go to, and plan your trips from ","lastModifiedDate":"2021-11-04"},{"lineNumber":390,"author":{"gitId":"Uxinnn"},"content":"there.","lastModifiedDate":"2021-11-04"},{"lineNumber":391,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":392,"author":{"gitId":"Uxinnn"},"content":"**Q**: What unit is time measured in?","lastModifiedDate":"2021-11-04"},{"lineNumber":393,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":394,"author":{"gitId":"Uxinnn"},"content":"**A**: Time is given in hours.","lastModifiedDate":"2021-11-04"},{"lineNumber":395,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":396,"author":{"gitId":"Uxinnn"},"content":"**Q**: How do I interpret path and time shown in the `view` command?","lastModifiedDate":"2021-11-04"},{"lineNumber":397,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":398,"author":{"gitId":"Uxinnn"},"content":"**A**: Path can be read from left to right. For example, a path of `[SIN, MLY, SKR]` means that the shortest path from","lastModifiedDate":"2021-11-04"},{"lineNumber":399,"author":{"gitId":"Uxinnn"},"content":"Singapore (SIN) to South Korea (SKR) is to take a flight from Singapore to Malaysia (MLY), and then taking a flight from ","lastModifiedDate":"2021-11-04"},{"lineNumber":400,"author":{"gitId":"Uxinnn"},"content":"Malaysia to South Korea.","lastModifiedDate":"2021-11-04"},{"lineNumber":401,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":402,"author":{"gitId":"Uxinnn"},"content":"Similarly, time can be read from left to right. Continuing from the above example, if a time of `[1, 5]` is ","lastModifiedDate":"2021-11-04"},{"lineNumber":403,"author":{"gitId":"Uxinnn"},"content":"shown, this means that the flight from Singapore to Malaysia is 1 hour long, and the flight from Malaysia to South Korea","lastModifiedDate":"2021-11-04"},{"lineNumber":404,"author":{"gitId":"Uxinnn"},"content":"is 5 hours long.","lastModifiedDate":"2021-11-04"},{"lineNumber":405,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":406,"author":{"gitId":"Uxinnn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":407,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":408,"author":{"gitId":"gavienwz"},"content":"## 4. Supported Countries Summary","lastModifiedDate":"2021-11-06"},{"lineNumber":409,"author":{"gitId":"gavienwz"},"content":"As Traveller can only read certain country codes. Below is a short table of the basic","lastModifiedDate":"2021-11-06"},{"lineNumber":410,"author":{"gitId":"gavienwz"},"content":"supported countries (included in our [release](https://github.com/AY2122S1-CS2113T-W13-1/tp/releases)) ","lastModifiedDate":"2021-11-06"},{"lineNumber":411,"author":{"gitId":"gavienwz"},"content":"and their codes. Read our Developer Guide [here](https://ay2122s1-cs2113t-w13-1.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2021-11-06"},{"lineNumber":412,"author":{"gitId":"gavienwz"},"content":"if you would like to change the supported countries to those that you want.","lastModifiedDate":"2021-11-06"},{"lineNumber":413,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":414,"author":{"gitId":"gavienwz"},"content":"Country | Code","lastModifiedDate":"2021-11-06"},{"lineNumber":415,"author":{"gitId":"gavienwz"},"content":"--- | ---","lastModifiedDate":"2021-11-06"},{"lineNumber":416,"author":{"gitId":"gavienwz"},"content":"Singapore | **SIN**","lastModifiedDate":"2021-11-06"},{"lineNumber":417,"author":{"gitId":"gavienwz"},"content":"Malaysia | **MLY**","lastModifiedDate":"2021-11-06"},{"lineNumber":418,"author":{"gitId":"gavienwz"},"content":"China | **CHN**","lastModifiedDate":"2021-11-06"},{"lineNumber":419,"author":{"gitId":"gavienwz"},"content":"Japan | **JPN**","lastModifiedDate":"2021-11-06"},{"lineNumber":420,"author":{"gitId":"gavienwz"},"content":"South Korea | **SKR**","lastModifiedDate":"2021-11-06"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":422,"author":{"gitId":"gavienwz"},"content":"## 5. Command Summary","lastModifiedDate":"2021-11-06"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":424,"author":{"gitId":"gavienwz"},"content":"A summary of all commands available in Traveller, and how you can use them, is detailed here.","lastModifiedDate":"2021-10-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":426,"author":{"gitId":"gavienwz"},"content":"Action | Format","lastModifiedDate":"2021-10-21"},{"lineNumber":427,"author":{"gitId":"gavienwz"},"content":"--- | ---","lastModifiedDate":"2021-10-21"},{"lineNumber":428,"author":{"gitId":"gavienwz"},"content":"**help**| `help`","lastModifiedDate":"2021-10-23"},{"lineNumber":429,"author":{"gitId":"Uxinnn"},"content":"**new** | `new TRIP_NAME /from SOURCE_COUNTRY /to DESTINATION_COUNTRY`","lastModifiedDate":"2021-11-04"},{"lineNumber":430,"author":{"gitId":"Uxinnn"},"content":"**add-day**| `add-day TRIP_NAME /day NUMBER_OF_DAYS`","lastModifiedDate":"2021-10-26"},{"lineNumber":431,"author":{"gitId":"gavienwz"},"content":"**add-item**|`add-item TRIP_NAME /day DAY_INDEX /time ITEM_TIME /name ITEM_NAME`","lastModifiedDate":"2021-10-23"},{"lineNumber":432,"author":{"gitId":"Uxinnn"},"content":"**view** | `view TRIP_NAME`","lastModifiedDate":"2021-10-22"},{"lineNumber":433,"author":{"gitId":"gavienwz"},"content":"**delete** | `delete TRIP_NAME`","lastModifiedDate":"2021-10-21"},{"lineNumber":434,"author":{"gitId":"gavienwz"},"content":"**delete-day** | `delete-day TRIP_NAME /day DAY_INDEX`","lastModifiedDate":"2021-10-23"},{"lineNumber":435,"author":{"gitId":"gavienwz"},"content":"**delete-item** | `delete-item TRIP_NAME /day DAY_INDEX /item ITEM_INDEX`","lastModifiedDate":"2021-10-23"},{"lineNumber":436,"author":{"gitId":"Uxinnn"},"content":"**edit** | `edit TRIP_NAME /from SOURCE_COUNTRY /to DESTINATION_COUNTRY`","lastModifiedDate":"2021-11-04"},{"lineNumber":437,"author":{"gitId":"Uxinnn"},"content":"**edit-item** | `edit-item TRIP_NAME /day DAY_NUMBER /time NEW_ITEM_TIME /name NEW_ITEM_NAME /index ITEM_INDEX`","lastModifiedDate":"2021-10-26"},{"lineNumber":438,"author":{"gitId":"Uxinnn"},"content":"**search-item** |  `search-item TRIP_NAME /day DAY_INDEX /key KEYWORD`","lastModifiedDate":"2021-10-26"},{"lineNumber":439,"author":{"gitId":"Uxinnn"},"content":"**shortest-time** | `shortest-time /from SOURCE_COUNTRY /to DESTINATION_COUNTRY`","lastModifiedDate":"2021-11-04"},{"lineNumber":440,"author":{"gitId":"Uxinnn"},"content":"**shortest-cost** | `shortest-cost /from SOURCE_COUNTRY /to DESTINATION_COUNTRY`","lastModifiedDate":"2021-10-26"},{"lineNumber":441,"author":{"gitId":"gavienwz"},"content":"**exit** | `exit`","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"conradwee":6,"gavienwz":93,"jach23":54,"Uxinnn":236,"-":30,"Cuiminjing":22}},{"path":"docs/team/Cuiminjing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cuiminjing"},"content":"# Cuiminjing - Project Portfolio Page","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Cuiminjing"},"content":"## Overview","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Cuiminjing"},"content":"Hi! I\u0027m a Year 2 Computer Engineering student at NUS.","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Cuiminjing"},"content":"Please see below for my contributions to Traveller.","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Cuiminjing"},"content":"### Summary of Contributions","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Cuiminjing"},"content":"#### Features","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Cuiminjing"},"content":"* `delete`: Allow user to delete a whole trip","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Cuiminjing"},"content":"    * Bases on the tripname, worked to implement the delete function to be able to ","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Cuiminjing"},"content":"      delete the whole trips with all itineraries","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Cuiminjing"},"content":"    * Help users delete wrong or past journeys to simplify the page","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Cuiminjing"},"content":"* `delete-day`: Allow user to delete an existing day of a trip","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Cuiminjing"},"content":"    * Based on the name of the trip and index of the day, the user can delete a ","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Cuiminjing"},"content":"      single day of a trip.","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Cuiminjing"},"content":"    * Delete itineraries of a whole day","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Cuiminjing"},"content":"* `delete-item`: Allow user to delete an existing item of a day","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Cuiminjing"},"content":"    * Enable user to delete an item of a day based on the name of trip and index of ","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Cuiminjing"},"content":"      day and item.","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Cuiminjing"},"content":"    * Delete a single wrong item of a day","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Cuiminjing"},"content":"#### Project Management","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Cuiminjing"},"content":"* Reviewed multiple PRs.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Cuiminjing"},"content":"* Assisted in fixing multiple gradle issues","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Cuiminjing"},"content":"* Develop functionalities of V2.0","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Cuiminjing"},"content":"#### Documentation","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Cuiminjing"},"content":"* User Guide (UG)","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Cuiminjing"},"content":"  * Kept it updated and debugged.","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Cuiminjing"},"content":"  * Wrote section of delete, delete-item and delete-day function.","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Cuiminjing"},"content":"* Developer Guide (DG)","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Cuiminjing"},"content":"  * Wrote section of Ui class and Triplist class.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Cuiminjing"},"content":"  * * Kept it updated and debugged.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Cuiminjing"},"content":"RepoSense Link: [here](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dcuiminjing\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dconradwee\u0026zR\u003dAY2122S1-CS2113T-W13-1%2Ftp%5Bmaster%5D\u0026zACS\u003d172.5020920502092\u0026zS\u003d2021-09-25\u0026zFS\u003dw13\u0026zU\u003d2021-11-03\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Cuiminjing":37}},{"path":"docs/team/Uxinnn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"# Foong Xin Yu - Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"Hi! I\u0027m a Year 2 Computer Engineering student at NUS.","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"Please see below for my contributions to Traveller.","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"#### Features","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"* `new`: Allow users to create new trips.","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"  * Core part of Traveller, which is to enable users to plan trips.","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"* `view`: Allow users to view trips created.","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"  * Core part of Traveller, enable users to view their created trips.","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"* `add-day`: Allow users to add days to each trip.","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"  * Usually, people plan trips by day. This enables users to do just that using Traveller, without having","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"1 large lump of activities to do without any indication of which day each activity will be done on.","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"* `add-item`: Allow users to add items to each day.","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"  * Represents an activity that someone on the trip will do. Enable users to have multiple items in a day so that","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"they can plan multiple activities per day.","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"  * Has an added time field to help users easily organise the duration of each item.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"* `exit`: Exits the application.","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"#### Other code contributions","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"* Implemented the main structure of Traveller.","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"* Restructured code to streamline architecture of Traveller.","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"* Added exceptions, assertions, logging, test cases to overall code.","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"#### Project Management","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"* Created and assigned issues to group members for v2.0.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"* Reviewed multiple PRs.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"* Keep track of deadlines.","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"#### Documentation","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"* User Guide (UG)","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"  * Created overall structure of the UG.","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"  * Kept it updated and debugged.","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"  * Wrote Introduction, Contents Table, Quick Start, new, add-day, add-item, view sections.","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"* Developer Guide (DG)","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"  * Created overall structure of the DG.","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"  * Wrote preface, Table of Contents, Design \u0026 Implementation header paragraph, World Map header paragraph, ","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"Main Traveller header paragraph, Traveller class, Parser class.","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"RepoSense Link: [here](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dUxinnn\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Uxinnn":39,"-":5}},{"path":"docs/team/conradwee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"conradwee"},"content":"# Conrad Wee - Project Portfolio Page","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"conradwee"},"content":"### Summary of Contributions","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"conradwee"},"content":"#### Features","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"conradwee"},"content":"* `add`: Adding trips","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"conradwee"},"content":"  * Worked to implement the add function so as to be able to add the basic trips with start and end countries","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"conradwee"},"content":"* `viewtrip`: View the trip details","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"conradwee"},"content":"  * Created the initial skeleton on how the view trip would work and how it would display the saved details","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"conradwee"},"content":"* `help`: Pull up the help menu","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"conradwee"},"content":"  * Core part of Traveller, enable users to view their created trips.","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"conradwee"},"content":"#### Other code contributions","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"conradwee"},"content":"* Did the main merging of code between the traveller app and the algorithim which were done by different members","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"conradwee"},"content":"* Worked with Jared to implement the algorithim and debug his code with him. ","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"conradwee"},"content":"* Implemented how the system recognised destinations","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"conradwee"},"content":"#### Project Management","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"conradwee"},"content":"* Reviewed multiple PRs.","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"conradwee"},"content":"* Assisted in fixing multiple gradle issues","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"conradwee"},"content":"#### Documentation","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"conradwee"},"content":"* User Guide (UG)","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"conradwee"},"content":"* Edited the new function, help function","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"conradwee"},"content":"RepoSense Link: [here](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dconradwee\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026since\u003d2021-09-25)","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"conradwee":23,"-":3}},{"path":"docs/team/gavienwz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gavienwz"},"content":"# Gavien Pat - Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"gavienwz"},"content":"## Overview","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"gavienwz"},"content":"Hello! I\u0027m a Year 2 Computer Engineering student at NUS.","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"gavienwz"},"content":"Listed below are my contributions to Traveller.","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"gavienwz"},"content":"### Summary of Contributions","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"gavienwz"},"content":"#### Features","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"gavienwz"},"content":"* `edit`: Allow users to edit Trips.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"gavienwz"},"content":"  * Quality of Life functionality of Traveller, that allows users to edit a Trip\u0027s start and end destination without","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"gavienwz"},"content":"  the need to delete and create a new one.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"gavienwz"},"content":"* Database Reader.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"gavienwz"},"content":"  * Core part of Traveller, as it allows the WorldMap to be initialised and Traveller to perform its basic functions.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"gavienwz"},"content":"  * Based on requirements from Traveller\u0027s WorldMap Optimiser by ","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"gavienwz"},"content":"  [Jared.](https://ay2122s1-cs2113t-w13-1.github.io/tp/team/jach23.html)","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"gavienwz"},"content":"* Save functionality.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"gavienwz"},"content":"  * Quality of Life functionality of Traveller, that saves the existing Trips and its corresponding Days/Items.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"gavienwz"},"content":"  * Automatically saves the current state of Traveller to be reused for the future.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"gavienwz"},"content":"  * Required to reference from different classes to save all details of all Trips.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"gavienwz"},"content":"  * Saves in a way that is readable to users if they want to do ","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"gavienwz"},"content":"  [manual testing.](https://ay2122s1-cs2113t-w13-1.github.io/tp/DeveloperGuide.html#6-instructions-for-manual-testing)","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"gavienwz"},"content":"#### Other code contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"gavienwz"},"content":"* Added exceptions, assertions and test cases to overall code.","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"gavienwz"},"content":"#### Project Management","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"gavienwz"},"content":"* Created and assigned issues to group members for v1.0 and v2.0.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"gavienwz"},"content":"* Reviewed multiple PRs.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"gavienwz"},"content":"#### Documentation","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"gavienwz"},"content":"* User Guide (UG)","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"gavienwz"},"content":"  * Created some overall structure of the UG. Further updated by ","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"gavienwz"},"content":"  [Xin Yu.](https://ay2122s1-cs2113t-w13-1.github.io/tp/team/Uxinnn.html)","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"gavienwz"},"content":"  * Kept it updated and debugged.","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"gavienwz"},"content":"  * Wrote first draft of UG which includes Quick Start, Features (new, view, delete, edit, exit), ","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"gavienwz"},"content":"  FAQ and Command Summary.","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"gavienwz"},"content":"* Developer Guide (DG)","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"gavienwz"},"content":"  * Wrote first draft of DG which includes Target User Profile, Value Proposition, User Stories, ","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"gavienwz"},"content":"  Non-Functional Requirements, Glossary.","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"gavienwz"},"content":"  * Wrote DataLoader class, SaveLoader class, Instructions for manual testing.","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"gavienwz"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"gavienwz"},"content":"RepoSense Link: [here](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dgavienwz\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dgavienwz\u0026tabRepo\u003dAY2122S1-CS2113T-W13-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"gavienwz":44}},{"path":"docs/team/jach23.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"# Jared Cheang - Project Portfolio Page","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"jach23"},"content":"## Overview","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jach23"},"content":"Hi! I\u0027m a Year 2 NUS Computer Engineering student.","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jach23"},"content":"Please see below for my contributions to Traveller.","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jach23"},"content":"### Summary of Contributions","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jach23"},"content":"* WorldMap","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"jach23"},"content":"  * Modelling after a simple graph","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"jach23"},"content":"  * Implementation of Dijkstra\u0027s algorithm","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"jach23"},"content":"  * Implementing key functionalities as conceptualised as a graph ","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"jach23"},"content":"  * Allowing searching based on either costs or distances","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"jach23"},"content":"  * Basic exceptions, assertions, and test cases","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"jach23"},"content":"  ","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"jach23"},"content":"* Item List","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"jach23"},"content":"  * Search","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"jach23"},"content":"  * Edit/Update","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"jach23"},"content":"#### Features","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"jach23"},"content":"* `shortest-dist`: Allow users to find the shortest distance from one destination to another.","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"jach23"},"content":"  * Core part of Traveller, which is to enable users to find the minimal route and the corresponding path breakdown.","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"jach23"},"content":"* `shortest-cost`: Allow users to find the least expensive distance from one destination to another.","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"jach23"},"content":"  * Core part of Traveller, which is to help users to find the cheapest path and the corresponding journey breakdown.","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"jach23"},"content":"* `search-item`: Allow users to search using an item keyword.","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"jach23"},"content":"  * Usually, people plan trips by day. Using the given day and trip, this enables users to search for all items","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"jach23"},"content":"  * containing the corresponding keyword using Traveller, without having to spend time manually checking each activity","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"jach23"},"content":"  * one by one.","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"jach23"},"content":"* `edit-item`: Allow users to edit existing items.","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"jach23"},"content":"  * Based on the index of the activity and its corresponding day that the user wishes to update, the user is then able ","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"jach23"},"content":"  * to edit the activity time or name. This enables users to fix accidents like spelling errors, without having to go ","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"jach23"},"content":"  * through the hassle of deleting and adding the corrected spelling.","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"jach23"},"content":"#### Other code contributions","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"jach23"},"content":"* Conceptualised the basic architecture for Traveller\u0027s WorldMap Optimiser.","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"jach23"},"content":"* Implemented its basic structure as modelled by a graph, such as MinCalcResult.","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"jach23"},"content":"* Added exceptions, assertions, logging, test cases to overall code.","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"jach23"},"content":"#### Project Management","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"jach23"},"content":"* Reviewed multiple PRs.","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"jach23"},"content":"* Developed additional WorldMap functionalities for V2.0.","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"jach23"},"content":"#### Documentation","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"jach23"},"content":"* User Guide (UG)","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"jach23"},"content":"  * Created overall structure of the UG.","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"jach23"},"content":"  * Kept it updated and debugged.","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"jach23"},"content":"  * Wrote Introduction, Contents Table, Quick Start, new, add-day, add-item, view sections.","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"jach23"},"content":"* Developer Guide (DG)","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"jach23"},"content":"  * Created overall structure of the DG.","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"jach23"},"content":"  * Wrote preface, Table of Contents, Design \u0026 Implementation header paragraph, World Map header paragraph,","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"jach23"},"content":"    Main Traveller header paragraph, Traveller class, Parser class.","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"jach23"},"content":"RepoSense Link:[here](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003djach23\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026since\u003d2021-09-25)","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"jach23":56}},{"path":"src/main/java/seedu/traveller/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"conradwee"},"content":"package seedu.traveller;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.Command;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.NewCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.AddItemCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.EditCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.DeleteCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.DeleteDayCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.DeleteItemCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.ViewCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.SearchItemCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.EditItemCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.ShortestCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.AddDayCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.ExitCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.commands.HelpCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.CommandNotFoundException;","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.EmptyFieldValueException;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.IllegalTimeFormatException;","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.IllegalTimeValueException;","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.IllegalTripNameException;","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.InvalidAddDayFormatException;","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.InvalidAddItemFormatException;","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.InvalidDeleteDayFormatException;","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.InvalidDeleteItemFormatCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.InvalidEditFormatException;","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.InvalidFormatException;","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.InvalidNewFormatException;","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.InvalidNumberOfDaysException;","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.InvalidSearchItemFormatException;","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.InvalidEditItemIndexException;","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.InvalidEditItemFormatException;","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.InvalidShortestTimeException;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.InvalidShortestCostException;","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"jach23"},"content":"import seedu.traveller.worldmap.WorldMap;","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"conradwee"},"content":"import java.util.Objects;","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"conradwee"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"conradwee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"conradwee"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"conradwee"},"content":" * Used to understand raw user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"conradwee"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"conradwee"},"content":"public class Parser {","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"conradwee"},"content":"    private static final Logger logger \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"conradwee"},"content":"    private static final int FROM_LENGTH \u003d 7;","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"conradwee"},"content":"    private static final int TO_LENGTH \u003d 5;","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"conradwee"},"content":"    private static final int DAY_LENGTH \u003d 6;","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"conradwee"},"content":"    private static final int NAME_LENGTH \u003d 7;","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"conradwee"},"content":"    private static final int ITEM_LENGTH \u003d 7;","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"conradwee"},"content":"    private static final int TIME_LENGTH \u003d 7;","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"conradwee"},"content":"    private static final int INDEX_LENGTH \u003d 8;","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"conradwee"},"content":"    private static final int KEY_LENGTH \u003d 6;","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"conradwee"},"content":"     * Breaks down raw user input into commands understood by \u003ccode\u003eTraveller\u003c/code\u003e.","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"conradwee"},"content":"     * @param rawInput String of the raw user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"conradwee"},"content":"     * @return Command \u003ccode\u003eCommand\u003c/code\u003e object based on the user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"conradwee"},"content":"     * @throws TravellerException Thrown when the raw user input cannot be understood by the \u003ccode\u003eParser\u003c/code\u003e.","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"conradwee"},"content":"    public static Command parse(String rawInput) throws TravellerException {","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"conradwee"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"conradwee"},"content":"        logger.log(Level.FINE, \"Parsing raw user input\");","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"conradwee"},"content":"        Command command;","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"conradwee"},"content":"        String[] userInput \u003d rawInput.split(\" \", 2);","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"conradwee"},"content":"        String userCommand \u003d userInput[0].toLowerCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"conradwee"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"conradwee"},"content":"            switch (userCommand) {","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"conradwee"},"content":"            case \"new\":","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"conradwee"},"content":"                command \u003d parseNewCommand(userInput[1]);","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"conradwee"},"content":"                break;","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"conradwee"},"content":"            case \"view\":","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"conradwee"},"content":"                command \u003d parseViewCommand(userInput[1]);","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"conradwee"},"content":"                break;","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"            case \"shortest-time\":","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Uxinnn"},"content":"                command \u003d parseShortestTimeCommand(userInput[1]);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"conradwee"},"content":"                break;","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"conradwee"},"content":"            case \"shortest-cost\":","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"conradwee"},"content":"                command \u003d parseShortestCostCommand(userInput[1]);","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"conradwee"},"content":"                break;","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"conradwee"},"content":"            case \"search-item\":","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"conradwee"},"content":"                command \u003d parseSearchItemCommand(userInput[1]);","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"conradwee"},"content":"                break;","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"conradwee"},"content":"            case \"add-day\":","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"conradwee"},"content":"                command \u003d parseAddDayCommand(userInput[1]);","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"conradwee"},"content":"                break;","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"conradwee"},"content":"            case \"add-item\":","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"conradwee"},"content":"                command \u003d parseAddItemCommand(userInput[1]);","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"conradwee"},"content":"                break;","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"conradwee"},"content":"            case \"edit-item\":","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"conradwee"},"content":"                command \u003d parseEditItemCommand(userInput[1]);","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"conradwee"},"content":"                break;","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"conradwee"},"content":"            case \"exit\":","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"conradwee"},"content":"                command \u003d parseExitCommand();","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"conradwee"},"content":"                break;","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"Cuiminjing"},"content":"            case \"edit\":","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"Cuiminjing"},"content":"                command \u003d parseEditCommand(userInput[1]);","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"Cuiminjing"},"content":"                break;","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"Cuiminjing"},"content":"            case \"delete\":","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"Cuiminjing"},"content":"                command \u003d parseDeleteCommand(userInput[1]);","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"Cuiminjing"},"content":"                break;","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"Cuiminjing"},"content":"            case \"delete-day\":","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"Cuiminjing"},"content":"                command \u003d parseDeleteDayCommand(userInput[1]);","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"Cuiminjing"},"content":"                break;","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"Cuiminjing"},"content":"            case \"delete-item\":","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"Cuiminjing"},"content":"                command \u003d parseDeleteItemCommand(userInput[1]);","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"Cuiminjing"},"content":"                break;","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"conradwee"},"content":"            case \"help\":","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"conradwee"},"content":"                command \u003d parseHelpCommand();","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"conradwee"},"content":"                break;","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"conradwee"},"content":"            default:","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"conradwee"},"content":"                logger.log(Level.WARNING, \"Invalid command input!\");","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"conradwee"},"content":"                throw new CommandNotFoundException(rawInput);","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"conradwee"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"conradwee"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"conradwee"},"content":"            throw new InvalidFormatException();","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"conradwee"},"content":"        return command;","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"conradwee"},"content":"     * Parses user input to give an \u003ccode\u003eAddItemCommand\u003c/code\u003e.","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"conradwee"},"content":"     * @param userInput Raw user input, with the first command option (add-item) removed.","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"conradwee"},"content":"     * @return Command An \u003ccode\u003eAddItemCommand\u003c/code\u003e object.","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"conradwee"},"content":"     * @throws TravellerException Will be thrown if the user input cannot be understood.","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"conradwee"},"content":"    private static Command parseAddItemCommand(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"conradwee"},"content":"        logger.log(Level.INFO, \"Add-item command input\");","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"conradwee"},"content":"        String tripName;","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"conradwee"},"content":"        String itemName;","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"conradwee"},"content":"        String itemTime;","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"conradwee"},"content":"        String rawDayNumber;","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"conradwee"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"conradwee"},"content":"            int dayIdx \u003d getDayFlagIndex(userInput);","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"conradwee"},"content":"            int timeIdx \u003d getTimeFlagIndex(userInput);","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"conradwee"},"content":"            int nameIdx \u003d getNameFlagIndex(userInput);","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"conradwee"},"content":"            tripName \u003d parseFieldValue(userInput, 0, dayIdx);","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"conradwee"},"content":"            rawDayNumber \u003d parseFieldValue(userInput, dayIdx + DAY_LENGTH, timeIdx);","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"conradwee"},"content":"            itemTime \u003d parseFieldValue(userInput, timeIdx + TIME_LENGTH, nameIdx);","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"conradwee"},"content":"            itemName \u003d parseFieldValue(userInput, nameIdx + NAME_LENGTH, userInput.length());","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"conradwee"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"conradwee"},"content":"            throw new InvalidAddItemFormatException();","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"conradwee"},"content":"        int dayIndex \u003d parseValidIndex(rawDayNumber);","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"conradwee"},"content":"        parseValidTime(itemTime);","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"conradwee"},"content":"        assert dayIndex \u003e\u003d 0 : \"Day index is negative.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"conradwee"},"content":"        Command command \u003d new AddItemCommand(tripName, dayIndex, itemTime, itemName);","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":157,"author":{"gitId":"conradwee"},"content":"        return command;","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":161,"author":{"gitId":"conradwee"},"content":"     * Parses user input to give a \u003ccode\u003eNewCommand\u003c/code\u003e.","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"conradwee"},"content":"     * @param userInput Raw user input, with the first command option (new) removed.","lastModifiedDate":"2021-11-02"},{"lineNumber":163,"author":{"gitId":"conradwee"},"content":"     * @return Command A \u003ccode\u003eNewCommand\u003c/code\u003e object.","lastModifiedDate":"2021-11-02"},{"lineNumber":164,"author":{"gitId":"conradwee"},"content":"     * @throws TravellerException Will be thrown if the user input cannot be understood.","lastModifiedDate":"2021-11-02"},{"lineNumber":165,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":166,"author":{"gitId":"conradwee"},"content":"    private static Command parseNewCommand(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-02"},{"lineNumber":167,"author":{"gitId":"conradwee"},"content":"        logger.log(Level.INFO, \"New command input\");","lastModifiedDate":"2021-11-02"},{"lineNumber":168,"author":{"gitId":"conradwee"},"content":"        Command command;","lastModifiedDate":"2021-11-02"},{"lineNumber":169,"author":{"gitId":"conradwee"},"content":"        String tripName;","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"conradwee"},"content":"        String startCountryCode;","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"conradwee"},"content":"        String endCountryCode;","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"conradwee"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":173,"author":{"gitId":"conradwee"},"content":"            int fromIdx \u003d getFromFlagIndex(userInput);","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"conradwee"},"content":"            int toIdx \u003d getToFlagIndex(userInput);","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":176,"author":{"gitId":"conradwee"},"content":"            tripName \u003d parseFieldValue(userInput, 0, fromIdx);","lastModifiedDate":"2021-11-02"},{"lineNumber":177,"author":{"gitId":"conradwee"},"content":"            startCountryCode \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"conradwee"},"content":"                    fromIdx + FROM_LENGTH, toIdx).toUpperCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"conradwee"},"content":"            endCountryCode \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-02"},{"lineNumber":180,"author":{"gitId":"conradwee"},"content":"                    toIdx + TO_LENGTH, userInput.length()).toUpperCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":181,"author":{"gitId":"conradwee"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"conradwee"},"content":"            logger.log(Level.WARNING, \"Invalid new command format: \" + userInput);","lastModifiedDate":"2021-11-02"},{"lineNumber":183,"author":{"gitId":"conradwee"},"content":"            throw new InvalidNewFormatException();","lastModifiedDate":"2021-11-02"},{"lineNumber":184,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":185,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"conradwee"},"content":"        parseValidTripName(tripName);","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"conradwee"},"content":"        command \u003d new NewCommand(tripName, startCountryCode, endCountryCode);","lastModifiedDate":"2021-11-02"},{"lineNumber":189,"author":{"gitId":"conradwee"},"content":"        return command;","lastModifiedDate":"2021-11-02"},{"lineNumber":190,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":191,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"Cuiminjing"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":193,"author":{"gitId":"Cuiminjing"},"content":"     * Parses user input to give a \u003ccode\u003eDeleteCommand\u003c/code\u003e.","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"Cuiminjing"},"content":"     * @param userInput Raw user input, with the first command option (delete) removed.","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"Cuiminjing"},"content":"     * @return Command A \u003ccode\u003eDeleteCommand\u003c/code\u003e object.","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"Cuiminjing"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":197,"author":{"gitId":"Cuiminjing"},"content":"    private static Command parseDeleteCommand(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-06"},{"lineNumber":198,"author":{"gitId":"Cuiminjing"},"content":"        Command command;","lastModifiedDate":"2021-11-06"},{"lineNumber":199,"author":{"gitId":"Cuiminjing"},"content":"        logger.log(Level.INFO, \"Delete command input\");","lastModifiedDate":"2021-11-06"},{"lineNumber":200,"author":{"gitId":"Cuiminjing"},"content":"        String tripName \u003d parseFieldValue(userInput, 0, userInput.length());","lastModifiedDate":"2021-11-06"},{"lineNumber":201,"author":{"gitId":"Cuiminjing"},"content":"        command \u003d new DeleteCommand(tripName);","lastModifiedDate":"2021-11-06"},{"lineNumber":202,"author":{"gitId":"Cuiminjing"},"content":"        return command;","lastModifiedDate":"2021-11-06"},{"lineNumber":203,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"Cuiminjing"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"Cuiminjing"},"content":"     * Parses user input to give an \u003ccode\u003eEditCommand\u003c/code\u003e.","lastModifiedDate":"2021-11-06"},{"lineNumber":207,"author":{"gitId":"Cuiminjing"},"content":"     * @param userInput Raw user input, with the first command option (edit) removed.","lastModifiedDate":"2021-11-06"},{"lineNumber":208,"author":{"gitId":"Cuiminjing"},"content":"     * @return Command An \u003ccode\u003eEditCommand\u003c/code\u003e object.","lastModifiedDate":"2021-11-06"},{"lineNumber":209,"author":{"gitId":"Cuiminjing"},"content":"     * @throws TravellerException Will be thrown if the user input cannot be understood.","lastModifiedDate":"2021-11-06"},{"lineNumber":210,"author":{"gitId":"Cuiminjing"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":211,"author":{"gitId":"gavienwz"},"content":"    /*private static Command parseEditCommand(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-05"},{"lineNumber":212,"author":{"gitId":"Cuiminjing"},"content":"        logger.log(Level.INFO, \"Edit command input\");","lastModifiedDate":"2021-11-06"},{"lineNumber":213,"author":{"gitId":"Cuiminjing"},"content":"        Command command;","lastModifiedDate":"2021-11-06"},{"lineNumber":214,"author":{"gitId":"Cuiminjing"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":215,"author":{"gitId":"Cuiminjing"},"content":"            int fromIdx \u003d getFromFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":216,"author":{"gitId":"Cuiminjing"},"content":"            int toIdx \u003d getToFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":217,"author":{"gitId":"gavienwz"},"content":"            String tripName;","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"gavienwz"},"content":"            String newTripName;","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"gavienwz"},"content":"            if (userInput.contains(\"/name\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"gavienwz"},"content":"                int nameIdx \u003d getNameFlagIndex(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"gavienwz"},"content":"                tripName \u003d parseFieldValue(userInput, 0, nameIdx);","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"gavienwz"},"content":"                newTripName \u003d parseFieldValue(userInput, nameIdx + NAME_LENGTH, fromIdx);","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"gavienwz"},"content":"            } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"gavienwz"},"content":"                tripName \u003d parseFieldValue(userInput, 0, fromIdx);","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"gavienwz"},"content":"                newTripName \u003d tripName;","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"gavienwz"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"Cuiminjing"},"content":"            String startCountryCode \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-06"},{"lineNumber":228,"author":{"gitId":"Cuiminjing"},"content":"                fromIdx + FROM_LENGTH, toIdx).toUpperCase();","lastModifiedDate":"2021-11-06"},{"lineNumber":229,"author":{"gitId":"Cuiminjing"},"content":"            String endCountryCode \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-06"},{"lineNumber":230,"author":{"gitId":"Cuiminjing"},"content":"                toIdx + TO_LENGTH, userInput.length()).toUpperCase();","lastModifiedDate":"2021-11-06"},{"lineNumber":231,"author":{"gitId":"Cuiminjing"},"content":"            parseValidTripName(tripName);","lastModifiedDate":"2021-11-06"},{"lineNumber":232,"author":{"gitId":"gavienwz"},"content":"            command \u003d new EditCommand(tripName, newTripName, startCountryCode, endCountryCode);","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"conradwee"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":234,"author":{"gitId":"conradwee"},"content":"            throw new InvalidEditFormatException();","lastModifiedDate":"2021-11-02"},{"lineNumber":235,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":236,"author":{"gitId":"conradwee"},"content":"        return command;","lastModifiedDate":"2021-11-02"},{"lineNumber":237,"author":{"gitId":"gavienwz"},"content":"    }*/","lastModifiedDate":"2021-11-05"},{"lineNumber":238,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":239,"author":{"gitId":"gavienwz"},"content":"    private static Command parseEditCommand(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-05"},{"lineNumber":240,"author":{"gitId":"gavienwz"},"content":"        logger.log(Level.INFO, \"Edit command input\");","lastModifiedDate":"2021-11-05"},{"lineNumber":241,"author":{"gitId":"gavienwz"},"content":"        Command command;","lastModifiedDate":"2021-11-05"},{"lineNumber":242,"author":{"gitId":"gavienwz"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":243,"author":{"gitId":"gavienwz"},"content":"            String newTripName \u003d \"\";","lastModifiedDate":"2021-11-05"},{"lineNumber":244,"author":{"gitId":"gavienwz"},"content":"            String startCountryCode \u003d \"\";","lastModifiedDate":"2021-11-05"},{"lineNumber":245,"author":{"gitId":"gavienwz"},"content":"            String endCountryCode \u003d \"\";","lastModifiedDate":"2021-11-05"},{"lineNumber":246,"author":{"gitId":"gavienwz"},"content":"            if (userInput.contains(\"/name\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":247,"author":{"gitId":"gavienwz"},"content":"                newTripName \u003d parseEditNewTripName(userInput);","lastModifiedDate":"2021-11-05"},{"lineNumber":248,"author":{"gitId":"gavienwz"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":249,"author":{"gitId":"gavienwz"},"content":"            if (userInput.contains(\"/from\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":250,"author":{"gitId":"gavienwz"},"content":"                startCountryCode \u003d parseEditStartCountryCode(userInput);","lastModifiedDate":"2021-11-05"},{"lineNumber":251,"author":{"gitId":"gavienwz"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":252,"author":{"gitId":"gavienwz"},"content":"            if (userInput.contains(\"/to\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":253,"author":{"gitId":"gavienwz"},"content":"                endCountryCode \u003d parseEditEndCountryCode(userInput);","lastModifiedDate":"2021-11-05"},{"lineNumber":254,"author":{"gitId":"gavienwz"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":255,"author":{"gitId":"gavienwz"},"content":"            String tripName \u003d parseEditTripName(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":256,"author":{"gitId":"gavienwz"},"content":"            parseValidTripName(tripName);","lastModifiedDate":"2021-11-05"},{"lineNumber":257,"author":{"gitId":"gavienwz"},"content":"            command \u003d new EditCommand(tripName, newTripName, startCountryCode, endCountryCode);","lastModifiedDate":"2021-11-05"},{"lineNumber":258,"author":{"gitId":"Cuiminjing"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":259,"author":{"gitId":"Cuiminjing"},"content":"            throw new InvalidEditFormatException();","lastModifiedDate":"2021-11-06"},{"lineNumber":260,"author":{"gitId":"Cuiminjing"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":261,"author":{"gitId":"Cuiminjing"},"content":"        return command;","lastModifiedDate":"2021-11-06"},{"lineNumber":262,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":263,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"gavienwz"},"content":"    private static String parseEditTripName(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-05"},{"lineNumber":265,"author":{"gitId":"gavienwz"},"content":"        String tripName;","lastModifiedDate":"2021-11-05"},{"lineNumber":266,"author":{"gitId":"gavienwz"},"content":"        if (userInput.contains(\"/name\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":267,"author":{"gitId":"gavienwz"},"content":"            int nameIdx \u003d getNameFlagIndex(userInput);","lastModifiedDate":"2021-11-05"},{"lineNumber":268,"author":{"gitId":"gavienwz"},"content":"            tripName \u003d parseFieldValue(userInput, 0, nameIdx);","lastModifiedDate":"2021-11-05"},{"lineNumber":269,"author":{"gitId":"gavienwz"},"content":"        } else if (userInput.contains(\"/from\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":270,"author":{"gitId":"gavienwz"},"content":"            assert !userInput.contains(\"/name\");","lastModifiedDate":"2021-11-05"},{"lineNumber":271,"author":{"gitId":"gavienwz"},"content":"            int fromIdx \u003d getFromFlagIndex(userInput);","lastModifiedDate":"2021-11-05"},{"lineNumber":272,"author":{"gitId":"gavienwz"},"content":"            tripName \u003d parseFieldValue(userInput, 0, fromIdx);","lastModifiedDate":"2021-11-05"},{"lineNumber":273,"author":{"gitId":"gavienwz"},"content":"        } else {","lastModifiedDate":"2021-11-05"},{"lineNumber":274,"author":{"gitId":"gavienwz"},"content":"            assert !userInput.contains(\"/name\") \u0026\u0026 !userInput.contains(\"/from\");","lastModifiedDate":"2021-11-05"},{"lineNumber":275,"author":{"gitId":"gavienwz"},"content":"            int toIdx \u003d getToFlagIndex(userInput);","lastModifiedDate":"2021-11-05"},{"lineNumber":276,"author":{"gitId":"gavienwz"},"content":"            tripName \u003d parseFieldValue(userInput, 0, toIdx);","lastModifiedDate":"2021-11-05"},{"lineNumber":277,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":278,"author":{"gitId":"gavienwz"},"content":"        return tripName;","lastModifiedDate":"2021-11-05"},{"lineNumber":279,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":280,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":281,"author":{"gitId":"gavienwz"},"content":"    private static String parseEditNewTripName(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-05"},{"lineNumber":282,"author":{"gitId":"gavienwz"},"content":"        int nameIdx \u003d getNameFlagIndex(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"gavienwz"},"content":"        String newTripName;","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"gavienwz"},"content":"        if (userInput.contains(\"/from\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"gavienwz"},"content":"            int fromIdx \u003d getFromFlagIndex(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"gavienwz"},"content":"            newTripName \u003d parseFieldValue(userInput, nameIdx + NAME_LENGTH, fromIdx);","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"gavienwz"},"content":"        } else if (userInput.contains(\"/to\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"gavienwz"},"content":"            assert !userInput.contains(\"/from\");","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"gavienwz"},"content":"            int toIdx \u003d getToFlagIndex(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"gavienwz"},"content":"            newTripName \u003d parseFieldValue(userInput, nameIdx + NAME_LENGTH, toIdx);","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"gavienwz"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"gavienwz"},"content":"            assert (!userInput.contains(\"/from\") \u0026\u0026 !userInput.contains(\"/to\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"gavienwz"},"content":"            newTripName \u003d parseFieldValue(userInput, nameIdx + NAME_LENGTH, userInput.length());","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":295,"author":{"gitId":"gavienwz"},"content":"        return newTripName;","lastModifiedDate":"2021-11-04"},{"lineNumber":296,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":297,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":298,"author":{"gitId":"gavienwz"},"content":"    private static String parseEditStartCountryCode(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-05"},{"lineNumber":299,"author":{"gitId":"gavienwz"},"content":"        int fromIdx \u003d getFromFlagIndex(userInput);","lastModifiedDate":"2021-11-05"},{"lineNumber":300,"author":{"gitId":"gavienwz"},"content":"        String startCountryCode;","lastModifiedDate":"2021-11-05"},{"lineNumber":301,"author":{"gitId":"gavienwz"},"content":"        if (userInput.contains(\"/to\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":302,"author":{"gitId":"gavienwz"},"content":"            int toIdx \u003d getToFlagIndex(userInput);","lastModifiedDate":"2021-11-05"},{"lineNumber":303,"author":{"gitId":"gavienwz"},"content":"            startCountryCode \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-05"},{"lineNumber":304,"author":{"gitId":"gavienwz"},"content":"                    fromIdx + FROM_LENGTH, toIdx).toUpperCase();","lastModifiedDate":"2021-11-05"},{"lineNumber":305,"author":{"gitId":"gavienwz"},"content":"        } else {","lastModifiedDate":"2021-11-05"},{"lineNumber":306,"author":{"gitId":"gavienwz"},"content":"            assert (!userInput.contains(\"/to\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":307,"author":{"gitId":"gavienwz"},"content":"            startCountryCode \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-05"},{"lineNumber":308,"author":{"gitId":"gavienwz"},"content":"                    fromIdx + FROM_LENGTH, userInput.length()).toUpperCase();","lastModifiedDate":"2021-11-05"},{"lineNumber":309,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":310,"author":{"gitId":"gavienwz"},"content":"        return startCountryCode;","lastModifiedDate":"2021-11-05"},{"lineNumber":311,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":312,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":313,"author":{"gitId":"Cuiminjing"},"content":"    private static String parseEditEndCountryCode(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-06"},{"lineNumber":314,"author":{"gitId":"Cuiminjing"},"content":"        int toIdx \u003d getToFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":315,"author":{"gitId":"Cuiminjing"},"content":"        String endCountryCode \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-06"},{"lineNumber":316,"author":{"gitId":"Cuiminjing"},"content":"                toIdx + TO_LENGTH, userInput.length()).toUpperCase();","lastModifiedDate":"2021-11-06"},{"lineNumber":317,"author":{"gitId":"Cuiminjing"},"content":"        return endCountryCode;","lastModifiedDate":"2021-11-06"},{"lineNumber":318,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":319,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":320,"author":{"gitId":"Cuiminjing"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":321,"author":{"gitId":"Cuiminjing"},"content":"     * Parses user input to give a \u003ccode\u003eDeleteDayCommand\u003c/code\u003e.","lastModifiedDate":"2021-11-06"},{"lineNumber":322,"author":{"gitId":"Cuiminjing"},"content":"     * @param userInput Raw user input, with the first command option (delete-day) removed.","lastModifiedDate":"2021-11-06"},{"lineNumber":323,"author":{"gitId":"Cuiminjing"},"content":"     * @return Command A \u003ccode\u003eDeleteDayCommand\u003c/code\u003e object.","lastModifiedDate":"2021-11-06"},{"lineNumber":324,"author":{"gitId":"Cuiminjing"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":325,"author":{"gitId":"Cuiminjing"},"content":"    private static Command parseDeleteDayCommand(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-06"},{"lineNumber":326,"author":{"gitId":"Cuiminjing"},"content":"        String tripName;","lastModifiedDate":"2021-11-06"},{"lineNumber":327,"author":{"gitId":"Cuiminjing"},"content":"        String rawDayIndex;","lastModifiedDate":"2021-11-06"},{"lineNumber":328,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":329,"author":{"gitId":"Cuiminjing"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":330,"author":{"gitId":"Cuiminjing"},"content":"            int dayIdx \u003d getDayFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":331,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":332,"author":{"gitId":"Cuiminjing"},"content":"            tripName \u003d parseFieldValue(userInput, 0, dayIdx);","lastModifiedDate":"2021-11-06"},{"lineNumber":333,"author":{"gitId":"Cuiminjing"},"content":"            rawDayIndex \u003d parseFieldValue(userInput, dayIdx + DAY_LENGTH, userInput.length());","lastModifiedDate":"2021-11-06"},{"lineNumber":334,"author":{"gitId":"Cuiminjing"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":335,"author":{"gitId":"Cuiminjing"},"content":"            logger.log(Level.WARNING, \"Invalid delete-day command format: \" + userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":336,"author":{"gitId":"Cuiminjing"},"content":"            throw new InvalidDeleteDayFormatException();","lastModifiedDate":"2021-11-06"},{"lineNumber":337,"author":{"gitId":"Cuiminjing"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":338,"author":{"gitId":"Cuiminjing"},"content":"        int dayIndex \u003d parseValidIndex(rawDayIndex);","lastModifiedDate":"2021-11-06"},{"lineNumber":339,"author":{"gitId":"Cuiminjing"},"content":"        assert dayIndex \u003e\u003d 0 : \"Day index is negative.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":340,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":341,"author":{"gitId":"Cuiminjing"},"content":"        Command command;","lastModifiedDate":"2021-11-06"},{"lineNumber":342,"author":{"gitId":"Cuiminjing"},"content":"        logger.log(Level.INFO, \"Delete-day command input\");","lastModifiedDate":"2021-11-06"},{"lineNumber":343,"author":{"gitId":"Cuiminjing"},"content":"        command \u003d new DeleteDayCommand(tripName, dayIndex);","lastModifiedDate":"2021-11-06"},{"lineNumber":344,"author":{"gitId":"Cuiminjing"},"content":"        return command;","lastModifiedDate":"2021-11-06"},{"lineNumber":345,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":346,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":347,"author":{"gitId":"Cuiminjing"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":348,"author":{"gitId":"Cuiminjing"},"content":"     * Parses user input to give a \u003ccode\u003eDeleteItemCommand\u003c/code\u003e.","lastModifiedDate":"2021-11-06"},{"lineNumber":349,"author":{"gitId":"Cuiminjing"},"content":"     * @param userInput Raw user input, with the first command option (delete-item) removed.","lastModifiedDate":"2021-11-06"},{"lineNumber":350,"author":{"gitId":"Cuiminjing"},"content":"     * @return A \u003ccode\u003eDeleteItemCommand\u003c/code\u003e object.","lastModifiedDate":"2021-11-06"},{"lineNumber":351,"author":{"gitId":"Cuiminjing"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":352,"author":{"gitId":"Cuiminjing"},"content":"    private static Command parseDeleteItemCommand(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-06"},{"lineNumber":353,"author":{"gitId":"Cuiminjing"},"content":"        logger.log(Level.INFO, \"Delete-item command input\");","lastModifiedDate":"2021-11-06"},{"lineNumber":354,"author":{"gitId":"Cuiminjing"},"content":"        String tripName;","lastModifiedDate":"2021-11-06"},{"lineNumber":355,"author":{"gitId":"Cuiminjing"},"content":"        String rawDayNumber;","lastModifiedDate":"2021-11-06"},{"lineNumber":356,"author":{"gitId":"Cuiminjing"},"content":"        String rawItemNumber;","lastModifiedDate":"2021-11-06"},{"lineNumber":357,"author":{"gitId":"Cuiminjing"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":358,"author":{"gitId":"Cuiminjing"},"content":"            int dayIdx \u003d getDayFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":359,"author":{"gitId":"Cuiminjing"},"content":"            int itemIdx \u003d getItemFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":360,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":361,"author":{"gitId":"Cuiminjing"},"content":"            tripName \u003d parseFieldValue(userInput, 0, dayIdx);","lastModifiedDate":"2021-11-06"},{"lineNumber":362,"author":{"gitId":"Cuiminjing"},"content":"            rawDayNumber \u003d parseFieldValue(userInput, dayIdx + DAY_LENGTH, itemIdx);","lastModifiedDate":"2021-11-06"},{"lineNumber":363,"author":{"gitId":"Cuiminjing"},"content":"            rawItemNumber \u003d parseFieldValue(userInput, itemIdx + ITEM_LENGTH, userInput.length());","lastModifiedDate":"2021-11-06"},{"lineNumber":364,"author":{"gitId":"Cuiminjing"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":365,"author":{"gitId":"Cuiminjing"},"content":"            throw new InvalidDeleteItemFormatCommand();","lastModifiedDate":"2021-11-06"},{"lineNumber":366,"author":{"gitId":"Cuiminjing"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":367,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":368,"author":{"gitId":"Cuiminjing"},"content":"        int dayNumber \u003d parseValidIndex(rawDayNumber);","lastModifiedDate":"2021-11-06"},{"lineNumber":369,"author":{"gitId":"Cuiminjing"},"content":"        assert dayNumber \u003e\u003d 0 : \"Day number is negative.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":370,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":371,"author":{"gitId":"Cuiminjing"},"content":"        int itemNumber \u003d parseValidIndex(rawItemNumber);","lastModifiedDate":"2021-11-06"},{"lineNumber":372,"author":{"gitId":"Cuiminjing"},"content":"        assert itemNumber \u003e\u003d 0 : \"Item number is negative.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":373,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":374,"author":{"gitId":"Cuiminjing"},"content":"        Command command;","lastModifiedDate":"2021-11-06"},{"lineNumber":375,"author":{"gitId":"Cuiminjing"},"content":"        command \u003d new DeleteItemCommand(tripName, dayNumber, itemNumber);","lastModifiedDate":"2021-11-06"},{"lineNumber":376,"author":{"gitId":"Cuiminjing"},"content":"        return command;","lastModifiedDate":"2021-11-06"},{"lineNumber":377,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":378,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":379,"author":{"gitId":"Cuiminjing"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":380,"author":{"gitId":"Cuiminjing"},"content":"     * Parses user input to give a \u003ccode\u003eSearchItemCommand\u003c/code\u003e.","lastModifiedDate":"2021-11-06"},{"lineNumber":381,"author":{"gitId":"Cuiminjing"},"content":"     * @param userInput Raw user input, with the first command option (search-item) removed.","lastModifiedDate":"2021-11-06"},{"lineNumber":382,"author":{"gitId":"Cuiminjing"},"content":"     * @return Command An \u003ccode\u003eSearchItemCommand\u003c/code\u003e object.","lastModifiedDate":"2021-11-06"},{"lineNumber":383,"author":{"gitId":"Cuiminjing"},"content":"     * @throws TravellerException Will be thrown if the user input cannot be understood.","lastModifiedDate":"2021-11-06"},{"lineNumber":384,"author":{"gitId":"Cuiminjing"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":385,"author":{"gitId":"Cuiminjing"},"content":"    private static Command parseSearchItemCommand(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-06"},{"lineNumber":386,"author":{"gitId":"Cuiminjing"},"content":"        logger.log(Level.INFO, \"Search command input\");","lastModifiedDate":"2021-11-06"},{"lineNumber":387,"author":{"gitId":"Cuiminjing"},"content":"        String tripName;","lastModifiedDate":"2021-11-06"},{"lineNumber":388,"author":{"gitId":"Cuiminjing"},"content":"        String rawDayNumber;","lastModifiedDate":"2021-11-06"},{"lineNumber":389,"author":{"gitId":"Cuiminjing"},"content":"        String keyword;","lastModifiedDate":"2021-11-06"},{"lineNumber":390,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":391,"author":{"gitId":"Cuiminjing"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":392,"author":{"gitId":"Cuiminjing"},"content":"            int dayIdx \u003d getDayFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":393,"author":{"gitId":"Cuiminjing"},"content":"            int keywordIdx \u003d getKeyFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":394,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":395,"author":{"gitId":"Cuiminjing"},"content":"            tripName \u003d parseFieldValue(userInput, 0, dayIdx);","lastModifiedDate":"2021-11-06"},{"lineNumber":396,"author":{"gitId":"Cuiminjing"},"content":"            rawDayNumber \u003d parseFieldValue(userInput, dayIdx + DAY_LENGTH, keywordIdx);","lastModifiedDate":"2021-11-06"},{"lineNumber":397,"author":{"gitId":"Cuiminjing"},"content":"            keyword \u003d parseFieldValue(userInput, keywordIdx + KEY_LENGTH, userInput.length());","lastModifiedDate":"2021-11-06"},{"lineNumber":398,"author":{"gitId":"Cuiminjing"},"content":"            assert !keyword.equals(\" \") : \"keyword should not be blank.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":399,"author":{"gitId":"Cuiminjing"},"content":"            assert !keyword.contains(\" \") : \"keyword should not be contain whitespace.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":400,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":401,"author":{"gitId":"Cuiminjing"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":402,"author":{"gitId":"Cuiminjing"},"content":"            throw new InvalidSearchItemFormatException();","lastModifiedDate":"2021-11-06"},{"lineNumber":403,"author":{"gitId":"Cuiminjing"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":404,"author":{"gitId":"Cuiminjing"},"content":"        int dayIndex \u003d parseValidIndex(rawDayNumber);","lastModifiedDate":"2021-11-06"},{"lineNumber":405,"author":{"gitId":"Cuiminjing"},"content":"        assert dayIndex \u003e\u003d 0 : \"Day index is negative.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":406,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":407,"author":{"gitId":"Cuiminjing"},"content":"        Command command \u003d new SearchItemCommand(tripName, dayIndex, keyword);","lastModifiedDate":"2021-11-06"},{"lineNumber":408,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":409,"author":{"gitId":"Cuiminjing"},"content":"        return command;","lastModifiedDate":"2021-11-06"},{"lineNumber":410,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":411,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":412,"author":{"gitId":"jach23"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":413,"author":{"gitId":"jach23"},"content":"     * Parses user input to give a \u003ccode\u003eViewCommand\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":414,"author":{"gitId":"jach23"},"content":"     * @return Command A \u003ccode\u003eViewCommand\u003c/code\u003e object.","lastModifiedDate":"2021-11-05"},{"lineNumber":415,"author":{"gitId":"jach23"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":416,"author":{"gitId":"jach23"},"content":"    private static Command parseViewCommand(String userInput) throws  TravellerException {","lastModifiedDate":"2021-11-05"},{"lineNumber":417,"author":{"gitId":"jach23"},"content":"        Command command;","lastModifiedDate":"2021-11-05"},{"lineNumber":418,"author":{"gitId":"jach23"},"content":"        logger.log(Level.INFO, \"View command input\");","lastModifiedDate":"2021-11-05"},{"lineNumber":419,"author":{"gitId":"jach23"},"content":"        String tripName \u003d parseFieldValue(userInput, 0, userInput.length());","lastModifiedDate":"2021-11-05"},{"lineNumber":420,"author":{"gitId":"jach23"},"content":"        command \u003d new ViewCommand(tripName);","lastModifiedDate":"2021-11-05"},{"lineNumber":421,"author":{"gitId":"jach23"},"content":"        return command;","lastModifiedDate":"2021-11-05"},{"lineNumber":422,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":423,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":424,"author":{"gitId":"jach23"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":425,"author":{"gitId":"jach23"},"content":"     * Parses user input to give an \u003ccode\u003eEditItemCommand\u003c/code\u003e.","lastModifiedDate":"2021-11-04"},{"lineNumber":426,"author":{"gitId":"jach23"},"content":"     * @param userInput Raw user input, with the first command option (edit-item) removed.","lastModifiedDate":"2021-11-04"},{"lineNumber":427,"author":{"gitId":"jach23"},"content":"     * @return Command An \u003ccode\u003eEditItemCommand\u003c/code\u003e object.","lastModifiedDate":"2021-11-04"},{"lineNumber":428,"author":{"gitId":"jach23"},"content":"     * @throws TravellerException Will be thrown if the user input cannot be understood.","lastModifiedDate":"2021-11-04"},{"lineNumber":429,"author":{"gitId":"jach23"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":430,"author":{"gitId":"conradwee"},"content":"    private static Command parseEditItemCommand(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-02"},{"lineNumber":431,"author":{"gitId":"conradwee"},"content":"        logger.log(Level.INFO, \"Edit-item command input\");","lastModifiedDate":"2021-11-02"},{"lineNumber":432,"author":{"gitId":"jach23"},"content":"        Command command;","lastModifiedDate":"2021-11-06"},{"lineNumber":433,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":434,"author":{"gitId":"jach23"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":435,"author":{"gitId":"jach23"},"content":"            String newTripEventTime \u003d \"\";","lastModifiedDate":"2021-11-06"},{"lineNumber":436,"author":{"gitId":"jach23"},"content":"            String newTripEventName \u003d \"\";","lastModifiedDate":"2021-11-06"},{"lineNumber":437,"author":{"gitId":"conradwee"},"content":"            String tripName;","lastModifiedDate":"2021-11-02"},{"lineNumber":438,"author":{"gitId":"conradwee"},"content":"            int itemIndex;","lastModifiedDate":"2021-11-02"},{"lineNumber":439,"author":{"gitId":"conradwee"},"content":"            String rawDayNumber;","lastModifiedDate":"2021-11-02"},{"lineNumber":440,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":441,"author":{"gitId":"jach23"},"content":"            int dayIndex \u003d getDayFlagIndex(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":442,"author":{"gitId":"jach23"},"content":"            tripName \u003d parseFieldValue(userInput, 0, dayIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":443,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":444,"author":{"gitId":"jach23"},"content":"            int indexIndex \u003d getIndexFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":445,"author":{"gitId":"jach23"},"content":"            rawDayNumber \u003d parseFieldValue(userInput, dayIndex + DAY_LENGTH, indexIndex);","lastModifiedDate":"2021-11-06"},{"lineNumber":446,"author":{"gitId":"jach23"},"content":"            itemIndex \u003d parseEditNewTripIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":447,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":448,"author":{"gitId":"jach23"},"content":"            int dayAsInteger \u003d parseValidIndex(rawDayNumber);","lastModifiedDate":"2021-11-06"},{"lineNumber":449,"author":{"gitId":"jach23"},"content":"            assert dayAsInteger \u003e\u003d 0 : \"Day index is negative.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":450,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":451,"author":{"gitId":"jach23"},"content":"            if (userInput.contains(\"/time\")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":452,"author":{"gitId":"jach23"},"content":"                newTripEventTime \u003d parseEditNewTripEventTime(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":453,"author":{"gitId":"jach23"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":454,"author":{"gitId":"jach23"},"content":"            if (userInput.contains(\"/name\")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":455,"author":{"gitId":"jach23"},"content":"                newTripEventName \u003d parseEditNewTripEventName(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":456,"author":{"gitId":"jach23"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":457,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":458,"author":{"gitId":"jach23"},"content":"            command \u003d new EditItemCommand(tripName, dayAsInteger, itemIndex,","lastModifiedDate":"2021-11-06"},{"lineNumber":459,"author":{"gitId":"jach23"},"content":"                    newTripEventTime, newTripEventName);","lastModifiedDate":"2021-11-06"},{"lineNumber":460,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":461,"author":{"gitId":"jach23"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":462,"author":{"gitId":"jach23"},"content":"            throw new InvalidEditItemFormatException();","lastModifiedDate":"2021-11-06"},{"lineNumber":463,"author":{"gitId":"jach23"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":464,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":465,"author":{"gitId":"jach23"},"content":"        return command;","lastModifiedDate":"2021-11-06"},{"lineNumber":466,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":467,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":468,"author":{"gitId":"jach23"},"content":"    private static int parseEditNewTripIndex(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-06"},{"lineNumber":469,"author":{"gitId":"jach23"},"content":"        int itemIndex;","lastModifiedDate":"2021-11-06"},{"lineNumber":470,"author":{"gitId":"jach23"},"content":"        String rawIndex \u003d \"\";","lastModifiedDate":"2021-11-06"},{"lineNumber":471,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":472,"author":{"gitId":"jach23"},"content":"        int indexIndex \u003d getIndexFlagIndex(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":473,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":474,"author":{"gitId":"jach23"},"content":"        if (userInput.contains(\"/time\")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":475,"author":{"gitId":"jach23"},"content":"            int timeIndex \u003d getTimeFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":476,"author":{"gitId":"jach23"},"content":"            rawIndex \u003d parseFieldValue(userInput, indexIndex + INDEX_LENGTH, timeIndex);","lastModifiedDate":"2021-11-06"},{"lineNumber":477,"author":{"gitId":"jach23"},"content":"        } else if (userInput.contains(\"/name\")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":478,"author":{"gitId":"jach23"},"content":"            assert !userInput.contains(\"/time\");","lastModifiedDate":"2021-11-06"},{"lineNumber":479,"author":{"gitId":"jach23"},"content":"            int nameIndex \u003d getNameFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":480,"author":{"gitId":"jach23"},"content":"            rawIndex \u003d parseFieldValue(userInput, indexIndex + INDEX_LENGTH, nameIndex);","lastModifiedDate":"2021-11-06"},{"lineNumber":481,"author":{"gitId":"jach23"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":482,"author":{"gitId":"jach23"},"content":"            assert !userInput.contains(\"/name\") \u0026\u0026 !userInput.contains(\"/time\");","lastModifiedDate":"2021-11-06"},{"lineNumber":483,"author":{"gitId":"jach23"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":484,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":485,"author":{"gitId":"conradwee"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":486,"author":{"gitId":"conradwee"},"content":"            itemIndex \u003d Integer.parseInt(rawIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":487,"author":{"gitId":"conradwee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":488,"author":{"gitId":"jach23"},"content":"            throw new InvalidEditItemIndexException(rawIndex);","lastModifiedDate":"2021-11-06"},{"lineNumber":489,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":490,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":491,"author":{"gitId":"jach23"},"content":"        return itemIndex;","lastModifiedDate":"2021-11-06"},{"lineNumber":492,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":493,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":494,"author":{"gitId":"jach23"},"content":"    private static String parseEditNewTripEventTime(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-06"},{"lineNumber":495,"author":{"gitId":"jach23"},"content":"        int fromIndex \u003d getTimeFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":496,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":497,"author":{"gitId":"jach23"},"content":"        String itemTime;","lastModifiedDate":"2021-11-06"},{"lineNumber":498,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":499,"author":{"gitId":"jach23"},"content":"        if (userInput.contains(\"/name\")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":500,"author":{"gitId":"jach23"},"content":"            int nameIndex \u003d getNameFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":501,"author":{"gitId":"jach23"},"content":"            itemTime \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-06"},{"lineNumber":502,"author":{"gitId":"jach23"},"content":"                    fromIndex + TIME_LENGTH, nameIndex);","lastModifiedDate":"2021-11-06"},{"lineNumber":503,"author":{"gitId":"jach23"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":504,"author":{"gitId":"jach23"},"content":"            assert (!userInput.contains(\"/name\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":505,"author":{"gitId":"jach23"},"content":"            itemTime \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-06"},{"lineNumber":506,"author":{"gitId":"jach23"},"content":"                    fromIndex + TIME_LENGTH, userInput.length());","lastModifiedDate":"2021-11-06"},{"lineNumber":507,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":508,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":509,"author":{"gitId":"conradwee"},"content":"        parseValidTime(itemTime);","lastModifiedDate":"2021-11-02"},{"lineNumber":510,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":511,"author":{"gitId":"jach23"},"content":"        return itemTime;","lastModifiedDate":"2021-11-06"},{"lineNumber":512,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":513,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":514,"author":{"gitId":"jach23"},"content":"    private static String parseEditNewTripEventName(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-06"},{"lineNumber":515,"author":{"gitId":"jach23"},"content":"        int nameIndex \u003d getNameFlagIndex(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":516,"author":{"gitId":"jach23"},"content":"        String itemName;","lastModifiedDate":"2021-11-06"},{"lineNumber":517,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":518,"author":{"gitId":"jach23"},"content":"        itemName \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-06"},{"lineNumber":519,"author":{"gitId":"jach23"},"content":"                nameIndex + NAME_LENGTH, userInput.length());","lastModifiedDate":"2021-11-06"},{"lineNumber":520,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":521,"author":{"gitId":"jach23"},"content":"        return itemName;","lastModifiedDate":"2021-11-06"},{"lineNumber":522,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":523,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":524,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":525,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":526,"author":{"gitId":"jach23"},"content":"     * Parses user input to give an \u003ccode\u003eAddDayCommand\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":527,"author":{"gitId":"jach23"},"content":"     * @param userInput Raw user input, with the first command option (add-day) removed.","lastModifiedDate":"2021-11-05"},{"lineNumber":528,"author":{"gitId":"jach23"},"content":"     * @return Command An \u003ccode\u003eAddDayCommand\u003c/code\u003e object.","lastModifiedDate":"2021-11-05"},{"lineNumber":529,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":530,"author":{"gitId":"jach23"},"content":"    private static Command parseAddDayCommand(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-05"},{"lineNumber":531,"author":{"gitId":"jach23"},"content":"        logger.log(Level.INFO, \"Add-day command input\");","lastModifiedDate":"2021-11-05"},{"lineNumber":532,"author":{"gitId":"jach23"},"content":"        String tripName;","lastModifiedDate":"2021-11-05"},{"lineNumber":533,"author":{"gitId":"jach23"},"content":"        String rawDaysIndex;","lastModifiedDate":"2021-11-05"},{"lineNumber":534,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":535,"author":{"gitId":"jach23"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":536,"author":{"gitId":"jach23"},"content":"            int dayIdx \u003d getDayFlagIndex(userInput);","lastModifiedDate":"2021-11-05"},{"lineNumber":537,"author":{"gitId":"jach23"},"content":"            tripName \u003d parseFieldValue(userInput, 0, dayIdx);","lastModifiedDate":"2021-11-05"},{"lineNumber":538,"author":{"gitId":"jach23"},"content":"            rawDaysIndex \u003d parseFieldValue(userInput, dayIdx + DAY_LENGTH, userInput.length());","lastModifiedDate":"2021-11-05"},{"lineNumber":539,"author":{"gitId":"jach23"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":540,"author":{"gitId":"jach23"},"content":"            logger.log(Level.WARNING, \"Invalid add-day command format: \" + userInput);","lastModifiedDate":"2021-11-05"},{"lineNumber":541,"author":{"gitId":"jach23"},"content":"            throw new InvalidAddDayFormatException();","lastModifiedDate":"2021-11-05"},{"lineNumber":542,"author":{"gitId":"jach23"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":543,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":544,"author":{"gitId":"jach23"},"content":"        int daysIndex \u003d parseValidIndex(rawDaysIndex);","lastModifiedDate":"2021-11-05"},{"lineNumber":545,"author":{"gitId":"jach23"},"content":"        if (daysIndex \u003d\u003d 0) {","lastModifiedDate":"2021-11-05"},{"lineNumber":546,"author":{"gitId":"jach23"},"content":"            throw new InvalidNumberOfDaysException(daysIndex);","lastModifiedDate":"2021-11-05"},{"lineNumber":547,"author":{"gitId":"jach23"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":548,"author":{"gitId":"jach23"},"content":"        assert daysIndex \u003e 0 : \"Number of days is negative or 0.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":549,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":550,"author":{"gitId":"conradwee"},"content":"        Command command;","lastModifiedDate":"2021-11-02"},{"lineNumber":551,"author":{"gitId":"jach23"},"content":"        command \u003d new AddDayCommand(tripName, daysIndex);","lastModifiedDate":"2021-11-05"},{"lineNumber":552,"author":{"gitId":"conradwee"},"content":"        return command;","lastModifiedDate":"2021-11-02"},{"lineNumber":553,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":554,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":555,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":556,"author":{"gitId":"conradwee"},"content":"     * Parses user input to give a \u003ccode\u003eShortestCommand\u003c/code\u003e.","lastModifiedDate":"2021-11-02"},{"lineNumber":557,"author":{"gitId":"jach23"},"content":"     * @param userInput Raw user input, with the first command option (shortest-dist) removed.","lastModifiedDate":"2021-11-04"},{"lineNumber":558,"author":{"gitId":"jach23"},"content":"     * @return Command A \u003ccode\u003eShortestCommand\u003c/code\u003e object with in-built tag \"dist\"","lastModifiedDate":"2021-11-04"},{"lineNumber":559,"author":{"gitId":"conradwee"},"content":"     * @throws TravellerException Will be thrown if the user input cannot be understood.","lastModifiedDate":"2021-11-02"},{"lineNumber":560,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":561,"author":{"gitId":"Uxinnn"},"content":"    private static Command parseShortestTimeCommand(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-04"},{"lineNumber":562,"author":{"gitId":"conradwee"},"content":"        logger.log(Level.INFO, \"Search command input\");","lastModifiedDate":"2021-11-02"},{"lineNumber":563,"author":{"gitId":"conradwee"},"content":"        Command command;","lastModifiedDate":"2021-11-02"},{"lineNumber":564,"author":{"gitId":"conradwee"},"content":"        String startCountryCode;","lastModifiedDate":"2021-11-02"},{"lineNumber":565,"author":{"gitId":"conradwee"},"content":"        String endCountryCode;","lastModifiedDate":"2021-11-02"},{"lineNumber":566,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":567,"author":{"gitId":"jach23"},"content":"        int fromIndex \u003d getFromFlagIndex(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":568,"author":{"gitId":"jach23"},"content":"        int toIndex \u003d getToFlagIndex(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":569,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":570,"author":{"gitId":"conradwee"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":571,"author":{"gitId":"conradwee"},"content":"            startCountryCode \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-02"},{"lineNumber":572,"author":{"gitId":"jach23"},"content":"                    fromIndex + FROM_LENGTH, toIndex).toUpperCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":573,"author":{"gitId":"conradwee"},"content":"            endCountryCode \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-02"},{"lineNumber":574,"author":{"gitId":"jach23"},"content":"                    toIndex + TO_LENGTH, userInput.length()).toUpperCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":575,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":576,"author":{"gitId":"jach23"},"content":"            WorldMap.getValidCountry(startCountryCode);","lastModifiedDate":"2021-11-06"},{"lineNumber":577,"author":{"gitId":"jach23"},"content":"            WorldMap.getValidCountry(endCountryCode);","lastModifiedDate":"2021-11-06"},{"lineNumber":578,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":579,"author":{"gitId":"conradwee"},"content":"            assert !startCountryCode.contains(\" \") : \"startCountryCode should not contain whitespaces.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":580,"author":{"gitId":"conradwee"},"content":"            assert !endCountryCode.contains(\" \") : \"endCountryCode should not contain whitespaces.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":581,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":582,"author":{"gitId":"Uxinnn"},"content":"            command \u003d new ShortestCommand(\"time\", startCountryCode, endCountryCode);","lastModifiedDate":"2021-11-04"},{"lineNumber":583,"author":{"gitId":"conradwee"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":584,"author":{"gitId":"Uxinnn"},"content":"            throw new InvalidShortestTimeException();","lastModifiedDate":"2021-11-04"},{"lineNumber":585,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":586,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":587,"author":{"gitId":"conradwee"},"content":"        return command;","lastModifiedDate":"2021-11-02"},{"lineNumber":588,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":589,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":590,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":591,"author":{"gitId":"conradwee"},"content":"     * Parses user input to give a \u003ccode\u003eShortestCommand\u003c/code\u003e.","lastModifiedDate":"2021-11-02"},{"lineNumber":592,"author":{"gitId":"jach23"},"content":"     * @param userInput Raw user input, with the first command option (shortest-cost) removed.","lastModifiedDate":"2021-11-04"},{"lineNumber":593,"author":{"gitId":"jach23"},"content":"     * @return Command A \u003ccode\u003eShortestCommand\u003c/code\u003e object with in-built tag \"cost\"","lastModifiedDate":"2021-11-04"},{"lineNumber":594,"author":{"gitId":"conradwee"},"content":"     * @throws TravellerException Will be thrown if the user input cannot be understood.","lastModifiedDate":"2021-11-02"},{"lineNumber":595,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":596,"author":{"gitId":"conradwee"},"content":"    private static Command parseShortestCostCommand(String userInput) throws TravellerException {","lastModifiedDate":"2021-11-02"},{"lineNumber":597,"author":{"gitId":"conradwee"},"content":"        logger.log(Level.INFO, \"Search command input\");","lastModifiedDate":"2021-11-02"},{"lineNumber":598,"author":{"gitId":"conradwee"},"content":"        Command command;","lastModifiedDate":"2021-11-02"},{"lineNumber":599,"author":{"gitId":"conradwee"},"content":"        String startCountryCode;","lastModifiedDate":"2021-11-02"},{"lineNumber":600,"author":{"gitId":"conradwee"},"content":"        String endCountryCode;","lastModifiedDate":"2021-11-02"},{"lineNumber":601,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":602,"author":{"gitId":"jach23"},"content":"        int fromIndex \u003d getFromFlagIndex(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":603,"author":{"gitId":"jach23"},"content":"        int toIndex \u003d getToFlagIndex(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":604,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":605,"author":{"gitId":"jach23"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":606,"author":{"gitId":"jach23"},"content":"            startCountryCode \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-04"},{"lineNumber":607,"author":{"gitId":"jach23"},"content":"                    fromIndex + FROM_LENGTH, toIndex).toUpperCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":608,"author":{"gitId":"jach23"},"content":"            endCountryCode \u003d parseFieldValue(userInput,","lastModifiedDate":"2021-11-04"},{"lineNumber":609,"author":{"gitId":"jach23"},"content":"                    toIndex + TO_LENGTH, userInput.length()).toUpperCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":610,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":611,"author":{"gitId":"jach23"},"content":"            WorldMap.getValidCountry(startCountryCode);","lastModifiedDate":"2021-11-06"},{"lineNumber":612,"author":{"gitId":"jach23"},"content":"            WorldMap.getValidCountry(endCountryCode);","lastModifiedDate":"2021-11-06"},{"lineNumber":613,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":614,"author":{"gitId":"conradwee"},"content":"            assert !startCountryCode.contains(\" \") : \"startCountryCode should not contain whitespaces.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":615,"author":{"gitId":"conradwee"},"content":"            assert !endCountryCode.contains(\" \") : \"endCountryCode should not contain whitespaces.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":616,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":617,"author":{"gitId":"conradwee"},"content":"            command \u003d new ShortestCommand(\"cost\", startCountryCode, endCountryCode);","lastModifiedDate":"2021-11-02"},{"lineNumber":618,"author":{"gitId":"conradwee"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":619,"author":{"gitId":"conradwee"},"content":"            throw new InvalidShortestCostException();","lastModifiedDate":"2021-11-02"},{"lineNumber":620,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":621,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":622,"author":{"gitId":"conradwee"},"content":"        return command;","lastModifiedDate":"2021-11-02"},{"lineNumber":623,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":624,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":625,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":626,"author":{"gitId":"conradwee"},"content":"     * Parses user input to give an \u003ccode\u003eExitCommand\u003c/code\u003e.","lastModifiedDate":"2021-11-02"},{"lineNumber":627,"author":{"gitId":"conradwee"},"content":"     * @return Command An \u003ccode\u003eExitCommand\u003c/code\u003e object.","lastModifiedDate":"2021-11-02"},{"lineNumber":628,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":629,"author":{"gitId":"conradwee"},"content":"    private static Command parseExitCommand() {","lastModifiedDate":"2021-11-02"},{"lineNumber":630,"author":{"gitId":"conradwee"},"content":"        logger.log(Level.INFO, \"Exit command input\");","lastModifiedDate":"2021-11-02"},{"lineNumber":631,"author":{"gitId":"conradwee"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-11-02"},{"lineNumber":632,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":633,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":634,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":635,"author":{"gitId":"conradwee"},"content":"     * Launches help menu.","lastModifiedDate":"2021-11-02"},{"lineNumber":636,"author":{"gitId":"conradwee"},"content":"     * @return Command An \u003ccode\u003eExitCommand\u003c/code\u003e object.","lastModifiedDate":"2021-11-02"},{"lineNumber":637,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":638,"author":{"gitId":"conradwee"},"content":"    private static Command parseHelpCommand() {","lastModifiedDate":"2021-11-02"},{"lineNumber":639,"author":{"gitId":"conradwee"},"content":"        logger.log(Level.INFO, \"Help command input\");","lastModifiedDate":"2021-11-02"},{"lineNumber":640,"author":{"gitId":"conradwee"},"content":"        return new HelpCommand();","lastModifiedDate":"2021-11-02"},{"lineNumber":641,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":642,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":643,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":644,"author":{"gitId":"conradwee"},"content":"     * Parses a field value to remove leading and trailing whitespaces and check for validity.","lastModifiedDate":"2021-11-02"},{"lineNumber":645,"author":{"gitId":"conradwee"},"content":"     * @param userInput Raw string that the user has entered.","lastModifiedDate":"2021-11-02"},{"lineNumber":646,"author":{"gitId":"conradwee"},"content":"     * @param startFieldIndex Start index of the field value in \u003ccode\u003euserInput\u003c/code\u003e.","lastModifiedDate":"2021-11-02"},{"lineNumber":647,"author":{"gitId":"conradwee"},"content":"     * @param endFieldIndex End index of the field value in \u003ccode\u003euserInput\u003c/code\u003e.","lastModifiedDate":"2021-11-02"},{"lineNumber":648,"author":{"gitId":"conradwee"},"content":"     * @return The processes field value.","lastModifiedDate":"2021-11-02"},{"lineNumber":649,"author":{"gitId":"conradwee"},"content":"     * @throws TravellerException Thrown if the field value is an empty string.","lastModifiedDate":"2021-11-02"},{"lineNumber":650,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":651,"author":{"gitId":"conradwee"},"content":"    private static String parseFieldValue(String userInput, int startFieldIndex, int endFieldIndex)","lastModifiedDate":"2021-11-02"},{"lineNumber":652,"author":{"gitId":"conradwee"},"content":"            throws TravellerException {","lastModifiedDate":"2021-11-02"},{"lineNumber":653,"author":{"gitId":"conradwee"},"content":"        String fieldValue \u003d userInput.substring(startFieldIndex, endFieldIndex).trim();","lastModifiedDate":"2021-11-02"},{"lineNumber":654,"author":{"gitId":"conradwee"},"content":"        if (Objects.equals(fieldValue, \"\")) {","lastModifiedDate":"2021-11-02"},{"lineNumber":655,"author":{"gitId":"conradwee"},"content":"            throw new EmptyFieldValueException();","lastModifiedDate":"2021-11-02"},{"lineNumber":656,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":657,"author":{"gitId":"conradwee"},"content":"        return fieldValue;","lastModifiedDate":"2021-11-02"},{"lineNumber":658,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":659,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":660,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":661,"author":{"gitId":"conradwee"},"content":"     * Used to check if a user input value for the day/item field is valid.","lastModifiedDate":"2021-11-02"},{"lineNumber":662,"author":{"gitId":"conradwee"},"content":"     * @param rawIndex Raw day/item index as inputted by user.","lastModifiedDate":"2021-11-02"},{"lineNumber":663,"author":{"gitId":"conradwee"},"content":"     * @return Day/Item index as an integer.","lastModifiedDate":"2021-11-02"},{"lineNumber":664,"author":{"gitId":"conradwee"},"content":"     * @throws TravellerException If \u003ccode\u003erawIndex\u003c/code\u003e is not an integer or is negative.","lastModifiedDate":"2021-11-02"},{"lineNumber":665,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":666,"author":{"gitId":"conradwee"},"content":"    private static int parseValidIndex(String rawIndex) throws TravellerException {","lastModifiedDate":"2021-11-02"},{"lineNumber":667,"author":{"gitId":"conradwee"},"content":"        int index;","lastModifiedDate":"2021-11-02"},{"lineNumber":668,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":669,"author":{"gitId":"conradwee"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":670,"author":{"gitId":"conradwee"},"content":"            index \u003d Integer.parseInt(rawIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":671,"author":{"gitId":"conradwee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":672,"author":{"gitId":"conradwee"},"content":"            throw new InvalidNumberOfDaysException(rawIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":673,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":674,"author":{"gitId":"conradwee"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":675,"author":{"gitId":"conradwee"},"content":"            throw new InvalidNumberOfDaysException(index);","lastModifiedDate":"2021-11-02"},{"lineNumber":676,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":677,"author":{"gitId":"conradwee"},"content":"        return index;","lastModifiedDate":"2021-11-02"},{"lineNumber":678,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":679,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":680,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":681,"author":{"gitId":"conradwee"},"content":"     * Used to check if a user input value for the time field is valid.","lastModifiedDate":"2021-11-02"},{"lineNumber":682,"author":{"gitId":"conradwee"},"content":"     * @param rawTime Raw time as inputted by user.","lastModifiedDate":"2021-11-02"},{"lineNumber":683,"author":{"gitId":"conradwee"},"content":"     * @throws TravellerException If \u003ccode\u003erawTime\u003c/code\u003e is not a 4 digit integer between 0000 and 2359 inclusive.","lastModifiedDate":"2021-11-02"},{"lineNumber":684,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":685,"author":{"gitId":"conradwee"},"content":"    private static void parseValidTime(String rawTime) throws TravellerException {","lastModifiedDate":"2021-11-02"},{"lineNumber":686,"author":{"gitId":"conradwee"},"content":"        int timeInteger;","lastModifiedDate":"2021-11-02"},{"lineNumber":687,"author":{"gitId":"conradwee"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":688,"author":{"gitId":"conradwee"},"content":"            timeInteger \u003d Integer.parseInt(rawTime);","lastModifiedDate":"2021-11-02"},{"lineNumber":689,"author":{"gitId":"conradwee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":690,"author":{"gitId":"conradwee"},"content":"            throw new IllegalTimeFormatException(rawTime);","lastModifiedDate":"2021-11-02"},{"lineNumber":691,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":692,"author":{"gitId":"conradwee"},"content":"        if (rawTime.length() !\u003d 4) {","lastModifiedDate":"2021-11-02"},{"lineNumber":693,"author":{"gitId":"conradwee"},"content":"            throw new IllegalTimeValueException(rawTime);","lastModifiedDate":"2021-11-02"},{"lineNumber":694,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":695,"author":{"gitId":"conradwee"},"content":"        if (timeInteger \u003c 0 || timeInteger \u003e 2359) {","lastModifiedDate":"2021-11-02"},{"lineNumber":696,"author":{"gitId":"conradwee"},"content":"            throw new IllegalTimeValueException(rawTime);","lastModifiedDate":"2021-11-02"},{"lineNumber":697,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":698,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":699,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":700,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":701,"author":{"gitId":"conradwee"},"content":"     * Used to check if a user input value for the tripName field is valid.","lastModifiedDate":"2021-11-02"},{"lineNumber":702,"author":{"gitId":"conradwee"},"content":"     * @param tripName TripName that user has entered.","lastModifiedDate":"2021-11-02"},{"lineNumber":703,"author":{"gitId":"conradwee"},"content":"     * @throws TravellerException If \u003ccode\u003eTripName\u003c/code\u003e is not a valid \u003ccode\u003eTripName\u003c/code\u003e.","lastModifiedDate":"2021-11-02"},{"lineNumber":704,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":705,"author":{"gitId":"conradwee"},"content":"    private static void parseValidTripName(String tripName) throws TravellerException {","lastModifiedDate":"2021-11-02"},{"lineNumber":706,"author":{"gitId":"conradwee"},"content":"        if (tripName.equals(\"all\")) {","lastModifiedDate":"2021-11-02"},{"lineNumber":707,"author":{"gitId":"conradwee"},"content":"            throw new IllegalTripNameException(tripName);","lastModifiedDate":"2021-11-02"},{"lineNumber":708,"author":{"gitId":"conradwee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":709,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":710,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":711,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":712,"author":{"gitId":"conradwee"},"content":"     * Used to parse flags in raw user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":713,"author":{"gitId":"conradwee"},"content":"     * @param userInput Input string which contains /from flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":714,"author":{"gitId":"conradwee"},"content":"     * @return Starting index of /from flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":715,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":716,"author":{"gitId":"conradwee"},"content":"    private static int getFromFlagIndex(String userInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":717,"author":{"gitId":"conradwee"},"content":"        String fromSeparator \u003d \" /from \";","lastModifiedDate":"2021-11-02"},{"lineNumber":718,"author":{"gitId":"conradwee"},"content":"        return userInput.indexOf(fromSeparator);","lastModifiedDate":"2021-11-02"},{"lineNumber":719,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":720,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":721,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":722,"author":{"gitId":"conradwee"},"content":"     * Used to parse flags in raw user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":723,"author":{"gitId":"conradwee"},"content":"     * @param userInput Input string which contains /to flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":724,"author":{"gitId":"conradwee"},"content":"     * @return Starting index of /to flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":725,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":726,"author":{"gitId":"conradwee"},"content":"    private static int getToFlagIndex(String userInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":727,"author":{"gitId":"conradwee"},"content":"        String toSeparator \u003d \" /to \";","lastModifiedDate":"2021-11-02"},{"lineNumber":728,"author":{"gitId":"conradwee"},"content":"        return userInput.indexOf(toSeparator);","lastModifiedDate":"2021-11-02"},{"lineNumber":729,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":730,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":731,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":732,"author":{"gitId":"conradwee"},"content":"     * Used to parse flags in raw user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":733,"author":{"gitId":"conradwee"},"content":"     * @param userInput Input string which contains /day flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":734,"author":{"gitId":"conradwee"},"content":"     * @return Starting index of /day flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":735,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":736,"author":{"gitId":"conradwee"},"content":"    private static int getDayFlagIndex(String userInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":737,"author":{"gitId":"conradwee"},"content":"        String daySeparator \u003d \" /day \";","lastModifiedDate":"2021-11-02"},{"lineNumber":738,"author":{"gitId":"conradwee"},"content":"        return userInput.indexOf(daySeparator);","lastModifiedDate":"2021-11-02"},{"lineNumber":739,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":740,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":741,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":742,"author":{"gitId":"conradwee"},"content":"     * Used to parse flags in raw user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":743,"author":{"gitId":"conradwee"},"content":"     * @param userInput Input string which contains /time flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":744,"author":{"gitId":"conradwee"},"content":"     * @return Starting index of /time flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":745,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":746,"author":{"gitId":"conradwee"},"content":"    private static int getTimeFlagIndex(String userInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":747,"author":{"gitId":"conradwee"},"content":"        String timeSeparator \u003d \" /time \";","lastModifiedDate":"2021-11-02"},{"lineNumber":748,"author":{"gitId":"conradwee"},"content":"        return userInput.indexOf(timeSeparator);","lastModifiedDate":"2021-11-02"},{"lineNumber":749,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":750,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":751,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":752,"author":{"gitId":"conradwee"},"content":"     * Used to parse flags in raw user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":753,"author":{"gitId":"conradwee"},"content":"     * @param userInput Input string which contains /name flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":754,"author":{"gitId":"conradwee"},"content":"     * @return Starting index of /name flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":755,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":756,"author":{"gitId":"conradwee"},"content":"    private static int getNameFlagIndex(String userInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":757,"author":{"gitId":"conradwee"},"content":"        String nameSeparator \u003d \" /name \";","lastModifiedDate":"2021-11-02"},{"lineNumber":758,"author":{"gitId":"conradwee"},"content":"        return userInput.indexOf(nameSeparator);","lastModifiedDate":"2021-11-02"},{"lineNumber":759,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":760,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":761,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":762,"author":{"gitId":"conradwee"},"content":"     * Used to parse flags in raw user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":763,"author":{"gitId":"conradwee"},"content":"     * @param userInput Input string which contains /item flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":764,"author":{"gitId":"conradwee"},"content":"     * @return Starting index of /item flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":765,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":766,"author":{"gitId":"conradwee"},"content":"    private static int getItemFlagIndex(String userInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":767,"author":{"gitId":"conradwee"},"content":"        String itemSeparator \u003d \" /item \";","lastModifiedDate":"2021-11-02"},{"lineNumber":768,"author":{"gitId":"conradwee"},"content":"        return userInput.indexOf(itemSeparator);","lastModifiedDate":"2021-11-02"},{"lineNumber":769,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":770,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":771,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":772,"author":{"gitId":"conradwee"},"content":"     * Used to parse flags in raw user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":773,"author":{"gitId":"conradwee"},"content":"     * @param userInput Input string which contains /key flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":774,"author":{"gitId":"conradwee"},"content":"     * @return Starting index of /key flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":775,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":776,"author":{"gitId":"conradwee"},"content":"    private static int getKeyFlagIndex(String userInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":777,"author":{"gitId":"conradwee"},"content":"        String keywordSeparator \u003d \" /key \";","lastModifiedDate":"2021-11-02"},{"lineNumber":778,"author":{"gitId":"conradwee"},"content":"        return userInput.indexOf(keywordSeparator);","lastModifiedDate":"2021-11-02"},{"lineNumber":779,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":780,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":781,"author":{"gitId":"conradwee"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":782,"author":{"gitId":"conradwee"},"content":"     * Used to parse flags in raw user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":783,"author":{"gitId":"conradwee"},"content":"     * @param userInput Input string which contains /index flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":784,"author":{"gitId":"conradwee"},"content":"     * @return Starting index of /index flag.","lastModifiedDate":"2021-11-02"},{"lineNumber":785,"author":{"gitId":"conradwee"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":786,"author":{"gitId":"conradwee"},"content":"    private static int getIndexFlagIndex(String userInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":787,"author":{"gitId":"conradwee"},"content":"        String indexSeparator \u003d \" /index \";","lastModifiedDate":"2021-11-02"},{"lineNumber":788,"author":{"gitId":"conradwee"},"content":"        return userInput.indexOf(indexSeparator);","lastModifiedDate":"2021-11-02"},{"lineNumber":789,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":790,"author":{"gitId":"conradwee"},"content":"}","lastModifiedDate":"2021-11-02"},{"lineNumber":791,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"conradwee":419,"gavienwz":81,"jach23":140,"Uxinnn":6,"Cuiminjing":145}},{"path":"src/main/java/seedu/traveller/Traveller.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.save.SaveLoader;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.commands.Command;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.WorldMap;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":" * Main class of the whole Traveller application.","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"public class Traveller {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    private final Ui ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    private final TripsList tripsList;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"gavienwz"},"content":"    private static SaveLoader save;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    public Traveller() {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"        tripsList \u003d new TripsList();","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"gavienwz"},"content":"        save \u003d new SaveLoader(tripsList, ui);","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    public void run() {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        ui.printWelcome();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"            try {","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"                ui.printLine();","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"                c.execute(tripsList, ui);","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"                isExit \u003d c.getExit();","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"            } catch (TravellerException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"            } finally {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"                ui.printLine();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"gavienwz"},"content":"            save.writeSave(\"run\");","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"        Traveller traveller \u003d new Traveller();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"        WorldMap.initWorldMap();","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"gavienwz"},"content":"        save.readSave();","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"        traveller.run();","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"gavienwz"},"content":"        save.writeSave(\"exit\");","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"gavienwz":6,"Uxinnn":47}},{"path":"src/main/java/seedu/traveller/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Item;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Trip;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"jach23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"jach23"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":" * Contains all functions that is used to print output to the user\u0027s console.","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"public class Ui {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    private static final Logger logger \u003d Logger.getLogger(Ui.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    public Ui() {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.FINE, \"Created a ui\");","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"    public String readCommand() {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"    public void printWelcome() {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"        String logo \u003d \"  ______                      ____         \\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"                + \" /_  __/________ __   _____  / / /__  _____\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"                + \"  / / / ___/ __ `/ | / / _ \\\\/ / / _ \\\\/ ___/\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"                + \" / / / /  / /_/ /| |/ /  __/ / /  __/ /    \\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"                + \"/_/ /_/   \\\\__,_/ |___/\\\\___/_/_/\\\\___/_/     \\n\";","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"Your one stop travel planner.\\n\");","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"    public void printLine() {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"    public void printError(String errorMessage) {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"    public void printTrip(Trip trip) {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"        assert !trip.getTripName().equals(\"all\") : \"\u0027all\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"        assert !trip.getTripName().equals(\"\") : \"\u0027\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(trip);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"    public void printAllTrips(TripsList tripsList) throws TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"        assert tripsList.getSize() \u003e 0 : \"There are no trips in the tripsList.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tHere are all your trips: \");","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"        for (int i \u003d 0; i \u003c tripsList.getSize(); i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"            Trip trip \u003d tripsList.getTrip(i);","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"            printTrip(trip);","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"    public void printExit() {","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tBye! Have fun on your trips! :)\");","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"    public void printNewTripCreated(String tripName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"all\") : \"\u0027all\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"\") : \"\u0027\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tYou have just created a new trip called \" + tripName + \".\");","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"Cuiminjing"},"content":"    public void printDelete(String tripName) {","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"Cuiminjing"},"content":"        System.out.println(\"\\tYou have just deleted a trip called \" + tripName + \".\");","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Cuiminjing"},"content":"    public void printDeleteDay(String tripName, int index) {","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tYou have just deleted day \" + index + \" of \" + tripName + \".\");","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"Cuiminjing"},"content":"    public void printDeleteItem(String tripName, int dayIndex, int itemIndex) {","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tYou have just deleted item \" + itemIndex + \" of \" + tripName + \" day \" + dayIndex + \".\");","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"jach23"},"content":"    public void printSearchItem(String tripName, int dayIndex, String itemKey, ArrayList\u003cItem\u003e keyString) {","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"jach23"},"content":"        System.out.println(\"\\tYou have just search item keyword \" + itemKey","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"jach23"},"content":"                + \" on day \" + dayIndex + \" in trip called \" + tripName + \"\\n\");","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"jach23"},"content":"        System.out.println(\"\\tResults: \");","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"jach23"},"content":"        if (keyString.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"jach23"},"content":"            System.out.println(\"\\tThere are no results found.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"jach23"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"jach23"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"jach23"},"content":"            for (Item key : keyString) {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"jach23"},"content":"                System.out.println(\"\\t\" + i++ + \". \" + key);","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"jach23"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"jach23"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"jach23"},"content":"    public void printEditItem(String tripName, int dayIndex, String itemName, String itemTime, int itemIndex) {","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"jach23"},"content":"        System.out.println(\"\\tYou have just edited item \" + itemIndex  + \" on day \" + dayIndex","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"Uxinnn"},"content":"                + \" of \" + tripName + \" to \" + itemName + \" at \" + itemTime + \".\");","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"gavienwz"},"content":"    public void printEdit(String tripName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"gavienwz"},"content":"        System.out.println(\"\\tYou have just edited a trip called \" + tripName + \".\");","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Uxinnn"},"content":"    public void printShortestTime(String startCountry, String endCountry, double totalTime, List\u003cDouble\u003e time) {","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tThe shortest time from \" + startCountry","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"Uxinnn"},"content":"                + \" to \" + endCountry + \" is \" + totalTime + \".\");","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tTime breakdown: \");","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"Uxinnn"},"content":"        for (Double d : time) {","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"jach23"},"content":"            System.out.println(\"\\t\" + d);","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"jach23"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"jach23"},"content":"    public void printShortestCost(String startCountry, String endCountry, double cost, List\u003cDouble\u003e costs) {","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"jach23"},"content":"        System.out.println(\"\\tThe least cost from \" + startCountry + \" to \" + endCountry + \" is \" + cost + \".\");","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"jach23"},"content":"        System.out.println(\"\\tCost breakdown: \");","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"jach23"},"content":"        for (Double c : costs) {","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"jach23"},"content":"            System.out.println(\"\\t\" + c);","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"jach23"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"Uxinnn"},"content":"    public void printAddDayToTrip(String tripName, int numberOfDays) {","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"Uxinnn"},"content":"        assert numberOfDays \u003e\u003d 0 : \"Number of days is negative.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"all\") : \"\u0027all\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"\") : \"\u0027\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tAdded \" + numberOfDays + \" days to trip \" + tripName + \".\");","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"Uxinnn"},"content":"    public void printAddItemToDay(String tripName, int dayIndex) {","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"Uxinnn"},"content":"        assert dayIndex \u003e\u003d 0 : \"Number of days is negative.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"all\") : \"\u0027all\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"\") : \"\u0027\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tAdded a new item to day \" + dayIndex + \" of trip \" + tripName + \".\");","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"gavienwz"},"content":"    public void printReadSave() {","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"gavienwz"},"content":"        System.out.println(\"Now reading save data.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"gavienwz"},"content":"    public void printWriteSave() {","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"gavienwz"},"content":"        System.out.println(\"\\tNow saving all your trips.\");","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"conradwee"},"content":"    public void printHelp() {","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"conradwee"},"content":"        System.out.println(\"\\tSome of our basic commands are:\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"conradwee"},"content":"                + \"\\tnew FamilyTrip2021 /from SIN /to MLY : \"","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"conradwee"},"content":"                + \"\\n\\tAdds a new trip called FamilyTrip2021 from Singapore \"","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"conradwee"},"content":"                + \"(SIN) to Malaysia (MLY).\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"conradwee"},"content":"                + \"\\tadd-day myTrip 3 : \"","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"conradwee"},"content":"                + \"Adds 3 days to trip myTrip.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"conradwee"},"content":"                + \"\\tadd-item trip1 /day 0 /time 7pm /name Check-in to HolidayInn : \"","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"conradwee"},"content":"                + \"\\n\\tAdds item Check-in to HolidayInn to day 0 of trip1.\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":161,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"conradwee"},"content":"                + \"\\tview FamilyTrip2021: Views your trip named FamilyTrip2021 and their detail.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"conradwee"},"content":"                + \"\\tdelete FamilyTrip2021 : Deletes the trip called FamilyTrip2021.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"conradwee"},"content":"                + \"\\tdelete-day myTrip /day 0 : \"","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"conradwee"},"content":"                + \"Deletes day 0 of myTrip.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"conradwee"},"content":"                + \"\\tdelete-item myTrip /day 0 /item 0 : \"","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"conradwee"},"content":"                + \"Deletes item 0 of myTrip on day 0.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"conradwee"},"content":"                + \"\\tedit FamilyTrip2021 /from SKR /to JPN : \"","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"conradwee"},"content":"                + \"\\n\\tEdits an existing trip called FamilyTrip2021\"","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"conradwee"},"content":"                + \"to have new START and END destinations.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"conradwee"},"content":"                + \"\\tedit-item 1 trip1 /day 1 /time 7am /name wake up from bed : \"","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"conradwee"},"content":"                + \"\\n\\tEdits item1 of trip 1 to wake up from bed at 7am.\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"conradwee"},"content":"                + \"\\tsearch-item trip1 /name sleep at home : \"","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"conradwee"},"content":"                + \"\\n\\tSearches item keyword sleep at home in trip called trip1.\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":181,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"Uxinnn"},"content":"                + \"\\tshortest-time /from SKR /to JPN : \"","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"Uxinnn"},"content":"                + \"Returns the shortest time from SKR to JPN.\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"conradwee"},"content":"                + \"\\texit : Exits the program.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"gavienwz"},"content":"    public void printReadSaveError(int lineNumber) {","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"gavienwz"},"content":"        System.out.println(\"Unable to read line \" + lineNumber + \". Save data has been tampered with.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"gavienwz":17,"conradwee":38,"jach23":31,"Uxinnn":95,"Cuiminjing":10}},{"path":"src/main/java/seedu/traveller/commands/AddDayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Trip;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"public class AddDayCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"    private static final Logger logger \u003d Logger.getLogger(NewCommand.class.getName());","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    private final String tripName;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    private final int numberOfDays;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    public AddDayCommand(String tripName, int numberOfDays) {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"all\") : \"\u0027all\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"\") : \"\u0027\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"        this.tripName \u003d tripName;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        assert numberOfDays \u003e\u003d 0 : \"Number of days is negative.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"        this.numberOfDays \u003d numberOfDays;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.INFO, \"Created an addDay command: \\n\" + this);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"    public String getTripName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"        return tripName;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"    public int getNumberOfDays() {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"        return numberOfDays;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"        return \"AddTripDay command:\"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\ttripName: \" + getTripName();","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"    public void execute(TripsList tripsList, Ui ui) throws TravellerException {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"        Trip trip \u003d tripsList.getTrip(getTripName());","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"        int originalNumberOfDays \u003d trip.getDaySize();","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"        for (int i \u003d 0; i \u003c getNumberOfDays(); i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"            trip.addDay();","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"        int finalNumberOfDays \u003d trip.getDaySize();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"        assert originalNumberOfDays + getNumberOfDays() \u003d\u003d finalNumberOfDays : \"Days are added incorrectly.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"        ui.printAddDayToTrip(getTripName(), getNumberOfDays());","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Uxinnn":52}},{"path":"src/main/java/seedu/traveller/commands/AddItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.DuplicateItemException;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Day;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Trip;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Item;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"public class AddItemCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    private static final Logger logger \u003d Logger.getLogger(NewCommand.class.getName());","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    private final String tripName;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    private final int dayIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    private final String itemName;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    private final String itemTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    public AddItemCommand(String tripName, int dayIndex, String itemTime, String itemName) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"all\") : \"\u0027all\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"\") : \"\u0027\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"        this.tripName \u003d tripName;","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"        assert dayIndex \u003e\u003d 0 : \"Day index is negative.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"        this.dayIndex \u003d dayIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"        this.itemTime \u003d itemTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.INFO, \"Created an addItem command: \\n\" + this);","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"    public String getTripName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"        return tripName;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"    public int getDayIndex() {","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"        return dayIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"    public String getItemName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"        return itemName;","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"    public String getItemTime() {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"        return itemTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"     * Used to pretty print an \u003ccode\u003eItemCommand\u003c/code\u003e to the logger.","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representing the contents of an \u003ccode\u003eItemCommand\u003c/code\u003e.","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"        return \"AddItem command:\"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\ttripName: \" + getTripName()","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\tdayIndex: \" + getDayIndex()","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\titemTime: \" + getItemTime()","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\titemName: \" + getItemName();","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"     * Performs the action of adding an \u003ccode\u003eItem\u003c/code\u003e to a \u003ccode\u003eDay\u003c/code\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"     * in a \u003ccode\u003eTrip\u003c/code\u003e of the \u003ccode\u003eTripsList\u003c/code\u003e.","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"     * @param tripsList The \u003ccode\u003eTripsList\u003c/code\u003e that the command will be executed on.","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Uxinnn"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e that will be used to print out the outcome of the execution.","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"Uxinnn"},"content":"     * @throws TravellerException thrown if the \u003ccode\u003eItem\u003c/code\u003e cannot be added to the","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"Uxinnn"},"content":"     * \u003ccode\u003eItemsList\u003c/code\u003e of a \u003ccode\u003eDay\u003c/code\u003e.","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"Uxinnn"},"content":"    public void execute(TripsList tripsList, Ui ui) throws TravellerException {","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"        String tripName \u003d getTripName();","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"Uxinnn"},"content":"        String itemName \u003d getItemName();","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"Uxinnn"},"content":"        String itemTime \u003d getItemTime();","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"Uxinnn"},"content":"        int dayIndex \u003d getDayIndex();","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"Uxinnn"},"content":"        Trip trip \u003d tripsList.getTrip(tripName);","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"        Day day \u003d trip.getDay(dayIndex);","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"Uxinnn"},"content":"        Item newItem \u003d new Item(itemTime, itemName);","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"Uxinnn"},"content":"        assert Objects.equals(newItem.getItemTime(), itemTime) :","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"Uxinnn"},"content":"                \"Item time in created item and command do not match.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"Uxinnn"},"content":"        assert Objects.equals(newItem.getItemName(), itemName) :","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"Uxinnn"},"content":"                \"Item name in created item and command do not match.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"Uxinnn"},"content":"        day.addItem(newItem);","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"Uxinnn"},"content":"        ui.printAddItemToDay(tripName, dayIndex);","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Uxinnn":89}},{"path":"src/main/java/seedu/traveller/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":" * Abstract parent class of all \u003ccode\u003eCommand\u003c/code\u003e class objects.","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"     * Will only be set to true when the application is closed by the user.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"     * Used to execute the action of the specific command.","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"     * @param tripsList The \u003ccode\u003eTripsList\u003c/code\u003e that the command will be executed on.","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e that will be used to print out the outcome of the execution.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"     * @throws TravellerException To be thrown if an error is encountered during the execution.","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"    public abstract void execute(TripsList tripsList, Ui ui) throws TravellerException;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"    public boolean getExit() {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"        return this.isExit;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"    public void setExit() {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Uxinnn":34}},{"path":"src/main/java/seedu/traveller/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cuiminjing"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Cuiminjing"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Cuiminjing"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TripNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Cuiminjing"},"content":"//@@author Cuiminjing","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Cuiminjing"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Cuiminjing"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteCommand.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Cuiminjing"},"content":"    private final String tripName;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Cuiminjing"},"content":"    public DeleteCommand(String tripName) {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Cuiminjing"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Cuiminjing"},"content":"        this.tripName \u003d tripName;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Cuiminjing"},"content":"        logger.log(Level.INFO, \"Created a delete command: \\n\" + this);","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Cuiminjing"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Cuiminjing"},"content":"     * Used to pretty print to the logger.","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Cuiminjing"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e of the \u003ccode\u003eDeleteCommand\u003c/code\u003e\u0027s contents.","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Cuiminjing"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Cuiminjing"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Cuiminjing"},"content":"    public String toString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Cuiminjing"},"content":"        return \"Delete command:\"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Cuiminjing"},"content":"                + \"\\n\\ttripName: \" + tripName;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Cuiminjing"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Cuiminjing"},"content":"     * Performs the action of deleting a trip from the \u003ccode\u003eTripsList\u003c/code\u003e.","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Cuiminjing"},"content":"     * @param tripsList The \u003ccode\u003eTripsList\u003c/code\u003e that the command will be executed on.","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Cuiminjing"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e that will be used to print out the outcome of the execution.","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Cuiminjing"},"content":"     * @throws TravellerException To be thrown if the \u003ccode\u003eTrip\u003c/code\u003e to be deleted cannot be found.","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Cuiminjing"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Cuiminjing"},"content":"    public void execute(TripsList tripsList, Ui ui) throws TravellerException {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Cuiminjing"},"content":"        int tripIndex \u003d tripsList.getTripIndex(tripName);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Cuiminjing"},"content":"        assert tripIndex \u003c tripsList.getSize() : \"The trip index is out of bound.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Cuiminjing"},"content":"        if (tripIndex \u003d\u003d -1) {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Cuiminjing"},"content":"            throw new TripNotFoundException();","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Cuiminjing"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Cuiminjing"},"content":"        tripsList.deleteTrip(tripIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Cuiminjing"},"content":"        ui.printDelete(tripName);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Cuiminjing"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Uxinnn":5,"Cuiminjing":43}},{"path":"src/main/java/seedu/traveller/commands/DeleteDayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cuiminjing"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Trip;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Cuiminjing"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Cuiminjing"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Cuiminjing"},"content":"import seedu.traveller.exceptions.TripNotFoundException;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Cuiminjing"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"Cuiminjing"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"Cuiminjing"},"content":"//@@author Cuiminjing","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"Cuiminjing"},"content":"public class DeleteDayCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"Cuiminjing"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteDayCommand.class.getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"Cuiminjing"},"content":"    private final String tripName;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"Cuiminjing"},"content":"    private final int index;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"Cuiminjing"},"content":"    public DeleteDayCommand(String tripName, int index) {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"Cuiminjing"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"Cuiminjing"},"content":"        this.tripName \u003d tripName;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"Cuiminjing"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"Cuiminjing"},"content":"        logger.log(Level.INFO, \"Created a delete-day command: \\n\" + this);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"Cuiminjing"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Cuiminjing"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"Cuiminjing"},"content":"        return \"Delete-day command:\"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"Cuiminjing"},"content":"                + \"\\n\\ttripName: \" + tripName + \"\\n\\tindex: \" + index;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Cuiminjing"},"content":"    public void execute(TripsList tripsList, Ui ui) throws TravellerException {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Cuiminjing"},"content":"        int tripIndex \u003d tripsList.getTripIndex(tripName);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"Cuiminjing"},"content":"        assert tripIndex \u003c tripsList.getSize() : \"The trip index is out of bound.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"Cuiminjing"},"content":"        if (tripIndex \u003d\u003d -1) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Cuiminjing"},"content":"            throw new TripNotFoundException();","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Cuiminjing"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Cuiminjing"},"content":"        Trip trip \u003d tripsList.getTrip(tripName);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Cuiminjing"},"content":"        trip.deleteDay(index);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Cuiminjing"},"content":"        ui.printDeleteDay(tripName,index);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"Cuiminjing"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Uxinnn":2,"Cuiminjing":41}},{"path":"src/main/java/seedu/traveller/commands/DeleteItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cuiminjing"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Day;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Trip;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Cuiminjing"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Cuiminjing"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Cuiminjing"},"content":"import seedu.traveller.exceptions.TripNotFoundException;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"Cuiminjing"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"Cuiminjing"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"Cuiminjing"},"content":"//@@author Cuiminjing","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"Cuiminjing"},"content":"public class DeleteItemCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"Cuiminjing"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteDayCommand.class.getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"Cuiminjing"},"content":"    private final String tripName;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"Cuiminjing"},"content":"    private final int dayIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"Cuiminjing"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"Cuiminjing"},"content":"    public DeleteItemCommand(String tripName, int dayIndex, int itemIndex) {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"Cuiminjing"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"Cuiminjing"},"content":"        this.tripName \u003d tripName;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Cuiminjing"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"Cuiminjing"},"content":"        this.dayIndex \u003d dayIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"Cuiminjing"},"content":"        logger.log(Level.INFO, \"Created a delete-item command: \\n\" + this);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"Cuiminjing"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"Cuiminjing"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"Cuiminjing"},"content":"        return \"Delete-item command:\"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Cuiminjing"},"content":"                + \"\\n\\ttripName: \" + tripName + \"\\n\\tdayIndex: \" + dayIndex + \"\\n\\titemname: \" + itemIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"Cuiminjing"},"content":"    public void execute(TripsList tripsList, Ui ui) throws TravellerException {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Cuiminjing"},"content":"        int tripIndex \u003d tripsList.getTripIndex(tripName);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Cuiminjing"},"content":"        assert tripIndex \u003c tripsList.getSize() : \"The trip index is out of bound.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Cuiminjing"},"content":"        if (tripIndex \u003d\u003d -1) {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Cuiminjing"},"content":"            throw new TripNotFoundException();","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Cuiminjing"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"Cuiminjing"},"content":"        Trip trip \u003d tripsList.getTrip(tripName);","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"Cuiminjing"},"content":"        Day day \u003d trip.getDay(dayIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"Cuiminjing"},"content":"        day.deleteItem(itemIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"Cuiminjing"},"content":"        ui.printDeleteItem(tripName,dayIndex,itemIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"Cuiminjing"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Uxinnn":3,"Cuiminjing":44}},{"path":"src/main/java/seedu/traveller/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.exceptions.DuplicateTripException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Trip;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"jach23"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"jach23"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"jach23"},"content":"import seedu.traveller.exceptions.TripNotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"jach23"},"content":"import seedu.traveller.worldmap.Country;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"jach23"},"content":"import seedu.traveller.worldmap.MinCalcResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"jach23"},"content":"import seedu.traveller.worldmap.WorldMap;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"jach23"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"jach23"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"jach23"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"gavienwz"},"content":"//@@author gavienwz","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"gavienwz"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"gavienwz"},"content":"    private static final Logger logger \u003d Logger.getLogger(EditCommand.class.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"gavienwz"},"content":"    private final String tripName;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"gavienwz"},"content":"    private String newTripName;","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"gavienwz"},"content":"    private String startCountry;","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"gavienwz"},"content":"    private String endCountry;","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"gavienwz"},"content":"    public EditCommand(String tripName, String newTripName, String startCountry, String endCountry) {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"gavienwz"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"gavienwz"},"content":"        this.tripName \u003d tripName;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"gavienwz"},"content":"        this.newTripName \u003d newTripName;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"gavienwz"},"content":"        this.startCountry \u003d startCountry;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"gavienwz"},"content":"        this.endCountry \u003d endCountry;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"gavienwz"},"content":"        logger.log(Level.INFO, \"Created an edit command: \\n\" + this);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"gavienwz"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"gavienwz"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"gavienwz"},"content":"        return \"Edit command:\"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"gavienwz"},"content":"                + \"\\n\\ttripName: \" + tripName","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"gavienwz"},"content":"                + \"\\n\\tnewTripName: \" + newTripName","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"gavienwz"},"content":"                + \"\\n\\tstartCountry: \" + startCountry","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"gavienwz"},"content":"                + \"\\n\\tendCountry: \" + endCountry;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"gavienwz"},"content":"    private void setStartCountry(Trip current, String startCountry) {","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"gavienwz"},"content":"        if (startCountry.equals(\"\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"gavienwz"},"content":"            this.startCountry \u003d current.getStartCountryCode();","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"gavienwz"},"content":"        } else {","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"gavienwz"},"content":"            this.startCountry \u003d startCountry;","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"gavienwz"},"content":"    private void setEndCountry(Trip current, String endCountry) {","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"gavienwz"},"content":"        if (endCountry.equals(\"\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"gavienwz"},"content":"            this.endCountry \u003d current.getEndCountryCode();","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"gavienwz"},"content":"        } else {","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"gavienwz"},"content":"            this.endCountry \u003d endCountry;","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"gavienwz"},"content":"    private void setNewTripName(Trip current, String newTripName) {","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"gavienwz"},"content":"        if (newTripName.equals(\"\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"gavienwz"},"content":"            this.newTripName \u003d current.getTripName();","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"gavienwz"},"content":"        } else {","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"gavienwz"},"content":"            this.newTripName \u003d newTripName;","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"gavienwz"},"content":"    private void editTripInfo(Trip current, List\u003cCountry\u003e path, List\u003cDouble\u003e time) {","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"gavienwz"},"content":"        current.setTripName(this.newTripName);","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"gavienwz"},"content":"        current.setStartCountryCode(this.startCountry);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"gavienwz"},"content":"        current.setEndCountryCode(this.endCountry);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"gavienwz"},"content":"        current.setPath(path);","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"gavienwz"},"content":"        current.setTime(time);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"gavienwz"},"content":"    public void execute(TripsList tripsList, Ui ui) throws TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"gavienwz"},"content":"        int tripIndex \u003d tripsList.getTripIndex(this.tripName);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"gavienwz"},"content":"        if (tripIndex \u003d\u003d -1) {","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"gavienwz"},"content":"            throw new TripNotFoundException();","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"gavienwz"},"content":"        if (!isValidNewTripName(tripsList)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"gavienwz"},"content":"            throw new DuplicateTripException(this.newTripName);","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"gavienwz"},"content":"        assert tripIndex \u003c tripsList.getSize() \u0026\u0026 tripIndex \u003e -1 : \"The trip index is out of bound.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"gavienwz"},"content":"        Trip current \u003d tripsList.getTrip(tripIndex);","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"gavienwz"},"content":"        setAll(current, this.newTripName, this.startCountry, this.endCountry);","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"gavienwz"},"content":"        assert !this.newTripName.equals(\"\") \u0026\u0026 !this.startCountry.equals(\"\") \u0026\u0026 !this.endCountry.equals(\"\");","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"gavienwz"},"content":"        MinCalcResult result \u003d WorldMap.calcMinTime(this.startCountry, this.endCountry);","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"gavienwz"},"content":"        List\u003cCountry\u003e path \u003d result.getPath();","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"gavienwz"},"content":"        List\u003cDouble\u003e time \u003d result.getTime();","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"gavienwz"},"content":"        editTripInfo(current, path, time);","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"gavienwz"},"content":"        ui.printEdit(tripName);","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"gavienwz"},"content":"    private boolean isValidNewTripName(TripsList tripsList) throws TravellerException {","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"gavienwz"},"content":"        int valid \u003d tripsList.getTripIndex(this.newTripName);","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"gavienwz"},"content":"        return valid \u003d\u003d -1;","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"gavienwz"},"content":"    private void setAll(Trip current, String newTripName, String startCountry, String endCountry) {","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"gavienwz"},"content":"        setNewTripName(current, newTripName);","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"gavienwz"},"content":"        setStartCountry(current, startCountry);","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"gavienwz"},"content":"        setEndCountry(current, endCountry);","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"gavienwz"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"gavienwz":93,"jach23":13,"Uxinnn":2}},{"path":"src/main/java/seedu/traveller/commands/EditItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"jach23"},"content":"import seedu.traveller.exceptions.DuplicateTripException;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jach23"},"content":"import seedu.traveller.exceptions.TripNotFoundException;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Day;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Trip;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"jach23"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"jach23"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Item;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"jach23"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"jach23"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"jach23"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditItemCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteDayCommand.class.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String tripName;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private String itemName;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private String itemTime;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final int dayIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditItemCommand(String tripName, int dayIndex, int itemIndex, String itemTime, String itemName) {","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.tripName \u003d tripName;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.itemTime \u003d itemTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.dayIndex \u003d dayIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"Created an edit-item command: \\n\" + this);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String getTripName() {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return tripName;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public int getDayIndex() {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return dayIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int getItemIndex() {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return itemIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String getItemName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return itemName;","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String getItemTime() {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return itemTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return \"Edit-item command:\"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + \"\\n\\ttripName: \" + getTripName()","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \"\\n\\tdayIndex: \" + getDayIndex()","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + \"\\n\\titemIndex: \" + getItemIndex()","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + \"\\n\\titemTime: \" + getItemTime()","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + \"\\n\\titemName: \" + getItemName();","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void setNewItemTime(Trip current, String itemTime) {","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (itemTime.equals(\"\")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            this.itemTime \u003d current.getStartCountryCode();","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            this.itemTime \u003d itemTime;","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private void setNewItemName(Trip current, String itemName) {","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (itemName.equals(\"\")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            this.itemName \u003d current.getStartCountryCode();","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            this.itemName \u003d itemName;","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute(TripsList tripsList, Ui ui) throws TravellerException {","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        int tripIndex \u003d tripsList.getTripIndex(this.tripName);","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Trip trip \u003d tripsList.getTrip(tripIndex);","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Day day \u003d trip.getDay(getDayIndex());","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        day.getItem(itemIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (tripIndex \u003d\u003d -1) {","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new TripNotFoundException();","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assert tripIndex \u003c tripsList.getSize()","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 tripIndex \u003e -1 : \"The trip index is out of bound.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        setAll(trip, this.itemTime, this.itemName);","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert !this.itemTime.equals(\"\") \u0026\u0026 !this.itemName.equals(\"\");","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Item newItem \u003d new Item(getItemTime(), getItemName());","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert Objects.equals(newItem.getItemTime(), getItemTime()) :","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \"Item time in created item and command do not match.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assert Objects.equals(newItem.getItemName(), getItemName()) :","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \"Item name in created item and command do not match.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        day.editItem(itemIndex, newItem);","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ui.printEditItem(tripName, dayIndex, itemName, itemTime, itemIndex);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void setAll(Trip trip, String itemTime, String itemName) {","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        setNewItemTime(trip, itemTime);","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        setNewItemName(trip, itemName);","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"jach23":12,"Uxinnn":4,"-":97}},{"path":"src/main/java/seedu/traveller/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    private static final Logger logger \u003d Logger.getLogger(ExitCommand.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.INFO, \"Created an exit command\");","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"     * Performs the action of exiting \u003ccode\u003eTraveller\u003c/code\u003e.","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"     * @param tripsList The \u003ccode\u003eTripsList\u003c/code\u003e that the command will be executed on.","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e that will be used to print out the outcome of the execution.","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"    public void execute(TripsList tripsList, Ui ui) {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"        setExit();","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        ui.printExit();","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"        return \"Exit command\";","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Uxinnn":32}},{"path":"src/main/java/seedu/traveller/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"conradwee"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"conradwee"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"conradwee"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"conradwee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"conradwee"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"conradwee"},"content":"    private static final Logger logger \u003d Logger.getLogger(HelpCommand.class.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"conradwee"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"conradwee"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"conradwee"},"content":"        logger.log(Level.INFO, \"Created an Help command\");","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"conradwee"},"content":"    public void execute(TripsList tripsList, Ui ui) {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"conradwee"},"content":"        ui.printHelp();","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"conradwee"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"conradwee"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"conradwee"},"content":"        return \"Help command\";","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"conradwee"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"conradwee":25,"Uxinnn":1}},{"path":"src/main/java/seedu/traveller/commands/NewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Trip;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.exceptions.DuplicateTripException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.Country;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.MinCalcResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.WorldMap;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"gavienwz"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"public class NewCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    private static final Logger logger \u003d Logger.getLogger(NewCommand.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    private final String tripName;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    private final String startCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    private final String endCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    public NewCommand(String tripName, String startCountry, String endCountry) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        this.tripName \u003d tripName;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        this.startCountry \u003d startCountry;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"        this.endCountry \u003d endCountry;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.INFO, \"Created a new command: \\n\" + this);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"    public String getTripName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"        return this.tripName;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"    public String getStartCountry() {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"        return this.startCountry;","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"    public String getEndCountry() {","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"        return this.endCountry;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"     * Used to pretty print to the logger.","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e of the \u003ccode\u003eNewCommand\u003c/code\u003e\u0027s contents.","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"        return \"New command:\"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\ttripName: \" + getTripName()","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\tstartCountry: \" + getStartCountry()","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\tendCountry: \" + getEndCountry();","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"     * Performs the action of creating a new trip for the \u003ccode\u003eTripsList\u003c/code\u003e.","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"     * @param tripsList The \u003ccode\u003eTripsList\u003c/code\u003e that the command will be executed on.","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e that will be used to print out the outcome of the execution.","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"     * @throws TravellerException To be thrown if there exists another trip with the specified \u003ccode\u003etripName\u003c/code\u003e.","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"    public void execute(TripsList tripsList, Ui ui) throws TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"        for (int i \u003d 0; i \u003c tripsList.getSize(); i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"            if (tripsList.getTrip(i).getTripName().equals(getTripName())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"                throw new DuplicateTripException(getTripName());","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"        MinCalcResult result \u003d WorldMap.calcMinTime(getStartCountry(), getEndCountry());","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Uxinnn"},"content":"        if (result.getError() \u003d\u003d 1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"Uxinnn"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"        List\u003cCountry\u003e path \u003d result.getPath();","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Uxinnn"},"content":"        List\u003cDouble\u003e time \u003d result.getTime();","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"        Trip trip \u003d new Trip(getTripName(), getStartCountry(), getEndCountry(), path, time);","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Uxinnn"},"content":"        tripsList.addTrip(trip);","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"Uxinnn"},"content":"        ui.printNewTripCreated(getTripName());","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"gavienwz":3,"Uxinnn":75}},{"path":"src/main/java/seedu/traveller/commands/SearchItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"jach23"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Day;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Trip;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"jach23"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Item;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"jach23"},"content":"import seedu.traveller.exceptions.TripNotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"jach23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"jach23"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"jach23"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class SearchItemCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteDayCommand.class.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final String tripName;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String itemKey;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int dayIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public SearchItemCommand(String tripName, int dayIndex, String itemKey) {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tripName \u003d tripName;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.itemKey \u003d itemKey;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.dayIndex \u003d dayIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"Created a search-item command: \\n\" + this);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTripName() {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tripName;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public int getDayIndex() {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return dayIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String getItemKey() {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return itemKey;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return \"Search-item command:\"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                + \"\\n\\ttripName: \" + getTripName()","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                + \"\\n\\tdayIndex: \" + getDayIndex()","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                + \"\\n\\titemTime: \" + getItemKey();","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute(TripsList tripsList, Ui ui) throws TravellerException {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        int tripIndex \u003d tripsList.getTripIndex(tripName);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assert tripIndex \u003c tripsList.getSize() : \"The trip index is out of bound.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (tripIndex \u003d\u003d -1) {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new TripNotFoundException();","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Trip trip \u003d tripsList.getTrip(tripName);","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Day day \u003d trip.getDay(dayIndex);","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        ArrayList\u003cItem\u003e keyString;","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        keyString \u003d day.searchItem(itemKey);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        ui.printSearchItem(tripName, dayIndex, itemKey, keyString);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"jach23":11,"Uxinnn":4,"-":53}},{"path":"src/main/java/seedu/traveller/commands/ShortestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cuiminjing"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Cuiminjing"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.MinCalcResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.WorldMap;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"jach23"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ShortestCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d Logger.getLogger(ShortestCommand.class.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String startCountry;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final String endCountry;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final String timeOrCost;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public ShortestCommand(String timeOrCost, String startCountry, String endCountry) {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.startCountry \u003d startCountry;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.endCountry \u003d endCountry;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.timeOrCost \u003d timeOrCost;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"Created an shortest command: \\n\" + this);","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public String getStartCountry() {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this.startCountry;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getEndCountry() {","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return this.endCountry;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String getTimeOrCost() {","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return this.timeOrCost;","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return \"Shortest command: \"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                + \"\\n\\ttimeOrCost: \" + timeOrCost","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                + \"\\n\\tstartCountry: \" + startCountry","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                + \"\\n\\tendCountry: \" + endCountry;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute(TripsList tripsList, Ui ui) {","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        MinCalcResult result;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assert Objects.equals(this.timeOrCost,\"time\") || Objects.equals(this.timeOrCost,\"cost\");","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (Objects.equals(this.timeOrCost, \"time\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            result \u003d WorldMap.calcMinTime(this.startCountry, this.endCountry);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            WorldMap.altWorldMap();","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            result \u003d WorldMap.calcMinCost(this.startCountry, this.endCountry);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assert result !\u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (result.getError() \u003d\u003d 1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        List\u003cDouble\u003e time \u003d result.getTime();","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        double sum \u003d 0.0;","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (double d : time) {","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            sum +\u003d d;","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assert sum \u003e\u003d 0 : \"The distance should be more than or equal to 0.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (Objects.equals(this.timeOrCost, \"time\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            ui.printShortestTime(this.startCountry, this.endCountry, sum, time);","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            ui.printShortestCost(this.startCountry, this.endCountry, sum, time);","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"jach23":1,"Uxinnn":8,"-":69,"Cuiminjing":3}},{"path":"src/main/java/seedu/traveller/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.NoTripsCreatedException;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TripNotFoundException;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    private static final Logger logger \u003d Logger.getLogger(ViewCommand.class.getName());","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    private final String tripName;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    public ViewCommand(String tripName) {","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        this.tripName \u003d tripName;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.INFO, \"Created a view command\");","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"    public String getTripName() {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        return tripName;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"     * Performs the action of printing all trips in the \u003ccode\u003eTripsList\u003c/code\u003e to the console.","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"     * @param tripsList The \u003ccode\u003eTripsList\u003c/code\u003e that the command will be executed on.","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e that will be used to print out the outcome of the execution.","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"    public void execute(TripsList tripsList, Ui ui) throws TravellerException {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"        if (tripsList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"            throw new NoTripsCreatedException();","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"        if (Objects.equals(getTripName(), \"all\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"            ui.printAllTrips(tripsList);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"            int tripIndex \u003d tripsList.getTripIndex(getTripName());","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"            assert tripIndex \u003c tripsList.getSize() : \"The trip index is out of bound.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"            if (tripIndex \u003d\u003d -1) {","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"                throw new TripNotFoundException();","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"            ui.printTrip(tripsList.getTrip(tripIndex));","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"        return \"View command:\"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\ttripName: \" + getTripName();","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Uxinnn":57}},{"path":"src/main/java/seedu/traveller/exceptions/CommandNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"public class CommandNotFoundException extends TravellerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    public CommandNotFoundException(String userCommand) {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThe command \u0027\" + userCommand + \"\u0027 is not recognised.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Uxinnn":9}},{"path":"src/main/java/seedu/traveller/exceptions/CountryNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class CountryNotFoundException extends TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public CountryNotFoundException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        message \u003d \"\\tPlease input a valid country.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jach23":3,"-":6}},{"path":"src/main/java/seedu/traveller/exceptions/DayNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"public class DayNotFoundException extends TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    public DayNotFoundException(int dayNumber) {","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThe day \u0027\" + dayNumber + \"\u0027 cannot be found.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Uxinnn":9}},{"path":"src/main/java/seedu/traveller/exceptions/DistanceNonNegativeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class DistanceNonNegativeException extends TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public DistanceNonNegativeException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        message \u003d \"\\tDistance needs to be greater or equal to 0.1.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"\\tPlease input a valid distance.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jach23":3,"-":7}},{"path":"src/main/java/seedu/traveller/exceptions/DistanceNonStringException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class DistanceNonStringException extends TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public DistanceNonStringException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        message \u003d \"\\tDistance needs to be a number!\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"\\tPlease input a valid distance.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jach23":3,"-":7}},{"path":"src/main/java/seedu/traveller/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class DuplicateItemException extends TravellerException {","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    public DuplicateItemException(String itemTime, String itemName) {","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tYou already have an item named: \" + itemName + \" at \" + itemTime + \".\";","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"Uxinnn":7}},{"path":"src/main/java/seedu/traveller/exceptions/DuplicateTripException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cuiminjing"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"public class DuplicateTripException extends TravellerException {","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    public DuplicateTripException(String tripName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tYou already have a trip named: \" + tripName;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Uxinnn":7,"Cuiminjing":2}},{"path":"src/main/java/seedu/traveller/exceptions/EmptyFieldValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class EmptyFieldValueException extends TravellerException {","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    public EmptyFieldValueException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"All fields must be filled up.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"Uxinnn":7}},{"path":"src/main/java/seedu/traveller/exceptions/IllegalTimeFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class IllegalTimeFormatException extends TravellerException {","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    public IllegalTimeFormatException(String rawTime) {","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThe time entered \u0027\" + rawTime + \"\u0027 cannot be recognised.\"","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\tPlease enter time in 24hr format.\"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\tE.g. 0800\";","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"Uxinnn":9}},{"path":"src/main/java/seedu/traveller/exceptions/IllegalTimeValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class IllegalTimeValueException extends TravellerException {","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    public IllegalTimeValueException(String rawTime) {","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThe time value entered \u0027\" + rawTime + \"\u0027 is invalid. \"","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\tPlease enter a time between 0000 to 2359 (All 4 digits are required).\";","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"Uxinnn":8}},{"path":"src/main/java/seedu/traveller/exceptions/IllegalTripNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"public class IllegalTripNameException extends TravellerException {","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    public IllegalTripNameException(String tripName) {","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThe tripName \u0027\" + tripName + \"\u0027 cannot be used as a trip name.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Uxinnn":9}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidAddDayFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gavienwz"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"public class InvalidAddDayFormatException extends TravellerException {","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"        return \"\\tWrong format for add-day! \\n\\tCorrect format: add-day TRIP_NAME /day NUMBER_OF_DAYS\";","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"gavienwz":2,"Uxinnn":8}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidAddItemFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"public class InvalidAddItemFormatException extends TravellerException {","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    public InvalidAddItemFormatException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tWrong format for AddItem!\\n\\tCorrect format: \"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"                + \"add-item TRIP_NAME /day DAY_INDEX /time TIME /name ITEM_NAME\";","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Uxinnn":10}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidDeleteDayFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cuiminjing"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Cuiminjing"},"content":"//@@author Cuiminjing","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Cuiminjing"},"content":"public class InvalidDeleteDayFormatException extends TravellerException {","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Cuiminjing"},"content":"    public InvalidDeleteDayFormatException() {","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Cuiminjing"},"content":"        message \u003d \"\\tWrong format for DeleteDay!\"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Cuiminjing"},"content":"                + \"\\n\\tCorrect format: delete-day TRIP_NAME /day DAY_INDEX\";","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Cuiminjing"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Cuiminjing":9}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidDeleteItemFormatCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cuiminjing"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"Cuiminjing"},"content":"//@@author Cuiminjing","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Cuiminjing"},"content":"public class InvalidDeleteItemFormatCommand extends TravellerException {","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Cuiminjing"},"content":"    public InvalidDeleteItemFormatCommand() {","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Cuiminjing"},"content":"        message \u003d \"\\tWrong format for DeleteItem!\"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Cuiminjing"},"content":"                + \"\\n\\tCorrect format: delete-item TRIP_NAME /day DAY_INDEX /item ITEM_INDEX\";","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Cuiminjing"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Cuiminjing":9}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidEditFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class InvalidEditFormatException extends TravellerException {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    public InvalidEditFormatException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tWrong format for Edit!\\n\\tCorrect format: edit TRIP_NAME /from START /to END\";","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Uxinnn":7}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidEditItemFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class InvalidEditItemFormatException extends TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public InvalidEditItemFormatException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        message \u003d \"\\tWrong format for EditItem!\\n\\tCorrect format: \"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"edit-item TRIP /day DAY /time NEW_TIME /name NEW_NAME /index INDEX\";","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jach23":3,"-":7}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidEditItemIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class InvalidEditItemIndexException extends TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public InvalidEditItemIndexException(String rawIndex) {","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        message \u003d \"\\tEdit item index \" + rawIndex + \"needs to be a valid integer 0 or above!\";","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jach23":3,"-":6}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidEditMapFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class InvalidEditMapFormatException extends TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public InvalidEditMapFormatException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        message \u003d \"\\tWrong format for Edit Map! Correct format:\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"\\tedit-map /from START /to END /dist NEW_DISTANCE\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jach23":3,"-":7}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gavienwz"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"gavienwz"},"content":"public class InvalidFormatException extends TravellerException {","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"gavienwz"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"gavienwz"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"gavienwz"},"content":"        return \"\\tWrong format! Type help to view all commands!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"gavienwz"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"gavienwz":9}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidNewFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"public class InvalidNewFormatException extends TravellerException {","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    public InvalidNewFormatException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tWrong format for New!\\n\\tCorrect format: new TRIP_NAME /from START /to END\";","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Uxinnn":9}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidNumberOfDaysException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"public class InvalidNumberOfDaysException extends TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    public InvalidNumberOfDaysException(int daysNumber) {","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"        if (daysNumber \u003d\u003d 0) {","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"            message \u003d \"\\tThe number of days specified \u0027\" + daysNumber + \"\u0027 should not be 0.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        } else {","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"            message \u003d \"\\tThe number of days specified \u0027\" + daysNumber + \"\u0027 should not be negative.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"    public InvalidNumberOfDaysException(String rawDaysNumber) {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThe number of days specified \u0027\" + rawDaysNumber + \"\u0027 is not a valid integer.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Uxinnn":17}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidSaveFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gavienwz"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"gavienwz"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gavienwz"},"content":" * This class is an exception that is thrown when the save file being read has unreadable commands in it.","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"gavienwz"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gavienwz"},"content":"public class InvalidSaveFileException extends TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"gavienwz"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"gavienwz"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"gavienwz"},"content":"        return \"Unable to read save file! Contents have been tampered with!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"gavienwz"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"gavienwz":12}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidSearchFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"public class InvalidSearchFormatException extends TravellerException {","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"    public InvalidSearchFormatException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tWrong format for Search!\\n\\tCorrect format: search /from START /to END\";","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Uxinnn":8}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidSearchItemFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class InvalidSearchItemFormatException extends TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public InvalidSearchItemFormatException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        message \u003d \"\\tWrong format for SearchItem!\\n\\tCorrect format: \"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"search-item TRIP_NAME /day DAY_INDEX /key KEYWORD\";","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jach23":3,"-":7}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidShortestCostException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"conradwee"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"conradwee"},"content":"public class InvalidShortestCostException extends TravellerException {","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"conradwee"},"content":"    public InvalidShortestCostException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"conradwee"},"content":"        message \u003d \"\\tWrong format for Shortest!\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"conradwee"},"content":"                + \"\\tCorrect formats: \\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"conradwee"},"content":"                + \"\\tshortest-cost /from START /to END\\n\";","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"conradwee"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"conradwee":9}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidShortestTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class InvalidShortestTimeException extends TravellerException {","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    public InvalidShortestTimeException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tWrong format for Shortest!\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"                + \"\\tCorrect formats: \\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"                + \"\\tshortest-time /from START /to END\\n\";","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Uxinnn":9}},{"path":"src/main/java/seedu/traveller/exceptions/InvalidViewCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"public class InvalidViewCommandException extends TravellerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"    public InvalidViewCommandException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tWrong format for View!\\n\\tCorrect format: view TRIP_NAME\";","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"Uxinnn":8}},{"path":"src/main/java/seedu/traveller/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"public class ItemNotFoundException extends TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    public ItemNotFoundException(int itemNumber) {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThe item \u0027\" + itemNumber + \"\u0027 cannot be found.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Uxinnn":9}},{"path":"src/main/java/seedu/traveller/exceptions/NoTripsCreatedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"public class NoTripsCreatedException extends TravellerException {","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    public NoTripsCreatedException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThere are no trips created yet.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Uxinnn":9}},{"path":"src/main/java/seedu/traveller/exceptions/SaveDataNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gavienwz"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.worldmap.exceptions.WorldMapException;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gavienwz"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gavienwz"},"content":" * This class is an exception that is thrown when the save text file doesn\u0027t exist.","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gavienwz"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"gavienwz"},"content":"public class SaveDataNotFoundException extends TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"gavienwz"},"content":"    public SaveDataNotFoundException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gavienwz"},"content":"        message \u003d \"\\tSave data cannot be found, is the save file under ./save/save.txt?\";","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gavienwz"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"gavienwz":12}},{"path":"src/main/java/seedu/traveller/exceptions/TravellerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":" * Parent class of all exceptions that arises from using the \u003ccode\u003eTraveller\u003c/code\u003e.","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"public class TravellerException extends Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"    protected String message;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"        return message;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Uxinnn":14}},{"path":"src/main/java/seedu/traveller/exceptions/TripNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"public class TripNotFoundException extends TravellerException {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    public TripNotFoundException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThe trip specified does not exist.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Uxinnn":9}},{"path":"src/main/java/seedu/traveller/objects/Day.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.objects;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"jach23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"public class Day {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"    protected ItemsList itemsList;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    public Day() {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"        itemsList \u003d new ItemsList();","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    public void addItem(Item item) throws TravellerException {","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"        itemsList.addItem(item);","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"jach23"},"content":"    public Item getItem(int itemNumber) throws TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"        return itemsList.getItem(itemNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"    public void deleteItem(int itemNumber) throws TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"        itemsList.deleteItem(itemNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"gavienwz"},"content":"    public int getItemsListSize() {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"gavienwz"},"content":"        return itemsList.getSize();","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"        return itemsList.toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"jach23"},"content":"    public void editItem(int index, Item item) {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"jach23"},"content":"        itemsList.editItem(index, item);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"jach23"},"content":"    public ArrayList\u003cItem\u003e searchItem(String itemKey) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"jach23"},"content":"        return itemsList.searchItem(itemKey);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"gavienwz":4,"jach23":11,"Uxinnn":28}},{"path":"src/main/java/seedu/traveller/objects/DaysList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.objects;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.DayNotFoundException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":" * Represents a list of days in a trip.","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":" * Each \u003ccode\u003eTrip\u003c/code\u003e will have 1 \u003ccode\u003eDaysList\u003c/code\u003e.","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"public class DaysList {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    private static final Logger logger \u003d Logger.getLogger(TripsList.class.getName());","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    private final ArrayList\u003cDay\u003e days;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    public DaysList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.FINE, \"Created a days list\");","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"        this.days \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"    public void addDay() {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.INFO, \"Added a day to daysList\");","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        Day newDay \u003d new Day();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"        days.add(newDay);","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"    public Day getDay(int dayNumber) throws TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"        Day day;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"            day \u003d days.get(dayNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"            throw new DayNotFoundException(dayNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"        return day;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"    public void deleteDay(int dayNumber) throws TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.INFO, \"Deleted a day of index \" + dayNumber + \" from daysList\");","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"            days.remove(dayNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"            throw new DayNotFoundException(dayNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"    public int getSize() {","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"        return days.size();","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"     * Used by the \u003ccode\u003eUi\u003c/code\u003e to print out a \u003ccode\u003eDaysList\u003c/code\u003e.","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e of the \u003ccode\u003eDay\u003c/code\u003e and its \u003ccode\u003eItemsList\u003c/code\u003e contents.","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"        StringBuilder daysListString \u003d new StringBuilder();","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"        for (int dayNumber \u003d 0; dayNumber \u003c getSize(); dayNumber++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"            String dayHeader \u003d \"\\n\\t\\t\\t\\tDay \" + dayNumber + \": \";","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"            daysListString.append(dayHeader);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"            daysListString.append(days.get(dayNumber).toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"        return daysListString.toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Uxinnn":68}},{"path":"src/main/java/seedu/traveller/objects/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.objects;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":" * Class for all items in an ItemsList.","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"public class Item {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    private static final Logger logger \u003d Logger.getLogger(Item.class.getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"    protected String itemName;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    protected  String itemTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    public Item(String itemTime, String itemName) {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"        this.itemTime \u003d itemTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.INFO, \"Item created with details: \\n\" + this);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    public String getItemName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        return itemName;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    public String getItemTime() {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        return itemTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"     * Used to pretty print when the \u003ccode\u003eViewCommand\u003c/code\u003e is called.","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e of the contents of the \u003ccode\u003eItem\u003c/code\u003e object.","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"        return getItemTime() + \"  \" + getItemName();","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Uxinnn":38}},{"path":"src/main/java/seedu/traveller/objects/ItemsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.objects;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.DuplicateItemException;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Cuiminjing"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":" * Represents a list of items that will be done in a particular day of a trip.","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":" * Each \u003ccode\u003eDay\u003c/code\u003e will have 1 \u003ccode\u003eItemsList\u003c/code\u003e.","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"public class ItemsList {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    private static final Logger logger \u003d Logger.getLogger(TripsList.class.getName());","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    private final ArrayList\u003cItem\u003e items;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    public ItemsList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.FINE, \"Created a items list\");","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"        this.items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"    public void addItem(Item item) throws TravellerException {","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"        String itemTime \u003d item.getItemTime();","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"        String itemName \u003d item.getItemName();","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"        if (isInList(itemTime, itemName)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"            logger.log(Level.WARNING, \"A duplicate item cannot be added.\");","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"            throw new DuplicateItemException(itemTime, itemName);","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.INFO, \"Added an item to itemsList\");","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"        items.add(item);","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"jach23"},"content":"    public void editItem(int index, Item item) {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"Cuiminjing"},"content":"        logger.log(Level.INFO, \"Editing an item to itemsList\");","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Cuiminjing"},"content":"        items.add(item);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"jach23"},"content":"        Collections.swap(items, index, getSize() - 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"jach23"},"content":"        items.remove(getSize() - 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"jach23"},"content":"    public ArrayList\u003cItem\u003e searchItem(String keyword) {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"jach23"},"content":"        ArrayList\u003cItem\u003e keywordString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"Cuiminjing"},"content":"        logger.log(Level.INFO, \"Searching for keyword in itemsList\");","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"Cuiminjing"},"content":"        for (Item i: items) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"jach23"},"content":"            if (i.getItemName().contains(keyword) || i.getItemTime().contains(keyword)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"jach23"},"content":"                keywordString.add(i);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"Cuiminjing"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"Cuiminjing"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"jach23"},"content":"        return keywordString;","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"    public boolean isInList(String itemTime, String itemName) throws TravellerException {","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"            Item item \u003d getItem(i);","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"            if (item.getItemTime().equals(itemTime) \u0026\u0026 item.getItemName().equals(itemName)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"                return true;","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"        return false;","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"jach23"},"content":"    public Item getItem(int itemNumber) throws TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"jach23"},"content":"        Item item;","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"jach23"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"jach23"},"content":"            item \u003d items.get(itemNumber);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"jach23"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"jach23"},"content":"            throw new ItemNotFoundException(itemNumber);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"jach23"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"jach23"},"content":"        return item;","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"Uxinnn"},"content":"    public void deleteItem(int itemNumber) throws TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.INFO, \"Deleted an item of index \" + itemNumber + \" from itemsList\");","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"            items.remove(itemNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"Uxinnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Uxinnn"},"content":"            throw new ItemNotFoundException(itemNumber);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"Uxinnn"},"content":"    public int getSize() {","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"Uxinnn"},"content":"        return items.size();","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"Uxinnn"},"content":"     * Used by the \u003ccode\u003eUi\u003c/code\u003e to print out an \u003ccode\u003eItemsList\u003c/code\u003e.","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Uxinnn"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e of the \u003ccode\u003eItemsList\u003c/code\u003e and its \u003ccode\u003eItem\u003c/code\u003es\u0027 contents.","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"Uxinnn"},"content":"        StringBuilder itemsListString \u003d new StringBuilder();","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"Uxinnn"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"Uxinnn"},"content":"            String itemEntry \u003d \"\\n\\t\\t\\t\\t\\t\" + i + \":  \";","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"Uxinnn"},"content":"            itemsListString.append(itemEntry);","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"Uxinnn"},"content":"            Item item \u003d items.get(i);","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"Uxinnn"},"content":"            itemsListString.append(item.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"Uxinnn"},"content":"        return itemsListString.toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"jach23"},"content":"    public String getItemInfo(int itemIndex) throws TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"gavienwz"},"content":"        Item current \u003d getItem(itemIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"gavienwz"},"content":"        return \" /time \" + current.getItemTime() + \" /name \" + current.getItemName() + \"\\n\";","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"gavienwz":4,"jach23":17,"Uxinnn":77,"Cuiminjing":11}},{"path":"src/main/java/seedu/traveller/objects/Trip.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.objects;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.Country;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"gavienwz"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":" * Each TripsList will store an ArrayList of this class.","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":" * Represents 1 trip plan created by the user.","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"public class Trip {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    private static final Logger logger \u003d Logger.getLogger(TripsList.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"gavienwz"},"content":"    private String tripName;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"gavienwz"},"content":"    private String startCountryCode;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"gavienwz"},"content":"    private String endCountryCode;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"gavienwz"},"content":"    private List\u003cCountry\u003e path;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    private List\u003cDouble\u003e time;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    private final DaysList daysList;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    public Trip(String tripName, String startCountryCode, String endCountryCode,","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"                List\u003cCountry\u003e path, List\u003cDouble\u003e time) {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"all\") : \"\u0027all\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"\") : \"\u0027\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"        this.tripName \u003d tripName;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"        this.startCountryCode \u003d startCountryCode;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"        this.endCountryCode \u003d endCountryCode;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"gavienwz"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"        this.daysList \u003d new DaysList();","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.INFO, \"Trip created with details: \\n\" + this);","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"        return \"\\t\\tTripName: \" + getTripName()","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\t\\t\\t Origin: \" + getStartCountryCode()","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\t\\t\\t Destination: \" + getEndCountryCode()","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\t\\t\\t Path: \" + getPath()","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\t\\t\\t Time: \" + getTime()","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\t\\t\\t Days: \" + daysList;","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"    public String getTripName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"        return tripName;","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"gavienwz"},"content":"    public void setTripName(String newTripName) {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"gavienwz"},"content":"        this.tripName \u003d newTripName;","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"    public String getStartCountryCode() {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"        return startCountryCode;","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"gavienwz"},"content":"    public void setStartCountryCode(String startCountryCode) {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"gavienwz"},"content":"        this.startCountryCode \u003d startCountryCode;","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"    public String getEndCountryCode() {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"        return endCountryCode;","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"gavienwz"},"content":"    public void setEndCountryCode(String endCountryCode) {","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"gavienwz"},"content":"        this.endCountryCode \u003d endCountryCode;","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"    public List\u003cCountry\u003e getPath() {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Uxinnn"},"content":"        return path;","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"gavienwz"},"content":"    public void setPath(List\u003cCountry\u003e path) {","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"gavienwz"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"Uxinnn"},"content":"    public List\u003cDouble\u003e getTime() {","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Uxinnn"},"content":"        return time;","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"conradwee"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"conradwee"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"Uxinnn"},"content":"    public void setTime(List\u003cDouble\u003e time) {","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Uxinnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"Uxinnn"},"content":"    public Day getDay(int dayNumber) throws TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"Uxinnn"},"content":"        return daysList.getDay(dayNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"Uxinnn"},"content":"    public void addDay() {","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"Uxinnn"},"content":"        daysList.addDay();","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"Uxinnn"},"content":"    public void deleteDay(int dayNumber) throws TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"Uxinnn"},"content":"        daysList.deleteDay(dayNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"gavienwz"},"content":"    public String getSaveTrip() {","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"gavienwz"},"content":"        return \"new \" + getTripName() + \" /from \" + getStartCountryCode() + \" /to \" + getEndCountryCode() + \"\\n\";","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"gavienwz"},"content":"    public int getDaySize() {","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"gavienwz"},"content":"        return daysList.getSize();","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"gavienwz"},"content":"    public String getSaveDay() {","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"gavienwz"},"content":"        String saveDataForDays \u003d \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"gavienwz"},"content":"        if (getDaySize() \u003e 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"Uxinnn"},"content":"            saveDataForDays \u003d \"add-day \" + getTripName() + \" /day \" + getDaySize() + \"\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"gavienwz"},"content":"        return saveDataForDays;","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"Uxinnn"},"content":"    public String getSaveItem() throws TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"gavienwz"},"content":"        String saveDataForItems \u003d \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"gavienwz"},"content":"        for (int i \u003d 0; i \u003c getDaySize(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"gavienwz"},"content":"            Day current \u003d daysList.getDay(i);","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"gavienwz"},"content":"            if (current.getItemsListSize() \u003e 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"gavienwz"},"content":"                for (int j \u003d 0; j \u003c current.getItemsListSize(); j++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"gavienwz"},"content":"                    saveDataForItems +\u003d \"add-item \" + getTripName() + \" /day \" + i + current.itemsList.getItemInfo(j);","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"gavienwz"},"content":"                }","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"gavienwz"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"gavienwz"},"content":"        return saveDataForItems;","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"gavienwz":52,"conradwee":5,"Uxinnn":71}},{"path":"src/main/java/seedu/traveller/objects/TripsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.objects;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.exceptions.TripNotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"public class TripsList {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"    private static final Logger logger \u003d Logger.getLogger(TripsList.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    private final ArrayList\u003cTrip\u003e trips;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    public TripsList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"        logger.log(Level.FINE, \"Created a trips list\");","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"        this.trips \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    public void addTrip(Trip trip) throws TravellerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"        String tripName \u003d trip.getTripName();","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"            Trip existingTrip \u003d getTrip(i);","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"            assert !tripName.equals(existingTrip.getTripName()) : \"TripName is already in use.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        this.trips.add(trip);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"    public Trip getTrip(int tripNumber) throws TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"        if (tripNumber \u003c 0 || tripNumber \u003e\u003d getSize()) {","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"gavienwz"},"content":"            throw new TripNotFoundException();","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"        return trips.get(tripNumber);","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"    public Trip getTrip(String tripName) throws TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"all\") : \"\u0027all\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"        assert !tripName.equals(\"\") : \"\u0027\u0027 is an invalid tripName.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"        int tripIndex \u003d getTripIndex(tripName);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"        return getTrip(tripIndex);","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"    public int getTripIndex(String tripName) throws TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"        int tripIndex \u003d -1;  // If trip is not found, return -1 to indicate so.","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"            Trip trip \u003d getTrip(i);","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"            if (tripName.equals(trip.getTripName())) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"                tripIndex \u003d i;","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"        return tripIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"    public void deleteTrip(int tripNumber) {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"        assert tripNumber \u003c getSize() : \"tripNumber is larger than size of trips array.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"        assert tripNumber \u003e\u003d 0 : \"tripNumber is negative.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"        trips.remove(tripNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"    public int getSize() {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"        return trips.size();","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"gavienwz":4,"Uxinnn":58,"Cuiminjing":3}},{"path":"src/main/java/seedu/traveller/save/SaveLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gavienwz"},"content":"package seedu.traveller.save;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.Parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.Trip;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.commands.Command;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.exceptions.SaveDataNotFoundException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gavienwz"},"content":"import java.io.File;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gavienwz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gavienwz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gavienwz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gavienwz"},"content":"import java.util.Objects;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"gavienwz"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gavienwz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"gavienwz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gavienwz"},"content":"//@@author gavienwz","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"gavienwz"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"gavienwz"},"content":" * This class implements a save functionality for the Traveller program.","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"gavienwz"},"content":" * A text file is created (if it doesn\u0027t exist) and written to whenever the program opens/closes.","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"gavienwz"},"content":" * It saves all existing trip objects and their corresponding days/items.","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gavienwz"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"gavienwz"},"content":"public class SaveLoader {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"gavienwz"},"content":"    private static final Logger logger \u003d Logger.getLogger(SaveLoader.class.getName());","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"gavienwz"},"content":"    private final String filePath \u003d \"./save/save.txt\";","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"gavienwz"},"content":"    private final String directoryPath \u003d \"./save\";","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"gavienwz"},"content":"    private final Ui ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"gavienwz"},"content":"    private final TripsList tripsList;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"gavienwz"},"content":"    public SaveLoader(TripsList tripsList, Ui ui) {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"gavienwz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"gavienwz"},"content":"        this.tripsList \u003d tripsList;","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"gavienwz"},"content":"     * The main function of reading the save file.","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"gavienwz"},"content":"     * It is called at the start when Traveller opens.","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"gavienwz"},"content":"    public void readSave() {","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"gavienwz"},"content":"        if (!hasDirectory()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"gavienwz"},"content":"            createDir();","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"gavienwz"},"content":"        if (hasSave()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"gavienwz"},"content":"            try {","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"gavienwz"},"content":"                readFromSave();","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"gavienwz"},"content":"            } catch (SaveDataNotFoundException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"gavienwz"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"gavienwz"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"gavienwz"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"gavienwz"},"content":"            assert !hasSave();","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"gavienwz"},"content":"            try {","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"gavienwz"},"content":"                createSave();","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"gavienwz"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"gavienwz"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"gavienwz"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"gavienwz"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"gavienwz"},"content":"     * The main function of writing the save file.","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"gavienwz"},"content":"     * It is called at the end when Traveller closes and when any input is given.","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"gavienwz"},"content":"     * @param status Status can either be \"run\" or \"exit\" as called for in Traveller main() and run(),","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"gavienwz"},"content":"     *     so that it will only print to the command line when exiting.","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"gavienwz"},"content":"    public void writeSave(String status) {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"gavienwz"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"gavienwz"},"content":"            writeToSave();","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"gavienwz"},"content":"        } catch (IOException | TravellerException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"gavienwz"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"gavienwz"},"content":"        if (status.equals(\"exit\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"gavienwz"},"content":"            ui.printWriteSave();","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"gavienwz"},"content":"            ui.printLine();","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"gavienwz"},"content":"     * A check if the save text file exists.","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"gavienwz"},"content":"     * @return boolean Returns whether save.txt file exists.","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"gavienwz"},"content":"    private boolean hasSave() {","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"gavienwz"},"content":"        File save \u003d new File(filePath);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"gavienwz"},"content":"        return save.exists();","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"gavienwz"},"content":"     * A check if the save directory exists.","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"gavienwz"},"content":"     * @return boolean Returns where save folder exists.","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"gavienwz"},"content":"    private boolean hasDirectory() {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"gavienwz"},"content":"        File dir \u003d new File(directoryPath);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"gavienwz"},"content":"        return dir.exists();","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"gavienwz"},"content":"     * This function reads from the save.txt file.","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"gavienwz"},"content":"     * Each line is a command to create a trip object or the corresponding day/item objects,","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"gavienwz"},"content":"     * to replicate the previous state before Traveller was closed.","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"gavienwz"},"content":"     * When a line is an invalid command, it will print an error message and disregard that line.","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"gavienwz"},"content":"     * @throws SaveDataNotFoundException The save file doesn\u0027t exist.","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"gavienwz"},"content":"    private void readFromSave() throws SaveDataNotFoundException {","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"gavienwz"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"gavienwz"},"content":"        logger.log(Level.INFO, \"Reading data from \" + filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"gavienwz"},"content":"        File data \u003d new File(filePath);","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"gavienwz"},"content":"        Scanner scanner;","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"gavienwz"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"gavienwz"},"content":"            scanner \u003d new Scanner(data);","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"gavienwz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"gavienwz"},"content":"            logger.log(Level.WARNING, \"Save data cannot be found.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"gavienwz"},"content":"            throw new SaveDataNotFoundException();","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"gavienwz"},"content":"        ui.printReadSave();","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"gavienwz"},"content":"        int lineNumber \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"gavienwz"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"gavienwz"},"content":"            executeSaveData(scanner, lineNumber);","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"gavienwz"},"content":"            lineNumber++;","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"gavienwz"},"content":"     * This function is similar to the run function in traveller, handling the executing of the save commands.","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"gavienwz"},"content":"     * @param scanner Scanner object to read from the save text file.","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"gavienwz"},"content":"     * @param lineNumber Line number to indicate where an error occurs.","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"gavienwz"},"content":"    private void executeSaveData(Scanner scanner, int lineNumber) {","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"gavienwz"},"content":"        String input;","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"gavienwz"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"gavienwz"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"gavienwz"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"gavienwz"},"content":"            c.execute(tripsList, ui);","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"gavienwz"},"content":"        } catch (TravellerException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"gavienwz"},"content":"            ui.printReadSaveError(lineNumber);","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"gavienwz"},"content":"     * This function writes to save.txt the minimal number of commands to recreate the trip objects","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"gavienwz"},"content":"     * and their corresponding days/list.","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"gavienwz"},"content":"     * Each line written is a command in the format of commands that is written by the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"gavienwz"},"content":"     * @throws IOException If an I/O error occurs due to file writer class.","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"gavienwz"},"content":"     * @throws TravellerException If an error occurs in referencing the current trip.","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"gavienwz"},"content":"    private void writeToSave() throws IOException, TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"gavienwz"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"gavienwz"},"content":"        logger.log(Level.INFO, \"Writing data to \" + filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"gavienwz"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"gavienwz"},"content":"        for (int i \u003d 0; i \u003c tripsList.getSize(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"gavienwz"},"content":"            Trip current \u003d tripsList.getTrip(i);","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"gavienwz"},"content":"            fw.write(current.getSaveTrip());","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"gavienwz"},"content":"            fw.write(current.getSaveDay());","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"gavienwz"},"content":"            fw.write(current.getSaveItem());","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"gavienwz"},"content":"        fw.close();","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":162,"author":{"gitId":"gavienwz"},"content":"     * Creates save.txt. Is called if the save text file doesn\u0027t exist.","lastModifiedDate":"2021-11-06"},{"lineNumber":163,"author":{"gitId":"gavienwz"},"content":"     * @throws IOException If an I/O error occurs due to file class.","lastModifiedDate":"2021-11-06"},{"lineNumber":164,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":165,"author":{"gitId":"gavienwz"},"content":"    private void createSave() throws IOException {","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"gavienwz"},"content":"        File save \u003d new File(filePath);","lastModifiedDate":"2021-11-06"},{"lineNumber":167,"author":{"gitId":"gavienwz"},"content":"        save.createNewFile();","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"gavienwz"},"content":"     * Creates a directory. Is called if the save directory doesn\u0027t exist.","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"gavienwz"},"content":"    private void createDir() {","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"gavienwz"},"content":"        File dir \u003d new File(directoryPath);","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"gavienwz"},"content":"        dir.mkdir();","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"gavienwz"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"gavienwz":175,"Uxinnn":2}},{"path":"src/main/java/seedu/traveller/worldmap/Country.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.worldmap;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Country implements Comparable\u003cCountry\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d Logger.getLogger(Country.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final int key;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public final String name;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private List\u003cDistance\u003e distances;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private boolean visited;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Country prevCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public double minDistance \u003d Double.MAX_VALUE;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Country(String name, int key) {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.distances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.key \u003d key;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"Created country: \"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                + \"\\n\\tname: \" + this.name","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                + \"\\n\\tkey: \" + this.key);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void addNeighbour(Double distance, Country startCountry, Country endCountry) {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"Adding new neighbour: \"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                + \"\\n\\tdistance: \" + distance","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                + \"\\n\\tstartCountry: \" + startCountry","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                + \"\\n\\tendCountry: \" + endCountry);","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        startCountry.distances.add(new Distance(distance, startCountry, endCountry));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static void updateNeighbour(Double newDistance, Country startCountry, Country endCountry) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"Updating neighbour: \"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                + \"\\n\\tnewDistance: \" + newDistance","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                + \"\\n\\tstartCountry: \" + startCountry","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                + \"\\n\\tendCountry: \" + endCountry);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        int endCountryKey \u003d endCountry.getKey();","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        for (Distance distance : startCountry.getDistances()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            if (distance.getEndCountry().getKey() \u003d\u003d endCountryKey) {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                distance.setDistance(newDistance);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public List\u003cDistance\u003e getDistances() {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this.distances;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setDistances(List\u003cDistance\u003e distances) {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.distances \u003d distances;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean isVisited() {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this.visited;","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setVisited(boolean visited) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.visited \u003d visited;","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Country getPrevCountry() {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this.prevCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPrevCountry(Country prevCountry) {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.prevCountry \u003d prevCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public double getMinDistance() {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this.minDistance;","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setMinDistance(double minDistance) {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.minDistance \u003d minDistance;","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this.name;","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public int compareTo(Country otherCountry) {","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return Double.compare(this.minDistance, otherCountry.minDistance);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public int getKey() {","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this.key;","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Uxinnn":9,"-":88}},{"path":"src/main/java/seedu/traveller/worldmap/DataLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.worldmap;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.exceptions.IllegalFlightFileException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.exceptions.WorldMapException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.exceptions.FlightDataNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import java.io.File;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"gavienwz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"gavienwz"},"content":"//@@author gavienwz","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"gavienwz"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"gavienwz"},"content":" * This class is responsible for creating the world map\u0027s countries and distances (vertexes and edges).","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"gavienwz"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"gavienwz"},"content":"public class DataLoader {","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gavienwz"},"content":"    private static final Logger logger \u003d Logger.getLogger(DataLoader.class.getName());","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gavienwz"},"content":"    private final int numberOfCountries \u003d 5;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"gavienwz"},"content":"    private final int countryCodeLength \u003d 3;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"gavienwz"},"content":"    private final String filePath \u003d \"./flightData/time.txt\";","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"gavienwz"},"content":"    private final String filePath2 \u003d \"./flightData/cost.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"gavienwz"},"content":"    private final String separator \u003d \"\\\\|\";","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"gavienwz"},"content":"     * This function is responsible for adding the countries (vertexes).","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"gavienwz"},"content":"     * @param countryCodes The relevant line that is read from the text file.","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"gavienwz"},"content":"     * @param graphList The graphList that contains the country and distance matrices.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gavienwz"},"content":"     * @throws IllegalFlightFileException When the text file contains unreadable data. (Invalid Country Codes)","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"gavienwz"},"content":"    protected void loadCountries(String[] countryCodes, GraphList graphList) throws IllegalFlightFileException {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"gavienwz"},"content":"        logger.log(Level.INFO, \"Loading countries: \" + Arrays.toString(countryCodes));","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"gavienwz"},"content":"        assert countryCodes.length \u003d\u003d numberOfCountries;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"gavienwz"},"content":"        for (int j \u003d 0; j \u003c numberOfCountries; j++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"gavienwz"},"content":"            String countryCode \u003d countryCodes[j];","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"gavienwz"},"content":"            if (countryCode.length() !\u003d countryCodeLength) {","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"gavienwz"},"content":"                throw new IllegalFlightFileException();","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"gavienwz"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"gavienwz"},"content":"            int countryIndex \u003d j + 1;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"gavienwz"},"content":"            Country current \u003d new Country(countryCode, countryIndex);","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"gavienwz"},"content":"            graphList.addVertex(current);","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"gavienwz"},"content":"     * This function is responsible for adding the distances (edges) between two countries (vertexes).","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"gavienwz"},"content":"     * @param rawDistances The relevant line that is read from the text file.","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"gavienwz"},"content":"     * @param graphList The graphList that contains the country and distance matrices.","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"gavienwz"},"content":"     * @throws IllegalFlightFileException When the text file contains unreadable data. (Negative / Non numbers)","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"gavienwz"},"content":"    protected void loadDistances(String[] rawDistances, GraphList graphList) throws IllegalFlightFileException {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"gavienwz"},"content":"        logger.log(Level.INFO, \"Loading distances: \" + Arrays.toString(rawDistances));","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"gavienwz"},"content":"        assert rawDistances.length \u003c\u003d numberOfCountries;","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"gavienwz"},"content":"        for (int k \u003d 0; k \u003c rawDistances.length; k++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"gavienwz"},"content":"            double distance;","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"gavienwz"},"content":"            try {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"gavienwz"},"content":"                distance \u003d Double.parseDouble(rawDistances[k]);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"gavienwz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"gavienwz"},"content":"                throw new IllegalFlightFileException();","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"gavienwz"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"gavienwz"},"content":"            if (distance \u003c 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"gavienwz"},"content":"                throw new IllegalFlightFileException();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"gavienwz"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"gavienwz"},"content":"            ArrayList\u003cCountry\u003e countryArray \u003d graphList.getVertexArray();","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"gavienwz"},"content":"            Country sourceCountry \u003d countryArray.get(k);","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"gavienwz"},"content":"            Country destinationCountry \u003d countryArray.get(rawDistances.length);","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"gavienwz"},"content":"            if (distance !\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"gavienwz"},"content":"                assert distance \u003e 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"gavienwz"},"content":"                graphList.createEdge(distance, destinationCountry, sourceCountry);","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"gavienwz"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"gavienwz"},"content":"     * This is the main function of the class. It reads the text file for information","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"gavienwz"},"content":"     * and passes the countries and distances to be added to the world map.","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"gavienwz"},"content":"     * The first line read contains the countries, while the remaining lines read contains the distances.","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"gavienwz"},"content":"     * @return graphList which contains the Country (vertex) matrix and Distance (edge matrix).","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"gavienwz"},"content":"     * @throws WorldMapException When the text file doesn\u0027t exist or when it contains invalid data.","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"gavienwz"},"content":"    public GraphList readData() throws WorldMapException {","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"gavienwz"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"gavienwz"},"content":"        logger.log(Level.INFO, \"Reading data from \" + filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"gavienwz"},"content":"        File data \u003d new File(filePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"gavienwz"},"content":"        Scanner scanner;","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"gavienwz"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"gavienwz"},"content":"            scanner \u003d new Scanner(data);","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"gavienwz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"gavienwz"},"content":"            logger.log(Level.WARNING, \"Flight data cannot be found.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"gavienwz"},"content":"            throw new FlightDataNotFoundException();","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"gavienwz"},"content":"        GraphList graphList \u003d new GraphList();","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"gavienwz"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"gavienwz"},"content":"        while (scanner.hasNext() \u0026\u0026 i \u003c numberOfCountries) {","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"gavienwz"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"gavienwz"},"content":"                readCountries(scanner, graphList);","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"gavienwz"},"content":"            } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"gavienwz"},"content":"                readDistance(scanner, graphList, i);","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"gavienwz"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"gavienwz"},"content":"            i++;","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"gavienwz"},"content":"        return graphList;","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"gavienwz"},"content":"     * This is the main function of the class. It reads the text file for information","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"gavienwz"},"content":"     * and passes the countries and costs to be added to the world map.","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"gavienwz"},"content":"     * The first line read contains the countries, while the remaining lines read contains the costs.","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"gavienwz"},"content":"     * @return graphList which contains the Country (vertex) matrix and Cost (edge matrix).","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"gavienwz"},"content":"     * @throws WorldMapException When the text file doesn\u0027t exist or when it contains invalid data.","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"gavienwz"},"content":"    public GraphList readAltData() throws WorldMapException {","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"gavienwz"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"gavienwz"},"content":"        logger.log(Level.INFO, \"Reading data from \" + filePath2);","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"gavienwz"},"content":"        File data \u003d new File(filePath2);","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"gavienwz"},"content":"        Scanner scanner;","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"gavienwz"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"gavienwz"},"content":"            scanner \u003d new Scanner(data);","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"gavienwz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"gavienwz"},"content":"            logger.log(Level.WARNING, \"Flight data cannot be found.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"gavienwz"},"content":"            throw new FlightDataNotFoundException();","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"gavienwz"},"content":"        GraphList graphList \u003d new GraphList();","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"gavienwz"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"gavienwz"},"content":"        while (scanner.hasNext() \u0026\u0026 i \u003c numberOfCountries) {","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"gavienwz"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"gavienwz"},"content":"                readCountries(scanner, graphList);","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"gavienwz"},"content":"            } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"gavienwz"},"content":"                readDistance(scanner, graphList, i);","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"gavienwz"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"gavienwz"},"content":"            i++;","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"gavienwz"},"content":"        return graphList;","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"gavienwz"},"content":"     * This function reads the country data from the text file.","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"gavienwz"},"content":"     * @param scanner Scanner object to read from the text file.","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"gavienwz"},"content":"     * @param graphList GraphList to add countries to.","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"gavienwz"},"content":"     * @throws IllegalFlightFileException If the text file contains invalid data (More country codes than expected.)","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"gavienwz"},"content":"    public void readCountries(Scanner scanner, GraphList graphList) throws IllegalFlightFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"gavienwz"},"content":"        String[] rawInput \u003d parseNextLine(scanner, numberOfCountries);","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"gavienwz"},"content":"        if (rawInput.length !\u003d numberOfCountries) {","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"gavienwz"},"content":"            throw new IllegalFlightFileException();","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"gavienwz"},"content":"        loadCountries(rawInput, graphList);","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"gavienwz"},"content":"     * This function reads the time/cost data from the text file, depending on which text file is read from.","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"gavienwz"},"content":"     * @param scanner Scanner object to read from the text file.","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"gavienwz"},"content":"     * @param graphList GraphList to add time/cost to.","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"gavienwz"},"content":"     * @param i Variable to ensure that data is read in lower triangular matrix. (Which the text file will contain.)","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"gavienwz"},"content":"     * @throws IllegalFlightFileException If the text file contains invalid data","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"gavienwz"},"content":"     *     (More time/cost numbers than expected.)","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"gavienwz"},"content":"    private void readDistance(Scanner scanner, GraphList graphList, int i) throws IllegalFlightFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"gavienwz"},"content":"        String[] rawInput \u003d parseNextLine(scanner, i);","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"gavienwz"},"content":"        if (rawInput.length !\u003d i) {","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"gavienwz"},"content":"            throw new IllegalFlightFileException();","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"gavienwz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"gavienwz"},"content":"        loadDistances(rawInput, graphList);","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"gavienwz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":169,"author":{"gitId":"gavienwz"},"content":"     * This function parses the next line according to how readCountries and readDistance wants it to be.","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"gavienwz"},"content":"     * @param scanner Scanner object to read from the text file.","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"gavienwz"},"content":"     * @param limit Number to ensure only certain number of data is read.","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"gavienwz"},"content":"     * @return Parsed string array that contains Country codes or Time/Costs to be added to the GraphList.","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"gavienwz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"gavienwz"},"content":"    private String[] parseNextLine(Scanner scanner, int limit) {","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"gavienwz"},"content":"        return scanner.nextLine().split(separator, limit);","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":178,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"gavienwz"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"gavienwz":166,"Uxinnn":13}},{"path":"src/main/java/seedu/traveller/worldmap/Distance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.worldmap;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Distance {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    private double distance;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private Country startCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private Country endCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Distance(double distance, Country startCountry, Country endCountry) {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.distance \u003d distance;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        this.startCountry \u003d startCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        this.endCountry \u003d endCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public double getDistance() {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return this.distance;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void setDistance(double distance) {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.distance \u003d distance;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Country getStartCountry() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return this.startCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setStartCountry(Country startCountry) {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.startCountry \u003d startCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Country getEndCountry() {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return this.endCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setEndCountry(Country endCountry) {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.endCountry \u003d endCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Uxinnn":3,"-":36}},{"path":"src/main/java/seedu/traveller/worldmap/GraphList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.worldmap;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.exceptions.EmptyVertexException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class GraphList {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d Logger.getLogger(GraphList.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final ArrayList\u003cCountry\u003e vertexArray;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final ArrayList\u003cString\u003e nameArray;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double[][] edgeMatrix;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public GraphList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        logger.log(Level.FINE, \"Created a GraphList\");","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.vertexArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.nameArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.edgeMatrix \u003d new double[10][10];","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ArrayList\u003cCountry\u003e getVertexArray() {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return this.vertexArray;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ArrayList\u003cString\u003e getNameArray() {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return this.nameArray;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public double[][] getEdgeMatrix() {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return this.edgeMatrix;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void addVertex(Country v) {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.vertexArray.add(v);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.nameArray.add(v.name);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Country findVertex(String s) throws EmptyVertexException {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        for (Country v: this.vertexArray) {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            if (Objects.equals(v.name, s)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                return v;","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        throw new EmptyVertexException(s);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void modifyEdge(Double distance, Country startCountry, Country endCountry) {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"Modifying an edge: \"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                + \"\\n\\tdistance: \" + distance","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + \"\\n\\tstartCountry: \" + startCountry","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + \"\\n\\tendCountry: \" + endCountry);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        int startCountryKey \u003d startCountry.getKey();","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        int endCountryKey \u003d endCountry.getKey();","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        edgeMatrix[startCountryKey][endCountryKey] \u003d distance;","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        edgeMatrix[endCountryKey][startCountryKey] \u003d distance;","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Country.updateNeighbour(distance, startCountry, endCountry);","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Country.updateNeighbour(distance, endCountry, startCountry);","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void createEdge(Double distance, Country startCountry, Country endCountry) {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"Creating an edge: \"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + \"\\n\\tdistance: \" + distance","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + \"\\n\\tstartCountry: \" + startCountry","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + \"\\n\\tendCountry: \" + endCountry);","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        int startCountryKey \u003d startCountry.getKey();","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        int endCountryKey \u003d endCountry.getKey();","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        edgeMatrix[startCountryKey][endCountryKey] \u003d distance;","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        edgeMatrix[endCountryKey][startCountryKey] \u003d distance;","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Country.addNeighbour(distance, startCountry, endCountry);","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Country.addNeighbour(distance, endCountry, startCountry);","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Uxinnn":10,"-":68}},{"path":"src/main/java/seedu/traveller/worldmap/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.worldmap;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Logic {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final double[][] adjMatrix \u003d new double[10][10];","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void computeSource(Country src, GraphList graphList) {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        ArrayList\u003cCountry\u003e vertexArray \u003d graphList.getVertexArray();","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        for (Country v: vertexArray) {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            v.minDistance \u003d Double.MAX_VALUE;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        src.setMinDistance(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        PriorityQueue\u003cCountry\u003e priorityQueue \u003d new PriorityQueue\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        priorityQueue.add(src);","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        while (!priorityQueue.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Country vertex \u003d priorityQueue.poll();","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            for (Distance distance : vertex.getDistances()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                Country v \u003d distance.getEndCountry();","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                double w \u003d distance.getDistance();","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                double minDist \u003d vertex.getMinDistance() + w;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                if (minDist \u003c v.getMinDistance()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    priorityQueue.remove(vertex);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    v.setPrevCountry(vertex);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    v.setMinDistance(minDist);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    priorityQueue.add(v);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    adjMatrix[vertex.getKey()][v.getKey()] \u003d minDist;","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    adjMatrix[v.getKey()][vertex.getKey()] \u003d minDist;","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public MinCalcResult getToGoal(Country sourceCountry, Country targetCountry) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cCountry\u003e path \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cDouble\u003e accumDist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        List\u003cDouble\u003e dist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        double curr;","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        double sum \u003d 0.0;","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (Country country \u003d targetCountry; country !\u003d null; country \u003d country.getPrevCountry()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            if (!path.contains(country)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                path.add(country);","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                if (country.getPrevCountry() !\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    accumDist.add(adjMatrix[country.getPrevCountry().getKey()][country.getKey()]);","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                if (country \u003d\u003d sourceCountry) {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Collections.reverse(path);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Collections.reverse(accumDist);","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (double d : accumDist) {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            curr \u003d d - sum;","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (curr - 0.0 \u003e 0.000001) {","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                dist.add(curr);","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            sum +\u003d curr;","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        MinCalcResult result \u003d new MinCalcResult(sourceCountry, targetCountry, path, dist);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return result;","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Uxinnn":7,"-":68}},{"path":"src/main/java/seedu/traveller/worldmap/MinCalcResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.worldmap;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class MinCalcResult {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private final Country startCountry;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final Country endCountry;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private final List\u003cCountry\u003e path;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final List\u003cDouble\u003e time;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private int error;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public MinCalcResult(Country startCountry, Country endCountry, List\u003cCountry\u003e path, List\u003cDouble\u003e time) {","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        this.startCountry \u003d startCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.endCountry \u003d endCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.error \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void setError() {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        error \u003d 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Country getStartCountry() {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return this.startCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Country getEndCountry() {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return endCountry;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public List\u003cCountry\u003e getPath() {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return path;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public List\u003cDouble\u003e getTime() {","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return time;","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public int getError() {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return error;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return \"minCalcResult:\\n\\t\" + getStartCountry() + \" to \" + getEndCountry()","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                + \"\\n\\t\" + getPath() + \"\\n\\t\" + getTime();","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Uxinnn":4,"-":46}},{"path":"src/main/java/seedu/traveller/worldmap/WorldMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.worldmap;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.exceptions.EmptyVertexException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"jach23"},"content":"import seedu.traveller.worldmap.exceptions.NonZeroDistanceException;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.exceptions.WorldMapException;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"jach23"},"content":"import seedu.traveller.worldmap.exceptions.NonStringDistanceException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class WorldMap {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    protected static GraphList graphList \u003d new GraphList();","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    protected static DataLoader loader \u003d new DataLoader();","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected static Logic logic \u003d new Logic();","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void initWorldMap() {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            graphList \u003d loader.readData();","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        } catch (WorldMapException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void altWorldMap() {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            graphList \u003d loader.readAltData();","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (WorldMapException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void printWorld() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        for (String countryCode : graphList.getNameArray()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            System.out.print(countryCode + \" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        int numberOfCountries \u003d graphList.getNameArray().size();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        System.out.println(numberOfCountries);","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Country startCountry;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Country endCountry;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numberOfCountries; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            for (int j \u003d 0; j \u003c numberOfCountries; j++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                startCountry \u003d graphList.getVertexArray().get(i);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                endCountry \u003d graphList.getVertexArray().get(j);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                int startCountryKey \u003d startCountry.getKey();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                int endCountryKey \u003d endCountry.getKey();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                System.out.println(\"From : \" + startCountry + \" To : \" + endCountry","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        + \" is \" + graphList.getEdgeMatrix()[startCountryKey][endCountryKey]);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static MinCalcResult calcMinTime(String sourceCountryName, String targetCountryName) {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Country sourceCountry \u003d getValidCountry(sourceCountryName);","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Country targetCountry \u003d getValidCountry(targetCountryName);","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (sourceCountry.getKey() \u003d\u003d -1 || targetCountry.getKey() \u003d\u003d -1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            MinCalcResult result \u003d new MinCalcResult(sourceCountry, targetCountry, null, null);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            result.setError();","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return result;","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logic.computeSource(sourceCountry, graphList);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return logic.getToGoal(sourceCountry,targetCountry);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static MinCalcResult calcMinCost(String sourceCountryName, String targetCountryName) {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        altWorldMap();","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Country sourceCountry \u003d getValidCountry(sourceCountryName);","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Country targetCountry \u003d getValidCountry(targetCountryName);","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (sourceCountry.getKey() \u003d\u003d -1 || targetCountry.getKey() \u003d\u003d -1) {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            MinCalcResult result \u003d new MinCalcResult(sourceCountry, targetCountry, null, null);","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            result.setError();","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return result;","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logic.computeSource(sourceCountry, graphList);","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        MinCalcResult minResult \u003d logic.getToGoal(sourceCountry,targetCountry);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        initWorldMap();","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return minResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Country getValidCountry(String countryName) {","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Country country \u003d new Country(\"\",-1);;","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            country \u003d graphList.findVertex(countryName);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (EmptyVertexException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return country;","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void distanceNonZero(double dist) throws NonZeroDistanceException {","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (dist \u003c 0.1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new NonZeroDistanceException(dist);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void distanceNonString(String rawDist)","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throws NonStringDistanceException {","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Double.parseDouble(rawDist);","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new NonStringDistanceException(rawDist);","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void editMap(Double dist, String sourceCountryName, String targetCountryName) {","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Country sourceCountry \u003d getValidCountry(sourceCountryName);","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Country targetCountry \u003d getValidCountry(targetCountryName);","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            graphList.modifyEdge(dist, sourceCountry, targetCountry);","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            distanceNonZero(dist);","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (NonZeroDistanceException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"jach23":2,"Uxinnn":5,"-":112}},{"path":"src/main/java/seedu/traveller/worldmap/exceptions/EmptyVertexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.worldmap.exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class EmptyVertexException extends WorldMapException {","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public EmptyVertexException(String s) {","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        message \u003d \"\\tCountry \u0027\" + s + \"\u0027 doesn\u0027t exist!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Uxinnn":2,"-":6}},{"path":"src/main/java/seedu/traveller/worldmap/exceptions/FlightDataNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.worldmap.exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"public class FlightDataNotFoundException extends WorldMapException {","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"    public FlightDataNotFoundException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tFlight data cannot be found, is the database file under ./flightData/flights.txt?\";","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Uxinnn":8}},{"path":"src/main/java/seedu/traveller/worldmap/exceptions/IllegalFlightFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.worldmap.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"gavienwz"},"content":"//@@author gavienwz","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gavienwz"},"content":"public class IllegalFlightFileException extends WorldMapException {","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"gavienwz"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"gavienwz"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"gavienwz"},"content":"        return \"My data have been tampered with. Please re-download flights.txt\";","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"gavienwz"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"gavienwz":9,"Uxinnn":1}},{"path":"src/main/java/seedu/traveller/worldmap/exceptions/NonStringDistanceException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"package seedu.traveller.worldmap.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class NonStringDistanceException extends WorldMapException {","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public NonStringDistanceException(String dist) {","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        message \u003d \"\\tDistance \" + dist + \" needs to be a number!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jach23":2,"-":6}},{"path":"src/main/java/seedu/traveller/worldmap/exceptions/NonZeroDistanceException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"package seedu.traveller.worldmap.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author Jach23","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class NonZeroDistanceException extends WorldMapException {","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public NonZeroDistanceException(Double dist) {","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        message \u003d \"\\tDistance \" + dist + \" needs to be non-zero!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jach23":2,"-":6}},{"path":"src/main/java/seedu/traveller/worldmap/exceptions/WorldMapException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.worldmap.exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"public class WorldMapException extends Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"    protected String message \u003d \"An unknown error has occurred.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"        return message;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Uxinnn":10}},{"path":"src/test/java/seedu/traveller/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"jach23"},"content":"import seedu.traveller.commands.DeleteCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"jach23"},"content":"import seedu.traveller.commands.EditCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"jach23"},"content":"import seedu.traveller.commands.NewCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"jach23"},"content":"import seedu.traveller.commands.ViewCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"jach23"},"content":"import seedu.traveller.commands.ShortestCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"jach23"},"content":"import seedu.traveller.commands.AddItemCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"jach23"},"content":"import seedu.traveller.commands.SearchItemCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"jach23"},"content":"import seedu.traveller.commands.EditItemCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"jach23"},"content":"import seedu.traveller.commands.AddDayCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"jach23"},"content":"import seedu.traveller.commands.ExitCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.CommandNotFoundException;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.EmptyFieldValueException;","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.IllegalTimeFormatException;","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.IllegalTimeValueException;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.IllegalTripNameException;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.InvalidAddDayFormatException;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.InvalidAddItemFormatException;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.InvalidNewFormatException;","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.InvalidNumberOfDaysException;","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.InvalidViewCommandException;","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"jach23"},"content":"import seedu.traveller.exceptions.InvalidSearchItemFormatException;","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"jach23"},"content":"import seedu.traveller.exceptions.InvalidEditItemFormatException;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"public class ParserTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"    public void parse_success() throws TravellerException {","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"        NewCommand newCommand \u003d new NewCommand(\"trip0\", \"CHN\", \"JPN\");","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(newCommand.toString(), Parser.parse(\"new trip0 /from    CHN /to JPN\").toString());","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"        EditCommand editCommand \u003d new EditCommand(\"trip1\", \"\", \"SIN\", \"MLY\");","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(editCommand.toString(), Parser.parse(\"edit trip1 /from SIN /to MLY   \").toString());","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"trip2\");","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(deleteCommand.toString(), Parser.parse(\"delete    trip2   \").toString());","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(\"all\");","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(viewCommand.toString(), Parser.parse(\"view all\").toString());","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"        ShortestCommand shortestDistCommand \u003d new ShortestCommand(\"time\", \"SKR\", \"JPN\");","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(shortestDistCommand.toString(), Parser.parse(\"shortest-time /from SKR /to JPN\").toString());","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"        ShortestCommand shortestCostCommand \u003d new ShortestCommand(\"cost\", \"SKR\", \"JPN\");","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(shortestCostCommand.toString(), Parser.parse(\"shortest-cost /from SKR /to JPN\").toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"        AddDayCommand addDayCommand \u003d new AddDayCommand(\"trip3\", 3);","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(addDayCommand.toString(), Parser.parse(\"add-day trip3 /day 3\").toString());","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"        AddItemCommand addItemCommand \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"                new AddItemCommand(\"trip4\", 0, \"1300\", \"sleep at home\");","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(addItemCommand.toString(),","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"                Parser.parse(\"add-item trip4 /day 0 /time 1300 /name sleep at home\").toString());","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"        SearchItemCommand searchItemCommand \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"                new SearchItemCommand(\"trip4\", 0, \"dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(searchItemCommand.toString(),","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"                Parser.parse(\"search-item trip4 /day 0 /key dinner\").toString());","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"        EditItemCommand editItemCommand \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"                new EditItemCommand(\"trip4\", 0, 1, \"1900\", \"wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(editItemCommand.toString(),","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"Uxinnn"},"content":"                Parser.parse(\"edit-item trip4 /day 0 /index 1 /time 1900 /name wake up from bed\").toString());","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"        EditItemCommand editItemCommand2 \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"Uxinnn"},"content":"                new EditItemCommand(\"trip4\", 0, 1, \"1900\", \"\");","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(editItemCommand2.toString(),","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"Uxinnn"},"content":"                Parser.parse(\"edit-item trip4 /day 0 /index 1 /time 1900\").toString());","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"Uxinnn"},"content":"        EditItemCommand editItemCommand3 \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"Uxinnn"},"content":"                new EditItemCommand(\"trip4\", 0, 1, \"\", \"wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(editItemCommand3.toString(),","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"Uxinnn"},"content":"                Parser.parse(\"edit-item trip4 /day 0 /index 1 /name wake up from bed\").toString());","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"Uxinnn"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(exitCommand.toString(), Parser.parse(\"exit\").toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"Uxinnn"},"content":"    public void parse_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(CommandNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"bad command\");","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"Uxinnn"},"content":"    public void parse_newCommand_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"Uxinnn"},"content":"        // Invalid trip name, all","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(IllegalTripNameException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"new all /from CHN /to JPN\");","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"Uxinnn"},"content":"        // Missing trip name","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(EmptyFieldValueException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"new  /from CHN /to JPN\");","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"Uxinnn"},"content":"        // Missing /to flag","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidNewFormatException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"new trip /from CHN JPN\");","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"Uxinnn"},"content":"        // Missing /from flag","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidNewFormatException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"new trip CHN /to JPN\");","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"Uxinnn"},"content":"        // Missing flags and values","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidNewFormatException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"new trip\");","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"Uxinnn"},"content":"    public void parse_addDayCommand_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /day flag input, character","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidNumberOfDaysException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-day trip /day a\");","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /day flag input, 0","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidNumberOfDaysException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-day trip /day 0\");","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /day flag input, negative integer","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidNumberOfDaysException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-day trip /day -1\");","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"Uxinnn"},"content":"        // Missing /day flag input","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(EmptyFieldValueException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-day trip /day \");","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"Uxinnn"},"content":"        // Missing /day flag","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidAddDayFormatException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-day trip 3\");","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"Uxinnn"},"content":"        // Missing whitespace between /day flag and value","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidAddDayFormatException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-day trip /day3\");","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"Uxinnn"},"content":"    public void parse_addItemCommand_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /day flag input, character","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidNumberOfDaysException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-item trip /day a /time 1900 /name Eat dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":150,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /day flag input, negative integer","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidNumberOfDaysException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-item trip /day -1 /time 1900 /name Eat dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":154,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-01"},{"lineNumber":155,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /time flag input, negative integer 3 digits","lastModifiedDate":"2021-11-01"},{"lineNumber":156,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(IllegalTimeValueException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":157,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-item trip /day 0 /time -100 /name Eat dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-01"},{"lineNumber":159,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /time flag input, negative integer 4 digits","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(IllegalTimeValueException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-item trip /day 0 /time -1000 /name Eat dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /time flag input, integer 1 digits","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(IllegalTimeValueException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-item trip /day 0 /time 2 /name Eat dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":166,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /time flag input, integer exceed 2359","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(IllegalTimeValueException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-item trip /day 0 /time 2400 /name Eat dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-01"},{"lineNumber":171,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /time flag input, wrong format","lastModifiedDate":"2021-11-01"},{"lineNumber":172,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(IllegalTimeFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":173,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-item trip /day 0 /time 7pm /name Eat dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":174,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":175,"author":{"gitId":"Uxinnn"},"content":"        // Missing /day flag value","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(EmptyFieldValueException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":177,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-item trip /day  /time 1900 /name Eat dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":178,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":179,"author":{"gitId":"Uxinnn"},"content":"        // Missing /day flag","lastModifiedDate":"2021-10-30"},{"lineNumber":180,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidAddItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":181,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-item trip /time 1900 /name Eat dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":183,"author":{"gitId":"Uxinnn"},"content":"        // Missing /time flag","lastModifiedDate":"2021-10-30"},{"lineNumber":184,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidAddItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":185,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-item trip /day 0 /name Eat dinner\");","lastModifiedDate":"2021-10-30"},{"lineNumber":186,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":187,"author":{"gitId":"Uxinnn"},"content":"        // Missing /name flag","lastModifiedDate":"2021-10-30"},{"lineNumber":188,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidAddItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":189,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-item trip /day 0 /time 1900\");","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":191,"author":{"gitId":"Uxinnn"},"content":"        // Wrong order of flags in add-item command","lastModifiedDate":"2021-10-30"},{"lineNumber":192,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidAddItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":193,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-item trip /time 1900 /name Eat dinner /day 0\");","lastModifiedDate":"2021-11-01"},{"lineNumber":194,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":195,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidAddItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":196,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"add-item trip /day /time /name \");","lastModifiedDate":"2021-10-30"},{"lineNumber":197,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":198,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":200,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"Uxinnn"},"content":"    public void parse_searchItemCommand_exceptionThrown() {","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /day flag input, character","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidNumberOfDaysException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"search-item trip /day a /key dinner\");","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /day flag input, negative integer","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidNumberOfDaysException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"search-item trip /day -23 /key dinner\");","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"Uxinnn"},"content":"        // Missing /day flag value","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(EmptyFieldValueException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"search-item trip /day  /key dinner\");","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"Uxinnn"},"content":"        // Missing trip","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidSearchItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"search-item /day 0 /key dinner\");","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"Uxinnn"},"content":"        // Missing /day flag","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidSearchItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"search-item trip /key dinner\");","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"Uxinnn"},"content":"        // Missing /key flag","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidSearchItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"search-item trip /day 0 \");","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"Uxinnn"},"content":"        // Wrong order of flags in search-item command","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidSearchItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"search-item /day 0 trip4 /key dinner\");","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidSearchItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"search-item /key dinner /day 0 trip4\");","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidSearchItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"search-item /key dinner trip4 /day 0\");","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"Uxinnn"},"content":"    public void parse_editItemCommand_exceptionThrown() {","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"Uxinnn"},"content":"        //\"edit-item trip4 /day 0 /time 1900 /name wake up from bed /index 1\"","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /day flag input, character","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidNumberOfDaysException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /day a /index 1 /time 1900 /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":244,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /day flag input, negative integer","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidNumberOfDaysException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /day -27 /index 1 /time 1900 /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":248,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /time flag input, negative integer 3 digits","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(IllegalTimeValueException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /day 0 /index 1 /time -321 /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":252,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /time flag input, negative integer 4 digits","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(IllegalTimeValueException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /day 0 /index 1 /time -1234 /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":256,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /time flag input, integer 1 digits","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(IllegalTimeValueException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /day 0 /index 1 /time 7 /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":260,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /time flag input, integer exceed 2359","lastModifiedDate":"2021-11-04"},{"lineNumber":262,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(IllegalTimeValueException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /day 0 /index 1 /time 4321 /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"Uxinnn"},"content":"        // Invalid /time flag input, wrong format","lastModifiedDate":"2021-11-04"},{"lineNumber":266,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(IllegalTimeFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":267,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /day 0 /index 1 /time 7pm /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":268,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"Uxinnn"},"content":"        // Missing /day flag value","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(EmptyFieldValueException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /day  /index 1 /time 0700 /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":272,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"Uxinnn"},"content":"        // Missing /day flag","lastModifiedDate":"2021-11-04"},{"lineNumber":274,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidEditItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /index 1 /time 0700 /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":276,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"Uxinnn"},"content":"        // Missing /time flag value","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(EmptyFieldValueException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /day 0 /index 1 /time  /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":280,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"Uxinnn"},"content":"        // Missing /name flag value","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(EmptyFieldValueException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /day 0 /index 1 /time 0700 /name \");","lastModifiedDate":"2021-11-06"},{"lineNumber":284,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"Uxinnn"},"content":"        // Missing /index flag value","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(EmptyFieldValueException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /day 0 /index  /time 0700 /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":288,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"Uxinnn"},"content":"        // Missing index flag","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidEditItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /day 0  /time 0700 /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":292,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"Uxinnn"},"content":"        // Wrong order of flags in add-item command","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidEditItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":295,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /index 1 /day 0 /time 0700 /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":296,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":297,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidEditItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":298,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /index 1 /time 0700 /day 0 /name wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":299,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":300,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidEditItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":301,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item trip4 /name wake up from bed /index 1 /time 0700 /day 0\");","lastModifiedDate":"2021-11-06"},{"lineNumber":302,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":303,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(InvalidEditItemFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":304,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"edit-item /name wake up from bed trip4 /index 1 /time 0700 /day 0\");","lastModifiedDate":"2021-11-06"},{"lineNumber":305,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":306,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":307,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":308,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":309,"author":{"gitId":"Uxinnn"},"content":"    public void parse_viewCommand_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":310,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(EmptyFieldValueException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":311,"author":{"gitId":"Uxinnn"},"content":"            Parser.parse(\"view \");","lastModifiedDate":"2021-10-30"},{"lineNumber":312,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":313,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":314,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":315,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":316,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":317,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"jach23":12,"Uxinnn":305}},{"path":"src/test/java/seedu/traveller/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TripNotFoundException;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    private final DeleteCommand deleteCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    public DeleteCommandTest() {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"        this.deleteCommand \u003d new DeleteCommand(\"testTrip\");","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    public void deleteCommand_execute_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        TripsList tripsList \u003d new TripsList();","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(TripNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"            this.deleteCommand.execute(tripsList, ui);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Uxinnn":28}},{"path":"src/test/java/seedu/traveller/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gavienwz"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"gavienwz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.objects.Trip;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.objects.TripsList;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.worldmap.WorldMap;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"gavienwz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"gavienwz"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"gavienwz"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"gavienwz"},"content":"//@@author gavienwz","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"gavienwz"},"content":"class EditCommandTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"gavienwz"},"content":"    private final Ui ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"gavienwz"},"content":"    private final TripsList tripsList;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"gavienwz"},"content":"    private final NewCommand beforeEditCommand \u003d new NewCommand(\"Trip1\", \"MLY\", \"CHN\");","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"gavienwz"},"content":"    private final NewCommand afterEditCommand \u003d new NewCommand(\"Trip2\", \"SIN\", \"JPN\");","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"gavienwz"},"content":"    private final EditCommand edit \u003d new EditCommand(\"Trip1\", \"\",\"SIN\", \"JPN\");","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"gavienwz"},"content":"    public EditCommandTest() {","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"gavienwz"},"content":"        WorldMap.initWorldMap();","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"gavienwz"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"gavienwz"},"content":"        this.tripsList \u003d new TripsList();","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"gavienwz"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"gavienwz"},"content":"    public void editCommand_Success() throws TravellerException {","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"gavienwz"},"content":"        beforeEditCommand.execute(tripsList, ui);","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"gavienwz"},"content":"        afterEditCommand.execute(tripsList, ui);","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"gavienwz"},"content":"        Trip firstTrip \u003d tripsList.getTrip(0);","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"gavienwz"},"content":"        Trip secondTrip \u003d tripsList.getTrip(1);","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"gavienwz"},"content":"        assertNotEquals(firstTrip.getStartCountryCode(), secondTrip.getStartCountryCode());","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"gavienwz"},"content":"        assertNotEquals(firstTrip.getEndCountryCode(), secondTrip.getEndCountryCode());","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"gavienwz"},"content":"        assertNotEquals(firstTrip.getPath(), secondTrip.getPath());","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"gavienwz"},"content":"        assertNotEquals(firstTrip.getTime(), secondTrip.getTime());","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"gavienwz"},"content":"        edit.execute(tripsList, ui);","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"gavienwz"},"content":"        Trip editedTrip \u003d tripsList.getTrip(0);","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"gavienwz"},"content":"        assertEquals(editedTrip.getStartCountryCode(), secondTrip.getStartCountryCode());","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"gavienwz"},"content":"        assertEquals(editedTrip.getEndCountryCode(), secondTrip.getEndCountryCode());","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"gavienwz"},"content":"        assertEquals(editedTrip.getPath(), secondTrip.getPath());","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"gavienwz"},"content":"        assertEquals(editedTrip.getTime(), secondTrip.getTime());","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"gavienwz"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"gavienwz"},"content":"    public void editItemCommand_Success() throws TravellerException {","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"gavienwz"},"content":"        beforeEditCommand.execute(tripsList, ui);","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"gavienwz"},"content":"        afterEditCommand.execute(tripsList, ui);","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"gavienwz"},"content":"        AddDayCommand addDayCommand \u003d new AddDayCommand(\"Trip1\", 1);","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"gavienwz"},"content":"        AddDayCommand addDayCommand2 \u003d new AddDayCommand(\"Trip2\", 1);","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"gavienwz"},"content":"        addDayCommand.execute(tripsList, ui);","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"gavienwz"},"content":"        addDayCommand2.execute(tripsList, ui);","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"gavienwz"},"content":"        AddItemCommand addItemCommand \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"gavienwz"},"content":"                new AddItemCommand(\"Trip1\", 0, \"1300\", \"sleep at home\");","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"gavienwz"},"content":"        AddItemCommand addItemCommand2 \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"gavienwz"},"content":"                new AddItemCommand(\"Trip2\", 0, \"1900\", \"wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"gavienwz"},"content":"        addItemCommand.execute(tripsList, ui);","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"gavienwz"},"content":"        addItemCommand2.execute(tripsList, ui);","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"gavienwz"},"content":"        Trip firstTrip \u003d tripsList.getTrip(0);","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"gavienwz"},"content":"        Trip secondTrip \u003d tripsList.getTrip(1);","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"gavienwz"},"content":"        assertNotEquals(firstTrip.getStartCountryCode(), secondTrip.getStartCountryCode());","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"gavienwz"},"content":"        assertNotEquals(firstTrip.getEndCountryCode(), secondTrip.getEndCountryCode());","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"gavienwz"},"content":"        assertEquals(firstTrip.getDaySize(), secondTrip.getDaySize());","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"gavienwz"},"content":"        assertNotEquals(firstTrip.getDay(0).getItem(0).getItemName(), secondTrip.getDay(0).getItem(0).getItemName());","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"gavienwz"},"content":"        assertNotEquals(firstTrip.getDay(0).getItem(0).getItemTime(), secondTrip.getDay(0).getItem(0).getItemTime());","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"gavienwz"},"content":"        EditItemCommand editItem \u003d new EditItemCommand(\"Trip1\", 0, 0, \"1900\", \"wake up from bed\");","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"gavienwz"},"content":"        editItem.execute(tripsList, ui);","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"gavienwz"},"content":"        Trip editedTrip \u003d tripsList.getTrip(0);","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"gavienwz"},"content":"        assertEquals(editedTrip.getDaySize(), secondTrip.getDaySize());","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"gavienwz"},"content":"        assertEquals(editedTrip.getDay(0).getItem(0).getItemName(), secondTrip.getDay(0).getItem(0).getItemName());","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"gavienwz"},"content":"        assertEquals(editedTrip.getDay(0).getItem(0).getItemTime(), secondTrip.getDay(0).getItem(0).getItemTime());","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"gavienwz"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"gavienwz"},"content":"    public void editCommand_create_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"gavienwz"},"content":"        String expectedOutput \u003d \"Edit command:\"","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"gavienwz"},"content":"                + \"\\n\\ttripName: Trip1\"","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"gavienwz"},"content":"                + \"\\n\\tnewTripName: \"","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"gavienwz"},"content":"                + \"\\n\\tstartCountry: SIN\"","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"gavienwz"},"content":"                + \"\\n\\tendCountry: JPN\";","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"gavienwz"},"content":"        assertEquals(expectedOutput, edit.toString());","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"gavienwz"},"content":"    @Test public void editCommand_execute_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"gavienwz"},"content":"        assertThrows(TravellerException.class, () -\u003e this.edit.execute(tripsList, ui));","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"gavienwz"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"gavienwz":104}},{"path":"src/test/java/seedu/traveller/commands/NewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"public class NewCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    public void newCommand_create_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"        final String expectedOutput \u003d \"New command:\"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\ttripName: testTrip\"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\tstartCountry: MLY\"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\tendCountry: CHN\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"        NewCommand newCommand \u003d new NewCommand(\"testTrip\", \"MLY\", \"CHN\");","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(expectedOutput, newCommand.toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Uxinnn":19}},{"path":"src/test/java/seedu/traveller/commands/ShortestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jach23"},"content":"package seedu.traveller.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"jach23"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"jach23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"jach23"},"content":"public class ShortestCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"jach23"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"jach23"},"content":"    public void shortestCommand_create_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"jach23"},"content":"        final String expectedOutput \u003d \"Shortest command: \"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\ttimeOrCost: time\"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"jach23"},"content":"                + \"\\n\\tstartCountry: CHN\"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"jach23"},"content":"                + \"\\n\\tendCountry: SIN\";","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"        ShortestCommand shortestCommand \u003d new ShortestCommand(\"time\", \"CHN\", \"SIN\");","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"jach23"},"content":"        assertEquals(expectedOutput, shortestCommand.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"jach23"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"jach23":16,"Uxinnn":2}},{"path":"src/test/java/seedu/traveller/objects/DayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.objects;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.DuplicateItemException;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"public class DayTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"    private final Day day;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    public DayTest() {","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"        this.day \u003d new Day();","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    public void addItem_success() throws TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"        Item item1 \u003d new Item(\"1900\", \"Eat dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        Item item2 \u003d new Item(\"0000\", \"See northern lights\");","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"        day.addItem(item1);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        day.addItem(item2);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(item1, day.getItem(0));","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(item2, day.getItem(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"    public void deleteDay_success() throws TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"        Item item1 \u003d new Item(\"1900\", \"Eat dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"        Item item2 \u003d new Item(\"0000\", \"See northern lights\");","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"        day.addItem(item1);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"        day.addItem(item2);","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"        day.deleteItem(0);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(item2, day.getItem(0));","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"    public void addItem_exceptionThrown() throws TravellerException {","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"        day.addItem(new Item(\"0900\", \"Dinner\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"            day.addItem(new Item(\"0900\", \"Dinner\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"    public void getItem_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"            day.getItem(10);","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"            day.getItem(-1);","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"    public void deleteItem_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"            day.deleteItem(10);","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"            day.deleteItem(-1);","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Uxinnn":67}},{"path":"src/test/java/seedu/traveller/objects/DaysListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.objects;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.DayNotFoundException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"public class DaysListTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    private final DaysList daysList;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    public DaysListTest() {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"        this.daysList \u003d new DaysList();","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    public void addDay_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        daysList.addDay();","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"        daysList.addDay();","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(2, daysList.getSize());","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"    public void deleteDay_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"        daysList.addDay();","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"        daysList.addDay();","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"            daysList.deleteDay(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"        } catch (TravellerException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(1, daysList.getSize());","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"    public void deleteDay_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(DayNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"            daysList.deleteDay(10);","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(DayNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"            daysList.deleteDay(-1);","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"    public void getDay_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(DayNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"            daysList.getDay(10);","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(DayNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"            daysList.getDay(-1);","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Uxinnn":58}},{"path":"src/test/java/seedu/traveller/objects/ItemsListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.objects;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.DuplicateItemException;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Cuiminjing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"public class ItemsListTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    private final ItemsList itemsList;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    public ItemsListTest() {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"        this.itemsList \u003d new ItemsList();","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"jach23"},"content":"    public void addItem_success() throws TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"        Item item1 \u003d new Item(\"1900\", \"Eat dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        Item item2 \u003d new Item(\"0000\", \"See northern lights\");","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"Cuiminjing"},"content":"        itemsList.addItem(item1);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Cuiminjing"},"content":"        itemsList.addItem(item2);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"Cuiminjing"},"content":"        assertEquals(item1, itemsList.getItem(0));","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"Cuiminjing"},"content":"        assertEquals(item2, itemsList.getItem(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(2, itemsList.getSize());","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"    public void deleteDay_success() throws TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"        Item item1 \u003d new Item(\"1900\", \"Eat dinner\");","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"        Item item2 \u003d new Item(\"0000\", \"See northern lights\");","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"Cuiminjing"},"content":"        itemsList.addItem(item1);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Cuiminjing"},"content":"        itemsList.addItem(item2);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"        itemsList.deleteItem(0);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Cuiminjing"},"content":"        assertEquals(item2, itemsList.getItem(0));","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(1, itemsList.getSize());","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"Cuiminjing"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"jach23"},"content":"    public void editItem_success() throws TravellerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"        Item item1 \u003d new Item(\"1900\", \"Check-in HolidayInn\");","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"        Item item2 \u003d new Item(\"2000\", \"Dinner at Collins\");","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"Cuiminjing"},"content":"        itemsList.addItem(item1);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"Cuiminjing"},"content":"        itemsList.addItem(item2);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"        Item item3 \u003d new Item(\"1400\", \"Check-in HotelCalifornia\");","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"jach23"},"content":"        itemsList.editItem(0, item3);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Cuiminjing"},"content":"        assertEquals(item3, itemsList.getItem(0));","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"Cuiminjing"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"    public void searchItem_success() throws TravellerException {","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"        Item item1 \u003d new Item(\"1900\", \"Check-in HolidayInn\");","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"        Item item2 \u003d new Item(\"2000\", \"Dinner at Collins\");","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"        Item item3 \u003d new Item(\"1400\", \"Check-in HotelCalifornia\");","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"        Item item4 \u003d new Item(\"1700\", \"Dinner at AnotherCollins\");","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"Cuiminjing"},"content":"        itemsList.addItem(item1);","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"Cuiminjing"},"content":"        itemsList.addItem(item2);","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"Cuiminjing"},"content":"        itemsList.addItem(item3);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"Cuiminjing"},"content":"        itemsList.addItem(item4);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"        ArrayList\u003cItem\u003e ans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"Cuiminjing"},"content":"        ans.add(item2);","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"Cuiminjing"},"content":"        ans.add(item4);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"Cuiminjing"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"Cuiminjing"},"content":"        assertEquals(ans.toString(), itemsList.searchItem(\"Collins\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"Cuiminjing"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"Uxinnn"},"content":"    public void addItem_exceptionThrown() throws TravellerException {","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"Uxinnn"},"content":"        itemsList.addItem(new Item(\"0900\", \"Dinner\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"            itemsList.addItem(new Item(\"0900\", \"Dinner\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"Uxinnn"},"content":"    public void getItem_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"Uxinnn"},"content":"            itemsList.getItem(10);","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"Uxinnn"},"content":"            itemsList.getItem(-1);","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"Uxinnn"},"content":"    public void deleteItem_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"Uxinnn"},"content":"            itemsList.deleteItem(10);","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"Uxinnn"},"content":"            itemsList.deleteItem(-1);","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"jach23":3,"Uxinnn":69,"Cuiminjing":30}},{"path":"src/test/java/seedu/traveller/objects/TripTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.objects;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.DayNotFoundException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.Country;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"class TripTest {","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    private final Trip trip;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    public TripTest() {","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"        ArrayList\u003cCountry\u003e path \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"        ArrayList\u003cDouble\u003e distances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"        path.add(new Country(\"SIN\", 0));","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        path.add(new Country(\"MLY\", 1));","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"        distances.add(1.0);","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        this.trip \u003d new Trip(\"trip1\", \"SIN\", \"MLY\", path, distances);","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"    public void testStringConvention() {","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"        final String expectedOutput \u003d \"\\t\\tTripName: trip1\"","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\t\\t\\t Origin: SIN\"","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\t\\t\\t Destination: MLY\"","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\t\\t\\t Path: [SIN, MLY]\"","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\t\\t\\t Time: [1.0]\"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"                + \"\\n\\t\\t\\t Days: \";","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(expectedOutput, trip.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"    public void getDay_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(DayNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"            trip.getDay(10);","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(DayNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"            trip.getDay(-1);","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"    public void deleteDay_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(DayNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"            trip.deleteDay(10);","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(DayNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"            trip.deleteDay(-1);","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"Uxinnn":56}},{"path":"src/test/java/seedu/traveller/objects/TripsListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.objects;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TravellerException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.exceptions.TripNotFoundException;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import seedu.traveller.worldmap.Country;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"//@@author Uxinnn","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"public class TripsListTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    private final TripsList tripsList \u003d new TripsList();","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    private final Trip tripSinMly;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    private final Trip tripSkrJpn;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    public TripsListTest() throws TravellerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"        List\u003cCountry\u003e pathSinMly \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        List\u003cDouble\u003e distancesSinMly \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"        pathSinMly.add(new Country(\"SIN\", 0));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        pathSinMly.add(new Country(\"MLY\", 1));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        distancesSinMly.add(1.0);","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        this.tripSinMly \u003d new Trip(\"tripSinMly\", \"SIN\", \"MLY\", pathSinMly, distancesSinMly);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"        List\u003cCountry\u003e pathSkrJpn \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"        List\u003cDouble\u003e distancesSkrJpn \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"        pathSkrJpn.add(new Country(\"SKR\", 2));","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"        pathSkrJpn.add(new Country(\"JPN\", 3));","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"        distancesSkrJpn.add(1.0);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"        this.tripSkrJpn \u003d new Trip(\"tripSkrJpn\", \"SKR\", \"JPN\", pathSkrJpn, distancesSkrJpn);","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"        this.tripsList.addTrip(this.tripSinMly);","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"        this.tripsList.addTrip(this.tripSkrJpn);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"    public void getTrip_success() throws TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(this.tripSinMly, this.tripsList.getTrip(0));","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(this.tripSkrJpn, this.tripsList.getTrip(1));","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"    public void getTripIndex_success() throws TravellerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(0, tripsList.getTripIndex(\"tripSinMly\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(1, tripsList.getTripIndex(\"tripSkrJpn\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"    public void getSize_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(2, this.tripsList.getSize());","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"    public void addTrip_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"            tripsList.addTrip(this.tripSinMly);","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"    public void getTrip_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(TripNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"            tripsList.getTrip(\"abc\");","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"    public void deleteTrip_exceptionThrown() {","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"            tripsList.deleteTrip(10);","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"Uxinnn"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"Uxinnn"},"content":"            tripsList.deleteTrip(-1);","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"Uxinnn"},"content":"        });","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Uxinnn":80}},{"path":"src/test/java/seedu/traveller/worldmap/DataLoaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gavienwz"},"content":"package seedu.traveller.worldmap;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"gavienwz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"gavienwz"},"content":"import seedu.traveller.worldmap.exceptions.IllegalFlightFileException;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"gavienwz"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"gavienwz"},"content":"class DataLoaderTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"gavienwz"},"content":"    private final GraphList graphList;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"gavienwz"},"content":"    private final DataLoader dataLoader;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"gavienwz"},"content":"    private final String missingCountryInput \u003d \"SIN|MLY|CHN|JPN|\";","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"gavienwz"},"content":"    private final String missingSeparatorInput \u003d \"SIN|MLY|CHN|JAPAN|SKR\";","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"gavienwz"},"content":"    private final String nonNumberDistance \u003d \"a|b|c|d|e\";","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"gavienwz"},"content":"    private final String negativeNumberDistance \u003d \"-1|3|0|-4|6\";","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"gavienwz"},"content":"    public DataLoaderTest() {","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"gavienwz"},"content":"        this.graphList \u003d new GraphList();","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"gavienwz"},"content":"        this.dataLoader \u003d new DataLoader();","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"gavienwz"},"content":"    private String[] parseInput(String input, int limit) {","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"gavienwz"},"content":"        return input.split(\"\\\\|\", limit);","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"gavienwz"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"gavienwz"},"content":"    public void loadCountries_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"gavienwz"},"content":"        assertThrows(IllegalFlightFileException.class,","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"gavienwz"},"content":"            () -\u003e dataLoader.loadCountries(parseInput(missingCountryInput, 5), graphList));","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"gavienwz"},"content":"        assertThrows(IllegalFlightFileException.class,","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"gavienwz"},"content":"            () -\u003e dataLoader.loadCountries(parseInput(missingSeparatorInput, 5), graphList));","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"gavienwz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"gavienwz"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"gavienwz"},"content":"    public void loadDistances_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"gavienwz"},"content":"        assertThrows(IllegalFlightFileException.class,","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"gavienwz"},"content":"            () -\u003e dataLoader.loadDistances(parseInput(nonNumberDistance, 5), graphList));","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"gavienwz"},"content":"        assertThrows(IllegalFlightFileException.class,","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"gavienwz"},"content":"            () -\u003e dataLoader.loadDistances(parseInput(negativeNumberDistance, 5), graphList));","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"gavienwz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"gavienwz"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"gavienwz":40}},{"path":"src/test/java/seedu/traveller/worldmap/WorldMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package seedu.traveller.worldmap;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"jach23"},"content":"import seedu.traveller.worldmap.exceptions.EmptyVertexException;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"public class WorldMapTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    public WorldMapTest() {","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"        WorldMap.initWorldMap();","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"jach23"},"content":"    public void getCountry_sin_success() throws EmptyVertexException {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"jach23"},"content":"        Country countrySin \u003d WorldMap.getValidCountry(\"SIN\");","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(new Country(\"SIN\", 0).toString(), countrySin.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"jach23"},"content":"    public void calcMinDistance_sinMly_success() throws EmptyVertexException {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        Country countrySin \u003d new Country(\"SIN\", 0);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        Country countryMly \u003d new Country(\"MLY\", 1);","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"        List\u003cCountry\u003e path \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"        path.add(countrySin);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"        path.add(countryMly);","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"        List\u003cDouble\u003e distances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"        distances.add(1.0);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"        MinCalcResult minCalcResult \u003d new MinCalcResult(countrySin, countryMly, path, distances);","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"        assertEquals(minCalcResult.toString(),","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"                WorldMap.calcMinTime(\"SIN\", \"MLY\").toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"jach23"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"jach23"},"content":"    public void calcMinCost_sinMly_success() throws EmptyVertexException {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"jach23"},"content":"        Country countrySin \u003d new Country(\"SIN\", 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"jach23"},"content":"        Country countryMly \u003d new Country(\"MLY\", 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"jach23"},"content":"        List\u003cCountry\u003e path \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"jach23"},"content":"        path.add(countrySin);","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"jach23"},"content":"        path.add(countryMly);","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"jach23"},"content":"        List\u003cDouble\u003e distances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"jach23"},"content":"        distances.add(100.0);","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"jach23"},"content":"        MinCalcResult minCalcResult \u003d new MinCalcResult(countrySin, countryMly, path, distances);","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"jach23"},"content":"        assertEquals(minCalcResult.toString(),","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"jach23"},"content":"                WorldMap.calcMinCost(\"SIN\", \"MLY\").toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"jach23"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"jach23"},"content":"    public void calcMinDistance_sinJpn_success() throws EmptyVertexException {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"jach23"},"content":"        Country countrySin \u003d new Country(\"SIN\", 0);","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"jach23"},"content":"        Country countryMly \u003d new Country(\"MLY\", 1);","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"jach23"},"content":"        Country countryJpn \u003d new Country(\"JPN\", 3);","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"jach23"},"content":"        List\u003cCountry\u003e path \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"jach23"},"content":"        path.add(countrySin);","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"jach23"},"content":"        path.add(countryMly);","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"jach23"},"content":"        path.add(countryJpn);","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"jach23"},"content":"        List\u003cDouble\u003e distances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"jach23"},"content":"        distances.add(1.0);","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"        distances.add(5.0);","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"jach23"},"content":"        MinCalcResult minCalcResult \u003d new MinCalcResult(countrySin, countryJpn, path, distances);","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"jach23"},"content":"        assertEquals(minCalcResult.toString(),","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"Uxinnn"},"content":"                WorldMap.calcMinTime(\"SIN\", \"JPN\").toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"jach23"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"jach23"},"content":"    public void calcMinDistance_jpnSin_success() throws EmptyVertexException {","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"jach23"},"content":"        Country countrySin \u003d new Country(\"SIN\", 0);","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"jach23"},"content":"        Country countryMly \u003d new Country(\"MLY\", 1);","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"jach23"},"content":"        Country countryJpn \u003d new Country(\"JPN\", 3);","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"jach23"},"content":"        List\u003cCountry\u003e path \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"jach23"},"content":"        path.add(countryJpn);","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"jach23"},"content":"        path.add(countryMly);","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"jach23"},"content":"        path.add(countrySin);","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"Uxinnn"},"content":"        List\u003cDouble\u003e distances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"Uxinnn"},"content":"        distances.add(5.0);","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"jach23"},"content":"        distances.add(1.0);","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"Uxinnn"},"content":"        MinCalcResult minCalcResult \u003d new MinCalcResult(countryJpn, countrySin, path, distances);","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"jach23"},"content":"        assertEquals(minCalcResult.toString(),","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"Uxinnn"},"content":"                WorldMap.calcMinTime(\"JPN\", \"SIN\").toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"jach23"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"jach23"},"content":"    public void updateMinDistance_jpnSin_success() throws EmptyVertexException {","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"Uxinnn"},"content":"        WorldMap.printWorld();","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"jach23"},"content":"        Country countrySin \u003d WorldMap.getValidCountry(\"SIN\");","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"jach23"},"content":"        Country countryJpn \u003d WorldMap.getValidCountry(\"JPN\");","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"jach23"},"content":"        List\u003cCountry\u003e path \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"jach23"},"content":"        List\u003cDouble\u003e distances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"jach23"},"content":"        path.add(countryJpn);","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"jach23"},"content":"        path.add(countrySin);","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"Uxinnn"},"content":"        distances.add(4.0);","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"Uxinnn"},"content":"        WorldMap.graphList.modifyEdge(4.0, countryJpn, countrySin);","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"Uxinnn"},"content":"        MinCalcResult minCalcResult \u003d new MinCalcResult(countryJpn, countrySin, path, distances);","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"jach23"},"content":"        assertEquals(minCalcResult.toString(),","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"Uxinnn"},"content":"                WorldMap.calcMinTime(\"JPN\", \"SIN\").toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"jach23"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"jach23"},"content":"    public void calcMinCost_sinJpn_success() throws EmptyVertexException {","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"jach23"},"content":"        Country countrySin \u003d new Country(\"SIN\", 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"jach23"},"content":"        Country countryChn \u003d new Country(\"CHN\", 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"jach23"},"content":"        Country countryJpn \u003d new Country(\"JPN\", 3);","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"jach23"},"content":"        List\u003cCountry\u003e path \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"jach23"},"content":"        path.add(countrySin);","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"jach23"},"content":"        path.add(countryChn);","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"jach23"},"content":"        path.add(countryJpn);","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"jach23"},"content":"        List\u003cDouble\u003e costs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"jach23"},"content":"        costs.add(150.0);","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"jach23"},"content":"        costs.add(400.0);","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"jach23"},"content":"        MinCalcResult minCalcResult \u003d new MinCalcResult(countrySin, countryJpn, path, costs);","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"jach23"},"content":"        assertEquals(minCalcResult.toString(),","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"jach23"},"content":"                WorldMap.calcMinCost(\"SIN\", \"JPN\").toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"jach23"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"jach23"},"content":"    public void calcMinCost_jpnSin_success() throws EmptyVertexException {","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"jach23"},"content":"        Country countrySin \u003d new Country(\"SIN\", 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"jach23"},"content":"        Country countryChn \u003d new Country(\"CHN\", 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"jach23"},"content":"        Country countryJpn \u003d new Country(\"JPN\", 3);","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"jach23"},"content":"        List\u003cCountry\u003e path \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"jach23"},"content":"        path.add(countryJpn);","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"jach23"},"content":"        path.add(countryChn);","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"jach23"},"content":"        path.add(countrySin);","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"jach23"},"content":"        List\u003cDouble\u003e costs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"jach23"},"content":"        costs.add(400.0);","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"jach23"},"content":"        costs.add(150.0);","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"jach23"},"content":"        MinCalcResult minCalcResult \u003d new MinCalcResult(countryJpn, countrySin, path, costs);","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"jach23"},"content":"        assertEquals(minCalcResult.toString(),","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"jach23"},"content":"                WorldMap.calcMinCost(\"JPN\", \"SIN\").toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"jach23"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"jach23"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"jach23":120,"Uxinnn":48}}]
