[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"![cOOPer](docs/userGuideImages/cooperLogo.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"# What is COOPER?","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"cOOPer is a **desktop application** developed to simplify administrative processes of **tech startups** such as **communication** and **finance management**.","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"If you are running a tech startup, cOOPer can help you with **accounting** and **communicative** tasks like:","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"- **Generating** your company\u0027s **financial statements**","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"- **Forecasting** your company\u0027s **cash flow**","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"- **Scheduling meetings** with your employees","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"- Having **discussions on forum** with your colleagues","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"## Setting up cOOPer on your computer","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"\u003e 💡 Here are the **software / tools** used in developing cOOPer. You are recommended to use them :","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"\u003e + _**IDE**_: IntelliJ IDEA (highly recommended)","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"\u003e + _**JDK**_: Java 11 ","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"\u003e + **Version control**: Git ","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"\u003e + **Git GUI**: Sourcetree","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"\u003e + **Build system**: Gradle","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"1. Fork [this repo](https://github.com/AY2122S1-CS2113T-W13-4/tp) and clone the fork into your computer.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"2. If you are using IntelliJ IDEA, ensure that IntelliJ is configured to use **JDK 11**. You can refer to IntelliJ\u0027s own documentation [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) to correctly configure the JDK.","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"3. Import the project as a Gradle project. You can follow [this guide](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to find out how to import the project into IntelliJ.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"4. Verify the setup by running `cooper.Cooper`","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"   1. Navigate to `src/main/java/cooper/Cooper.java`","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"   2. Right click on `Cooper.java` and select \u0027Run Cooper.main()\u0027.","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"   3. You should see the following output if the setup was done correctly:","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"            /$$$$$$   /$$$$$$  /$$$$$$$","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"           /$$__  $$ /$$__  $$| $$__  $$","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"  /$$$$$$$| $$  \\ $$| $$  \\ $$| $$  \\ $$ /$$$$$$   /$$$$$$","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":" /$$_____/| $$  | $$| $$  | $$| $$$$$$$//$$__  $$ /$$__  $$","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"| $$      | $$  | $$| $$  | $$| $$____/| $$$$$$$$| $$  \\__/","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"| $$      | $$  | $$| $$  | $$| $$     | $$_____/| $$","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"|  $$$$$$$|  $$$$$$/|  $$$$$$/| $$     |  $$$$$$$| $$","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":" \\_______/ \\______/  \\______/ |__/      \\_______/|__/","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"Hello I\u0027m cOOPer! Nice to meet you!","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"Log in or register to gain access to my features!","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"To log in, enter \"login [yourUsername] /pw [password] /as [yourRole]\".","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"To register, enter \"register [yourUsername] /pw [password] /as [yourRole]\".","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"To exit, enter \"exit\".","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"\u003e\u003e [Logged out]","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"5. Build automation using Gradle","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"Rrraaaeee"},"content":"### JUnit tests","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"Rrraaaeee"},"content":"* Run JUnit tests:","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"Rrraaaeee"},"content":"  1. Navigate to `src/test`.","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"Rrraaaeee"},"content":"  2. Right click on `test` and select \u0027Run \u0027All tests\u0027 \u0027.","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"Rrraaaeee"},"content":"  3. All the tests should pass, and you should see the following:","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"Rrraaaeee"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"Rrraaaeee"},"content":"    \u003cimg width\u003d250 src\u003d\"docs/developerGuideDiagrams/junitPassed.png\" alt\u003d\"junitPassed\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"Rrraaaeee"},"content":"\u003c/p\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"Rrraaaeee"},"content":"* For users, refer to cOOPer\u0027s [User Guide](UserGuide.md) ","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"Rrraaaeee"},"content":"* For developers, refer to our [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"Rrraaaeee"},"content":"* To know more about the team of developers, click [here](AboutUs.md)","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"Rrraaaeee":58,"-":28}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"    compile group: \u0027com.dopsun.chatbot\u0027, name: \u0027chatbot-cli\u0027, version: \u00270.3.0\u0027","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"    mainClassName \u003d \"cooper.Cooper\"","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"    archiveBaseName \u003d \"cOOPer\"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Rrraaaeee":2,"theeugenechong":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"# About Us","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"![](teamMembers/formal_chris.JPG) | Chris Langton | [Github](https://github.com/ChrisLangton) | [Portfolio](team/chrislangton.md)","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"![](teamMembers/rae.png) | Ray Kang Qingxuan | [Github](https://github.com/Rrraaaeee) | [Portfolio](team/rrraaaeee.md)","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"![](teamMembers/shixi_mugshot.png) | Fan Shixi | [Github](https://github.com/fansxx) | [Portfolio](team/fansxx.md)","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"![](teamMembers/EugeneChong.jpg) | Eugene Chong | [Github](https://github.com/theeugenechong) | [Portfolio](team/theeugenechong.md)","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"theeugenechong":6,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"![cOOPer](userGuideImages/cooperLogo.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"## Introducing cOOPer","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"Welcome to cOOPer\u0027s Developer Guide!","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"cOOPer is a **Command Line Interface (CLI) desktop** application developed to simplify administrative processes of **tech startups** such as **communication** and **finance management**.","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"This developer guide is for software designers, developers, and software testers of cOOPer. It will be your reference manual if you are looking to:","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"- **Know more** about cOOPer\u0027s internal **software design**","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"- **Improve** cOOPer\u0027s internal **software design**","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"- **Add** more features to cOOPer","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"- **Enhance** cOOPer\u0027s existing features","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"- Perform software **testing** on cOOPer","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"## What\u0027s in this Developer Guide","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"- [How this Developer Guide Works](#how-this-developer-guide-works)","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"- [Setting Up and Getting Started](#setting-up-and-getting-started)","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"  - [Setting up cOOPer on your computer](#setting-up-cooper-on-your-computer)","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"  - [Before you code](#before-you-code)","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"- [Design](#design)","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"  - [Overview](#overview)","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"  - [Architecture](#architecture)","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"  - [Ui component](#ui-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"  - [Parser component](#parser-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"  - [Verification component](#verification-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"  - [Command component](#command-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"  - [Resources component](#resources-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"  - [Storage component](#storage-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"  - [Util component](#util-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"fansxx"},"content":"- [Implementation](#Implementation)","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"  - [Parsing user input](#parsing-user-input)","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"  - [Interacting with forum](#interacting-with-forum)","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"  - [Requesting a resource](#requesting-a-resource)","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"  - [Verifying user credentials](#verifying-user-credentials)","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"  - [Generating a PDF from the financial statement](#generating-a-pdf-from-the-financial-statement)","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"  - [Saving and loading data](#saving-and-loading-data)","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"- [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"  - [Product Scope](#product-scope)","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"    - [Target user profile](#target-user-profile)","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"    - [Value proposition](#value-proposition)","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"  - [User Stories](#user-stories)","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"  - [Non-functional Requirements](#non-functional-requirements)","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"  - [Glossary](#glossary)","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"- [Appendix: Instructions for Manual Testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"  - [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"  - [Sign-in](#sign-in)","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"  - [Generating the PDF](#generating-the-pdf)","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"  - [Viewing help](#viewing-help)","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"  - [Forum actions](#forum-actions)","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"## How this Developer Guide Works","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"Throughout this developer guide, you will see text formatted differently from normal text, as well as symbols appearing before another line of text.","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"The table below explains the formatting and symbols in this user guide.","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"**Formatting/Symbol** | **Meaning**              |","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"------------|------------------------------------|","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"*italics* |Text in italics represent terminology specific to using / developing cOOPer.","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"**bold**|Text in bold emphasizes the text\u0027s importance and indicates that you should pay more attention to the text.","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"`code` |Short lines of text highlighted as such indicate a class, method, component or user input. It is also used to represent directories / file paths.","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"ℹ️  |The info symbol indicates useful information about diagrams / content.","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"💡     |The light bulb symbol indicates a useful tip which eases development of cOOPer.","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"This section includes the sources of code, documentation and third-party libraries reused / adapted in developing cOOPer.","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"1. The [dopsun chatbot-cli](https://github.com/dopsun/chatbot-cli) is a third-party library which eases the parsing of user input.","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"2. The implementation of [the `Storage` component](https://github.com/theeugenechong/ip/tree/master/src/main/java/duke/storage) was adapted from one of our member\u0027s CS2113T Individual Project (iP). A few of the methods for file reading and file creation were reused.","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"3. The implementation of the PBKDF2 algorithm for storing passwords was adapted from [this website](https://www.quickprogrammingtips.com/java/how-to-securely-store-passwords-in-java.html). The two methods for generating the hash as well as obtaining the salt were reused.","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"4. The method used to convert an input stream to a file in `Util.java` was adapted from [this website](https://www.baeldung.com/convert-input-stream-to-a-file).","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"5. The method used to make a _POST Request_ to an online LaTeX compiler was adapted from [this website](https://www.baeldung.com/httpurlconnection-post).","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"## Setting Up and Getting Started","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"\u003e 💡 Here are the **software / tools** used in developing cOOPer. You are recommended to use them :","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"\u003e - _**IDE**_: IntelliJ IDEA (highly recommended)","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"\u003e - _**JDK**_: Java 11 ","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"\u003e - **Version control**: Git ","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"\u003e - **Git GUI**: Sourcetree","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"Rrraaaeee"},"content":"\u003e - **Build system**: Gradle","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"### Setting up cOOPer on your computer","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"1. Fork [this repo](https://github.com/AY2122S1-CS2113T-W13-4/tp) and clone the fork into your computer.","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"2. If you are using IntelliJ IDEA, ensure that IntelliJ is configured to use **JDK 11**. You can refer to IntelliJ\u0027s own documentation [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) to correctly configure the JDK.","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"Rrraaaeee"},"content":"3. Import the project as a Gradle project. You can follow [this guide](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to find out how to import the project into IntelliJ.","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"4. Verify the setup by running `cooper.Cooper`","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"   1. Navigate to `src/main/java/cooper/Cooper.java`","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"   2. Right click on `Cooper.java` and select \u0027Run Cooper.main()\u0027.","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"   3. You should see the following output if the setup was done correctly:","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"            /$$$$$$   /$$$$$$  /$$$$$$$","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"           /$$__  $$ /$$__  $$| $$__  $$","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"  /$$$$$$$| $$  \\ $$| $$  \\ $$| $$  \\ $$ /$$$$$$   /$$$$$$","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":" /$$_____/| $$  | $$| $$  | $$| $$$$$$$//$$__  $$ /$$__  $$","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"theeugenechong"},"content":"| $$      | $$  | $$| $$  | $$| $$____/| $$$$$$$$| $$  \\__/","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"theeugenechong"},"content":"| $$      | $$  | $$| $$  | $$| $$     | $$_____/| $$","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"theeugenechong"},"content":"|  $$$$$$$|  $$$$$$/|  $$$$$$/| $$     |  $$$$$$$| $$","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"theeugenechong"},"content":" \\_______/ \\______/  \\______/ |__/      \\_______/|__/","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"theeugenechong"},"content":"Hello I\u0027m cOOPer! Nice to meet you!","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"theeugenechong"},"content":"Log in or register to gain access to my features!","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"theeugenechong"},"content":"To log in, enter \"login [yourUsername] /pw [password] /as [yourRole]\".","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"theeugenechong"},"content":"To register, enter \"register [yourUsername] /pw [password] /as [yourRole]\".","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"theeugenechong"},"content":"To exit, enter \"exit\".","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"theeugenechong"},"content":"\u003e\u003e [Logged out]","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"theeugenechong"},"content":"5. Run JUnit tests (optional):","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"theeugenechong"},"content":"      1. Navigate to `src/test`.","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"theeugenechong"},"content":"      2. Right click on `test` and select \u0027Run \u0027All tests\u0027 \u0027.","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"theeugenechong"},"content":"      3. All the tests should pass, and you should see the following:","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg width\u003d250 src\u003d\"developerGuideDiagrams/junitPassed.png\" alt\u003d\"junitPassed\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e ","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"theeugenechong"},"content":"### Before you code","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"theeugenechong"},"content":"- **Configure coding style**","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"theeugenechong"},"content":"  - If you are using IntelliJ IDEA, follow [this guide](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IntelliJ to match our coding style.","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"theeugenechong"},"content":"- **Set up Continuous Integration (CI)**","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"theeugenechong"},"content":"  - GitHub automatically detects the GitHub Actions config file located in the `.github/workflows` folder. CI for cOOPer is automatically run at each push to the \u0027master\u0027 branch or whenever a pull request is created.","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"theeugenechong"},"content":"- **Get to know cOOPer\u0027s design**","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"Rrraaaeee"},"content":"  - One last thing to know before you start coding is cOOPer\u0027s overall software design. You are recommended to get some sense of cOOPer\u0027s overall design in the [Design](#design) section below.","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"theeugenechong"},"content":"## Design","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"theeugenechong"},"content":"\u003e 💡 The architecture diagram and _UML_ diagrams in this document were created using **draw.io**. The `.png` templates used to create the diagrams can be found in the [`developerGuideDiagrams`](https://github.com/AY2122S1-CS2113T-W13-4/tp/tree/master/docs/developerGuideDiagrams) folder. ","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"theeugenechong"},"content":"\u003e To create and edit diagrams, access the draw.io [website](https://app.diagrams.net/), select \u0027Open Existing Diagram\u0027 and open the desired `.png` file. Any changes to the diagram will be saved automatically.","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"theeugenechong"},"content":"### Overview","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"theeugenechong"},"content":"cOOPer consists of two main layers: the _**verification** layer_ and the _**features** layer_ as shown in the diagram below.","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"theeugenechong"},"content":"cOOPer recognizes different sets of inputs at each layer.","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/layerDiagram.png\" alt\u003d\"layerDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":158,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e ","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"theeugenechong"},"content":"Upon launching the app, the user starts at the _**verification** layer_ where they can only [log in](UserGuide.md#login) or [register](UserGuide.md#user-registration). ","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"theeugenechong"},"content":"Entering valid credentials will then grant the user access to the _**features** layer_ where they can input commands like `cf` and`available` to use cOOPer\u0027s features. ","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"theeugenechong"},"content":"At this layer, entering the `logout` command will bring the user back to the _verification layer_.","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"theeugenechong"},"content":"### Architecture","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":167,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/architectureDiagram.png\" alt\u003d\"architectureDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":168,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e ","lastModifiedDate":"2021-10-30"},{"lineNumber":169,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"theeugenechong"},"content":"The **Architecture Diagram** above shows the high-level design of cOOPer and how cOOPer\u0027s components are connected.","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"theeugenechong"},"content":"`Cooper` contains the main method of the program. `Cooper`\u0027s responsibilities are as such:","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"theeugenechong"},"content":"- Upon **launching the app**, `Cooper` initializes the components and loads stored user data into the components. ","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"theeugenechong"},"content":"- While the **app is running**, `Cooper` reads user input which is then processed by the components to produce a result.","lastModifiedDate":"2021-10-30"},{"lineNumber":175,"author":{"gitId":"theeugenechong"},"content":"- Upon **shutting down the app**, `Cooper` shuts down the components. ","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":177,"author":{"gitId":"theeugenechong"},"content":"Apart from `Cooper`, the rest of the app consists of these seven components:","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"theeugenechong"},"content":"- [`Ui`](#ui-component): Handles the reading of user input and printing of messages to the terminal.","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"theeugenechong"},"content":"- [`Parser`](#parser-component): Interprets and validates user input.","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"theeugenechong"},"content":"- [`Verification`](#verification-component): Verifies that the user is signing in to cOOPer with valid credentials.","lastModifiedDate":"2021-10-30"},{"lineNumber":181,"author":{"gitId":"theeugenechong"},"content":"- [`Command`](#command-component): Executes commands which are parsed from user input.","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"theeugenechong"},"content":"- [`Resources`](#resources-component): Manages data for cOOPer\u0027s finance, meetings and forum features while the app is running.","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"theeugenechong"},"content":"- [`Storage`](#storage-component): Loads data from, and saves data to storage files in the computer hard disk.","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"theeugenechong"},"content":"- [`Util`](#util-component): Provides utility which help with some of cOOPer\u0027s features.","lastModifiedDate":"2021-11-03"},{"lineNumber":185,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"theeugenechong"},"content":"#### Interaction of the architecture components to process user input","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"theeugenechong"},"content":"- The sequence diagram below shows how cOOPer\u0027s components interact with each other when a user enters their **sign in details** at the _verification layer_.","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"Rrraaaeee"},"content":"\u003e ℹ️`userInput` represents the credentials input by the user for verification. For example, `register John /pw 12345 /as admin`.","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":192,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/signInSequenceDiagram.png\" alt\u003d\"signInSequenceDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":193,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e ","lastModifiedDate":"2021-10-30"},{"lineNumber":194,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"theeugenechong"},"content":"- The next sequence diagram below shows how cOOPer\u0027s components interact with each other when a user enters a **command** at the _features layer_.","lastModifiedDate":"2021-11-05"},{"lineNumber":196,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"theeugenechong"},"content":"\u003e ℹ️ `userInput` represents a command input by the user. For example, `meetings`.\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":198,"author":{"gitId":"theeugenechong"},"content":"\u003e ℹ️`XYZCommand` is an object representing a command recognised by cOOPer. For example, `AddCommand`.","lastModifiedDate":"2021-10-30"},{"lineNumber":199,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":200,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":201,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/commandSequenceDiagram.png\" alt\u003d\"commandSequenceDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":202,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e ","lastModifiedDate":"2021-10-30"},{"lineNumber":203,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":205,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":207,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":208,"author":{"gitId":"theeugenechong"},"content":"### Ui Component","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"theeugenechong"},"content":"**API**: [`Ui.java`](https://github.com/AY2122S1-CS2113T-W13-4/tp/tree/master/src/main/java/cooper/ui)","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":213,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/uiComponent.png\" alt\u003d\"uiComponent\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":214,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e ","lastModifiedDate":"2021-10-30"},{"lineNumber":215,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":216,"author":{"gitId":"theeugenechong"},"content":"- The `Ui` component consists of a parent `Ui` class and its subclasses as shown by the class diagram above.","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"theeugenechong"},"content":"- The parent `Ui` class contains general constants and methods used across cOOPer\u0027s components which read user input and print recurring messages.","lastModifiedDate":"2021-10-30"},{"lineNumber":218,"author":{"gitId":"theeugenechong"},"content":"- On the other hand, the subclasses for the different components in cOOPer (`ABCUi`) contain constants and methods specific to the function of that component. ","lastModifiedDate":"2021-10-30"},{"lineNumber":219,"author":{"gitId":"theeugenechong"},"content":"For example, `FinanceUi` contains a method `printBalanceSheet()` which prints a balance sheet formatted with headers containing the entries input by the user.","lastModifiedDate":"2021-10-30"},{"lineNumber":220,"author":{"gitId":"theeugenechong"},"content":"- The classes in Ui have *static* methods so there is no need to create a `Ui` object in `Cooper`.","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"theeugenechong"},"content":"The `Ui` component:","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"theeugenechong"},"content":"- Reads in user input from the terminal","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"theeugenechong"},"content":"- Prints status messages, error messages and messages prompting the user for input","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"theeugenechong"},"content":"- Is used by `Verification` and `Cooper` mainly for reading user input, while it is used by `Resources` mainly for printing output messages","lastModifiedDate":"2021-11-05"},{"lineNumber":226,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":227,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":228,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"theeugenechong"},"content":"### Parser Component","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"theeugenechong"},"content":"**API**: [`ParserBase.java`](https://github.com/AY2122S1-CS2113T-W13-4/tp/tree/master/src/main/java/cooper/parser)","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":234,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/parserComponent.png\" alt\u003d\"parserComponent\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":235,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":236,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":237,"author":{"gitId":"theeugenechong"},"content":"- The `Parser` component consists of an abstract `ParserBase` class with its subclasses, `CommandParser` and `SignInDetailsParser`. ","lastModifiedDate":"2021-11-05"},{"lineNumber":238,"author":{"gitId":"theeugenechong"},"content":"- To emphasize the different [layers](#overview) of cOOPer and to increase cohesiveness, different types of objects are constructed from user input at different layers. ","lastModifiedDate":"2021-11-05"},{"lineNumber":239,"author":{"gitId":"theeugenechong"},"content":"User input at the _verification layer_ will be parsed to construct a `SignInProtocol` object while user input at the _features layer_ will be parsed to construct a `Command` object. ","lastModifiedDate":"2021-11-05"},{"lineNumber":240,"author":{"gitId":"theeugenechong"},"content":"- The `SignInProtocol` object executes the signing in of the user with details provided while the `Command` object executes the command input by the user.","lastModifiedDate":"2021-11-03"},{"lineNumber":241,"author":{"gitId":"theeugenechong"},"content":"- `ParserBase` contains a reference to the `Parser` *interface* from the [dopsun chatbot-cli](https://github.com/dopsun/chatbot-cli) library used by cOOPer. ","lastModifiedDate":"2021-10-30"},{"lineNumber":242,"author":{"gitId":"theeugenechong"},"content":"More information about cOOPer\u0027s implementation of the library can be found [here](#parsing-user-input).","lastModifiedDate":"2021-10-30"},{"lineNumber":243,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"theeugenechong"},"content":"The `Parser`component:","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"theeugenechong"},"content":"- Constructs and returns a new `SignInProtocol` / `Command` object with the correct parsed attributes","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"theeugenechong"},"content":"- Determines if user input corresponds to any of the commands recognised by cOOPer","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"theeugenechong"},"content":"- Validates user input by checking for erroneous command arguments. For example, empty command arguments or entering alphabets where an integer is expected are regarded as erroneous arguments","lastModifiedDate":"2021-11-05"},{"lineNumber":248,"author":{"gitId":"theeugenechong"},"content":"- Does not perform any printing of error messages, but instead throws `InvalidCommandFormatException`, `UnrecognisedCommandException` etc. to signal erroneous input","lastModifiedDate":"2021-10-30"},{"lineNumber":249,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":251,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":252,"author":{"gitId":"theeugenechong"},"content":"### Verification Component","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"theeugenechong"},"content":"**API**: [`cooper.verification`](https://github.com/AY2122S1-CS2113T-W13-4/tp/tree/master/src/main/java/cooper/verification)","lastModifiedDate":"2021-11-06"},{"lineNumber":255,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":257,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/verificationComponent.png\" alt\u003d\"verificationComponent\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":258,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":259,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"theeugenechong"},"content":"- The `Verification` component consists of a `Verifier` class which verifies user credentials and performs the necessary action in granting access to the user. More on the verification process can be found [here](#verifying-user-credentials).","lastModifiedDate":"2021-11-05"},{"lineNumber":261,"author":{"gitId":"theeugenechong"},"content":"- `Cooper` contains a reference to a `Verifier` object.","lastModifiedDate":"2021-10-30"},{"lineNumber":262,"author":{"gitId":"theeugenechong"},"content":"- The `SignInProtocol` class is an abstract class representing one of the two sign in protocols, `Login` or `Registration`. ","lastModifiedDate":"2021-10-30"},{"lineNumber":263,"author":{"gitId":"theeugenechong"},"content":"- The `SignInProtocol` class contains a reference to a `SignInDetails` object which as a whole, represents a sign in attempt by the user using one of the two protocols, with the corresponding `SignInDetails`.","lastModifiedDate":"2021-10-30"},{"lineNumber":264,"author":{"gitId":"theeugenechong"},"content":"For example, a `Login` object containing `SignInDetailsX` represents the user\u0027s login attempt with the details `SignInDetailsX`.","lastModifiedDate":"2021-10-30"},{"lineNumber":265,"author":{"gitId":"theeugenechong"},"content":"- `Login` and `Registration` override `SignInProtocol`\u0027s abstract method, `executeSignIn()` as there are different conditions to check depending on whether the user is trying to log in or register.","lastModifiedDate":"2021-10-30"},{"lineNumber":266,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":267,"author":{"gitId":"theeugenechong"},"content":"The `Verification` component:","lastModifiedDate":"2021-10-30"},{"lineNumber":268,"author":{"gitId":"theeugenechong"},"content":"- Verifies that the user is signing in to cOOPer with valid credentials","lastModifiedDate":"2021-11-05"},{"lineNumber":269,"author":{"gitId":"theeugenechong"},"content":"- Grants the user access to the _features layer_ if the user\u0027s credentials are valid. A user with valid credentials means the user is logging in to cOOPer with the same username, password and role they registered with","lastModifiedDate":"2021-10-30"},{"lineNumber":270,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":272,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":273,"author":{"gitId":"theeugenechong"},"content":"### Command Component","lastModifiedDate":"2021-10-25"},{"lineNumber":274,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"theeugenechong"},"content":"**API**: [`Command.java`](https://github.com/AY2122S1-CS2113T-W13-4/tp/blob/master/src/main/java/cooper/command/Command.java)","lastModifiedDate":"2021-10-30"},{"lineNumber":276,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":277,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":278,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/commandComponent.png\" alt\u003d\"commandComponent\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":279,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":280,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":281,"author":{"gitId":"theeugenechong"},"content":"- The `Command` component consists of an abstract `Command` class and its subclasses as shown in the diagram above.","lastModifiedDate":"2021-10-30"},{"lineNumber":282,"author":{"gitId":"theeugenechong"},"content":"- Each subclass (`ABCCommand`) overrides `Command`\u0027s abstract method, `execute()` and has its own unique implementation of the method based on how the command is to be executed.","lastModifiedDate":"2021-10-30"},{"lineNumber":283,"author":{"gitId":"theeugenechong"},"content":"- This makes the addition of a new command to cOOPer relatively easy. For example, you can define a `HelloCommand` which prints out `Hello world!` by inheriting from `Command` and implementing the `execute()` method as such:","lastModifiedDate":"2021-11-03"},{"lineNumber":284,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":285,"author":{"gitId":"theeugenechong"},"content":"```java","lastModifiedDate":"2021-11-03"},{"lineNumber":286,"author":{"gitId":"theeugenechong"},"content":"public class HelloCommand extends Command {","lastModifiedDate":"2021-11-03"},{"lineNumber":287,"author":{"gitId":"theeugenechong"},"content":"\t// constructors and attributes for execution of the command are omitted","lastModifiedDate":"2021-11-03"},{"lineNumber":288,"author":{"gitId":"theeugenechong"},"content":"\tpublic void execute() {","lastModifiedDate":"2021-11-03"},{"lineNumber":289,"author":{"gitId":"theeugenechong"},"content":"\t\tSystem.out.println(\"Hello world!\");","lastModifiedDate":"2021-11-03"},{"lineNumber":290,"author":{"gitId":"theeugenechong"},"content":"\t}","lastModifiedDate":"2021-11-03"},{"lineNumber":291,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-11-03"},{"lineNumber":292,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":293,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":294,"author":{"gitId":"theeugenechong"},"content":"- Some subclasses contain extra attributes which are [parsed](#parser-component) from the arguments in the user input. ","lastModifiedDate":"2021-11-03"},{"lineNumber":295,"author":{"gitId":"theeugenechong"},"content":"- These attributes aid in the execution of the command.","lastModifiedDate":"2021-11-03"},{"lineNumber":296,"author":{"gitId":"theeugenechong"},"content":"For example, [`ScheduleCommand`](https://github.com/AY2122S1-CS2113T-W13-4/tp/blob/master/src/main/java/cooper/command/ScheduleCommand.java) contains a `String` representing the meeting name as well as an `ArrayList` representing the users associated with that meeting.","lastModifiedDate":"2021-11-03"},{"lineNumber":297,"author":{"gitId":"theeugenechong"},"content":"- The `execute()` method takes in a `SignInDetails` object as a parameter. This object represents the sign in details of a user who has successfully signed in to cOOPer. For some of cOOPer\u0027s finance / meetings features which are only accessible by an _admin_, the `UserRole` attribute of this `SignInDetails` object is checked to grant correct access to the feature.","lastModifiedDate":"2021-11-05"},{"lineNumber":298,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":299,"author":{"gitId":"theeugenechong"},"content":"The `Command` component:","lastModifiedDate":"2021-10-30"},{"lineNumber":300,"author":{"gitId":"theeugenechong"},"content":"- Executes a command entered by the user","lastModifiedDate":"2021-11-05"},{"lineNumber":301,"author":{"gitId":"theeugenechong"},"content":"- May make changes to the objects in the [`Resources`](#resources-component) component depending on the command","lastModifiedDate":"2021-11-05"},{"lineNumber":302,"author":{"gitId":"theeugenechong"},"content":"- Performs the storage of data via the [`Storage`](#storage-component) component if there is any change to the data after the command is executed successfully","lastModifiedDate":"2021-11-05"},{"lineNumber":303,"author":{"gitId":"theeugenechong"},"content":"- Prints status messages or error messages to the output via the `Ui` component to inform the user of the status of command execution","lastModifiedDate":"2021-11-05"},{"lineNumber":304,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":305,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":306,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":307,"author":{"gitId":"theeugenechong"},"content":"### Resources Component","lastModifiedDate":"2021-10-25"},{"lineNumber":308,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":309,"author":{"gitId":"theeugenechong"},"content":"**API**: [`cooper.resources`](https://github.com/AY2122S1-CS2113T-W13-4/tp/tree/master/src/main/java/cooper/resources)","lastModifiedDate":"2021-11-06"},{"lineNumber":310,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":311,"author":{"gitId":"Rrraaaeee"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":312,"author":{"gitId":"Rrraaaeee"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/resourcesComponent.png\" alt\u003d\"resourcesComponent\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":313,"author":{"gitId":"Rrraaaeee"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":314,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":315,"author":{"gitId":"Rrraaaeee"},"content":"- The `Resources` component contains `ResourcesManager` which manages access rights to feature managers based on `UserRole`.","lastModifiedDate":"2021-11-06"},{"lineNumber":316,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":317,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":318,"author":{"gitId":"theeugenechong"},"content":"  - E.g. the following line will only return a valid reference to `FinanceManager` if `userRole \u003d\u003d UserRole.ADMIN`. Otherwise, `null` will be returned indicating the user does not have the access right to that module.","lastModifiedDate":"2021-11-06"},{"lineNumber":319,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":320,"author":{"gitId":"Rrraaaeee"},"content":"    ```java","lastModifiedDate":"2021-11-06"},{"lineNumber":321,"author":{"gitId":"Rrraaaeee"},"content":"    FinanceManager financeManager \u003d resourcesManager.getFinanceManager(userRole);","lastModifiedDate":"2021-11-06"},{"lineNumber":322,"author":{"gitId":"Rrraaaeee"},"content":"    ```","lastModifiedDate":"2021-11-06"},{"lineNumber":323,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":324,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":325,"author":{"gitId":"Rrraaaeee"},"content":"- It also implements a *give-receive* pattern to pass private members of `ResourcesManager` class to `StorageManager` safely. This is because `StorageManager` has \"super privilege\" to access internal data structures of feature managers and save to/ load from hard disk. ","lastModifiedDate":"2021-11-06"},{"lineNumber":326,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":327,"author":{"gitId":"Rrraaaeee"},"content":"The `Resources` component:","lastModifiedDate":"2021-11-06"},{"lineNumber":328,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":329,"author":{"gitId":"theeugenechong"},"content":"- Returns references of feature managers such as `MeetingManager`, `FinanceManager` or `ForumManager` based on `UserRole` of the request body. E.g. Only an *admin* is able to get `FinanceManager` successfully.","lastModifiedDate":"2021-11-06"},{"lineNumber":330,"author":{"gitId":"Rrraaaeee"},"content":"- Returns references to `StorageManager` safely upon request.","lastModifiedDate":"2021-11-06"},{"lineNumber":331,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":332,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":333,"author":{"gitId":"theeugenechong"},"content":"#### Finance","lastModifiedDate":"2021-11-03"},{"lineNumber":334,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":335,"author":{"gitId":"ChrisLangton"},"content":"**API**: [`Finance`](https://github.com/AY2122S1-CS2113T-W13-4/tp/tree/master/src/main/java/cooper/finance)","lastModifiedDate":"2021-11-06"},{"lineNumber":336,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":337,"author":{"gitId":"ChrisLangton"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":338,"author":{"gitId":"ChrisLangton"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/financeComponent.png\" alt\u003d\"financeComponent\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":339,"author":{"gitId":"ChrisLangton"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":340,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":341,"author":{"gitId":"ChrisLangton"},"content":"+ The `Finance` component contains the `FinanceManager`, `BalanceSheet`, `CashFlow`, and `Projection` classes, as well as the `FinanceCommand` enumeration.","lastModifiedDate":"2021-11-06"},{"lineNumber":342,"author":{"gitId":"ChrisLangton"},"content":"+ The `FinanceManager` constructs the instances of the `BalanceSheet`, `CashFlow` and `Projection` for use, and holds attributes and methods that aid the related functions.","lastModifiedDate":"2021-11-06"},{"lineNumber":343,"author":{"gitId":"ChrisLangton"},"content":"+ The `FinanceCommamnd` enum helps the `Parser` to understand what `Finance` function is being used, with four states: `CF`, `BS`, and `IDLE`.","lastModifiedDate":"2021-11-06"},{"lineNumber":344,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":345,"author":{"gitId":"ChrisLangton"},"content":"The `Finance` component:","lastModifiedDate":"2021-11-06"},{"lineNumber":346,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":347,"author":{"gitId":"ChrisLangton"},"content":"+ Handles adding/listing/generating of Balance Sheets, Cash Flow Statements, and Free Cash Flow Projections.","lastModifiedDate":"2021-11-06"},{"lineNumber":348,"author":{"gitId":"ChrisLangton"},"content":"+ Assists the parser in identifying which function is being used at any given time.","lastModifiedDate":"2021-11-06"},{"lineNumber":349,"author":{"gitId":"ChrisLangton"},"content":"+ Contains the `PdfGenerator` class for the `generate` command, more info can be found [here](#generating-a-pdf-from-the-financial-statement).","lastModifiedDate":"2021-11-06"},{"lineNumber":350,"author":{"gitId":"theeugenechong"},"content":"#### Meetings","lastModifiedDate":"2021-11-03"},{"lineNumber":351,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":352,"author":{"gitId":"theeugenechong"},"content":"#### Forum","lastModifiedDate":"2021-11-03"},{"lineNumber":353,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":354,"author":{"gitId":"theeugenechong"},"content":"**API**: [`cooper.forum`](https://github.com/AY2122S1-CS2113T-W13-4/tp/tree/master/src/main/java/cooper/forum)","lastModifiedDate":"2021-11-06"},{"lineNumber":355,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":356,"author":{"gitId":"Rrraaaeee"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":357,"author":{"gitId":"Rrraaaeee"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/forumComponent.png\" alt\u003d\"forumComponent\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":358,"author":{"gitId":"Rrraaaeee"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":359,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":360,"author":{"gitId":"theeugenechong"},"content":"+ The `Forum` component contains a `ForumManager`, `ForumPost` , `ForumComment` and `ForumPostBase`. Both `ForumPost` and `ForumComment` are inherited from abstract base class `ForumPostBase` as they contain the attributes `content` and `username`. ","lastModifiedDate":"2021-11-06"},{"lineNumber":361,"author":{"gitId":"Rrraaaeee"},"content":"+ Forum posts are stored in a hierarchical way where`ForumManager` keeps a list of `ForumPost`s and each `ForumPost` keeps a list of `ForumComment`s.","lastModifiedDate":"2021-11-06"},{"lineNumber":362,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":363,"author":{"gitId":"Rrraaaeee"},"content":"The `Forum` component:","lastModifiedDate":"2021-11-06"},{"lineNumber":364,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":365,"author":{"gitId":"Rrraaaeee"},"content":"+ handles adding/deleting/listing of posts, comments","lastModifiedDate":"2021-11-06"},{"lineNumber":366,"author":{"gitId":"Rrraaaeee"},"content":"+ Deletes a post or comment only if the user requesting the action *owns* the post or comment, i.e. the username of request body must match the username field of the post or comment.","lastModifiedDate":"2021-11-06"},{"lineNumber":367,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":368,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":369,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":370,"author":{"gitId":"theeugenechong"},"content":"### Storage Component","lastModifiedDate":"2021-10-25"},{"lineNumber":371,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"theeugenechong"},"content":"**API**: [`cooper.storage`](https://github.com/AY2122S1-CS2113T-W13-4/tp/tree/master/src/main/java/cooper/storage)","lastModifiedDate":"2021-11-06"},{"lineNumber":373,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":374,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":375,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/storageComponent.png\" alt\u003d\"storageComponent\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":376,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":377,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":378,"author":{"gitId":"theeugenechong"},"content":"- The `Storage` component consists of a parent `Storage` class along with its subclasses as shown in the diagram above.","lastModifiedDate":"2021-11-04"},{"lineNumber":379,"author":{"gitId":"theeugenechong"},"content":"- The `Storage` class contains a `filePath` attribute representing the path of the file where the data is to be stored. It also contains methods common to all its subclasses such as `getScanner()` and `createFileInDirectory()` which aid in the process of writing to and creating the storage file.","lastModifiedDate":"2021-11-04"},{"lineNumber":380,"author":{"gitId":"theeugenechong"},"content":"- `Cooper` contains a reference to a `StorageManager` object. This `StorageManager` object in turn contains references to each of the subclasses of `Storage` which store cOOPer\u0027s data in the [`Verification`](#verification-component) and [`Resources`](#resources-component) components.","lastModifiedDate":"2021-11-05"},{"lineNumber":381,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":382,"author":{"gitId":"theeugenechong"},"content":"The `Storage` component:","lastModifiedDate":"2021-11-04"},{"lineNumber":383,"author":{"gitId":"theeugenechong"},"content":"- Loads stored user data from the storage file specified by `filePath` into the `Verifier`, `FinanceManager`, `MeetingsManager` and `ForumManager` objects upon launching the app.","lastModifiedDate":"2021-11-04"},{"lineNumber":384,"author":{"gitId":"theeugenechong"},"content":"- Saves data to the storage file specified by `filePath` from the `Verifier`, `FinanceManager`, `MeetingsManager` and `ForumManager` whenever a change is made to the data in these objects.","lastModifiedDate":"2021-11-04"},{"lineNumber":385,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":386,"author":{"gitId":"theeugenechong"},"content":"\u003e ℹ️We do not put `Storage` class under `Resources` for 2 reasons:\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":387,"author":{"gitId":"theeugenechong"},"content":"\u003e 1. `Storage` class is cOOPer\u0027s internal construct for bookkeeping various internal data structures and recover them at startup. This does not categorise under any features the user can interact with and hence should not be kept under `ResourcesManager`.","lastModifiedDate":"2021-11-06"},{"lineNumber":388,"author":{"gitId":"theeugenechong"},"content":"\u003e 2. `Storage` has super privileges to access internal data structures of all feature components. This contradicts the goal of `ResourcesManager` which is to manage access rights to different features depending on user roles, and hence should be kept separate from it.","lastModifiedDate":"2021-11-06"},{"lineNumber":389,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":390,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":391,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":392,"author":{"gitId":"theeugenechong"},"content":"### Util Component","lastModifiedDate":"2021-10-27"},{"lineNumber":393,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":394,"author":{"gitId":"theeugenechong"},"content":"**API**: [`Util.java`](https://github.com/AY2122S1-CS2113T-W13-4/tp/tree/master/src/main/java/cooper/util/Util.java)","lastModifiedDate":"2021-10-27"},{"lineNumber":395,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":396,"author":{"gitId":"theeugenechong"},"content":"- The `Util` component is a component unrelated to cOOPer and serves mainly as a helper component to make some of cOOPer\u0027s features possible.","lastModifiedDate":"2021-10-30"},{"lineNumber":397,"author":{"gitId":"theeugenechong"},"content":"- There are only two methods in the `Util` class, namely `inputStreamToTmpFile()` and `inputStreamToString()`. ","lastModifiedDate":"2021-10-27"},{"lineNumber":398,"author":{"gitId":"theeugenechong"},"content":"- `inputStreamToTmpFile()` is used to recreate the dopsun chatbot-cli\u0027s training files (originally located in `src/main/resources/parser`). ","lastModifiedDate":"2021-11-05"},{"lineNumber":399,"author":{"gitId":"theeugenechong"},"content":"In the process of packaging cOOPer into a JAR application, these training files are converted to bytes which are unable to be read in by the chatbot API. Hence, there is a need to recreate these files for the chatbot to work.","lastModifiedDate":"2021-10-30"},{"lineNumber":400,"author":{"gitId":"theeugenechong"},"content":"- `inputStreamToString()` is used for cOOPer\u0027s [`generate`](UserGuide.md#generating-a-pdf-from-the-financial-statement--generate) feature which allows the user to generate a PDF file from data in cOOPer\u0027s balance sheet or cash flow statement. ","lastModifiedDate":"2021-11-03"},{"lineNumber":401,"author":{"gitId":"theeugenechong"},"content":"This method is used to convert the `.tex` template files (located in `src/main/resources/pdf`) into a `String` object which can then be handled easily in the code. More details of the implementation can be found [here](#generating-a-pdf-from-the-financial-statement).","lastModifiedDate":"2021-11-05"},{"lineNumber":402,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":403,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":404,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":405,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":406,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":407,"author":{"gitId":"theeugenechong"},"content":"## Implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":409,"author":{"gitId":"theeugenechong"},"content":"### Parsing user input","lastModifiedDate":"2021-10-27"},{"lineNumber":410,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":411,"author":{"gitId":"theeugenechong"},"content":"cOOPer uses the [dopsun chatbot-cli](https://github.com/dopsun/chatbot-cli) library as its frontend parser that allows you to define any arbitrary *input schema* under `src/main/resources/parser/command-data.properties` ","lastModifiedDate":"2021-11-04"},{"lineNumber":412,"author":{"gitId":"Rrraaaeee"},"content":"such as ","lastModifiedDate":"2021-10-24"},{"lineNumber":413,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":414,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":415,"author":{"gitId":"theeugenechong"},"content":"login \u003d login ${username-hint} /pw ${password-hint} /as ${role-hint}","lastModifiedDate":"2021-11-03"},{"lineNumber":416,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":417,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":418,"author":{"gitId":"theeugenechong"},"content":"The chatbot\u0027s `Parser` library automatically parses the place-holders defined with `$` leaders to strings. For example, `login Yvonne /pw 12345 /as admin` will be parsed ","lastModifiedDate":"2021-11-03"},{"lineNumber":419,"author":{"gitId":"Rrraaaeee"},"content":"into the following fields:","lastModifiedDate":"2021-10-24"},{"lineNumber":420,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":421,"author":{"gitId":"Rrraaaeee"},"content":"```python","lastModifiedDate":"2021-10-24"},{"lineNumber":422,"author":{"gitId":"Rrraaaeee"},"content":"{ \"username-hint\" : Yvonne,","lastModifiedDate":"2021-10-21"},{"lineNumber":423,"author":{"gitId":"Rrraaaeee"},"content":"  \"password-hint\" : 12345,","lastModifiedDate":"2021-10-21"},{"lineNumber":424,"author":{"gitId":"Rrraaaeee"},"content":"  \"role-hint\" : admin }","lastModifiedDate":"2021-10-21"},{"lineNumber":425,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":426,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":427,"author":{"gitId":"Rrraaaeee"},"content":"This gives great flexibility and extensibility to the `Parser` component as you do not need to worry about writing new parsing schemes for every command and adding new commands to cOOPer for new features become trivial.","lastModifiedDate":"2021-11-06"},{"lineNumber":428,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":429,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":430,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":431,"author":{"gitId":"fansxx"},"content":"### Meetings","lastModifiedDate":"2021-10-27"},{"lineNumber":432,"author":{"gitId":"fansxx"},"content":"`Meetings` provides features like **declaring** availability, **viewing** availability, **scheduling** meetings, and **viewing** user-specific scheduled meetings.","lastModifiedDate":"2021-10-27"},{"lineNumber":433,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":434,"author":{"gitId":"fansxx"},"content":"#### Meeting module descriptions","lastModifiedDate":"2021-10-27"},{"lineNumber":435,"author":{"gitId":"theeugenechong"},"content":"`MeetingManager` stores **2** attributes:","lastModifiedDate":"2021-11-03"},{"lineNumber":436,"author":{"gitId":"fansxx"},"content":"1. the **timings** along with the **usernames** of the available users, which is a `TreeMap\u003cLocalTime, ArrayList\u003cString\u003e\u003e` object,","lastModifiedDate":"2021-10-27"},{"lineNumber":437,"author":{"gitId":"fansxx"},"content":"2. the **list of meetings** scheduled, which is an `ArrayList\u003cMeeting\u003e` object.","lastModifiedDate":"2021-10-27"},{"lineNumber":438,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":439,"author":{"gitId":"fansxx"},"content":"The `ArrayList\u003cMeeting\u003e` object stores 0 or more `Meeting` objects","lastModifiedDate":"2021-10-27"},{"lineNumber":440,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":441,"author":{"gitId":"fansxx"},"content":"Meeting object stores 3 attributes:","lastModifiedDate":"2021-10-27"},{"lineNumber":442,"author":{"gitId":"fansxx"},"content":"1. the `meetingName`, which is a `String` object,","lastModifiedDate":"2021-10-27"},{"lineNumber":443,"author":{"gitId":"fansxx"},"content":"2. the `time`, which is a `LocalTime` object,","lastModifiedDate":"2021-10-27"},{"lineNumber":444,"author":{"gitId":"fansxx"},"content":"3. the `listOfAttendees`, which is an `ArrayList\u003cString\u003e` object","lastModifiedDate":"2021-10-27"},{"lineNumber":445,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":446,"author":{"gitId":"fansxx"},"content":"When the user wants to enter an availability, `MeetingManager` will check if the time entered is in the **correct format** and if the user has **not already entered their availability to that time**. Addition of availability is successful only if those two requirements are satisfied.","lastModifiedDate":"2021-10-27"},{"lineNumber":447,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":448,"author":{"gitId":"fansxx"},"content":"When the user wants to schedule a meeting, `ScheduleCommand` will check if the user has entered a **valid time value**. If so, it will call the `MeetingManager` to run an **auto scheduling** function. If not, it will call the `MeetingManager` to run a **manual scheduling** function.","lastModifiedDate":"2021-10-27"},{"lineNumber":449,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":450,"author":{"gitId":"ChrisLangton"},"content":"### Finance","lastModifiedDate":"2021-11-06"},{"lineNumber":451,"author":{"gitId":"ChrisLangton"},"content":"`Finance` provides features such as **adding** and **listing** of financial statements, such as the Balance Sheet and Cash Flow Statement as well as **compounded projection** of Free Cash Flow growth.","lastModifiedDate":"2021-11-06"},{"lineNumber":452,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":453,"author":{"gitId":"ChrisLangton"},"content":"#### Finance module descriptions","lastModifiedDate":"2021-11-06"},{"lineNumber":454,"author":{"gitId":"ChrisLangton"},"content":"\u0027FinanceManager\u0027 stores **3** attributes:","lastModifiedDate":"2021-11-06"},{"lineNumber":455,"author":{"gitId":"ChrisLangton"},"content":"1. the **balance sheet**, which is a `BalanceSheet` object.","lastModifiedDate":"2021-11-06"},{"lineNumber":456,"author":{"gitId":"ChrisLangton"},"content":"2. the **cash flow statement**, which is a `CashFlow` object.","lastModifiedDate":"2021-11-06"},{"lineNumber":457,"author":{"gitId":"ChrisLangton"},"content":"3. the **free cash flow projections**, which is a `Projection` object.","lastModifiedDate":"2021-11-06"},{"lineNumber":458,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":459,"author":{"gitId":"ChrisLangton"},"content":"The `BalanceSheet` object stores the attribute `balanceSheet` which is an `ArrayList\u003cInteger\u003e` object.","lastModifiedDate":"2021-11-06"},{"lineNumber":460,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":461,"author":{"gitId":"ChrisLangton"},"content":"The `CashFlow` object stores the attribute `cashFlowStatement` which is an `ArrayList\u003cInteger\u003e` object.","lastModifiedDate":"2021-11-06"},{"lineNumber":462,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":463,"author":{"gitId":"ChrisLangton"},"content":"The `Projection` object stores the attribute `growthValues` which is an `ArrayList\u003cDouble\u003e` object.","lastModifiedDate":"2021-11-06"},{"lineNumber":464,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":465,"author":{"gitId":"ChrisLangton"},"content":"When the user wants to add an entry to a financial statement, `FinanceManager` will first determine if the amount should reflect as **positive or negative** in the financial statement, as well as **which section** of the financial statement the entry belongs to. `FinanceManager` will then add the entry to the respective financial statement and its section\u0027s net amount.","lastModifiedDate":"2021-11-06"},{"lineNumber":466,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":467,"author":{"gitId":"ChrisLangton"},"content":"When the user wants to list a financial statement, `FinanceManager` will run a check that the net amounts of each section of the financial statement are calculated correctly before the statement is displayed to the output.","lastModifiedDate":"2021-11-06"},{"lineNumber":468,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":469,"author":{"gitId":"ChrisLangton"},"content":"When the user wants to project free cash flow, `FinanceManager` will first help to calculate free cash flow by subtracting the CapEx (Capital Expenditure: a field of the cash flow statement) from the total cash from Operating Activities. Subsequently `FinanceManager` will compare this value to the previous year\u0027s value, and calculate the percentage increase. This percentage increase will then be used in a recursive [periodic compound interest](https://en.wikipedia.org/wiki/Compound_interest) formula to calculate the following year\u0027s free cash flow, at the same percentage increase.","lastModifiedDate":"2021-11-06"},{"lineNumber":470,"author":{"gitId":"Rrraaaeee"},"content":"### Forum ","lastModifiedDate":"2021-10-24"},{"lineNumber":471,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":472,"author":{"gitId":"Rrraaaeee"},"content":"### Interacting with forum","lastModifiedDate":"2021-11-06"},{"lineNumber":473,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":474,"author":{"gitId":"theeugenechong"},"content":"The following sequence diagram shows 3 operations with forum. `addPost`, `commentPost` and `deletePost`.","lastModifiedDate":"2021-11-06"},{"lineNumber":475,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":476,"author":{"gitId":"Rrraaaeee"},"content":"+ For adding a post, `ForumManager` will create a new `ForumPost` object and store its username and content.","lastModifiedDate":"2021-11-06"},{"lineNumber":477,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":478,"author":{"gitId":"Rrraaaeee"},"content":"+ For commenting on a post, `ForumManager` will first check if the `postId` specified is a valid index. If it is not, an exception will be thrown. Otherwise, it will get the `ForumPost` by its `postId` and add a new `ForumComment` to it.","lastModifiedDate":"2021-11-06"},{"lineNumber":479,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":480,"author":{"gitId":"Rrraaaeee"},"content":"+ For deleting a post, `ForumManager` will again check the `postId` and delete the post only if the `postId` is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":481,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":482,"author":{"gitId":"Rrraaaeee"},"content":"  \u003e ℹ️ In the actual implementation, `ForumManager` will also ensure the username of the user requesting for the `deletePost` operation matches the *owner* of the forum post. This checking is omitted in this sequence diagram for simplicity and represented as the method call to`remove(postId)`.","lastModifiedDate":"2021-11-06"},{"lineNumber":483,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":484,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":485,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":486,"author":{"gitId":"Rrraaaeee"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":487,"author":{"gitId":"Rrraaaeee"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/forumSequenceDiagram.png\" alt\u003d\"forumSequenceDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":488,"author":{"gitId":"Rrraaaeee"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":489,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":490,"author":{"gitId":"theeugenechong"},"content":"### Requesting a resource","lastModifiedDate":"2021-11-06"},{"lineNumber":491,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":492,"author":{"gitId":"Rrraaaeee"},"content":"`Resources` manages the access rights to other manager components like the `FinanceManager`, `MeetingManager` and `ForumManager`. The following sequence diagram shows the two main operations of `ResourcesManager`:","lastModifiedDate":"2021-11-06"},{"lineNumber":493,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":494,"author":{"gitId":"Rrraaaeee"},"content":"+ To get a feature manager, such as the `FinanceManager`, user needs to pass in his `userRole`. `ResourcesManager` will check if the user has the right accessibility and either return the requested object, or a null.","lastModifiedDate":"2021-11-06"},{"lineNumber":495,"author":{"gitId":"theeugenechong"},"content":"+ Storage class has \"super privilege\" to access internal data structure of `FinanceManager`, `MeetingManager` and `ForumManager`. Private members are passed safely using `give-receive` pattern, instead of universal `getters`.","lastModifiedDate":"2021-11-06"},{"lineNumber":496,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":497,"author":{"gitId":"Rrraaaeee"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":498,"author":{"gitId":"Rrraaaeee"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/resourcesSequenceDiagram.png\" alt\u003d\"resourcesSequenceDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":499,"author":{"gitId":"Rrraaaeee"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":500,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":501,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":502,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":503,"author":{"gitId":"theeugenechong"},"content":"### Verifying user credentials","lastModifiedDate":"2021-11-03"},{"lineNumber":504,"author":{"gitId":"theeugenechong"},"content":"The `Verifier` class facilitates the verification of the credentials of a user registering or logging in to cOOPer. ","lastModifiedDate":"2021-11-03"},{"lineNumber":505,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":506,"author":{"gitId":"theeugenechong"},"content":"#### Verification process","lastModifiedDate":"2021-11-05"},{"lineNumber":507,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":508,"author":{"gitId":"theeugenechong"},"content":"Different conditions are checked depending on whether a user is trying to log in or register. For example, if a user is trying to register, cOOPer will check if the username is already registered and asks the user to log in if they are not registered yet.","lastModifiedDate":"2021-11-03"},{"lineNumber":509,"author":{"gitId":"theeugenechong"},"content":"On the other hand, if an unregistered user is trying to log in, cOOPer will ask the user to register first.","lastModifiedDate":"2021-11-03"},{"lineNumber":510,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":511,"author":{"gitId":"theeugenechong"},"content":"For a registered user trying to log in, cOOPer will first check if the entered password is correct. This is done with the help of the `PasswordHasher` class which hashes the entered password with the user\u0027s salt stored by cOOPer. The hash obtained will then be compared to the user\u0027s stored hash to determine if the entered password is correct. ","lastModifiedDate":"2021-11-03"},{"lineNumber":512,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":513,"author":{"gitId":"theeugenechong"},"content":"If the password is correct, the user\u0027s role will then be checked to determine if they are logging in with the role they registered with.","lastModifiedDate":"2021-11-03"},{"lineNumber":514,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":515,"author":{"gitId":"theeugenechong"},"content":"#### Registering a user","lastModifiedDate":"2021-11-04"},{"lineNumber":516,"author":{"gitId":"theeugenechong"},"content":"The following sequence diagram shows the detailed process of registering a user. `userInput` is `register John /pw 123 /as admin`.","lastModifiedDate":"2021-11-03"},{"lineNumber":517,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":518,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":519,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/registrationSequenceDiagram.png\" alt\u003d\"registrationSequenceDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":520,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":521,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":522,"author":{"gitId":"theeugenechong"},"content":"The `SignInDetailsParser` constructs a `SignInDetails` object parsed from the arguments in `userInput`. This `SignInDetails` object is then used to construct a `Registration` object which executes the registration of the user.","lastModifiedDate":"2021-11-03"},{"lineNumber":523,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":524,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":525,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/refFrameRegistration.png\" alt\u003d\"refFrameSequenceDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":526,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":527,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":528,"author":{"gitId":"theeugenechong"},"content":"#### Logging in","lastModifiedDate":"2021-11-04"},{"lineNumber":529,"author":{"gitId":"theeugenechong"},"content":"Assuming that the above registration has taken place successfully, the following sequence diagram shows the login process of the user. `userInput` is `login John /pw 123 /as admin`.","lastModifiedDate":"2021-11-03"},{"lineNumber":530,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":531,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":532,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/loginSequenceDiagram.png\" alt\u003d\"loginSequenceDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":533,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":534,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":535,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":536,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":537,"author":{"gitId":"theeugenechong"},"content":"### Generating a PDF from the financial statement","lastModifiedDate":"2021-11-03"},{"lineNumber":538,"author":{"gitId":"theeugenechong"},"content":"The [`PdfGenerator`](https://github.com/AY2122S1-CS2113T-W13-4/tp/blob/master/src/main/java/cooper/finance/pdfgenerator/PdfGenerator.java) abstract class is responsible for the generation of the financial statement as a PDF via the `generate` command. It is inherited by the subclasses, `BalanceSheetGenerator` and `CashFlowStatementGenerator`, with each subclass containing different methods to add different sections to the PDF.","lastModifiedDate":"2021-11-05"},{"lineNumber":539,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":540,"author":{"gitId":"theeugenechong"},"content":"#### Creating the PDF with LaTeX","lastModifiedDate":"2021-11-04"},{"lineNumber":541,"author":{"gitId":"theeugenechong"},"content":"The PDF is generated with the help of an online LaTeX compiler. The LaTeX (`.tex`) templates for the PDF can be found under `src/main/resources/pdf`. The `PdfGenerator` class employs the use of the `inputStreamToString()` method of the [`Util`](#util-component) component to convert the contents of these LaTeX templates into a `String` object. The LaTeX template, which is now a `String` is then manipulated by calling Java `String` methods like `replace()` and `append()`. ","lastModifiedDate":"2021-11-04"},{"lineNumber":542,"author":{"gitId":"theeugenechong"},"content":"Certain identifiers (in the form of LaTeX comments \u0027`%`\u0027) in the LaTeX template will be replaced by the actual values of cOOPer\u0027s financial statement.","lastModifiedDate":"2021-11-04"},{"lineNumber":543,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":544,"author":{"gitId":"theeugenechong"},"content":"The example below shows the template of an entry in the financial statement:","lastModifiedDate":"2021-11-03"},{"lineNumber":545,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":546,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":547,"author":{"gitId":"theeugenechong"},"content":"\\centering","lastModifiedDate":"2021-11-03"},{"lineNumber":548,"author":{"gitId":"theeugenechong"},"content":"% {Description}","lastModifiedDate":"2021-11-03"},{"lineNumber":549,"author":{"gitId":"theeugenechong"},"content":"\u0026 \\centering","lastModifiedDate":"2021-11-03"},{"lineNumber":550,"author":{"gitId":"theeugenechong"},"content":"\u0026 \\centering","lastModifiedDate":"2021-11-03"},{"lineNumber":551,"author":{"gitId":"theeugenechong"},"content":"\u0026 \\centering","lastModifiedDate":"2021-11-03"},{"lineNumber":552,"author":{"gitId":"theeugenechong"},"content":"\u0026 % {Amount}","lastModifiedDate":"2021-11-03"},{"lineNumber":553,"author":{"gitId":"theeugenechong"},"content":"\\\\[3ex]","lastModifiedDate":"2021-11-03"},{"lineNumber":554,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":555,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":556,"author":{"gitId":"theeugenechong"},"content":"Calling `replace(\"% {Description}\", \"Depreciation and Amortisation\")` and `replace(\"% {Amount}\", 1500)` on the template above will result in the following:","lastModifiedDate":"2021-11-04"},{"lineNumber":557,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":558,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":559,"author":{"gitId":"theeugenechong"},"content":"\\centering","lastModifiedDate":"2021-11-03"},{"lineNumber":560,"author":{"gitId":"theeugenechong"},"content":"Depreciation and Amortisation","lastModifiedDate":"2021-11-03"},{"lineNumber":561,"author":{"gitId":"theeugenechong"},"content":"\u0026 \\centering","lastModifiedDate":"2021-11-03"},{"lineNumber":562,"author":{"gitId":"theeugenechong"},"content":"\u0026 \\centering","lastModifiedDate":"2021-11-03"},{"lineNumber":563,"author":{"gitId":"theeugenechong"},"content":"\u0026 \\centering","lastModifiedDate":"2021-11-03"},{"lineNumber":564,"author":{"gitId":"theeugenechong"},"content":"\u0026 1500","lastModifiedDate":"2021-11-03"},{"lineNumber":565,"author":{"gitId":"theeugenechong"},"content":"\\\\[3ex]","lastModifiedDate":"2021-11-03"},{"lineNumber":566,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":567,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":568,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":569,"author":{"gitId":"theeugenechong"},"content":"When compiled, the LaTeX code above will correspond to an entry \u0027Depreciation and Amortisation\u0027 on the PDF with the amount $1500. This technique can be used on the header and summary templates which will format the header and summary of a particular section in the financial statement.","lastModifiedDate":"2021-11-04"},{"lineNumber":570,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":571,"author":{"gitId":"theeugenechong"},"content":"The methods `createHeader()`, `createEntry()` and `createSummary()` in `PdfGenerator` perform the text replacement as shown above. The diagram below shows how these methods correspond to the different parts of the \u0027Operating Activities\u0027 section in the cash flow statement PDF.","lastModifiedDate":"2021-11-04"},{"lineNumber":572,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":573,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":574,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg width\u003d\"750\" src\u003d\"developerGuideDiagrams/pdfSections.png\" alt\u003d\"pdfSections\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":575,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":576,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":577,"author":{"gitId":"theeugenechong"},"content":"#### Compiling the LaTeX code online","lastModifiedDate":"2021-11-04"},{"lineNumber":578,"author":{"gitId":"theeugenechong"},"content":"`createHeader()`, `createEntry()` and `createSummary()` also add the template to an `ArrayList` after performing the text replacement on the template. Iterating through the `ArrayList`, these templates are then appended together using `append()`.","lastModifiedDate":"2021-11-04"},{"lineNumber":579,"author":{"gitId":"theeugenechong"},"content":"This forms a long `String` which is then sent to the online LaTeX compiler via a POST request. The reply data obtained from the request is used to construct the PDF via the `write()` method of Java\u0027s `FileOutputStream` class.","lastModifiedDate":"2021-11-06"},{"lineNumber":580,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":581,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":582,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":583,"author":{"gitId":"theeugenechong"},"content":"### Saving and loading data","lastModifiedDate":"2021-11-04"},{"lineNumber":584,"author":{"gitId":"theeugenechong"},"content":"\u003e ℹ️Due to the way the `Storage` component is implemented, the classes and methods used for storage have names which are quite similar. In order to generalize the explanations in this section for how data is saved and loaded, the term `XYZ` will be used as a placeholder where `XYZ` is `signInDetails`, `balanceSheet`, `cashFlowStatement`, `availability`, `meetings` and `forum`.","lastModifiedDate":"2021-11-04"},{"lineNumber":585,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":586,"author":{"gitId":"theeugenechong"},"content":"The `StorageManager` class facilitates the saving and loading of cOOPer\u0027s data to and from its storage files. This data includes the sign in details of registered users (from the [`Verification`](#verification-component) component) , entries of the balance sheet and cash flow statement, list of availabilities, scheduled meetings, and forum posts (all from the [`Resources`](#resources-component) component).","lastModifiedDate":"2021-11-04"},{"lineNumber":587,"author":{"gitId":"theeugenechong"},"content":"cOOPer\u0027s data is stored separately in multiple text files named `XYZ.txt` located in the \u0027cooperData\u0027 folder in the home folder.","lastModifiedDate":"2021-11-04"},{"lineNumber":588,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":589,"author":{"gitId":"theeugenechong"},"content":"#### Saving data","lastModifiedDate":"2021-11-04"},{"lineNumber":590,"author":{"gitId":"theeugenechong"},"content":"Certain commands, when executed successfully, can change the data in the `Verification` and `Resources` components. (e.g. `register`, `add`, `available`, etc.) Whenever the data in these components change, the command that made the change will call the `saveXYZ()` method of the `StorageManager` to update the storage file with the change. ","lastModifiedDate":"2021-11-04"},{"lineNumber":591,"author":{"gitId":"theeugenechong"},"content":"For example, when a new availability is added successfully, the method `saveAvailability()` is called by `AvailableCommand` and the storage file is updated with the new list of availabilities.","lastModifiedDate":"2021-11-04"},{"lineNumber":592,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":593,"author":{"gitId":"theeugenechong"},"content":"The following sequence diagram shows the general procedure of saving data to the storage file whenever a change is made.","lastModifiedDate":"2021-11-04"},{"lineNumber":594,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":595,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":596,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/saveDataSequenceDiagram.png\" alt\u003d\"saveDataSequenceDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":597,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":598,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":599,"author":{"gitId":"theeugenechong"},"content":"#### Loading data","lastModifiedDate":"2021-11-04"},{"lineNumber":600,"author":{"gitId":"theeugenechong"},"content":"Data is loaded from cOOPer\u0027s storage files to the `Verification` and `Resources` component upon launching the app. The `StorageManager` constructor is first called and each subclass `XYZStorage` is initialized with the file paths of their storage files, `XYZ.txt`.","lastModifiedDate":"2021-11-04"},{"lineNumber":601,"author":{"gitId":"theeugenechong"},"content":"The `loadAllData()` method of `StorageManager` is then called and this method in turn calls the `loadXYZ()` methods of the `XYZStorage` subclasses. If the storage files are not present upon launching cOOPer, the storage files will be created and any error in file creation will be made known to the user. ","lastModifiedDate":"2021-11-04"},{"lineNumber":602,"author":{"gitId":"theeugenechong"},"content":"Since data in the storage files are of a specific format, any change to the storage format will throw an `InvalidFileDataException` and a message will be printed for the user specifying the file containing invalid data. ","lastModifiedDate":"2021-11-04"},{"lineNumber":603,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":604,"author":{"gitId":"theeugenechong"},"content":"The following sequence diagram shows the general procedure of loading data from the storage file upon launching cOOPer.","lastModifiedDate":"2021-11-04"},{"lineNumber":605,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":606,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":607,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg src\u003d\"developerGuideDiagrams/loadDataSequenceDiagram.png\" alt\u003d\"loadDataSequenceDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":608,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":609,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":610,"author":{"gitId":"theeugenechong"},"content":"#### Storage design considerations","lastModifiedDate":"2021-11-04"},{"lineNumber":611,"author":{"gitId":"theeugenechong"},"content":"**Current choice**: Individual subclasses which store the sign in details of registered users, entries of the balance sheet and cash flow statement, list of availabilities, scheduled meetings, and forum posts in separate storage files.","lastModifiedDate":"2021-11-04"},{"lineNumber":612,"author":{"gitId":"theeugenechong"},"content":"- Pros:","lastModifiedDate":"2021-11-04"},{"lineNumber":613,"author":{"gitId":"theeugenechong"},"content":"  - Easy to implement","lastModifiedDate":"2021-11-04"},{"lineNumber":614,"author":{"gitId":"theeugenechong"},"content":"  - Efficient (only saves the data changed for a specific component, not all)","lastModifiedDate":"2021-11-04"},{"lineNumber":615,"author":{"gitId":"theeugenechong"},"content":"  - Extensible (each subclass follows a certain template for storage)","lastModifiedDate":"2021-11-04"},{"lineNumber":616,"author":{"gitId":"theeugenechong"},"content":"- Cons:","lastModifiedDate":"2021-11-04"},{"lineNumber":617,"author":{"gitId":"theeugenechong"},"content":"  - Some methods are duplicated (e.g. `saveXYZ()`, `loadXYZ()`, etc.)","lastModifiedDate":"2021-11-04"},{"lineNumber":618,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":619,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":620,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":621,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":622,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":623,"author":{"gitId":"theeugenechong"},"content":"## Appendix: Requirements","lastModifiedDate":"2021-10-27"},{"lineNumber":624,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":625,"author":{"gitId":"theeugenechong"},"content":"### Product scope","lastModifiedDate":"2021-10-27"},{"lineNumber":626,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":627,"author":{"gitId":"theeugenechong"},"content":"#### Target user profile","lastModifiedDate":"2021-10-27"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":629,"author":{"gitId":"theeugenechong"},"content":"The target user profile of cOOPer consists of all levels of administration in a tech startup, namely from the employee level of Secretary up to the management level of CEO.","lastModifiedDate":"2021-10-28"},{"lineNumber":630,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":631,"author":{"gitId":"theeugenechong"},"content":"Example Users:","lastModifiedDate":"2021-10-27"},{"lineNumber":632,"author":{"gitId":"ChrisLangton"},"content":"* has a need to schedule company meetings in timely manner","lastModifiedDate":"2021-10-27"},{"lineNumber":633,"author":{"gitId":"ChrisLangton"},"content":"* has a need to generate and store financial statements","lastModifiedDate":"2021-10-27"},{"lineNumber":634,"author":{"gitId":"ChrisLangton"},"content":"* has a need to raise timely concerns to management","lastModifiedDate":"2021-10-27"},{"lineNumber":635,"author":{"gitId":"ChrisLangton"},"content":"* has a need to perform reliable company growth projections","lastModifiedDate":"2021-10-27"},{"lineNumber":636,"author":{"gitId":"ChrisLangton"},"content":"* comfortable with typing interactions on a CLI","lastModifiedDate":"2021-10-27"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":638,"author":{"gitId":"theeugenechong"},"content":"#### Value proposition","lastModifiedDate":"2021-10-27"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":640,"author":{"gitId":"theeugenechong"},"content":"**cOOper\u0027s value proposition:** Manage company financials **faster** than typical human accounting means","lastModifiedDate":"2021-10-28"},{"lineNumber":641,"author":{"gitId":"theeugenechong"},"content":"\u0026 manage company communication **more reliably** than a typical GUI driven app.","lastModifiedDate":"2021-10-28"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":643,"author":{"gitId":"theeugenechong"},"content":"### User Stories","lastModifiedDate":"2021-10-27"},{"lineNumber":644,"author":{"gitId":"theeugenechong"},"content":"\u003e 💡 Priorities: High (must have) - `***`, Medium (nice to have) - `**`, Low (unlikely to have) - `*`","lastModifiedDate":"2021-11-06"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":646,"author":{"gitId":"ChrisLangton"},"content":"| Priority | As a ... | I want to ...             | So that I can ...                                           |","lastModifiedDate":"2021-10-27"},{"lineNumber":647,"author":{"gitId":"Rrraaaeee"},"content":"| ------- | -------- | ------------------------- | ----------------------------------------------------------- |","lastModifiedDate":"2021-10-24"},{"lineNumber":648,"author":{"gitId":"ChrisLangton"},"content":"| `***`    | new user | see usage \u0027help\u0027 instructions    | refer to them when I forget how to use the application      |","lastModifiedDate":"2021-10-27"},{"lineNumber":649,"author":{"gitId":"ChrisLangton"},"content":"| `***`    | new user     | register an account | login and return to my saved work at any point later on |","lastModifiedDate":"2021-10-27"},{"lineNumber":650,"author":{"gitId":"ChrisLangton"},"content":"| `***`    | user     | see a list of roles at login | login to the specific role I need to carry out a task |","lastModifiedDate":"2021-10-27"},{"lineNumber":651,"author":{"gitId":"ChrisLangton"},"content":"| `***`    | user     | have a password encrypted login | have my saved work be protected from any external tampering |","lastModifiedDate":"2021-10-27"},{"lineNumber":652,"author":{"gitId":"ChrisLangton"},"content":"| `***`    | finance admin     | automatically generate the company\u0027s financial statements | assess the company\u0027s current financial health accurately and quickly |","lastModifiedDate":"2021-10-27"},{"lineNumber":653,"author":{"gitId":"theeugenechong"},"content":"| `***`    | secretary employee     | see all company personnel\u0027s daily availability | schedule meetings between all available members easily |","lastModifiedDate":"2021-10-30"},{"lineNumber":654,"author":{"gitId":"ChrisLangton"},"content":"| `**`    | finance admin     | automatically generate projections on the company\u0027s yearly profitability | assess the company\u0027s potential future growth|","lastModifiedDate":"2021-10-27"},{"lineNumber":655,"author":{"gitId":"ChrisLangton"},"content":"| `**`    | employee     | make posts on a company forum | discuss difficulties or interesting developments in the company |","lastModifiedDate":"2021-10-27"},{"lineNumber":656,"author":{"gitId":"ChrisLangton"},"content":"| `**`    | secretary employee     | automatically schedule a meeting without having to know other person\u0027s availability| save time on finding an appropriate time to meet  |","lastModifiedDate":"2021-10-27"},{"lineNumber":657,"author":{"gitId":"ChrisLangton"},"content":"| `*`    | user in a hurry     | customise shortcut keys in the app| save time on retrieving the data I desire  |","lastModifiedDate":"2021-10-27"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":659,"author":{"gitId":"theeugenechong"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-10-27"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":661,"author":{"gitId":"theeugenechong"},"content":"* Should work on any _mainstream OS_ with Java 11 or above installed.","lastModifiedDate":"2021-10-28"},{"lineNumber":662,"author":{"gitId":"theeugenechong"},"content":"* Should be able to store up to 100 meetings, forum posts, and financial statements without observing any noticeable sluggishness in performance.","lastModifiedDate":"2021-11-03"},{"lineNumber":663,"author":{"gitId":"theeugenechong"},"content":"* Should log in and enter user-specific roles faster than traditional web-applications.","lastModifiedDate":"2021-11-03"},{"lineNumber":664,"author":{"gitId":"ChrisLangton"},"content":"* A user with average typing speed should be able to accomplish meeting scheduling and forum posting faster and more reliably using commands than using a mouse interaction GUI driven app.","lastModifiedDate":"2021-10-27"},{"lineNumber":665,"author":{"gitId":"ChrisLangton"},"content":"* A user with average typing speed should also be able to accomplish financial statement creation faster than by human means or a mouse interaction GUI driven app. ","lastModifiedDate":"2021-10-27"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":667,"author":{"gitId":"theeugenechong"},"content":"### Glossary","lastModifiedDate":"2021-10-27"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":669,"author":{"gitId":"theeugenechong"},"content":"* *IDE* - Integrated Development Environment","lastModifiedDate":"2021-11-05"},{"lineNumber":670,"author":{"gitId":"theeugenechong"},"content":"* *JDK* - Java Development Kit","lastModifiedDate":"2021-11-05"},{"lineNumber":671,"author":{"gitId":"theeugenechong"},"content":"* *UML* - Unified Modelling Language","lastModifiedDate":"2021-11-05"},{"lineNumber":672,"author":{"gitId":"theeugenechong"},"content":"* *API* - Application Programming Interface","lastModifiedDate":"2021-11-06"},{"lineNumber":673,"author":{"gitId":"theeugenechong"},"content":"* *POST Request* - A request used to send data to the server to create or update a resource","lastModifiedDate":"2021-11-06"},{"lineNumber":674,"author":{"gitId":"ChrisLangton"},"content":"* *mainstream OS* - Windows, OS-X, Linux, Unix","lastModifiedDate":"2021-10-27"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":676,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-05"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":678,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":680,"author":{"gitId":"theeugenechong"},"content":"## Appendix: Instructions for Manual Testing","lastModifiedDate":"2021-11-05"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":682,"author":{"gitId":"theeugenechong"},"content":"### Launch and shutdown","lastModifiedDate":"2021-11-05"},{"lineNumber":683,"author":{"gitId":"theeugenechong"},"content":"1. Launching cOOPer","lastModifiedDate":"2021-10-30"},{"lineNumber":684,"author":{"gitId":"theeugenechong"},"content":"   1. Download cOOPer\u0027s latest JAR file [here](https://github.com/AY2122S1-CS2113T-W13-4/tp/releases) and copy the JAR file into an empty folder.","lastModifiedDate":"2021-10-30"},{"lineNumber":685,"author":{"gitId":"theeugenechong"},"content":"   2. Launch the Command Prompt / Terminal from the folder.","lastModifiedDate":"2021-10-30"},{"lineNumber":686,"author":{"gitId":"theeugenechong"},"content":"   3. Check the Java version being used by entering `java -version`. Ensure that you are using Java 11 or above.","lastModifiedDate":"2021-10-30"},{"lineNumber":687,"author":{"gitId":"Rrraaaeee"},"content":"   4. Run `java -jar cOOPer.jar`. \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":688,"author":{"gitId":"theeugenechong"},"content":"   **Expected output:** cOOPer\u0027s greeting message is shown.","lastModifiedDate":"2021-11-03"},{"lineNumber":689,"author":{"gitId":"theeugenechong"},"content":"2. Exiting cOOPer","lastModifiedDate":"2021-10-30"},{"lineNumber":690,"author":{"gitId":"Rrraaaeee"},"content":"   1. Enter `exit`.\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":691,"author":{"gitId":"theeugenechong"},"content":"   **Expected output:** cOOPer\u0027s bye message is shown and the program exits successfully.","lastModifiedDate":"2021-11-03"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":693,"author":{"gitId":"theeugenechong"},"content":"### Sign-in","lastModifiedDate":"2021-11-03"},{"lineNumber":694,"author":{"gitId":"theeugenechong"},"content":"To indicate that the user is not signed in to cOOPer yet, a `[Logged out]` label can be seen beside cOOPer\u0027s command prompt as such:","lastModifiedDate":"2021-11-03"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":696,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":697,"author":{"gitId":"theeugenechong"},"content":"\u003e\u003e [Logged out]","lastModifiedDate":"2021-11-03"},{"lineNumber":698,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":700,"author":{"gitId":"theeugenechong"},"content":"1. Registering","lastModifiedDate":"2021-11-03"},{"lineNumber":701,"author":{"gitId":"theeugenechong"},"content":"   1. Ensure that the label beside cOOPer\u0027s command prompt shows `[Logged out]`.","lastModifiedDate":"2021-11-03"},{"lineNumber":702,"author":{"gitId":"theeugenechong"},"content":"   2. Enter `register [username] /pw [password] /as [role]` where `[username]` is your username, `[password]` is your password and `[role]` is one of \u0027admin\u0027 or \u0027employee\u0027.\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":703,"author":{"gitId":"theeugenechong"},"content":"   **Expected output:** A message informing you that you have successfully registered is shown.","lastModifiedDate":"2021-11-03"},{"lineNumber":704,"author":{"gitId":"theeugenechong"},"content":"2. Logging in","lastModifiedDate":"2021-11-03"},{"lineNumber":705,"author":{"gitId":"theeugenechong"},"content":"   1. Ensure that the label beside cOOPer\u0027s command prompt shows `[Logged out]`.","lastModifiedDate":"2021-11-03"},{"lineNumber":706,"author":{"gitId":"theeugenechong"},"content":"   2. Enter `login [username], /pw [password] /as [role]` where `[username]`, `[password]` and `[role]` are the username, password and role you registered with.\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":707,"author":{"gitId":"theeugenechong"},"content":"   **Expected output:** A message informing you that you are now successfully logged in is shown. The `[Logged out]` label at the command prompt is no longer present.","lastModifiedDate":"2021-11-03"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":709,"author":{"gitId":"theeugenechong"},"content":"### Generating the PDF","lastModifiedDate":"2021-11-05"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":711,"author":{"gitId":"theeugenechong"},"content":"The `generate` command works regardless of whether the prompt label is showing `[Balance Sheet]`, `[Cash Flow]` or is not even present.","lastModifiedDate":"2021-11-05"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":713,"author":{"gitId":"theeugenechong"},"content":"1. Generating the balance sheet","lastModifiedDate":"2021-11-05"},{"lineNumber":714,"author":{"gitId":"theeugenechong"},"content":"   1. Ensure that you are logged in as an *admin*.","lastModifiedDate":"2021-11-05"},{"lineNumber":715,"author":{"gitId":"theeugenechong"},"content":"   2. Fill up the balance sheet with `bs` → `add`.","lastModifiedDate":"2021-11-05"},{"lineNumber":716,"author":{"gitId":"theeugenechong"},"content":"   3. Ensure that you have an active Internet connection.","lastModifiedDate":"2021-11-05"},{"lineNumber":717,"author":{"gitId":"theeugenechong"},"content":"   4. Enter `generate bs`.\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":718,"author":{"gitId":"theeugenechong"},"content":"   **Expected output**: A message informing you that the PDF has been successfully generated is shown. A PDF named \u0027BalanceSheet.pdf\u0027 is created in a folder named \u0027output\u0027 in the folder containing the JAR file.","lastModifiedDate":"2021-11-05"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":720,"author":{"gitId":"theeugenechong"},"content":"2. Generating the cash flow statement","lastModifiedDate":"2021-11-05"},{"lineNumber":721,"author":{"gitId":"theeugenechong"},"content":"   1. Ensure that you are logged in as an *admin*.","lastModifiedDate":"2021-11-05"},{"lineNumber":722,"author":{"gitId":"theeugenechong"},"content":"   2. Fill up the cash flow statement with `cf` → `add`.","lastModifiedDate":"2021-11-05"},{"lineNumber":723,"author":{"gitId":"theeugenechong"},"content":"   3. Ensure that you have an active Internet connection.","lastModifiedDate":"2021-11-05"},{"lineNumber":724,"author":{"gitId":"theeugenechong"},"content":"   4. Enter `generate cf`.\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":725,"author":{"gitId":"theeugenechong"},"content":"   **Expected output**: A message informing you that the PDF has been successfully generated is shown. A PDF named \u0027CashFlowStatement.pdf\u0027 is created in a folder named \u0027output\u0027 in the folder containing the JAR file.","lastModifiedDate":"2021-11-05"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":727,"author":{"gitId":"theeugenechong"},"content":"### Viewing help","lastModifiedDate":"2021-11-03"},{"lineNumber":728,"author":{"gitId":"theeugenechong"},"content":"1. Viewing help","lastModifiedDate":"2021-11-03"},{"lineNumber":729,"author":{"gitId":"theeugenechong"},"content":"   1. Ensure that you are logged in to cOOPer.","lastModifiedDate":"2021-11-03"},{"lineNumber":730,"author":{"gitId":"theeugenechong"},"content":"   2. Enter `help`.\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":731,"author":{"gitId":"theeugenechong"},"content":"   **Expected output:** A list of commands specific to your role is shown along with their formats.","lastModifiedDate":"2021-11-03"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":733,"author":{"gitId":"Rrraaaeee"},"content":"### Forum actions","lastModifiedDate":"2021-11-06"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":735,"author":{"gitId":"Rrraaaeee"},"content":"1. Adding a post","lastModifiedDate":"2021-11-06"},{"lineNumber":736,"author":{"gitId":"Rrraaaeee"},"content":"   1. Ensure that you are logged in to cOOPer.","lastModifiedDate":"2021-11-06"},{"lineNumber":737,"author":{"gitId":"theeugenechong"},"content":"   2. Enter `post add hello world`.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":738,"author":{"gitId":"Rrraaaeee"},"content":"      **Expected output**: A box with the content you just entered as confirmation","lastModifiedDate":"2021-11-06"},{"lineNumber":739,"author":{"gitId":"Rrraaaeee"},"content":"2. Commenting a post","lastModifiedDate":"2021-11-06"},{"lineNumber":740,"author":{"gitId":"Rrraaaeee"},"content":"   1. Ensure that you are logged in to cOOPer.","lastModifiedDate":"2021-11-06"},{"lineNumber":741,"author":{"gitId":"Rrraaaeee"},"content":"   2. Ensure you have added at least 1 post","lastModifiedDate":"2021-11-06"},{"lineNumber":742,"author":{"gitId":"theeugenechong"},"content":"   3. Enter `post comment hello world 2 /on 1`. \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":743,"author":{"gitId":"Rrraaaeee"},"content":"      **Expected output**: A box with the post and your comment you just entered as confirmation","lastModifiedDate":"2021-11-06"},{"lineNumber":744,"author":{"gitId":"Rrraaaeee"},"content":"3. Deleting a post","lastModifiedDate":"2021-11-06"},{"lineNumber":745,"author":{"gitId":"Rrraaaeee"},"content":"   1. Ensure that you are logged in to cOOPer.","lastModifiedDate":"2021-11-06"},{"lineNumber":746,"author":{"gitId":"Rrraaaeee"},"content":"   2. Ensure you have added at least 1 post","lastModifiedDate":"2021-11-06"},{"lineNumber":747,"author":{"gitId":"theeugenechong"},"content":"   3. Enter `post delete 1`. \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":748,"author":{"gitId":"Rrraaaeee"},"content":"      Expected output: A box with the post you just deleted as confirmation","lastModifiedDate":"2021-11-06"},{"lineNumber":749,"author":{"gitId":"Rrraaaeee"},"content":"4. Listing all posts","lastModifiedDate":"2021-11-06"},{"lineNumber":750,"author":{"gitId":"Rrraaaeee"},"content":"   1. Ensure that you are logged in to cOOPer.","lastModifiedDate":"2021-11-06"},{"lineNumber":751,"author":{"gitId":"Rrraaaeee"},"content":"   2. Ensure you have added at least 1 post","lastModifiedDate":"2021-11-06"},{"lineNumber":752,"author":{"gitId":"theeugenechong"},"content":"   3. Enter `post list all`.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":753,"author":{"gitId":"Rrraaaeee"},"content":"      **Expected output**: A box containing all posts and comments you have entered so far","lastModifiedDate":"2021-11-06"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":755,"author":{"gitId":"Rrraaaeee"},"content":"[⬆️ Back to top](#whats-in-this-developer-guide)","lastModifiedDate":"2021-11-06"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"ChrisLangton":55,"Rrraaaeee":104,"theeugenechong":547,"fansxx":19,"-":31}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"![cOOPer](userGuideImages/cooperLogo.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"# Hello!","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"cOOPer is a **desktop application** developed to simplify administrative processes of **tech startups** such as **communication** and **finance management**. ","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"If you are managing a tech startup and are facing problems in the areas of **communication** and **finance**, cOOPer is the perfect app for you.","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"cOOPer is able to help you with tasks like generating your company\u0027s **balance sheet**, **forecasting** your company\u0027s cash flow, **scheduling** meetings and more. ","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"cOOPer is optimized for use via a **Command Line Interface (CLI)**, so if you are someone who types fast, cOOPer can help you solve these problems efficiently.","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"#### Useful links:","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"* For users, refer to cOOPer\u0027s [User Guide](UserGuide.md) ","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"* For developers, refer to our [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"* To know more about the team of developers, click [here](AboutUs.md)","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"theeugenechong":12,"-":2}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"![cOOPer](userGuideImages/cooperLogo.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"\u003c!--@@author theeugenechong--\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"# User Guide","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"## Introducing cOOPer","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"Welcome to cOOPer\u0027s User Guide!","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"cOOPer is a **desktop application** developed to simplify administrative processes of **tech startups**","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"such as **communication** and **finance management**.","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"If you are running a tech startup, cOOPer can help you with **accounting** and **communicative** tasks like:","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"- **Generating** your company\u0027s **financial statements**","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"- **Forecasting** your company\u0027s **cash flow**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"- **Scheduling meetings** with your employees","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"- Having **discussions** with your colleagues","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"cOOPer is optimized for use via a [**Command Line Interface (CLI)**](https://simple.wikipedia.org/wiki/Command-line_interface), so if you are someone who types fast,","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"cOOPer can help you manage your startup efficiently.","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"This user guide is written to assist users like you in using cOOPer. It provides you with the necessary guidance you need for using cOOPer\u0027s features to manage your startup.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"## What\u0027s in This User Guide","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"- [How this User Guide Works](#how-this-user-guide-works)","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"- [Setup](#setup)","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"- [cOOPer\u0027s Commands](#coopers-commands)","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"- [Getting Started](#getting-started)","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"  - [How cOOPer is to be used](#how-cooper-is-to-be-used)","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"  - [Roles](#roles) ","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"  - [User registration](#user-registration)","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"- [Login](#login)","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"- [Features for All Users](#features-for-all-users)","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"  - [Adding a forum post: `post add`](#adding-a-forum-post-post-add)","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"  - [Viewing a post / posts in the forum: `post list`](#viewing-a-post--posts-in-the-forum-post-list)","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"  - [Commenting on a forum post: `post comment`](#commenting-on-a-forum-post-post-comment)","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"  - [Deleting a forum post: `post delete`](#deleting-a-forum-post-post-delete)","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"  - [Declaring available timings for meetings: `available`](#declaring-available-timing-for-meetings-available)","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"  - [Viewing users available at different timings: `availability`](#viewing-users-available-at-different-timings-availability)","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"  - [Viewing scheduled meetings: `meetings`](#viewing-scheduled-meetings-meetings)","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"  - [Logging out: `logout`](#logging-out-logout)","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"- [Admin Features](#admin-features)","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"  - [Creating the balance sheet: `bs` → `add`](#creating-the-balance-sheet-bs--add)","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"  - [Creating the cash flow statement: `cf` → `add`](#creating-the-cash-flow-statement-cf--add)","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"  - [Accessing the balance sheet: `bs` → `list`](#accessing-the-balance-sheet-bs--list)","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"  - [Accessing the cash flow statement: `cf` → `list`](#accessing-the-cash-flow-statement-cf--list)","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"  - [Projecting cash flow: `proj`](#projecting-cash-flow-proj)","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"  - [Generating a PDF from the financial statement: `generate`](#generating-a-pdf-from-the-financial-statement--generate)","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"  - [Scheduling meetings with different users: `schedule`](#scheduling-meetings-with-different-users-schedule)","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"- [Employee Features](#employee-features)","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"- [Viewing Help: `help`](#viewing-help-help)","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"- [Exiting the Program: `exit`](#exiting-the-program-exit)","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"- [cOOPer\u0027s Data Storage](#coopers-data-storage)","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"- [FAQ](#faq)","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"  - [Before logging in](#before-logging-in)","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"  - [Admin commands](#admin-commands)","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"  - [Employee commands](#employee-commands)","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"## How this User Guide Works","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"Throughout this user guide, you will see text formatted differently from normal text, as well as symbols appearing before another line of text. ","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"The table below explains the formatting and symbols in this user guide.","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"**Formatting/Symbol** | **Meaning**              |","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"------------|------------------------------------|","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"*italics* |Text in italics represent special terminology specific to using cOOPer.","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"**bold**|Text in bold emphasizes the text\u0027s importance and indicates that you should pay more attention to the text.","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"\u003ckbd\u003ekey\u003c/kbd\u003e | Text formatted as such represents a key you can press on your keyboard. ","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"`command` |Short lines of text highlighted as such represent a command that can be entered in the Command Prompt/Terminal.\u003cbr\u003e Large segments on the other hand (for e.g. in [Setup](#setup)) represent the expected output on the Command Prompt/Terminal.","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"`[argument]`|Text highlighted in grey wrapped in square brackets represent a command argument that needs to be present when a command is entered. You are free to decide the argument entered. ","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"`\u003e\u003e`|This symbol appears in the examples given for cOOPer\u0027s features. It represents cOOPer\u0027s [command prompt](https://en.wikipedia.org/wiki/Command-line_interface#Command_prompt) and it should not be included when you enter subsequent commands.\u003cbr\u003e Refer to the [cOOPer\u0027s Commands](#coopers-commands) section for additional info regarding the prompt.","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"ℹ️  |The info symbol indicates useful information about cOOPer\u0027s features.","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"💡     |The light bulb symbol indicates a useful tip which eases your usage of cOOPer. ","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"theeugenechong"},"content":"⚠️  |The hazard symbol indicates an important message you should take note of in order to avoid negative consequences.","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"## Setup","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"1. Download the latest version of cOOPer [here](https://github.com/AY2122S1-CS2113T-W13-4/tp/releases).","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"2. Copy the JAR (.jar) file to an empty folder of your choice. This folder will be used as the *home folder* for your cOOPer application.","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"3. If you are using Windows, [launch the Command Prompt](https://www.lifewire.com/open-command-prompt-in-a-folder-5185505)","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"   in the home folder. If you are using Mac or Linux, [open a Terminal window](https://www.groovypost.com/howto/open-command-window-terminal-window-specific-folder-windows-mac-linux/#:~:text\u003dTo%20open%20a%20Terminal%20window%20from%20within%20a%20folder%20in,window%20to%20the%20selected%20folder.) ","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"   in the home folder.","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"4. Ensure that you have Java 11 or above installed or your desktop.","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"   1. In the Command Prompt / Terminal, enter `java -version`.","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"   2. You should see the following on the Command Prompt / Terminal:","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"theeugenechong"},"content":"   ![javaVersion.png](userGuideImages/javaVersion.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"   3. The section enclosed in red shows you the version you currently have installed.","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"   4. If nothing appeared on the Command Prompt / Terminal, it most likely means you do not have Java installed on your computer. Do not worry, you can download it [here](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html).","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"5. Run cOOPer by entering `java -jar cOOPer.jar`.","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"6. A greeting from cOOPer should appear as such:","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"            /$$$$$$   /$$$$$$  /$$$$$$$","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"           /$$__  $$ /$$__  $$| $$__  $$","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"  /$$$$$$$| $$  \\ $$| $$  \\ $$| $$  \\ $$ /$$$$$$   /$$$$$$","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":" /$$_____/| $$  | $$| $$  | $$| $$$$$$$//$$__  $$ /$$__  $$","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"theeugenechong"},"content":"| $$      | $$  | $$| $$  | $$| $$____/| $$$$$$$$| $$  \\__/","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"theeugenechong"},"content":"| $$      | $$  | $$| $$  | $$| $$     | $$_____/| $$","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"theeugenechong"},"content":"|  $$$$$$$|  $$$$$$/|  $$$$$$/| $$     |  $$$$$$$| $$","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"theeugenechong"},"content":" \\_______/ \\______/  \\______/ |__/      \\_______/|__/","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"theeugenechong"},"content":"Hello I\u0027m cOOPer! Nice to meet you!","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"theeugenechong"},"content":"Log in or register to gain access to my features!","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"theeugenechong"},"content":"To log in, enter \"login [yourUsername] pw [password] as [yourRole]\".","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"theeugenechong"},"content":"To register, enter \"register [yourUsername] pw [password] as [yourRole]\".","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"theeugenechong"},"content":"To exit, enter \"exit\".","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"theeugenechong"},"content":"\u003e\u003e [Logged out]","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"theeugenechong"},"content":"Refer to the [Getting Started](#getting-started) section for information on how to start using cOOPer.","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"theeugenechong"},"content":"## cOOPer\u0027s Commands","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"theeugenechong"},"content":"ℹ️Here are some things to note about cOOPer\u0027s **commands**.\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":135,"author":{"gitId":"theeugenechong"},"content":"- Extraneous arguments for commands that do not have arguments (e.g. `exit`, `meetings`, `cf`, `help`, etc.) will be **ignored**. For example, `exit 123` will be interpreted as `exit`.\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"theeugenechong"},"content":"- For commands having arguments, extraneous arguments added to the back of the command **will be considered as part of the command argument** too, and this may lead to the command **not being interpreted correctly** by cOOPer. For example, if `available 14:00 abc` is entered, cOOPer interprets the argument as `14:00 abc` which according to cOOPer is an invalid time.\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"theeugenechong"},"content":"- All commands are **case-insensitive**. For example, `list` is the same as `List` or `LIST`.\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"theeugenechong"},"content":"- Empty input (for e.g. simply pressing \u003ckbd\u003eEnter\u003c/kbd\u003e, entering whitespaces or \u003ckbd\u003eTab\u003c/kbd\u003e characters) will be ignored and cOOPer will continue prompting you for your next command.\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"theeugenechong"},"content":"ℹ️Here is some additional information about cOOPer\u0027s **command prompt**.\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"theeugenechong"},"content":"- At different stages of using cOOPer, an additional label which looks like `[label]` will appear beside the prompt.\u003cbr\u003e ","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"theeugenechong"},"content":"- There are **three** types of labels you will see:","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"theeugenechong"},"content":"  - `[Logged out]` indicates you are currently **logged out** of cOOPer","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"theeugenechong"},"content":"  - `[Balance Sheet]` indicates you are using cOOPer\u0027s **[balance sheet](#creating-the-balance-sheet-bs--add) function**","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"theeugenechong"},"content":"  - `[Cash Flow]` indicates you are using cOOPer\u0027s **[cash flow](#creating-the-cash-flow-statement-cf--add) function**","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"theeugenechong"},"content":"- No label shown indicates you are **logged in** to the cOOPer, but you are using **neither** the balance sheet function nor the cash flow statement function.","lastModifiedDate":"2021-11-06"},{"lineNumber":148,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":149,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-11-01"},{"lineNumber":150,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"theeugenechong"},"content":"## Getting Started","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"theeugenechong"},"content":"### How cOOPer is to be used","lastModifiedDate":"2021-11-01"},{"lineNumber":156,"author":{"gitId":"theeugenechong"},"content":"- The **correct** way (as of v2.1) of using cOOPer is to run cOOPer on a **single** desktop with only **a single user** interacting with cOOPer at a time.","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"theeugenechong"},"content":"\u003e ⚠️cOOPer\u0027s features **will not work** as described in this user guide if **multiple users** are interacting with cOOPer on **multiple desktops** at the same time.","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"theeugenechong"},"content":"### Roles","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"theeugenechong"},"content":"- There are two main roles you can hold as a user of cOOPer, namely the _**admin**_ role or the _**employee**_ role.","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"theeugenechong"},"content":"- You are eligible to hold the admin role if you hold a high position in the startup. e.g. Chief Executive Officer (CEO), Chief Financial Officer (CFO), Human Resources Manager (HR), accountant etc.","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"theeugenechong"},"content":"- On the other hand, you hold the employee role if you are a basic employee at the startup.","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"theeugenechong"},"content":"- cOOPer offers tailor-made functions and features specific to your role to ensure the correct level of administrative access within the company throughout cOOPer\u0027s usage.","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"theeugenechong"},"content":"### User registration","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"theeugenechong"},"content":"- Upon first-time use of cOOPer, an individual holding the admin role in the startup is in charge of ensuring all members of the startup are registered with the correct role.","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"theeugenechong"},"content":"- Once a member has been registered, they will be able to log in to cOOPer to access its features.","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"theeugenechong"},"content":"- How to register a user:","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"theeugenechong"},"content":"  1. When you see cOOPer asking you to log in, register or exit, enter `register [username] /pw [password] /as [role]`. ","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"theeugenechong"},"content":"  2. Upon successful registration, you should see a message informing you of your successful registration.","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"theeugenechong"},"content":"  3. You can now log in to access cOOPer\u0027s features specific to your role. Refer to the [Login](#login) section to find out more about logging in.","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"theeugenechong"},"content":"\u003e ℹ️`[username]` refers to your name, `[password]` refers to your password, while `[role]` refers to your role as determined [here](#roles).","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"theeugenechong"},"content":"- Example input:","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"theeugenechong"},"content":"\u003e\u003e [Logged out] register Sebastian /pw 123 /as admin","lastModifiedDate":"2021-11-02"},{"lineNumber":184,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"theeugenechong"},"content":"- Expected output:","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":188,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":189,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"theeugenechong"},"content":"Sebastian is now successfully registered as an admin!","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"theeugenechong"},"content":"\u003e ℹ️A similar output should be observed when an employee is registered, with the output now showing \u0027employee\u0027 instead of \u0027admin\u0027.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":195,"author":{"gitId":"theeugenechong"},"content":"\u003e 💡 Just like when you are using any other app with a sign in feature, remember to record down your username and password somewhere (e.g. Sticky Notes, a password manager).\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":196,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":197,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":198,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":199,"author":{"gitId":"theeugenechong"},"content":"## Login","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"theeugenechong"},"content":"- Once you are successfully [registered](#user-registration), you can now log in to access cOOPer\u0027s features.","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"theeugenechong"},"content":"- How to log in:","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"theeugenechong"},"content":"  1. When you see cOOPer asking you to log in, register or exit, enter `login [username] /pw [password] /as [role]`.","lastModifiedDate":"2021-11-02"},{"lineNumber":203,"author":{"gitId":"theeugenechong"},"content":"  2. You now have access to cOOPer\u0027s features specific to your role.","lastModifiedDate":"2021-10-13"},{"lineNumber":204,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":205,"author":{"gitId":"theeugenechong"},"content":"\u003e ℹ️`[username]`, `[password]` and `[role]` refer to your name, password and role as registered in cOOPer\u0027s system.\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":206,"author":{"gitId":"theeugenechong"},"content":"\u003e ⚠️The username you are logging in with is **case-sensitive**. *e.g.* logging in with the username `sebastian` is not the same as logging in with `Sebastian`.","lastModifiedDate":"2021-10-29"},{"lineNumber":207,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":208,"author":{"gitId":"theeugenechong"},"content":"- Example input:","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":210,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":211,"author":{"gitId":"theeugenechong"},"content":"\u003e\u003e [Logged out] login Sebastian /pw 123 /as admin","lastModifiedDate":"2021-11-02"},{"lineNumber":212,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":214,"author":{"gitId":"theeugenechong"},"content":"- Expected output:","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":216,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":217,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"theeugenechong"},"content":"You are now logged in successfully as Sebastian!","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":220,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":222,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":224,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":226,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":227,"author":{"gitId":"theeugenechong"},"content":"## Features for All Users","lastModifiedDate":"2021-11-01"},{"lineNumber":228,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":229,"author":{"gitId":"theeugenechong"},"content":"- This section explains cOOPer\u0027s features for all users, i.e. users with either the _**admin**_ role or the _**employee**_ role. Refer to the [Roles](#roles) section if you do not know how roles are determined.","lastModifiedDate":"2021-11-02"},{"lineNumber":230,"author":{"gitId":"theeugenechong"},"content":"- These features are accessible to you only **after** you have successfully [logged in](#login).","lastModifiedDate":"2021-11-02"},{"lineNumber":231,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":232,"author":{"gitId":"Rrraaaeee"},"content":"\u003c!--@@author Rrraaaeee--\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":233,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":234,"author":{"gitId":"Rrraaaeee"},"content":"### Adding a forum post: `post add`","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"Rrraaaeee"},"content":"+ You can post a message to forum for cOOPer\u0027s users to discuss certain topics.","lastModifiedDate":"2021-10-29"},{"lineNumber":237,"author":{"gitId":"Rrraaaeee"},"content":"+ How to post a message to the forum:","lastModifiedDate":"2021-10-29"},{"lineNumber":238,"author":{"gitId":"Rrraaaeee"},"content":"  1. Enter `post add [postContent]`.","lastModifiedDate":"2021-11-02"},{"lineNumber":239,"author":{"gitId":"Rrraaaeee"},"content":"  2. Your post will be added to the forum, and you will see a confirmation message indicating that the post was successful.","lastModifiedDate":"2021-10-29"},{"lineNumber":240,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":241,"author":{"gitId":"Rrraaaeee"},"content":"\u003e ℹ️`[postContent]` refers to the content of your post.","lastModifiedDate":"2021-10-29"},{"lineNumber":242,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":243,"author":{"gitId":"Rrraaaeee"},"content":"+ Example input:","lastModifiedDate":"2021-10-29"},{"lineNumber":244,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":245,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":246,"author":{"gitId":"Rrraaaeee"},"content":"\u003e\u003e post add hello world!","lastModifiedDate":"2021-10-29"},{"lineNumber":247,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":248,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":249,"author":{"gitId":"Rrraaaeee"},"content":"+ Expected output:","lastModifiedDate":"2021-10-29"},{"lineNumber":250,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":251,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":252,"author":{"gitId":"Rrraaaeee"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":253,"author":{"gitId":"Rrraaaeee"},"content":"Sebastian has just posted to the forum:","lastModifiedDate":"2021-11-02"},{"lineNumber":254,"author":{"gitId":"Rrraaaeee"},"content":"+--------------------------------------------------------------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":255,"author":{"gitId":"Rrraaaeee"},"content":"|  hello world!","lastModifiedDate":"2021-10-29"},{"lineNumber":256,"author":{"gitId":"Rrraaaeee"},"content":"+--------------------------------------------------------------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"Rrraaaeee"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":258,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":259,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"Rrraaaeee"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":261,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"Rrraaaeee"},"content":"### Viewing a post / posts in the forum: `post list`","lastModifiedDate":"2021-10-29"},{"lineNumber":263,"author":{"gitId":"Rrraaaeee"},"content":"+ Shows you the currently active forum posts along with any comments on the posts.","lastModifiedDate":"2021-10-29"},{"lineNumber":264,"author":{"gitId":"Rrraaaeee"},"content":"+ You can specify if you want to view all the posts or a specific post.","lastModifiedDate":"2021-10-29"},{"lineNumber":265,"author":{"gitId":"Rrraaaeee"},"content":"+ How to view a specific post / posts in the forum:","lastModifiedDate":"2021-10-29"},{"lineNumber":266,"author":{"gitId":"Rrraaaeee"},"content":"  1. Enter `post list all` to view all the active forum posts.","lastModifiedDate":"2021-10-29"},{"lineNumber":267,"author":{"gitId":"Rrraaaeee"},"content":"  2. cOOPer lists all posts along with their comments in a hierarchical manner.","lastModifiedDate":"2021-10-29"},{"lineNumber":268,"author":{"gitId":"Rrraaaeee"},"content":"  3. Enter `post list [postId]` to view the single post with `[postId]`.","lastModifiedDate":"2021-10-29"},{"lineNumber":269,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":270,"author":{"gitId":"Rrraaaeee"},"content":"\u003e ℹ️`[postId]` refers to the index of the post you want to view. It must be a **positive integer** and also an index of the posts **in the list**.\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":271,"author":{"gitId":"Rrraaaeee"},"content":"\u003e 💡 Enter `post list all` to know the index of the specific post you want to view.","lastModifiedDate":"2021-10-31"},{"lineNumber":272,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":273,"author":{"gitId":"Rrraaaeee"},"content":"+ Example input for viewing all the forum posts:","lastModifiedDate":"2021-10-29"},{"lineNumber":274,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":275,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":276,"author":{"gitId":"Rrraaaeee"},"content":"\u003e\u003e post list all","lastModifiedDate":"2021-10-29"},{"lineNumber":277,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":278,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":279,"author":{"gitId":"Rrraaaeee"},"content":"+ Expected output:","lastModifiedDate":"2021-10-29"},{"lineNumber":280,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":281,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":282,"author":{"gitId":"Rrraaaeee"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":283,"author":{"gitId":"Rrraaaeee"},"content":"Here is the list of forum posts:","lastModifiedDate":"2021-10-29"},{"lineNumber":284,"author":{"gitId":"Rrraaaeee"},"content":"+--------------------------------------------------------------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":285,"author":{"gitId":"Rrraaaeee"},"content":"|  1. @Sebastian: hello world!","lastModifiedDate":"2021-11-02"},{"lineNumber":286,"author":{"gitId":"Rrraaaeee"},"content":"|    -  1. @Eugene: welcome","lastModifiedDate":"2021-11-02"},{"lineNumber":287,"author":{"gitId":"Rrraaaeee"},"content":"|    -  2. @Eugene: welcome to CS2113T!","lastModifiedDate":"2021-11-02"},{"lineNumber":288,"author":{"gitId":"Rrraaaeee"},"content":"|  2. @Sebastian: how do you do?","lastModifiedDate":"2021-10-29"},{"lineNumber":289,"author":{"gitId":"Rrraaaeee"},"content":"|    -  1. @Eugene: how do you do?","lastModifiedDate":"2021-11-02"},{"lineNumber":290,"author":{"gitId":"Rrraaaeee"},"content":"|  3. @Eugene: Hey how are you?","lastModifiedDate":"2021-11-02"},{"lineNumber":291,"author":{"gitId":"Rrraaaeee"},"content":"+--------------------------------------------------------------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":292,"author":{"gitId":"Rrraaaeee"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":293,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":294,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":295,"author":{"gitId":"Rrraaaeee"},"content":"+ Example input for viewing a specific forum post:","lastModifiedDate":"2021-10-29"},{"lineNumber":296,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":297,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":298,"author":{"gitId":"Rrraaaeee"},"content":"\u003e\u003e post list 1","lastModifiedDate":"2021-10-29"},{"lineNumber":299,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":300,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":301,"author":{"gitId":"Rrraaaeee"},"content":"+ Expected output:","lastModifiedDate":"2021-11-05"},{"lineNumber":302,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":303,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":304,"author":{"gitId":"Rrraaaeee"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":305,"author":{"gitId":"Rrraaaeee"},"content":"Here is the forum post:","lastModifiedDate":"2021-10-29"},{"lineNumber":306,"author":{"gitId":"Rrraaaeee"},"content":"+--------------------------------------------------------------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":307,"author":{"gitId":"Rrraaaeee"},"content":"|  @Sebastian: hello world!","lastModifiedDate":"2021-11-02"},{"lineNumber":308,"author":{"gitId":"Rrraaaeee"},"content":"|    -  1.@Eugene: welcome","lastModifiedDate":"2021-11-02"},{"lineNumber":309,"author":{"gitId":"Rrraaaeee"},"content":"|    -  2.@Eugene: welcome to CS2113T!","lastModifiedDate":"2021-11-02"},{"lineNumber":310,"author":{"gitId":"Rrraaaeee"},"content":"+--------------------------------------------------------------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":311,"author":{"gitId":"Rrraaaeee"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":312,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":313,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":314,"author":{"gitId":"Rrraaaeee"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":315,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":316,"author":{"gitId":"Rrraaaeee"},"content":"### Commenting on a forum post: `post comment`","lastModifiedDate":"2021-10-31"},{"lineNumber":317,"author":{"gitId":"Rrraaaeee"},"content":"+ Adds a comment on a post in the forum.","lastModifiedDate":"2021-10-31"},{"lineNumber":318,"author":{"gitId":"Rrraaaeee"},"content":"+ How to comment on a post:","lastModifiedDate":"2021-10-31"},{"lineNumber":319,"author":{"gitId":"Rrraaaeee"},"content":"  1. When you see a post on the forum, comment on the post by entering `post comment [commentContent] /on [postId]`.","lastModifiedDate":"2021-11-02"},{"lineNumber":320,"author":{"gitId":"Rrraaaeee"},"content":"  2. A comment `[commentContent]` will be added to the post with `[postId]`.","lastModifiedDate":"2021-10-31"},{"lineNumber":321,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":322,"author":{"gitId":"Rrraaaeee"},"content":"\u003e ℹ️`[postId]` refers to the index of the post you want to comment on. It must be a **positive integer** and also an index of the posts **in the list**.\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":323,"author":{"gitId":"Rrraaaeee"},"content":"\u003e 💡 Enter [`post list all`](#viewing-a-post--posts-in-the-forum-post-list) before commenting on a post to know the index of the specific post you want to comment on.","lastModifiedDate":"2021-10-31"},{"lineNumber":324,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":325,"author":{"gitId":"Rrraaaeee"},"content":"+ Example input:","lastModifiedDate":"2021-10-31"},{"lineNumber":326,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":327,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-31"},{"lineNumber":328,"author":{"gitId":"Rrraaaeee"},"content":"\u003e\u003e post comment welcome /on 1","lastModifiedDate":"2021-11-02"},{"lineNumber":329,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-31"},{"lineNumber":330,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":331,"author":{"gitId":"Rrraaaeee"},"content":"+ Expected output:","lastModifiedDate":"2021-10-31"},{"lineNumber":332,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":333,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-31"},{"lineNumber":334,"author":{"gitId":"Rrraaaeee"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":335,"author":{"gitId":"Rrraaaeee"},"content":"Eugene has just commented on a post from the forum:","lastModifiedDate":"2021-11-02"},{"lineNumber":336,"author":{"gitId":"Rrraaaeee"},"content":"+--------------------------------------------------------------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":337,"author":{"gitId":"Rrraaaeee"},"content":"|  hello world!","lastModifiedDate":"2021-11-02"},{"lineNumber":338,"author":{"gitId":"Rrraaaeee"},"content":"|    -  welcome","lastModifiedDate":"2021-11-02"},{"lineNumber":339,"author":{"gitId":"Rrraaaeee"},"content":"+--------------------------------------------------------------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":340,"author":{"gitId":"Rrraaaeee"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":341,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-31"},{"lineNumber":342,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":343,"author":{"gitId":"Rrraaaeee"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-31"},{"lineNumber":344,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":345,"author":{"gitId":"Rrraaaeee"},"content":"### Deleting a forum post: `post delete`","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"Rrraaaeee"},"content":"- Deletes an active post on the forum along with its comments.","lastModifiedDate":"2021-10-29"},{"lineNumber":347,"author":{"gitId":"Rrraaaeee"},"content":"- How to delete a post:","lastModifiedDate":"2021-10-29"},{"lineNumber":348,"author":{"gitId":"Rrraaaeee"},"content":"  1. Enter `post delete [postId]`.","lastModifiedDate":"2021-10-29"},{"lineNumber":349,"author":{"gitId":"Rrraaaeee"},"content":"  2. The post will be deleted from the forum.","lastModifiedDate":"2021-10-29"},{"lineNumber":350,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":351,"author":{"gitId":"Rrraaaeee"},"content":"\u003e ℹ️ You are only allowed to delete the posts **made by you**.\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":352,"author":{"gitId":"Rrraaaeee"},"content":"\u003e ℹ️ `[postId]` refers to the index of the post you want to delete. It must be a **positive integer** and also an index of the posts **in the list**.\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":353,"author":{"gitId":"Rrraaaeee"},"content":"\u003e 💡 Enter [`post list all`](#viewing-a-post--posts-in-the-forum-post-list) before you delete a post to know the index of the post you want to delete.","lastModifiedDate":"2021-10-31"},{"lineNumber":354,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":355,"author":{"gitId":"Rrraaaeee"},"content":"- Example input:","lastModifiedDate":"2021-10-29"},{"lineNumber":356,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":357,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":358,"author":{"gitId":"Rrraaaeee"},"content":"\u003e\u003e post delete 1","lastModifiedDate":"2021-10-29"},{"lineNumber":359,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":360,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":361,"author":{"gitId":"Rrraaaeee"},"content":"- Expected output:","lastModifiedDate":"2021-11-05"},{"lineNumber":362,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":363,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":364,"author":{"gitId":"Rrraaaeee"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":365,"author":{"gitId":"Rrraaaeee"},"content":"Sebastian has just deleted a post from the forum:","lastModifiedDate":"2021-11-02"},{"lineNumber":366,"author":{"gitId":"Rrraaaeee"},"content":"+--------------------------------------------------------------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":367,"author":{"gitId":"Rrraaaeee"},"content":"|  hello world!","lastModifiedDate":"2021-10-29"},{"lineNumber":368,"author":{"gitId":"Rrraaaeee"},"content":"+--------------------------------------------------------------------+","lastModifiedDate":"2021-11-02"},{"lineNumber":369,"author":{"gitId":"Rrraaaeee"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":370,"author":{"gitId":"Rrraaaeee"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":371,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":372,"author":{"gitId":"Rrraaaeee"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":373,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":374,"author":{"gitId":"fansxx"},"content":"\u003c!--@@author fansxx--\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":375,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":376,"author":{"gitId":"fansxx"},"content":"### Declaring available timing for meetings: `available`","lastModifiedDate":"2021-10-27"},{"lineNumber":377,"author":{"gitId":"fansxx"},"content":"- For easier scheduling of meetings, cOOPer has a function to gather availabilities of everybody to find a common time for a meeting.","lastModifiedDate":"2021-10-14"},{"lineNumber":378,"author":{"gitId":"fansxx"},"content":"- How to input your availability:","lastModifiedDate":"2021-10-14"},{"lineNumber":379,"author":{"gitId":"fansxx"},"content":"  1. Enter `available [date] [time]`.","lastModifiedDate":"2021-11-05"},{"lineNumber":380,"author":{"gitId":"fansxx"},"content":"  2. You will now have your name stored under the specified time in the system.","lastModifiedDate":"2021-10-14"},{"lineNumber":381,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":382,"author":{"gitId":"fansxx"},"content":"\u003e ℹ️`[time]` refers to the **start of the hour** that you are available at. For example, `available 14:00` means that you are available from **14:00** to **14:59**.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":383,"author":{"gitId":"fansxx"},"content":"\u003e ⚠️`[date]` has a format of **dd-MM-yyyy**. Any other format will **not** be accepted and your availability will not be stored. \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":384,"author":{"gitId":"fansxx"},"content":"\u003e ⚠️`[time]` has a format of **HH:mm**, in *24-hour clock*. Any other format will **not** be accepted and your availability will not be stored.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":385,"author":{"gitId":"fansxx"},"content":"\u003e ⚠️Duplicate `[username]` in one timeslot will **not** be accepted.","lastModifiedDate":"2021-10-28"},{"lineNumber":386,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":387,"author":{"gitId":"fansxx"},"content":"- Example input:","lastModifiedDate":"2021-10-15"},{"lineNumber":388,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":389,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-14"},{"lineNumber":390,"author":{"gitId":"fansxx"},"content":"\u003e\u003e available 08-11-2021 14:00","lastModifiedDate":"2021-11-05"},{"lineNumber":391,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-14"},{"lineNumber":392,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":393,"author":{"gitId":"fansxx"},"content":"- Expected output:","lastModifiedDate":"2021-10-14"},{"lineNumber":394,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":395,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-14"},{"lineNumber":396,"author":{"gitId":"fansxx"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":397,"author":{"gitId":"fansxx"},"content":"Success!","lastModifiedDate":"2021-10-14"},{"lineNumber":398,"author":{"gitId":"fansxx"},"content":"Sebastian\u0027s availability has been added to 08-11-2021 14:00","lastModifiedDate":"2021-11-05"},{"lineNumber":399,"author":{"gitId":"fansxx"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":400,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-14"},{"lineNumber":401,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":402,"author":{"gitId":"fansxx"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":403,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":404,"author":{"gitId":"fansxx"},"content":"### Viewing users available at different timings: `availability`","lastModifiedDate":"2021-10-28"},{"lineNumber":405,"author":{"gitId":"fansxx"},"content":"- To view all the availabilities after inputting [availabilities](#declaring-available-timing-for-meetings-available), cOOPer will generate a table for easier visualisation.","lastModifiedDate":"2021-10-28"},{"lineNumber":406,"author":{"gitId":"fansxx"},"content":"- How to view available timings:","lastModifiedDate":"2021-10-14"},{"lineNumber":407,"author":{"gitId":"fansxx"},"content":"  1. Enter `availability`.","lastModifiedDate":"2021-11-02"},{"lineNumber":408,"author":{"gitId":"fansxx"},"content":"  2. You will now see a table with the availabilities entered.","lastModifiedDate":"2021-10-28"},{"lineNumber":409,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":410,"author":{"gitId":"fansxx"},"content":"- Example input:","lastModifiedDate":"2021-10-15"},{"lineNumber":411,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":412,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-14"},{"lineNumber":413,"author":{"gitId":"fansxx"},"content":"\u003e\u003e availability","lastModifiedDate":"2021-10-28"},{"lineNumber":414,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-14"},{"lineNumber":415,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":416,"author":{"gitId":"fansxx"},"content":"- Expected output:","lastModifiedDate":"2021-10-14"},{"lineNumber":417,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":418,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-14"},{"lineNumber":419,"author":{"gitId":"fansxx"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":420,"author":{"gitId":"fansxx"},"content":"Here are the availabilities:","lastModifiedDate":"2021-10-28"},{"lineNumber":421,"author":{"gitId":"fansxx"},"content":"+------------+-------+-----------------------------------------------+","lastModifiedDate":"2021-11-05"},{"lineNumber":422,"author":{"gitId":"fansxx"},"content":"| date       | time  | names","lastModifiedDate":"2021-11-05"},{"lineNumber":423,"author":{"gitId":"fansxx"},"content":"+------------+-------+-----------------------------------------------+","lastModifiedDate":"2021-11-05"},{"lineNumber":424,"author":{"gitId":"fansxx"},"content":"| 08-11-2021 | 10:00 | Eugene","lastModifiedDate":"2021-11-05"},{"lineNumber":425,"author":{"gitId":"fansxx"},"content":"| 08-11-2021 | 14:00 | Sebastian","lastModifiedDate":"2021-11-05"},{"lineNumber":426,"author":{"gitId":"fansxx"},"content":"+------------+-------+-----------------------------------------------+","lastModifiedDate":"2021-11-05"},{"lineNumber":427,"author":{"gitId":"fansxx"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":428,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-14"},{"lineNumber":429,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":430,"author":{"gitId":"fansxx"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":431,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":432,"author":{"gitId":"fansxx"},"content":"### Viewing scheduled meetings: `meetings`","lastModifiedDate":"2021-10-27"},{"lineNumber":433,"author":{"gitId":"fansxx"},"content":"- Shows you your meetings (for the day) which have been scheduled successfully for easier visualisation. Refer to [this](#scheduling-meetings-with-different-users-schedule) section to know how meetings are scheduled.","lastModifiedDate":"2021-10-31"},{"lineNumber":434,"author":{"gitId":"fansxx"},"content":"- How to view meetings:","lastModifiedDate":"2021-10-28"},{"lineNumber":435,"author":{"gitId":"fansxx"},"content":"  1. After a meeting has been scheduled successfully, enter `meetings`.","lastModifiedDate":"2021-10-31"},{"lineNumber":436,"author":{"gitId":"fansxx"},"content":"  2. You will now see a table with all your meetings with date and time.","lastModifiedDate":"2021-11-05"},{"lineNumber":437,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":438,"author":{"gitId":"fansxx"},"content":"- Example input:","lastModifiedDate":"2021-10-15"},{"lineNumber":439,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":440,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":441,"author":{"gitId":"fansxx"},"content":"\u003e\u003e meetings","lastModifiedDate":"2021-10-14"},{"lineNumber":442,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":443,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":444,"author":{"gitId":"fansxx"},"content":"- Expected output:","lastModifiedDate":"2021-10-14"},{"lineNumber":445,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":446,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":447,"author":{"gitId":"fansxx"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":448,"author":{"gitId":"fansxx"},"content":"Here are your meetings for today:","lastModifiedDate":"2021-10-28"},{"lineNumber":449,"author":{"gitId":"fansxx"},"content":"+----------------------+------------+-------+------------------------+","lastModifiedDate":"2021-11-05"},{"lineNumber":450,"author":{"gitId":"fansxx"},"content":"| meeting              | date       | time  | attendees","lastModifiedDate":"2021-11-05"},{"lineNumber":451,"author":{"gitId":"fansxx"},"content":"+--------------------------------------------------------------------+","lastModifiedDate":"2021-11-05"},{"lineNumber":452,"author":{"gitId":"fansxx"},"content":"| \u003c\u003cProgress Meeting\u003e\u003e | 08-11-2021 | 10:00 | Eugene, Sebastian","lastModifiedDate":"2021-11-05"},{"lineNumber":453,"author":{"gitId":"fansxx"},"content":"+----------------------+------------+-------+------------------------+","lastModifiedDate":"2021-11-05"},{"lineNumber":454,"author":{"gitId":"fansxx"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":455,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":456,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":457,"author":{"gitId":"fansxx"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":458,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":459,"author":{"gitId":"theeugenechong"},"content":"\u003c!--@@author theeugenechong--\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":460,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":461,"author":{"gitId":"theeugenechong"},"content":"### Logging out: `logout`","lastModifiedDate":"2021-10-27"},{"lineNumber":462,"author":{"gitId":"theeugenechong"},"content":"- Logs you out of your account and brings you back to the part of the app where you can either [log in](#login), [register](#user-registration) or [exit](#exiting-the-program-exit).","lastModifiedDate":"2021-10-31"},{"lineNumber":463,"author":{"gitId":"theeugenechong"},"content":"- Example input:","lastModifiedDate":"2021-10-29"},{"lineNumber":464,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":465,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":466,"author":{"gitId":"theeugenechong"},"content":"\u003e\u003e logout","lastModifiedDate":"2021-10-29"},{"lineNumber":467,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":468,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":469,"author":{"gitId":"theeugenechong"},"content":"- Expected output:","lastModifiedDate":"2021-11-05"},{"lineNumber":470,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":471,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":472,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":473,"author":{"gitId":"theeugenechong"},"content":"You are now logged out!","lastModifiedDate":"2021-10-31"},{"lineNumber":474,"author":{"gitId":"theeugenechong"},"content":"To log in, enter \"login [yourUsername] /pw [password] /as [yourRole]\".","lastModifiedDate":"2021-11-05"},{"lineNumber":475,"author":{"gitId":"theeugenechong"},"content":"To register, enter \"register [yourUsername] /pw [password] /as [yourRole]\".","lastModifiedDate":"2021-11-05"},{"lineNumber":476,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":477,"author":{"gitId":"theeugenechong"},"content":"To exit, enter \"exit\".","lastModifiedDate":"2021-10-31"},{"lineNumber":478,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":479,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":480,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":481,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":482,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":483,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":484,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":485,"author":{"gitId":"theeugenechong"},"content":"## Admin Features ","lastModifiedDate":"2021-10-27"},{"lineNumber":486,"author":{"gitId":"theeugenechong"},"content":"This section explains cOOPer\u0027s features for specific to users, with the _**admin**_ role. Refer to the [Roles](#roles) section if you do not know how roles are determined. cOOPer will **deny** users without the admin role access to these features.","lastModifiedDate":"2021-10-29"},{"lineNumber":487,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":488,"author":{"gitId":"ChrisLangton"},"content":"\u003c!--@@author ChrisLangton--\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":489,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":490,"author":{"gitId":"ChrisLangton"},"content":"### Creating the balance sheet: `bs` → `add`","lastModifiedDate":"2021-10-29"},{"lineNumber":491,"author":{"gitId":"ChrisLangton"},"content":"- Fills up the different fields of cOOPer\u0027s balance sheet like \u0027Cash and Cash Equivalents\u0027, \u0027Inventory\u0027, \u0027Accounts Payable\u0027, \u0027Equity Capital\u0027, etc.","lastModifiedDate":"2021-10-29"},{"lineNumber":492,"author":{"gitId":"ChrisLangton"},"content":"- How to create the balance sheet:","lastModifiedDate":"2021-10-29"},{"lineNumber":493,"author":{"gitId":"ChrisLangton"},"content":"  1. Enter `bs`.","lastModifiedDate":"2021-11-02"},{"lineNumber":494,"author":{"gitId":"ChrisLangton"},"content":"  2. cOOPer initiates the balance sheet function and prompts you to enter the first entry, \u0027Cash and Cash Equivalents\u0027.","lastModifiedDate":"2021-10-29"},{"lineNumber":495,"author":{"gitId":"ChrisLangton"},"content":"  3. Enter `add [amount]` as an unsigned integer with no brackets.","lastModifiedDate":"2021-11-05"},{"lineNumber":496,"author":{"gitId":"ChrisLangton"},"content":"  4. `[amount]` will be added as \u0027Cash and Cash Equivalents\u0027 as an **asset**.","lastModifiedDate":"2021-11-05"},{"lineNumber":497,"author":{"gitId":"ChrisLangton"},"content":"  5. cOOPer then continues prompting you for the rest of the balance sheet fields. All assets should be added without brackets, and all liabilities should be added with brackets. Shareholder\u0027s Equity can be with or without brackets. To see which fields belong where, see [here](#accessing-the-balance-sheet-bs--list).","lastModifiedDate":"2021-11-05"},{"lineNumber":498,"author":{"gitId":"ChrisLangton"},"content":"  6. When the balance sheet is complete, cOOPer prompts the user to enter [`list`](#accessing-the-balance-sheet-bs--list) to view the complete balance sheet.","lastModifiedDate":"2021-10-29"},{"lineNumber":499,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":500,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ️ By default, cOOPer treats `[amount]` as a positive integer. To specify a negative integer, a pair of parentheses should be added around `[amount]`. For example, `add 5000` specifies an asset of $5000 while `add (5000)` specifies a liability of $5000.\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":501,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ️ `[amount]` should be an **unsigned integer** representing the amount of assets / liabilities added as the balance sheet field.\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":502,"author":{"gitId":"ChrisLangton"},"content":"\u003e 💡    Remember to enter `bs` before entering `add` or cOOPer will not know which financial statement to add to.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":503,"author":{"gitId":"ChrisLangton"},"content":"\u003e ⚠️Running `bs` and `add` after the balance sheet is complete will **overwrite** the current fields of the balance sheet one by one, creating a *new version* of the balance sheet. Hence, it is important to add the balance sheet fields to **completion**. \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":504,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ️ Any entries more than or equal to 1 Billion SGD (positive or negative) will not be added.","lastModifiedDate":"2021-11-05"},{"lineNumber":505,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":506,"author":{"gitId":"ChrisLangton"},"content":"- Example input for initiating the balance sheet function:","lastModifiedDate":"2021-10-29"},{"lineNumber":507,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":508,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":509,"author":{"gitId":"ChrisLangton"},"content":"\u003e\u003e bs","lastModifiedDate":"2021-10-29"},{"lineNumber":510,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":511,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":512,"author":{"gitId":"ChrisLangton"},"content":"- Expected output:","lastModifiedDate":"2021-11-05"},{"lineNumber":513,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":514,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":515,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":516,"author":{"gitId":"ChrisLangton"},"content":"You are now using the Balance Sheet function.","lastModifiedDate":"2021-10-29"},{"lineNumber":517,"author":{"gitId":"ChrisLangton"},"content":"You can enter \u0027list\u0027 to view the current Balance Sheet or","lastModifiedDate":"2021-10-29"},{"lineNumber":518,"author":{"gitId":"ChrisLangton"},"content":"start off by entering Cash \u0026 Cash Equivalents:","lastModifiedDate":"2021-10-29"},{"lineNumber":519,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":520,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":521,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":522,"author":{"gitId":"ChrisLangton"},"content":"- Example input for adding to \u0027Cash and Cash Equivalents\u0027:","lastModifiedDate":"2021-10-29"},{"lineNumber":523,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":524,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":525,"author":{"gitId":"ChrisLangton"},"content":"\u003e\u003e [Balance Sheet] add 1500","lastModifiedDate":"2021-11-05"},{"lineNumber":526,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":527,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":528,"author":{"gitId":"ChrisLangton"},"content":"- Expected output: ","lastModifiedDate":"2021-11-05"},{"lineNumber":529,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":530,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":531,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":532,"author":{"gitId":"ChrisLangton"},"content":"Success!","lastModifiedDate":"2021-10-29"},{"lineNumber":533,"author":{"gitId":"ChrisLangton"},"content":"+1500 has been added as Cash and Cash Equivalents","lastModifiedDate":"2021-10-29"},{"lineNumber":534,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":535,"author":{"gitId":"ChrisLangton"},"content":"Next, please enter Accounts Receivable","lastModifiedDate":"2021-10-29"},{"lineNumber":536,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":537,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":538,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":539,"author":{"gitId":"ChrisLangton"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":540,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":541,"author":{"gitId":"ChrisLangton"},"content":"### Creating the cash flow statement: `cf` → `add`","lastModifiedDate":"2021-10-29"},{"lineNumber":542,"author":{"gitId":"ChrisLangton"},"content":"- Fills up the different fields of cOOPer\u0027s cash flow statement like \u0027Net Income\u0027, \u0027Depreciation and Amortisation\u0027, \u0027Capital Expenditures\u0027, \u0027Dividends Paid\u0027, etc.","lastModifiedDate":"2021-10-29"},{"lineNumber":543,"author":{"gitId":"ChrisLangton"},"content":"- How to create the cash flow statement:","lastModifiedDate":"2021-10-29"},{"lineNumber":544,"author":{"gitId":"ChrisLangton"},"content":"  1. Enter `cf`.","lastModifiedDate":"2021-11-02"},{"lineNumber":545,"author":{"gitId":"ChrisLangton"},"content":"  2. cOOPer initiates the cash flow statement function and prompts you to enter the first entry, \u0027Net Income\u0027.","lastModifiedDate":"2021-10-29"},{"lineNumber":546,"author":{"gitId":"ChrisLangton"},"content":"  3. Enter `add [amount]`.","lastModifiedDate":"2021-10-29"},{"lineNumber":547,"author":{"gitId":"ChrisLangton"},"content":"  4. `[amount]` will be added as \u0027Net Income\u0027.","lastModifiedDate":"2021-10-29"},{"lineNumber":548,"author":{"gitId":"ChrisLangton"},"content":"  5. cOOPer then continues prompting you for the rest of the cash flow statement fields.","lastModifiedDate":"2021-10-29"},{"lineNumber":549,"author":{"gitId":"ChrisLangton"},"content":"  6. When the cash flow statement is complete, cOOPer prompts the user to enter [`list`](#accessing-the-cash-flow-statement-cf--list) to view the complete cash flow statement.","lastModifiedDate":"2021-10-29"},{"lineNumber":550,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":551,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ️ By default, cOOPer treats `[amount]` as a positive integer. To specify a negative integer, a pair of parentheses should be added around `[amount]`. For example, `add 5000` specifies an inflow of $5000 while `add (5000)` specifies an outflow of $5000.\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":552,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ️ `[amount]` should be a **positive integer** representing the amount of inflow / outflow added as the cash flow statement field.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":553,"author":{"gitId":"ChrisLangton"},"content":"\u003e 💡    Remember to enter `cf` before entering `add` or cOOPer will not know which financial statement to add to.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":554,"author":{"gitId":"ChrisLangton"},"content":"\u003e ⚠️Running `cf` and `add` after the cash flow statement is complete will **overwrite** the current fields of the cash flow statement one by one, creating a *new version* of the cash flow statement. Hence, it is important to add the cash flow statement fields to **completion**. \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":555,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ️ Any entries more than or equal to 1 Billion SGD (positive or negative) will not be added.","lastModifiedDate":"2021-11-05"},{"lineNumber":556,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":557,"author":{"gitId":"ChrisLangton"},"content":"- Example input for initiating the cash flow statement function:","lastModifiedDate":"2021-10-29"},{"lineNumber":558,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":559,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":560,"author":{"gitId":"ChrisLangton"},"content":"\u003e\u003e cf","lastModifiedDate":"2021-10-29"},{"lineNumber":561,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":562,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":563,"author":{"gitId":"ChrisLangton"},"content":"- Expected output:","lastModifiedDate":"2021-11-05"},{"lineNumber":564,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":565,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":566,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":567,"author":{"gitId":"ChrisLangton"},"content":"You are now using the Cash Flow function.","lastModifiedDate":"2021-10-29"},{"lineNumber":568,"author":{"gitId":"ChrisLangton"},"content":"You can enter \u0027list\u0027 to view the current Cash Flow Statement or","lastModifiedDate":"2021-10-29"},{"lineNumber":569,"author":{"gitId":"ChrisLangton"},"content":"start off by entering Net Income:","lastModifiedDate":"2021-10-29"},{"lineNumber":570,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":571,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":572,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":573,"author":{"gitId":"ChrisLangton"},"content":"- Example input for adding to \u0027Net Income\u0027:","lastModifiedDate":"2021-10-29"},{"lineNumber":574,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":575,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":576,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":577,"author":{"gitId":"ChrisLangton"},"content":"\u003e\u003e [Cash Flow] add 1500","lastModifiedDate":"2021-11-05"},{"lineNumber":578,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":579,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":580,"author":{"gitId":"ChrisLangton"},"content":"- Expected output:","lastModifiedDate":"2021-11-05"},{"lineNumber":581,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":582,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":583,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":584,"author":{"gitId":"ChrisLangton"},"content":"Success!","lastModifiedDate":"2021-10-15"},{"lineNumber":585,"author":{"gitId":"ChrisLangton"},"content":"+1500 has been added as Net Income","lastModifiedDate":"2021-10-29"},{"lineNumber":586,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":587,"author":{"gitId":"ChrisLangton"},"content":"Next, please enter Depreciation and Amortisation","lastModifiedDate":"2021-10-29"},{"lineNumber":588,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":589,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":590,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":591,"author":{"gitId":"ChrisLangton"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":592,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":593,"author":{"gitId":"ChrisLangton"},"content":"### Accessing the balance sheet: `bs` → `list`","lastModifiedDate":"2021-10-29"},{"lineNumber":594,"author":{"gitId":"ChrisLangton"},"content":"- Displays the complete balance sheet with extra fields like \u0027Total Assets\u0027, \u0027Total Liabilities\u0027 and \u0027Total Shareholder\u0027s Equity\u0027.","lastModifiedDate":"2021-10-29"},{"lineNumber":595,"author":{"gitId":"ChrisLangton"},"content":"- Informs you if the balance sheet does not tally correctly.","lastModifiedDate":"2021-10-29"},{"lineNumber":596,"author":{"gitId":"ChrisLangton"},"content":"- How to view the balance sheet:","lastModifiedDate":"2021-10-29"},{"lineNumber":597,"author":{"gitId":"ChrisLangton"},"content":"  1. After [creating the balance sheet](#creating-the-balance-sheet-bs--add), cOOPer would have prompted you to enter `list` to view the balance sheet.","lastModifiedDate":"2021-10-29"},{"lineNumber":598,"author":{"gitId":"ChrisLangton"},"content":"  2. Enter `list`.","lastModifiedDate":"2021-10-29"},{"lineNumber":599,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":600,"author":{"gitId":"ChrisLangton"},"content":"\u003e 💡 Remember to fill up the fields of the balance sheet with `add` before entering `list`.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":601,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ️`list` displays the *latest version* of the balance sheet. Refer to [this](#creating-the-balance-sheet-bs--add) section to know what *latest version* means.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":602,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ️Entering `list` while the balance sheet is incomplete will display the latest values for the fields already filled along with the old values for unfilled fields.\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":603,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ️The check can only inform you if the statement does or does not tally, and not which entry is incorrect as that comes down to human error.\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":604,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ️ Any scalar values more than or equal to 1 Billion SGD (positive or negative) will be displayed as such, and not as their exact values.","lastModifiedDate":"2021-11-05"},{"lineNumber":605,"author":{"gitId":"ChrisLangton"},"content":"- Example input:","lastModifiedDate":"2021-10-15"},{"lineNumber":606,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":607,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":608,"author":{"gitId":"ChrisLangton"},"content":"\u003e\u003e [Balance Sheet] list","lastModifiedDate":"2021-11-05"},{"lineNumber":609,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":610,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":611,"author":{"gitId":"ChrisLangton"},"content":"- Expected output:","lastModifiedDate":"2021-11-05"},{"lineNumber":612,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":613,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":614,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":615,"author":{"gitId":"ChrisLangton"},"content":"This is the company\u0027s current Balance Sheet:","lastModifiedDate":"2021-10-15"},{"lineNumber":616,"author":{"gitId":"ChrisLangton"},"content":"-----ASSETS-----","lastModifiedDate":"2021-10-29"},{"lineNumber":617,"author":{"gitId":"ChrisLangton"},"content":"Cash and Cash Equivalents  1500","lastModifiedDate":"2021-10-29"},{"lineNumber":618,"author":{"gitId":"ChrisLangton"},"content":"Accounts Receivable  1500","lastModifiedDate":"2021-10-29"},{"lineNumber":619,"author":{"gitId":"ChrisLangton"},"content":"Prepaid Expenses  1500","lastModifiedDate":"2021-10-29"},{"lineNumber":620,"author":{"gitId":"ChrisLangton"},"content":"Inventory  1500","lastModifiedDate":"2021-10-29"},{"lineNumber":621,"author":{"gitId":"ChrisLangton"},"content":"Property and Equipment  1500","lastModifiedDate":"2021-10-29"},{"lineNumber":622,"author":{"gitId":"ChrisLangton"},"content":"Goodwill  1500","lastModifiedDate":"2021-10-29"},{"lineNumber":623,"author":{"gitId":"ChrisLangton"},"content":"Total Assets: 9000","lastModifiedDate":"2021-10-29"},{"lineNumber":624,"author":{"gitId":"ChrisLangton"},"content":"-----LIABILITIES-----","lastModifiedDate":"2021-10-29"},{"lineNumber":625,"author":{"gitId":"ChrisLangton"},"content":"Accounts Payable  1500","lastModifiedDate":"2021-10-29"},{"lineNumber":626,"author":{"gitId":"ChrisLangton"},"content":"Accrued Expenses  1500","lastModifiedDate":"2021-10-29"},{"lineNumber":627,"author":{"gitId":"ChrisLangton"},"content":"Unearned Revenue  1500","lastModifiedDate":"2021-10-29"},{"lineNumber":628,"author":{"gitId":"ChrisLangton"},"content":"Long-term debt  1500","lastModifiedDate":"2021-10-29"},{"lineNumber":629,"author":{"gitId":"ChrisLangton"},"content":"Total Liabilities: 6000","lastModifiedDate":"2021-10-29"},{"lineNumber":630,"author":{"gitId":"ChrisLangton"},"content":"-----SHAREHOLDER\u0027S EQUITY-----","lastModifiedDate":"2021-10-29"},{"lineNumber":631,"author":{"gitId":"ChrisLangton"},"content":"Equity Capital  1500","lastModifiedDate":"2021-10-29"},{"lineNumber":632,"author":{"gitId":"ChrisLangton"},"content":"Retained Earnings  1500","lastModifiedDate":"2021-10-29"},{"lineNumber":633,"author":{"gitId":"ChrisLangton"},"content":"Total Shareholder\u0027s Equity: 3000","lastModifiedDate":"2021-10-29"},{"lineNumber":634,"author":{"gitId":"ChrisLangton"},"content":"Balance Sheet is perfectly balanced, as all things should be.","lastModifiedDate":"2021-10-29"},{"lineNumber":635,"author":{"gitId":"ChrisLangton"},"content":"Check: 0","lastModifiedDate":"2021-10-29"},{"lineNumber":636,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":637,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":638,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":639,"author":{"gitId":"ChrisLangton"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":640,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":641,"author":{"gitId":"ChrisLangton"},"content":"### Accessing the cash flow statement: `cf` → `list`","lastModifiedDate":"2021-10-29"},{"lineNumber":642,"author":{"gitId":"ChrisLangton"},"content":"- Displays the complete cash flow statement with extra fields like \u0027Net Cash from Operating Activities\u0027, Net Cash from Investing Activities\u0027 and \u0027Net Financing Activities\u0027.","lastModifiedDate":"2021-10-29"},{"lineNumber":643,"author":{"gitId":"ChrisLangton"},"content":"- How to view the cash flow statement:","lastModifiedDate":"2021-10-29"},{"lineNumber":644,"author":{"gitId":"ChrisLangton"},"content":"  1. After [creating the cash flow statement](#creating-the-cash-flow-statement-cf--add), cOOPer would have prompted you to enter `list` to view the balance sheet.","lastModifiedDate":"2021-10-29"},{"lineNumber":645,"author":{"gitId":"ChrisLangton"},"content":"  2. Enter `list`.","lastModifiedDate":"2021-10-29"},{"lineNumber":646,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":647,"author":{"gitId":"ChrisLangton"},"content":"\u003e 💡 Remember to fill up the fields of the cash flow statement with `add` before entering `list`.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":648,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ️`list` displays the *latest version* of the cash flow statement. Refer to [this](#creating-the-cash-flow-statement-cf--add) section to know what *latest version* means.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":649,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ️Entering `list` while the cash flow statement is incomplete will display the latest values for the fields already filled along with the old values for unfilled fields. \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":650,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ ️Any scalar values more than or equal to 1 Billion SGD (positive or negative) will be displayed as such, and not as their exact values.","lastModifiedDate":"2021-11-05"},{"lineNumber":651,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":652,"author":{"gitId":"ChrisLangton"},"content":"- Example input:","lastModifiedDate":"2021-10-29"},{"lineNumber":653,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":654,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":655,"author":{"gitId":"ChrisLangton"},"content":"\u003e\u003e [Cash Flow] list","lastModifiedDate":"2021-11-05"},{"lineNumber":656,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":657,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":658,"author":{"gitId":"ChrisLangton"},"content":"- Expected output:","lastModifiedDate":"2021-11-05"},{"lineNumber":659,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":660,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":661,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":662,"author":{"gitId":"ChrisLangton"},"content":"This is the company\u0027s current Cash Flow Statement:","lastModifiedDate":"2021-10-29"},{"lineNumber":663,"author":{"gitId":"ChrisLangton"},"content":"-----CASH FLOW FROM OPERATING ACTIVITIES-----","lastModifiedDate":"2021-10-29"},{"lineNumber":664,"author":{"gitId":"ChrisLangton"},"content":"Net Income  1000","lastModifiedDate":"2021-10-29"},{"lineNumber":665,"author":{"gitId":"ChrisLangton"},"content":"Depreciation and Amortisation  900","lastModifiedDate":"2021-10-29"},{"lineNumber":666,"author":{"gitId":"ChrisLangton"},"content":"Increase in Accounts Receivable  800","lastModifiedDate":"2021-10-29"},{"lineNumber":667,"author":{"gitId":"ChrisLangton"},"content":"Decrease in Accounts Payable  700","lastModifiedDate":"2021-10-29"},{"lineNumber":668,"author":{"gitId":"ChrisLangton"},"content":"Decrease in Inventory  600","lastModifiedDate":"2021-10-29"},{"lineNumber":669,"author":{"gitId":"ChrisLangton"},"content":"Net Cash from Operating Activities:  4000","lastModifiedDate":"2021-10-29"},{"lineNumber":670,"author":{"gitId":"ChrisLangton"},"content":"-----CASH FLOW FROM INVESTING ACTIVITIES-----","lastModifiedDate":"2021-10-29"},{"lineNumber":671,"author":{"gitId":"ChrisLangton"},"content":"Capital Expenditures  500","lastModifiedDate":"2021-10-29"},{"lineNumber":672,"author":{"gitId":"ChrisLangton"},"content":"Proceeds from Sale of Equipment  400","lastModifiedDate":"2021-10-29"},{"lineNumber":673,"author":{"gitId":"ChrisLangton"},"content":"Net Cash from Investing Activities:  900","lastModifiedDate":"2021-10-29"},{"lineNumber":674,"author":{"gitId":"ChrisLangton"},"content":"-----CASH FLOW FROM FINANCING ACTIVITIES-----","lastModifiedDate":"2021-10-29"},{"lineNumber":675,"author":{"gitId":"ChrisLangton"},"content":"Proceeds from Issuing Debt  300","lastModifiedDate":"2021-10-29"},{"lineNumber":676,"author":{"gitId":"ChrisLangton"},"content":"Dividends Paid  200","lastModifiedDate":"2021-10-29"},{"lineNumber":677,"author":{"gitId":"ChrisLangton"},"content":"Net Cash from Financing Activities:  500","lastModifiedDate":"2021-10-29"},{"lineNumber":678,"author":{"gitId":"ChrisLangton"},"content":"-----FREE CASH FLOW-----","lastModifiedDate":"2021-10-29"},{"lineNumber":679,"author":{"gitId":"ChrisLangton"},"content":"Free Cash Flow   3000","lastModifiedDate":"2021-10-29"},{"lineNumber":680,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":681,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":682,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":683,"author":{"gitId":"ChrisLangton"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":684,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":685,"author":{"gitId":"ChrisLangton"},"content":"### Projecting cash flow: `proj`","lastModifiedDate":"2021-10-29"},{"lineNumber":686,"author":{"gitId":"ChrisLangton"},"content":"- Generate projections on your company\u0027s \u0027Free Cash Flow\u0027 (FCF).","lastModifiedDate":"2021-10-29"},{"lineNumber":687,"author":{"gitId":"ChrisLangton"},"content":"- How to generate a projection:","lastModifiedDate":"2021-10-29"},{"lineNumber":688,"author":{"gitId":"ChrisLangton"},"content":"  1. [Fill up the cash flow statement](#creating-the-cash-flow-statement-cf--add) with last year\u0027s FCF.","lastModifiedDate":"2021-10-29"},{"lineNumber":689,"author":{"gitId":"ChrisLangton"},"content":"  2. Enter `proj [years]` to project your company\u0027s FCF marginal growth Year-Over-Year (YoY) by the number of `[years]` specified. ","lastModifiedDate":"2021-10-29"},{"lineNumber":690,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":691,"author":{"gitId":"ChrisLangton"},"content":"\u003e ℹ️FCF is the last field of the cash flow statement.","lastModifiedDate":"2021-10-29"},{"lineNumber":692,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":693,"author":{"gitId":"ChrisLangton"},"content":"- Example input based on a FCF of 3000:","lastModifiedDate":"2021-10-29"},{"lineNumber":694,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":695,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":696,"author":{"gitId":"ChrisLangton"},"content":"\u003e\u003e proj 3","lastModifiedDate":"2021-10-29"},{"lineNumber":697,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":698,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":699,"author":{"gitId":"ChrisLangton"},"content":"- Expected output:","lastModifiedDate":"2021-11-05"},{"lineNumber":700,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":701,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":702,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":703,"author":{"gitId":"ChrisLangton"},"content":"At your current rate of profitability growth in Free Cash Flow, these are future year\u0027s projections:","lastModifiedDate":"2021-10-29"},{"lineNumber":704,"author":{"gitId":"ChrisLangton"},"content":"1 year: 5557","lastModifiedDate":"2021-10-29"},{"lineNumber":705,"author":{"gitId":"ChrisLangton"},"content":"2 year: 7564","lastModifiedDate":"2021-10-29"},{"lineNumber":706,"author":{"gitId":"ChrisLangton"},"content":"3 year: 8825","lastModifiedDate":"2021-10-29"},{"lineNumber":707,"author":{"gitId":"ChrisLangton"},"content":"After 3 years you can expect Free Cash Flow of 8825","lastModifiedDate":"2021-10-29"},{"lineNumber":708,"author":{"gitId":"ChrisLangton"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":709,"author":{"gitId":"ChrisLangton"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":710,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":711,"author":{"gitId":"ChrisLangton"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":712,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":713,"author":{"gitId":"theeugenechong"},"content":"\u003c!--@@author theeugenechong--\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":714,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":715,"author":{"gitId":"theeugenechong"},"content":"### Generating a PDF from the financial statement : `generate`","lastModifiedDate":"2021-10-28"},{"lineNumber":716,"author":{"gitId":"theeugenechong"},"content":"- Creates a Portable Document Format (PDF) file from the *latest version* of the financial statement specified (balance sheet or cash flow statement).","lastModifiedDate":"2021-11-01"},{"lineNumber":717,"author":{"gitId":"theeugenechong"},"content":"- How to generate the PDF file:","lastModifiedDate":"2021-10-28"},{"lineNumber":718,"author":{"gitId":"theeugenechong"},"content":"  1. Enter `generate [financialStatement]` where `[financialStatement]` is one of `bs` or `cf`.","lastModifiedDate":"2021-10-28"},{"lineNumber":719,"author":{"gitId":"theeugenechong"},"content":"  2. If **successful**, the PDF file is created in a folder named \u0027output\u0027 in the _home folder_ with the name of the financial statement you generated. For example, `generate cf` will create a PDF named \u0027CashFlowStatement\u0027.","lastModifiedDate":"2021-10-29"},{"lineNumber":720,"author":{"gitId":"theeugenechong"},"content":"  ","lastModifiedDate":"2021-10-27"},{"lineNumber":721,"author":{"gitId":"theeugenechong"},"content":"- Example input for successful generation of the cash flow statement PDF:","lastModifiedDate":"2021-11-01"},{"lineNumber":722,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":723,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":724,"author":{"gitId":"theeugenechong"},"content":"\u003e\u003e generate cf","lastModifiedDate":"2021-10-28"},{"lineNumber":725,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":726,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":727,"author":{"gitId":"theeugenechong"},"content":"- Expected output:","lastModifiedDate":"2021-10-28"},{"lineNumber":728,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":729,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":730,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":731,"author":{"gitId":"theeugenechong"},"content":"The pdf file has been successfully generated!","lastModifiedDate":"2021-10-28"},{"lineNumber":732,"author":{"gitId":"theeugenechong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":733,"author":{"gitId":"theeugenechong"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":734,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":735,"author":{"gitId":"theeugenechong"},"content":"- The diagram below shows where you can find the generated PDF file.","lastModifiedDate":"2021-10-28"},{"lineNumber":736,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":737,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":738,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg width\u003d\"500\" src\u003d\"userGuideImages/generateCfOutput.png\" alt\u003d\"CfOutputPdf\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":739,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e ","lastModifiedDate":"2021-10-29"},{"lineNumber":740,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":741,"author":{"gitId":"theeugenechong"},"content":"\u003e ℹ️You **do not** need to be currently using the balance sheet function or the cash flow statement function in order to use this command. \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":742,"author":{"gitId":"theeugenechong"},"content":"\u003e 💡   Always [**fill up** the balance sheet](#creating-the-balance-sheet-bs--add) / [cash flow statement](#creating-the-cash-flow-statement-cf--add) first before generating it as a PDF.\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":743,"author":{"gitId":"theeugenechong"},"content":"\u003e ℹ️As of v2.1, `generate` is only able to create **one** document for a financial statement. Entering `generate` more than one time overwrites the current PDF with the latest version of the financial statement.","lastModifiedDate":"2021-11-06"},{"lineNumber":744,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":745,"author":{"gitId":"theeugenechong"},"content":"\u003e ⚠️ **Important:** \u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":746,"author":{"gitId":"theeugenechong"},"content":"\u003e- The creation of the PDF requires an **active internet connection**. ","lastModifiedDate":"2021-11-06"},{"lineNumber":747,"author":{"gitId":"theeugenechong"},"content":"\u003e- In the event that there is no internet connection, a backup \u0027.txt\u0027 file will be created in the same \u0027output\u0027 folder in which the PDF was supposed to be created.","lastModifiedDate":"2021-10-29"},{"lineNumber":748,"author":{"gitId":"theeugenechong"},"content":"\u003e- The contents of the backup \u0027.txt\u0027 file created can be used to recreate the PDF file with the use of an [online LaTeX Editor](https://www.overleaf.com/). \u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":749,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":750,"author":{"gitId":"theeugenechong"},"content":"\u003e 💡 **Always** ensure that you have an active internet connection before using the `generate` command. ","lastModifiedDate":"2021-11-06"},{"lineNumber":751,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":752,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":753,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":754,"author":{"gitId":"fansxx"},"content":"\u003c!--@@author fansxx--\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":755,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":756,"author":{"gitId":"fansxx"},"content":"### Scheduling meetings with different users: `schedule`","lastModifiedDate":"2021-10-28"},{"lineNumber":757,"author":{"gitId":"fansxx"},"content":"- cOOPer helps you to schedule meetings easily by either an **auto** or **manual** way. ","lastModifiedDate":"2021-10-28"},{"lineNumber":758,"author":{"gitId":"fansxx"},"content":"- **Auto** schedule meeting means cOOPer picks the earliest timing all specified users and yourself are available at and schedule a meeting then. ","lastModifiedDate":"2021-11-05"},{"lineNumber":759,"author":{"gitId":"fansxx"},"content":"- How to **auto** schedule a meeting:","lastModifiedDate":"2021-10-28"},{"lineNumber":760,"author":{"gitId":"fansxx"},"content":"  1. Enter `schedule [meetingName] /with [username1], [username2]`.","lastModifiedDate":"2021-11-02"},{"lineNumber":761,"author":{"gitId":"fansxx"},"content":"  2. cOOPer will find the **earliest timing** when all specified users are available.","lastModifiedDate":"2021-10-28"},{"lineNumber":762,"author":{"gitId":"fansxx"},"content":"  3. If successful, cOOPer will create a new meeting at that time. Otherwise, cOOPer will inform you that no meeting can be scheduled with the specified users.","lastModifiedDate":"2021-10-28"},{"lineNumber":763,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":764,"author":{"gitId":"fansxx"},"content":"- **Manual** schedule meeting means cOOPer goes to the timing you specified and checks if all specified users and yourself are available then, and schedules a meeting then.","lastModifiedDate":"2021-11-05"},{"lineNumber":765,"author":{"gitId":"fansxx"},"content":"- How to **manually** schedule a meeting:","lastModifiedDate":"2021-10-29"},{"lineNumber":766,"author":{"gitId":"fansxx"},"content":"  1. Enter `schedule [meetingName] /with [username1], [username2] /at [date] [time]`.","lastModifiedDate":"2021-11-05"},{"lineNumber":767,"author":{"gitId":"fansxx"},"content":"  2. cOOPer will check if the users are all available at the time specified.","lastModifiedDate":"2021-10-28"},{"lineNumber":768,"author":{"gitId":"fansxx"},"content":"  3. If successful, cOOPer will create a new meeting at that time. Otherwise, cOOPer will inform you that no meeting can be scheduled with all the users at that specified time.","lastModifiedDate":"2021-10-28"},{"lineNumber":769,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":770,"author":{"gitId":"fansxx"},"content":"\u003e ℹ️You do not have to enter your own `[username]` as cOOPer assumes you are in the meeting that you want to schedule. \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":771,"author":{"gitId":"fansxx"},"content":"\u003e ℹ️There is no limit to the number of `[username]`s you can enter. cOOPer supports scheduling a meeting with a large number of users. However, a large number of users may **slow** cOOPer down.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":772,"author":{"gitId":"fansxx"},"content":"\u003e 💡   Before you do a manual schedule, you may want to check the [`availability`](#viewing-users-available-at-different-timings-availability) table for better success rates.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":773,"author":{"gitId":"fansxx"},"content":"\u003e ⚠️`[time]` has a format of **HH:mm**, in *24-hour clock*, similar to the format [`available`](#declaring-available-timing-for-meetings-available) uses. Any other format will **not** be accepted and may result in incorrect behaviour.","lastModifiedDate":"2021-10-28"},{"lineNumber":774,"author":{"gitId":"fansxx"},"content":"\u003e ⚠️`[date]` has a format of **dd-MM-yyyy**, similar to the format [`available`](#declaring-available-timing-for-meetings-available) uses. Any other format will **not** be accepted and will result in incorrect behaviour.","lastModifiedDate":"2021-11-06"},{"lineNumber":775,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":776,"author":{"gitId":"fansxx"},"content":"- Example input for **auto** schedule meeting:","lastModifiedDate":"2021-10-28"},{"lineNumber":777,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":778,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":779,"author":{"gitId":"fansxx"},"content":"\u003e\u003e schedule Progress Meeting /with Eugene","lastModifiedDate":"2021-11-05"},{"lineNumber":780,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":781,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":782,"author":{"gitId":"fansxx"},"content":"- Expected output for **auto** schedule meeting:","lastModifiedDate":"2021-10-28"},{"lineNumber":783,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":784,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":785,"author":{"gitId":"fansxx"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":786,"author":{"gitId":"fansxx"},"content":"Success!","lastModifiedDate":"2021-10-28"},{"lineNumber":787,"author":{"gitId":"fansxx"},"content":"You have scheduled a \u003c\u003cProgress Meeting\u003e\u003e meeting at 08-11-2021 10:00 with attendees: Eugene, Sebastian","lastModifiedDate":"2021-11-05"},{"lineNumber":788,"author":{"gitId":"fansxx"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":789,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":790,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":791,"author":{"gitId":"fansxx"},"content":"- Example input for **manual** schedule meeting:","lastModifiedDate":"2021-11-05"},{"lineNumber":792,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":793,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":794,"author":{"gitId":"fansxx"},"content":"\u003e\u003e schedule Progress Meeting /with Eugene /at 08-11-2021 14:00","lastModifiedDate":"2021-11-05"},{"lineNumber":795,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":796,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":797,"author":{"gitId":"fansxx"},"content":"- Expected output for **manual** schedule meeting:","lastModifiedDate":"2021-11-05"},{"lineNumber":798,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":799,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":800,"author":{"gitId":"fansxx"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":801,"author":{"gitId":"fansxx"},"content":"Success!","lastModifiedDate":"2021-11-05"},{"lineNumber":802,"author":{"gitId":"fansxx"},"content":"You have scheduled a \u003c\u003cProject Meeting\u003e\u003e meeting at 08-11-2021 14:00 with attendees: Eugene, Sebastian","lastModifiedDate":"2021-11-05"},{"lineNumber":803,"author":{"gitId":"fansxx"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":804,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":805,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":806,"author":{"gitId":"fansxx"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":807,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":808,"author":{"gitId":"fansxx"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":809,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":810,"author":{"gitId":"fansxx"},"content":"## Employee Features","lastModifiedDate":"2021-10-27"},{"lineNumber":811,"author":{"gitId":"fansxx"},"content":"- As of v2.1, cOOPer does not have features exclusive to employees yet 😥, there will be more to come in future versions!","lastModifiedDate":"2021-11-02"},{"lineNumber":812,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":813,"author":{"gitId":"fansxx"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":814,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":815,"author":{"gitId":"fansxx"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":816,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":817,"author":{"gitId":"fansxx"},"content":"## Viewing help: `help`","lastModifiedDate":"2021-11-01"},{"lineNumber":818,"author":{"gitId":"fansxx"},"content":"Shows you a list of commands **specific to your role**, along with their formats. Refer to the [Roles](#roles) section if you do not know how roles are determined.","lastModifiedDate":"2021-11-01"},{"lineNumber":819,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":820,"author":{"gitId":"fansxx"},"content":"\u003e ℹ️The `help` command can only be used once you have logged in to cOOPer.\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":821,"author":{"gitId":"fansxx"},"content":"\u003e ℹ️The output will be similar to [Command Summary](#command-summary), only without the examples.","lastModifiedDate":"2021-11-01"},{"lineNumber":822,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":823,"author":{"gitId":"fansxx"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-11-01"},{"lineNumber":824,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":825,"author":{"gitId":"fansxx"},"content":"## Exiting the program: `exit`","lastModifiedDate":"2021-10-28"},{"lineNumber":826,"author":{"gitId":"fansxx"},"content":"Exits the program.","lastModifiedDate":"2021-10-13"},{"lineNumber":827,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":828,"author":{"gitId":"fansxx"},"content":"- Example input:","lastModifiedDate":"2021-10-13"},{"lineNumber":829,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":830,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":831,"author":{"gitId":"fansxx"},"content":"\u003e\u003e exit","lastModifiedDate":"2021-10-13"},{"lineNumber":832,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":833,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":834,"author":{"gitId":"fansxx"},"content":"- Expected output:","lastModifiedDate":"2021-10-13"},{"lineNumber":835,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":836,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":837,"author":{"gitId":"fansxx"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":838,"author":{"gitId":"fansxx"},"content":"Bye, see you next time!","lastModifiedDate":"2021-10-30"},{"lineNumber":839,"author":{"gitId":"fansxx"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":840,"author":{"gitId":"fansxx"},"content":"```","lastModifiedDate":"2021-10-13"},{"lineNumber":841,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":842,"author":{"gitId":"fansxx"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":843,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":844,"author":{"gitId":"fansxx"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":845,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":846,"author":{"gitId":"theeugenechong"},"content":"\u003c!--@@author theeugenechong--\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":847,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":848,"author":{"gitId":"theeugenechong"},"content":"### cOOPer\u0027s Data Storage","lastModifiedDate":"2021-10-29"},{"lineNumber":849,"author":{"gitId":"theeugenechong"},"content":"This section explains how cOOPer stores the data input by the user throughout cOOPer\u0027s usage. cOOPer\u0027s data is stored on your hard disk in a folder named \u0027cooperData\u0027.","lastModifiedDate":"2021-10-31"},{"lineNumber":850,"author":{"gitId":"theeugenechong"},"content":"This folder is created in the *home folder* upon starting up cOOPer for the first time.","lastModifiedDate":"2021-10-31"},{"lineNumber":851,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":852,"author":{"gitId":"theeugenechong"},"content":"The contents of the folder is as shown in the diagram below.","lastModifiedDate":"2021-10-29"},{"lineNumber":853,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":854,"author":{"gitId":"theeugenechong"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":855,"author":{"gitId":"theeugenechong"},"content":"    \u003cimg width\u003d\"500\" src\u003d\"userGuideImages/cooperStorage.png\" alt\u003d\"cooperStorage\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":856,"author":{"gitId":"theeugenechong"},"content":"\u003c/p\u003e ","lastModifiedDate":"2021-10-29"},{"lineNumber":857,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":858,"author":{"gitId":"theeugenechong"},"content":"\u003e⚠️The content of these storage files are in a specific format comprehensible by cOOPer. **Do not** edit the content of these files.","lastModifiedDate":"2021-11-02"},{"lineNumber":859,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":860,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":861,"author":{"gitId":"theeugenechong"},"content":"#### availability.txt","lastModifiedDate":"2021-10-29"},{"lineNumber":862,"author":{"gitId":"theeugenechong"},"content":"- What it stores: The different timings and the users associated with each timing. ","lastModifiedDate":"2021-10-29"},{"lineNumber":863,"author":{"gitId":"theeugenechong"},"content":"- When is the data stored: Immediately after you enter the [`available`](#declaring-available-timing-for-meetings-available) command.","lastModifiedDate":"2021-11-04"},{"lineNumber":864,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":865,"author":{"gitId":"theeugenechong"},"content":"#### balanceSheet.txt","lastModifiedDate":"2021-10-29"},{"lineNumber":866,"author":{"gitId":"theeugenechong"},"content":"- What it stores: The fields of the balance sheet.","lastModifiedDate":"2021-11-02"},{"lineNumber":867,"author":{"gitId":"theeugenechong"},"content":"- When is the data stored: Each individual field is updated immediately after you enter the [`add`](#creating-the-balance-sheet-bs--add) command.","lastModifiedDate":"2021-11-04"},{"lineNumber":868,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":869,"author":{"gitId":"theeugenechong"},"content":"#### cashFlowStatement.txt","lastModifiedDate":"2021-10-29"},{"lineNumber":870,"author":{"gitId":"theeugenechong"},"content":"- What it stores: The fields of the cash flow statement.","lastModifiedDate":"2021-11-02"},{"lineNumber":871,"author":{"gitId":"theeugenechong"},"content":"- When is the data stored: Each individual field is updated immediately after you enter the [`add`](#creating-the-cash-flow-statement-cf--add) command.","lastModifiedDate":"2021-11-04"},{"lineNumber":872,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":873,"author":{"gitId":"theeugenechong"},"content":"#### forum.txt","lastModifiedDate":"2021-10-29"},{"lineNumber":874,"author":{"gitId":"theeugenechong"},"content":"- What it stores: The posts created in the forum along with its comments.","lastModifiedDate":"2021-10-29"},{"lineNumber":875,"author":{"gitId":"theeugenechong"},"content":"- When is the data stored: Immediately after a new forum [post](#adding-a-forum-post-post-add) / [comment](#commenting-on-a-forum-post-post-comment) is created or when a post is [deleted](#deleting-a-forum-post-post-delete).","lastModifiedDate":"2021-10-29"},{"lineNumber":876,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":877,"author":{"gitId":"theeugenechong"},"content":"#### meetings.txt","lastModifiedDate":"2021-10-29"},{"lineNumber":878,"author":{"gitId":"theeugenechong"},"content":"- What it stores: The meetings which have been successfully scheduled, the meeting time and the users associated with the meeting.","lastModifiedDate":"2021-10-29"},{"lineNumber":879,"author":{"gitId":"theeugenechong"},"content":"- When is the data stored: Immediately after a meeting has been successfully scheduled using the [`schedule`](#scheduling-meetings-with-different-users-schedule) command.","lastModifiedDate":"2021-10-29"},{"lineNumber":880,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":881,"author":{"gitId":"theeugenechong"},"content":"#### signInDetails.txt","lastModifiedDate":"2021-10-29"},{"lineNumber":882,"author":{"gitId":"theeugenechong"},"content":"- What it stores: The username, an encrypted hash of the user\u0027s password, the salt used to generate the password hash, and the user\u0027s role.","lastModifiedDate":"2021-10-29"},{"lineNumber":883,"author":{"gitId":"theeugenechong"},"content":"- When is the data stored: Immediately after you [register](#user-registration) as a user of cOOPer.","lastModifiedDate":"2021-11-04"},{"lineNumber":884,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":885,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":886,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":887,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":888,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":889,"author":{"gitId":"theeugenechong"},"content":"## FAQ","lastModifiedDate":"2021-10-27"},{"lineNumber":890,"author":{"gitId":"theeugenechong"},"content":"This section contains some frequently asked questions you may have when using cOOPer.","lastModifiedDate":"2021-10-28"},{"lineNumber":891,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":892,"author":{"gitId":"theeugenechong"},"content":"**Q**: Do I need any programming knowledge to use cOOPer?\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":893,"author":{"gitId":"theeugenechong"},"content":"\u003e No, you do not. As long as the commands you enter follow the format specified by cOOPer, you will be able to use cOOPer\u0027s features with ease! You can refer to [this](#command-summary) section to know the formats of each command.","lastModifiedDate":"2021-11-05"},{"lineNumber":894,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":895,"author":{"gitId":"theeugenechong"},"content":"**Q**: How do I know which commands to enter when using cOOPer?\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":896,"author":{"gitId":"theeugenechong"},"content":"\u003e After you have successfully [logged in](#login) to cOOPer, you can either enter `help` or refer to [this](#command-summary) section to know the commands recognised by cOOPer.","lastModifiedDate":"2021-11-05"},{"lineNumber":897,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":898,"author":{"gitId":"theeugenechong"},"content":"**Q**: How do I transfer cOOPer\u0027s data from the current desktop to another desktop?\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":899,"author":{"gitId":"theeugenechong"},"content":"\u003e Follow the steps below:\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":900,"author":{"gitId":"theeugenechong"},"content":"\u003e 1. [Download](https://github.com/AY2122S1-CS2113T-W13-4/tp/releases) cOOPer in the other computer. ","lastModifiedDate":"2021-10-29"},{"lineNumber":901,"author":{"gitId":"theeugenechong"},"content":"\u003e 2. In the current desktop, you should see a folder named `cooperData` in cOOPer\u0027s home folder. Refer to [Setup](#setup) if you do not know what the *home folder* is.","lastModifiedDate":"2021-10-31"},{"lineNumber":902,"author":{"gitId":"theeugenechong"},"content":"\u003e 3. Copy `cooperData` over to cOOPer\u0027s home folder in the other desktop. ","lastModifiedDate":"2021-10-29"},{"lineNumber":903,"author":{"gitId":"theeugenechong"},"content":"\u003e 4. Running cOOPer on the other desktop should load your saved data.","lastModifiedDate":"2021-10-29"},{"lineNumber":904,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":905,"author":{"gitId":"theeugenechong"},"content":"**Q**: What is the folder named \u0027tmp\u0027 in the home folder?\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":906,"author":{"gitId":"theeugenechong"},"content":"\u003e The \u0027tmp\u0027 folder is created upon starting up cOOPer for the first time. This folder contains important data which enables to cOOPer to process your commands. You **should not** do anything to these files.","lastModifiedDate":"2021-10-29"},{"lineNumber":907,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":908,"author":{"gitId":"theeugenechong"},"content":"**Q**: Another person using cOOPer on their desktop stated their availability / posted to the forum. However, I am unable to see their availability / post when I run cOOPer on my desktop. Why does this occur?\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":909,"author":{"gitId":"theeugenechong"},"content":"\u003e Refer to the [How cOOPer is to be Used](#how-cooper-is-to-be-used) section to find out why this occurs.","lastModifiedDate":"2021-11-05"},{"lineNumber":910,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":911,"author":{"gitId":"theeugenechong"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":912,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":913,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":914,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":915,"author":{"gitId":"fansxx"},"content":"\u003c!--@@author fansxx--\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":916,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":917,"author":{"gitId":"fansxx"},"content":"## Command Summary","lastModifiedDate":"2021-10-27"},{"lineNumber":918,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":919,"author":{"gitId":"fansxx"},"content":"### Before Logging In","lastModifiedDate":"2021-10-31"},{"lineNumber":920,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":921,"author":{"gitId":"fansxx"},"content":"**Command** | **Format**                          | **Example**","lastModifiedDate":"2021-10-13"},{"lineNumber":922,"author":{"gitId":"fansxx"},"content":"------------|-------------------------------------|------------","lastModifiedDate":"2021-10-15"},{"lineNumber":923,"author":{"gitId":"fansxx"},"content":"register    |`register [username] /pw [password] /as [role]` |`register Sebastian /pw 123 /as admin`","lastModifiedDate":"2021-11-06"},{"lineNumber":924,"author":{"gitId":"fansxx"},"content":"login       |`login [username] /pw [password] /as [role]` |`login Sebastian /pw 123 /as admin`","lastModifiedDate":"2021-11-06"},{"lineNumber":925,"author":{"gitId":"fansxx"},"content":"exit        |`exit`                               |`exit`","lastModifiedDate":"2021-10-31"},{"lineNumber":926,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":927,"author":{"gitId":"fansxx"},"content":"### Admin Commands","lastModifiedDate":"2021-10-31"},{"lineNumber":928,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":929,"author":{"gitId":"fansxx"},"content":"**Command** | **Format**                          | **Example**","lastModifiedDate":"2021-10-31"},{"lineNumber":930,"author":{"gitId":"fansxx"},"content":"------------|-------------------------------------|------------","lastModifiedDate":"2021-10-31"},{"lineNumber":931,"author":{"gitId":"fansxx"},"content":"post add    |`post add [postContent]`             |`post add Who\u0027s up for dinner? :D`","lastModifiedDate":"2021-10-27"},{"lineNumber":932,"author":{"gitId":"fansxx"},"content":"post list   |`post list all` or `post list [postId]`|`post list all` or `post list 1`","lastModifiedDate":"2021-10-27"},{"lineNumber":933,"author":{"gitId":"fansxx"},"content":"post comment|`post comment [commentContent] /on [postId]`|`post comment I\u0027m up! /on 1`","lastModifiedDate":"2021-11-06"},{"lineNumber":934,"author":{"gitId":"fansxx"},"content":"post delete |`post delete [postId]`               |`post delete 1`","lastModifiedDate":"2021-10-27"},{"lineNumber":935,"author":{"gitId":"fansxx"},"content":"bs          |`bs`                                 |`bs`","lastModifiedDate":"2021-10-27"},{"lineNumber":936,"author":{"gitId":"fansxx"},"content":"cf          |`cf`                                 |`cf`","lastModifiedDate":"2021-10-27"},{"lineNumber":937,"author":{"gitId":"fansxx"},"content":"add         |`add [amount]`                       |`add 5000` or `add (5000)`","lastModifiedDate":"2021-10-15"},{"lineNumber":938,"author":{"gitId":"fansxx"},"content":"proj        |`proj [years]`                       |`proj 5`","lastModifiedDate":"2021-10-28"},{"lineNumber":939,"author":{"gitId":"fansxx"},"content":"list        |`list`                               |`list`","lastModifiedDate":"2021-10-15"},{"lineNumber":940,"author":{"gitId":"fansxx"},"content":"generate    |`generate [financialStatement]`      |`generate bs`","lastModifiedDate":"2021-10-27"},{"lineNumber":941,"author":{"gitId":"fansxx"},"content":"available   |`available [time]`                   |`available 14:00`","lastModifiedDate":"2021-10-28"},{"lineNumber":942,"author":{"gitId":"fansxx"},"content":"availability|`availability`                       |`availability`","lastModifiedDate":"2021-10-27"},{"lineNumber":943,"author":{"gitId":"fansxx"},"content":"schedule    |`schedule [meetingName] /with [username1], [username2]` or `schedule [meetingName] /with [username1], [username2] /at [time]`|`schedule Progress Meeting /with Sebastian, Eugene` or `schedule Progress Meeting /with Sebastian, Eugene /at 14:00`","lastModifiedDate":"2021-11-06"},{"lineNumber":944,"author":{"gitId":"fansxx"},"content":"meetings    |`meetings`                           |`meetings`","lastModifiedDate":"2021-10-14"},{"lineNumber":945,"author":{"gitId":"fansxx"},"content":"logout      |`logout`                             |`logout`","lastModifiedDate":"2021-10-27"},{"lineNumber":946,"author":{"gitId":"fansxx"},"content":"exit        |`exit`                               |`exit`","lastModifiedDate":"2021-10-27"},{"lineNumber":947,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":948,"author":{"gitId":"fansxx"},"content":"### Employee Commands","lastModifiedDate":"2021-10-27"},{"lineNumber":949,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":950,"author":{"gitId":"fansxx"},"content":"**Command** | **Format**                          | **Example**","lastModifiedDate":"2021-10-27"},{"lineNumber":951,"author":{"gitId":"fansxx"},"content":"------------|-------------------------------------|------------","lastModifiedDate":"2021-10-27"},{"lineNumber":952,"author":{"gitId":"fansxx"},"content":"post add    |`post add [postContent]`             |`post add Who\u0027s up for dinner? :D`","lastModifiedDate":"2021-10-27"},{"lineNumber":953,"author":{"gitId":"fansxx"},"content":"post list   |`post list all` or `post list [postId]`|`post list all` or `post list 1`","lastModifiedDate":"2021-10-27"},{"lineNumber":954,"author":{"gitId":"fansxx"},"content":"post comment|`post comment [commentContent] /on [postId]`|`post comment I\u0027m up! /on 1`","lastModifiedDate":"2021-11-06"},{"lineNumber":955,"author":{"gitId":"fansxx"},"content":"post delete |`post delete [postId]`               |`post delete 1`","lastModifiedDate":"2021-10-27"},{"lineNumber":956,"author":{"gitId":"fansxx"},"content":"available   |`available [date] [time]`                |`available 08-11-2021 14:00`","lastModifiedDate":"2021-11-06"},{"lineNumber":957,"author":{"gitId":"fansxx"},"content":"availability|`availability`                       |`availability`","lastModifiedDate":"2021-10-27"},{"lineNumber":958,"author":{"gitId":"fansxx"},"content":"meetings    |`meetings`                           |`meetings`","lastModifiedDate":"2021-10-27"},{"lineNumber":959,"author":{"gitId":"fansxx"},"content":"logout      |`logout`                             |`logout`","lastModifiedDate":"2021-10-27"},{"lineNumber":960,"author":{"gitId":"fansxx"},"content":"exit        |`exit`                               |`exit`","lastModifiedDate":"2021-10-27"},{"lineNumber":961,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":962,"author":{"gitId":"fansxx"},"content":"[⬆️ Back to top](#whats-in-this-user-guide)","lastModifiedDate":"2021-10-29"},{"lineNumber":963,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"ChrisLangton":225,"Rrraaaeee":142,"theeugenechong":370,"fansxx":226}},{"path":"docs/team/chrislangton.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"# Christopher Langton - Project Portfolio Page","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"## Overview","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"### Summary of Contributions","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"theeugenechong":6}},{"path":"docs/team/fansxx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"# Fan Shixi - Project Portfolio Page","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"## Overview","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"### Summary of Contributions","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"theeugenechong":6}},{"path":"docs/team/rrraaaeee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"# Ray Kang Qingxuan - Project Portfolio Page","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"## Overview","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"### Summary of Contributions","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"theeugenechong":6}},{"path":"docs/team/theeugenechong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"# Eugene Chong - Project Portfolio Page","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"cOOPer is a **Command Line Interface (CLI) desktop application** developed to simplify administrative processes of tech startups such as communication and finance management.","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"cOOPer was developed in Java following an **Object-Oriented Programming (OOP)** paradigm, hence the letters OOP in its name.","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"### Code Contributed","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"All the code I contributed for this project can be found at this [RepoSense link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtheeugenechong\u0026tabRepo\u003dAY2122S1-CS2113T-W13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse).","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"### Enhancements Implemented","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"- **Feature 1:** Implemented the sign-in system for cOOPer","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"  - This feature is what the user sees first upon launching cOOPer.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"  - It allows cOOPer\u0027s users to sign in to cOOPer with a username, password as well as the role they hold in the startup.","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"  - Since users have different access to different features of cOOPer based on their role in the startup, this feature ensures the correct level of access is given to its users within the startup throughout cOOPer\u0027s usage.","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"  - This feature also ensures that cOOPer\u0027s users experience something similar to having a personal account with cOOPer. For example, cOOPer\u0027s meetings feature allows the user logged in at the moment to view a list of meetings specific to them.","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"  - This feature has a reasonable level of security, with the implementation of a NIST recommended algorithm, the Password Based Key Derivation Function (PBKDF2) hashing algorithm with salt, for storing user passwords. The additional usage of salt makes user passwords insusceptible to rainbow-table attacks, hence more secure in the event that cOOPer\u0027s users have duplicate passwords.","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"- **Feature 2:** Implemented the `generate` feature ","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"  - This feature generates one of cOOPer\u0027s financial statements (balance sheet or cash flow statement) as a LaTeX-formatted PDF document.","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"  - This feature allows the user to view a neatly-formatted financial statement which may not always be possible when using a CLI.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"  - The PDF document is generated with the help of an online LaTeX compiler, and in the event that there is no Internet connection while using this feature, a backup text file is created representing the LaTeX file used to create the PDF.","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"  - I worked together with Ray on this feature, who came up with the code for sending a POST Request to the online LaTeX compiler. He also came up with the base LaTeX template for the PDF, and I made enhancements to the template which formatted the PDF like an actual financial statement.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"- **Feature 3:** Implemented the storage feature for cOOPer","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"  - The storage feature saves and loads user data to and from storage files.","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"  - Some methods for this feature was reused from my [CS2113T Individual Project (iP)](https://github.com/theeugenechong/ip) as well as the idea of encoding and decoding objects into strings which can be written to and read from text files.","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"  - I came up with the \u0027template\u0027 for each of the `Storage` classes which each had a `load()` and `save()` method as well as a `encode()` and `decode()` method.","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"  - This storage feature also does error checking of the content in the storage files to ensure that the correct data is being loaded into cOOPer.","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"### Contributions to the User Guide","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"- **Contribution 1:** Documented the \u0027Getting Started\u0027 and \u0027Login\u0027 section","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"  - Provided explanations and steps  to start using cOOPer. e.g. provided instructions on how cOOPer is to be used, as well as how user roles are determined","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"  - Provided steps for registering and logging in as a user of cOOPer.","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"- **Contribution 2:** Documented the `generate` feature","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"  - Since I implemented this feature, I explained the steps to use this feature, as well as additional information for users regarding the online LaTeX compilation.","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"- **Contribution 3:** Documented the storage feature","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"  - Provided explanations to the user on things like what is stored in each storage file, as well as when the storage file is updated throughout cOOPer\u0027s usage.","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"- **Contribution 4:** Documented the \u0027Setup\u0027 section","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"  - Provided a beginner-friendly, step-by-step walkthrough for the user to set up cOOPer properly.","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"- **Contribution 5:** Documented other minor features like `help` and `exit`","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"  - Provided explanations on how to use these commands.","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"- **Contribution 6:** Added some questions to the \u0027FAQ\u0027 section","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"- **Contribution 7**: Came up with the \u0027How This User Guide Works\u0027 section","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"  - Created a table explaining the different formatting / symbols used in the user guide so that readers are able to use the guide with ease.","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"- **Contribution 1:** Documented the \u0027Setting Up and Getting Started\u0027 section ","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"  - Provided instructions for developers to set up cOOPer correctly.","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"- **Contribution 2:** Came up with the layer diagram, architecture diagram and sequence diagrams under the \u0027Design\u0027 section","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"  - Briefly explained cOOPer\u0027s internal software architecture / design.","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"- **Contribution 3:** Documented the `Ui`, `Parser`, `Verification`, and `Storage` components under the \u0027Design\u0027 section","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"  - Came up with the class diagrams and explanations about the design of these components.","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"- **Contribution 4:** Documented the \u0027Verifying user credentials\u0027, \u0027Generating a PDF from the financial statement\u0027 and \u0027Saving and loading data\u0027 features under the \u0027Implementation\u0027 section","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"  - Came up with explanations and sequence diagrams for the implementation of these features.","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"- **Contribution 5:** Came up with the \u0027How This Developer Guide Works\u0027 section","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"  - Created a table explaining the different formatting / symbols used in the developer guide ","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"- **Contribution 6:** Added the `generate`, `help` and \u0027Launch and Shutdown\u0027 sections to manual testing","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"  - Provided steps on how to test these features.","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"theeugenechong"},"content":"### Contribution to Team-based Tasks","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"- Maintained the issue tracker (added issues, labels, milestones, proper descriptions etc.)","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"- Set soft deadlines for project tasks","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"- Set date / time for team meetings","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"- Inspected / ran IDE analysis on code after merges to determine if there are any parts of the code which need cleaning up (unused variables, unused methods etc.)","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"- Added the \u0027⬆️Back to top\u0027 labels in both the User Guide and Developer Guide for easier navigation","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"- Did both releases for v1.0 and v2.0","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"- Troubleshoot CI-related problems","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"### Review/mentoring contributions","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"- Pull requests I reviewed:","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"  - Pull request [#29](https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/29)","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"  - Pull request [#81](https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/81)","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"  - Pull request [#86](https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/86)","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"  - Pull request [#93](https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/93)","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"  - Pull request [#217](https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/217)","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"- Helped Chris resolve Git-related issues, as well as demonstrated usage of Git\u0027s stash feature.","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"theeugenechong"},"content":"- Helped Shixi solve the Git password authentication problem.","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"- Provided tips to configure IntelliJ to not automatically use wildcard imports.","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"- Helped to test code written by my teammates.","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"- Helped my teammates fix bugs.","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"### Contributions beyond the project team","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"- [Reported bugs for the PE Dry Run](https://github.com/theeugenechong/ped/issues).","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":"## [Optional] Contribution to the User Guide","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"theeugenechong"},"content":"Here is an extract of one of my contributions to the User Guide:","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"theeugenechong"},"content":"\u003e ## Getting Started","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"theeugenechong"},"content":"\u003e ### How cOOPer is to be used","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"theeugenechong"},"content":"\u003e - The **correct** way (as of v2.1) of using cOOPer is to run cOOPer on a **single** desktop with only **a single user** interacting with cOOPer at a time.","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003e ⚠️cOOPer\u0027s features **will not work** as described in this user guide if **multiple users** are interacting with cOOPer on **multiple desktops** at the same time.","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"theeugenechong"},"content":"\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"theeugenechong"},"content":"\u003e ### Roles","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"theeugenechong"},"content":"\u003e -  There are two main roles you can hold as a user of cOOPer, namely the _**admin**_ role or the _**employee**_ role.","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"theeugenechong"},"content":"\u003e - You are eligible to hold the admin role if you hold a high position in the startup. e.g. Chief Executive Officer (CEO), Chief Financial Officer (CFO), Human Resources Manager (HR), accountant etc.","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"theeugenechong"},"content":"\u003e - On the other hand, you hold the employee role if you are a basic employee at the startup.","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"theeugenechong"},"content":"\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"theeugenechong"},"content":"\u003e - cOOPer offers tailor-made functions and features specific to your role to ensure the correct level of administrative access within the company throughout cOOPer\u0027s usage.","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"theeugenechong"},"content":"\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"theeugenechong"},"content":"\u003e ### User registration","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"theeugenechong"},"content":"\u003e - Upon first-time use of cOOPer, an individual holding the admin role in the startup is in charge of ensuring all members of the startup are registered with the correct role.","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"theeugenechong"},"content":"\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"theeugenechong"},"content":"\u003e - Once a member has been registered, they will be able to log in to cOOPer to access its features.","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"theeugenechong"},"content":"\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"theeugenechong"},"content":"\u003e - How to register a user:","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"theeugenechong"},"content":"\u003e    1. When you see cOOPer asking you to log in, register or exit, enter `register [username] /pw [password] /as [role]`.","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"theeugenechong"},"content":"\u003e    2. Upon successful registration, you should see a message informing you of your successful registration.","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"theeugenechong"},"content":"\u003e    3. You can now log in to access cOOPer\u0027s features specific to your role. Refer to the Login section to find out more about logging in.","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003e ℹ️`[username]` refers to your name, `[password]` refers to your password, while `[role]` refers to your role as determined here.","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"theeugenechong"},"content":"\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"theeugenechong"},"content":"\u003e - Example input:","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"theeugenechong"},"content":"\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"theeugenechong"},"content":"\u003e ```","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003e\u003e [Logged out] register Sebastian /pw 123 /as admin","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"theeugenechong"},"content":"\u003e ```","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"theeugenechong"},"content":"\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"theeugenechong"},"content":"\u003e - Expected output:","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"theeugenechong"},"content":"\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"theeugenechong"},"content":"\u003e ```","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"theeugenechong"},"content":"\u003e Sebastian is now successfully registered as an admin!","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"theeugenechong"},"content":"\u003e ```","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"theeugenechong"},"content":"\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003e ℹ️A similar output should be observed when an employee is registered, with the output now showing \u0027employee\u0027 instead of \u0027admin\u0027.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":154,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003e 💡 Just like when you are using any other app with a sign in feature, remember to record down your username and password somewhere (e.g. Sticky Notes, a password manager).\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":156,"author":{"gitId":"theeugenechong"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":157,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":158,"author":{"gitId":"theeugenechong"},"content":"## [Optional] Contribution to the Developer Guide","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"theeugenechong"},"content":"Here is an extract of one of my contributions to the Developer Guide:","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":162,"author":{"gitId":"theeugenechong"},"content":"\u003e ## Design","lastModifiedDate":"2021-11-07"},{"lineNumber":163,"author":{"gitId":"theeugenechong"},"content":"\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003e 💡 The architecture diagram and _UML_ diagrams in this document were created using **draw.io**. The `.png` templates used to create the diagrams can be found in the [`developerGuideDiagrams`](https://github.com/AY2122S1-CS2113T-W13-4/tp/tree/master/docs/developerGuideDiagrams) folder.","lastModifiedDate":"2021-11-07"},{"lineNumber":165,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003e To create and edit diagrams, access the draw.io [website](https://app.diagrams.net/), select \u0027Open Existing Diagram\u0027 and open the desired `.png` file. Any changes to the diagram will be saved automatically.","lastModifiedDate":"2021-11-07"},{"lineNumber":166,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":167,"author":{"gitId":"theeugenechong"},"content":"\u003e ### Overview","lastModifiedDate":"2021-11-07"},{"lineNumber":168,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"theeugenechong"},"content":"\u003e cOOPer consists of two main layers: the _**verification** layer_ and the _**features** layer_ as shown in the diagram below.","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"theeugenechong"},"content":"\u003e cOOPer recognizes different sets of inputs at each layer.","lastModifiedDate":"2021-11-07"},{"lineNumber":171,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":173,"author":{"gitId":"theeugenechong"},"content":"\u003e     \u003cimg src\u003d\"../developerGuideDiagrams/layerDiagram.png\" alt\u003d\"layerDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":174,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003c/p\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":175,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":176,"author":{"gitId":"theeugenechong"},"content":"\u003e Upon launching the app, the user starts at the _**verification** layer_ where they can only log in or register.","lastModifiedDate":"2021-11-07"},{"lineNumber":177,"author":{"gitId":"theeugenechong"},"content":"\u003e Entering valid credentials will then grant the user access to the _**features** layer_ where they can input commands like `cf` and`available` to use cOOPer\u0027s features.","lastModifiedDate":"2021-11-07"},{"lineNumber":178,"author":{"gitId":"theeugenechong"},"content":"\u003e At this layer, entering the `logout` command will bring the user back to the _verification layer_.","lastModifiedDate":"2021-11-07"},{"lineNumber":179,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":180,"author":{"gitId":"theeugenechong"},"content":"\u003e ### Architecture","lastModifiedDate":"2021-11-07"},{"lineNumber":181,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":182,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"theeugenechong"},"content":"\u003e     \u003cimg src\u003d\"../developerGuideDiagrams/architectureDiagram.png\" alt\u003d\"architectureDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003c/p\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":186,"author":{"gitId":"theeugenechong"},"content":"\u003e The **Architecture Diagram** above shows the high-level design of cOOPer and how cOOPer\u0027s components are connected.","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":188,"author":{"gitId":"theeugenechong"},"content":"\u003e `Cooper` contains the main method of the program. `Cooper`\u0027s responsibilities are as such:","lastModifiedDate":"2021-11-07"},{"lineNumber":189,"author":{"gitId":"theeugenechong"},"content":"\u003e - Upon **launching the app**, `Cooper` initializes the components and loads stored user data into the components.","lastModifiedDate":"2021-11-07"},{"lineNumber":190,"author":{"gitId":"theeugenechong"},"content":"\u003e - While the **app is running**, `Cooper` reads user input which is then processed by the components to produce a result.","lastModifiedDate":"2021-11-07"},{"lineNumber":191,"author":{"gitId":"theeugenechong"},"content":"\u003e - Upon **shutting down the app**, `Cooper` shuts down the components.","lastModifiedDate":"2021-11-07"},{"lineNumber":192,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":193,"author":{"gitId":"theeugenechong"},"content":"\u003e Apart from `Cooper`, the rest of the app consists of these seven components:","lastModifiedDate":"2021-11-07"},{"lineNumber":194,"author":{"gitId":"theeugenechong"},"content":"\u003e - `Ui`: Handles the reading of user input and printing of messages to the terminal.","lastModifiedDate":"2021-11-07"},{"lineNumber":195,"author":{"gitId":"theeugenechong"},"content":"\u003e - `Parser`: Interprets and validates user input.","lastModifiedDate":"2021-11-07"},{"lineNumber":196,"author":{"gitId":"theeugenechong"},"content":"\u003e - `Verification`: Verifies that the user is signing in to cOOPer with valid credentials.","lastModifiedDate":"2021-11-07"},{"lineNumber":197,"author":{"gitId":"theeugenechong"},"content":"\u003e - `Command`: Executes commands which are parsed from user input.","lastModifiedDate":"2021-11-07"},{"lineNumber":198,"author":{"gitId":"theeugenechong"},"content":"\u003e - `Resources`: Manages data for cOOPer\u0027s finance, meetings and forum features while the app is running.","lastModifiedDate":"2021-11-07"},{"lineNumber":199,"author":{"gitId":"theeugenechong"},"content":"\u003e - `Storage`: Loads data from, and saves data to storage files in the computer hard disk.","lastModifiedDate":"2021-11-07"},{"lineNumber":200,"author":{"gitId":"theeugenechong"},"content":"\u003e - `Util`: Provides utility which help with some of cOOPer\u0027s features.","lastModifiedDate":"2021-11-07"},{"lineNumber":201,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":202,"author":{"gitId":"theeugenechong"},"content":"\u003e #### Interaction of the architecture components to process user input","lastModifiedDate":"2021-11-07"},{"lineNumber":203,"author":{"gitId":"theeugenechong"},"content":"\u003e - The sequence diagram below shows how cOOPer\u0027s components interact with each other when a user enters their **sign in details** at the _verification layer_.","lastModifiedDate":"2021-11-07"},{"lineNumber":204,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":205,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003e ℹ️`userInput` represents the credentials input by the user for verification. For example, `register John /pw 12345 /as admin`.","lastModifiedDate":"2021-11-07"},{"lineNumber":206,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":207,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":208,"author":{"gitId":"theeugenechong"},"content":"\u003e     \u003cimg src\u003d\"../developerGuideDiagrams/signInSequenceDiagram.png\" alt\u003d\"signInSequenceDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":209,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003c/p\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":210,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":211,"author":{"gitId":"theeugenechong"},"content":"\u003e - The next sequence diagram below shows how cOOPer\u0027s components interact with each other when a user enters a **command** at the _features layer_.","lastModifiedDate":"2021-11-07"},{"lineNumber":212,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":213,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003e ℹ️ `userInput` represents a command input by the user. For example, `meetings`.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":214,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003e ℹ️`XYZCommand` is an object representing a command recognised by cOOPer. For example, `AddCommand`.","lastModifiedDate":"2021-11-07"},{"lineNumber":215,"author":{"gitId":"theeugenechong"},"content":"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":216,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":217,"author":{"gitId":"theeugenechong"},"content":"\u003e     \u003cimg src\u003d\"../developerGuideDiagrams/commandSequenceDiagram.png\" alt\u003d\"commandSequenceDiagram\"\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":218,"author":{"gitId":"theeugenechong"},"content":"\u003e \u003c/p\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":219,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":220,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"theeugenechong":217,"-":3}},{"path":"src/main/java/cooper/Cooper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.AmountOutOfRangeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.EmptyFinancialStatementException;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidAddFormatException;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidAssetException;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidDocumentException;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidLiabilityException;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidProjectionException;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidScheduleFormatException;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.NoTimeEnteredException;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.NoUsernameAfterCommaException;","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.UnrecognisedCommandException;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"fansxx"},"content":"import cooper.log.CooperLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"fansxx"},"content":"import cooper.ui.MeetingsUi;","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"fansxx"},"content":"import cooper.ui.ParserUi;","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"fansxx"},"content":"import cooper.ui.FinanceUi;","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.VerificationUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"fansxx"},"content":"import cooper.parser.CommandParser;","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.Verifier;","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":" * Entry point of the cOOPer application.","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"public class Cooper {","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"    /* cOOPer\u0027s components */","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"    private final Verifier cooperVerifier;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"    private final ResourcesManager cooperResourcesManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"    private final StorageManager cooperStorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"     * Initializes cOOPer\u0027s components.","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"    public Cooper() {","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"        cooperVerifier \u003d new Verifier();","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"        cooperStorageManager \u003d new StorageManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"        cooperResourcesManager \u003d new ResourcesManager();","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"        CooperLogger.setupLogger();","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"     * Main entry-point of the cOOPer application.","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Rrraaaeee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Rrraaaeee"},"content":"        Cooper cooper \u003d new Cooper();","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Rrraaaeee"},"content":"        cooper.run();","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"fansxx"},"content":"    //@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"fansxx"},"content":"     * Runs cOOPer.","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"fansxx"},"content":"    public void run() {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"fansxx"},"content":"        setUp();","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"fansxx"},"content":"        runLoopUntilExitCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"fansxx"},"content":"     * Shows the greeting message and loads data from the storage upon launching cOOPer.","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"fansxx"},"content":"    private void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"fansxx"},"content":"        Ui.showLogo();","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"fansxx"},"content":"        Ui.showIntroduction();","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"fansxx"},"content":"        // Load data from storage","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"fansxx"},"content":"        cooperStorageManager.loadAllData(cooperVerifier, cooperResourcesManager);","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"fansxx"},"content":"     * Runs cOOPer until the {@code exit} command is entered.","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"fansxx"},"content":"    @SuppressWarnings(\"InfiniteLoopStatement\")","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"fansxx"},"content":"    private void runLoopUntilExitCommand() {","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"fansxx"},"content":"        while (true) {","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"fansxx"},"content":"            SignInDetails signInDetails \u003d verifyUser();","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"fansxx"},"content":"            runLoopUntilLogoutCommand(signInDetails);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"    //@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"     * Gets user credentials and verifies them. Will continue looping until the credentials enter are valid.","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"     * Saves the user as a registered user only after the user signs in successfully.","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"     * @return The sign in details of the user who successfully signed in which is to be used in the execution of","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"     *         commands.","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"theeugenechong"},"content":"    private SignInDetails verifyUser() {","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails successfulSignInDetails \u003d null;","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"        while (!cooperVerifier.isSuccessfullySignedIn()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"            String input \u003d Ui.getInput();","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"            successfulSignInDetails \u003d cooperVerifier.verify(input);","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"            cooperStorageManager.saveSignInDetails(cooperVerifier);","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"        CommandParser.setCooperState(CooperState.LOGIN);","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"        return successfulSignInDetails;","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"ChrisLangton"},"content":"    //@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"ChrisLangton"},"content":"     * Allows the user to continuously enter commands to use cOOPer\u0027s features until the {@code logout} command is","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"ChrisLangton"},"content":"     * entered.","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"ChrisLangton"},"content":"     * @param signInDetails The sign in details of the user who successfully signed in which is to be used","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"ChrisLangton"},"content":"     *                      in the execution of commands.","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"ChrisLangton"},"content":"    private void runLoopUntilLogoutCommand(SignInDetails signInDetails) {","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"ChrisLangton"},"content":"        while (true) {","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"ChrisLangton"},"content":"            if (CommandParser.isLogout()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"ChrisLangton"},"content":"                cooperVerifier.setSuccessfullySignedIn(false);","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"ChrisLangton"},"content":"                VerificationUi.showLogoutMessage();","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"ChrisLangton"},"content":"                break;","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"ChrisLangton"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"ChrisLangton"},"content":"                String input \u003d Ui.getInput();","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"ChrisLangton"},"content":"                Command command \u003d CommandParser.parse(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"ChrisLangton"},"content":"                assert command !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"ChrisLangton"},"content":"                command.execute(signInDetails, cooperResourcesManager, cooperStorageManager);","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"ChrisLangton"},"content":"            } catch (NoSuchElementException | InvalidCommandFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"ChrisLangton"},"content":"                ParserUi.showInvalidCommandFormatError();","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"ChrisLangton"},"content":"            } catch (InvalidScheduleFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"ChrisLangton"},"content":"                MeetingsUi.showInvalidScheduleFormatException();","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"ChrisLangton"},"content":"            } catch (NoTimeEnteredException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"ChrisLangton"},"content":"                MeetingsUi.showNoTimeEnteredException();","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"ChrisLangton"},"content":"            } catch (NoUsernameAfterCommaException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"ChrisLangton"},"content":"                MeetingsUi.showNoUsernameAfterCommaException();","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"ChrisLangton"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"ChrisLangton"},"content":"                ParserUi.showInvalidNumberError();","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"ChrisLangton"},"content":"            } catch (UnrecognisedCommandException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"ChrisLangton"},"content":"                ParserUi.showUnrecognisedCommandError();","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"ChrisLangton"},"content":"            } catch (InvalidAccessException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"ChrisLangton"},"content":"                VerificationUi.showNoAccessError();","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"ChrisLangton"},"content":"            } catch (InvalidProjectionException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"ChrisLangton"},"content":"                FinanceUi.showPleaseInputValidProjection();","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"ChrisLangton"},"content":"            } catch (AmountOutOfRangeException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"ChrisLangton"},"content":"                FinanceUi.showPleaseInputValidRange();","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"ChrisLangton"},"content":"            } catch (EmptyFinancialStatementException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"ChrisLangton"},"content":"                FinanceUi.showEmptyFinancialStatementException();","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"ChrisLangton"},"content":"            } catch (InvalidDocumentException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"ChrisLangton"},"content":"                FinanceUi.showInvalidDocumentError();","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"ChrisLangton"},"content":"            } catch (InvalidAddFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"ChrisLangton"},"content":"                FinanceUi.showPleaseInputValidAdd();","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"ChrisLangton"},"content":"            } catch (InvalidAssetException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"ChrisLangton"},"content":"                FinanceUi.showPleaseInputValidAsset();","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"ChrisLangton"},"content":"            } catch (InvalidLiabilityException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"ChrisLangton"},"content":"                FinanceUi.showPleaseInputValidLiability();","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":161,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":162,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"ChrisLangton":65,"Rrraaaeee":36,"theeugenechong":25,"fansxx":36}},{"path":"src/main/java/cooper/CooperState.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee ","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"public enum CooperState {","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"    LOGOUT,","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"    LOGIN,","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"    CF,","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"    BS","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"Rrraaaeee":10}},{"path":"src/main/java/cooper/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.command;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.AmountOutOfRangeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidAssetException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidLiabilityException;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"import cooper.finance.BalanceSheet;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"import cooper.finance.CashFlow;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FinanceUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"import cooper.finance.FinanceManager;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"import cooper.finance.FinanceCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":" * The child class of Command that handles the \u0027add\u0027 command specifically.","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"    public boolean isInflow;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"    public int amount;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"    public FinanceCommand financeFlag;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"    private static final int AMOUNT_UPPER_LIMIT \u003d 1_000_000_000;","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"    private static final int AMOUNT_LOWER_LIMIT \u003d -1_000_000_000;","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"    public AddCommand(int amount, boolean isInflow, FinanceCommand financeFlag) {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"        super();","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"        this.isInflow \u003d isInflow;","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"        this.financeFlag \u003d financeFlag;","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"     * The override function for executing the \u0027add\u0027 command, calls for \u0027add\u0027 and subsequently","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"     * printing the status to the command line if and only if","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"     * the command is being accessed by an \u0027admin\u0027 level user.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"     * @param signInDetails Sign in details of user to provide correct access","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"     * @param resourcesManager Provides access to manipulate data in the cOOPer\u0027s {@code FinanceManager},","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"     *                         {@code MeetingsManager} and {@code ForumManager}","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"     * @param storageManager Stores data which has just been added","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"ChrisLangton"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"ChrisLangton"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager,","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"ChrisLangton"},"content":"                        StorageManager storageManager) throws InvalidAccessException, AmountOutOfRangeException,","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"ChrisLangton"},"content":"            InvalidAssetException, InvalidLiabilityException {","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"ChrisLangton"},"content":"        UserRole userRole \u003d signInDetails.getUserRole();","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"ChrisLangton"},"content":"        FinanceManager financeManager \u003d resourcesManager.getFinanceManager(userRole);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"ChrisLangton"},"content":"        if (financeManager \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"ChrisLangton"},"content":"            throw new InvalidAccessException();","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"ChrisLangton"},"content":"        if ((amount \u003e\u003d AMOUNT_UPPER_LIMIT) || (amount \u003c\u003d AMOUNT_LOWER_LIMIT)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"ChrisLangton"},"content":"            throw new AmountOutOfRangeException();","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"ChrisLangton"},"content":"        if (financeFlag \u003d\u003d FinanceCommand.IDLE) {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"ChrisLangton"},"content":"            FinanceUi.showPleaseSpecifyFinancialStatementToAdd();","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"ChrisLangton"},"content":"      ","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"ChrisLangton"},"content":"        if (financeFlag \u003d\u003d FinanceCommand.BS) {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"ChrisLangton"},"content":"            if (BalanceSheet.balanceSheetStage \u003c\u003d FinanceManager.endOfAssets) {","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"ChrisLangton"},"content":"                if (!isInflow) {","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"ChrisLangton"},"content":"                    throw new InvalidAssetException();","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"ChrisLangton"},"content":"            } else if (BalanceSheet.balanceSheetStage \u003c\u003d FinanceManager.endOfLiabilities) {","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"ChrisLangton"},"content":"                if (isInflow) {","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"ChrisLangton"},"content":"                    throw new InvalidLiabilityException();","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"ChrisLangton"},"content":"            if (BalanceSheet.balanceSheetStage \u003c\u003d FinanceManager.endOfSE) {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"ChrisLangton"},"content":"                financeManager.addBalance(amount, isInflow, BalanceSheet.balanceSheetStage);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"ChrisLangton"},"content":"                storageManager.saveBalanceSheet(financeManager.cooperBalanceSheet);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"ChrisLangton"},"content":"                FinanceUi.printAddBalanceCommand(amount, isInflow, BalanceSheet.balanceSheetStage);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"ChrisLangton"},"content":"                BalanceSheet.balanceSheetStage++;","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"ChrisLangton"},"content":"                FinanceUi.showCannotAddToBalanceSheet();","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"ChrisLangton"},"content":"        } else if (financeFlag \u003d\u003d FinanceCommand.CF) {","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"ChrisLangton"},"content":"            if (CashFlow.cashFlowStage \u003c\u003d FinanceManager.freeCashFlow) {","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"ChrisLangton"},"content":"                financeManager.addCashFlow(amount, isInflow, CashFlow.cashFlowStage);","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"ChrisLangton"},"content":"                storageManager.saveCashFlowStatement(financeManager.cooperCashFlowStatement);","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"ChrisLangton"},"content":"                FinanceUi.printAddCashFlowCommand(amount, isInflow, CashFlow.cashFlowStage);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"ChrisLangton"},"content":"                CashFlow.cashFlowStage++;","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"ChrisLangton"},"content":"                FinanceUi.showCannotAddToCashFlow();","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":94,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"ChrisLangton":90,"Rrraaaeee":3,"theeugenechong":3}},{"path":"src/main/java/cooper/command/AvailabilityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"import cooper.meetings.MeetingManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"fansxx"},"content":"import cooper.ui.MeetingsUi;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"fansxx"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"fansxx"},"content":"public class AvailabilityCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"fansxx"},"content":"     * The override function for executing the \u0027add\u0027 command, calls for \u0027add\u0027 and subsequently","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"fansxx"},"content":"     * printing the status to the command line if and only if","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"fansxx"},"content":"     * the command is being accessed by an \u0027admin\u0027 level user.","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"fansxx"},"content":"     * @param signInDetails Sign in details of user to provide correct access","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"fansxx"},"content":"     * @param resourcesManager Provides access to manipulate data in the cOOPer\u0027s {@code FinanceManager},","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"fansxx"},"content":"     *                         {@code MeetingsManager} and {@code ForumManager}","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"fansxx"},"content":"     * @param storageManager Stores data which has just been added","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"fansxx"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"fansxx"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager, ","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"fansxx"},"content":"                        StorageManager storageManager) throws InvalidAccessException {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"fansxx"},"content":"        MeetingManager meetingManager \u003d resourcesManager.getMeetingManager();","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"fansxx"},"content":"        MeetingsUi.printAvailabilities(meetingManager.getAvailability());","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Rrraaaeee":1,"fansxx":27,"theeugenechong":2}},{"path":"src/main/java/cooper/command/AvailableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.command;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.InvalidTimeException;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.DuplicateUsernameException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"fansxx"},"content":"import cooper.meetings.MeetingManager;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"fansxx"},"content":"import cooper.ui.MeetingsUi;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"fansxx"},"content":"public class AvailableCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"fansxx"},"content":"    private final String dateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"fansxx"},"content":"    public AvailableCommand(String time) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"fansxx"},"content":"        super();","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"fansxx"},"content":"        this.dateTime \u003d time;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"fansxx"},"content":"     * The override function for executing the \u0027add\u0027 command, calls for \u0027add\u0027 and subsequently","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"fansxx"},"content":"     * printing the status to the command line if and only if","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"fansxx"},"content":"     * the command is being accessed by an \u0027admin\u0027 level user.","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"fansxx"},"content":"     * @param signInDetails Sign in details of user to provide correct access","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"fansxx"},"content":"     * @param resourcesManager Provides access to manipulate data in the cOOPer\u0027s {@code FinanceManager},","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"fansxx"},"content":"     *                         {@code MeetingsManager} and {@code ForumManager}","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"fansxx"},"content":"     * @param storageManager Stores data which has just been added","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"fansxx"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"fansxx"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager, StorageManager storageManager)","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"fansxx"},"content":"            throws InvalidAccessException {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"fansxx"},"content":"        String username \u003d signInDetails.getUsername();","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"fansxx"},"content":"        MeetingManager meetingManager \u003d resourcesManager.getMeetingManager();","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"fansxx"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"fansxx"},"content":"            meetingManager.addAvailability(dateTime, username);","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"fansxx"},"content":"            storageManager.saveAvailability(meetingManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"fansxx"},"content":"            MeetingsUi.printAvailableCommand(dateTime, username);","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"fansxx"},"content":"        } catch (InvalidDateTimeFormatException e1) {","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"fansxx"},"content":"            MeetingsUi.showInvalidDateTimeFormatException();","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"fansxx"},"content":"        } catch (InvalidTimeException e2) {","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"fansxx"},"content":"            MeetingsUi.showInvalidTimeException();","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"fansxx"},"content":"        } catch (DuplicateUsernameException e3) {","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"fansxx"},"content":"            MeetingsUi.showDuplicateUsernameException();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"Rrraaaeee":6,"fansxx":46,"theeugenechong":2}},{"path":"src/main/java/cooper/command/BsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.CooperState;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.BalanceSheet;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.FinanceManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import cooper.parser.CommandParser;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FinanceUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"public class BsCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    public BsCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"        super();","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager,","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"                        StorageManager storageManager) throws InvalidAccessException {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"        UserRole userRole \u003d signInDetails.getUserRole();","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"        FinanceManager financeManager \u003d resourcesManager.getFinanceManager(userRole);","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"        if (financeManager \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"            throw new InvalidAccessException();","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"        CommandParser.setCooperState(CooperState.BS);","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"        resetBalanceSheet();","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"        FinanceUi.initiateBalanceSheet();","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"    private void resetBalanceSheet() {","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"        BalanceSheet.balanceSheetStage \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"        FinanceManager.netAssets \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"        FinanceManager.netLiabilities \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"        FinanceManager.netSE \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"ChrisLangton":30,"Rrraaaeee":1,"theeugenechong":12}},{"path":"src/main/java/cooper/command/CfCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.CooperState;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.CashFlow;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.FinanceManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import cooper.parser.CommandParser;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FinanceUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"public class CfCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    public CfCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"        super();","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager,","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"                        StorageManager storageManager) throws InvalidAccessException {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"        UserRole userRole \u003d signInDetails.getUserRole();","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"        FinanceManager financeManager \u003d resourcesManager.getFinanceManager(userRole);","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"        if (financeManager \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"            throw new InvalidAccessException();","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"        CommandParser.setCooperState(CooperState.CF);","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"        resetCashFlowStatement();","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"        FinanceUi.initiateCashFlowStatement();","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"    private void resetCashFlowStatement() {","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"        CashFlow.cashFlowStage \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"        FinanceManager.netOA \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"        FinanceManager.netIA \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"        FinanceManager.netFA \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"ChrisLangton":30,"Rrraaaeee":1,"theeugenechong":12}},{"path":"src/main/java/cooper/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.command;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.AmountOutOfRangeException;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.EmptyFinancialStatementException;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidAssetException;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidLiabilityException;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidProjectionException;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"     * Executes the command specified.","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"    public abstract void execute(SignInDetails signInDetails, ResourcesManager resourcesManager,","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"                                 StorageManager storageManager) throws","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"            InvalidAccessException, EmptyFinancialStatementException, InvalidProjectionException,","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"            AmountOutOfRangeException, InvalidAssetException, InvalidLiabilityException;","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"    //@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"    protected boolean isEmptyFinancialStatement(ArrayList\u003cInteger\u003e financialStatement) {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"        return financialStatement.stream().allMatch(i -\u003e i \u003d\u003d 0);","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"ChrisLangton":11,"Rrraaaeee":15,"theeugenechong":5}},{"path":"src/main/java/cooper/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.command;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":" * Exits the program upon execution.","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"    protected static final int SUCCESS \u003d 0;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager, StorageManager storageManager) {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"        Ui.showBye();","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"        Ui.closeStreams();","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"        System.exit(SUCCESS);","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"Rrraaaeee":3,"theeugenechong":22}},{"path":"src/main/java/cooper/command/GenerateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.command;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.EmptyFinancialStatementException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.FinanceManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":" * Generates cOOPer\u0027s financial statement, either the balance sheet or cash flow statement in the form of a PDF using","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":" * LaTeX. Creates a backup text file in the event that there is no internet connection to perform the online","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":" * compilation of the LaTeX file.","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"public class GenerateCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"    private final String documentToGenerate;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"    private static final String BS \u003d \"bs\";","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    private static final String CF \u003d \"cf\";","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"    public GenerateCommand(String documentToGenerate) {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"        this.documentToGenerate \u003d documentToGenerate;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"     * The override function for executing the \u0027generate\u0027 command, which is executed if the {@code UserRole} of","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"     * {@code signInDetails} is admin. Generates the financial statement specified in the form of a PDF.","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"     * @param signInDetails Sign in details of user to provide correct access","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager, StorageManager storageManager)","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"            throws InvalidAccessException, EmptyFinancialStatementException {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"        UserRole userRole \u003d signInDetails.getUserRole();","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"        FinanceManager financeManager \u003d resourcesManager.getFinanceManager(userRole);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"        if (financeManager \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"            throw new InvalidAccessException();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"        boolean isEmptyBs \u003d isEmptyFinancialStatement(financeManager.cooperBalanceSheet.getBalanceSheet());","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"        boolean isEmptyCf \u003d isEmptyFinancialStatement(financeManager.cooperCashFlowStatement.getCashFlowStatement());","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"        if (documentToGenerate.equals(BS)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"            if (isEmptyBs) {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"                throw new EmptyFinancialStatementException();","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"            financeManager.generateBalanceSheetAsPdf();","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"        } else if (documentToGenerate.equals(CF)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"            if (isEmptyCf) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"                throw new EmptyFinancialStatementException();","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"            financeManager.generateCashFlowStatementAsPdf();","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"theeugenechong":60}},{"path":"src/main/java/cooper/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.command;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":" * Prints help for the user according to their role.","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"     * Prints a list of commands along with the formats of the command for the user according to their role in","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"     * {@code signInDetails}.","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"     * @param signInDetails Sign in details of user to print out the correct list of commands.","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager, StorageManager storageManager) {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"        UserRole userRole \u003d signInDetails.getUserRole();","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"        if (userRole.equals(UserRole.ADMIN)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"            Ui.printAdminHelp();","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"        } else if (userRole.equals(UserRole.EMPLOYEE)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"            Ui.printEmployeeHelp();","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"        Ui.printGeneralHelp();","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"Rrraaaeee":3,"theeugenechong":29}},{"path":"src/main/java/cooper/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.command;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.EmptyFinancialStatementException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FinanceUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"import cooper.finance.FinanceManager;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"import cooper.finance.FinanceCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":" * The child class of Command that handles the \u0027list\u0027 function specifically.","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"    public FinanceCommand financeFlag;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"    public ListCommand(FinanceCommand financeFlag) {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"        this.financeFlag \u003d financeFlag;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"     * The override function for executing the \u0027add\u0027 command, calls for \u0027add\u0027 and subsequently","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"     * printing the status to the command line if and only if","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"     * the command is being accessed by an \u0027admin\u0027 level user.","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"     * @param signInDetails Sign in details of user to provide correct access","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"     * @param resourcesManager Provides access to manipulate data in the cOOPer\u0027s {@code FinanceManager},","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"     *                         {@code MeetingsManager} and {@code ForumManager}","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"     * @param storageManager Stores data which has just been added","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager,","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"                        StorageManager storageManager) throws InvalidAccessException, EmptyFinancialStatementException {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"        UserRole userRole \u003d signInDetails.getUserRole();","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"        FinanceManager financeManager \u003d resourcesManager.getFinanceManager(userRole);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"        if (financeManager \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"            throw new InvalidAccessException();","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"        if (financeFlag \u003d\u003d FinanceCommand.IDLE) {","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"            FinanceUi.showPleaseSpecifyFinancialStatementToView();","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"ChrisLangton"},"content":"        boolean isEmptyBs \u003d isEmptyFinancialStatement(financeManager.cooperBalanceSheet.getBalanceSheet());","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"ChrisLangton"},"content":"        boolean isEmptyCf \u003d isEmptyFinancialStatement(financeManager.cooperCashFlowStatement.getCashFlowStatement());","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"ChrisLangton"},"content":"        if (financeFlag \u003d\u003d FinanceCommand.BS) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"ChrisLangton"},"content":"            if (isEmptyBs) {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"ChrisLangton"},"content":"                throw new EmptyFinancialStatementException();","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"ChrisLangton"},"content":"            FinanceUi.printBalanceSheet(financeManager.cooperBalanceSheet.getBalanceSheet());","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"ChrisLangton"},"content":"        } else if (financeFlag \u003d\u003d FinanceCommand.CF) {","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"ChrisLangton"},"content":"            if (isEmptyCf) {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"ChrisLangton"},"content":"                throw new EmptyFinancialStatementException();","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"ChrisLangton"},"content":"            FinanceUi.printCashFlowStatement(financeManager.cooperCashFlowStatement.getCashFlowStatement());","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"ChrisLangton":57,"Rrraaaeee":3,"theeugenechong":4}},{"path":"src/main/java/cooper/command/LogoutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.CooperState;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.parser.CommandParser;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":" * Logs the user out of their current account.","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"public class LogoutCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager,","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"                        StorageManager storageManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"        CommandParser.setCooperState(CooperState.LOGOUT);","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Rrraaaeee":12,"theeugenechong":8}},{"path":"src/main/java/cooper/command/MeetingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.command;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"import cooper.meetings.MeetingManager;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"fansxx"},"content":"import cooper.ui.MeetingsUi;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"fansxx"},"content":"public class MeetingsCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"fansxx"},"content":"     * The override function for executing the \u0027add\u0027 command, calls for \u0027add\u0027 and subsequently","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"fansxx"},"content":"     * printing the status to the command line if and only if","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"fansxx"},"content":"     * the command is being accessed by an \u0027admin\u0027 level user.","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"fansxx"},"content":"     * @param signInDetails Sign in details of user to provide correct access","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"fansxx"},"content":"     * @param resourcesManager Provides access to manipulate data in the cOOPer\u0027s {@code FinanceManager},","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"fansxx"},"content":"     *                         {@code MeetingsManager} and {@code ForumManager}","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"fansxx"},"content":"     * @param storageManager Stores data which has just been added","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"fansxx"},"content":"    @Override        ","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"fansxx"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager,","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"fansxx"},"content":"                        StorageManager storageManager) throws InvalidAccessException {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"fansxx"},"content":"        String username \u003d signInDetails.getUsername();","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"fansxx"},"content":"        MeetingManager meetingManager \u003d resourcesManager.getMeetingManager();","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"fansxx"},"content":"        MeetingsUi.printMeetings(meetingManager.getUserSpecificMeetings(username));","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"Rrraaaeee":5,"fansxx":24,"theeugenechong":2}},{"path":"src/main/java/cooper/command/PostAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.command;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.ForumUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.forum.ForumManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":" * The child class of Command that handles the \u0027post add\u0027 command specifically.","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"public class PostAddCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"    private final String content;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"    public PostAddCommand(String content) {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"        super();","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"        this.content \u003d content;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"     * The override function for executing the \u0027add\u0027 command, calls for \u0027add\u0027 and subsequently","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"     * printing the status to the command line if and only if","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"     * the command is being accessed by an \u0027admin\u0027 level user.","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"     * @param signInDetails Sign in details of user to provide correct access","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"     * @param resourcesManager Provides access to manipulate data in the cOOPer\u0027s {@code FinanceManager},","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"     *                         {@code MeetingsManager} and {@code ForumManager}","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"     * @param storageManager Stores data which has just been added","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager,","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"                        StorageManager storageManager) throws InvalidAccessException {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"        UserRole userRole \u003d signInDetails.getUserRole();","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"        ForumManager forumManager \u003d resourcesManager.getForumManager(userRole);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"        if (forumManager \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"            throw new InvalidAccessException();","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"        String username \u003d signInDetails.getUsername();","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"        forumManager.addPost(username, content);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"        storageManager.saveForum(forumManager);","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"        ForumUi.printNewPostCommand(username, content);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"Rrraaaeee":45,"theeugenechong":2}},{"path":"src/main/java/cooper/command/PostCommentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.InvalidForumPostIdException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.ForumUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.forum.ForumManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":" * The child class of Command that handles the \u0027post comment\u0027 command specifically.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"public class PostCommentCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"    private final int postId;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"    private final String content;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"    public PostCommentCommand(int postId, String content) {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"        super();","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"        this.postId \u003d postId;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"        this.content \u003d content;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"     * The override function for executing the \u0027add\u0027 command, calls for \u0027add\u0027 and subsequently","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"     * printing the status to the command line if and only if","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"     * the command is being accessed by an \u0027admin\u0027 level user.","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"     * @param signInDetails Sign in details of user to provide correct access","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"     * @param resourcesManager Provides access to manipulate data in the cOOPer\u0027s {@code FinanceManager},","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"     *                         {@code MeetingsManager} and {@code ForumManager}","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"     * @param storageManager Stores data which has just been added","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager,","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"                        StorageManager storageManager) throws InvalidAccessException {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"        UserRole userRole \u003d signInDetails.getUserRole();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"        ForumManager forumManager \u003d resourcesManager.getForumManager(userRole);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"        if (forumManager \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"            throw new InvalidAccessException();","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"            String username \u003d signInDetails.getUsername();","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"            String postContent \u003d forumManager.commentPost(username, content, postId - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"            storageManager.saveForum(forumManager);","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"            ForumUi.printCommentPostCommand(username, postContent, content);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"        } catch (InvalidForumPostIdException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"            ForumUi.printInvalidForumPostIndexError();","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Rrraaaeee":52,"theeugenechong":2}},{"path":"src/main/java/cooper/command/PostDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.command;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.InvalidForumDeleteByNonOwnerException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.InvalidForumPostIdException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.ForumUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.forum.ForumManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":" * The child class of Command that handles the \u0027post delete\u0027 command specifically.","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"public class PostDeleteCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"    private final int postId;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"    public PostDeleteCommand(int postId) {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"        super();","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"        this.postId \u003d postId;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"     * The override function for executing the \u0027add\u0027 command, calls for \u0027add\u0027 and subsequently","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"     * printing the status to the command line if and only if","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"     * the command is being accessed by an \u0027admin\u0027 level user.","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"     * @param signInDetails Sign in details of user to provide correct access","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"     * @param resourcesManager Provides access to manipulate data in the cOOPer\u0027s {@code FinanceManager},","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"     *                         {@code MeetingsManager} and {@code ForumManager}","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"     * @param storageManager Stores data which has just been added","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager,","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"                        StorageManager storageManager) throws InvalidAccessException {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"        UserRole userRole \u003d signInDetails.getUserRole();","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"        ForumManager forumManager \u003d resourcesManager.getForumManager(userRole);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"        if (forumManager \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"            throw new InvalidAccessException();","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"            String username \u003d signInDetails.getUsername();","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"            String contentDeleted \u003d forumManager.deletePost(username, postId - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"            storageManager.saveForum(forumManager);","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"            ForumUi.printDeletePostCommand(username, contentDeleted);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"        } catch (InvalidForumPostIdException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"            ForumUi.printInvalidForumPostIndexError();","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"        } catch (InvalidForumDeleteByNonOwnerException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"            ForumUi.printInvalidForumDeleteByNonOwnerError();","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"Rrraaaeee":53,"theeugenechong":2}},{"path":"src/main/java/cooper/command/PostListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.InvalidForumPostIdException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.ForumUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.forum.ForumManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":" * The child class of Command that handles the \u0027post list\u0027 command specifically.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"public class PostListCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"    private final Integer postId;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"    public PostListCommand(Integer postId) {","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"        super();","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"        this.postId \u003d postId;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"     * The override function for executing the \u0027add\u0027 command, calls for \u0027add\u0027 and subsequently","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"     * printing the status to the command line if and only if","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"     * the command is being accessed by an \u0027admin\u0027 level user.","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"     * @param signInDetails Sign in details of user to provide correct access","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"     * @param resourcesManager Provides access to manipulate data in the cOOPer\u0027s {@code FinanceManager},","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"     *                         {@code MeetingsManager} and {@code ForumManager}","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"     * @param storageManager Stores data which has just been added","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager,","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"                        StorageManager storageManager) throws InvalidAccessException {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"        UserRole userRole \u003d signInDetails.getUserRole();","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"        ForumManager forumManager \u003d resourcesManager.getForumManager(userRole);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"        if (forumManager \u003d\u003d null) {","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"            throw new InvalidAccessException();","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"        if (postId \u003d\u003d null) {","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"            forumManager.listPosts();","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"            try {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"                forumManager.listPost(postId - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"            } catch (InvalidForumPostIdException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"                ForumUi.printInvalidForumPostIndexError();","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Rrraaaeee":51,"theeugenechong":2}},{"path":"src/main/java/cooper/command/ProjectionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.command;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.EmptyFinancialStatementException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidProjectionException;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"import cooper.finance.FinanceManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"import cooper.ui.FinanceUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"public class ProjectionCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"    public int years;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    public int oldIndex \u003d 9;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"    public ProjectionCommand(int years) {","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"        super();","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"        this.years \u003d years;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager,","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"                        StorageManager storageManager) throws InvalidAccessException, EmptyFinancialStatementException,","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"            InvalidProjectionException {","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"        UserRole userRole \u003d signInDetails.getUserRole();","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"        FinanceManager financeManager \u003d resourcesManager.getFinanceManager(userRole);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"        if (financeManager \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"            throw new InvalidAccessException();","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"        boolean isEmptyCf \u003d isEmptyFinancialStatement(financeManager.cooperCashFlowStatement.getCashFlowStatement());","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"        if (isEmptyCf) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"            throw new EmptyFinancialStatementException();","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"        int newFreeCF \u003d financeManager.calculateFreeCashFlow(","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"                financeManager.cooperCashFlowStatement.getCashFlowStatement());","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"        int oldFreeCF \u003d financeManager.cooperCashFlowStatement.cashFlowStatement.get(oldIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"        int differenceFreeCF \u003d newFreeCF - oldFreeCF;","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"        double rateOfGrowth \u003d (differenceFreeCF / (double) oldFreeCF) * 100.0;","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"ChrisLangton"},"content":"        double finalGrowthValue \u003d financeManager.createProjection(newFreeCF, rateOfGrowth, years);","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"ChrisLangton"},"content":"        FinanceUi.printProjections(finalGrowthValue, financeManager.cooperProjection.getProjection());","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"ChrisLangton"},"content":"        financeManager.cooperProjection.getProjection().clear();","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"ChrisLangton":49}},{"path":"src/main/java/cooper/command/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.command;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.InvalidTimeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.DuplicateMeetingException;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.CannotScheduleMeetingException;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.InvalidAccessException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"fansxx"},"content":"import cooper.meetings.MeetingManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"fansxx"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"fansxx"},"content":"import cooper.ui.MeetingsUi;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"fansxx"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"fansxx"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"fansxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"fansxx"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"fansxx"},"content":"    private final String meetingName;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"fansxx"},"content":"    private final String time;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"fansxx"},"content":"    private final ArrayList\u003cString\u003e usernames;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"fansxx"},"content":"    public ScheduleCommand(String meetingName, ArrayList\u003cString\u003e usernames, String time) {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"fansxx"},"content":"        this.meetingName \u003d meetingName;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"fansxx"},"content":"        this.usernames \u003d usernames;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"fansxx"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"fansxx"},"content":"     * The override function for executing the \u0027add\u0027 command, calls for \u0027add\u0027 and subsequently","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"fansxx"},"content":"     * printing the status to the command line if and only if","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"fansxx"},"content":"     * the command is being accessed by an \u0027admin\u0027 level user.","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"fansxx"},"content":"     * @param signInDetails Sign in details of user to provide correct access","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"fansxx"},"content":"     * @param resourcesManager Provides access to manipulate data in the cOOPer\u0027s {@code FinanceManager},","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"fansxx"},"content":"     *                         {@code MeetingsManager} and {@code ForumManager}","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"fansxx"},"content":"     * @param storageManager Stores data which has just been added","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"fansxx"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"fansxx"},"content":"    public void execute(SignInDetails signInDetails, ResourcesManager resourcesManager,","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"fansxx"},"content":"                        StorageManager storageManager) throws InvalidAccessException {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"fansxx"},"content":"        String username \u003d signInDetails.getUsername();","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"fansxx"},"content":"        UserRole userRole \u003d signInDetails.getUserRole();","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"fansxx"},"content":"        MeetingManager meetingManager \u003d resourcesManager.getMeetingManager(userRole);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"fansxx"},"content":"        if (meetingManager \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"fansxx"},"content":"            throw new InvalidAccessException();","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"fansxx"},"content":"        // if time field is not entered, proceed to auto schedule a meeting at the earliest time","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"fansxx"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"fansxx"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"fansxx"},"content":"                usernames.add(username);","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"fansxx"},"content":"                meetingManager.autoScheduleMeeting(meetingName, usernames);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"fansxx"},"content":"                storageManager.saveMeetings(meetingManager);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"fansxx"},"content":"            } catch (CannotScheduleMeetingException e1) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"fansxx"},"content":"                MeetingsUi.showCannotScheduleMeetingException();","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"fansxx"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"fansxx"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"fansxx"},"content":"                usernames.add(username);","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"fansxx"},"content":"                meetingManager.manualScheduleMeeting(meetingName, usernames, time);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"fansxx"},"content":"                storageManager.saveMeetings(meetingManager);","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"fansxx"},"content":"            } catch (InvalidDateTimeFormatException e1) {","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"fansxx"},"content":"                MeetingsUi.showInvalidDateTimeFormatException();","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"fansxx"},"content":"            } catch (InvalidTimeException e2) {","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"fansxx"},"content":"                MeetingsUi.showInvalidTimeException();","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"fansxx"},"content":"            } catch (CannotScheduleMeetingException e3) {","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"fansxx"},"content":"                MeetingsUi.showCannotScheduleMeetingException();","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"fansxx"},"content":"            } catch (DuplicateMeetingException e4) {","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"fansxx"},"content":"                MeetingsUi.showDuplicateMeetingException();","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"fansxx":73,"theeugenechong":1}},{"path":"src/main/java/cooper/exceptions/AmountOutOfRangeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"public class AmountOutOfRangeException extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"ChrisLangton":7}},{"path":"src/main/java/cooper/exceptions/CannotScheduleMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"fansxx"},"content":"public class CannotScheduleMeetingException extends Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"fansxx":6}},{"path":"src/main/java/cooper/exceptions/DuplicateMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"public class DuplicateMeetingException extends Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"fansxx":4}},{"path":"src/main/java/cooper/exceptions/DuplicateUsernameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"fansxx"},"content":"public class DuplicateUsernameException extends Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"fansxx":6}},{"path":"src/main/java/cooper/exceptions/EmptyFinancialStatementException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"public class EmptyFinancialStatementException extends Exception {","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"ChrisLangton":4,"theeugenechong":2}},{"path":"src/main/java/cooper/exceptions/InvalidAccessException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":" * Exception to signal that a user with a non-admin role, i.e. employee is trying to access features for an admin.","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"public class InvalidAccessException extends Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"ChrisLangton":2,"theeugenechong":7}},{"path":"src/main/java/cooper/exceptions/InvalidAddFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"public class InvalidAddFormatException extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"ChrisLangton":6}},{"path":"src/main/java/cooper/exceptions/InvalidAssetException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"public class InvalidAssetException extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"ChrisLangton":6}},{"path":"src/main/java/cooper/exceptions/InvalidCommandFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":" * Exception to signal that the command entered by the user does not follow the correct format specified.","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":" * For example, the command is missing arguments or the command does not contain the correct keyword.","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"public class InvalidCommandFormatException extends Exception {","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"theeugenechong":10}},{"path":"src/main/java/cooper/exceptions/InvalidDateTimeFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"public class InvalidDateTimeFormatException extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"fansxx":4}},{"path":"src/main/java/cooper/exceptions/InvalidDocumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":" * Exception to signal that data an invalid document, i.e. a document that is neither bs nor cf has been specified by","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":" * the user via the \u0027generate\u0027 command.","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"public class InvalidDocumentException extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"theeugenechong":9}},{"path":"src/main/java/cooper/exceptions/InvalidFileDataException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":" * Exception to signal that data in cOOPer\u0027s storage files are not of the correct format, hence cannot be loaded","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":" * to cOOPer upon entry to the program.","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"public class InvalidFileDataException extends IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"    public InvalidFileDataException(String fileName) {","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"        super(fileName);","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theeugenechong":16}},{"path":"src/main/java/cooper/exceptions/InvalidForumDeleteByNonOwnerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"public class InvalidForumDeleteByNonOwnerException extends Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Rrraaaeee":7}},{"path":"src/main/java/cooper/exceptions/InvalidForumPostIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"public class InvalidForumPostIdException extends Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"Rrraaaeee":6}},{"path":"src/main/java/cooper/exceptions/InvalidLiabilityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"public class InvalidLiabilityException extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"ChrisLangton":6}},{"path":"src/main/java/cooper/exceptions/InvalidProjectionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"public class InvalidProjectionException extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"ChrisLangton":6}},{"path":"src/main/java/cooper/exceptions/InvalidScheduleFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"public class InvalidScheduleFormatException extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"fansxx":4}},{"path":"src/main/java/cooper/exceptions/InvalidTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"fansxx"},"content":"public class InvalidTimeException extends Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"fansxx":6}},{"path":"src/main/java/cooper/exceptions/InvalidUserRoleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":" * Exception to signal that the user is trying to sign in with an unrecognised role, i.e. a role which is not one of","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":" * admin or employee.","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"public class InvalidUserRoleException extends  Exception {","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"theeugenechong":10}},{"path":"src/main/java/cooper/exceptions/NoTimeEnteredException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"public class NoTimeEnteredException extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"fansxx":4}},{"path":"src/main/java/cooper/exceptions/NoUsernameAfterCommaException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"public class NoUsernameAfterCommaException extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"fansxx":4}},{"path":"src/main/java/cooper/exceptions/UnrecognisedCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.exceptions;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":" * Exception to signal that the command entered by the user is not any of the commands recognised by cOOPer.","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"public class UnrecognisedCommandException extends  Exception {","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"theeugenechong":9}},{"path":"src/main/java/cooper/finance/BalanceSheet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.finance;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"public class BalanceSheet {","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"    private static final int BS_SIZE \u003d 12;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"    public ArrayList\u003cInteger\u003e balanceSheet;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"    public static int balanceSheetStage \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"    public BalanceSheet() {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"        this.balanceSheet \u003d new ArrayList\u003c\u003e(BS_SIZE);","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"        for (int i \u003d 0; i \u003c BS_SIZE; i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"            this.balanceSheet.add(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"    public ArrayList\u003cInteger\u003e getBalanceSheet() {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"        return balanceSheet;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"ChrisLangton":23}},{"path":"src/main/java/cooper/finance/CashFlow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.finance;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"public class CashFlow {","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"    private static final int CF_SIZE \u003d 10;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"    public ArrayList\u003cInteger\u003e cashFlowStatement;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"    public static int cashFlowStage \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"    public CashFlow() {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"        this.cashFlowStatement \u003d new ArrayList\u003c\u003e(CF_SIZE);","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"        for (int i \u003d 0; i \u003c CF_SIZE; i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"            this.cashFlowStatement.add(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"    public ArrayList\u003cInteger\u003e getCashFlowStatement() {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"        return cashFlowStatement;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"ChrisLangton":23}},{"path":"src/main/java/cooper/finance/FinanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.finance;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.CooperState;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"public enum FinanceCommand {","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"    CF,","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"    BS,","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"    IDLE;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"    public static FinanceCommand getCommandFromState(CooperState state) {","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"        switch (state) {","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"        case CF:","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"            return CF;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"        case BS:","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"            return BS;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"        default:","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"            return IDLE;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"ChrisLangton":19,"Rrraaaeee":1,"theeugenechong":1}},{"path":"src/main/java/cooper/finance/FinanceManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.finance;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidProjectionException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.pdfgenerator.BalanceSheetGenerator;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.pdfgenerator.CashFlowStatementGenerator;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":" * Handles all actions and operations pertaining to financial assistance functions of the application.","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"public class FinanceManager {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    public BalanceSheet cooperBalanceSheet;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"    public CashFlow cooperCashFlowStatement;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"    public Projection cooperProjection;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    public static final int endOfOA \u003d 4; //INDEX","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"    public static final int endOfIA \u003d 6; //INDEX","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"    public static final int endOfFA \u003d 8; //INDEX","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"    public static final int freeCashFlow \u003d 9; //INDEX","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"    public static int netOA \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"    public static int netIA \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"    public static int netFA \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"    public static final int endOfAssets \u003d 5;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"    public static final int endOfLiabilities \u003d 9;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"    public static final int endOfSE \u003d 11;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"    public static int netAssets \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"    public static int netLiabilities \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"    public static int netSE \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"    public static int pastFCF \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"    public static int capExIndex \u003d 5;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"    public static int projectionIterator \u003d 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"    private final BalanceSheetGenerator balanceSheetGenerator;","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"    private final CashFlowStatementGenerator cashFlowStatementGenerator;","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"    public FinanceManager() {","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"        this.cooperBalanceSheet \u003d new BalanceSheet();","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"        this.cooperCashFlowStatement \u003d new CashFlow();","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"        this.balanceSheetGenerator \u003d new BalanceSheetGenerator();","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"        this.cashFlowStatementGenerator \u003d new CashFlowStatementGenerator();","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"        this.cooperProjection \u003d new Projection();","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"ChrisLangton"},"content":"     * Adds specified amount input by user to the balanceSheet, with specified inflow or outflow.","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"ChrisLangton"},"content":"     * @param amount amount inout by user","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"ChrisLangton"},"content":"     * @param isInflow boolean which specifies if {@code amount} is inflow or outflow","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"ChrisLangton"},"content":"    public void addBalance(int amount, boolean isInflow, int balanceSheetStage) {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"ChrisLangton"},"content":"        int signedAmount \u003d amount;","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"ChrisLangton"},"content":"        if (isInflow) {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"ChrisLangton"},"content":"            assert amount \u003e\u003d 0 : \"entry should be positive\";","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"ChrisLangton"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"ChrisLangton"},"content":"            signedAmount *\u003d -1;","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"ChrisLangton"},"content":"            assert amount * -1 \u003c 0 : \"entry should be negative\";","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"ChrisLangton"},"content":"        cooperBalanceSheet.getBalanceSheet().set(balanceSheetStage, signedAmount);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"ChrisLangton"},"content":"        if (balanceSheetStage \u003c\u003d endOfAssets) {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"ChrisLangton"},"content":"            netAssets +\u003d signedAmount;","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"ChrisLangton"},"content":"        } else if (balanceSheetStage \u003c\u003d endOfLiabilities) {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"ChrisLangton"},"content":"            netLiabilities +\u003d signedAmount;","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"ChrisLangton"},"content":"        } else if (balanceSheetStage \u003c\u003d endOfSE) {","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"ChrisLangton"},"content":"            netSE +\u003d signedAmount;","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"ChrisLangton"},"content":"        LOGGER.info(\"An entry to the balance sheet is created: \" + amount);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"ChrisLangton"},"content":"    public void addCashFlow(int amount, boolean isInflow, int cashFlowStage) {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"ChrisLangton"},"content":"        int signedAmount \u003d amount;","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"ChrisLangton"},"content":"        if (isInflow) {","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"ChrisLangton"},"content":"            assert amount \u003e\u003d 0 : \"entry should be positive\";","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"ChrisLangton"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"ChrisLangton"},"content":"            signedAmount *\u003d -1;","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"ChrisLangton"},"content":"            assert amount * -1 \u003c 0 : \"entry should be negative\";","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"ChrisLangton"},"content":"        cooperCashFlowStatement.getCashFlowStatement().set(cashFlowStage, signedAmount);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"ChrisLangton"},"content":"        if (cashFlowStage \u003c\u003d endOfOA) {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"ChrisLangton"},"content":"            netOA +\u003d signedAmount;","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"ChrisLangton"},"content":"        } else if (cashFlowStage \u003c\u003d endOfIA) {","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"ChrisLangton"},"content":"            netIA +\u003d signedAmount;","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"ChrisLangton"},"content":"        } else if (cashFlowStage \u003c\u003d endOfFA) {","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"ChrisLangton"},"content":"            netFA +\u003d signedAmount;","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"ChrisLangton"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"ChrisLangton"},"content":"            pastFCF +\u003d signedAmount;","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"ChrisLangton"},"content":"        LOGGER.info(\"An entry to the cash flow statement is created: \" + amount);","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"ChrisLangton"},"content":"    @SuppressWarnings(\"UnnecessaryLocalVariable\")","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"ChrisLangton"},"content":"    public int calculateFreeCashFlow(ArrayList\u003cInteger\u003e cashFlowStatement) {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"ChrisLangton"},"content":"        int freeCashFlow \u003d netOA - cashFlowStatement.get(capExIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"ChrisLangton"},"content":"        return freeCashFlow;","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"ChrisLangton"},"content":"    public double createProjection(double principal, double rate, int years) throws InvalidProjectionException {","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"ChrisLangton"},"content":"        if (years \u003c\u003d 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"ChrisLangton"},"content":"            throw new InvalidProjectionException();","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"ChrisLangton"},"content":"        if (projectionIterator \u003c\u003d years) {","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"ChrisLangton"},"content":"            double growth \u003d (principal * Math.pow(1 + (rate / 100), projectionIterator));","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"ChrisLangton"},"content":"            cooperProjection.getProjection().add(growth);","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"ChrisLangton"},"content":"            projectionIterator++;","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"ChrisLangton"},"content":"            return createProjection(growth, rate, years);","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"ChrisLangton"},"content":"        projectionIterator \u003d 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"ChrisLangton"},"content":"        return principal;","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"ChrisLangton"},"content":"    public static void runTotalAmountsCheck(ArrayList\u003cInteger\u003e balanceSheet) {","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"ChrisLangton"},"content":"        netAssets \u003d netLiabilities \u003d netSE \u003d 0;","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"ChrisLangton"},"content":"        for (int i \u003d 0; i \u003c balanceSheet.size(); i++) {","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"ChrisLangton"},"content":"            if (i \u003c\u003d endOfAssets) {","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"ChrisLangton"},"content":"                netAssets +\u003d balanceSheet.get(i);","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"ChrisLangton"},"content":"            } else if (i \u003c\u003d endOfLiabilities) {","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"ChrisLangton"},"content":"                netLiabilities +\u003d balanceSheet.get(i);","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"ChrisLangton"},"content":"                netSE +\u003d balanceSheet.get(i);","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"ChrisLangton"},"content":"    public static void runNetAmountsCheck(ArrayList\u003cInteger\u003e cashFlowStatement) {","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"ChrisLangton"},"content":"        netOA \u003d netIA \u003d netFA \u003d pastFCF \u003d 0;","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"ChrisLangton"},"content":"        for (int i \u003d 0; i \u003c cashFlowStatement.size(); i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"ChrisLangton"},"content":"            if (i \u003c\u003d endOfOA) {","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"ChrisLangton"},"content":"                netOA +\u003d cashFlowStatement.get(i);","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"ChrisLangton"},"content":"            } else if (i \u003c\u003d endOfIA) {","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"ChrisLangton"},"content":"                netIA +\u003d cashFlowStatement.get(i);","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"ChrisLangton"},"content":"            } else if (i \u003c\u003d endOfFA) {","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"ChrisLangton"},"content":"                netFA +\u003d cashFlowStatement.get(i);","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"ChrisLangton"},"content":"                pastFCF +\u003d cashFlowStatement.get(i);","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"theeugenechong"},"content":"    //@@author theeugenechong","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"theeugenechong"},"content":"     * Creates a pdf version of the balance sheet using an online LaTeX compiler. A backup text file is created","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"theeugenechong"},"content":"     * in the event that there is no internet connection.","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"theeugenechong"},"content":"    public void generateBalanceSheetAsPdf() {","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"theeugenechong"},"content":"        runTotalAmountsCheck(cooperBalanceSheet.getBalanceSheet());","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"theeugenechong"},"content":"        balanceSheetGenerator.addAssets(cooperBalanceSheet);","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"theeugenechong"},"content":"        balanceSheetGenerator.addLiabilities(cooperBalanceSheet);","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"theeugenechong"},"content":"        balanceSheetGenerator.addShareholderEquity(cooperBalanceSheet);","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"theeugenechong"},"content":"        balanceSheetGenerator.addCheckValue();","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"theeugenechong"},"content":"        balanceSheetGenerator.compilePdfAndSend();","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"theeugenechong"},"content":"     * Creates a pdf version of the cash flow statement using an online LaTeX compiler. A backup text file is created","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"theeugenechong"},"content":"     * in the event that there is no internet connection.","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"theeugenechong"},"content":"    public void generateCashFlowStatementAsPdf() {","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"theeugenechong"},"content":"        runNetAmountsCheck(cooperCashFlowStatement.getCashFlowStatement());","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"theeugenechong"},"content":"        cashFlowStatementGenerator.addCfFromOperatingActivities(cooperCashFlowStatement);","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"theeugenechong"},"content":"        cashFlowStatementGenerator.addCfFromInvestingActivities(cooperCashFlowStatement);","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"theeugenechong"},"content":"        cashFlowStatementGenerator.addCfFromFinancingActivities(cooperCashFlowStatement);","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"theeugenechong"},"content":"        cashFlowStatementGenerator.addFreeCashFlow(cooperCashFlowStatement);","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"theeugenechong"},"content":"        cashFlowStatementGenerator.compilePdfAndSend();","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"ChrisLangton":139,"theeugenechong":34}},{"path":"src/main/java/cooper/finance/Projection.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.finance;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"public class Projection {","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"    public ArrayList\u003cDouble\u003e growthValues;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"    public Projection() {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"        this.growthValues \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"    public ArrayList\u003cDouble\u003e getProjection() {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"        return growthValues;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"ChrisLangton":18}},{"path":"src/main/java/cooper/finance/pdfgenerator/BalanceSheetGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.finance.pdfgenerator;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.BalanceSheet;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.FinanceManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FileIoUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FinanceUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import cooper.util.Util;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"import java.net.HttpURLConnection;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"import java.net.MalformedURLException;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"import java.net.URL;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":" * Generates the current balance sheet as a pdf file formatted using LaTeX templates.","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"public class BalanceSheetGenerator extends PdfGenerator {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    /* Paths of the files containing the LaTeX templates */","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"    private static final String BS_TEMPLATE_PATH \u003d \"/pdf/bs/bsTemplate.tex\";","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"    private static final String BS_HEADER_TEMPLATE_PATH \u003d \"/pdf/bs/bsHeaderTemplate.tex\";","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"    private static final String BS_ENTRY_TEMPLATE_PATH \u003d \"/pdf/bs/bsEntryTemplate.tex\";","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"    private static final String BS_SUMMARY_TEMPLATE_PATH \u003d \"/pdf/bs/bsSummaryTemplate.tex\";","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"    private static final String BS_CHECK_VALUE_TEMPLATE_PATH \u003d \"/pdf/bs/bsCheckValue.tex\";","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"    /* Index of entries in the balance sheet*/","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"    protected static final int START_OF_ASSETS \u003d 0;","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"    protected static final int START_OF_LIABILITIES \u003d 6;","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"    protected static final int START_OF_SE \u003d 10;","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"    /* Extra identifier for the check value of the balance sheet*/","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"    protected static final String CHECK_VALUE_IDENTIFIER \u003d \"% {Balance}\";","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"    /* Extra template attribute for the check value of the balance sheet*/","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"    private String checkValueTemplate;","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"    /* Content of the headers to be added to each section of the balance sheet */","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"    private static final String ASSETS \u003d \"Assets\";","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"    private static final String LIABILITIES \u003d \"Liabilities\";","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"    private static final String SHAREHOLDERS_EQUITY \u003d \"Shareholder\u0027s Equity\";","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"    /* Names of the files created */","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"    private static final String BS_PDF_FILE \u003d \"/BalanceSheet.pdf\";","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"    private static final String BS_BACKUP_FILE \u003d \"/backupBs.txt\";","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"     * The constructor loads the templates from the template files.","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"    public BalanceSheetGenerator() {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"        super();","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"        loadTemplate(BS_TEMPLATE_PATH);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"        loadHeaderTemplate(BS_HEADER_TEMPLATE_PATH);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"        loadEntryTemplate(BS_ENTRY_TEMPLATE_PATH);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"        loadSummaryTemplate(BS_SUMMARY_TEMPLATE_PATH);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"        loadCheckValueTemplate();","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"     * Loads the check value template from {@code resourcePath} and converts it to a string.","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"    private void loadCheckValueTemplate() {","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"        InputStream checkValueTemplateStream \u003d this.getClass().getResourceAsStream(BS_CHECK_VALUE_TEMPLATE_PATH);","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"        checkValueTemplate \u003d Util.inputStreamToString(checkValueTemplateStream);","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"     * Add the assets section from {@code balanceSheet} into {@code pdfContent}.","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"     * @param balanceSheet Balance sheet containing the entries to be added to the pdf file.","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"    public void addAssets(BalanceSheet balanceSheet) {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"        ArrayList\u003cInteger\u003e bs \u003d balanceSheet.getBalanceSheet();","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"        createHeader(ASSETS);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"        for (int i \u003d START_OF_ASSETS; i \u003c\u003d FinanceManager.endOfAssets; i++) {","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"            createEntry(FinanceUi.BALANCE_SHEET_UI[i].trim(), bs.get(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"        createSummary(ASSETS, FinanceManager.netAssets);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"     * Add the liabilities section from {@code balanceSheet} into {@code pdfContent}.","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"     * @param balanceSheet Balance sheet containing the entries to be added to the pdf file.","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"    public void addLiabilities(BalanceSheet balanceSheet) {","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"        ArrayList\u003cInteger\u003e bs \u003d balanceSheet.getBalanceSheet();","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"        createHeader(LIABILITIES);","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"        for (int i \u003d START_OF_LIABILITIES; i \u003c\u003d FinanceManager.endOfLiabilities; i++) {","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"            createEntry(FinanceUi.BALANCE_SHEET_UI[i].trim(), bs.get(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"        createSummary(LIABILITIES, FinanceManager.netLiabilities);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"     * Add the shareholder\u0027s equity section from {@code balanceSheet} into {@code pdfContent}.","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"theeugenechong"},"content":"     * @param balanceSheet Balance sheet containing the entries to be added to the pdf file.","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"    public void addShareholderEquity(BalanceSheet balanceSheet) {","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"        ArrayList\u003cInteger\u003e bs \u003d balanceSheet.getBalanceSheet();","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"        createHeader(SHAREHOLDERS_EQUITY);","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"        for (int i \u003d START_OF_SE; i \u003c\u003d FinanceManager.endOfSE; i++) {","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"            createEntry(FinanceUi.BALANCE_SHEET_UI[i].trim(), bs.get(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"        createSummary(SHAREHOLDERS_EQUITY, FinanceManager.netSE);","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"theeugenechong"},"content":"     * Creates the final check value of the balance sheet by replacing the identifier from the template","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"theeugenechong"},"content":"     * with {@code balance}.","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"theeugenechong"},"content":"     * @param balance check value of balance sheet which is assets + liabilities - SE","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"theeugenechong"},"content":"    private void createCheckValue(String balance) {","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"theeugenechong"},"content":"        String checkValue \u003d checkValueTemplate.replace(CHECK_VALUE_IDENTIFIER, balance);","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"theeugenechong"},"content":"        pdfContent.add(checkValue);","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"theeugenechong"},"content":"     * Computes and adds the check value of the {@code balanceSheet} into {@code pdfContent}.","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"theeugenechong"},"content":"    public void addCheckValue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"theeugenechong"},"content":"        int balance \u003d FinanceManager.netAssets + FinanceManager.netLiabilities - FinanceManager.netSE;","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"theeugenechong"},"content":"        String balanceAsString \u003d Integer.valueOf(balance).toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"theeugenechong"},"content":"        createCheckValue(balanceAsString);","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"theeugenechong"},"content":"     * Sends the LaTeX file representing the balance sheet to be compiled by an online LaTeX editor by making a","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"theeugenechong"},"content":"     * JSON post request. In the event that there is a connection problem, an error message is printed and a backup","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"theeugenechong"},"content":"     * {@code .txt} file is created.","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"theeugenechong"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"theeugenechong"},"content":"    public void compilePdfAndSend() {","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"theeugenechong"},"content":"        String texFileToCompile \u003d formTexFile();","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"theeugenechong"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"theeugenechong"},"content":"            URL url \u003d new URL(TEX_LIVE_URL);","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"theeugenechong"},"content":"            HttpURLConnection con \u003d (HttpURLConnection)url.openConnection();","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"theeugenechong"},"content":"            sendPdf(con, texFileToCompile);","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"theeugenechong"},"content":"            int replyCode \u003d con.getResponseCode();","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"theeugenechong"},"content":"            if (replyCode \u003d\u003d 200) {","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"theeugenechong"},"content":"                // send success","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"theeugenechong"},"content":"                byte[] buffer \u003d con.getInputStream().readAllBytes();","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"theeugenechong"},"content":"                createPdf(buffer, BS_PDF_FILE);","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"theeugenechong"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"theeugenechong"},"content":"                FileIoUi.showPostRequestError();","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"theeugenechong"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"theeugenechong"},"content":"        } catch (MalformedURLException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"theeugenechong"},"content":"            FileIoUi.showMalformedUrlError();","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"theeugenechong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"theeugenechong"},"content":"            FileIoUi.showConnectionError();","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"theeugenechong"},"content":"            createBackup(formTexFile(), BS_BACKUP_FILE);","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"theeugenechong"},"content":"        } finally {","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"theeugenechong"},"content":"            pdfContent.clear();","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"theeugenechong":160}},{"path":"src/main/java/cooper/finance/pdfgenerator/CashFlowStatementGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.finance.pdfgenerator;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.CashFlow;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.FinanceManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FileIoUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FinanceUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import java.net.HttpURLConnection;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import java.net.MalformedURLException;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"import java.net.URL;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":" * Generates the current cash flow statement as a pdf file formatted using LaTeX templates.","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"public class CashFlowStatementGenerator extends PdfGenerator {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    /* Paths of the files containing the LaTeX templates */","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"    private static final String CF_TEMPLATE_PATH \u003d \"/pdf/cf/cfTemplate.tex\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    private static final String CF_HEADER_TEMPLATE_PATH \u003d \"/pdf/cf/cfHeaderTemplate.tex\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"    private static final String CF_ENTRY_TEMPLATE_PATH \u003d \"/pdf/cf/cfEntryTemplate.tex\";","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"    private static final String CF_SUMMARY_TEMPLATE_PATH \u003d \"/pdf/cf/cfSummaryTemplate.tex\";","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"    /* Content of the headers to be added to each section of the cash flow statement */","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"    private static final String OPERATING_ACTIVITIES \u003d \"Operating Activities\";","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"    private static final String INVESTING_ACTIVITIES \u003d \"Investing Activities\";","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"    private static final String FINANCING_ACTIVITIES \u003d \"Financing Activities\";","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"    private static final String FREE_CASH_FLOW \u003d \"Free Cash Flow\";","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"    /* Names of the files created */","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"    private static final String CF_PDF_FILE \u003d \"/CashFlowStatement.pdf\";","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"    private static final String CF_BACKUP_FILE \u003d \"/backupCf.txt\";","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"    /* Index of entries in the cash flow statement*/","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"    private static final int START_OF_OA \u003d 0;","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"    private static final int START_OF_IA \u003d 5;","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"    private static final int START_OF_FA \u003d 7;","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"    private static final int FCF_INDEX \u003d 9;","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"     * The constructor loads the templates from the template files.","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"    public CashFlowStatementGenerator() {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"        super();","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"        loadTemplate(CF_TEMPLATE_PATH);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"        loadHeaderTemplate(CF_HEADER_TEMPLATE_PATH);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"        loadEntryTemplate(CF_ENTRY_TEMPLATE_PATH);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"        loadSummaryTemplate(CF_SUMMARY_TEMPLATE_PATH);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"     * Add the OA section from {@code cashFlow} into {@code pdfContent}.","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"     * @param cashFlow Cash flow statement containing the entries to be added to the pdf file.","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"    public void addCfFromOperatingActivities(CashFlow cashFlow) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"        ArrayList\u003cInteger\u003e cf \u003d cashFlow.getCashFlowStatement();","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"        createHeader(OPERATING_ACTIVITIES);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"        for (int i \u003d START_OF_OA; i \u003c\u003d FinanceManager.endOfOA; i++) {","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"            createEntry(FinanceUi.CASH_FLOW_UI[i].trim(), cf.get(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"        createSummary(OPERATING_ACTIVITIES, FinanceManager.netOA);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"     * Add the IA section from {@code cashFlow} into {@code pdfContent}.","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"     * @param cashFlow Cash flow statement containing the entries to be added to the pdf file.","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"    public void addCfFromInvestingActivities(CashFlow cashFlow) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"        ArrayList\u003cInteger\u003e cf \u003d cashFlow.getCashFlowStatement();","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"        createHeader(INVESTING_ACTIVITIES);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"        for (int i \u003d START_OF_IA; i \u003c\u003d FinanceManager.endOfIA; i++) {","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"            createEntry(FinanceUi.CASH_FLOW_UI[i].trim(), cf.get(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"        createSummary(INVESTING_ACTIVITIES, FinanceManager.netIA);","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"theeugenechong"},"content":"     * Add the FA section from {@code cashFlow} into {@code pdfContent}.","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"     * @param cashFlow Cash flow statement containing the entries to be added to the pdf file.","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"    public void addCfFromFinancingActivities(CashFlow cashFlow) {","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"        ArrayList\u003cInteger\u003e cf \u003d cashFlow.getCashFlowStatement();","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"        createHeader(FINANCING_ACTIVITIES);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"        for (int i \u003d START_OF_FA; i \u003c\u003d FinanceManager.endOfFA; i++) {","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"            createEntry(FinanceUi.CASH_FLOW_UI[i].trim(), cf.get(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"        createSummary(FINANCING_ACTIVITIES, FinanceManager.netFA);","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"     * Adds Free Cash Flow section from {@code cashFlow} into {@code pdfContent}.","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"     * @param cashFlow Cash flow statement containing the entries to be added to the pdf file.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"    public void addFreeCashFlow(CashFlow cashFlow) {","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"theeugenechong"},"content":"        ArrayList\u003cInteger\u003e cf \u003d cashFlow.getCashFlowStatement();","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"        createHeader(FREE_CASH_FLOW);","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"        createEntry(FREE_CASH_FLOW, cf.get(FCF_INDEX));","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"     * Sends the LaTeX file representing the cash flow statement to be compiled by an online LaTeX editor by making a","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"     * JSON post request. In the event that there is a connection problem, an error message is printed and a backup","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"     * {@code .txt} file is created.","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"theeugenechong"},"content":"    public void compilePdfAndSend() {","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"theeugenechong"},"content":"        String texFileToCompile \u003d formTexFile();","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"theeugenechong"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"theeugenechong"},"content":"            URL url \u003d new URL(TEX_LIVE_URL);","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"theeugenechong"},"content":"            HttpURLConnection con \u003d (HttpURLConnection)url.openConnection();","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"theeugenechong"},"content":"            sendPdf(con, texFileToCompile);","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"theeugenechong"},"content":"            int replyCode \u003d con.getResponseCode();","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"theeugenechong"},"content":"            if (replyCode \u003d\u003d 200) {","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"theeugenechong"},"content":"                // send success","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"theeugenechong"},"content":"                byte[] buffer \u003d con.getInputStream().readAllBytes();","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"theeugenechong"},"content":"                createPdf(buffer, CF_PDF_FILE);","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"theeugenechong"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"theeugenechong"},"content":"                FileIoUi.showPostRequestError();","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"theeugenechong"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"theeugenechong"},"content":"        } catch (MalformedURLException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"theeugenechong"},"content":"            FileIoUi.showMalformedUrlError();","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"theeugenechong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"theeugenechong"},"content":"            FileIoUi.showConnectionError();","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"theeugenechong"},"content":"            createBackup(formTexFile(), CF_BACKUP_FILE);","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"theeugenechong"},"content":"        } finally {","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"theeugenechong"},"content":"            pdfContent.clear();","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"theeugenechong":134}},{"path":"src/main/java/cooper/finance/pdfgenerator/PdfGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.finance.pdfgenerator;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FileIoUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.util.Util;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import java.io.File;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"import java.io.OutputStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"import java.net.HttpURLConnection;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":" * Generates the pdf file for balance sheet / cash flow statement.","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"public abstract class PdfGenerator {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    protected static final String TEX_LIVE_URL \u003d \"https://texlive.net/cgi-bin/latexcgi\";","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"    protected static final String LINE_FEED \u003d \"\\r\\n\";","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"    protected static final String GENERATED_FILE_DIR \u003d \"output\";","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"    /* Identifiers used for creating the pdf */","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"    protected static final String TYPE_IDENTIFIER \u003d \"% {Type}\";","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"    protected static final String DESCRIPTION_IDENTIFIER \u003d \"% {Description}\";","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"    protected static final String AMOUNT_IDENTIFIER \u003d \"% {Amount}\";","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"    protected static final String TOTAL_IDENTIFIER \u003d \"% {Total}\";","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"    protected static final String CONTENT_IDENTIFIER \u003d \"% {Content}\";","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"    protected final ArrayList\u003cString\u003e pdfContent;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"    protected String template;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"    protected String headerTemplate;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"    protected String entryTemplate;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"    protected String summaryTemplate;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"    public PdfGenerator() {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"        pdfContent \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"     * Loads the file template from {@code resourcePath} and converts it to a string.","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"     * @param resourcePath Path of the file template","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"    protected void loadTemplate(String resourcePath) {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"        InputStream templateStream \u003d this.getClass().getResourceAsStream(resourcePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"        template \u003d Util.inputStreamToString(templateStream);","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"     * Loads the section header template from {@code resourcePath} and converts it to a string.","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"     * @param resourcePath Path of the section header template","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"    protected void loadHeaderTemplate(String resourcePath) {","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"        // load header template","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"        InputStream headerTemplateStream \u003d this.getClass().getResourceAsStream(resourcePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"        headerTemplate \u003d Util.inputStreamToString(headerTemplateStream);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"     * Loads the entry template from {@code resourcePath} and converts it to a string. An entry refers to an entry in","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"     * the actual balance sheet.","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"     * @param resourcePath Path of the entry template","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"    protected void loadEntryTemplate(String resourcePath) {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"        // load entry template","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"        InputStream entryTemplateStream \u003d this.getClass().getResourceAsStream(resourcePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"        entryTemplate \u003d Util.inputStreamToString(entryTemplateStream);","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"     * Loads the summary template from {@code resourcePath} and converts it to a string. Summary is the section of","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"     * the pdf which shows Net and Total values.","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"     * @param resourcePath Path of the summary template","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"    protected void loadSummaryTemplate(String resourcePath) {","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"theeugenechong"},"content":"        // load summary template","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"        InputStream summaryTemplateStream \u003d this.getClass().getResourceAsStream(resourcePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"        summaryTemplate \u003d Util.inputStreamToString(summaryTemplateStream);","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"     * Creates the section header by replacing the identifiers from the template with {@code type}.","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"    protected void createHeader(String type) {","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"        String sectionHeader \u003d headerTemplate;","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"        sectionHeader \u003d sectionHeader.replace(TYPE_IDENTIFIER, type);","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"        pdfContent.add(sectionHeader);","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"     * Creates an entry by replacing the identifiers from the template with {@code description} and {@code amount} as","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"theeugenechong"},"content":"     * a string.","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"    protected void createEntry(String description, Integer amount) {","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"        String sectionEntry \u003d entryTemplate;","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"        sectionEntry \u003d sectionEntry.replace(DESCRIPTION_IDENTIFIER, description);","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"        sectionEntry \u003d sectionEntry.replace(AMOUNT_IDENTIFIER, amount.toString());","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"        pdfContent.add(sectionEntry);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"theeugenechong"},"content":"     * Creates the summary by replacing the identifiers from the template with {@code type} and {@code total} as a","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"theeugenechong"},"content":"     * string.","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"theeugenechong"},"content":"    protected void createSummary(String type, Integer total) {","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"theeugenechong"},"content":"        String sectionSummary \u003d summaryTemplate;","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"theeugenechong"},"content":"        sectionSummary \u003d sectionSummary.replace(TYPE_IDENTIFIER, type);","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"theeugenechong"},"content":"        sectionSummary \u003d sectionSummary.replace(TOTAL_IDENTIFIER, total.toString());","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"theeugenechong"},"content":"        pdfContent.add(sectionSummary);","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"theeugenechong"},"content":"     * Combines all the strings in {@code pdfContent} into a continuous string to be sent to a LaTeX editor.","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"theeugenechong"},"content":"     * @return a string representing the {@code .tex} file to be compiled.","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"theeugenechong"},"content":"    protected String formTexFile() {","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"theeugenechong"},"content":"        StringBuilder compiledContent \u003d new StringBuilder();","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"theeugenechong"},"content":"        for (String content : pdfContent) {","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"theeugenechong"},"content":"            compiledContent.append(content).append(System.lineSeparator());","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"theeugenechong"},"content":"        return template.replace(CONTENT_IDENTIFIER, compiledContent.toString());","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"Rrraaaeee"},"content":"    //@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"Rrraaaeee"},"content":"     * Sends the tex file formed to be compiled at the URL.","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"Rrraaaeee"},"content":"     * The following code mimic this curl command:","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"Rrraaaeee"},"content":"     * {@code curl -v -L -X POST -o document.pdf -F return\u003dpdf -F engine\u003dpdflatex}","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"Rrraaaeee"},"content":"     * -F \u0027filecontents[]\u003d\u0027 -F \u0027filename[]\u003ddocument.tex\u0027 \u0027https://texlive.net/cgi-bin/latexcgi\u0027","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"Rrraaaeee"},"content":"     * 1. there is extra 2 -- at every boundary","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"Rrraaaeee"},"content":"     * 2. there is extra 2 -- at last boundary","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Rrraaaeee"},"content":"    protected void sendPdf(HttpURLConnection con, String texFileToCompile) throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"Rrraaaeee"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"Rrraaaeee"},"content":"            con.setRequestMethod(\"POST\");","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"Rrraaaeee"},"content":"            con.setRequestProperty(\"Content-Type\", \"multipart/form-data; boundary\u003d--12345678\");","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"Rrraaaeee"},"content":"            con.setDoOutput(true);","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"Rrraaaeee"},"content":"            // Note: This is the POST multipart/form-data request packet format","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"Rrraaaeee"},"content":"            // +\"Content-Type: multipart/form-data\" + lineFeed","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"Rrraaaeee"},"content":"            byte[] input \u003d (\"----12345678\" + LINE_FEED","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"Rrraaaeee"},"content":"                    + \"Content-Disposition: form-data; name\u003d\\\"filecontents[]\\\"\" + LINE_FEED + LINE_FEED","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"Rrraaaeee"},"content":"                    + texFileToCompile + LINE_FEED","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"Rrraaaeee"},"content":"                    + \"----12345678\" + LINE_FEED","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"Rrraaaeee"},"content":"                    + \"Content-Disposition: form-data; name\u003d\\\"filename[]\\\"\" + LINE_FEED + LINE_FEED","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"Rrraaaeee"},"content":"                    + \"document.tex\" + LINE_FEED","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"Rrraaaeee"},"content":"                    + \"----12345678\" + LINE_FEED","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"Rrraaaeee"},"content":"                    + \"Content-Disposition: form-data; name\u003d\\\"engine\\\"\" + LINE_FEED + LINE_FEED","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"Rrraaaeee"},"content":"                    + \"pdflatex\" + LINE_FEED","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"Rrraaaeee"},"content":"                    + \"----12345678\" + LINE_FEED","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"Rrraaaeee"},"content":"                    + \"Content-Disposition: form-data; name\u003d\\\"return\\\"\" + LINE_FEED + LINE_FEED","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"Rrraaaeee"},"content":"                    + \"pdf\" + LINE_FEED","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"Rrraaaeee"},"content":"                    + \"----12345678\" + LINE_FEED","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"Rrraaaeee"},"content":"                    + \"--\").getBytes(StandardCharsets.UTF_8);","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"Rrraaaeee"},"content":"            OutputStream connectionOutput \u003d con.getOutputStream();","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"Rrraaaeee"},"content":"            connectionOutput.write(input, 0, input.length);","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"Rrraaaeee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"Rrraaaeee"},"content":"            throw new IOException();","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"theeugenechong"},"content":"    //@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"theeugenechong"},"content":"    //https://www.baeldung.com/httpurlconnection-post","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"theeugenechong"},"content":"    public abstract void compilePdfAndSend();","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":175,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"theeugenechong"},"content":"     * Creates the backup file in the event that the creation of the pdf file which requires an internet connection","lastModifiedDate":"2021-10-30"},{"lineNumber":177,"author":{"gitId":"theeugenechong"},"content":"     * fails.","lastModifiedDate":"2021-10-30"},{"lineNumber":178,"author":{"gitId":"theeugenechong"},"content":"     * @param texFileToCompile a string representing the contents of the tex file to be compiled","lastModifiedDate":"2021-10-30"},{"lineNumber":179,"author":{"gitId":"theeugenechong"},"content":"     * @param backupFileName name of the backup file","lastModifiedDate":"2021-10-30"},{"lineNumber":180,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":181,"author":{"gitId":"theeugenechong"},"content":"    @SuppressWarnings(\"ResultOfMethodCallIgnored\")","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"theeugenechong"},"content":"    protected void createBackup(String texFileToCompile, String backupFileName) {","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"theeugenechong"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"theeugenechong"},"content":"            File backupFile \u003d new File(GENERATED_FILE_DIR + backupFileName);","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"theeugenechong"},"content":"            if (!backupFile.exists()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"theeugenechong"},"content":"                File backUpDir \u003d new File(GENERATED_FILE_DIR);","lastModifiedDate":"2021-11-05"},{"lineNumber":187,"author":{"gitId":"theeugenechong"},"content":"                backUpDir.mkdir();","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"theeugenechong"},"content":"                backupFile.createNewFile();","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"theeugenechong"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"theeugenechong"},"content":"            FileWriter fileWriter \u003d new FileWriter(GENERATED_FILE_DIR + backupFileName, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"theeugenechong"},"content":"            fileWriter.write(texFileToCompile);","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"theeugenechong"},"content":"            fileWriter.close();","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"theeugenechong"},"content":"            FileIoUi.showBackupFileSuccessfullyCreated();","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"theeugenechong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"theeugenechong"},"content":"            FileIoUi.showBackupFileCreationError(e);","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":201,"author":{"gitId":"theeugenechong"},"content":"     * Creates the pdf file.","lastModifiedDate":"2021-10-30"},{"lineNumber":202,"author":{"gitId":"theeugenechong"},"content":"     * @param response JSON response received from the online LaTeX editor","lastModifiedDate":"2021-10-30"},{"lineNumber":203,"author":{"gitId":"theeugenechong"},"content":"     * @param pdfName name of the pdf file created","lastModifiedDate":"2021-10-30"},{"lineNumber":204,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":205,"author":{"gitId":"theeugenechong"},"content":"    @SuppressWarnings(\"ResultOfMethodCallIgnored\")","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"theeugenechong"},"content":"    // https://www.baeldung.com/java-download-file","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"theeugenechong"},"content":"    protected void createPdf(byte[] response, String pdfName) {","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"theeugenechong"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"theeugenechong"},"content":"            File generatedPdf \u003d new File(GENERATED_FILE_DIR + pdfName);","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"theeugenechong"},"content":"            if (!generatedPdf.exists()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"theeugenechong"},"content":"                File pdfDir \u003d new File(GENERATED_FILE_DIR);","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"theeugenechong"},"content":"                pdfDir.mkdir();","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"theeugenechong"},"content":"                generatedPdf.createNewFile();","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"theeugenechong"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"theeugenechong"},"content":"            FileOutputStream fileOutputStream \u003d new FileOutputStream(GENERATED_FILE_DIR + pdfName);","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"theeugenechong"},"content":"            fileOutputStream.write(response);","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"theeugenechong"},"content":"            fileOutputStream.close();","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"theeugenechong"},"content":"            FileIoUi.showPdfSuccessfullyGenerated();","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"theeugenechong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"theeugenechong"},"content":"            FileIoUi.showPdfGenerationError(e);","lastModifiedDate":"2021-11-05"},{"lineNumber":222,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Rrraaaeee":38,"theeugenechong":187}},{"path":"src/main/java/cooper/forum/ForumComment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.forum;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"public class ForumComment extends ForumPostBase {","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"    public ForumComment(String username, String content) {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"        super(username, content);","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"Rrraaaeee":10}},{"path":"src/main/java/cooper/forum/ForumManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.forum;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.InvalidForumPostIdException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.InvalidForumDeleteByNonOwnerException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.ForumUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"public class ForumManager {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"    private final ArrayList\u003cForumPost\u003e forumPosts;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"    public ForumManager() {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"        forumPosts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"    public void addPost(String username, String content) {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"        forumPosts.add(new ForumPost(username, content));","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"    public void addComment(String username, String content, int postId)","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"            throws InvalidForumPostIdException {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"        checkValidPostId(postId);","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"        forumPosts.get(postId).addComment(username, content);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"    public String deletePost(String username, int postId) ","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"            throws InvalidForumPostIdException, InvalidForumDeleteByNonOwnerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"        checkValidPostId(postId);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"        ForumPost post \u003d forumPosts.get(postId);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"        if (post.getUsername().equals(username)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"            // can only delete one\u0027s own post","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"            String content \u003d forumPosts.get(postId).getContent();","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"            forumPosts.remove(postId);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"            return content;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"            throw new InvalidForumDeleteByNonOwnerException();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"    public String commentPost(String username, String content, int postId)  ","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"            throws InvalidForumPostIdException {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"        checkValidPostId(postId);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"        forumPosts.get(postId).addComment(username, content);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"        return forumPosts.get(postId).getContent(); // return the original post for Ui","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"    public void listPosts() {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"        ForumUi.printForumPosts(forumPosts);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"    public void listPost(int postId) throws InvalidForumPostIdException {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"Rrraaaeee"},"content":"        checkValidPostId(postId);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"Rrraaaeee"},"content":"        ForumUi.printForumPost(forumPosts, postId);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"Rrraaaeee"},"content":"    private void checkValidPostId(int postId) throws InvalidForumPostIdException {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"Rrraaaeee"},"content":"        if (postId \u003e\u003d forumPosts.size() || postId \u003c 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"Rrraaaeee"},"content":"            throw new InvalidForumPostIdException();","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Rrraaaeee"},"content":"    public ArrayList\u003cForumPost\u003e getForumPosts() {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Rrraaaeee"},"content":"        return forumPosts;","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Rrraaaeee":66,"theeugenechong":1}},{"path":"src/main/java/cooper/forum/ForumPost.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.forum;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"public class ForumPost extends ForumPostBase {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"    private final ArrayList\u003cForumComment\u003e forumComments;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"    public ForumPost(String username, String content) {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"        super(username, content);","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"        forumComments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"    public void addComment(String username, String content) {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"        forumComments.add(new ForumComment(username, content));","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"    public ArrayList\u003cForumComment\u003e getComments() {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"        return forumComments;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"Rrraaaeee":22}},{"path":"src/main/java/cooper/forum/ForumPostBase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.forum;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"public abstract class ForumPostBase {","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"    private final String content;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"    private final String username;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"    public ForumPostBase(String username, String content) {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"        this.username \u003d username;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"        this.content \u003d content;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"    public String getUsername() {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"        return username;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"    public String getContent() {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"        return content;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"        return \"@\" + username + \": \" + content;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"Rrraaaeee":25}},{"path":"src/main/java/cooper/log/CooperLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.log;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"fansxx"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"fansxx"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"fansxx"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"fansxx"},"content":"public class CooperLogger {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"fansxx"},"content":"    private static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"fansxx"},"content":"    public static void setupLogger() {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"fansxx"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"fansxx"},"content":"        // set up file handler","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"fansxx"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"fansxx"},"content":"            FileHandler fileHandler \u003d new FileHandler(\"cooperLogs.log\");","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"fansxx"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"fansxx"},"content":"            fileHandler.setLevel(Level.INFO);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"fansxx"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"fansxx"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"fansxx"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"fansxx":27}},{"path":"src/main/java/cooper/meetings/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.meetings;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"fansxx"},"content":"public class Meeting {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"fansxx"},"content":"    private final String meetingName;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"fansxx"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"fansxx"},"content":"    private final ArrayList\u003cString\u003e listOfAttendees;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"fansxx"},"content":"    public Meeting(String meetingName, LocalDateTime dateTime, ArrayList\u003cString\u003e listOfAttendees) {","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"fansxx"},"content":"        this.meetingName \u003d meetingName;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"fansxx"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"fansxx"},"content":"        this.listOfAttendees \u003d listOfAttendees;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"fansxx"},"content":"    public String getMeetingName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"fansxx"},"content":"        return meetingName;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"fansxx"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"fansxx"},"content":"        return dateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"fansxx"},"content":"    public ArrayList\u003cString\u003e getListOfAttendees() {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"fansxx"},"content":"        return listOfAttendees;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"fansxx":30}},{"path":"src/main/java/cooper/meetings/MeetingManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.meetings;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.InvalidTimeException;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.DuplicateUsernameException;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.DuplicateMeetingException;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.CannotScheduleMeetingException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"fansxx"},"content":"import cooper.ui.MeetingsUi;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"fansxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"fansxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"fansxx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"fansxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"fansxx"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"fansxx"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"fansxx"},"content":"public class MeetingManager {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"fansxx"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"dd-MM-yyyy HH:mm\";","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"fansxx"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"fansxx"},"content":"    private final TreeMap\u003cLocalDateTime, ArrayList\u003cString\u003e\u003e availability;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"fansxx"},"content":"    private final ArrayList\u003cMeeting\u003e meetingsList;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"fansxx"},"content":"    public MeetingManager() {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"fansxx"},"content":"        availability \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"fansxx"},"content":"        meetingsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"fansxx"},"content":"     * Checks if the time value inputted is in the correct format.","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"fansxx"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"fansxx"},"content":"     * @param value time value to be checked if it is in the correct format","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"fansxx"},"content":"     * @return true if the format is the same as TIME_FORMAT, false otherwise","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"fansxx"},"content":"    private boolean isValidDateTimeFormat(String value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"fansxx"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"fansxx"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"fansxx"},"content":"            LocalDateTime ldt \u003d LocalDateTime.parse(value, formatter);","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"fansxx"},"content":"            String result \u003d ldt.format(formatter);","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"fansxx"},"content":"            return result.equals(value);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"fansxx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"fansxx"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"fansxx"},"content":"    private boolean isStartOfHour(String time) {","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"fansxx"},"content":"        String[] hoursAndMinutes \u003d time.split(\":\");","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"fansxx"},"content":"        return hoursAndMinutes[1].equals(\"00\");","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"fansxx"},"content":"    private String getTime(String dateTime) {","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"fansxx"},"content":"        String[] dateTimeArray \u003d dateTime.split(\" \");","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"fansxx"},"content":"        return dateTimeArray[1];","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"fansxx"},"content":"    public TreeMap\u003cLocalDateTime, ArrayList\u003cString\u003e\u003e getAvailability() {","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"fansxx"},"content":"        return availability;","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"fansxx"},"content":"    public ArrayList\u003cMeeting\u003e getMeetingsList() {","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"fansxx"},"content":"        return meetingsList;","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"fansxx"},"content":"     * Gets an arraylist of meetings that is unique to each user.","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"fansxx"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"fansxx"},"content":"     * @param username the username of the user that we want to get the meetings of","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"fansxx"},"content":"     * @return ArrayList of meetings the user is in","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"fansxx"},"content":"    public ArrayList\u003cMeeting\u003e getUserSpecificMeetings(String username) {","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"fansxx"},"content":"        ArrayList\u003cMeeting\u003e allMeetings \u003d getMeetingsList();","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"fansxx"},"content":"        ArrayList\u003cMeeting\u003e userSpecificMeetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"fansxx"},"content":"        for (Meeting meeting : allMeetings) {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"fansxx"},"content":"            if (meeting.getListOfAttendees().contains(username)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"fansxx"},"content":"                userSpecificMeetings.add(meeting);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"fansxx"},"content":"        return userSpecificMeetings;","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"fansxx"},"content":"     * Adds the user to the specified dateTime he is available at.","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"fansxx"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"fansxx"},"content":"     * @param dateTime the date and the start of the hour the user is available at","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"fansxx"},"content":"     * @param name the username of the user that inputted his availability","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"fansxx"},"content":"     * @throws DuplicateUsernameException if the username has already been declared available at that dateTime","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"fansxx"},"content":"     * @throws InvalidDateTimeFormatException if the format of the dateTime is not the specified format","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"fansxx"},"content":"     * @throws InvalidTimeException if the dateTime is not the start of the hour","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"fansxx"},"content":"    public void addAvailability(String dateTime, String name) throws DuplicateUsernameException,","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"fansxx"},"content":"            InvalidDateTimeFormatException, InvalidTimeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"fansxx"},"content":"        LocalDateTime localDateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"fansxx"},"content":"        if (isValidDateTimeFormat(dateTime)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"fansxx"},"content":"            localDateTime \u003d LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"fansxx"},"content":"        } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"fansxx"},"content":"            throw new InvalidDateTimeFormatException();","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"fansxx"},"content":"        if (!isStartOfHour(getTime(dateTime))) {","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"fansxx"},"content":"            throw new InvalidTimeException();","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"fansxx"},"content":"        if (!availability.containsKey(localDateTime)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"fansxx"},"content":"            assert !availability.containsKey(localDateTime) : \"there is no localDateTime object in availability yet\";","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"fansxx"},"content":"            availability.put(localDateTime, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"fansxx"},"content":"            LOGGER.info(\"A new dateTime is created: \" + dateTime);","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"fansxx"},"content":"        if (!availability.get(localDateTime).contains(name)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"fansxx"},"content":"            assert !availability.get(localDateTime).contains(name) : \"there is no \" + name + \" in availability yet\";","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"fansxx"},"content":"            availability.get(localDateTime).add(name);","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"fansxx"},"content":"            LOGGER.info(name + \" has been added to \" + dateTime);","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"fansxx"},"content":"        } else {","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"fansxx"},"content":"            throw new DuplicateUsernameException();","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"fansxx"},"content":"     * Adds new meeting to meeting list.","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"fansxx"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"fansxx"},"content":"     * @param meetingName the name of the meeting","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"fansxx"},"content":"     * @param usernames the usernames of the users in the meeting","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"fansxx"},"content":"     * @param timing the time of the meeting","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"fansxx"},"content":"    private void addMeeting(String meetingName, ArrayList\u003cString\u003e usernames, LocalDateTime timing) {","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"fansxx"},"content":"        Meeting meeting \u003d new Meeting(meetingName, timing, usernames);","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"fansxx"},"content":"        meetingsList.add(meeting);","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"fansxx"},"content":"        MeetingsUi.printSuccessfulScheduleCommand(meetingName, timing, usernames);","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"fansxx"},"content":"     * Checks if the time the user is trying to schedule a meeting at already has a meeting the user is part of.","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"fansxx"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"fansxx"},"content":"     * @param username the username of the user to be checked if they already have a meeting at this time","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"fansxx"},"content":"     * @param timing the time that the user is trying to schedule a meeting at","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"fansxx"},"content":"     * @return true if the user already has a meeting scheduled at the time, false otherwise","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"fansxx"},"content":"    private boolean isMeetingTimeFull(String username, LocalDateTime timing) {","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"fansxx"},"content":"        for (Meeting meeting : meetingsList) {","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"fansxx"},"content":"            if (meeting.getDateTime().equals(timing) \u0026\u0026 meeting.getListOfAttendees().contains(username)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"fansxx"},"content":"                return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"fansxx"},"content":"        return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"fansxx"},"content":"    private boolean isMeetingTimeFullForAll(ArrayList\u003cString\u003e usernames, LocalDateTime timing) {","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"fansxx"},"content":"        for (Meeting meeting : meetingsList) {","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"fansxx"},"content":"            if (meeting.getDateTime().equals(timing) \u0026\u0026 isOneUserNotAvailable(usernames, meeting)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"fansxx"},"content":"                return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"fansxx"},"content":"        return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"fansxx"},"content":"    private boolean isOneUserNotAvailable(ArrayList\u003cString\u003e usernames, Meeting meeting) {","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"fansxx"},"content":"        for (String username : usernames) {","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"fansxx"},"content":"            if (meeting.getListOfAttendees().contains(username)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"fansxx"},"content":"                return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"fansxx"},"content":"        return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"fansxx"},"content":"     * Try to find a timing when all the usernames specified is available to schedule a meeting.","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"fansxx"},"content":"     * If no timing exists, no meeting is scheduled.","lastModifiedDate":"2021-10-31"},{"lineNumber":169,"author":{"gitId":"fansxx"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"fansxx"},"content":"     * @param meetingName the name of the meeting","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"fansxx"},"content":"     * @param usernames the usernames that the user is trying to schedule a meeting with","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"fansxx"},"content":"     * @throws CannotScheduleMeetingException if no timing is found when all users are available","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"fansxx"},"content":"    public void autoScheduleMeeting(String meetingName, ArrayList\u003cString\u003e usernames)","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"fansxx"},"content":"            throws CannotScheduleMeetingException {","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"fansxx"},"content":"        for (LocalDateTime dateTime: availability.keySet()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"fansxx"},"content":"            if (availability.get(dateTime).containsAll(usernames) \u0026\u0026 !isMeetingTimeFullForAll(usernames, dateTime)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"fansxx"},"content":"                addMeeting(meetingName, usernames, dateTime);","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"fansxx"},"content":"                return;","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"fansxx"},"content":"        throw new CannotScheduleMeetingException();","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"fansxx"},"content":"     * Try to schedule a meeting at the timing entered by the user.","lastModifiedDate":"2021-10-31"},{"lineNumber":187,"author":{"gitId":"fansxx"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"fansxx"},"content":"     * @param meetingName the name of the meeting","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"fansxx"},"content":"     * @param usernames the usernames of the users to be in the meeting","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"fansxx"},"content":"     * @param dateTime the date and time the user is trying to schedule a meeting at","lastModifiedDate":"2021-11-03"},{"lineNumber":191,"author":{"gitId":"fansxx"},"content":"     * @throws InvalidDateTimeFormatException if the format of the date and time is not the specified format","lastModifiedDate":"2021-11-03"},{"lineNumber":192,"author":{"gitId":"fansxx"},"content":"     * @throws InvalidTimeException if the time is not the start of the hour","lastModifiedDate":"2021-10-31"},{"lineNumber":193,"author":{"gitId":"fansxx"},"content":"     * @throws CannotScheduleMeetingException if no meeting can be scheduled because one or more of the users entered","lastModifiedDate":"2021-10-31"},{"lineNumber":194,"author":{"gitId":"fansxx"},"content":"     *      is unavailable","lastModifiedDate":"2021-10-31"},{"lineNumber":195,"author":{"gitId":"fansxx"},"content":"     * @throws DuplicateMeetingException if one or more user already has a meeting at the date and time","lastModifiedDate":"2021-11-03"},{"lineNumber":196,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":197,"author":{"gitId":"fansxx"},"content":"    public void manualScheduleMeeting(String meetingName, ArrayList\u003cString\u003e usernames, String dateTime)","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"fansxx"},"content":"            throws InvalidDateTimeFormatException, InvalidTimeException,","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"fansxx"},"content":"            CannotScheduleMeetingException, DuplicateMeetingException {","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"fansxx"},"content":"        LocalDateTime localDateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":201,"author":{"gitId":"fansxx"},"content":"        if (isValidDateTimeFormat(dateTime)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":202,"author":{"gitId":"fansxx"},"content":"            localDateTime \u003d LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));","lastModifiedDate":"2021-11-03"},{"lineNumber":203,"author":{"gitId":"fansxx"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"fansxx"},"content":"            throw new InvalidDateTimeFormatException();","lastModifiedDate":"2021-11-03"},{"lineNumber":205,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":206,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":207,"author":{"gitId":"fansxx"},"content":"        if (!isStartOfHour(getTime(dateTime))) {","lastModifiedDate":"2021-11-03"},{"lineNumber":208,"author":{"gitId":"fansxx"},"content":"            throw new InvalidTimeException();","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"fansxx"},"content":"        if (availability.get(localDateTime).containsAll(usernames)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":212,"author":{"gitId":"fansxx"},"content":"            for (String username : usernames) {","lastModifiedDate":"2021-10-31"},{"lineNumber":213,"author":{"gitId":"fansxx"},"content":"                if (isMeetingTimeFull(username, localDateTime)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":214,"author":{"gitId":"fansxx"},"content":"                    MeetingsUi.showMeetingTimeFull(username, dateTime);","lastModifiedDate":"2021-11-03"},{"lineNumber":215,"author":{"gitId":"fansxx"},"content":"                    throw new DuplicateMeetingException();","lastModifiedDate":"2021-10-31"},{"lineNumber":216,"author":{"gitId":"fansxx"},"content":"                }","lastModifiedDate":"2021-10-31"},{"lineNumber":217,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"fansxx"},"content":"            addMeeting(meetingName, usernames, localDateTime);","lastModifiedDate":"2021-11-03"},{"lineNumber":219,"author":{"gitId":"fansxx"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"fansxx"},"content":"            throw new CannotScheduleMeetingException();","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"fansxx":223}},{"path":"src/main/java/cooper/parser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"import com.dopsun.chatbot.cli.Argument;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"import com.dopsun.chatbot.cli.ParseResult;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.CooperState;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.command.AddCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"import cooper.command.AvailabilityCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.command.AvailableCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"import cooper.command.BsCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"import cooper.command.CfCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.command.ExitCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"import cooper.command.GenerateCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"import cooper.command.HelpCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.command.ListCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"import cooper.command.LogoutCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.command.MeetingsCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.command.PostAddCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.command.PostCommentCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.command.PostDeleteCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"import cooper.command.PostListCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"import cooper.command.ProjectionCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"fansxx"},"content":"import cooper.command.ScheduleCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidAddFormatException;","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidDocumentException;","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.InvalidScheduleFormatException;","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.NoTimeEnteredException;","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.NoUsernameAfterCommaException;","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.UnrecognisedCommandException;","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"import cooper.finance.FinanceCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.ui.Ui;","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"@SuppressWarnings({\"OptionalGetWithoutIsPresent\", \"SwitchStatementWithTooFewBranches\"})","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"public class CommandParser extends ParserBase {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"    private static CommandParser commandParserImpl \u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"    // when command parser is called, user is already logged in","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"    private static CooperState cooperState \u003d CooperState.LOGIN;","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String BS \u003d \"bs\";","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String CF \u003d \"cf\";","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String DOCUMENT_HINT \u003d \"document-hint\";","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"Rrraaaeee"},"content":"     * Constructor. Initialise internal parser.","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"Rrraaaeee"},"content":"    private CommandParser()  {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Rrraaaeee"},"content":"        super(\"command-data.properties\");","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"Rrraaaeee"},"content":"    public static boolean isLogout() {","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"Rrraaaeee"},"content":"        return cooperState \u003d\u003d CooperState.LOGOUT;","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"Rrraaaeee"},"content":"    public static void setCooperState(CooperState state) {","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"Rrraaaeee"},"content":"        cooperState \u003d state;","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"Rrraaaeee"},"content":"        Ui.updatePromptState(state);","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"Rrraaaeee"},"content":"     * API to parse a command in string.","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"Rrraaaeee"},"content":"     * @param input command to be parsed","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"Rrraaaeee"},"content":"     * @return a command object, to be passed into command handler","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"Rrraaaeee"},"content":"    public static Command parse(String input) throws UnrecognisedCommandException, NoSuchElementException,","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Rrraaaeee"},"content":"            InvalidCommandFormatException, InvalidScheduleFormatException, NoTimeEnteredException,","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"Rrraaaeee"},"content":"            NoUsernameAfterCommaException, InvalidDocumentException, InvalidAddFormatException {","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"Rrraaaeee"},"content":"        if (commandParserImpl \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Rrraaaeee"},"content":"            commandParserImpl \u003d new CommandParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"Rrraaaeee"},"content":"        Command command \u003d commandParserImpl.parseInput(input);","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"Rrraaaeee"},"content":"        Ui.updatePromptState(cooperState);","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"Rrraaaeee"},"content":"        return command;","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Rrraaaeee"},"content":"    @Override","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"Rrraaaeee"},"content":"    public Command parseInput(String input) throws UnrecognisedCommandException, NoSuchElementException,","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"Rrraaaeee"},"content":"            InvalidCommandFormatException, InvalidScheduleFormatException, NoTimeEnteredException,","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"Rrraaaeee"},"content":"            NoUsernameAfterCommaException, InvalidDocumentException, InvalidAddFormatException {","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"Rrraaaeee"},"content":"        assert input !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Rrraaaeee"},"content":"        String commandWord \u003d input.split(WHITESPACE_SEQUENCE)[0].toLowerCase();","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"Rrraaaeee"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"Rrraaaeee"},"content":"        case \"list\":","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"Rrraaaeee"},"content":"        case \"help\":","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"Rrraaaeee"},"content":"        case \"availability\":","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"Rrraaaeee"},"content":"        case \"meetings\":","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"Rrraaaeee"},"content":"        case \"exit\":","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"Rrraaaeee"},"content":"        case BS:","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"Rrraaaeee"},"content":"        case CF:","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"Rrraaaeee"},"content":"        case \"logout\":","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"Rrraaaeee"},"content":"            return parseSimpleInput(commandWord);","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"Rrraaaeee"},"content":"        case \"add\":","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"Rrraaaeee"},"content":"        case \"available\":","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"Rrraaaeee"},"content":"        case \"schedule\":","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"Rrraaaeee"},"content":"        case \"post\":","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"Rrraaaeee"},"content":"        case \"generate\":","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"Rrraaaeee"},"content":"        case \"proj\":","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"Rrraaaeee"},"content":"            return parseComplexInput(input);","lastModifiedDate":"2021-10-03"},{"lineNumber":109,"author":{"gitId":"Rrraaaeee"},"content":"        default:","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"Rrraaaeee"},"content":"            throw new UnrecognisedCommandException();","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":112,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":113,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":114,"author":{"gitId":"Rrraaaeee"},"content":"    private Command parseSimpleInput(String commandWord) throws UnrecognisedCommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"Rrraaaeee"},"content":"        assert commandWord !\u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"Rrraaaeee"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"Rrraaaeee"},"content":"        case \"list\":","lastModifiedDate":"2021-10-03"},{"lineNumber":118,"author":{"gitId":"Rrraaaeee"},"content":"            return new ListCommand(FinanceCommand.getCommandFromState(cooperState));","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"Rrraaaeee"},"content":"        case \"help\":","lastModifiedDate":"2021-10-03"},{"lineNumber":120,"author":{"gitId":"Rrraaaeee"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-03"},{"lineNumber":121,"author":{"gitId":"Rrraaaeee"},"content":"        case \"availability\":","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"Rrraaaeee"},"content":"            cooperState \u003d CooperState.LOGIN;","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"Rrraaaeee"},"content":"            return new AvailabilityCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"Rrraaaeee"},"content":"        case \"meetings\":","lastModifiedDate":"2021-10-03"},{"lineNumber":125,"author":{"gitId":"Rrraaaeee"},"content":"            cooperState \u003d CooperState.LOGIN;","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"Rrraaaeee"},"content":"            return new MeetingsCommand();","lastModifiedDate":"2021-10-03"},{"lineNumber":127,"author":{"gitId":"Rrraaaeee"},"content":"        case \"logout\":","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"Rrraaaeee"},"content":"            return new LogoutCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"Rrraaaeee"},"content":"        case \"exit\":","lastModifiedDate":"2021-10-03"},{"lineNumber":130,"author":{"gitId":"Rrraaaeee"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-03"},{"lineNumber":131,"author":{"gitId":"Rrraaaeee"},"content":"        case CF:","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"Rrraaaeee"},"content":"            return new CfCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"Rrraaaeee"},"content":"        case BS:","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"Rrraaaeee"},"content":"            return new BsCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"Rrraaaeee"},"content":"        default:","lastModifiedDate":"2021-10-03"},{"lineNumber":136,"author":{"gitId":"Rrraaaeee"},"content":"            throw new UnrecognisedCommandException();","lastModifiedDate":"2021-10-03"},{"lineNumber":137,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":138,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":139,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":140,"author":{"gitId":"Rrraaaeee"},"content":"    private Command parseComplexInput(String input) throws UnrecognisedCommandException, NoSuchElementException,","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"Rrraaaeee"},"content":"            InvalidCommandFormatException, InvalidScheduleFormatException, NoTimeEnteredException,","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"Rrraaaeee"},"content":"            NoUsernameAfterCommaException, InvalidDocumentException, InvalidAddFormatException {","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"Rrraaaeee"},"content":"        Optional\u003cParseResult\u003e optResult \u003d parser.tryParse(input);","lastModifiedDate":"2021-10-03"},{"lineNumber":144,"author":{"gitId":"Rrraaaeee"},"content":"        if (optResult.isPresent()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":145,"author":{"gitId":"Rrraaaeee"},"content":"            var result \u003d optResult.get();","lastModifiedDate":"2021-10-03"},{"lineNumber":146,"author":{"gitId":"Rrraaaeee"},"content":"            String command \u003d result.allCommands().get(0).name();","lastModifiedDate":"2021-10-03"},{"lineNumber":147,"author":{"gitId":"Rrraaaeee"},"content":"            List\u003cArgument\u003e commandArgs \u003d result.allCommands().get(0).arguments();","lastModifiedDate":"2021-10-03"},{"lineNumber":148,"author":{"gitId":"Rrraaaeee"},"content":"            switch (command) {","lastModifiedDate":"2021-10-03"},{"lineNumber":149,"author":{"gitId":"Rrraaaeee"},"content":"            case \"add\":","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"Rrraaaeee"},"content":"                return parseAddArgs(commandArgs);","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"Rrraaaeee"},"content":"            case \"available\":","lastModifiedDate":"2021-10-03"},{"lineNumber":152,"author":{"gitId":"Rrraaaeee"},"content":"                cooperState \u003d CooperState.LOGIN;","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"Rrraaaeee"},"content":"                return parseAvailableArgs(commandArgs);","lastModifiedDate":"2021-10-03"},{"lineNumber":154,"author":{"gitId":"Rrraaaeee"},"content":"            case \"schedule\":","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"Rrraaaeee"},"content":"                cooperState \u003d CooperState.LOGIN;","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"Rrraaaeee"},"content":"                return parseScheduleArgs(commandArgs);","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"Rrraaaeee"},"content":"            case \"postAdd\":","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"Rrraaaeee"},"content":"                cooperState \u003d CooperState.LOGIN;","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"Rrraaaeee"},"content":"                return parsePostAddArgs(commandArgs);","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"Rrraaaeee"},"content":"            case \"postDelete\":","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"Rrraaaeee"},"content":"                cooperState \u003d CooperState.LOGIN;","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"Rrraaaeee"},"content":"                return parsePostDeleteArgs(commandArgs);","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"Rrraaaeee"},"content":"            case \"postComment\":","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"Rrraaaeee"},"content":"                cooperState \u003d CooperState.LOGIN;","lastModifiedDate":"2021-11-02"},{"lineNumber":165,"author":{"gitId":"Rrraaaeee"},"content":"                return parsePostCommentArgs(commandArgs);","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"Rrraaaeee"},"content":"            case \"postList\":","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"Rrraaaeee"},"content":"                cooperState \u003d CooperState.LOGIN;","lastModifiedDate":"2021-11-02"},{"lineNumber":168,"author":{"gitId":"Rrraaaeee"},"content":"                return parsePostListArgs(commandArgs);","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"Rrraaaeee"},"content":"            case \"generate\":","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"Rrraaaeee"},"content":"                return parseGenerateArgs(commandArgs);","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"Rrraaaeee"},"content":"            case \"proj\":","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"Rrraaaeee"},"content":"                return parseProjectionArgs(commandArgs);","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"Rrraaaeee"},"content":"            default:","lastModifiedDate":"2021-10-03"},{"lineNumber":174,"author":{"gitId":"Rrraaaeee"},"content":"                throw new UnrecognisedCommandException();","lastModifiedDate":"2021-10-03"},{"lineNumber":175,"author":{"gitId":"Rrraaaeee"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":176,"author":{"gitId":"Rrraaaeee"},"content":"        } else {","lastModifiedDate":"2021-10-03"},{"lineNumber":177,"author":{"gitId":"Rrraaaeee"},"content":"            throw new InvalidCommandFormatException();","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":179,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":180,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":181,"author":{"gitId":"ChrisLangton"},"content":"    //@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"ChrisLangton"},"content":"    private Command parseAddArgs(List\u003cArgument\u003e commandArgs) throws NoSuchElementException,","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"ChrisLangton"},"content":"            NumberFormatException, InvalidAddFormatException {","lastModifiedDate":"2021-11-02"},{"lineNumber":184,"author":{"gitId":"ChrisLangton"},"content":"        String amountAsString;","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"ChrisLangton"},"content":"        int amount \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"ChrisLangton"},"content":"        boolean isInflow \u003d true;","lastModifiedDate":"2021-10-03"},{"lineNumber":187,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"ChrisLangton"},"content":"        for (Argument a : commandArgs) {","lastModifiedDate":"2021-10-03"},{"lineNumber":189,"author":{"gitId":"ChrisLangton"},"content":"            String argName \u003d a.name();","lastModifiedDate":"2021-10-03"},{"lineNumber":190,"author":{"gitId":"ChrisLangton"},"content":"            String argVal \u003d a.value().get();","lastModifiedDate":"2021-10-03"},{"lineNumber":191,"author":{"gitId":"ChrisLangton"},"content":"            if (argName.equals(\"amount-hint\") \u0026\u0026 !argVal.contains(\"-\")) {","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"ChrisLangton"},"content":"                if (argVal.charAt(0) \u003d\u003d \u0027(\u0027 \u0026\u0026 argVal.charAt(argVal.length() - 1) \u003d\u003d \u0027)\u0027) {","lastModifiedDate":"2021-10-03"},{"lineNumber":193,"author":{"gitId":"ChrisLangton"},"content":"                    isInflow \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":194,"author":{"gitId":"ChrisLangton"},"content":"                    amountAsString \u003d argVal.substring(1, argVal.length() - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"ChrisLangton"},"content":"                } else {","lastModifiedDate":"2021-10-03"},{"lineNumber":196,"author":{"gitId":"ChrisLangton"},"content":"                    isInflow \u003d true;","lastModifiedDate":"2021-10-03"},{"lineNumber":197,"author":{"gitId":"ChrisLangton"},"content":"                    amountAsString \u003d argVal;","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-10-03"},{"lineNumber":199,"author":{"gitId":"ChrisLangton"},"content":"                amount \u003d Integer.parseInt(amountAsString);","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"ChrisLangton"},"content":"                throw new InvalidAddFormatException();","lastModifiedDate":"2021-11-02"},{"lineNumber":202,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":203,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":204,"author":{"gitId":"ChrisLangton"},"content":"        return new AddCommand(amount, isInflow, FinanceCommand.getCommandFromState(cooperState));","lastModifiedDate":"2021-11-02"},{"lineNumber":205,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":207,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":208,"author":{"gitId":"fansxx"},"content":"    //@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"fansxx"},"content":"    private Command parseAvailableArgs(List\u003cArgument\u003e commandArgs) throws NoSuchElementException,","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"fansxx"},"content":"            InvalidCommandFormatException {","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":212,"author":{"gitId":"fansxx"},"content":"        String time \u003d \"\";","lastModifiedDate":"2021-10-04"},{"lineNumber":213,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":214,"author":{"gitId":"fansxx"},"content":"        for (Argument a : commandArgs) {","lastModifiedDate":"2021-10-03"},{"lineNumber":215,"author":{"gitId":"fansxx"},"content":"            String argName \u003d a.name();","lastModifiedDate":"2021-10-03"},{"lineNumber":216,"author":{"gitId":"fansxx"},"content":"            String argVal \u003d a.value().get();","lastModifiedDate":"2021-10-03"},{"lineNumber":217,"author":{"gitId":"fansxx"},"content":"            switch (argName) {","lastModifiedDate":"2021-10-03"},{"lineNumber":218,"author":{"gitId":"fansxx"},"content":"            case \"time-hint\":","lastModifiedDate":"2021-10-04"},{"lineNumber":219,"author":{"gitId":"fansxx"},"content":"                time \u003d argVal;","lastModifiedDate":"2021-10-04"},{"lineNumber":220,"author":{"gitId":"fansxx"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":221,"author":{"gitId":"fansxx"},"content":"            default:","lastModifiedDate":"2021-10-03"},{"lineNumber":222,"author":{"gitId":"fansxx"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":224,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":225,"author":{"gitId":"fansxx"},"content":"        return new AvailableCommand(time);","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":227,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"fansxx"},"content":"    private Command parseScheduleArgs(List\u003cArgument\u003e commandArgs) throws InvalidCommandFormatException,","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"fansxx"},"content":"            NoSuchElementException, InvalidScheduleFormatException, NoTimeEnteredException,","lastModifiedDate":"2021-11-02"},{"lineNumber":230,"author":{"gitId":"fansxx"},"content":"            NoUsernameAfterCommaException {","lastModifiedDate":"2021-11-02"},{"lineNumber":231,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":232,"author":{"gitId":"fansxx"},"content":"        String meetingName \u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"fansxx"},"content":"        ArrayList\u003cString\u003e usernames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"fansxx"},"content":"        String time \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"fansxx"},"content":"        for (Argument a : commandArgs) {","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"fansxx"},"content":"            String argName \u003d a.name();","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"fansxx"},"content":"            String argVal \u003d a.value().get();","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"fansxx"},"content":"            switch (argName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"fansxx"},"content":"            case \"meeting-hint\":","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"fansxx"},"content":"                meetingName \u003d argVal;","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"fansxx"},"content":"                break;","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"fansxx"},"content":"            case \"usernames-hint\":","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"fansxx"},"content":"                usernames \u003d parseUsernamesInSchedule(argVal);","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"fansxx"},"content":"                time \u003d parseTimeInSchedule(argVal);","lastModifiedDate":"2021-10-22"},{"lineNumber":245,"author":{"gitId":"fansxx"},"content":"                break;","lastModifiedDate":"2021-10-23"},{"lineNumber":246,"author":{"gitId":"fansxx"},"content":"            default:","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"fansxx"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"fansxx"},"content":"        return new ScheduleCommand(meetingName, usernames, time);","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"fansxx"},"content":"    private ArrayList\u003cString\u003e parseUsernamesInSchedule(String args) throws InvalidScheduleFormatException,","lastModifiedDate":"2021-11-02"},{"lineNumber":254,"author":{"gitId":"fansxx"},"content":"            NoUsernameAfterCommaException {","lastModifiedDate":"2021-11-02"},{"lineNumber":255,"author":{"gitId":"fansxx"},"content":"        if (args.length() \u003c 1) {","lastModifiedDate":"2021-11-02"},{"lineNumber":256,"author":{"gitId":"fansxx"},"content":"            throw new InvalidScheduleFormatException();","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":258,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":259,"author":{"gitId":"fansxx"},"content":"        String[] usernamesArray;","lastModifiedDate":"2021-11-02"},{"lineNumber":260,"author":{"gitId":"fansxx"},"content":"        if (args.contains(\",\")) {","lastModifiedDate":"2021-11-02"},{"lineNumber":261,"author":{"gitId":"fansxx"},"content":"            if (args.endsWith(\",\")) {","lastModifiedDate":"2021-11-02"},{"lineNumber":262,"author":{"gitId":"fansxx"},"content":"                throw new NoUsernameAfterCommaException();","lastModifiedDate":"2021-11-02"},{"lineNumber":263,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":264,"author":{"gitId":"fansxx"},"content":"            usernamesArray \u003d args.split(\",\");","lastModifiedDate":"2021-11-02"},{"lineNumber":265,"author":{"gitId":"fansxx"},"content":"            if (usernamesArray.length \u003c 1) {","lastModifiedDate":"2021-11-02"},{"lineNumber":266,"author":{"gitId":"fansxx"},"content":"                throw new InvalidScheduleFormatException();","lastModifiedDate":"2021-11-02"},{"lineNumber":267,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":268,"author":{"gitId":"fansxx"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":269,"author":{"gitId":"fansxx"},"content":"            usernamesArray \u003d new String[1];","lastModifiedDate":"2021-11-02"},{"lineNumber":270,"author":{"gitId":"fansxx"},"content":"            usernamesArray[0] \u003d args;","lastModifiedDate":"2021-11-02"},{"lineNumber":271,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":273,"author":{"gitId":"fansxx"},"content":"        ArrayList\u003cString\u003e usernamesArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"fansxx"},"content":"        for (String s : usernamesArray) {","lastModifiedDate":"2021-10-22"},{"lineNumber":275,"author":{"gitId":"fansxx"},"content":"            String trimmedUsername \u003d s.trim();","lastModifiedDate":"2021-10-22"},{"lineNumber":276,"author":{"gitId":"fansxx"},"content":"            // if the command args contain the time, get only the last username and add it to the list","lastModifiedDate":"2021-10-22"},{"lineNumber":277,"author":{"gitId":"fansxx"},"content":"            getLastUsername(usernamesArrayList, trimmedUsername);","lastModifiedDate":"2021-10-22"},{"lineNumber":278,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":279,"author":{"gitId":"fansxx"},"content":"        return usernamesArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":282,"author":{"gitId":"fansxx"},"content":"    private void getLastUsername(ArrayList\u003cString\u003e usernamesArrayList, String trimmedUsername) throws","lastModifiedDate":"2021-11-02"},{"lineNumber":283,"author":{"gitId":"fansxx"},"content":"            NoUsernameAfterCommaException {","lastModifiedDate":"2021-11-02"},{"lineNumber":284,"author":{"gitId":"fansxx"},"content":"        if (trimmedUsername.contains(\"/at\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":285,"author":{"gitId":"fansxx"},"content":"            String[] lastUsernameAndTime \u003d trimmedUsername.split(\"/at\");","lastModifiedDate":"2021-10-22"},{"lineNumber":286,"author":{"gitId":"fansxx"},"content":"            if (lastUsernameAndTime[0].length() \u003c 1) {","lastModifiedDate":"2021-11-02"},{"lineNumber":287,"author":{"gitId":"fansxx"},"content":"                throw new NoUsernameAfterCommaException();","lastModifiedDate":"2021-11-02"},{"lineNumber":288,"author":{"gitId":"fansxx"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":289,"author":{"gitId":"fansxx"},"content":"                usernamesArrayList.add(lastUsernameAndTime[0].trim());","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":291,"author":{"gitId":"fansxx"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":292,"author":{"gitId":"fansxx"},"content":"            usernamesArrayList.add(trimmedUsername);","lastModifiedDate":"2021-10-22"},{"lineNumber":293,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":294,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":295,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":296,"author":{"gitId":"fansxx"},"content":"    private String parseTimeInSchedule(String args) throws NoTimeEnteredException {","lastModifiedDate":"2021-11-02"},{"lineNumber":297,"author":{"gitId":"fansxx"},"content":"        if (args.contains(\"/at\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":298,"author":{"gitId":"fansxx"},"content":"            String[] argsArray \u003d args.split(\"/at\");","lastModifiedDate":"2021-10-22"},{"lineNumber":299,"author":{"gitId":"fansxx"},"content":"            if (argsArray.length \u003c 2) {","lastModifiedDate":"2021-11-02"},{"lineNumber":300,"author":{"gitId":"fansxx"},"content":"                throw new NoTimeEnteredException();","lastModifiedDate":"2021-11-02"},{"lineNumber":301,"author":{"gitId":"fansxx"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":302,"author":{"gitId":"fansxx"},"content":"                return argsArray[1].trim();","lastModifiedDate":"2021-10-22"},{"lineNumber":303,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":304,"author":{"gitId":"fansxx"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":305,"author":{"gitId":"fansxx"},"content":"            return null;","lastModifiedDate":"2021-10-22"},{"lineNumber":306,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":307,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":308,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":309,"author":{"gitId":"Rrraaaeee"},"content":"    //@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":310,"author":{"gitId":"Rrraaaeee"},"content":"    private Command parsePostAddArgs(List\u003cArgument\u003e commandArgs) throws NoSuchElementException,","lastModifiedDate":"2021-10-23"},{"lineNumber":311,"author":{"gitId":"Rrraaaeee"},"content":"            NumberFormatException, InvalidCommandFormatException {","lastModifiedDate":"2021-10-23"},{"lineNumber":312,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":313,"author":{"gitId":"Rrraaaeee"},"content":"        String content \u003d \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":314,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":315,"author":{"gitId":"Rrraaaeee"},"content":"        for (Argument a : commandArgs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":316,"author":{"gitId":"Rrraaaeee"},"content":"            String argName \u003d a.name();","lastModifiedDate":"2021-10-23"},{"lineNumber":317,"author":{"gitId":"Rrraaaeee"},"content":"            String argVal \u003d a.value().get();","lastModifiedDate":"2021-10-23"},{"lineNumber":318,"author":{"gitId":"Rrraaaeee"},"content":"            switch (argName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":319,"author":{"gitId":"Rrraaaeee"},"content":"            case \"content-hint\":","lastModifiedDate":"2021-10-23"},{"lineNumber":320,"author":{"gitId":"Rrraaaeee"},"content":"                content \u003d argVal;","lastModifiedDate":"2021-10-23"},{"lineNumber":321,"author":{"gitId":"Rrraaaeee"},"content":"                break;","lastModifiedDate":"2021-10-23"},{"lineNumber":322,"author":{"gitId":"Rrraaaeee"},"content":"            default:","lastModifiedDate":"2021-10-23"},{"lineNumber":323,"author":{"gitId":"Rrraaaeee"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2021-10-23"},{"lineNumber":324,"author":{"gitId":"Rrraaaeee"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":325,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":326,"author":{"gitId":"Rrraaaeee"},"content":"        return new PostAddCommand(content);","lastModifiedDate":"2021-10-23"},{"lineNumber":327,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":328,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":329,"author":{"gitId":"Rrraaaeee"},"content":"    private Command parsePostDeleteArgs(List\u003cArgument\u003e commandArgs) throws NoSuchElementException,","lastModifiedDate":"2021-10-23"},{"lineNumber":330,"author":{"gitId":"Rrraaaeee"},"content":"            NumberFormatException, InvalidCommandFormatException {","lastModifiedDate":"2021-10-23"},{"lineNumber":331,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":332,"author":{"gitId":"Rrraaaeee"},"content":"        int postId \u003d -1;","lastModifiedDate":"2021-10-23"},{"lineNumber":333,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":334,"author":{"gitId":"Rrraaaeee"},"content":"        for (Argument a : commandArgs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":335,"author":{"gitId":"Rrraaaeee"},"content":"            String argName \u003d a.name();","lastModifiedDate":"2021-10-23"},{"lineNumber":336,"author":{"gitId":"Rrraaaeee"},"content":"            String argVal \u003d a.value().get();","lastModifiedDate":"2021-10-23"},{"lineNumber":337,"author":{"gitId":"Rrraaaeee"},"content":"            switch (argName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":338,"author":{"gitId":"Rrraaaeee"},"content":"            case \"index-hint\":","lastModifiedDate":"2021-10-23"},{"lineNumber":339,"author":{"gitId":"Rrraaaeee"},"content":"                postId \u003d Integer.parseInt(argVal);","lastModifiedDate":"2021-10-23"},{"lineNumber":340,"author":{"gitId":"Rrraaaeee"},"content":"                break;","lastModifiedDate":"2021-10-23"},{"lineNumber":341,"author":{"gitId":"Rrraaaeee"},"content":"            default:","lastModifiedDate":"2021-10-23"},{"lineNumber":342,"author":{"gitId":"Rrraaaeee"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2021-10-23"},{"lineNumber":343,"author":{"gitId":"Rrraaaeee"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":344,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":345,"author":{"gitId":"Rrraaaeee"},"content":"        return new PostDeleteCommand(postId);","lastModifiedDate":"2021-10-23"},{"lineNumber":346,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":347,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":348,"author":{"gitId":"Rrraaaeee"},"content":"    private Command parsePostCommentArgs(List\u003cArgument\u003e commandArgs) throws NoSuchElementException,","lastModifiedDate":"2021-10-23"},{"lineNumber":349,"author":{"gitId":"Rrraaaeee"},"content":"            NumberFormatException, InvalidCommandFormatException {","lastModifiedDate":"2021-10-23"},{"lineNumber":350,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":351,"author":{"gitId":"Rrraaaeee"},"content":"        String content \u003d \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":352,"author":{"gitId":"Rrraaaeee"},"content":"        int postId \u003d -1;","lastModifiedDate":"2021-10-23"},{"lineNumber":353,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":354,"author":{"gitId":"Rrraaaeee"},"content":"        for (Argument a : commandArgs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":355,"author":{"gitId":"Rrraaaeee"},"content":"            String argName \u003d a.name();","lastModifiedDate":"2021-10-23"},{"lineNumber":356,"author":{"gitId":"Rrraaaeee"},"content":"            String argVal \u003d a.value().get();","lastModifiedDate":"2021-10-23"},{"lineNumber":357,"author":{"gitId":"Rrraaaeee"},"content":"            switch (argName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":358,"author":{"gitId":"Rrraaaeee"},"content":"            case \"content-hint\":","lastModifiedDate":"2021-10-23"},{"lineNumber":359,"author":{"gitId":"Rrraaaeee"},"content":"                content \u003d argVal;","lastModifiedDate":"2021-10-23"},{"lineNumber":360,"author":{"gitId":"Rrraaaeee"},"content":"                break;","lastModifiedDate":"2021-10-23"},{"lineNumber":361,"author":{"gitId":"Rrraaaeee"},"content":"            case \"index-hint\":","lastModifiedDate":"2021-10-23"},{"lineNumber":362,"author":{"gitId":"Rrraaaeee"},"content":"                postId \u003d Integer.parseInt(argVal);","lastModifiedDate":"2021-10-23"},{"lineNumber":363,"author":{"gitId":"Rrraaaeee"},"content":"                break;","lastModifiedDate":"2021-10-23"},{"lineNumber":364,"author":{"gitId":"Rrraaaeee"},"content":"            default:","lastModifiedDate":"2021-10-23"},{"lineNumber":365,"author":{"gitId":"Rrraaaeee"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2021-10-23"},{"lineNumber":366,"author":{"gitId":"Rrraaaeee"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":367,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":368,"author":{"gitId":"Rrraaaeee"},"content":"        return new PostCommentCommand(postId,content);","lastModifiedDate":"2021-10-24"},{"lineNumber":369,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":370,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":371,"author":{"gitId":"Rrraaaeee"},"content":"    private Command parsePostListArgs(List\u003cArgument\u003e commandArgs) throws InvalidCommandFormatException,","lastModifiedDate":"2021-10-24"},{"lineNumber":372,"author":{"gitId":"Rrraaaeee"},"content":"            NumberFormatException {","lastModifiedDate":"2021-10-24"},{"lineNumber":373,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":374,"author":{"gitId":"Rrraaaeee"},"content":"        Integer postId \u003d null;","lastModifiedDate":"2021-10-28"},{"lineNumber":375,"author":{"gitId":"Rrraaaeee"},"content":"        for (Argument a : commandArgs) {","lastModifiedDate":"2021-10-24"},{"lineNumber":376,"author":{"gitId":"Rrraaaeee"},"content":"            String argName \u003d a.name();","lastModifiedDate":"2021-10-24"},{"lineNumber":377,"author":{"gitId":"Rrraaaeee"},"content":"            String argVal \u003d a.value().get();","lastModifiedDate":"2021-10-24"},{"lineNumber":378,"author":{"gitId":"Rrraaaeee"},"content":"            switch (argName) {","lastModifiedDate":"2021-10-24"},{"lineNumber":379,"author":{"gitId":"Rrraaaeee"},"content":"            case \"list-hint\":","lastModifiedDate":"2021-10-24"},{"lineNumber":380,"author":{"gitId":"Rrraaaeee"},"content":"                if (argVal.trim().equals(\"all\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":381,"author":{"gitId":"Rrraaaeee"},"content":"                    postId \u003d null; // list all","lastModifiedDate":"2021-10-28"},{"lineNumber":382,"author":{"gitId":"Rrraaaeee"},"content":"                } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":383,"author":{"gitId":"Rrraaaeee"},"content":"                    postId \u003d Integer.parseInt(argVal);","lastModifiedDate":"2021-10-24"},{"lineNumber":384,"author":{"gitId":"Rrraaaeee"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":385,"author":{"gitId":"Rrraaaeee"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":386,"author":{"gitId":"Rrraaaeee"},"content":"            default:","lastModifiedDate":"2021-10-24"},{"lineNumber":387,"author":{"gitId":"Rrraaaeee"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2021-10-24"},{"lineNumber":388,"author":{"gitId":"Rrraaaeee"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":389,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":390,"author":{"gitId":"Rrraaaeee"},"content":"        return new PostListCommand(postId);","lastModifiedDate":"2021-10-24"},{"lineNumber":391,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":392,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":393,"author":{"gitId":"theeugenechong"},"content":"    //@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":394,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":395,"author":{"gitId":"theeugenechong"},"content":"     * Parses the {@code generate} command to identify the document to generate as PDF.","lastModifiedDate":"2021-10-30"},{"lineNumber":396,"author":{"gitId":"theeugenechong"},"content":"     * @return a {@code GenerateCommand} containing the document the user wants to generate","lastModifiedDate":"2021-10-30"},{"lineNumber":397,"author":{"gitId":"theeugenechong"},"content":"     * @throws NoSuchElementException if the command is missing arguments","lastModifiedDate":"2021-10-30"},{"lineNumber":398,"author":{"gitId":"theeugenechong"},"content":"     * @throws InvalidCommandFormatException if the command is of the wrong format","lastModifiedDate":"2021-10-30"},{"lineNumber":399,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":400,"author":{"gitId":"theeugenechong"},"content":"    private Command parseGenerateArgs(List\u003cArgument\u003e commandArgs) throws NoSuchElementException,","lastModifiedDate":"2021-10-26"},{"lineNumber":401,"author":{"gitId":"theeugenechong"},"content":"            InvalidCommandFormatException, InvalidDocumentException {","lastModifiedDate":"2021-11-03"},{"lineNumber":402,"author":{"gitId":"theeugenechong"},"content":"        String documentToGenerate \u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":403,"author":{"gitId":"theeugenechong"},"content":"        for (Argument a : commandArgs) {","lastModifiedDate":"2021-10-26"},{"lineNumber":404,"author":{"gitId":"theeugenechong"},"content":"            String argName \u003d a.name();","lastModifiedDate":"2021-10-26"},{"lineNumber":405,"author":{"gitId":"theeugenechong"},"content":"            String argVal \u003d a.value().get();","lastModifiedDate":"2021-10-26"},{"lineNumber":406,"author":{"gitId":"theeugenechong"},"content":"            switch (argName) {","lastModifiedDate":"2021-10-26"},{"lineNumber":407,"author":{"gitId":"theeugenechong"},"content":"            case DOCUMENT_HINT:","lastModifiedDate":"2021-10-31"},{"lineNumber":408,"author":{"gitId":"theeugenechong"},"content":"                documentToGenerate \u003d checkDocToGenerate(argVal);","lastModifiedDate":"2021-10-31"},{"lineNumber":409,"author":{"gitId":"theeugenechong"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":410,"author":{"gitId":"theeugenechong"},"content":"            default:","lastModifiedDate":"2021-10-26"},{"lineNumber":411,"author":{"gitId":"theeugenechong"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2021-10-26"},{"lineNumber":412,"author":{"gitId":"theeugenechong"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":413,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":414,"author":{"gitId":"theeugenechong"},"content":"        return new GenerateCommand(documentToGenerate);","lastModifiedDate":"2021-10-26"},{"lineNumber":415,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":416,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":417,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":418,"author":{"gitId":"theeugenechong"},"content":"     * Helper method to determine is the user argument is one of bs or cf.","lastModifiedDate":"2021-10-30"},{"lineNumber":419,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":420,"author":{"gitId":"theeugenechong"},"content":"    private String checkDocToGenerate(String doc) throws InvalidDocumentException {","lastModifiedDate":"2021-11-03"},{"lineNumber":421,"author":{"gitId":"theeugenechong"},"content":"        if (doc.trim().equalsIgnoreCase(BS)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":422,"author":{"gitId":"theeugenechong"},"content":"            return BS;","lastModifiedDate":"2021-10-31"},{"lineNumber":423,"author":{"gitId":"theeugenechong"},"content":"        } else if (doc.trim().equalsIgnoreCase(CF)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":424,"author":{"gitId":"theeugenechong"},"content":"            return CF;","lastModifiedDate":"2021-10-31"},{"lineNumber":425,"author":{"gitId":"theeugenechong"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":426,"author":{"gitId":"theeugenechong"},"content":"            throw new InvalidDocumentException();","lastModifiedDate":"2021-11-03"},{"lineNumber":427,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":428,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":429,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":430,"author":{"gitId":"ChrisLangton"},"content":"    //@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":431,"author":{"gitId":"ChrisLangton"},"content":"    private Command parseProjectionArgs(List\u003cArgument\u003e commandArgs) throws InvalidCommandFormatException,","lastModifiedDate":"2021-10-26"},{"lineNumber":432,"author":{"gitId":"ChrisLangton"},"content":"            NumberFormatException {","lastModifiedDate":"2021-10-26"},{"lineNumber":433,"author":{"gitId":"ChrisLangton"},"content":"        int years \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":434,"author":{"gitId":"ChrisLangton"},"content":"        for (Argument a : commandArgs) {","lastModifiedDate":"2021-10-26"},{"lineNumber":435,"author":{"gitId":"ChrisLangton"},"content":"            String argName \u003d a.name();","lastModifiedDate":"2021-10-26"},{"lineNumber":436,"author":{"gitId":"ChrisLangton"},"content":"            String argVal \u003d a.value().get();","lastModifiedDate":"2021-10-26"},{"lineNumber":437,"author":{"gitId":"ChrisLangton"},"content":"            switch (argName) {","lastModifiedDate":"2021-10-26"},{"lineNumber":438,"author":{"gitId":"ChrisLangton"},"content":"            case \"years-hint\":","lastModifiedDate":"2021-10-26"},{"lineNumber":439,"author":{"gitId":"ChrisLangton"},"content":"                years \u003d Integer.parseInt(argVal);","lastModifiedDate":"2021-10-26"},{"lineNumber":440,"author":{"gitId":"ChrisLangton"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":441,"author":{"gitId":"ChrisLangton"},"content":"            default:","lastModifiedDate":"2021-10-26"},{"lineNumber":442,"author":{"gitId":"ChrisLangton"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2021-10-26"},{"lineNumber":443,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":444,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":445,"author":{"gitId":"ChrisLangton"},"content":"        return new ProjectionCommand(years);","lastModifiedDate":"2021-11-02"},{"lineNumber":446,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":447,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"ChrisLangton":52,"Rrraaaeee":245,"fansxx":106,"theeugenechong":44}},{"path":"src/main/java/cooper/parser/ParserBase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import java.io.File;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"import com.dopsun.chatbot.cli.Parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"import com.dopsun.chatbot.cli.ParserBuilder;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"import com.dopsun.chatbot.cli.input.CommandSet;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"import com.dopsun.chatbot.cli.input.FileCommandSet;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"import com.dopsun.chatbot.cli.input.FileTrainingSet;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"import com.dopsun.chatbot.cli.input.TrainingSet;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidDocumentException;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.UnrecognisedCommandException;","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidAddFormatException;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.InvalidScheduleFormatException;","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidUserRoleException;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.NoTimeEnteredException;","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.NoUsernameAfterCommaException;","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.ParserUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"import cooper.util.Util;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"public abstract class ParserBase {","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"    protected Parser parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"    protected static final String WHITESPACE_SEQUENCE \u003d \"\\\\s+\";","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"     * Constructor. Initialise internal parser.","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"    public ParserBase(String schema) {","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"            InputStream commandSetInputStream \u003d this.getClass().getResourceAsStream(\"/parser/\" + schema);","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"            File commandSetTmpFile \u003d Util.inputStreamToTmpFile(commandSetInputStream,","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"                    System.getProperty(\"user.dir\") + \"/tmp\", \"/tmp_\" + schema);","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"            InputStream trainingPathInputStream \u003d this.getClass().getResourceAsStream(\"/parser/training-data.yml\");","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"            File trainingTmpFile \u003d Util.inputStreamToTmpFile(trainingPathInputStream,","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"                    System.getProperty(\"user.dir\") + \"/tmp\", \"/tmp_file_training.txt\");","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"            parser \u003d prepareParser(commandSetTmpFile.getPath(), trainingTmpFile.getPath());","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"        } catch (IOException | URISyntaxException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"            ParserUi.showTmpFileCreationError();","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"Rrraaaeee"},"content":"     * API to parse a string.","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"Rrraaaeee"},"content":"     * @param input command to be parsed","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"Rrraaaeee"},"content":"    public abstract Object parseInput(String input) throws UnrecognisedCommandException, InvalidCommandFormatException,","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Rrraaaeee"},"content":"            InvalidUserRoleException, InvalidScheduleFormatException, NoTimeEnteredException,","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"Rrraaaeee"},"content":"            NoUsernameAfterCommaException, InvalidDocumentException, InvalidAddFormatException;","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"Rrraaaeee"},"content":"     * A parser takes in a schema. Every child class needs to have its own schema.","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"Rrraaaeee"},"content":"    private Parser prepareParser(String commandSetPath, String trainingPath) throws URISyntaxException {","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"Rrraaaeee"},"content":"        // File.separator","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"Rrraaaeee"},"content":"        Path csPath \u003d Paths.get(new File(commandSetPath).toURI());","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"Rrraaaeee"},"content":"        CommandSet commandSet \u003d new FileCommandSet(csPath);","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"Rrraaaeee"},"content":"        Path tsPath \u003d Paths.get(new File(trainingPath).toURI());","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"Rrraaaeee"},"content":"        TrainingSet trainingSet \u003d new FileTrainingSet(tsPath);","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"Rrraaaeee"},"content":"        ParserBuilder parserBuilder \u003d Parser.newBuilder();","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"Rrraaaeee"},"content":"        parserBuilder.addCommandSet(commandSet);","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"Rrraaaeee"},"content":"        parserBuilder.addTrainingSet(trainingSet);","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"Rrraaaeee"},"content":"        return parserBuilder.build();","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"ChrisLangton":1,"Rrraaaeee":69,"theeugenechong":7,"fansxx":4}},{"path":"src/main/java/cooper/parser/SignInDetailsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import com.dopsun.chatbot.cli.Argument;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import com.dopsun.chatbot.cli.ParseResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidUserRoleException;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.UnrecognisedCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.Login;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.PasswordHasher;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.Registration;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInProtocol;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":" * Parser to parse sign in details for verification.","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"@SuppressWarnings(\"OptionalGetWithoutIsPresent\")","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"public class SignInDetailsParser extends  ParserBase {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"    private static SignInDetailsParser signInDetailsParserImpl \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"    protected static final String ADMIN \u003d \"admin\";","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"    protected static final String EMPLOYEE \u003d \"employee\";","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"    protected static final String LOGIN \u003d \"login\";","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"    protected static final String REGISTER \u003d \"register\";","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"    protected static final String EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"    /* Constants to help dopsun parser */","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"    private static final String SIGN_IN_DATA_PROPERTIES \u003d \"sign-in-data.properties\";","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"    private static final String USERNAME_HINT \u003d \"username-hint\";","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"    private static final String PASSWORD_HINT \u003d \"password-hint\";","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"    private static final String ROLE_HINT \u003d \"role-hint\";","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"     * Constructor. Initialise internal parser.","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"    private SignInDetailsParser()  {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"        super(SIGN_IN_DATA_PROPERTIES);","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"     * API to parse a command in string.","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"     * @param input command to be parsed","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"     * @return a SignInProtocol object, to be passed to verifier","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"    public static SignInProtocol parse(String input) throws UnrecognisedCommandException, NoSuchElementException,","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"            InvalidCommandFormatException, InvalidUserRoleException {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"        if (signInDetailsParserImpl \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"            signInDetailsParserImpl \u003d new SignInDetailsParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"        assert signInDetailsParserImpl !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"        return signInDetailsParserImpl.parseInput(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"     * Gets the raw password of the user as it is not good to store the raw password in the object itself.","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"     * @param input user input","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"     * @return The user\u0027s unencrypted password","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"    public static String parseRawPassword(String input) throws InvalidCommandFormatException {","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"        if (signInDetailsParserImpl \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"            signInDetailsParserImpl \u003d new SignInDetailsParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"        return signInDetailsParserImpl.parsePassword(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"     * Parses the sign in details entered by the user.","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"     * @param input sign in details to be parsed","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"theeugenechong"},"content":"     * @return a {@code SignInProtocol} object containing the sign in details of the user signing in","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"     * @throws InvalidUserRoleException if the user is not signing in with admin or employee","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"     * @throws UnrecognisedCommandException if the user is entering none of login, register or exit","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"     * @throws InvalidCommandFormatException if the sign in details are missing some arguments","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"    @Override","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"    public SignInProtocol parseInput(String input) throws InvalidUserRoleException, UnrecognisedCommandException,","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"            InvalidCommandFormatException {","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"        assert input !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"        String signInProtocol \u003d input.split(WHITESPACE_SEQUENCE)[0].toLowerCase();","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"        switch (signInProtocol) {","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"        case LOGIN:","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"        case REGISTER:","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"            return parseSignInDetails(input);","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"        case EXIT:","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"            exitProgram();","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"theeugenechong"},"content":"            return null;","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"        default:","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"            throw new UnrecognisedCommandException();","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"     * Shows a bye message and exits the program.","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"    private void exitProgram() {","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":"        Ui.showBye();","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"theeugenechong"},"content":"        Ui.closeStreams();","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"theeugenechong"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"theeugenechong"},"content":"     * Parses the {@code input} and constructs a {@code SignInProtocol} object which represents the sign-in process","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"theeugenechong"},"content":"     * of the user.","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"theeugenechong"},"content":"     * @param input user input","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"theeugenechong"},"content":"     * @return {@code SignInProtocol} containing the users sign in details","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"theeugenechong"},"content":"     * @throws InvalidUserRoleException if the user is not signing in with admin or employee","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"theeugenechong"},"content":"     * @throws NoSuchElementException if the arguments are missing from the input","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"theeugenechong"},"content":"     * @throws InvalidCommandFormatException if the sign in details are of the wrong format","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"theeugenechong"},"content":"    private SignInProtocol parseSignInDetails(String input) throws UnrecognisedCommandException,","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"theeugenechong"},"content":"            InvalidUserRoleException, NoSuchElementException, InvalidCommandFormatException {","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"theeugenechong"},"content":"        Optional\u003cParseResult\u003e optResult \u003d parser.tryParse(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"theeugenechong"},"content":"        if (optResult.isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"theeugenechong"},"content":"            var result \u003d optResult.get();","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"theeugenechong"},"content":"            String command \u003d result.allCommands().get(0).name();","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"theeugenechong"},"content":"            List\u003cArgument\u003e commandArgs \u003d result.allCommands().get(0).arguments();","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"theeugenechong"},"content":"            switch (command) {","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"theeugenechong"},"content":"            case LOGIN:","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"theeugenechong"},"content":"                SignInDetails signInDetails \u003d parseSignInArgs(commandArgs);","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"theeugenechong"},"content":"                return new Login(signInDetails);","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"theeugenechong"},"content":"            case REGISTER:","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"theeugenechong"},"content":"                signInDetails \u003d parseSignInArgs(commandArgs);","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"theeugenechong"},"content":"                return new Registration(signInDetails);","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"theeugenechong"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"theeugenechong"},"content":"                throw new UnrecognisedCommandException();","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"theeugenechong"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"theeugenechong"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"theeugenechong"},"content":"            throw new InvalidCommandFormatException();","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"theeugenechong"},"content":"     * Similar to {@code parseSignInDetails} but is a helper method.","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"theeugenechong"},"content":"    private SignInDetails parseSignInArgs(List\u003cArgument\u003e commandArgs) throws InvalidUserRoleException,","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"theeugenechong"},"content":"            NoSuchElementException, InvalidCommandFormatException {","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"theeugenechong"},"content":"        String username \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"theeugenechong"},"content":"        String userEncryptedPassword \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"theeugenechong"},"content":"        String userSalt \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"theeugenechong"},"content":"        UserRole userRole \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"theeugenechong"},"content":"        for (Argument a : commandArgs) {","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"theeugenechong"},"content":"            String argName \u003d a.name();","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"theeugenechong"},"content":"            String argVal \u003d a.value().get();","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"theeugenechong"},"content":"            switch (argName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"theeugenechong"},"content":"            case USERNAME_HINT:","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"theeugenechong"},"content":"                username \u003d argVal;","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"theeugenechong"},"content":"                break;","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"theeugenechong"},"content":"            case PASSWORD_HINT:","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"theeugenechong"},"content":"                userSalt \u003d PasswordHasher.getNewSalt();","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"theeugenechong"},"content":"                userEncryptedPassword \u003d PasswordHasher.generatePasswordHash(argVal, userSalt);","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"theeugenechong"},"content":"                break;","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"theeugenechong"},"content":"            case ROLE_HINT:","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"theeugenechong"},"content":"                userRole \u003d checkUserRole(argVal);","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"theeugenechong"},"content":"                break;","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"theeugenechong"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"theeugenechong"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"theeugenechong"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"theeugenechong"},"content":"        return new SignInDetails(username, userEncryptedPassword, userSalt, userRole);","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":177,"author":{"gitId":"theeugenechong"},"content":"     * Helper method to check if the role input by the user is one of admin or employee.","lastModifiedDate":"2021-11-01"},{"lineNumber":178,"author":{"gitId":"theeugenechong"},"content":"     * @param role role input by the user","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"theeugenechong"},"content":"     * @return the role the user included in their sign in details","lastModifiedDate":"2021-11-01"},{"lineNumber":180,"author":{"gitId":"theeugenechong"},"content":"     * @throws InvalidUserRoleException if the role is neither admin nor employee","lastModifiedDate":"2021-11-01"},{"lineNumber":181,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"theeugenechong"},"content":"    private UserRole checkUserRole(String role) throws InvalidUserRoleException {","lastModifiedDate":"2021-10-31"},{"lineNumber":183,"author":{"gitId":"theeugenechong"},"content":"        UserRole userRole;","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"theeugenechong"},"content":"        if (role.trim().equalsIgnoreCase(ADMIN)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"theeugenechong"},"content":"            userRole \u003d UserRole.ADMIN;","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"theeugenechong"},"content":"        } else if (role.trim().equalsIgnoreCase(EMPLOYEE)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"theeugenechong"},"content":"            userRole \u003d UserRole.EMPLOYEE;","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"theeugenechong"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"theeugenechong"},"content":"            throw new InvalidUserRoleException();","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":191,"author":{"gitId":"theeugenechong"},"content":"        return userRole;","lastModifiedDate":"2021-10-31"},{"lineNumber":192,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":193,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":194,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":195,"author":{"gitId":"theeugenechong"},"content":"     * Parses the user input to get the raw password of the user.","lastModifiedDate":"2021-10-30"},{"lineNumber":196,"author":{"gitId":"theeugenechong"},"content":"     * @return a string representing the user\u0027s raw password","lastModifiedDate":"2021-10-30"},{"lineNumber":197,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":198,"author":{"gitId":"theeugenechong"},"content":"    private String parsePassword(String input) throws InvalidCommandFormatException, NoSuchElementException {","lastModifiedDate":"2021-11-01"},{"lineNumber":199,"author":{"gitId":"theeugenechong"},"content":"        Optional\u003cParseResult\u003e optResult \u003d parser.tryParse(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"theeugenechong"},"content":"        if (optResult.isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"theeugenechong"},"content":"            var result \u003d optResult.get();","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"theeugenechong"},"content":"            List\u003cArgument\u003e commandArgs \u003d result.allCommands().get(0).arguments();","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"theeugenechong"},"content":"            return getRawPassword(commandArgs);","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"theeugenechong"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"theeugenechong"},"content":"            throw new InvalidCommandFormatException();","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":210,"author":{"gitId":"theeugenechong"},"content":"     * Helper method for {@code parsePassword}.","lastModifiedDate":"2021-10-30"},{"lineNumber":211,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":212,"author":{"gitId":"theeugenechong"},"content":"    private String getRawPassword(List\u003cArgument\u003e commandArgs) throws InvalidCommandFormatException,","lastModifiedDate":"2021-11-01"},{"lineNumber":213,"author":{"gitId":"theeugenechong"},"content":"            NoSuchElementException {","lastModifiedDate":"2021-11-01"},{"lineNumber":214,"author":{"gitId":"theeugenechong"},"content":"        String userRawPassword \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"theeugenechong"},"content":"        for (Argument a : commandArgs) {","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"theeugenechong"},"content":"            String argName \u003d a.name();","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"theeugenechong"},"content":"            String argVal \u003d a.value().get();","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"theeugenechong"},"content":"            switch (argName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"theeugenechong"},"content":"            case USERNAME_HINT:","lastModifiedDate":"2021-10-31"},{"lineNumber":220,"author":{"gitId":"theeugenechong"},"content":"            case ROLE_HINT:","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"theeugenechong"},"content":"                break;","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"theeugenechong"},"content":"            case PASSWORD_HINT:","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"theeugenechong"},"content":"                userRawPassword \u003d argVal;","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"theeugenechong"},"content":"                break;","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"theeugenechong"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"theeugenechong"},"content":"                throw new InvalidCommandFormatException();","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"theeugenechong"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"theeugenechong"},"content":"        return userRawPassword;","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theeugenechong":231}},{"path":"src/main/java/cooper/resources/ResourcesManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.resources;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.finance.FinanceManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.meetings.MeetingManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.storage.StorageManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.forum.ForumManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"public class ResourcesManager {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"    private final FinanceManager cooperFinanceManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"    private final MeetingManager cooperMeetingManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"    private final ForumManager cooperForumManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"    public ResourcesManager() {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"        cooperFinanceManager \u003d new FinanceManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"        cooperMeetingManager \u003d new MeetingManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"        cooperForumManager \u003d new ForumManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"    ","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"    public FinanceManager getFinanceManager(UserRole userRole) {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"        if (checkFinanceAccessibility(userRole)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"            return cooperFinanceManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"            return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"    public MeetingManager getMeetingManager(UserRole userRole) {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"        if (checkMeetingAccessibility(userRole)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"            return cooperMeetingManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"            return null;","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"    public MeetingManager getMeetingManager() {","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"        return cooperMeetingManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"    public ForumManager getForumManager(UserRole userRole) {","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"        if (checkForumAccessibility(userRole)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"            return cooperForumManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"            return null;","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"    private boolean checkFinanceAccessibility(UserRole userRole) {","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"        return (userRole.equals(UserRole.ADMIN));","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"Rrraaaeee"},"content":"    private boolean checkMeetingAccessibility(UserRole userRole) {","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"Rrraaaeee"},"content":"        return (userRole.equals(UserRole.ADMIN));","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"Rrraaaeee"},"content":"    private boolean checkForumAccessibility(UserRole userRole) {","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"Rrraaaeee"},"content":"        return (userRole.equals(UserRole.ADMIN) || userRole.equals(UserRole.EMPLOYEE));","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"Rrraaaeee"},"content":"     * Storage class has \"super privilege\" to access private member in resources class.","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"Rrraaaeee"},"content":"     * Use this give-receive pattern to get private members from ResourcesManager (Similar to friend class)","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"Rrraaaeee"},"content":"     * Pattern adapted from:","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"Rrraaaeee"},"content":"     * https://stackoverflow.com/questions/14226228/implementation-of-friend-concept-in-javat","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"Rrraaaeee"},"content":"     **/","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"Rrraaaeee"},"content":"    public FinanceManager giveFinanceManager(StorageManager storageManager) {","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"Rrraaaeee"},"content":"        return storageManager.receiveFinanceManager(cooperFinanceManager);","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"Rrraaaeee"},"content":"    public MeetingManager giveMeetingManager(StorageManager storageManager) {","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"Rrraaaeee"},"content":"        return storageManager.receiveMeetingManager(cooperMeetingManager);","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"Rrraaaeee"},"content":"    public ForumManager giveForumManager(StorageManager storageManager) {","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"Rrraaaeee"},"content":"        return storageManager.receiveForumManager(cooperForumManager);","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"Rrraaaeee":82}},{"path":"src/main/java/cooper/storage/AvailabilityStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.InvalidFileDataException;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"import cooper.meetings.MeetingManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FileIoUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"fansxx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"fansxx"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"fansxx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"fansxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"fansxx"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"fansxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"fansxx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"fansxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"fansxx"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"fansxx"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"fansxx"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"fansxx"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"fansxx"},"content":"public class AvailabilityStorage extends Storage {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"fansxx"},"content":"    protected static final String AVAILABILITY_TXT \u003d \"availability.txt\";","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"fansxx"},"content":"    protected static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"fansxx"},"content":"    protected static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"fansxx"},"content":"    protected static final String DATE_TIME_FORMAT \u003d \"dd-MM-yyyy HH:mm\";","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"fansxx"},"content":"    protected static final String COMMA \u003d \",\";","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"fansxx"},"content":"    public AvailabilityStorage(String filePath) {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"fansxx"},"content":"        super(filePath);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"fansxx"},"content":"    public void loadAvailability(MeetingManager cooperMeetingManager) {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"fansxx"},"content":"        TreeMap\u003cLocalDateTime, ArrayList\u003cString\u003e\u003e availability \u003d cooperMeetingManager.getAvailability();","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"fansxx"},"content":"        Scanner fileScanner \u003d getScanner(filePath);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"fansxx"},"content":"        readAvailability(fileScanner, availability);","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"fansxx"},"content":"    public void saveAvailability(MeetingManager cooperMeetingManager) {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"fansxx"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"fansxx"},"content":"            writeAvailability(filePath, cooperMeetingManager.getAvailability());","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"fansxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"fansxx"},"content":"            FileIoUi.showFileWriteError(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"fansxx"},"content":"            System.exit(1);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"fansxx"},"content":"    private void readAvailability(Scanner fileScanner, TreeMap\u003cLocalDateTime, ArrayList\u003cString\u003e\u003e availability) {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"fansxx"},"content":"        if (fileScanner \u003d\u003d null) {","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"fansxx"},"content":"            return;","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"fansxx"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"fansxx"},"content":"            String availabilityRow \u003d fileScanner.nextLine();","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"fansxx"},"content":"            try {","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"fansxx"},"content":"                decodeAvailability(availabilityRow, availability);","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"fansxx"},"content":"            } catch (InvalidFileDataException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"fansxx"},"content":"                FileIoUi.showInvalidFileDataError(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"fansxx"},"content":"    private void decodeAvailability(String availabilityRowAsString, TreeMap\u003cLocalDateTime,","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"fansxx"},"content":"            ArrayList\u003cString\u003e\u003e availability) throws InvalidFileDataException {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"fansxx"},"content":"        String[] availabilityRowAsArray \u003d availabilityRowAsString.split(SEPARATOR_REGEX);","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"fansxx"},"content":"        if (isInvalidFileData(availabilityRowAsArray)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"fansxx"},"content":"            throw new InvalidFileDataException(AVAILABILITY_TXT);","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"fansxx"},"content":"        assert !isInvalidFileData(availabilityRowAsArray);","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"fansxx"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"fansxx"},"content":"        String dateTime \u003d availabilityRowAsArray[0].trim() + \" \" + availabilityRowAsArray[1].trim();","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"fansxx"},"content":"        LocalDateTime availableDateTime \u003d LocalDateTime.parse(dateTime, dateTimeFormat);","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"fansxx"},"content":"        String[] attendeesAsArray \u003d availabilityRowAsArray[2].trim().split(COMMA);","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"fansxx"},"content":"        ArrayList\u003cString\u003e attendees \u003d new ArrayList\u003c\u003e(Arrays.asList(attendeesAsArray));","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"fansxx"},"content":"        availability.put(availableDateTime, attendees);","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"fansxx"},"content":"    private boolean isInvalidFileData(String[] availability) {","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"fansxx"},"content":"        if (availability.length !\u003d 3) {","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"fansxx"},"content":"            return true;","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"fansxx"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"fansxx"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"fansxx"},"content":"            LocalDate availabilityDate \u003d LocalDate.parse(availability[0].trim(), dateFormat);","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"fansxx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"fansxx"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"fansxx"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"fansxx"},"content":"            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(TIME_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"fansxx"},"content":"            LocalTime availabilityTime \u003d LocalTime.parse(availability[1].trim(), timeFormat);","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"fansxx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"fansxx"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"fansxx"},"content":"        for (String s : availability) {","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"fansxx"},"content":"            if (s.isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"fansxx"},"content":"                return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"fansxx"},"content":"        return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"fansxx"},"content":"    private void writeAvailability(String filePath, TreeMap\u003cLocalDateTime, ArrayList\u003cString\u003e\u003e meetings)","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"fansxx"},"content":"            throws IOException {","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"fansxx"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"fansxx"},"content":"        for (Map.Entry\u003cLocalDateTime, ArrayList\u003cString\u003e\u003e e : meetings.entrySet()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"fansxx"},"content":"            String encodeAvailability \u003d encodeAvailability(e);","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"fansxx"},"content":"            fileWriter.write(encodeAvailability + System.lineSeparator());","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"fansxx"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"fansxx"},"content":"    private String encodeAvailability(Map.Entry\u003cLocalDateTime, ArrayList\u003cString\u003e\u003e meeting) {","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"fansxx"},"content":"        StringBuilder encodedAvailability \u003d new StringBuilder();","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"fansxx"},"content":"        String availableDate \u003d meeting.getKey().toLocalDate().format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"fansxx"},"content":"        encodedAvailability.append(availableDate).append(SEPARATOR);","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"fansxx"},"content":"        String availableTime \u003d meeting.getKey().toLocalTime().format(DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"fansxx"},"content":"        encodedAvailability.append(availableTime).append(SEPARATOR);","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"fansxx"},"content":"        String availabilities \u003d getAttendeesAsString(meeting.getValue());","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"fansxx"},"content":"        encodedAvailability.append(availabilities);","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"fansxx"},"content":"        return String.valueOf(encodedAvailability);","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"fansxx"},"content":"    private String getAttendeesAsString(ArrayList\u003cString\u003e attendees) {","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"fansxx"},"content":"        StringBuilder attendeesAsString \u003d new StringBuilder();","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"fansxx"},"content":"        for (String a : attendees) {","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"fansxx"},"content":"            /* don\u0027t need comma for last attendee */","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"fansxx"},"content":"            int indexOfLastAttendee \u003d attendees.size() - 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"fansxx"},"content":"            if (a.equals(attendees.get(indexOfLastAttendee))) {","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"fansxx"},"content":"                attendeesAsString.append(a);","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"fansxx"},"content":"            } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"fansxx"},"content":"                attendeesAsString.append(a).append(COMMA);","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"fansxx"},"content":"        return String.valueOf(attendeesAsString);","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"fansxx":148,"theeugenechong":1}},{"path":"src/main/java/cooper/storage/BalanceSheetStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidFileDataException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"import cooper.finance.BalanceSheet;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.FinanceManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FileIoUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"public class BalanceSheetStorage extends Storage {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"    protected static final String BALANCE_SHEET_TXT \u003d \"balanceSheet.txt\";","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"    public BalanceSheetStorage(String filePath) {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"        super(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"    public void loadBalanceSheet(BalanceSheet cooperBalanceSheet) {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"        ArrayList\u003cInteger\u003e balanceSheet \u003d cooperBalanceSheet.getBalanceSheet();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"        Scanner fileScanner \u003d getScanner(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"        readBalanceSheet(fileScanner, balanceSheet);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"    public void saveBalanceSheet(BalanceSheet cooperBalanceSheet) {","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"            writeBalanceSheet(filePath, cooperBalanceSheet.getBalanceSheet());","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"            FileIoUi.showFileWriteError(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"            System.exit(1);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"    private void readBalanceSheet(Scanner fileScanner, ArrayList\u003cInteger\u003e balanceSheet) {","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"        if (fileScanner \u003d\u003d null) {","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"            return;","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"        int bsEntryIndex \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"        while (fileScanner.hasNext() \u0026\u0026 bsEntryIndex \u003c\u003d FinanceManager.endOfSE) {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"ChrisLangton"},"content":"            String expense \u003d fileScanner.nextLine();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"ChrisLangton"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"ChrisLangton"},"content":"                int decodedExpense \u003d decodeExpense(expense);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"ChrisLangton"},"content":"                balanceSheet.set(bsEntryIndex, decodedExpense);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"ChrisLangton"},"content":"                addNetValues(bsEntryIndex, decodedExpense);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"ChrisLangton"},"content":"                bsEntryIndex++;","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"ChrisLangton"},"content":"            } catch (InvalidFileDataException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"ChrisLangton"},"content":"                FileIoUi.showInvalidFileDataError(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"ChrisLangton"},"content":"    private void addNetValues(int bsEntryIndex, int decodedExpense) {","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"ChrisLangton"},"content":"        if (bsEntryIndex \u003c\u003d FinanceManager.endOfAssets) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"ChrisLangton"},"content":"            FinanceManager.netAssets +\u003d decodedExpense;","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"ChrisLangton"},"content":"        } else if (bsEntryIndex \u003c\u003d FinanceManager.endOfLiabilities) {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"ChrisLangton"},"content":"            FinanceManager.netLiabilities +\u003d decodedExpense;","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"ChrisLangton"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"ChrisLangton"},"content":"            FinanceManager.netSE +\u003d decodedExpense;","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"ChrisLangton"},"content":"    private int decodeExpense(String expense) throws InvalidFileDataException {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"ChrisLangton"},"content":"        if (isInvalidFileData(expense)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"ChrisLangton"},"content":"            throw new InvalidFileDataException(BALANCE_SHEET_TXT);","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"ChrisLangton"},"content":"        return Integer.parseInt(expense);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"ChrisLangton"},"content":"    private boolean isInvalidFileData(String expenseAsString) {","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"ChrisLangton"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"ChrisLangton"},"content":"            int dummyExpense \u003d Integer.parseInt(expenseAsString);","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"ChrisLangton"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"ChrisLangton"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"ChrisLangton"},"content":"        return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"ChrisLangton"},"content":"    private void writeBalanceSheet(String filePath, ArrayList\u003cInteger\u003e balanceSheet) throws IOException {","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"ChrisLangton"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"ChrisLangton"},"content":"        for (Integer expense : balanceSheet) {","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"ChrisLangton"},"content":"            String encodedExpense \u003d encodeExpense(expense);","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"ChrisLangton"},"content":"            fileWriter.write(encodedExpense + System.lineSeparator());","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"ChrisLangton"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"ChrisLangton"},"content":"    private String encodeExpense(Integer expense) {","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"ChrisLangton"},"content":"        return expense.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ChrisLangton":85,"theeugenechong":11}},{"path":"src/main/java/cooper/storage/CashFlowStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import cooper.exceptions.InvalidFileDataException;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"import cooper.finance.CashFlow;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"import cooper.finance.FinanceManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FileIoUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"public class CashFlowStorage extends Storage {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"    protected static final String CASH_FLOW_STATEMENT_TXT \u003d \"cashFlowStatement.txt\";","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"    public CashFlowStorage(String filePath) {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"        super(filePath);","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"    public void loadCashFlowStatement(CashFlow cooperCashFlowStatement) {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"        ArrayList\u003cInteger\u003e cashFlowStatement \u003d cooperCashFlowStatement.getCashFlowStatement();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"        Scanner fileScanner \u003d getScanner(filePath);","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"        readCashFlowStatement(fileScanner, cashFlowStatement);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"    public void saveCashFlowStatement(CashFlow cooperCashFlowStatement) {","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"            writeCashFlowStatement(filePath, cooperCashFlowStatement.getCashFlowStatement());","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"            FileIoUi.showFileWriteError(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"            System.exit(1);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"    private void readCashFlowStatement(Scanner fileScanner, ArrayList\u003cInteger\u003e cashFlowStatement) {","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"        if (fileScanner \u003d\u003d null) {","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"            return;","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"        int cfEntryIndex \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"        while (fileScanner.hasNext() \u0026\u0026 cfEntryIndex \u003c\u003d FinanceManager.freeCashFlow) {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"ChrisLangton"},"content":"            String expense \u003d fileScanner.nextLine();","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"ChrisLangton"},"content":"            try {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"ChrisLangton"},"content":"                int decodedExpense \u003d decodeExpense(expense);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"ChrisLangton"},"content":"                cashFlowStatement.set(cfEntryIndex, decodedExpense);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"ChrisLangton"},"content":"                addNetValues(cfEntryIndex, decodedExpense);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"ChrisLangton"},"content":"                cfEntryIndex++;","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"ChrisLangton"},"content":"            } catch (InvalidFileDataException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"ChrisLangton"},"content":"                FileIoUi.showInvalidFileDataError(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"ChrisLangton"},"content":"    private void addNetValues(int cfEntryIndex, int decodedExpense) {","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"ChrisLangton"},"content":"        if (cfEntryIndex \u003c\u003d FinanceManager.endOfOA) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"ChrisLangton"},"content":"            FinanceManager.netOA +\u003d decodedExpense;","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"ChrisLangton"},"content":"        } else if (cfEntryIndex \u003c\u003d FinanceManager.endOfIA) {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"ChrisLangton"},"content":"            FinanceManager.netIA +\u003d decodedExpense;","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"ChrisLangton"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"ChrisLangton"},"content":"            FinanceManager.netFA +\u003d decodedExpense;","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"ChrisLangton"},"content":"    private int decodeExpense(String expense) throws InvalidFileDataException {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"ChrisLangton"},"content":"        if (isInvalidFileData(expense)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"ChrisLangton"},"content":"            throw new InvalidFileDataException(CASH_FLOW_STATEMENT_TXT);","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"ChrisLangton"},"content":"        return Integer.parseInt(expense);","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"ChrisLangton"},"content":"    private static boolean isInvalidFileData(String expenseAsString) {","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"ChrisLangton"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"ChrisLangton"},"content":"            int expense \u003d Integer.parseInt(expenseAsString);","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"ChrisLangton"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"ChrisLangton"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"ChrisLangton"},"content":"        return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"ChrisLangton"},"content":"    private void writeCashFlowStatement(String filePath, ArrayList\u003cInteger\u003e cashFlowStatement)","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"ChrisLangton"},"content":"            throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"ChrisLangton"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"ChrisLangton"},"content":"        for (Integer expense : cashFlowStatement) {","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"ChrisLangton"},"content":"            String encodedExpense \u003d encodeExpense(expense);","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"ChrisLangton"},"content":"            fileWriter.write(encodedExpense + System.lineSeparator());","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"ChrisLangton"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"ChrisLangton"},"content":"    private String encodeExpense(Integer expense) {","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"ChrisLangton"},"content":"        return expense.toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"ChrisLangton":96,"theeugenechong":1}},{"path":"src/main/java/cooper/storage/ForumStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.storage;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.InvalidForumPostIdException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.forum.ForumComment;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.forum.ForumManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.forum.ForumPost;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.ui.FileIoUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.ui.ForumUi;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"public class ForumStorage extends Storage {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"    protected static final String POST \u003d \"P\";","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"    protected static final String COMMENT \u003d \"C\";","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"    public ForumStorage(String filePath) {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"        super(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"    public void loadForum(ForumManager cooperForumManager) {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"        Scanner fileScanner \u003d getScanner(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"        if (fileScanner \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"            return;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"        int currentPostId \u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"            String[] post \u003d fileScanner.nextLine().split(SEPARATOR_REGEX);","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"            switch (post[0]) {","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"            case POST:","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"                currentPostId++;","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"                cooperForumManager.addPost(post[1],post[2]);","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"                break;","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"            case COMMENT:","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"                tryAddPostComment(cooperForumManager, post, currentPostId - 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"                break;","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"            default:","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"                break;","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"    private void tryAddPostComment(ForumManager forumManager, String[] post, int postId) {","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"            forumManager.addComment(post[1],post[2],postId);","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"        } catch (InvalidForumPostIdException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"            ForumUi.printInvalidForumPostIndexError();","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"            System.exit(1);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Rrraaaeee"},"content":"    public void saveForum(ForumManager cooperForumManager) {","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Rrraaaeee"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Rrraaaeee"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Rrraaaeee"},"content":"            ArrayList\u003cForumPost\u003e forumPosts \u003d cooperForumManager.getForumPosts();","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Rrraaaeee"},"content":"            for (ForumPost post : forumPosts) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"Rrraaaeee"},"content":"                saveForumPost(fileWriter, post);","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"Rrraaaeee"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Rrraaaeee"},"content":"            fileWriter.close();","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Rrraaaeee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Rrraaaeee"},"content":"            FileIoUi.showFileWriteError(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Rrraaaeee"},"content":"            System.exit(1);","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"Rrraaaeee"},"content":"    private void saveForumPost(FileWriter fileWriter, ForumPost post) throws IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"Rrraaaeee"},"content":"        fileWriter.write(\"P|\" + post.getUsername() + \"|\" + post.getContent() + \"\\n\");","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"Rrraaaeee"},"content":"        for (ForumComment comment : post.getComments()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"Rrraaaeee"},"content":"            fileWriter.write(\"C|\" + comment.getUsername() + \"|\" + comment.getContent() + \"\\n\");","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Rrraaaeee":75,"theeugenechong":2}},{"path":"src/main/java/cooper/storage/MeetingsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidFileDataException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"import cooper.meetings.Meeting;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.meetings.MeetingManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FileIoUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"fansxx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"fansxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"fansxx"},"content":"public class MeetingsStorage extends Storage {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"fansxx"},"content":"    protected static final String DATE_TIME_FORMAT \u003d \"dd-MM-yyyy HH:mm\";","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"fansxx"},"content":"    protected static final String COMMA \u003d \",\";","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"fansxx"},"content":"    protected static final String MEETINGS_TXT \u003d \"meetings.txt\";","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"fansxx"},"content":"    public static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"fansxx"},"content":"    public static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"fansxx"},"content":"    public MeetingsStorage(String filePath) {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"fansxx"},"content":"        super(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"fansxx"},"content":"    public void loadMeetings(MeetingManager cooperMeetingManager) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"fansxx"},"content":"        ArrayList\u003cMeeting\u003e meetings \u003d cooperMeetingManager.getMeetingsList();","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"fansxx"},"content":"        Scanner fileScanner \u003d getScanner(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"fansxx"},"content":"        readMeetings(fileScanner, meetings);","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"fansxx"},"content":"    public void saveMeetings(MeetingManager cooperMeetingManager) {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"fansxx"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"fansxx"},"content":"            writeMeetings(filePath, cooperMeetingManager.getMeetingsList());","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"fansxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"fansxx"},"content":"            FileIoUi.showFileWriteError(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"fansxx"},"content":"            System.exit(1);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"fansxx"},"content":"    private void readMeetings(Scanner fileScanner, ArrayList\u003cMeeting\u003e meetings) {","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"fansxx"},"content":"        if (fileScanner \u003d\u003d null) {","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"fansxx"},"content":"            return;","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"fansxx"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"fansxx"},"content":"            String meetingsRow \u003d fileScanner.nextLine();","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"fansxx"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"fansxx"},"content":"                decodeMeetings(meetingsRow, meetings);","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"fansxx"},"content":"            } catch (InvalidFileDataException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"fansxx"},"content":"                FileIoUi.showInvalidFileDataError(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"fansxx"},"content":"    private void decodeMeetings(String meetingAsString, ArrayList\u003cMeeting\u003e meetings)","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"fansxx"},"content":"            throws InvalidFileDataException {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"fansxx"},"content":"        String[] attendees \u003d meetingAsString.split(SEPARATOR_REGEX);","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"fansxx"},"content":"        if (isInvalidFileData(attendees)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"fansxx"},"content":"            throw new InvalidFileDataException(MEETINGS_TXT);","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"fansxx"},"content":"        assert !isInvalidFileData(attendees);","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"fansxx"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"fansxx"},"content":"        String dateTime \u003d attendees[0].trim() + \" \" + attendees[1].trim();","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"fansxx"},"content":"        LocalDateTime meetingTime \u003d LocalDateTime.parse(dateTime, dateTimeFormat);","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"fansxx"},"content":"        String meetingName \u003d attendees[2].trim();","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"fansxx"},"content":"        String[] attendeesAsArray \u003d attendees[3].trim().split(COMMA);","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"fansxx"},"content":"        ArrayList\u003cString\u003e attendeesArrayList \u003d new ArrayList\u003c\u003e(Arrays.asList(attendeesAsArray));","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"fansxx"},"content":"        Meeting meeting \u003d new Meeting(meetingName, meetingTime, attendeesArrayList);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"fansxx"},"content":"        meetings.add(meeting);","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"fansxx"},"content":"    private boolean isInvalidFileData(String[] meeting) {","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"fansxx"},"content":"        if (meeting.length !\u003d 4) {","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"fansxx"},"content":"            return true;","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"fansxx"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"fansxx"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"fansxx"},"content":"            LocalDate dummyMeetingDate \u003d LocalDate.parse(meeting[0].trim(), dateFormat);","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"fansxx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"fansxx"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"fansxx"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"fansxx"},"content":"            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(TIME_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"fansxx"},"content":"            LocalTime dummyMeetingTime \u003d LocalTime.parse(meeting[1].trim(), timeFormat);","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"fansxx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"fansxx"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"fansxx"},"content":"        for (String s : meeting) {","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"fansxx"},"content":"            if (s.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"fansxx"},"content":"                return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"fansxx"},"content":"        return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"fansxx"},"content":"    private void writeMeetings(String filePath, ArrayList\u003cMeeting\u003e meetingsList)","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"fansxx"},"content":"            throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"fansxx"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"fansxx"},"content":"        for (Meeting meeting : meetingsList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"fansxx"},"content":"            String encodedMeeting \u003d encodeMeeting(meeting);","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"fansxx"},"content":"            fileWriter.write(encodedMeeting + System.lineSeparator());","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"fansxx"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"fansxx"},"content":"    private String encodeMeeting(Meeting meeting) {","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"fansxx"},"content":"        StringBuilder encodedMeeting \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"fansxx"},"content":"        String meetingDate \u003d meeting.getDateTime().toLocalDate().format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"fansxx"},"content":"        encodedMeeting.append(meetingDate).append(SEPARATOR);","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"fansxx"},"content":"        String meetingTime \u003d meeting.getDateTime().toLocalTime().format(DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"fansxx"},"content":"        encodedMeeting.append(meetingTime).append(SEPARATOR);","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"fansxx"},"content":"        String meetingName \u003d meeting.getMeetingName();","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"fansxx"},"content":"        encodedMeeting.append(meetingName).append(SEPARATOR);","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"fansxx"},"content":"        String attendees \u003d getAttendeesAsString(meeting.getListOfAttendees());","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"fansxx"},"content":"        encodedMeeting.append(attendees);","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"fansxx"},"content":"        return String.valueOf(encodedMeeting);","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"fansxx"},"content":"    private String getAttendeesAsString(ArrayList\u003cString\u003e attendees) {","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"fansxx"},"content":"        StringBuilder meetingAsString \u003d new StringBuilder();","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"fansxx"},"content":"        for (String a : attendees) {","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"fansxx"},"content":"            /* don\u0027t need comma for last attendee */","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"fansxx"},"content":"            int indexOfLastAttendee \u003d attendees.size() - 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"fansxx"},"content":"            if (a.equals(attendees.get(indexOfLastAttendee))) {","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"fansxx"},"content":"                meetingAsString.append(a);","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"fansxx"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"fansxx"},"content":"                meetingAsString.append(a).append(COMMA);","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"fansxx"},"content":"        return String.valueOf(meetingAsString);","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theeugenechong":15,"fansxx":138}},{"path":"src/main/java/cooper/storage/SignInDetailsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidFileDataException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FileIoUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.SignInDetails;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.Verifier;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"public class SignInDetailsStorage extends Storage {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    private static final String ADMIN \u003d \"A\";","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"    private static final String EMPLOYEE \u003d \"E\";","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    private static final String SIGN_IN_DETAILS_TXT \u003d \"signInDetails.txt\";","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    private static final int USERNAME_INDEX \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"    private static final int ENCR_PASSWORD_INDEX \u003d 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"    private static final int SALT_INDEX \u003d 2;","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"    private static final int ROLE_INDEX \u003d 3;","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"    private static final int SIGN_IN_DETAILS_LENGTH \u003d 4;","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"    public SignInDetailsStorage(String filePath) {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"        super(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"    public void loadSignInDetails(Verifier cooperVerifier) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"        HashMap\u003cString, SignInDetails\u003e registeredUsers \u003d cooperVerifier.getRegisteredUsers();","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"        Scanner fileScanner \u003d getScanner(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"        readSignInDetails(fileScanner, registeredUsers);","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"    public void saveSignInDetails(Verifier cooperVerifier) {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"            writeSignInDetails(filePath, cooperVerifier.getRegisteredUsers());","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"            FileIoUi.showFileWriteError(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"            System.exit(1);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"    private void readSignInDetails(Scanner fileScanner, HashMap\u003cString, SignInDetails\u003e registeredUsers) {","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"        if (fileScanner \u003d\u003d null) {","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"            return;","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"            String signInDetails \u003d fileScanner.nextLine();","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"                SignInDetails decodedSignInDetails \u003d decodeSignInDetails(signInDetails);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"                registeredUsers.put(decodedSignInDetails.getUsername(), decodedSignInDetails);","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"            } catch (InvalidFileDataException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"                FileIoUi.showInvalidFileDataError(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"    private SignInDetails decodeSignInDetails(String signInDetailsAsString) throws InvalidFileDataException {","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"        String[] signInDetails \u003d signInDetailsAsString.split(SEPARATOR_REGEX);","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"        if (isInvalidFileData(signInDetails)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"            throw new InvalidFileDataException(SIGN_IN_DETAILS_TXT);","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"        assert !isInvalidFileData(signInDetails);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"        String username \u003d signInDetails[USERNAME_INDEX].trim();","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"        String userEncryptedPassword \u003d signInDetails[ENCR_PASSWORD_INDEX].trim();","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"        String userSalt \u003d signInDetails[SALT_INDEX].trim();","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"        UserRole userRole \u003d signInDetails[ROLE_INDEX].trim().equals(ADMIN) ? UserRole.ADMIN : UserRole.EMPLOYEE;","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"        return new SignInDetails(username, userEncryptedPassword, userSalt, userRole);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"    private boolean isInvalidFileData(String[] signInDetails) {","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"        if (signInDetails.length !\u003d SIGN_IN_DETAILS_LENGTH) {","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"theeugenechong"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"        if (!signInDetails[ROLE_INDEX].trim().equals(ADMIN) \u0026\u0026 !signInDetails[ROLE_INDEX].trim().equals(EMPLOYEE)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"        for (String s : signInDetails) {","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"            if (s.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"                return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"        return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"    private void writeSignInDetails(String filePath, HashMap\u003cString, SignInDetails\u003e registeredUsers)","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"            throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"theeugenechong"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"        for (Map.Entry\u003cString, SignInDetails\u003e e : registeredUsers.entrySet()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"            String encodedSignInDetails \u003d encodeSignInDetails(e);","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"            fileWriter.write(encodedSignInDetails + System.lineSeparator());","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"    private String encodeSignInDetails(Map.Entry\u003cString, SignInDetails\u003e registeredUser) {","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":"        StringBuilder encodedSignInDetails \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"theeugenechong"},"content":"        String username \u003d registeredUser.getKey();","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"theeugenechong"},"content":"        encodedSignInDetails.append(username).append(SEPARATOR);","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"theeugenechong"},"content":"        String userEncryptedPassword \u003d registeredUser.getValue().getUserEncryptedPassword();","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"theeugenechong"},"content":"        encodedSignInDetails.append(userEncryptedPassword).append(SEPARATOR);","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"theeugenechong"},"content":"        String userSalt \u003d registeredUser.getValue().getUserSalt();","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"theeugenechong"},"content":"        encodedSignInDetails.append(userSalt).append(SEPARATOR);","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"theeugenechong"},"content":"        String userRole \u003d registeredUser.getValue().getUserRole().equals(UserRole.ADMIN) ? ADMIN : EMPLOYEE;","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"theeugenechong"},"content":"        encodedSignInDetails.append(userRole);","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"theeugenechong"},"content":"        return String.valueOf(encodedSignInDetails);","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theeugenechong":125}},{"path":"src/main/java/cooper/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.FileIoUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"import java.io.File;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"public class Storage {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"    protected final String filePath;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"    protected static final String SLASH \u003d \"/\";","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"    protected static final String SEPARATOR \u003d \" | \";","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    protected static final String SEPARATOR_REGEX \u003d \"\\\\|\";","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"     * Gets a scanner object to read from a file. If the file is not found, the file is created correctly.","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"     * @param filePath Path of the file","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"     * @return Scanner to read that file","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"    protected Scanner getScanner(String filePath) {","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"        File storageFile \u003d new File(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"        Scanner fileScanner \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"            fileScanner \u003d new Scanner(storageFile);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"            try {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"                createFileInDirectory(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"                FileIoUi.showFileCreationError(ioe);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"        return fileScanner;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"     * Creates a file with the path specified by {@code filePath}.","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"     * @param filePath string representing the file path","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"     * @throws IOException if there is an error creating the file","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"    @SuppressWarnings(\"ResultOfMethodCallIgnored\")","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"    private void createFileInDirectory(String filePath) throws IOException {","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"        String directoryName \u003d getDirectoryPath(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"        File storageDir \u003d new File(directoryName);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"        storageDir.mkdir();","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"        File storageFile \u003d new File(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"        storageFile.createNewFile();","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"     * Helper function which returns the full directory path of {@code filePath}. The purpose of this method","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"     * is so that the directory for the storage file can be created first before the file is created in the","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"     * {@code createFileInDirectory} method.","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"     * @param filePath string representing the file path","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"     * @return a string representing the full directory path of {@code filePath}","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"    private String getDirectoryPath(String filePath) {","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"        String[] directoryPathAsArray \u003d filePath.split(SLASH);","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"        StringBuilder directoryPath \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"        /* Iterate up to length - 1 because the last argument in a file path is usually the file type */","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"        for (int i \u003d 0; i \u003c (directoryPathAsArray.length - 1); i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"            directoryPath.append(directoryPathAsArray[i]);","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"        return String.valueOf(directoryPath);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Rrraaaeee":7,"theeugenechong":71}},{"path":"src/main/java/cooper/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import cooper.finance.BalanceSheet;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"import cooper.finance.CashFlow;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.FinanceManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.meetings.MeetingManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.forum.ForumManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.Verifier;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.resources.ResourcesManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"public class StorageManager {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"    private static final String BASE_DIRECTORY \u003d \"cooperData\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"    protected static final String SIGN_IN_DETAILS_FILE \u003d \"/signInDetails.txt\";","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"    protected static final String BALANCE_SHEET_FILE \u003d \"/balanceSheet.txt\";","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    protected static final String AVAILABILITY_FILE \u003d \"/availability.txt\";","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    protected static final String MEETINGS_FILE \u003d \"/meetings.txt\";","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"    protected static final String CASH_FLOW_STATEMENT_FILE \u003d \"/cashFlowStatement.txt\";","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    protected static final String FORUM_FILE \u003d \"/forum.txt\";","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    private final SignInDetailsStorage signInDetailsStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"    private final BalanceSheetStorage balanceSheetStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"    private final CashFlowStorage cashFlowStorage;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"    private final ForumStorage forumStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"    private final AvailabilityStorage availabilityStorage;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"    private final MeetingsStorage meetingsStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"    public StorageManager() {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"        this.signInDetailsStorage \u003d new SignInDetailsStorage(BASE_DIRECTORY + SIGN_IN_DETAILS_FILE);","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"        this.balanceSheetStorage \u003d new BalanceSheetStorage(BASE_DIRECTORY + BALANCE_SHEET_FILE);","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"        this.availabilityStorage \u003d new AvailabilityStorage(BASE_DIRECTORY + AVAILABILITY_FILE);","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"        this.meetingsStorage \u003d new MeetingsStorage(BASE_DIRECTORY + MEETINGS_FILE);","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"        this.cashFlowStorage \u003d new CashFlowStorage(BASE_DIRECTORY + CASH_FLOW_STATEMENT_FILE);","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"        this.forumStorage \u003d new ForumStorage(BASE_DIRECTORY + FORUM_FILE);","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"    public void loadAllData(Verifier cooperVerifier, ResourcesManager resourcesManager) {","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"        signInDetailsStorage.loadSignInDetails(cooperVerifier);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"        FinanceManager cooperFinanceManager \u003d resourcesManager.giveFinanceManager(this);","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"        cashFlowStorage.loadCashFlowStatement(cooperFinanceManager.cooperCashFlowStatement);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"        balanceSheetStorage.loadBalanceSheet(cooperFinanceManager.cooperBalanceSheet);","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"        MeetingManager cooperMeetingManager \u003d resourcesManager.giveMeetingManager(this);","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"        availabilityStorage.loadAvailability(cooperMeetingManager);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"        meetingsStorage.loadMeetings(cooperMeetingManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"        ForumManager cooperForumManager \u003d resourcesManager.giveForumManager(this);","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"        forumStorage.loadForum(cooperForumManager);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"    public void saveSignInDetails(Verifier cooperVerifier) {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"        signInDetailsStorage.saveSignInDetails(cooperVerifier);","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"    public void saveBalanceSheet(BalanceSheet cooperBalanceSheet) {","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"        balanceSheetStorage.saveBalanceSheet(cooperBalanceSheet);","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"    public void saveCashFlowStatement(CashFlow cooperCashFlowStatement) {","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"        cashFlowStorage.saveCashFlowStatement(cooperCashFlowStatement);","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"    public void saveAvailability(MeetingManager cooperMeetingManager) {","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"        availabilityStorage.saveAvailability(cooperMeetingManager);","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"    public void saveMeetings(MeetingManager cooperMeetingManager) {","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"        meetingsStorage.saveMeetings(cooperMeetingManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"    public void saveForum(ForumManager cooperForumManager) {","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"        forumStorage.saveForum(cooperForumManager);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"     * Storage class has \"super privilege\" to access private member in resources class.","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"theeugenechong"},"content":"     * Use this give-receive pattern to get private members from ResourcesManager (Similar to friend class)","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"     * Pattern adepted from:","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"     * https://stackoverflow.com/questions/14226228/implementation-of-friend-concept-in-javat","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"     **/","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"    public FinanceManager receiveFinanceManager(FinanceManager financeManager) {","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"        return financeManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"    public MeetingManager receiveMeetingManager(MeetingManager meetingManager) {","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"        return meetingManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"    public ForumManager receiveForumManager(ForumManager forumManager) {","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"        return forumManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ChrisLangton":2,"Rrraaaeee":2,"theeugenechong":92}},{"path":"src/main/java/cooper/ui/FileIoUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidFileDataException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":" * Contains the constants and methods for the Ui involving cOOPer\u0027s file handling.","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"public class FileIoUi extends Ui {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"    private static final String FILE_WRITE_ERROR \u003d \"Error writing to file: \";","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"    private static final String STORAGE_FILE_CREATION_ERROR \u003d \"Error creating storage file: \";","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"    private static final String INVALID_FILE_DATA \u003d \"Invalid file data in storage file: \";","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    private static final String PDF_SUCCESSFUL \u003d \"The PDF has been successfully generated!\";","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    private static final String PDF_GENERATION_ERROR \u003d \"There was an error generating the PDF: \";","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    private static final String CREATING_BACKUP \u003d \"Creating backup file now...\";","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"    private static final String BACKUP_FILE_SUCCESSFUL \u003d \"The backup .txt file has been successfully created!\";","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    private static final String BACKUP_CREATION_ERROR \u003d \"There was an error creating the backup .txt file: \";","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"    private static final String POST_REQUEST_ERROR \u003d \"Error encountered when sending post request!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"    private static final String CONNECTION_PROBLEM \u003d \"There was a problem with your connection.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"    private static final String LATEX_URL_INCORRECT \u003d \"The URL provided for LaTex compilation is incorrect!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"     * Informs user that there was an error writing data to the file.","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"     **/","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"    public static void showFileWriteError(IOException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"        show(FILE_WRITE_ERROR, false);","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"        show(e.getMessage(), true);","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"     * Informs user that there was an error in creating the file.","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"     **/","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"    public static void showFileCreationError(IOException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"        show(STORAGE_FILE_CREATION_ERROR, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"        show(e.getMessage(), true);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"     * Informs user that the data in the storage file is of the wrong format.","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"    public static void showInvalidFileDataError(InvalidFileDataException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"        show(INVALID_FILE_DATA, false);","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"        show(e.getMessage(), true);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"     * Informs user that the pdf file has been created successfully using {@code generate}.","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"    public static void showPdfSuccessfullyGenerated() {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"        show(PDF_SUCCESSFUL);","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"     * Informs user that there was an error creating the pdf along with the error.","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"    public static void showPdfGenerationError(IOException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"        show(PDF_GENERATION_ERROR, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"        show(e.getMessage(), true);","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"theeugenechong"},"content":"     * Informs use that the backup file for the pdf has been created successfully.","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"    public static void showBackupFileSuccessfullyCreated() {","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"        show(BACKUP_FILE_SUCCESSFUL);","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"     * Informs the user that there was an error creating the backup file for the pdf.","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"    public static void showBackupFileCreationError(IOException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"        show(BACKUP_CREATION_ERROR, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"        show(e.getMessage(), true);","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"     * Informs user there was an error making the JSON post request when creating the PDF file.","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"    public static void showPostRequestError() {","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"        show(POST_REQUEST_ERROR);","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"theeugenechong"},"content":"     * Informs the user that there was a connection error when creating the PDF file.","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"theeugenechong"},"content":"    public static void showConnectionError() {","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"theeugenechong"},"content":"        show(CONNECTION_PROBLEM);","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"theeugenechong"},"content":"        show(CREATING_BACKUP);","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"theeugenechong"},"content":"     * Informs the user that the URL for creating the PDF file is invalid.","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"theeugenechong"},"content":"    public static void showMalformedUrlError() {","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"theeugenechong"},"content":"        show(LATEX_URL_INCORRECT);","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"theeugenechong":126}},{"path":"src/main/java/cooper/ui/FinanceUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.finance.FinanceManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"public class FinanceUi extends Ui {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"    private static final String INITIATE_BALANCE_SHEET \u003d \"You are now using the Balance Sheet function.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"    private static final String VIEW_CURRENT_BS \u003d \"You can enter \u0027list\u0027 to view the current Balance Sheet or \";","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"    private static final String FIRST_ENTRY_BALANCE_SHEET \u003d \"start off by entering Cash \u0026 Cash Equivalents:\";","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    private static final String BALANCE_OPENING \u003d \"This is the company\u0027s current Balance Sheet (in SGD):\";","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"    private static final String ACCOUNT_MISTAKE \u003d \"THERE IS AN ACCOUNTING MISTAKE! One of your entries is incorrect.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"    private static final String ACCOUNT_CORRECT \u003d \"Balance Sheet is perfectly balanced, as all things should be.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"    private static final String BALANCE_SHEET_COMPLETE \u003d \"The Balance Sheet is complete! enter \u0027list\u0027 to view.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"    private static final String INITIATE_CASH_FLOW \u003d \"You are now using the Cash Flow function.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"    private static final String VIEW_CURRENT_CF \u003d \"You can enter \u0027list\u0027 to view the current Cash Flow Statement or \";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"    private static final String FIRST_ENTRY_CASH_FLOW \u003d \"start off by entering Net Income:\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"    private static final String STATEMENT_OPENING \u003d \"This is the company\u0027s current Cash Flow Statement (in SGD):\";","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"    private static final String CASH_FLOW_COMPLETE \u003d \"The Cash Flow Statement is complete! Enter \u0027list\u0027 to view.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"    private static final String ADD_SUCCESS \u003d \"Success!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"    private static final String NEXT_PLEASE_ENTER \u003d \"Next, please enter \";","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"    private static final String CANT_ADD_TO_BS \u003d \"The Balance Sheet is complete! You can no longer add anything.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"    private static final String CANT_ADD_TO_CF \u003d \"The Cash Flow Statement is complete! You can no longer add anything.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"    private static final String STATEMENT_EMPTY \u003d \"The financial statement is currently empty! Please add an entry.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"    private static final String STATEMENT_TO_ADD \u003d \"Please specify the financial statement you wish to add to.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"    private static final String STATEMENT_TO_VIEW \u003d \"Please specify the financial statement you wish to view.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"    private static final String INPUT_VALID_RANGE \u003d \"Please enter a valid integer (0 to 999,999,999) for the argument.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"    private static final String INPUT_VALID_ASSET \u003d \"Please enter the asset as a positive number.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"    private static final String INPUT_VALID_LIABILITY \u003d \"Please enter the liability as a negative number.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"    private static final String INPUT_VALID_ADD \u003d \"Please use the format \\\"add [amount]\\\" with [amount] in parentheses\"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"            + \" in the case of a negative number.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"    private static final String INPUT_VALID_PROJECTION \u003d \"Please key in a valid number of years (1 or more)\";","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"    private static final String AT_CURRENT_PROFITABILITY \u003d \"At your current rate of profitability growth \";","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"    private static final String IN_FREE_CASH_FLOW \u003d \"in Free Cash Flow, these are future year\u0027s projections:\";","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"    private static final String YEARS_CAN_EXPECT \u003d \" years you can expect Free Cash Flow of \";","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"ChrisLangton"},"content":"    private static final String MORE_THAN_ONE_BILLION \u003d \"1 Billion SGD or more \";","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"ChrisLangton"},"content":"    private static final String LESS_THAN_ONE_BILLION \u003d \"-1 Billion SGD or more \";","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"ChrisLangton"},"content":"    private static final String ADDED_AS \u003d \" has been added as \";","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"ChrisLangton"},"content":"    private static final String AFTER \u003d \"After \";","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"ChrisLangton"},"content":"    private static final String YEAR \u003d \" Year: \";","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"ChrisLangton"},"content":"    private static final int AMOUNT_UPPER_LIMIT \u003d 1_000_000_000;","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"ChrisLangton"},"content":"    private static final int AMOUNT_LOWER_LIMIT \u003d -1_000_000_000;","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"ChrisLangton"},"content":"    private static final int PROJECTION_UPPER_LIMIT \u003d 1_000_000_000;","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"ChrisLangton"},"content":"    private static final int PROJECTION_LOWER_LIMIT \u003d -1_000_000_000;","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"ChrisLangton"},"content":"    private static final String CAN_ONLY_GENERATE_BS_OR_CF \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"ChrisLangton"},"content":"            \"The financial statement you want to generate can only be \u0027bs\u0027 or \u0027cf\u0027!\";","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"ChrisLangton"},"content":"    public static final String[] BALANCE_SHEET_UI \u003d new String[] {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"ChrisLangton"},"content":"        \"Cash and Cash Equivalents  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"ChrisLangton"},"content":"        \"Accounts Receivable  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"ChrisLangton"},"content":"        \"Prepaid Expenses  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"ChrisLangton"},"content":"        \"Inventory  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"ChrisLangton"},"content":"        \"Property and Equipment  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"ChrisLangton"},"content":"        \"Goodwill  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"ChrisLangton"},"content":"        \"Accounts Payable  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"ChrisLangton"},"content":"        \"Accrued Expenses  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"ChrisLangton"},"content":"        \"Unearned Revenue  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"ChrisLangton"},"content":"        \"Long-term debt  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"ChrisLangton"},"content":"        \"Equity Capital  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"ChrisLangton"},"content":"        \"Retained Earnings  \"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"ChrisLangton"},"content":"    };","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"ChrisLangton"},"content":"    public static final String[] CASH_FLOW_UI \u003d new String[] {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"ChrisLangton"},"content":"        \"Net Income  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"ChrisLangton"},"content":"        \"Depreciation and Amortisation  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"ChrisLangton"},"content":"        \"Increase in Accounts Receivable  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"ChrisLangton"},"content":"        \"Decrease in Accounts Payable  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"ChrisLangton"},"content":"        \"Decrease in Inventory  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"ChrisLangton"},"content":"        \"Capital Expenditures  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"ChrisLangton"},"content":"        \"Proceeds from Sale of Equipment  \",","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"ChrisLangton"},"content":"        \"Proceeds from Issuing Debt  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"ChrisLangton"},"content":"        \"Dividends Paid  \",","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"ChrisLangton"},"content":"        \"Free Cash Flow  \"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"ChrisLangton"},"content":"    };","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"ChrisLangton"},"content":"    public static final String[] HEADERS_UI \u003d new String[] {","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"ChrisLangton"},"content":"        \"-----CASH FLOW FROM OPERATING ACTIVITIES-----\",","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"ChrisLangton"},"content":"        \"-----CASH FLOW FROM INVESTING ACTIVITIES-----\",","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"ChrisLangton"},"content":"        \"-----CASH FLOW FROM FINANCING ACTIVITIES-----\",","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"ChrisLangton"},"content":"        \"-----ASSETS-----\",","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"ChrisLangton"},"content":"        \"-----LIABILITIES-----\",","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"ChrisLangton"},"content":"        \"-----SHAREHOLDER\u0027S EQUITY-----\",","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"ChrisLangton"},"content":"        \"-----FREE CASH FLOW-----\"","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"ChrisLangton"},"content":"    };","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"ChrisLangton"},"content":"    public static final String[] NET_AMOUNTS_UI \u003d new String[] {","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"ChrisLangton"},"content":"        \"Net Cash from Operating Activities: \",","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"ChrisLangton"},"content":"        \"Net Cash from Investing Activities: \",","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"ChrisLangton"},"content":"        \"Net Cash from Financing Activities: \",","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"ChrisLangton"},"content":"        \"Total Assets: \",","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"ChrisLangton"},"content":"        \"Total Liabilities: \",","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"ChrisLangton"},"content":"        \"Total Shareholder\u0027s Equity: \",","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"ChrisLangton"},"content":"        \"Check: \"","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"ChrisLangton"},"content":"    };","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"ChrisLangton"},"content":"    public static void printBalanceSheet(ArrayList\u003cInteger\u003e balanceSheet) {","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"ChrisLangton"},"content":"        show(BALANCE_OPENING);","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"ChrisLangton"},"content":"        show(HEADERS_UI[3]);","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"ChrisLangton"},"content":"        int i;","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"ChrisLangton"},"content":"        FinanceManager.runTotalAmountsCheck(balanceSheet);","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"ChrisLangton"},"content":"        for (i \u003d 0; i \u003c balanceSheet.size(); i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"ChrisLangton"},"content":"            switch (i) {","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"ChrisLangton"},"content":"            case FinanceManager.endOfAssets:","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"ChrisLangton"},"content":"                show(BALANCE_SHEET_UI[i] + balanceSheet.get(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"ChrisLangton"},"content":"                if (FinanceManager.netAssets \u003e AMOUNT_LOWER_LIMIT \u0026\u0026 FinanceManager.netAssets \u003c AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"ChrisLangton"},"content":"                    show(NET_AMOUNTS_UI[3] + FinanceManager.netAssets);","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"ChrisLangton"},"content":"                } else if (FinanceManager.netAssets \u003e\u003d AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"ChrisLangton"},"content":"                    show(NET_AMOUNTS_UI[3] + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"ChrisLangton"},"content":"                } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"ChrisLangton"},"content":"                    show(NET_AMOUNTS_UI[3] + \" \" + LESS_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"ChrisLangton"},"content":"                show(HEADERS_UI[4]);","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"ChrisLangton"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"ChrisLangton"},"content":"            case FinanceManager.endOfLiabilities:","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"ChrisLangton"},"content":"                show(BALANCE_SHEET_UI[i] + balanceSheet.get(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"ChrisLangton"},"content":"                if (FinanceManager.netLiabilities \u003e AMOUNT_LOWER_LIMIT","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"ChrisLangton"},"content":"                        \u0026\u0026 FinanceManager.netLiabilities \u003c AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"ChrisLangton"},"content":"                    show(NET_AMOUNTS_UI[4] + FinanceManager.netLiabilities);","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"ChrisLangton"},"content":"                } else if (FinanceManager.netLiabilities \u003e\u003d AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"ChrisLangton"},"content":"                    show(NET_AMOUNTS_UI[4] + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"ChrisLangton"},"content":"                } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"ChrisLangton"},"content":"                    show(NET_AMOUNTS_UI[4] + \" \" + LESS_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"ChrisLangton"},"content":"                show(HEADERS_UI[5]);","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"ChrisLangton"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"ChrisLangton"},"content":"            default:","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"ChrisLangton"},"content":"                show(BALANCE_SHEET_UI[i] + balanceSheet.get(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"ChrisLangton"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"ChrisLangton"},"content":"        if (i \u003d\u003d balanceSheet.size()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"ChrisLangton"},"content":"            if (FinanceManager.netSE \u003e AMOUNT_LOWER_LIMIT \u0026\u0026 FinanceManager.netSE \u003c AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[5] + FinanceManager.netSE);","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"ChrisLangton"},"content":"            } else if (FinanceManager.netSE \u003e\u003d AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[5] + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[5] + \" \" + LESS_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"ChrisLangton"},"content":"        int balance \u003d FinanceManager.netAssets + FinanceManager.netLiabilities - FinanceManager.netSE;","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"ChrisLangton"},"content":"        if (balance !\u003d 0) {","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"ChrisLangton"},"content":"            show(ACCOUNT_MISTAKE);","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"ChrisLangton"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"ChrisLangton"},"content":"            show(ACCOUNT_CORRECT);","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"ChrisLangton"},"content":"        show(NET_AMOUNTS_UI[6] + balance);","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"ChrisLangton"},"content":"        LOGGER.info(\"The balance sheet is generated here\");","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"ChrisLangton"},"content":"    public static void initiateCashFlowStatement() {","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"ChrisLangton"},"content":"        show(INITIATE_CASH_FLOW);","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"ChrisLangton"},"content":"        show(VIEW_CURRENT_CF);","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"ChrisLangton"},"content":"        show(FIRST_ENTRY_CASH_FLOW);","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"ChrisLangton"},"content":"    public static void initiateBalanceSheet() {","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"ChrisLangton"},"content":"        show(INITIATE_BALANCE_SHEET);","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"ChrisLangton"},"content":"        show(VIEW_CURRENT_BS);","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"ChrisLangton"},"content":"        show(FIRST_ENTRY_BALANCE_SHEET);","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"ChrisLangton"},"content":"    public static void printCashFlowStatement(ArrayList\u003cInteger\u003e cashFlowStatement) {","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"ChrisLangton"},"content":"        show(FinanceUi.STATEMENT_OPENING);","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"ChrisLangton"},"content":"        show(FinanceUi.HEADERS_UI[0]);","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"ChrisLangton"},"content":"        int i;","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"ChrisLangton"},"content":"        FinanceManager.runNetAmountsCheck(cashFlowStatement);","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"ChrisLangton"},"content":"        for (i \u003d 0; i \u003c cashFlowStatement.size(); i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"ChrisLangton"},"content":"            switch (i) {","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"ChrisLangton"},"content":"            case FinanceManager.endOfOA:","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"ChrisLangton"},"content":"                show(CASH_FLOW_UI[i] + cashFlowStatement.get(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"ChrisLangton"},"content":"                if (FinanceManager.netOA \u003e AMOUNT_LOWER_LIMIT \u0026\u0026 FinanceManager.netOA \u003c AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":196,"author":{"gitId":"ChrisLangton"},"content":"                    show(NET_AMOUNTS_UI[0] + \" \" + FinanceManager.netOA);","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"ChrisLangton"},"content":"                } else if (FinanceManager.netOA \u003e\u003d AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":198,"author":{"gitId":"ChrisLangton"},"content":"                    show(NET_AMOUNTS_UI[0] + \" \" + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":199,"author":{"gitId":"ChrisLangton"},"content":"                } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":200,"author":{"gitId":"ChrisLangton"},"content":"                    show(NET_AMOUNTS_UI[0] + \" \" + LESS_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":201,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-11-02"},{"lineNumber":202,"author":{"gitId":"ChrisLangton"},"content":"                show(HEADERS_UI[1]);","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"ChrisLangton"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"ChrisLangton"},"content":"            case FinanceManager.endOfIA:","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"ChrisLangton"},"content":"                show(CASH_FLOW_UI[i] + cashFlowStatement.get(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"ChrisLangton"},"content":"                if (FinanceManager.netIA \u003e AMOUNT_LOWER_LIMIT \u0026\u0026 FinanceManager.netIA \u003c AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":207,"author":{"gitId":"ChrisLangton"},"content":"                    show(NET_AMOUNTS_UI[1] + \" \" + FinanceManager.netIA);","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"ChrisLangton"},"content":"                } else if (FinanceManager.netIA \u003e\u003d AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":209,"author":{"gitId":"ChrisLangton"},"content":"                    show(NET_AMOUNTS_UI[1] + \" \" + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":210,"author":{"gitId":"ChrisLangton"},"content":"                } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":211,"author":{"gitId":"ChrisLangton"},"content":"                    show(NET_AMOUNTS_UI[1] + \" \" + LESS_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":212,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-11-02"},{"lineNumber":213,"author":{"gitId":"ChrisLangton"},"content":"                show(HEADERS_UI[2]);","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"ChrisLangton"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"ChrisLangton"},"content":"            case FinanceManager.freeCashFlow:","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"ChrisLangton"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"ChrisLangton"},"content":"            default:","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"ChrisLangton"},"content":"                show(CASH_FLOW_UI[i] + cashFlowStatement.get(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"ChrisLangton"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"ChrisLangton"},"content":"        if (i \u003d\u003d cashFlowStatement.size()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"ChrisLangton"},"content":"            if (FinanceManager.netFA \u003e AMOUNT_LOWER_LIMIT \u0026\u0026 FinanceManager.netFA \u003c AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":224,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[2] + \" \" + FinanceManager.netFA);","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"ChrisLangton"},"content":"            } else if (FinanceManager.netFA \u003e\u003d AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":226,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[2] + \" \" + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":227,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":228,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[2] + \" \" + LESS_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":229,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":230,"author":{"gitId":"ChrisLangton"},"content":"            show(HEADERS_UI[6]);","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"ChrisLangton"},"content":"            if (cashFlowStatement.get(FinanceManager.freeCashFlow) \u003e AMOUNT_LOWER_LIMIT","lastModifiedDate":"2021-11-05"},{"lineNumber":232,"author":{"gitId":"ChrisLangton"},"content":"                    \u0026\u0026 cashFlowStatement.get(FinanceManager.freeCashFlow) \u003c AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":233,"author":{"gitId":"ChrisLangton"},"content":"                show(CASH_FLOW_UI[FinanceManager.freeCashFlow] + \" \"","lastModifiedDate":"2021-11-02"},{"lineNumber":234,"author":{"gitId":"ChrisLangton"},"content":"                        + cashFlowStatement.get(FinanceManager.freeCashFlow));","lastModifiedDate":"2021-11-02"},{"lineNumber":235,"author":{"gitId":"ChrisLangton"},"content":"            } else if (cashFlowStatement.get(FinanceManager.freeCashFlow) \u003e\u003d AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":236,"author":{"gitId":"ChrisLangton"},"content":"                show(CASH_FLOW_UI[FinanceManager.freeCashFlow] + \" \" + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":237,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":238,"author":{"gitId":"ChrisLangton"},"content":"                show(CASH_FLOW_UI[FinanceManager.freeCashFlow] + \" \" + LESS_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":239,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":240,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":241,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":242,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":243,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":244,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"ChrisLangton"},"content":"    public static void printCashFlowComplete() {","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"ChrisLangton"},"content":"        show(CASH_FLOW_COMPLETE);","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"ChrisLangton"},"content":"    public static void printBalanceSheetComplete() {","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"ChrisLangton"},"content":"        show(BALANCE_SHEET_COMPLETE);","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"ChrisLangton"},"content":"    public static void showCannotAddToBalanceSheet() {","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"ChrisLangton"},"content":"        show(CANT_ADD_TO_BS);","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"ChrisLangton"},"content":"    public static void showCannotAddToCashFlow() {","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":261,"author":{"gitId":"ChrisLangton"},"content":"        show(CANT_ADD_TO_CF);","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":263,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"ChrisLangton"},"content":"    public static void printAddBalanceCommand(int amount, boolean isInflow, int balanceSheetStage) {","lastModifiedDate":"2021-10-26"},{"lineNumber":266,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"ChrisLangton"},"content":"        show(ADD_SUCCESS);","lastModifiedDate":"2021-10-26"},{"lineNumber":268,"author":{"gitId":"ChrisLangton"},"content":"        show((isInflow ? \"+\" : \"-\") + amount + ADDED_AS + BALANCE_SHEET_UI[balanceSheetStage]);","lastModifiedDate":"2021-10-26"},{"lineNumber":269,"author":{"gitId":"ChrisLangton"},"content":"        switch (balanceSheetStage) {","lastModifiedDate":"2021-10-26"},{"lineNumber":270,"author":{"gitId":"ChrisLangton"},"content":"        case FinanceManager.endOfAssets:","lastModifiedDate":"2021-10-26"},{"lineNumber":271,"author":{"gitId":"ChrisLangton"},"content":"            if (FinanceManager.netAssets \u003c AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-02"},{"lineNumber":272,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[3] + FinanceManager.netAssets);","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":274,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[3] + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":275,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":276,"author":{"gitId":"ChrisLangton"},"content":"            show(NL + NEXT_PLEASE_ENTER + FinanceUi.BALANCE_SHEET_UI[balanceSheetStage + 1]);","lastModifiedDate":"2021-10-30"},{"lineNumber":277,"author":{"gitId":"ChrisLangton"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":278,"author":{"gitId":"ChrisLangton"},"content":"        case FinanceManager.endOfLiabilities:","lastModifiedDate":"2021-10-26"},{"lineNumber":279,"author":{"gitId":"ChrisLangton"},"content":"            if (FinanceManager.netLiabilities \u003c AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-02"},{"lineNumber":280,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[4] + FinanceManager.netLiabilities);","lastModifiedDate":"2021-10-26"},{"lineNumber":281,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":282,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[4] + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":283,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":284,"author":{"gitId":"ChrisLangton"},"content":"            show(NL + NEXT_PLEASE_ENTER + FinanceUi.BALANCE_SHEET_UI[balanceSheetStage + 1]);","lastModifiedDate":"2021-10-30"},{"lineNumber":285,"author":{"gitId":"ChrisLangton"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"ChrisLangton"},"content":"        case FinanceManager.endOfSE:","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"ChrisLangton"},"content":"            if (FinanceManager.netSE \u003c AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-02"},{"lineNumber":288,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[5] + FinanceManager.netSE);","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":290,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[5] + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":291,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":292,"author":{"gitId":"ChrisLangton"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"ChrisLangton"},"content":"        default:","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"ChrisLangton"},"content":"            show(NL + NEXT_PLEASE_ENTER + FinanceUi.BALANCE_SHEET_UI[balanceSheetStage + 1]);","lastModifiedDate":"2021-10-30"},{"lineNumber":295,"author":{"gitId":"ChrisLangton"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"ChrisLangton"},"content":"        if (balanceSheetStage \u003d\u003d FinanceManager.endOfSE) {","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"ChrisLangton"},"content":"            printBalanceSheetComplete();","lastModifiedDate":"2021-10-26"},{"lineNumber":300,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":302,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":304,"author":{"gitId":"ChrisLangton"},"content":"    public static void printAddCashFlowCommand(int amount, boolean isInflow, int cashFlowStage) {","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"ChrisLangton"},"content":"        show(ADD_SUCCESS);","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"ChrisLangton"},"content":"        show((isInflow ? \"+\" : \"-\") + amount + ADDED_AS + CASH_FLOW_UI[cashFlowStage]);","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"ChrisLangton"},"content":"        switch (cashFlowStage) {","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"ChrisLangton"},"content":"        case FinanceManager.endOfOA:","lastModifiedDate":"2021-10-26"},{"lineNumber":310,"author":{"gitId":"ChrisLangton"},"content":"            if (FinanceManager.netOA \u003c AMOUNT_UPPER_LIMIT \u0026\u0026 FinanceManager.netOA \u003e AMOUNT_LOWER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":311,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[0] + FinanceManager.netOA);","lastModifiedDate":"2021-10-26"},{"lineNumber":312,"author":{"gitId":"ChrisLangton"},"content":"            } else if (FinanceManager.netOA \u003e\u003d AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":313,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[0] + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":314,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":315,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[0] + LESS_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":316,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":317,"author":{"gitId":"ChrisLangton"},"content":"            show(NL + NEXT_PLEASE_ENTER + FinanceUi.CASH_FLOW_UI[cashFlowStage + 1]);","lastModifiedDate":"2021-10-30"},{"lineNumber":318,"author":{"gitId":"ChrisLangton"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":319,"author":{"gitId":"ChrisLangton"},"content":"        case FinanceManager.endOfIA:","lastModifiedDate":"2021-10-26"},{"lineNumber":320,"author":{"gitId":"ChrisLangton"},"content":"            if (FinanceManager.netIA \u003c AMOUNT_UPPER_LIMIT \u0026\u0026 FinanceManager.netIA \u003e AMOUNT_LOWER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":321,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[1] + FinanceManager.netIA);","lastModifiedDate":"2021-10-26"},{"lineNumber":322,"author":{"gitId":"ChrisLangton"},"content":"            } else if (FinanceManager.netIA \u003e\u003d AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":323,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[1] + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":324,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":325,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[1] + LESS_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":326,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":327,"author":{"gitId":"ChrisLangton"},"content":"            show(NL + NEXT_PLEASE_ENTER + FinanceUi.CASH_FLOW_UI[cashFlowStage + 1]);","lastModifiedDate":"2021-10-30"},{"lineNumber":328,"author":{"gitId":"ChrisLangton"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":329,"author":{"gitId":"ChrisLangton"},"content":"        case FinanceManager.endOfFA:","lastModifiedDate":"2021-10-26"},{"lineNumber":330,"author":{"gitId":"ChrisLangton"},"content":"            if (FinanceManager.netFA \u003c AMOUNT_UPPER_LIMIT \u0026\u0026 FinanceManager.netFA \u003e AMOUNT_LOWER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":331,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[2] + FinanceManager.netFA);","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"ChrisLangton"},"content":"            } else if (FinanceManager.netFA \u003e\u003d AMOUNT_UPPER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":333,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[2] + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":334,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":335,"author":{"gitId":"ChrisLangton"},"content":"                show(NET_AMOUNTS_UI[2] + LESS_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":336,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":337,"author":{"gitId":"ChrisLangton"},"content":"            show(NL + NEXT_PLEASE_ENTER + FinanceUi.CASH_FLOW_UI[cashFlowStage + 1]);","lastModifiedDate":"2021-10-30"},{"lineNumber":338,"author":{"gitId":"ChrisLangton"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":339,"author":{"gitId":"ChrisLangton"},"content":"        case FinanceManager.freeCashFlow:","lastModifiedDate":"2021-10-26"},{"lineNumber":340,"author":{"gitId":"ChrisLangton"},"content":"            show(\"\");","lastModifiedDate":"2021-10-26"},{"lineNumber":341,"author":{"gitId":"ChrisLangton"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":342,"author":{"gitId":"ChrisLangton"},"content":"        default:","lastModifiedDate":"2021-10-26"},{"lineNumber":343,"author":{"gitId":"ChrisLangton"},"content":"            show(NL + NEXT_PLEASE_ENTER + FinanceUi.CASH_FLOW_UI[cashFlowStage + 1]);","lastModifiedDate":"2021-10-30"},{"lineNumber":344,"author":{"gitId":"ChrisLangton"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":345,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":346,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":347,"author":{"gitId":"ChrisLangton"},"content":"        if (cashFlowStage \u003d\u003d FinanceManager.freeCashFlow) {","lastModifiedDate":"2021-10-26"},{"lineNumber":348,"author":{"gitId":"ChrisLangton"},"content":"            printCashFlowComplete();","lastModifiedDate":"2021-10-26"},{"lineNumber":349,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":350,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":352,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"ChrisLangton"},"content":"    public static void printProjections(double finalGrowthValue, ArrayList\u003cDouble\u003e cooperProjections) {","lastModifiedDate":"2021-10-26"},{"lineNumber":354,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":355,"author":{"gitId":"ChrisLangton"},"content":"        show(AT_CURRENT_PROFITABILITY + IN_FREE_CASH_FLOW);","lastModifiedDate":"2021-11-02"},{"lineNumber":356,"author":{"gitId":"ChrisLangton"},"content":"        int yearCount \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":357,"author":{"gitId":"ChrisLangton"},"content":"        for (Double cooperProjection : cooperProjections) {","lastModifiedDate":"2021-10-26"},{"lineNumber":358,"author":{"gitId":"ChrisLangton"},"content":"            if (cooperProjection.intValue() \u003c PROJECTION_UPPER_LIMIT","lastModifiedDate":"2021-11-05"},{"lineNumber":359,"author":{"gitId":"ChrisLangton"},"content":"                    \u0026\u0026 cooperProjection.intValue() \u003e PROJECTION_LOWER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":360,"author":{"gitId":"ChrisLangton"},"content":"                show(yearCount + YEAR + cooperProjection.intValue());","lastModifiedDate":"2021-11-02"},{"lineNumber":361,"author":{"gitId":"ChrisLangton"},"content":"            } else if (cooperProjection.intValue() \u003c\u003d PROJECTION_LOWER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":362,"author":{"gitId":"ChrisLangton"},"content":"                show(yearCount + YEAR + LESS_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":363,"author":{"gitId":"ChrisLangton"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":364,"author":{"gitId":"ChrisLangton"},"content":"                show(yearCount + YEAR + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":365,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":366,"author":{"gitId":"ChrisLangton"},"content":"            yearCount++;","lastModifiedDate":"2021-10-26"},{"lineNumber":367,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":368,"author":{"gitId":"ChrisLangton"},"content":"        if ((int)finalGrowthValue \u003c PROJECTION_UPPER_LIMIT \u0026\u0026 (int)finalGrowthValue \u003e PROJECTION_LOWER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":369,"author":{"gitId":"ChrisLangton"},"content":"            show(AFTER + (yearCount - 1) + YEARS_CAN_EXPECT + (int) finalGrowthValue);","lastModifiedDate":"2021-11-02"},{"lineNumber":370,"author":{"gitId":"ChrisLangton"},"content":"        } else if ((int)finalGrowthValue \u003c\u003d PROJECTION_LOWER_LIMIT) {","lastModifiedDate":"2021-11-05"},{"lineNumber":371,"author":{"gitId":"ChrisLangton"},"content":"            show(AFTER + (yearCount - 1) + YEARS_CAN_EXPECT + LESS_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":372,"author":{"gitId":"ChrisLangton"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":373,"author":{"gitId":"ChrisLangton"},"content":"            show(AFTER + (yearCount - 1) + YEARS_CAN_EXPECT + MORE_THAN_ONE_BILLION);","lastModifiedDate":"2021-11-05"},{"lineNumber":374,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":375,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":376,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":377,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":378,"author":{"gitId":"ChrisLangton"},"content":"    public static void showEmptyFinancialStatementException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":379,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":380,"author":{"gitId":"ChrisLangton"},"content":"        show(STATEMENT_EMPTY);","lastModifiedDate":"2021-10-26"},{"lineNumber":381,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":382,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":383,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":384,"author":{"gitId":"ChrisLangton"},"content":"    public static void showPleaseSpecifyFinancialStatementToAdd() {","lastModifiedDate":"2021-11-04"},{"lineNumber":385,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-04"},{"lineNumber":386,"author":{"gitId":"ChrisLangton"},"content":"        show(STATEMENT_TO_ADD);","lastModifiedDate":"2021-11-04"},{"lineNumber":387,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-04"},{"lineNumber":388,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":389,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":390,"author":{"gitId":"ChrisLangton"},"content":"    public static void showPleaseSpecifyFinancialStatementToView() {","lastModifiedDate":"2021-11-04"},{"lineNumber":391,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":392,"author":{"gitId":"ChrisLangton"},"content":"        show(STATEMENT_TO_VIEW);","lastModifiedDate":"2021-10-26"},{"lineNumber":393,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":394,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":395,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":396,"author":{"gitId":"ChrisLangton"},"content":"    public static void showPleaseInputValidProjection() {","lastModifiedDate":"2021-11-02"},{"lineNumber":397,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":398,"author":{"gitId":"ChrisLangton"},"content":"        show(INPUT_VALID_PROJECTION);","lastModifiedDate":"2021-11-02"},{"lineNumber":399,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":400,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":401,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":402,"author":{"gitId":"ChrisLangton"},"content":"    public static void showPleaseInputValidRange() {","lastModifiedDate":"2021-11-02"},{"lineNumber":403,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":404,"author":{"gitId":"ChrisLangton"},"content":"        show(INPUT_VALID_RANGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":405,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":406,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":407,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":408,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":409,"author":{"gitId":"ChrisLangton"},"content":"    public static void showInvalidDocumentError() {","lastModifiedDate":"2021-11-03"},{"lineNumber":410,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":411,"author":{"gitId":"ChrisLangton"},"content":"        show(CAN_ONLY_GENERATE_BS_OR_CF);","lastModifiedDate":"2021-11-03"},{"lineNumber":412,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":413,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":414,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":415,"author":{"gitId":"ChrisLangton"},"content":"    public static void showPleaseInputValidAdd() {","lastModifiedDate":"2021-11-02"},{"lineNumber":416,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":417,"author":{"gitId":"ChrisLangton"},"content":"        show(INPUT_VALID_ADD);","lastModifiedDate":"2021-11-02"},{"lineNumber":418,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":419,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":420,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":421,"author":{"gitId":"ChrisLangton"},"content":"    public static void showPleaseInputValidAsset() {","lastModifiedDate":"2021-11-03"},{"lineNumber":422,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":423,"author":{"gitId":"ChrisLangton"},"content":"        show(INPUT_VALID_ASSET);","lastModifiedDate":"2021-11-03"},{"lineNumber":424,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":425,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":426,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":427,"author":{"gitId":"ChrisLangton"},"content":"    public static void showPleaseInputValidLiability() {","lastModifiedDate":"2021-11-03"},{"lineNumber":428,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":429,"author":{"gitId":"ChrisLangton"},"content":"        show(INPUT_VALID_LIABILITY);","lastModifiedDate":"2021-11-03"},{"lineNumber":430,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":431,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":432,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"ChrisLangton":426,"theeugenechong":6}},{"path":"src/main/java/cooper/ui/ForumUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.forum.ForumPost;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"public class ForumUi extends Ui {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"    public static void printForumPosts(ArrayList\u003cForumPost\u003e forumPosts) {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"        show(\"Here is the list of forum posts:\");","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"        show(TABLE_LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"        int cntPost \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"        for (var post : forumPosts) {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"            show(\"|  \" + cntPost + \". \" + post.toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"            int cntComment \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"            for (var comment : post.getComments()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"                show(\"|    -  \" + cntComment + \". \" + comment.toString());","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"                cntComment++;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"            cntPost++;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"        show(TABLE_LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"    public static void printForumPost(ArrayList\u003cForumPost\u003e forumPosts, int postId) {","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"        show(\"Here is the forum post:\");","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"        show(TABLE_LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"        show(\"|  \" + forumPosts.get(postId).toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"        int cntComment \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"        for (var comment : forumPosts.get(postId).getComments()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"            show(\"|    -  \" + cntComment + \".\" + comment.toString());","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"            cntComment++;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"        show(TABLE_LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"    public static void printNewPostCommand(String username, String content) {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"        show(username + \" has just posted to the forum:\");","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"        show(TABLE_LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"        show(\"|  \" + content);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"        show(TABLE_LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Rrraaaeee"},"content":"    public static void printDeletePostCommand(String username, String content) {","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Rrraaaeee"},"content":"        show(username + \" has just deleted a post from the forum:\");","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"Rrraaaeee"},"content":"        show(TABLE_LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"Rrraaaeee"},"content":"        show(\"|  \" + content);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Rrraaaeee"},"content":"        show(TABLE_LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Rrraaaeee"},"content":"    public static void printCommentPostCommand(String username, String content, String comment) {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Rrraaaeee"},"content":"        show(username + \" has just commented on a post from the forum:\");","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"Rrraaaeee"},"content":"        show(TABLE_LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"Rrraaaeee"},"content":"        show(\"|  \" + content);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Rrraaaeee"},"content":"        show(\"|    -  \" + comment);","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"Rrraaaeee"},"content":"        show(TABLE_LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Rrraaaeee"},"content":"    public static void printInvalidForumPostIndexError() {","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Rrraaaeee"},"content":"        show(\"The forum index you just keyed in is outside the valid range.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Rrraaaeee"},"content":"    public static void printInvalidForumDeleteByNonOwnerError() {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Rrraaaeee"},"content":"        show(\"You cannot delete a forum post that is not owned by you!.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Rrraaaeee":79,"theeugenechong":6}},{"path":"src/main/java/cooper/ui/MeetingsUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"import cooper.meetings.Meeting;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"fansxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"fansxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"fansxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"fansxx"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"fansxx"},"content":"public class MeetingsUi extends Ui {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"fansxx"},"content":"    public static final String AVAILABILITY_TABLE_MESSAGE \u003d \"Here are the availabilities:\";","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"fansxx"},"content":"    public static final String MEETINGS_TABLE_MESSAGE \u003d \"Here are your meetings for today:\";","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"fansxx"},"content":"    public static final String NO_MEETINGS_TABLE_MESSAGE \u003d \"| You have no meetings yet!\";","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"fansxx"},"content":"    public static final String AVAILABILITY_TABLE_HEADINGS \u003d \"| date       | time  | names\";","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"fansxx"},"content":"    public static final String AVAILABILITY_TABLE_LINE \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"fansxx"},"content":"            \"+------------+-------+-----------------------------------------------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"fansxx"},"content":"    public static final String MEETINGS_TABLE_HEADINGS \u003d \"| meeting    | date       | time  | attendees\";","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"fansxx"},"content":"    public static final String MEETINGS_TABLE_LINE \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"fansxx"},"content":"            \"+--------------------------------------------------------------------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"fansxx"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"Success!\";","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"fansxx"},"content":"    public static final String SUCCESSFUL_AVAILABLE_MESSAGE \u003d \"\u0027s availability has been added to \";","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"fansxx"},"content":"    /* Error messages */","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"fansxx"},"content":"    public static final String INVALID_DATE_TIME_FORMAT_MESSAGE \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"fansxx"},"content":"            \"The date and time format you entered is not accepted or the date/time entered is not valid! \"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"fansxx"},"content":"                    + \"Please enter again.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"fansxx"},"content":"    public static final String CORRECT_DATE_TIME_FORMAT_MESSAGE \u003d \"The correct format is: [dd-MM-yyyy HH:mm]\";","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"fansxx"},"content":"    public static final String INVALID_TIME_MESSAGE \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"fansxx"},"content":"            \"The time you entered is not the start of the hour! Please enter again.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"fansxx"},"content":"    public static final String DUPLICATE_USERNAME_ERROR_MESSAGE \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"fansxx"},"content":"            \"The username has already been entered under that timeslot.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"fansxx"},"content":"    public static final String CANNOT_SCHEDULE_MEETING_ERROR_MESSAGE \u003d \"Oops, no meeting can be scheduled!\";","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"fansxx"},"content":"    public static final String DUPLICATE_MEETING_ERROR_MESSAGE \u003d \"Please schedule a meeting at another time!\";","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"fansxx"},"content":"    public static final String INVALID_SCHEDULE_FORMAT_ERROR_MESSAGE \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"fansxx"},"content":"            \"Please enter the users you would like to schedule a meeting with.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"fansxx"},"content":"    public static final String NO_TIME_ENTERED_ERROR_MESSAGE \u003d \"Please enter the time of the meeting after /at\";","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"fansxx"},"content":"    public static final String NO_USERNAME_AFTER_COMMA_ERROR_MESSAGE \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"fansxx"},"content":"            \"You must enter a username after a comma! Please enter again.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"fansxx"},"content":"    /* formatting */","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"fansxx"},"content":"    public static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"fansxx"},"content":"    public static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"fansxx"},"content":"    /* print error messages */","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"fansxx"},"content":"    public static void showInvalidScheduleFormatException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"fansxx"},"content":"        show(INVALID_SCHEDULE_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"fansxx"},"content":"    public static void showNoTimeEnteredException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"fansxx"},"content":"        show(NO_TIME_ENTERED_ERROR_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"fansxx"},"content":"    public static void showNoUsernameAfterCommaException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"fansxx"},"content":"        show(NO_USERNAME_AFTER_COMMA_ERROR_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"fansxx"},"content":"    public static void showInvalidDateTimeFormatException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"fansxx"},"content":"        show(INVALID_DATE_TIME_FORMAT_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"fansxx"},"content":"        show(CORRECT_DATE_TIME_FORMAT_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"fansxx"},"content":"    public static void showInvalidTimeException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"fansxx"},"content":"        show(INVALID_TIME_MESSAGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"fansxx"},"content":"    public static void showDuplicateUsernameException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"fansxx"},"content":"        show(DUPLICATE_USERNAME_ERROR_MESSAGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"fansxx"},"content":"    public static void showCannotScheduleMeetingException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"fansxx"},"content":"        show(CANNOT_SCHEDULE_MEETING_ERROR_MESSAGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"fansxx"},"content":"    public static void showDuplicateMeetingException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"fansxx"},"content":"        show(DUPLICATE_MEETING_ERROR_MESSAGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"fansxx"},"content":"    public static void showMeetingTimeFull(String username, String time) {","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"fansxx"},"content":"        show(\"Oops, no meeting can be scheduled because \" + username + \" already has a meeting at \" + time);","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"fansxx"},"content":"    /* print successful commands */","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"fansxx"},"content":"    public static void printAvailableCommand(String dateTime, String username) {","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"fansxx"},"content":"        show(SUCCESS_MESSAGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"fansxx"},"content":"        show(username + SUCCESSFUL_AVAILABLE_MESSAGE + dateTime);","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"fansxx"},"content":"    public static void printSuccessfulScheduleCommand(String meetingName, LocalDateTime dateTime,","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"fansxx"},"content":"                                                      ArrayList\u003cString\u003e usernames) {","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"fansxx"},"content":"        show(SUCCESS_MESSAGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"fansxx"},"content":"        show(\"You have scheduled a \u003c\u003c\" + meetingName + \"\u003e\u003e meeting at \"","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"fansxx"},"content":"                + dateTime.toLocalDate().format(DateTimeFormatter.ofPattern(DATE_FORMAT)) + \" \"","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"fansxx"},"content":"                + dateTime.toLocalTime().format(DateTimeFormatter.ofPattern(TIME_FORMAT))","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"fansxx"},"content":"                + \" with attendees: \" + listOfAvailabilities(usernames));","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"fansxx"},"content":"    public static void printAvailabilities(TreeMap\u003cLocalDateTime, ArrayList\u003cString\u003e\u003e availability) {","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"fansxx"},"content":"        printAvailabilityTableHeader();","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"fansxx"},"content":"        show(AVAILABILITY_TABLE_HEADINGS);","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"fansxx"},"content":"        show(AVAILABILITY_TABLE_LINE);","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"fansxx"},"content":"        for (LocalDateTime dateTime: availability.keySet()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"fansxx"},"content":"            show(\"| \" + dateTime.toLocalDate().format(DateTimeFormatter.ofPattern(DATE_FORMAT)) + \" | \"","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"fansxx"},"content":"                    + dateTime.toLocalTime().format(DateTimeFormatter.ofPattern(TIME_FORMAT)) + \" | \"","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"fansxx"},"content":"                    + listOfAvailabilities(availability.get(dateTime)));","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"fansxx"},"content":"        show(AVAILABILITY_TABLE_TOP);","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"fansxx"},"content":"    private static String listOfAvailabilities(ArrayList\u003cString\u003e availabilities) {","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"fansxx"},"content":"        StringBuilder listOfAvailabilities \u003d new StringBuilder();","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"fansxx"},"content":"        for (String a : availabilities) {","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"fansxx"},"content":"            /* don\u0027t need comma for last attendee */","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"fansxx"},"content":"            int indexOfLastAttendee \u003d availabilities.size() - 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"fansxx"},"content":"            if (a.equals(availabilities.get(indexOfLastAttendee))) {","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"fansxx"},"content":"                listOfAvailabilities.append(a);","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"fansxx"},"content":"            } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"fansxx"},"content":"                listOfAvailabilities.append(a).append(\", \");","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"fansxx"},"content":"        return String.valueOf(listOfAvailabilities);","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"fansxx"},"content":"    private static void printAvailabilityTableHeader() {","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"fansxx"},"content":"        show(AVAILABILITY_TABLE_MESSAGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"fansxx"},"content":"        show(AVAILABILITY_TABLE_TOP);","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"fansxx"},"content":"    private static void printMeetingsTableHeader() {","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"fansxx"},"content":"        show(MEETINGS_TABLE_MESSAGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"fansxx"},"content":"        show(MEETINGS_TABLE_TOP);","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"fansxx"},"content":"        show(MEETINGS_TABLE_HEADINGS);","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"fansxx"},"content":"        show(MEETINGS_TABLE_LINE);","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"fansxx"},"content":"    public static void printMeetings(ArrayList\u003cMeeting\u003e meetingsList) {","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"fansxx"},"content":"        printMeetingsTableHeader();","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"fansxx"},"content":"        if (meetingsList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"fansxx"},"content":"            show(NO_MEETINGS_TABLE_MESSAGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"fansxx"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"fansxx"},"content":"            for (Meeting meeting : meetingsList) {","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"fansxx"},"content":"                show(\"| \u003c\u003c\" + meeting.getMeetingName() + \"\u003e\u003e | \"","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"fansxx"},"content":"                        + meeting.getDateTime().toLocalDate().format(DateTimeFormatter.ofPattern(DATE_FORMAT)) + \" | \"","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"fansxx"},"content":"                        + meeting.getDateTime().toLocalTime().format(DateTimeFormatter.ofPattern(TIME_FORMAT)) + \" | \"","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"fansxx"},"content":"                        + listOfAvailabilities(meeting.getListOfAttendees()));","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"fansxx"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"fansxx"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"fansxx"},"content":"        show(MEETINGS_TABLE_TOP);","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"fansxx":176}},{"path":"src/main/java/cooper/ui/ParserUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":" * Contains the constants and methods for the Ui involving cOOPer\u0027s parsing.","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"public class ParserUi extends Ui {","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"    private static final String UNRECOGNISED_COMMAND \u003d \"I don\u0027t recognise the command you entered.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"    private static final String ENTER_HELP \u003d \"Enter \\\"help\\\" to view the format of each command.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"    private static final String TMP_FILE_CREATION_ERROR \u003d \"Error encountered when creating temp file: \"","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"            + System.getProperty(\"user.dir\") + \"/tmp\" + \"/tmp_file_command.txt\" + \" or \"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"            + System.getProperty(\"user.dir\") + \"/tmp\" + \"/tmp_file_training.txt\";","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"    private static final String INVALID_COMMAND_FORMAT \u003d \"The command you entered is of the wrong format!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"    private static final String PLEASE_ENTER_NUMBER \u003d \"Please enter a valid integer \"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"            + \"(0 to 999,999,999) for the argument.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"     * Informs user that an unrecognised command ha been entered.","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"     **/","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    public static void showUnrecognisedCommandError() {","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"        show(UNRECOGNISED_COMMAND);","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"        show(ENTER_HELP);","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"     * Informs user that there is an error creating the tmp file for cOOPer\u0027s Parser.","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"    public static void showTmpFileCreationError() {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"        show(TMP_FILE_CREATION_ERROR);","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"     * Exception message to show invalid command argument error.","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"     **/","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"    public static void showInvalidCommandFormatError() {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"        show(INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"        show(ENTER_HELP);","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"     * Informs user that a non-integral value has been input where an integer value","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"     * is expected.","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"     **/","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"    public static void showInvalidNumberError() {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"        show(PLEASE_ENTER_NUMBER);","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"theeugenechong":56}},{"path":"src/main/java/cooper/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.CooperState;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"public class Ui {","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String LOGO \u003d \"            /$$$$$$   /$$$$$$  /$$$$$$$\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"            +                          \"           /$$__  $$ /$$__  $$| $$__  $$\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"            +                          \"  /$$$$$$$| $$  \\\\ $$| $$  \\\\ $$| $$  \\\\ $$ /$$$$$$   /$$$$$$\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"            +                          \" /$$_____/| $$  | $$| $$  | $$| $$$$$$$//$$__  $$ /$$__  $$\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"            +                          \"| $$      | $$  | $$| $$  | $$| $$____/| $$$$$$$$| $$  \\\\__/\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"            +                          \"| $$      | $$  | $$| $$  | $$| $$     | $$_____/| $$\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"            +                          \"|  $$$$$$$|  $$$$$$/|  $$$$$$/| $$     |  $$$$$$$| $$\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"            +                          \" \\\\_______/ \\\\______/  \\\\______/ |__/      \\\\_______/|__/\";","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"    protected static final String LINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"    protected static final String TABLE_LINE \u003d \"+--------------------------------------------------------------------+\";","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"    protected static final String AVAILABILITY_TABLE_TOP \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"            \"+------------+-------+-----------------------------------------------+\";","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"    protected static final String MEETINGS_TABLE_TOP \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"            \"+------------+------------+-------+----------------------------------+\";","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String GREETING \u003d \"Hello I\u0027m cOOPer! Nice to meet you!\";","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"    private static final Scanner IN \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"    private static final PrintStream OUT \u003d System.out;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"    protected static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"    protected static final String NL \u003d System.lineSeparator();","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"    protected static final String LOGIN_REGISTER_FOR_ACCESS \u003d \"Log in or register to gain access to my features!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"    protected static final String LOGIN \u003d \"To log in, enter \\\"login [yourUsername] /pw [password] /as [yourRole]\\\".\";","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"    protected static final String REGISTER \u003d \"To register, enter \\\"register [yourUsername] /pw [password] /as \"","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"            + \"[yourRole]\\\".\";","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"    protected static final String EXIT \u003d \"To exit, enter \\\"exit\\\".\";","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye, see you next time!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String PROMPT \u003d \"\u003e\u003e \";","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"    /* Constants used for admin help command */","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String HELP_TABLE_TOP \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"            \"+---------------+------------------------------------------------------+\";","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String ADMIN_COMMANDS \u003d \"Here are the commands available to an admin along with their \"","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"            + \"formats:\";","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String BS_FORMAT       \u003d \"| bs            | bs\";","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String CF_FORMAT       \u003d \"| cf            | cf\";","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String PROJ_FORMAT     \u003d \"| proj          | proj [years]\";","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String ADD_FORMAT      \u003d \"| add           | add [amount]\";","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String LIST_FORMAT     \u003d \"| list          | list\";","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String GENERATE_FORMAT \u003d \"| generate      | generate [financialStatement]\";","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String SCHEDULE_FORMAT \u003d \"| schedule      | schedule [meetingName] /with [username1], \"","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"Rrraaaeee"},"content":"            + \"[username2] or \" + NL","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"Rrraaaeee"},"content":"            + \"|               | schedule [meetingName] /with [username1], [username2] /at [meetingTime]\";","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"Rrraaaeee"},"content":"    /* Constants used for employee help command */","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String EMPLOYEE_COMMANDS \u003d \"Here are the commands available to an employee along with their \"","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"Rrraaaeee"},"content":"            + \"formats:\";","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String POST_ADD_FORMAT     \u003d \"| post add      | post add [postContent]\";","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String POST_DELETE_FORMAT  \u003d \"| post delete   | post delete [postId]\";","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String POST_COMMENT_FORMAT \u003d \"| post comment  | post comment [commentContent] /on [postId]\";","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String POST_LIST_FORMAT    \u003d \"| post list     | post list all or post list [postId]\";","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String AVAILABLE_FORMAT    \u003d \"| available     | available [date] [time]\";","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String AVAILABILITY_FORMAT \u003d \"| availability  | availability\";","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String MEETINGS_FORMAT     \u003d \"| meetings      | meetings\";","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String LOGOUT_FORMAT       \u003d \"| logout        | logout\";","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String EXIT_FORMAT         \u003d \"| exit          | exit\";","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String REFER_TO_UG \u003d \"Refer to my User Guide for more information: \";","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String UG_LINK \u003d \"https://ay2122s1-cs2113t-w13-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"Rrraaaeee"},"content":"    private static CooperState cooperState \u003d CooperState.LOGOUT;","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String STATE_LOGOUT \u003d \"[Logged out] \";","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String STATE_CF \u003d \"[Cash Flow] \";","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"Rrraaaeee"},"content":"    private static final String STATE_BS \u003d \"[Balance Sheet] \";","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"Rrraaaeee"},"content":"     * Reads input from the user. Behaves like a real command line in the sense that an empty string entered is ignored.","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"Rrraaaeee"},"content":"     * @return user input","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"Rrraaaeee"},"content":"    public static String getInput() {","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"Rrraaaeee"},"content":"        String input \u003d EMPTY_STRING;","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"Rrraaaeee"},"content":"        while (input.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"Rrraaaeee"},"content":"            showPrompt();","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"Rrraaaeee"},"content":"            input \u003d IN.nextLine();","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"Rrraaaeee"},"content":"        return input;","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"Rrraaaeee"},"content":"     * Shows cOOPer\u0027s logo.","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"Rrraaaeee"},"content":"    public static void showLogo() {","lastModifiedDate":"2021-10-03"},{"lineNumber":101,"author":{"gitId":"Rrraaaeee"},"content":"        show(LOGO);","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":103,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":104,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"Rrraaaeee"},"content":"     * Shows the greeting message along with the message asking user to login / register upon entry to the program.","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"Rrraaaeee"},"content":"    public static void showIntroduction() {","lastModifiedDate":"2021-10-03"},{"lineNumber":108,"author":{"gitId":"Rrraaaeee"},"content":"        showGreetingMessage();","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"Rrraaaeee"},"content":"        showLoginRegisterIntroMessage();","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"Rrraaaeee"},"content":"     * Show cOOPer\u0027s greetings upon entry to the program.","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"Rrraaaeee"},"content":"    private static void showGreetingMessage() {","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-03"},{"lineNumber":117,"author":{"gitId":"Rrraaaeee"},"content":"        show(GREETING);","lastModifiedDate":"2021-10-03"},{"lineNumber":118,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-04"},{"lineNumber":119,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":121,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"Rrraaaeee"},"content":"     * Shows a message asking user to login / register along with the format.","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"Rrraaaeee"},"content":"    private static void showLoginRegisterIntroMessage() {","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"Rrraaaeee"},"content":"        show(LOGIN_REGISTER_FOR_ACCESS);","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"Rrraaaeee"},"content":"        show(LOGIN);","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"Rrraaaeee"},"content":"        show(REGISTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"Rrraaaeee"},"content":"        show(NL + EXIT);","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-03"},{"lineNumber":130,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":131,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":132,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"Rrraaaeee"},"content":"     * Shows bye message upon exiting the program.","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"Rrraaaeee"},"content":"    public static void showBye() {","lastModifiedDate":"2021-10-03"},{"lineNumber":136,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"Rrraaaeee"},"content":"        show(BYE_MESSAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"Rrraaaeee"},"content":"        show(LINE);","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"Rrraaaeee"},"content":"     * Shows cOOPer\u0027s command prompt when reading input.","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"Rrraaaeee"},"content":"    private static void showPrompt() {","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"Rrraaaeee"},"content":"        show(PROMPT, false); // false: do not print newline","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"Rrraaaeee"},"content":"        switch (cooperState) {","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"Rrraaaeee"},"content":"        case LOGOUT:","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"Rrraaaeee"},"content":"            show(STATE_LOGOUT, false);","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"Rrraaaeee"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"Rrraaaeee"},"content":"        case CF:","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"Rrraaaeee"},"content":"            show(STATE_CF, false);","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"Rrraaaeee"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"Rrraaaeee"},"content":"        case BS:","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"Rrraaaeee"},"content":"            show(STATE_BS, false);","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"Rrraaaeee"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"Rrraaaeee"},"content":"        default:","lastModifiedDate":"2021-11-02"},{"lineNumber":157,"author":{"gitId":"Rrraaaeee"},"content":"            // no mode, do not need to show anything","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"Rrraaaeee"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":161,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"Rrraaaeee"},"content":"    public static void updatePromptState(CooperState state) {","lastModifiedDate":"2021-11-02"},{"lineNumber":163,"author":{"gitId":"Rrraaaeee"},"content":"        cooperState \u003d state;","lastModifiedDate":"2021-11-02"},{"lineNumber":164,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":165,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":166,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":167,"author":{"gitId":"Rrraaaeee"},"content":"     * Close streams properly.","lastModifiedDate":"2021-10-03"},{"lineNumber":168,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":169,"author":{"gitId":"Rrraaaeee"},"content":"    public static void closeStreams() {","lastModifiedDate":"2021-10-03"},{"lineNumber":170,"author":{"gitId":"Rrraaaeee"},"content":"        IN.close();","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"Rrraaaeee"},"content":"        OUT.close();","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":173,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":174,"author":{"gitId":"Rrraaaeee"},"content":"    protected static void show(String printMessage) {","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"Rrraaaeee"},"content":"        OUT.println(printMessage);","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":177,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"Rrraaaeee"},"content":"    protected static void show(String printMessage, boolean newline) {","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"Rrraaaeee"},"content":"        OUT.print(printMessage);","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"Rrraaaeee"},"content":"        if (newline) {","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"Rrraaaeee"},"content":"            OUT.println();","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":186,"author":{"gitId":"ChrisLangton"},"content":"    //@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"ChrisLangton"},"content":"     * Prints commands available to an admin only along with their formats.","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"ChrisLangton"},"content":"    public static void printAdminHelp() {","lastModifiedDate":"2021-10-05"},{"lineNumber":191,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-05"},{"lineNumber":192,"author":{"gitId":"ChrisLangton"},"content":"        show(ADMIN_COMMANDS);","lastModifiedDate":"2021-10-30"},{"lineNumber":193,"author":{"gitId":"ChrisLangton"},"content":"        show(HELP_TABLE_TOP);","lastModifiedDate":"2021-11-02"},{"lineNumber":194,"author":{"gitId":"ChrisLangton"},"content":"        show(BS_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":195,"author":{"gitId":"ChrisLangton"},"content":"        show(CF_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":196,"author":{"gitId":"ChrisLangton"},"content":"        show(PROJ_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":197,"author":{"gitId":"ChrisLangton"},"content":"        show(ADD_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":198,"author":{"gitId":"ChrisLangton"},"content":"        show(LIST_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":199,"author":{"gitId":"ChrisLangton"},"content":"        show(GENERATE_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":200,"author":{"gitId":"ChrisLangton"},"content":"        show(SCHEDULE_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":201,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":202,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":203,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":204,"author":{"gitId":"ChrisLangton"},"content":"     * Prints commands available to an employee only along with their formats.","lastModifiedDate":"2021-10-31"},{"lineNumber":205,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":206,"author":{"gitId":"ChrisLangton"},"content":"    public static void printEmployeeHelp() {","lastModifiedDate":"2021-10-05"},{"lineNumber":207,"author":{"gitId":"ChrisLangton"},"content":"        show(LINE);","lastModifiedDate":"2021-10-05"},{"lineNumber":208,"author":{"gitId":"ChrisLangton"},"content":"        show(EMPLOYEE_COMMANDS);","lastModifiedDate":"2021-10-30"},{"lineNumber":209,"author":{"gitId":"ChrisLangton"},"content":"        show(HELP_TABLE_TOP);","lastModifiedDate":"2021-11-02"},{"lineNumber":210,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":211,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":212,"author":{"gitId":"fansxx"},"content":"    //@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"fansxx"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"fansxx"},"content":"     * Prints commands available to all users along with their formats.","lastModifiedDate":"2021-10-31"},{"lineNumber":215,"author":{"gitId":"fansxx"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":216,"author":{"gitId":"fansxx"},"content":"    public static void printGeneralHelp() {","lastModifiedDate":"2021-10-05"},{"lineNumber":217,"author":{"gitId":"fansxx"},"content":"        show(POST_ADD_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":218,"author":{"gitId":"fansxx"},"content":"        show(POST_DELETE_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":219,"author":{"gitId":"fansxx"},"content":"        show(POST_COMMENT_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":220,"author":{"gitId":"fansxx"},"content":"        show(POST_LIST_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":221,"author":{"gitId":"fansxx"},"content":"        show(AVAILABLE_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":222,"author":{"gitId":"fansxx"},"content":"        show(AVAILABILITY_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":223,"author":{"gitId":"fansxx"},"content":"        show(MEETINGS_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":224,"author":{"gitId":"fansxx"},"content":"        show(LOGOUT_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":225,"author":{"gitId":"fansxx"},"content":"        show(EXIT_FORMAT);","lastModifiedDate":"2021-10-30"},{"lineNumber":226,"author":{"gitId":"fansxx"},"content":"        show(HELP_TABLE_TOP);","lastModifiedDate":"2021-11-02"},{"lineNumber":227,"author":{"gitId":"fansxx"},"content":"        show(REFER_TO_UG);","lastModifiedDate":"2021-11-06"},{"lineNumber":228,"author":{"gitId":"fansxx"},"content":"        show(UG_LINK);","lastModifiedDate":"2021-11-06"},{"lineNumber":229,"author":{"gitId":"fansxx"},"content":"        show(LINE);","lastModifiedDate":"2021-10-05"},{"lineNumber":230,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":231,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"ChrisLangton":27,"Rrraaaeee":184,"fansxx":20}},{"path":"src/main/java/cooper/ui/VerificationUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.verification.UserRole;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":" * Contains the constants and methods for the Ui involving verification process.","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"public class VerificationUi extends Ui {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"    private static final String PLEASE_REGISTER \u003d \"Your username does not exist, please register!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"    private static final String PLEASE_LOGIN \u003d \"Your username already exists, please login!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"    private static final String REGISTERED_SUCCESSFULLY \u003d \" is now successfully registered as an \";","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"    private static final String EXCLAMATION \u003d \"!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"    private static final String LOGGED_IN_SUCCESSFULLY \u003d \"You are now logged in successfully as \";","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"    private static final String INCORRECT_ROLE \u003d \"You are logging in with an incorrect role! Please try again.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"    private static final String INVALID_ROLE \u003d \"Invalid role entered! Role can only be admin or employee.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    private static final String INCORRECT_PASSWORD \u003d \"Incorrect password entered! Please try again.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    private static final String NO_ACCESS \u003d \"You do not have access to this command.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"    private static final String ENTER_HELP \u003d \"Enter \\\"help\\\" to view the commands you have access to.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    private static final String LOGGED_OUT \u003d \"You are now logged out!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"    private static final String SIGN_IN_DETAILS_WRONG_FORMAT \u003d \"Your sign in details are of the wrong format!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    private static final String CAN_ONLY_LOGIN_REGISTER_EXIT \u003d \"You can only log in, register, or exit here!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"    private static final String DETAILS_CANNOT_BE_EMPTY \u003d \"Your sign in details cannot be empty!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"     * Informs the user that their sign in details input when trying to sign in to cOOPer are of the wrong format.","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"    public static void showSignInDetailsIncorrectFormatError() {","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"        show(SIGN_IN_DETAILS_WRONG_FORMAT);","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"        show(LOGIN);","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"        show(REGISTER);","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"     * Informs the user that the fields of their sign in details are empty.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"    public static void showEmptySignInDetailsError() {","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"        show(DETAILS_CANNOT_BE_EMPTY);","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"     * Informs the user that they can only log in, register or exit at the verification layer.","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"    public static void showUnrecognisedCommandAtSignInError() {","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"        show(CAN_ONLY_LOGIN_REGISTER_EXIT);","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"        show(LOGIN);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"        show(REGISTER);","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"        show(NL + EXIT);","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"     * Asks user to register as the username does not exist in the list of cOOPer\u0027s registered users.","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"    public static void showPleaseRegisterMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"        show(PLEASE_REGISTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"     * Asks user to login as the username already exists in the list of cOOPer\u0027s registered users.","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"    public static void showPleaseLoginMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"        show(PLEASE_LOGIN);","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"     * Informs the user of their successful registration.","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"     * @param username User\u0027s name","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"     * @param userRole User\u0027s role","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"    public static void showRegisteredSuccessfullyMessage(String username, UserRole userRole) {","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"        String userRoleAsString \u003d userRole.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"        show(username + REGISTERED_SUCCESSFULLY + userRoleAsString + EXCLAMATION);","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"     * Informs the user of their successful login to cOOPer.","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"     * @param username User\u0027s name","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"    public static void showLoggedInSuccessfullyMessage(String username) {","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"        show(LOGGED_IN_SUCCESSFULLY + username + EXCLAMATION);","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"     * Informs the user that they are not logging in with the role they registered with.","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"    public static void showIncorrectRoleMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"        show(INCORRECT_ROLE);","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"theeugenechong"},"content":"     * Informs the user that the role they are signing in with is neither admin nor employee.","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"theeugenechong"},"content":"    public static void showInvalidUserRoleError() {","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"theeugenechong"},"content":"        show(INVALID_ROLE);","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"theeugenechong"},"content":"     * Informs user that the password entered is not the password the user registered with.","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"theeugenechong"},"content":"    public static void showIncorrectPasswordMessage() {","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"theeugenechong"},"content":"        show(INCORRECT_PASSWORD);","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"theeugenechong"},"content":"     * Informs the user that the user is taking on a role which does not have access to a certain feature.","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"theeugenechong"},"content":"    public static void showNoAccessError() {","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"theeugenechong"},"content":"        show(NO_ACCESS);","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"theeugenechong"},"content":"        show(ENTER_HELP);","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"theeugenechong"},"content":"     * Informs the user that they are logged out of cOOPer.","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"theeugenechong"},"content":"    public static void showLogoutMessage() {","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"theeugenechong"},"content":"        show(LOGGED_OUT);","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"theeugenechong"},"content":"        show(LOGIN);","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"theeugenechong"},"content":"        show(REGISTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"theeugenechong"},"content":"        show(NL + EXIT);","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"theeugenechong"},"content":"        show(LINE);","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"theeugenechong":147}},{"path":"src/main/java/cooper/util/Util.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.util;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"import java.io.File;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"import java.io.OutputStream;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":" * Utility class containing helper methods to help in some of cOOPer\u0027s features.","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"public class Util {","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"    // https://mkyong.com/java/how-to-convert-inputstream-to-file-in-java/","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"    // https://github.com/tlylt/ip/blob/master/src/main/java/tlylt/haha/Storage.java","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"    // https://www.baeldung.com/convert-input-stream-to-a-file","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"     * Converts input stream (resources) to file during deployment.","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"    public static File inputStreamToTmpFile(InputStream inputStream, String baseDir, String fileName)","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"            throws IOException {","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"        File tmpFile \u003d null;","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"        Path folderDir \u003d Paths.get(baseDir);","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"        Path fileDir \u003d Paths.get(baseDir + fileName);","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"        if (Files.notExists(folderDir)) {","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"            Files.createDirectories(folderDir);","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"        // append \u003d\u003d false","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"        tmpFile \u003d new File(fileDir.toString());","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"        OutputStream tmpFileStream \u003d new FileOutputStream(tmpFile);","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"        byte[] buffer \u003d inputStream.readAllBytes();","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"        tmpFileStream.write(buffer);","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"        tmpFileStream.close();","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"        return tmpFile;","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"     * Converts input stream from a file to a string object. Used in converting the LaTeX template files to a string","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"     * for easier handling.","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"     * @param inputStream File to read from","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"     * @return String representing the content of the file.","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"    public static String inputStreamToString(InputStream inputStream) {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Rrraaaeee"},"content":"        return new BufferedReader(","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Rrraaaeee"},"content":"               new InputStreamReader(inputStream, StandardCharsets.UTF_8))","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Rrraaaeee"},"content":"               .lines()","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Rrraaaeee"},"content":"               .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"Rrraaaeee":55,"theeugenechong":4}},{"path":"src/main/java/cooper/verification/Login.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.verification;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.VerificationUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":" * Represents the sign in protocol for user already registered in cOOPer\u0027s system.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":" * \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":" * User enters their login details (username, password and role) which is then verified","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":" * to determine if the details provided allow for a successful login. A successful","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":" * login is when the username is already registered, the user enters the correct password,","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":" * and the user is logging in with the correct role.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"public class Login extends SignInProtocol {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    /* Log messages */","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    private static final String FAILED_SIGN_IN_ATTEMPT \u003d \"Failed sign in attempt by user \";","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"    private static final String UNREGISTERED_USERNAME \u003d \"with unregistered username, \";","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    private static final String INCORRECT_PASSWORD \u003d \" with incorrect password.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"    private static final String INCORRECT_ROLE \u003d \" with incorrect role.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    private static final String USER_WITH_USERNAME \u003d \"User with username \";","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"    private static final String SUCCESSFULLY_SIGNED_IN \u003d \" successfully signed in.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"    public Login(SignInDetails signInDetails) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"        super(signInDetails);","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"     * Executes the logging in of a user to access cOOPer\u0027s features.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"     * @param verifier A flag in {@code verifier} is set only upon successful login which allows the program","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"     *                 to proceed to the next stage - accessing cOOPer\u0027s features.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"     *                 cOOPer\u0027s list of registered users is also obtained from {@code verifier}.","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"     * @param rawPassword User\u0027s raw password without any hashing.","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"    public void executeSignIn(Verifier verifier, String rawPassword) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"        HashMap\u003cString, SignInDetails\u003e registeredUsers \u003d verifier.getRegisteredUsers();","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"        if (!isRegisteredUser(registeredUsers)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"            askUserToRegister();","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"            verifier.setSuccessfullySignedIn(false);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"            LOGGER.info(FAILED_SIGN_IN_ATTEMPT + UNREGISTERED_USERNAME + signInDetails.getUsername());","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"            return;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"        assert isRegisteredUser(registeredUsers);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"        if (!hasCorrectPassword(registeredUsers, rawPassword)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"            VerificationUi.showIncorrectPasswordMessage();","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"            verifier.setSuccessfullySignedIn(false);","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"            LOGGER.info(FAILED_SIGN_IN_ATTEMPT + signInDetails.getUsername() + INCORRECT_PASSWORD);","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"            return;","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"        assert (isRegisteredUser(registeredUsers) \u0026\u0026 hasCorrectPassword(registeredUsers, rawPassword));","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"        if (!hasCorrectRole(registeredUsers)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"            VerificationUi.showIncorrectRoleMessage();","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"            verifier.setSuccessfullySignedIn(false);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"            LOGGER.info(FAILED_SIGN_IN_ATTEMPT + signInDetails.getUsername() + INCORRECT_ROLE);","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"        assert (isRegisteredUser(registeredUsers) \u0026\u0026 hasCorrectPassword(registeredUsers, rawPassword)","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"                \u0026\u0026 hasCorrectRole(registeredUsers));","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"        verifier.setSuccessfullySignedIn(true);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"        VerificationUi.showLoggedInSuccessfullyMessage(signInDetails.getUsername());","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"        LOGGER.info(USER_WITH_USERNAME + signInDetails.getUsername() + SUCCESSFULLY_SIGNED_IN);","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"     * When the username of {@code signInDetails} is confirmed to exist in the {@code registeredUsers},","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"     * the role of {@code signInDetails} is checked so that it matches the role with which the user registered.","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"     * @param registeredUsers A list of users already registered with cOOPer along with their respective","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"     *                        roles.","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"     * @return true if the role of {@code signInDetails} matches the role with which the user registered","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"    private boolean hasCorrectRole(HashMap\u003cString, SignInDetails\u003e registeredUsers) {","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"        // compares user role which is already in hashmap tp user role of current am object","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails user \u003d registeredUsers.get(signInDetails.getUsername());","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"theeugenechong"},"content":"        UserRole userRoleInHashMap \u003d user.getUserRole();","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"        return userRoleInHashMap.equals(signInDetails.getUserRole());","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"     * Hashes {@code rawPassword} with the registered user salt and compares it with the registered user\u0027s","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"     * encrypted password. Returns true if the hash obtained is same as the registered user\u0027s encrypted password.","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"     * @param registeredUsers A list of users already registered with cOOPer along with their respective","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"     *                        roles.","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"     * @param rawPassword the raw password (unencrypted) entered for this sign in instance","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"     * @return true if the password hash matches the one stored in {@code registeredUsers}","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"    private boolean hasCorrectPassword(HashMap\u003cString, SignInDetails\u003e registeredUsers, String rawPassword) {","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails user \u003d registeredUsers.get(signInDetails.getUsername());","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"        String userSalt \u003d user.getUserSalt();","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"        String calculatedHash \u003d PasswordHasher.generatePasswordHash(rawPassword, userSalt);","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"theeugenechong"},"content":"        return calculatedHash.equals(user.getUserEncryptedPassword());","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"     * In the event that an unregistered user tries to log in, a message will be printed requesting the","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"     * user to register instead.","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"    private void askUserToRegister() {","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"        VerificationUi.showPleaseRegisterMessage();","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"theeugenechong":108}},{"path":"src/main/java/cooper/verification/PasswordHasher.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.verification;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import javax.crypto.SecretKeyFactory;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import javax.crypto.spec.PBEKeySpec;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import java.security.NoSuchAlgorithmException;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import java.security.SecureRandom;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import java.security.spec.InvalidKeySpecException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"import java.security.spec.KeySpec;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import java.util.Base64;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * This class generates a hash for user passwords using the PBKDF2 hash algorithm.","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * To ensure higher security, a salt text is added to the password before hashing it.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The implementation of the password hashing is adapted from this website:","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * https://www.quickprogrammingtips.com/java/how-to-securely-store-passwords-in-java.html","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PasswordHasher {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /* SHA-1 produces a 160-bit hash value */","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int KEY_LENGTH \u003d 160;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /* National Institute of Standards and Technology (NIST) recommends at least 10000 iterations of the hash","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * function be performed.","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final int ITERATIONS \u003d 20000;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Generates hash for {@code password} with {@code salt} added to it.","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param password Password entered by the user","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param salt Salt text used to increase security of hashing","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @return Password hash","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String generatePasswordHash(String password, String salt) {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        byte[] encodedBytes \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            String algorithm \u003d \"PBKDF2WithHmacSHA1\";","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            byte[] saltBytes \u003d Base64.getDecoder().decode(salt);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            KeySpec spec \u003d new PBEKeySpec(password.toCharArray(), saltBytes, ITERATIONS, KEY_LENGTH);","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            SecretKeyFactory factory \u003d SecretKeyFactory.getInstance(algorithm);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            encodedBytes \u003d factory.generateSecret(spec).getEncoded();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (NoSuchAlgorithmException | InvalidKeySpecException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assert encodedBytes !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Base64.getEncoder().encodeToString(encodedBytes);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Generates 64-bit salt text which is to be added to the password for hashing.","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return Salt text which has been generated","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static String getNewSalt() {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        byte[] salt \u003d new byte[8];","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            SecureRandom random \u003d SecureRandom.getInstance(\"SHA1PRNG\");","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            random.nextBytes(salt);","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NoSuchAlgorithmException nse) {","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            nse.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Base64.getEncoder().encodeToString(salt);","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theeugenechong":10,"-":59}},{"path":"src/main/java/cooper/verification/Registration.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.verification;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.VerificationUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":" * Represents the sign in protocol for a new user registering for cOOPer.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":" * \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":" * User enters their registration details (username and role) which is then verified","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":" * to determine if the details provided allow for the user to be successfully registered in","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":" * the system. A successful registration happens when the user has not been registered in the system.","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"public class Registration extends SignInProtocol {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"    /* Log messages */","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    private static final String USER_WITH_USERNAME \u003d \"User with username \";","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    private static final String SUCCESSFULLY_REGISTERED \u003d \" has been successfully registered.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    public Registration(SignInDetails signInDetails) {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"        super(signInDetails);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"     * Executes the addition/registration of a user into cOOPer\u0027s list of registered users.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"     * @param verifier A flag in {@code verifier} is set only upon successful login which allows the program","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"     *                 to proceed to the next stage - accessing cOOPer\u0027s features.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"     * @param rawPassword User\u0027s raw password without any hashing/encryption.","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"    public void executeSignIn(Verifier verifier, String rawPassword) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"        HashMap\u003cString, SignInDetails\u003e registeredUsers \u003d verifier.getRegisteredUsers();","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"        if (isRegisteredUser(registeredUsers)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"            askUserToLogin();","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"            registerUser(registeredUsers);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"            LOGGER.info(USER_WITH_USERNAME + signInDetails.getUsername() + SUCCESSFULLY_REGISTERED);","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"        verifier.setSuccessfullySignedIn(false);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"     * Registers a user into the system by adding the user sign in details to {@code registeredUsers}.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"     * @param registeredUsers A list of details of registered users to which the username and role of","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"     *                        {@code signInDetails} will be added to upon successful registration.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"    private void registerUser(HashMap\u003cString, SignInDetails\u003e registeredUsers) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"        String usernameToRegister \u003d signInDetails.getUsername();","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"        UserRole userRoleToRegister \u003d signInDetails.getUserRole();","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"        registeredUsers.put(usernameToRegister, signInDetails);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"        VerificationUi.showRegisteredSuccessfullyMessage(usernameToRegister, userRoleToRegister);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"     * In the event that a user who is already registered tries to log in, a message will be printed requesting","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"     * the user to log in instead.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"    private void askUserToLogin() {","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"        VerificationUi.showPleaseLoginMessage();","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"theeugenechong":63}},{"path":"src/main/java/cooper/verification/SignInDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.verification;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":" * Class representing the sign in details of a user.","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"public class SignInDetails {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"    private final String username;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"    private final String userEncryptedPassword;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"    private final String userSalt;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"    private final UserRole userRole;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"    public SignInDetails(String username, String userEncryptedPassword, String userSalt, UserRole userRole) {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"        this.username \u003d username;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"        this.userEncryptedPassword \u003d userEncryptedPassword;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"        this.userSalt \u003d userSalt;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"        this.userRole \u003d userRole;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    public String getUsername() {","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"        return username;","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"    public String getUserSalt() {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"        return userSalt;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"    public String getUserEncryptedPassword() {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"        return userEncryptedPassword;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"    public UserRole getUserRole() {","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"        return userRole;","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"theeugenechong":36}},{"path":"src/main/java/cooper/verification/SignInProtocol.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.verification;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":" * Class representing protocols which allow a user to gain access to cOOPer\u0027s features, namely","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":" * login and registration.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"public abstract class SignInProtocol {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"    /* Represents the sign-in details related to this sign in protocol instance. */","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"    protected final SignInDetails signInDetails;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"    protected static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"    public SignInProtocol(SignInDetails signInDetails) {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"        this.signInDetails \u003d signInDetails;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    public abstract void executeSignIn(Verifier verifier, String rawPassword);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"     * Checks if the username in {@code signInDetails} is already present in the list of registered","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"     * users.","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"     * @param registeredUsers A list of users already registered with cOOPer along with their respective","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"     *                        roles.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"     * @return true if the username of {@code signInDetails} is already present as a key in {@code registeredUsers}","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"    protected boolean isRegisteredUser(HashMap\u003cString, SignInDetails\u003e registeredUsers) {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"        return registeredUsers.containsKey(signInDetails.getUsername());","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"theeugenechong":34}},{"path":"src/main/java/cooper/verification/UserRole.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.verification;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":" * Represents the roles of members working at a startup - administrators and employees.","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":" * Different roles have access to different features of cOOPer.","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"public enum UserRole {","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"    ADMIN(\"admin\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"    EMPLOYEE(\"employee\");","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"    private final String roleDescription;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"    UserRole(String roleDescription) {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"        this.roleDescription \u003d roleDescription;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"        return roleDescription;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"theeugenechong":22}},{"path":"src/main/java/cooper/verification/Verifier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.verification;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidUserRoleException;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.UnrecognisedCommandException;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"import cooper.parser.SignInDetailsParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import cooper.ui.VerificationUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":" * Class which verifies the sign in details of a user upon entry to the program.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"public class Verifier {","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    private final HashMap\u003cString, SignInDetails\u003e registeredUsers;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    private boolean isSuccessfullySignedIn;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    public Verifier() {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"        this.registeredUsers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"        this.isSuccessfullySignedIn \u003d false;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"    public HashMap\u003cString, SignInDetails\u003e getRegisteredUsers() {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"        return registeredUsers;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"    public void setSuccessfullySignedIn(boolean successfullySignedIn) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"        this.isSuccessfullySignedIn \u003d successfullySignedIn;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"    public boolean isSuccessfullySignedIn() {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"        return this.isSuccessfullySignedIn;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"     * Verifies that the sign in details provided by the user is valid. A user must log in with the same username,","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"     * password and role with which they were registered with. Prints error messages for the user if the sign in details","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"     * provided are of the wrong format or are lacking arguments. A message will also be printed if the user tries to","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"     * log in with the wrong credentials.","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"     * @param input A string representing the sign in details input by the user","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"     * @return A {@code SignInDetails} object representing the sign in details of {@code input} if it","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"     *         was successfully parsed. Returns {@code null} if parsing was unsuccessful.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"    public SignInDetails verify(String input) {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails signInDetails \u003d null;","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"            SignInProtocol signInProtocol \u003d SignInDetailsParser.parse(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"            String rawPassword \u003d SignInDetailsParser.parseRawPassword(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"            signInProtocol.executeSignIn(this, rawPassword);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"            signInDetails \u003d signInProtocol.signInDetails;","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"        } catch (UnrecognisedCommandException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"            isSuccessfullySignedIn \u003d false;","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"            VerificationUi.showUnrecognisedCommandAtSignInError();","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"            isSuccessfullySignedIn \u003d false;","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"            VerificationUi.showEmptySignInDetailsError();","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"        } catch (InvalidCommandFormatException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"            isSuccessfullySignedIn \u003d false;","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"            VerificationUi.showSignInDetailsIncorrectFormatError();","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"        } catch (InvalidUserRoleException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"            isSuccessfullySignedIn \u003d false;","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"            VerificationUi.showInvalidUserRoleError();","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"        return signInDetails;","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"theeugenechong":70}},{"path":"src/main/resources/parser/command-data.properties","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"# add ","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"available \u003d available ${time-hint}","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"# add","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"add \u003d add ${amount-hint}","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"# proj","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"proj \u003d proj ${years-hint}","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"# post add","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"postAdd \u003d post add ${content-hint}","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"# post delete","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"postDelete \u003d post delete ${index-hint}","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"# post comment","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"postComment \u003d post comment ${content-hint} /on ${index-hint}","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"# post list","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"postList \u003d post list ${list-hint}","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"fansxx"},"content":"# schedule","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"schedule \u003d schedule ${meeting-hint} /with ${usernames-hint}","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"# generate pdf","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"generate \u003d generate ${document-hint}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"ChrisLangton":3,"Rrraaaeee":16,"fansxx":2,"theeugenechong":5}},{"path":"src/main/resources/parser/match-cost.properties","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"# This can be pre-calculated based on history value.","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"SKIP_ONE_CONST_WORD \u003d 5","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"Rrraaaeee":2}},{"path":"src/main/resources/parser/sign-in-data.properties","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"#login","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"login \u003d login ${username-hint} /pw ${password-hint} /as ${role-hint}","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"#register","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"register \u003d register ${username-hint} /pw ${password-hint} /as ${role-hint}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"Rrraaaeee":5}},{"path":"src/main/resources/parser/test-data.properties","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"test.1.input \u003d get contact xyz","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"test.1.result \u003d get_contact(${contact-hint}\u003dxyz)","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"Rrraaaeee"},"content":"# constant part should be case insensitive.","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"test.2.input \u003d Get contact xyz","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"test.2.result \u003d get_contact(${contact-hint}\u003dxyz)","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"# Unknown leading words ignored.","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"test.3.input \u003d test get contact xyz","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"test.3.result \u003d get_contact(${contact-hint}\u003dxyz)","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"# Unknown words between first and last word of constant part ignored.","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"test.4.input \u003d meet abc at xyz","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"test.4.result \u003d schedule_meeting(${contact-hint}\u003dabc, ${time-hint}\u003dxyz)","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"# multiple leading words ignored","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"test.5.input \u003d let\u0027s meet abc at xyz","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"test.5.result \u003d schedule_meeting(${contact-hint}\u003dabc, ${time-hint}\u003dxyz)","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"# unknown words between first and last word of constant part, ignored.","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"test.6.input \u003d get ALL order for client abc","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"test.6.result \u003d get_order_for_client(${client-hint}\u003dabc)","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"# move(s|d) matches moves.","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"test.7.input \u003d moves order xyz to client abc","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"test.7.result \u003d move_order_to_client(${order-hint}\u003dxyz, ${client-hint}\u003dabc)","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"# move(s|d) matches moved.","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"test.8.input \u003d moved order xyz to client abc","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"test.8.result \u003d move_order_to_client(${order-hint}\u003dxyz, ${client-hint}\u003dabc)","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"# Matching prefix when enabled.","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"test.9.input \u003d mov order xyz to client abc","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"test.9.result \u003d move_order_to_client(${order-hint}\u003dxyz, ${client-hint}\u003dabc)","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"# optional char ommited.","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"test.10.input \u003d delete contact abc","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"test.10.result \u003d delete_contact(${contact-hint}\u003dabc)","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"# one of optional char exist.","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"test.11.input \u003d deletes contact abc","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"test.11.result \u003d delete_contact(${contact-hint}\u003dabc)","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"# another of optional char exist.","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"test.12.input \u003d deleted contact abc","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"test.12.result \u003d delete_contact(${contact-hint}\u003dabc)","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"# prefix match, parse succeed","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"test.13.input \u003d view order ord-001","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"test.13.result \u003d view_order(${order-hint}\u003dord-001)","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"# prefix not match, parse failed","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"test.14.input \u003d view order xord-001","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"Rrraaaeee"},"content":"test.14.result \u003d ","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"Rrraaaeee":54}},{"path":"src/test/java/cooper/CooperTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class CooperTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"theeugenechong":1,"-":13}},{"path":"src/test/java/cooper/finance/FinanceManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package cooper.finance;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"import org.junit.jupiter.api.Order;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"//@@author ChrisLangton","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"public class FinanceManagerTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"    static FinanceManager financeManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"    @BeforeAll","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    static void setUpFinanceManager() {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"        financeManager \u003d new FinanceManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"    @Order(1)","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"    void test_properFirstAdditionToBalanceSheet() {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"        int amount \u003d 4000;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"        int balanceSheetStage \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"        boolean isInflow \u003d true;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"        financeManager.addBalance(amount,isInflow, balanceSheetStage);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"        Integer expected \u003d 4000;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"        // ArrayList\u003cInteger\u003e actualList \u003d financeManager.getBalanceSheet();","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"        // Integer actualValue \u003d actualList.get(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"        // assertEquals(expected, actualValue);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"    @Order(2)","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"    void test_properSecondAdditionToBalanceSheet() {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"        int amount \u003d 5000;","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"        int balanceSheetStage \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"        boolean isInflow \u003d false;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"        financeManager.addBalance(amount,isInflow, balanceSheetStage);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"        Integer expected \u003d -5000;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"        // ArrayList\u003cInteger\u003e actualList \u003d financeManager.getBalanceSheet();","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"        // Integer actualValue \u003d actualList.get(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"        // assertEquals(expected, actualValue);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"ChrisLangton":46}},{"path":"src/test/java/cooper/meetings/MeetingManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fansxx"},"content":"package cooper.meetings;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.InvalidTimeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.DuplicateUsernameException;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.CannotScheduleMeetingException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"fansxx"},"content":"import cooper.exceptions.DuplicateMeetingException;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"fansxx"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"fansxx"},"content":"import org.junit.jupiter.api.Order;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"fansxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"fansxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"fansxx"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"fansxx"},"content":"//@@author fansxx","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"fansxx"},"content":"public class MeetingManagerTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"fansxx"},"content":"    static MeetingManager meetingManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"fansxx"},"content":"    @BeforeAll","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"fansxx"},"content":"    static void setUpMeetingManager() {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"fansxx"},"content":"        meetingManager \u003d new MeetingManager();","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"fansxx"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"fansxx"},"content":"    @Order(1)","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"fansxx"},"content":"    void addAvailability_invalidTimeFormat_expectException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"fansxx"},"content":"        String inputTime \u003d \"12-02-2021 12.00\";","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"fansxx"},"content":"        String inputName \u003d \"shixi\";","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"fansxx"},"content":"        assertThrows(InvalidDateTimeFormatException.class, () -\u003e meetingManager.addAvailability(inputTime, inputName));","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"fansxx"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"fansxx"},"content":"    @Order(2)","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"fansxx"},"content":"    void addAvailability_duplicateName_expectException() throws InvalidDateTimeFormatException,","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"fansxx"},"content":"            InvalidTimeException, DuplicateUsernameException {","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"fansxx"},"content":"        String inputTime \u003d \"12-02-2021 16:00\";","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"fansxx"},"content":"        String inputName \u003d \"shixi\";","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"fansxx"},"content":"        meetingManager.addAvailability(inputTime, inputName);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"fansxx"},"content":"        assertThrows(DuplicateUsernameException.class, () -\u003e meetingManager.addAvailability(inputTime, inputName));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"fansxx"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"fansxx"},"content":"    @Order(3)","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"fansxx"},"content":"    void manualScheduleMeeting_duplicateMeeting_expectException() throws DuplicateUsernameException,","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"fansxx"},"content":"            InvalidDateTimeFormatException, InvalidTimeException, CannotScheduleMeetingException,","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"fansxx"},"content":"            DuplicateMeetingException {","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"fansxx"},"content":"        meetingManager.addAvailability(\"12-02-2021 12:00\", \"shixi\");","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"fansxx"},"content":"        meetingManager.addAvailability(\"12-02-2021 12:00\", \"fan\");","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"fansxx"},"content":"        String meetingName \u003d \"Project Meeting\";","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"fansxx"},"content":"        ArrayList\u003cString\u003e listOfAttendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"fansxx"},"content":"        listOfAttendees.add(\"shixi\");","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"fansxx"},"content":"        listOfAttendees.add(\"fan\");","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"fansxx"},"content":"        String time \u003d \"12-02-2021 12:00\";","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"fansxx"},"content":"        meetingManager.manualScheduleMeeting(meetingName, listOfAttendees, time);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"fansxx"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"fansxx"},"content":"                meetingManager.manualScheduleMeeting(meetingName, listOfAttendees, time));","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"fansxx"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"fansxx"},"content":"    @Order(4)","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"fansxx"},"content":"    void manualScheduleMeeting_InvalidTimeFormat_expectException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"fansxx"},"content":"        String meetingName \u003d \"Project Meeting\";","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"fansxx"},"content":"        ArrayList\u003cString\u003e listOfAttendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"fansxx"},"content":"        listOfAttendees.add(\"shixi\");","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"fansxx"},"content":"        listOfAttendees.add(\"fan\");","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"fansxx"},"content":"        String time \u003d \"12-02-2021 1200\";","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"fansxx"},"content":"        assertThrows(InvalidDateTimeFormatException.class, () -\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"fansxx"},"content":"                meetingManager.manualScheduleMeeting(meetingName, listOfAttendees, time));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"fansxx"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"fansxx"},"content":"    @Order(5)","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"fansxx"},"content":"    void manualScheduleMeeting_InvalidTime_expectException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"fansxx"},"content":"        String meetingName \u003d \"Project Meeting\";","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"fansxx"},"content":"        ArrayList\u003cString\u003e listOfAttendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"fansxx"},"content":"        listOfAttendees.add(\"shixi\");","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"fansxx"},"content":"        listOfAttendees.add(\"fan\");","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"fansxx"},"content":"        String time \u003d \"12-02-2021 12:34\";","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"fansxx"},"content":"        assertThrows(InvalidTimeException.class, () -\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"fansxx"},"content":"                meetingManager.manualScheduleMeeting(meetingName, listOfAttendees, time));","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"fansxx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"fansxx"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"fansxx"},"content":"    @Order(6)","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"fansxx"},"content":"    void autoScheduleMeeting_noAvailability_expectException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"fansxx"},"content":"        String meetingName \u003d \"Project Meeting\";","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"fansxx"},"content":"        ArrayList\u003cString\u003e listOfAttendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"fansxx"},"content":"        listOfAttendees.add(\"shixi\");","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"fansxx"},"content":"        listOfAttendees.add(\"fan\");","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"fansxx"},"content":"        assertThrows(CannotScheduleMeetingException.class, () -\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"fansxx"},"content":"                meetingManager.autoScheduleMeeting(meetingName, listOfAttendees));","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"fansxx"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"fansxx"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"fansxx":96}},{"path":"src/test/java/cooper/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rrraaaeee"},"content":"package cooper.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import cooper.exceptions.InvalidUserRoleException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Rrraaaeee"},"content":"import org.junit.jupiter.api.Order;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Rrraaaeee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Rrraaaeee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Rrraaaeee"},"content":"import cooper.exceptions.UnrecognisedCommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Rrraaaeee"},"content":"//@@author Rrraaaeee","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Rrraaaeee"},"content":"public class ParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Rrraaaeee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Rrraaaeee"},"content":"    @Order(1)","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Rrraaaeee"},"content":"    void parse_unnaturalInput_throwsUnrecognisedCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Rrraaaeee"},"content":"        assertThrows(UnrecognisedCommandException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Rrraaaeee"},"content":"                CommandParser.parse(\"foo 123\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Rrraaaeee"},"content":"        assertThrows(UnrecognisedCommandException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Rrraaaeee"},"content":"                CommandParser.parse(\"$%^\u0026\u0026\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Rrraaaeee"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Rrraaaeee"},"content":"    void parse_unnaturalInput_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Rrraaaeee"},"content":"        assertThrows(NumberFormatException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Rrraaaeee"},"content":"                CommandParser.parse(\"add $%^\u0026\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Rrraaaeee"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Rrraaaeee"},"content":"                CommandParser.parse(\"proj\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Rrraaaeee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Rrraaaeee"},"content":"    void parseSignInDetails_emptyArguments_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Rrraaaeee"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Rrraaaeee"},"content":"                SignInDetailsParser.parse(\"login as admin\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Rrraaaeee"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Rrraaaeee"},"content":"                SignInDetailsParser.parse(\"login Topias as\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Rrraaaeee"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Rrraaaeee"},"content":"                CommandParser.parse(\"available\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Rrraaaeee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Rrraaaeee"},"content":"    void parseSignInDetails_invalidRole_throwsInvalidUserRoleException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Rrraaaeee"},"content":"        assertThrows(InvalidUserRoleException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Rrraaaeee"},"content":"                SignInDetailsParser.parse(\"login Topias /pw 1111 /as abc\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"Rrraaaeee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Rrraaaeee"},"content":"        assertThrows(InvalidUserRoleException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Rrraaaeee"},"content":"                SignInDetailsParser.parse(\"register Martin /pw 1111 /as boss\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"Rrraaaeee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Rrraaaeee"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Rrraaaeee":52,"theeugenechong":2}},{"path":"src/test/java/cooper/verification/VerifierTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"package cooper.verification;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"import org.junit.jupiter.api.Order;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"//@@author theeugenechong","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"public class VerifierTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"    static Verifier verifier;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"    @BeforeAll","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"    static void setUpVerifier() {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"        verifier \u003d new Verifier();","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"theeugenechong"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"    @Order(1)","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"    void verify_properInputFirstLoginAttempt_loginFailed() {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"        String input \u003d \"login Topias /pw 1111 /as admin\";","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails actual \u003d verifier.verify(input);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"theeugenechong"},"content":"        assertFalse(verifier.isSuccessfullySignedIn());","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"theeugenechong"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"theeugenechong"},"content":"    @Order(2)","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"theeugenechong"},"content":"    void verify_properInputRegisterUser_registrationSuccessful() {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"theeugenechong"},"content":"        String input \u003d \"register Martin /pw 1111 /as admin\";","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails actual \u003d verifier.verify(input);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"theeugenechong"},"content":"        String userSalt \u003d verifier.getRegisteredUsers().get(\"Martin\").getUserSalt();","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"theeugenechong"},"content":"        String userEncryptedPassword \u003d PasswordHasher.generatePasswordHash(\"1111\", userSalt);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"theeugenechong"},"content":"        assertEquals(verifier.getRegisteredUsers().get(\"Martin\").getUserEncryptedPassword(), userEncryptedPassword);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"theeugenechong"},"content":"        assertFalse(verifier.isSuccessfullySignedIn());","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"theeugenechong"},"content":"        assertTrue(verifier.getRegisteredUsers().containsKey(\"Martin\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"theeugenechong"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"theeugenechong"},"content":"    @Order(3)","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"theeugenechong"},"content":"    void verify_properInputLoginAfterRegister_loginSuccessful() {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"theeugenechong"},"content":"        String input \u003d \"register Martin /pw 1111 /as admin\";","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails actual \u003d verifier.verify(input);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"theeugenechong"},"content":"        String userSalt \u003d verifier.getRegisteredUsers().get(\"Martin\").getUserSalt();","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"theeugenechong"},"content":"        String userEncryptedPassword \u003d PasswordHasher.generatePasswordHash(\"1111\", userSalt);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails expected \u003d new SignInDetails(\"Martin\", userEncryptedPassword, userSalt, UserRole.ADMIN);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"theeugenechong"},"content":"        assertTrue(hasSameAttributeValuesAs(actual, expected));","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"theeugenechong"},"content":"        input \u003d \"login Martin /pw 1111 /as admin\";","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"theeugenechong"},"content":"        actual \u003d verifier.verify(input);","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"theeugenechong"},"content":"        assertTrue(verifier.isSuccessfullySignedIn());","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"theeugenechong"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"theeugenechong"},"content":"    @Order(4)","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"theeugenechong"},"content":"    void verify_wrongPasswordLoginAfterRegister_loginUnsuccessful() {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"theeugenechong"},"content":"        String input \u003d \"login Martin /pw 1234 /as admin\";","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails actual \u003d verifier.verify(input);","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"theeugenechong"},"content":"        String userSalt \u003d verifier.getRegisteredUsers().get(\"Martin\").getUserSalt();","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"theeugenechong"},"content":"        String userEncryptedPassword \u003d PasswordHasher.generatePasswordHash(\"1111\", userSalt);","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails expected \u003d new SignInDetails(\"Martin\", userEncryptedPassword, userSalt, UserRole.ADMIN);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"theeugenechong"},"content":"        assertFalse(hasSameAttributeValuesAs(actual, expected));","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"theeugenechong"},"content":"        assertFalse(verifier.isSuccessfullySignedIn());","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"theeugenechong"},"content":"        assertTrue(verifier.getRegisteredUsers().containsKey(\"Martin\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"theeugenechong"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"theeugenechong"},"content":"    @Order(5)","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"theeugenechong"},"content":"    void verify_wrongRoleLoginAfterRegister_loginUnsuccessful() {","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"theeugenechong"},"content":"        String input \u003d \"login Martin /pw 1111 /as employee\";","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails actual \u003d verifier.verify(input);","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"theeugenechong"},"content":"        String userSalt \u003d verifier.getRegisteredUsers().get(\"Martin\").getUserSalt();","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"theeugenechong"},"content":"        String userEncryptedPassword \u003d PasswordHasher.generatePasswordHash(\"1111\", userSalt);","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails expected \u003d new SignInDetails(\"Martin\", userEncryptedPassword, userSalt, UserRole.ADMIN);","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"theeugenechong"},"content":"        assertFalse(hasSameAttributeValuesAs(actual, expected));","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"theeugenechong"},"content":"        assertFalse(verifier.isSuccessfullySignedIn());","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"theeugenechong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"theeugenechong"},"content":"    @Order(6)","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"theeugenechong"},"content":"    void verify_improperInputEmptyUsernameField_failure() {","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"theeugenechong"},"content":"        String input \u003d \"login as admin\";","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails signInDetails \u003d verifier.verify(input);","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"theeugenechong"},"content":"        assertNull(signInDetails);","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"theeugenechong"},"content":"        assertFalse(verifier.isSuccessfullySignedIn());","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"theeugenechong"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"theeugenechong"},"content":"    @Order(7)","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"theeugenechong"},"content":"    void verify_improperInputEmptyRoleField_failure() {","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"theeugenechong"},"content":"        String input \u003d \"login Sebastian as\";","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails signInDetails \u003d verifier.verify(input);","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"theeugenechong"},"content":"        assertNull(signInDetails);","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"theeugenechong"},"content":"        assertFalse(verifier.isSuccessfullySignedIn());","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"theeugenechong"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"theeugenechong"},"content":"    @Order(8)","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"theeugenechong"},"content":"    void verify_emptyInputString_failure() {","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"theeugenechong"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails signInDetails \u003d verifier.verify(input);","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"theeugenechong"},"content":"        assertNull(signInDetails);","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"theeugenechong"},"content":"        assertFalse(verifier.isSuccessfullySignedIn());","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"theeugenechong"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"theeugenechong"},"content":"    @Order(9)","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"theeugenechong"},"content":"    void verify_emptyArguments_failure() {","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"theeugenechong"},"content":"        String input \u003d \"register\";","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"theeugenechong"},"content":"        SignInDetails signInDetails \u003d verifier.verify(input);","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"theeugenechong"},"content":"        assertNull(signInDetails);","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"theeugenechong"},"content":"        assertFalse(verifier.isSuccessfullySignedIn());","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"theeugenechong"},"content":"    private static boolean hasSameAttributeValuesAs(SignInDetails actual, SignInDetails expected) {","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"theeugenechong"},"content":"        boolean hasSameUsername \u003d actual.getUsername().equals(expected.getUsername());","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"theeugenechong"},"content":"        boolean hasSameRole \u003d actual.getUserRole().equals(expected.getUserRole());","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"theeugenechong"},"content":"        boolean hasSamePassword \u003d actual.getUserEncryptedPassword().equals(expected.getUserEncryptedPassword());","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"theeugenechong"},"content":"        return (hasSameUsername \u0026\u0026 hasSameRole \u0026\u0026 hasSamePassword);","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"theeugenechong"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"theeugenechong"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"theeugenechong":136}},{"path":"tmp/tmp_command-data.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"# add ","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"theeugenechong"},"content":"available \u003d available ${time-hint}","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"# add","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"theeugenechong"},"content":"add \u003d add ${amount-hint}","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"theeugenechong"},"content":"# proj","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"theeugenechong"},"content":"proj \u003d proj ${years-hint}","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"theeugenechong"},"content":"# post add","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"theeugenechong"},"content":"postAdd \u003d post add ${content-hint}","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"theeugenechong"},"content":"# post delete","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"theeugenechong"},"content":"postDelete \u003d post delete ${index-hint}","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"theeugenechong"},"content":"# post comment","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"postComment \u003d post comment ${content-hint} /on ${index-hint}","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"theeugenechong"},"content":"# post list","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"theeugenechong"},"content":"postList \u003d post list ${list-hint}","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"theeugenechong"},"content":"# schedule","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"schedule \u003d schedule ${meeting-hint} /with ${usernames-hint}","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"theeugenechong"},"content":"# generate pdf","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"theeugenechong"},"content":"generate \u003d generate ${document-hint}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"ChrisLangton":2,"theeugenechong":24}},{"path":"tmp/tmp_sign-in-data.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"theeugenechong"},"content":"#login","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"login \u003d login ${username-hint} /pw ${password-hint} /as ${role-hint}","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theeugenechong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"theeugenechong"},"content":"#register","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"register \u003d register ${username-hint} /pw ${password-hint} /as ${role-hint}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"ChrisLangton":2,"theeugenechong":3}}]
