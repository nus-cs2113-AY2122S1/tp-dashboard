[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may_ have to set the Project language level field to the SDK default option.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"theodorekwok":1,"-":65}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"    mainClassName \u003d \"seedu.mtracker.MTracker\"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"theodorekwok":1,"KVignesh122":1,"-":45}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"Display | Name | Github Profile | Product Portfolio Page","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"\u003cimg src\u003d\"images/WingHo.png\" width\u003d\"100\"/\u003e | Kum Wing Ho | [Github](https://github.com/kum-wh) |[PPP](team/kum-wh.md)","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"\u003cimg src\u003d\"images/Theodore.png\" width\u003d\"100\"/\u003e | Kwok Xiu Sheng Theodore | [Github](https://github.com/theodorekwok) | [PPP](team/theodorekwok.md)","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"\u003cimg src\u003d\"images/William.png\" width\u003d\"100\"/\u003e | Lam Junyu William | [Github](https://github.com/williamlamjy) | [PPP](team/williamlamjy.md)","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"\u003cimg src\u003d\"images/Vignesh.jpeg\" width\u003d\"100\"/\u003e | Kumaravel Vignesh | [Github](https://github.com/KVignesh122) | [PPP](team/kvignesh122.md)","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"williamlamjy":1,"KVignesh122":5,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"## Design","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"\u003e Tip: The diagrams in this guide were designed using PlantUML.","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"\u003e Their original .puml files can be found in the diagrams folder [here](https://github.com/AY2122S1-CS2113T-T12-1/tp/tree/master/docs/diagrams).","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"### Architecture","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"The following diagram denotes the high-level design of the mTracker","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"program:","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"Major components of the app:","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"* `MTracker` contains the `main` method responsible for launching and ","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"running the app. It first initializes the required components","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"  and executes the overall program.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"* `ui` holds the `TextUi` class, which is responsible for displaying various greetings, ","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"instructions for user input, and other display texts. The class contains both","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"  strings of commonly used display texts like the console input prompter, and ","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"  methods that print these strings out, thus ensuring satisfactory user interface and ","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"  communication with user.","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"* `console` is a collection of closely-related parser classes that take in the user input, analyse them ","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"to understand the various commands the user would like to execute through the console.","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"* `commands` is another collection of closely-related classes that deal with ","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"executing particular commands determined by the necessary parser classes in console.","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"* `model` contains two types of classes:","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"    * `InstrumentManager` singleton class that manages access to the arraylist containing","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"    all the instruments created by user during the session.","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"    * `subinstrument` is a collection of the different instrument classes: `Crypto`, ","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"    `Etf`, `Forex`, and `Stock`. The primary role of these classes is to initialize instrument","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"      objects of their said type containing their necessary financial information recorded from the user.","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"* `filemanager` is responsible for saving the session\u0027s instruments data to local file, updating","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"them during runtime, and restoring data from previous session when the program is relaunched.","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"* `commons` contains classes which are utilised by the other components to execute their functionality:","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"  * The `Validate` class is responsible for doing various checks on the user inputs and the file data.","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"  * The `error` package contains different exception classes that displays user specific error messages to guide the ","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"  user in the usage of the program.","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"The subsequent sections will elaborate on the more technical design and implementation details of","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"the architectural components briefly explained in this section.","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"### Parser component","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"The main parent class in `console` package is the `InputParser` class which is defined in `InputParser.java`.","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"The figure below represents the class diagram of how all the parser classes interact with classes outside the `console`","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"package:","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"\u003cimg src\u003d\"images/ConsoleDiagram.png\" width\u003d\"1040\"/\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"How the `InputParser` class works:","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"1. When the user enters a command along with the relevant parameters if any, the","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"theodorekwok"},"content":"   `getCommandComponents()` method in `InputParser` separates the user\u0027s command by spaces to return a string array.","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"theodorekwok"},"content":"2. The command is then determined by using the `filterByCommandType()` method which would return the corresponding","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"theodorekwok"},"content":"   command type. Examples of different command types are `AddInstrumentCommand`, `DeleteCommand`, `ListCommand` etc.","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"theodorekwok"},"content":"#### Design considerations for parsing inputs for add functionality ","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"theodorekwok"},"content":"Given the different types of financial instruments supported by mTracker, an abstract class `AddInstrumentParser`","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"theodorekwok"},"content":"which inherits from `InputParser` is implemented. Multiple `AddXYZParser` (`XYZ` is","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"theodorekwok"},"content":"a placeholder for the different instrument types, for example `AddStockParser`) child classes of","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"theodorekwok"},"content":"`AddInstrumentParser` support the parsing of different instruments and their parameters.","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"theodorekwok"},"content":"This implementation provides greater extensibility to the add functionality to support more instrument types.","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"theodorekwok"},"content":"Two alternatives to get the instrument information from the user were considered. The first alternative was to","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"theodorekwok"},"content":"get the user to add in all the information in a single line with separators","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"theodorekwok"},"content":"(for example: `stock TSLA; 909.68; negative; To buy`). This was not implemented as it is likely","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"theodorekwok"},"content":"for the user to enter the parameters in the wrong order. This becomes especially problematic if there are multiple","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"theodorekwok"},"content":"parameters that require the same type to represent different attributes of the instrument (for example: The entry and","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"theodorekwok"},"content":"exit price attributes in Forex instrument).","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"theodorekwok"},"content":"The second alternative was to get the user to indicate which attribute the parameter would belong to","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"theodorekwok"},"content":"(for example: `stock n/TSLA p/909.68 s/negative r/To buy`). This way there are distinct markers to define which","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"theodorekwok"},"content":"parameter belongs to which attribute. However, this was not implemented as given that some instruments have as many as","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"theodorekwok"},"content":"7 different attributes, it requires the user to recall all the attributes needed to add an instrument which is not","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"theodorekwok"},"content":"user-friendly.","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"theodorekwok"},"content":"Therefore, the current implementation prompts the user on the information required to add a particular instrument.","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"theodorekwok"},"content":"This helps to support the user through the process of adding a new instrument.","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"theodorekwok"},"content":"#### Design considerations for parsing inputs for edit functionality","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"theodorekwok"},"content":"Despite currently supporting 4 types of financial instruments, the parsing of inputs for the edit functionality does not require","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"theodorekwok"},"content":"4 edit classes for each instrument. This is because the edit functionality is done on an existing instrument which","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"theodorekwok"},"content":"contains information on what parameters can be edited on. Therefore, only a single EditInstrumentParser ","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"theodorekwok"},"content":"is needed to filter out all the other parameters that are irrelevant to the instrument.","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"theodorekwok"},"content":" ","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"theodorekwok"},"content":"In addition, the current design is able to parse multiple input parameters and display the relevant instructions to","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"theodorekwok"},"content":"users in editing those parameters for a particular instrument. This allows the user to edit multiple parameters of a","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"theodorekwok"},"content":"instrument at once which increases its user-friendliness.","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"williamlamjy"},"content":"### Model Component","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"williamlamjy"},"content":"The `model` package contains the `InstrumentManager` class and `Instrument` class. It is defined","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"williamlamjy"},"content":"in `InstrumentManager.java` and `Instrument.java` respectively. This figure below represents the class diagram of ","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"williamlamjy"},"content":"how the different class work together:","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"williamlamjy"},"content":"\u003cimg src\u003d\"images/ModelDiagram.png\" width\u003d\"450\"/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"williamlamjy"},"content":"The `Model` component:","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"williamlamjy"},"content":"* Stores the instrument data through `Instrument` objects which are contained and managed by the `InstrumentManager`","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"williamlamjy"},"content":"* Contains an abstract parent `Instrument` class. The 4 child sub-instrument classes `Crypto`, `Etf`, `Forex` and ","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"williamlamjy"},"content":"`Stock` implements the Overridden methods (e.g. `textFileFormatting()`).","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"williamlamjy"},"content":"* Contains the `InstrumentManager` class which manages the list of instruments (e.g. add a new instrument to ","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"williamlamjy"},"content":"the list). `InstrumentManager` is implemented as a singleton class to ensure that only one instrument list exists.","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"williamlamjy"},"content":"This ensures the user only edits one list and prevents possible data corruption (e.g. adding a new instrument to ","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"williamlamjy"},"content":"different lists).","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"williamlamjy"},"content":"* Does not have any dependencies on any of the other components, as the `Model` component is meant to be responsible","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"williamlamjy"},"content":"solely for the data representation and modification of instruments.","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"### Command Component","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"The Command component contains all the commands classes, where its respective class is instantiated when a valid command is entered by the user. ","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"theodorekwok"},"content":"Some of the key command classes include:","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"1) AddCrytoCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"2) AddEtfCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"3) AddForexCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"kum-wh"},"content":"3) AddStockCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"theodorekwok"},"content":"4) DeleteCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"theodorekwok"},"content":"5) DoneCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"theodorekwok"},"content":"6) EditInstrumentCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"theodorekwok"},"content":"7) FindCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"kum-wh"},"content":"6) ListCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"theodorekwok"},"content":"7) ViewCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"theodorekwok"},"content":"8) InvalidCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"theodorekwok"},"content":"9) ExitCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"kum-wh"},"content":"This figure below shows the class diagram of all the commands classes:","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"KVignesh122"},"content":"\u003cimg src\u003d\"images/CommandsDiagram.png\" width\u003d\"1150\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"kum-wh"},"content":"Command component:","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"KVignesh122"},"content":"* All commands are child classes of the abstract parent `Command` class. ","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"KVignesh122"},"content":"* Each command class is responsible for carrying out its respective function where each command will execute different actions. ","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"KVignesh122"},"content":"  In addition, most of these command classes interact with `TextUi` to ensure that the user sees the correct responses from the program based on their input.","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"* All Command classes have a method `execute()` that does the actions required according to the user\u0027s input.","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"KVignesh122"},"content":"* Commands component also contains a parent `AddInstrumentCommand` class that all commands related to adding an instrument inherits from.","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"KVignesh122"},"content":"* Other than ExitCommand and InvalidCommand, the other command classes are dependent of on the InstrumentManager and its various methods in order to execute the required actions on the stored instruments.","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"* The command classes are dependent on the `TextUi` class. This allows the command class to display its execution results to the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"KVignesh122"},"content":"### Ui Component","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"KVignesh122"},"content":"The ui component only contains the `TextUi.java` file and its API can be found","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"KVignesh122"},"content":"[here](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/src/main/java/seedu/mtracker/ui/TextUi.java).","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"KVignesh122"},"content":"It is a basic java class containing string attributes and helper methods for displaying the different features, texts and","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"KVignesh122"},"content":"instructions to the user. Hence, **under the single-responsibility principle (SRP), its only responsibility is to act as the primary interaction platform","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"KVignesh122"},"content":"between the user and the rest of the program**.","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"KVignesh122"},"content":"As detailed by the UML diagrams in the Architecture sections above, **many other parser and command classes utilize","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"KVignesh122"},"content":"the methods contained in `TextUi`** to display instructions on the console for required user input. Hence, **most other","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"KVignesh122"},"content":"classes of this program are dependent on the methods of this `TextUi` class** for their proper interaction with the user.","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"KVignesh122"},"content":"Thus, the **`TextUi` class has high cohesion** as it contains all the user text display methods for the various classes","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"KVignesh122"},"content":"in itself. This **enhances maintainability** as only this class **has to be modified to achieve a small change in","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"KVignesh122"},"content":"the desired texted or instruction to be displayed by various classes**, and **increases reusability of the module**","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"KVignesh122"},"content":"as all aspects of texts or instruments to be displayed on the console **have been localized**.","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"KVignesh122"},"content":"On the other hand, the `TextUi` class itself **has a dependency only on an Instrument class** whenever","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"KVignesh122"},"content":"the user wishes to `list` out all the instruments in the watchlist or if s/he wants to `view`","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"KVignesh122"},"content":"one such instrument in detail. The following sequence diagram explains `TextUi`\u0027s interaction with an `Instrument` class when","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"KVignesh122"},"content":"`ListCommand#execute()` calls the `displayAllInstruments(instruments)` method when the user wishes to list out all instruments in the watchlist:","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"KVignesh122"},"content":"\u003cimg src\u003d\"images/TextUiDisplayInstrumentGeneralParams.png\" width\u003d\"780\"/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"KVignesh122"},"content":"Hence, in this scenario, `TextUi` relies on the particular `Instrument` class\u0027s `getGeneralParams()` method to retrieve","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"KVignesh122"},"content":"all the general financial information recorded for that instrument like the instrument\u0027s name,","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"KVignesh122"},"content":"current price, and sentiment. Through this sequence process, `TextUi` displays this information in an appropriate format to","lastModifiedDate":"2021-11-05"},{"lineNumber":175,"author":{"gitId":"KVignesh122"},"content":"the user.","lastModifiedDate":"2021-11-05"},{"lineNumber":176,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"KVignesh122"},"content":"A similar approach is also taken when the user wishes to `view` a particular instrument. However,","lastModifiedDate":"2021-11-05"},{"lineNumber":178,"author":{"gitId":"KVignesh122"},"content":"instead of a loop being iterated over in the `displayInstruments()` method, the `getAllParams()` method is called instead","lastModifiedDate":"2021-11-05"},{"lineNumber":179,"author":{"gitId":"KVignesh122"},"content":"which fetches all the financial information of that particular instrument back to `TextUi` for display:","lastModifiedDate":"2021-11-05"},{"lineNumber":180,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"KVignesh122"},"content":"\u003cimg src\u003d\"images/TextUiDisplayInstrumentAllParams.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":182,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"williamlamjy"},"content":"### FileManager Component","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"williamlamjy"},"content":"The `filemanager` package contains the `Storage`, `InstrumentEncoder` and `InstrumentDecoder` classes. It is defined in","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"williamlamjy"},"content":"the `Storage.java`, `InstrumentEncoder.java` and `InstrumentDecoder.java` respectively. This figure below represents the class diagram of","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"williamlamjy"},"content":"how the different class work together:","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"williamlamjy"},"content":"\u003cimg src\u003d\"images/FileManagerDiagram.png\" width\u003d\"1040\"/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"williamlamjy"},"content":"The FileManager Component:","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"williamlamjy"},"content":"* Contains the `Storage` class that loads data from any pre-existing text file. If the file does not exist, it creates ","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"williamlamjy"},"content":"a new text file to store the data. It updates the file by calling the `writeFile()` method in the `InstrumentEncoder` class.","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"williamlamjy"},"content":"* Contains the `InstrumentEncoder` class which encodes the instrument data into a text file format for decoding.","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"williamlamjy"},"content":"* Contains the `InstrumentDecoder` parent class which decodes the text file. The 4 sub-decoder classes `CryptoDecoder`,","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"williamlamjy"},"content":"`EtfDecoder`, `ForexDecoder` and `StockDecoder` adds the respective instruments with their decoded attributes into the","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"williamlamjy"},"content":"`InstrumentManager` enabling the program to load pre-existing data.","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"williamlamjy"},"content":"* Has some dependencies on the `Model` component as it saves and retrieves data from `Model` objects.","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"williamlamjy"},"content":"#### Design considerations for decoding functionality","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"williamlamjy"},"content":"Given the different types of financial instruments supported by mTracker, the `InstrumentDecoder` class is implemented. ","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"williamlamjy"},"content":"Multiple `XYZDecoder` (`XYZ` is a placeholder for the different instrument types, for example `EtfDecoder`) child classes of","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"williamlamjy"},"content":"`InstrumentDecoder` support the decoding of different instruments and their parameters.","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"williamlamjy"},"content":"This implementation provides greater extensibility and code re-usability to the decoding functionality to support more ","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"williamlamjy"},"content":"instrument types. Greater cohesion is achieved by separating the classes to give more focus on each instrument type and","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"williamlamjy"},"content":"a higher level of abstraction.","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"theodorekwok"},"content":"## Implementation","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"theodorekwok"},"content":"### Add instrument feature","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"kum-wh"},"content":"The add instrument functionality is mainly handled by the `console` and `commands` components. Within the `console`","lastModifiedDate":"2021-11-06"},{"lineNumber":212,"author":{"gitId":"theodorekwok"},"content":"component, the `InputParser` class implements the method `InputParser#getAddInstrumentParameters()`. This method calls","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"theodorekwok"},"content":"`AddInstrumentParser#filterByInstrumentType()` which will then guide the user through the process of adding a new","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"theodorekwok"},"content":"instrument. ","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"theodorekwok"},"content":"The figure below represents the sequence diagram when the user wants to add a stock:","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"theodorekwok"},"content":"\u003cimg src\u003d\"images/AddStockSequenceDiagram.png\" width\u003d\"1040\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":219,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"theodorekwok"},"content":"More details about the reference frame for obtaining the stock details and creating the AddStockCommand object are shown","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"theodorekwok"},"content":"below.","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"theodorekwok"},"content":"\u003cimg src\u003d\"images/AddStockSequenceDiagramRef.png\" width\u003d\"800\"/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"theodorekwok"},"content":"The process for adding the other instruments follow a similar process to the sequence above. The main difference would","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"theodorekwok"},"content":"be the type of instrument parser called, the parameters collected from the user and the command type returned. For","lastModifiedDate":"2021-10-25"},{"lineNumber":227,"author":{"gitId":"theodorekwok"},"content":"example instead of calling `AddStockParser#getStockSpecificParameters()`, its equivalent for adding a crypto is ","lastModifiedDate":"2021-10-25"},{"lineNumber":228,"author":{"gitId":"theodorekwok"},"content":"`AddCryptoParser#getCryptoSpecificParameters()`.","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"theodorekwok"},"content":"From the notes in the sequence diagram above, for every attribute in the instrument, there would be an instructional","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"theodorekwok"},"content":"prompt to get user to provide information for that attribute. This is done through a series of methods in","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"theodorekwok"},"content":"the `TextUi` class.","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"kum-wh"},"content":"### Edit instrument feature","lastModifiedDate":"2021-11-05"},{"lineNumber":235,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":236,"author":{"gitId":"kum-wh"},"content":"The edit instrument functionality mainly involves the `console`, `commands` and `model` components. Within the `console`","lastModifiedDate":"2021-11-06"},{"lineNumber":237,"author":{"gitId":"kum-wh"},"content":"component, the `InputParser` class implements the method `InputParser#getEditInstrumentCommand()`. This method calls","lastModifiedDate":"2021-11-06"},{"lineNumber":238,"author":{"gitId":"kum-wh"},"content":"`InputParser#getParametersToEdit` which will prompt the users to input which parameters of the instrument to edit","lastModifiedDate":"2021-11-06"},{"lineNumber":239,"author":{"gitId":"kum-wh"},"content":"and check if the parameters entered are valid. Invalid inputs will not be processed.","lastModifiedDate":"2021-11-06"},{"lineNumber":240,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":241,"author":{"gitId":"kum-wh"},"content":"The process of writing the new values of the parameters to be edited is handled by the `EditInstrumentParser` class.","lastModifiedDate":"2021-11-06"},{"lineNumber":242,"author":{"gitId":"kum-wh"},"content":"The method `EditInstrumentParser#createEditCommand()` calls `EditInstrumentParser#getEditedParameters()` which ","lastModifiedDate":"2021-11-06"},{"lineNumber":243,"author":{"gitId":"kum-wh"},"content":"calls multiple individual methods that check if its parameters is being edited and to enter a new value for the ","lastModifiedDate":"2021-11-06"},{"lineNumber":244,"author":{"gitId":"kum-wh"},"content":"parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":245,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":246,"author":{"gitId":"kum-wh"},"content":"The execution of setting the new values of the parameters is handled by the `EditInstrumentCommand` class.","lastModifiedDate":"2021-11-06"},{"lineNumber":247,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":248,"author":{"gitId":"kum-wh"},"content":"The figure below represents the sequence diagram when the user wants to edit the name a stock:","lastModifiedDate":"2021-11-06"},{"lineNumber":249,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":250,"author":{"gitId":"kum-wh"},"content":"\u003cimg src\u003d\"images/EditInstrumentSequenceDiagram.png\" width\u003d\"900\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":251,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":252,"author":{"gitId":"kum-wh"},"content":"More details about the reference frame for getting the new edited parameters from the user is given below:","lastModifiedDate":"2021-11-06"},{"lineNumber":253,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":254,"author":{"gitId":"kum-wh"},"content":"\u003cimg src\u003d\"images/EditRefrence.png\" width\u003d\"700\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":255,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":256,"author":{"gitId":"kum-wh"},"content":"From the note in the reference diagram above, each parameter the user wants to edit,","lastModifiedDate":"2021-11-06"},{"lineNumber":257,"author":{"gitId":"kum-wh"},"content":"there would be an instructional prompt to guide the user to give a valid input. This is done through the `TextUi` class.","lastModifiedDate":"2021-11-06"},{"lineNumber":258,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":259,"author":{"gitId":"kum-wh"},"content":"Below is the sequence diagram detailing the command execution of setting the stock with the new values (in this case is setting the name parameter to new name):","lastModifiedDate":"2021-11-06"},{"lineNumber":260,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":261,"author":{"gitId":"kum-wh"},"content":"\u003cimg src\u003d\"images/EditExecuteSequenceDiagram.png\" width\u003d\"900\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":262,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":263,"author":{"gitId":"kum-wh"},"content":"More details about checking if parameters exist in HashMap and to edit the parameters if it exists is shown below:","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":265,"author":{"gitId":"kum-wh"},"content":"\u003cimg src\u003d\"images/EditExecuteRefrence.png\" width\u003d\"700\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":266,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":267,"author":{"gitId":"kum-wh"},"content":"The process for editing other instruments or other parameters follow a similar process to the sequence above.","lastModifiedDate":"2021-11-06"},{"lineNumber":268,"author":{"gitId":"kum-wh"},"content":"The main difference would be the parameters collected from the user and the parameters allowed to be edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":269,"author":{"gitId":"kum-wh"},"content":"For example the user can edit the expiry parameter in Crypto but not in Stock.","lastModifiedDate":"2021-11-06"},{"lineNumber":270,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":271,"author":{"gitId":"kum-wh"},"content":"### Mark an instrument as done feature","lastModifiedDate":"2021-11-06"},{"lineNumber":272,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":273,"author":{"gitId":"kum-wh"},"content":"The done instrument functionality mainly involves the `console`, `commands` and `model` components. Within the `console`","lastModifiedDate":"2021-11-06"},{"lineNumber":274,"author":{"gitId":"kum-wh"},"content":"component, the `InputParser` class implements the method `InputParser#getDoneInstrumentCommand()`, which processes the index of instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":275,"author":{"gitId":"kum-wh"},"content":"and check if the instrument has been previously marked as done. ","lastModifiedDate":"2021-11-06"},{"lineNumber":276,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":277,"author":{"gitId":"kum-wh"},"content":"The execution of marking the instrument as done is handled by the `DoneCommand`class.","lastModifiedDate":"2021-11-06"},{"lineNumber":278,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":279,"author":{"gitId":"kum-wh"},"content":"The figure below represents the sequence diagram when the user executes a done command. In this scenario the user","lastModifiedDate":"2021-11-06"},{"lineNumber":280,"author":{"gitId":"kum-wh"},"content":"gave the command \"done 1\". Here \"done\" is the command keyword and \"1\" represents the current position of the instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":281,"author":{"gitId":"kum-wh"},"content":"in the list of instruments:","lastModifiedDate":"2021-11-06"},{"lineNumber":282,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":283,"author":{"gitId":"kum-wh"},"content":"\u003cimg src\u003d\"images/DoneCryptoSequenceDiagram.png\" width\u003d\"1040\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":284,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":285,"author":{"gitId":"kum-wh"},"content":"More details about the reference frame for executing the done command is shown below:","lastModifiedDate":"2021-11-06"},{"lineNumber":286,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":287,"author":{"gitId":"kum-wh"},"content":"\u003cimg src\u003d\"images/DoneCryptoExecuteDiagram.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":288,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":289,"author":{"gitId":"williamlamjy"},"content":"### Loading pre-existing data","lastModifiedDate":"2021-10-28"},{"lineNumber":290,"author":{"gitId":"williamlamjy"},"content":"The loading of pre-existing data is mainly handled by the `filemanager` and `model` components. The main method calls ","lastModifiedDate":"2021-11-02"},{"lineNumber":291,"author":{"gitId":"williamlamjy"},"content":"`Storage#loadFileData(instrumentManager)` which uses `InstrumentDecoder#readFile(instrumentManager, fileData)`. This method calls ","lastModifiedDate":"2021-11-02"},{"lineNumber":292,"author":{"gitId":"williamlamjy"},"content":"`InstrumentDecoder#addSavedInstrumentToList(instrumentManager, textSegment)` for each pre-existing instrument which will add the ","lastModifiedDate":"2021-11-02"},{"lineNumber":293,"author":{"gitId":"williamlamjy"},"content":"corresponding instrument in the `InstrumentManager` through calling the `XYZDecoder#addXYZToList(textSegment, instrumentManager)`. ","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"williamlamjy"},"content":"In the event the instrument is not one of the 4 types of instruments, the `InstrumentDecoder` will throw a new `InvalidInstrumentInFileError`","lastModifiedDate":"2021-11-04"},{"lineNumber":295,"author":{"gitId":"williamlamjy"},"content":"and display the corresponding error message.","lastModifiedDate":"2021-10-28"},{"lineNumber":296,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"williamlamjy"},"content":"The figures below represents the sequence diagrams when the user loads a pre-existing crypto:","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"williamlamjy"},"content":"\u003cimg src\u003d\"images/FileManagerSeqBetweenStorageAndDecoder.png\" width\u003d\"700\"/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":300,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"williamlamjy"},"content":"More details about the reference frame for decoding and updating the `InstrumentManager` is shown below:","lastModifiedDate":"2021-11-02"},{"lineNumber":302,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":303,"author":{"gitId":"williamlamjy"},"content":"\u003cimg src\u003d\"images/FileManagerSequenceDiagram.png\" width\u003d\"1080\" height\u003d\"460\"/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":304,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"williamlamjy"},"content":"More details about the reference frame for adding the decoded instrument into the `InstrumentManager` is shown below:","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"williamlamjy"},"content":"\u003cimg src\u003d\"images/FileManagerRefDiagCryptoDecoder.png\" width\u003d\"750\"/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":308,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"williamlamjy"},"content":"The process for loading other pre-existing instruments follow a similar process to the sequence above. The main difference","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"williamlamjy"},"content":"would be the type of instrument decoder called, the different instrument specific decoded parameters and the type of instrument","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"williamlamjy"},"content":"added to the `InstrumentManager`. For example when loading a stock instead of calling `CryptoDecoder#addCryptoToList(textSegment, instrumentManager)`","lastModifiedDate":"2021-11-04"},{"lineNumber":312,"author":{"gitId":"williamlamjy"},"content":"it will call `StockDecoder#addStockToList(textSegement, instrumentManager)`.","lastModifiedDate":"2021-11-02"},{"lineNumber":313,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"williamlamjy"},"content":"If loading the file data has any error, it will throw the corresponding file error. This file error will display the","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"williamlamjy"},"content":"appropriate message through the `TextUi` class.","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"williamlamjy"},"content":"### Storing current data","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"williamlamjy"},"content":"The storing of current data is mainly handled by the `filemanager` and `model` components. The main method calls","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"williamlamjy"},"content":"the `Storage#updateFileData(instruments)` which implements the `InstrumentEncoder#writeFile(instruments, writeToFile)` method. ","lastModifiedDate":"2021-11-02"},{"lineNumber":320,"author":{"gitId":"williamlamjy"},"content":"This method calls the `Instrument#textFileFormatting()` method for every instrument that is being stored. The formatted ","lastModifiedDate":"2021-11-02"},{"lineNumber":321,"author":{"gitId":"williamlamjy"},"content":"instrument details are then written to the `MTracker` text file.","lastModifiedDate":"2021-11-02"},{"lineNumber":322,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"williamlamjy"},"content":"The figure below represents the sequence diagram when the user stores current data:","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"williamlamjy"},"content":"\u003cimg src\u003d\"images/FileManagerEncodingSequenceDiag.png\" width\u003d\"700\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"williamlamjy"},"content":"If storing the file data has any error, it will throw the corresponding file error. This file error will display the","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"williamlamjy"},"content":"appropriate message through the `TextUi` class.","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":330,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":332,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":334,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":336,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":338,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":340,"author":{"gitId":"williamlamjy"},"content":"|Priority|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2021-11-05"},{"lineNumber":341,"author":{"gitId":"williamlamjy"},"content":"|----|---|---|------|------------|","lastModifiedDate":"2021-11-05"},{"lineNumber":342,"author":{"gitId":"williamlamjy"},"content":"|`***`|v1.0|user|add a stock|record details of the stock","lastModifiedDate":"2021-11-05"},{"lineNumber":343,"author":{"gitId":"williamlamjy"},"content":"|`***`|v1.0|user|add a cryptocurrency|record details of the cryptocurrency","lastModifiedDate":"2021-11-05"},{"lineNumber":344,"author":{"gitId":"williamlamjy"},"content":"|`***`|v1.0|user|add a forex|record details of the forex","lastModifiedDate":"2021-11-05"},{"lineNumber":345,"author":{"gitId":"williamlamjy"},"content":"|`***`|v1.0|user|add an etf|record details of the etf","lastModifiedDate":"2021-11-05"},{"lineNumber":346,"author":{"gitId":"williamlamjy"},"content":"|`***`|v1.0|user|see my recorded instruments|refer to all of my instruments with their corresponding details","lastModifiedDate":"2021-11-05"},{"lineNumber":347,"author":{"gitId":"williamlamjy"},"content":"|`**`|v1.0|user|add additional information about an instrument|keep track of information other than the instrument\u0027s traits","lastModifiedDate":"2021-11-05"},{"lineNumber":348,"author":{"gitId":"williamlamjy"},"content":"|`***`|v2.0|user|see my previously recorded instruments|continue adding to my list of instruments for my day to day trading","lastModifiedDate":"2021-11-05"},{"lineNumber":349,"author":{"gitId":"williamlamjy"},"content":"|`**`|v2.0|user|have a clear and concise list of my instruments|easily look through the list without having too many details","lastModifiedDate":"2021-11-05"},{"lineNumber":350,"author":{"gitId":"williamlamjy"},"content":"|`*`|v2.0|user|view further details of my instruments|view excessive details of each instrument without cluttering the list","lastModifiedDate":"2021-11-05"},{"lineNumber":351,"author":{"gitId":"williamlamjy"},"content":"|`**`|v2.0|user|edit an instrument|update certain details of an instrument when their traits change","lastModifiedDate":"2021-11-05"},{"lineNumber":352,"author":{"gitId":"williamlamjy"},"content":"|`**`|v2.0|user|mark instruments|so that I can have a checklist of instruments to prioritise","lastModifiedDate":"2021-11-05"},{"lineNumber":353,"author":{"gitId":"williamlamjy"},"content":"|`**`|v2.0|user|find an instrument|locate an instrument without having to go through the entire list|","lastModifiedDate":"2021-11-05"},{"lineNumber":354,"author":{"gitId":"williamlamjy"},"content":"|`*`|v2.1|user|abort an add/edit process|cancel adding/editing an instrument if my mind changes during the process.","lastModifiedDate":"2021-11-05"},{"lineNumber":355,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":357,"author":{"gitId":"theodorekwok"},"content":"1. The program should work on operating systems with `Java 11` installed. ","lastModifiedDate":"2021-11-04"},{"lineNumber":358,"author":{"gitId":"theodorekwok"},"content":"2. The program should allow for persistent data storage of instruments. ","lastModifiedDate":"2021-11-04"},{"lineNumber":359,"author":{"gitId":"theodorekwok"},"content":"3. The program should be able to store 1000 instruments in the storage text file and manage them during run-time. ","lastModifiedDate":"2021-11-04"},{"lineNumber":360,"author":{"gitId":"theodorekwok"},"content":"4. The program should be usable for a novice user who is starting to learn about the financial markets. ","lastModifiedDate":"2021-11-04"},{"lineNumber":361,"author":{"gitId":"theodorekwok"},"content":"5. The program should handle any corruption of storage text file data. ","lastModifiedDate":"2021-11-04"},{"lineNumber":362,"author":{"gitId":"theodorekwok"},"content":"6. The program should have high extensibility for supporting more instrument types in the future.","lastModifiedDate":"2021-11-04"},{"lineNumber":363,"author":{"gitId":"theodorekwok"},"content":"7. The price information stored in the program should never be negative.","lastModifiedDate":"2021-11-04"},{"lineNumber":364,"author":{"gitId":"theodorekwok"},"content":"8. The program should not crash regardless of user\u0027s inputs.","lastModifiedDate":"2021-11-04"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":366,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":372,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"kum-wh":73,"theodorekwok":95,"williamlamjy":104,"KVignesh122":69,"-":31}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"# mTracker","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"![](images/mTracker_logo_cropped.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"mTracker is a **command-line based trading journal interface** that **allows","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"investors and traders to store and view important trading related information** on their","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"shortlisted financial instruments for **reference and decision-making**. It **summarises","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"key financial details** into an **easy-to-read format and provides convenient lookups for trade setups**","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"for busy individuals. The instruments currently supported by the product are Stocks, ETFs,","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"Forex, and Cryptocurrencies.","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"theodorekwok":7,"KVignesh122":2,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"# mTracker User Guide","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"![foo](images/mTracker_logo_cropped.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"mTracker is a **command-line based trading journal interface** that **allows ","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"investors and traders to store and view important trading related information** on their ","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"shortlisted financial instruments for **reference and decision-making**. It **summarises ","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"key financial details** into an **easy-to-read format and provides convenient lookups for trade setups**","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"for busy individuals. The instruments currently supported by the product are Stocks, ETFs,","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":" Forex, and Cryptocurrencies.","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"This user guide explains the key features of mTracker and includes examples of ","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"their usages. The contents table below includes clickable hyperlinks for you to ","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"navigate directly to a section of your preference.","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"The _**Quick Start**_ section provides you with the instructions to download the product, and the necessary software specifications ","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"needed so that you can start using mTracker on the go! The _**FAQ**_ section towards the ","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"end of this guide answers possible queries that you may have of this product, and the","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"eventual _**Command Summary**_ section gives a brief overview of the different types of","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"command-line commands mTracker intakes to execute the various functionalities.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"## _Contents_","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"* [1.0 Quick Start](#10-quick-start)","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"* [2.0 Usage](#20-usage)","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"    * [Notes on command format](#notes-on-command-format)","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    * [2.1.0 Add a new instrument: `add`](#210-adding-a-new-instrument-add)","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"      * [2.1.1 Add a new stock: `stock`](#211-adding-a-new-stock)","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"      * [2.1.2 Add a new crypto: `crypto`](#212-add-a-new-crypto)","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"      * [2.1.3 Add a new etf: `etf`](#213-adding-a-new-etf)","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"      * [2.1.4 Add a new forex: `forex`](#214-adding-a-new-forex)","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    * [2.2.0 List all instruments: `list`](#220-displaying-general-info-of-all-instruments-added-list)","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"    * [2.3.0 View instrument info: `view`](#230-viewing-more-info-recorded-for-an-instrument-view)","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"    * [2.4.0 Mark an instrument done: `done`](#240-marking-a-setup-as-acted-upon-done)","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"    * [2.5.0 Edit an instrument: `edit`](#250-editing-an-instrument-edit)","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"    * [2.6.0 Remove an instrument: `delete`](#260-removing-an-instrument-record-delete)","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    * [2.7.0 Search for an instrument: `find`](#270-search-for-instruments-in-watchlist-find)","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    * [2.8.0 Exit the application : `bye`](#280-exiting-the-bot-bye)","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"* [3.0 FAQ](#30-faq)","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"* [4.0 Command Summary](#40-command-summary)","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"## 1.0 Quick Start","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"1) Ensure that you have Java `11` installed on your computer.","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"2) Download the latest version of `mTracker` from [here](https://github.com/AY2122S1-CS2113T-T12-1/tp/releases).","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"3) Copy the jar file to a folder that you want to run mTracker from.","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"4) At the folder where you copied the jar file run the command `java -jar [CS2113T-T12-1][mTracker].jar` in terminal.","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"5) If mTracker starts successfully, you should see the following greeting:","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"            _________                      __","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"           |  _   _  |                    [  |  _","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":" _ .--..--.|_/ | | \\_| .--.  ,--.   .---.  | | / ] .---.  _ .--.","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"[ `.-. .-. |   | |  [ `/\u0027`\\]`\u0027_\\ : / /\u0027`\\] | \u0027\u0027 \u003c / /__\\\\[ `/\u0027`\\]","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"theodorekwok"},"content":" | | | | | |  _| |_  | |    /| | |,| \\__.  | |`\\ \\| \\__., | |","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"theodorekwok"},"content":"[___||__||__]|_____|[___]   \\\u0027-;__/\u0027.___.\u0027[__|  \\_]\u0027.__.\u0027[___]","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"theodorekwok"},"content":"Hello! I am mTracker, your personal assistant bot that","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"theodorekwok"},"content":"helps you keep track of the markets.","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"KVignesh122"},"content":"What should I do for you now?","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"theodorekwok"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"theodorekwok"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"KVignesh122"},"content":"## 2.0 Usage","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"KVignesh122"},"content":"### *Notes on command format*","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"KVignesh122"},"content":"\u003e * Words in `UPPER_CASE` represent the parameters to be supplied by user. This is the list of parameters","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"KVignesh122"},"content":"\u003ethat would often be referred to throughout this user guide.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"KVignesh122"},"content":"\u003e    * `TYPE` represents the type of the instrument. mTracker currently","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"KVignesh122"},"content":"       supports 4 different types of instruments: `stock`, `etf`, `crypto` and `forex`.","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"KVignesh122"},"content":"\u003e    * `INDEX` represents position index at which the instrument appears in the displayed list.","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"KVignesh122"},"content":"\u003e      * For example, the first instrument in the list would have a position index of 1 while ","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"KVignesh122"},"content":"\u003e      the 3rd instrument in the list would have a","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"KVignesh122"},"content":"\u003eposition index of 3.","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"KVignesh122"},"content":"\u003e    * `SEARCH_STRING` represents the phrase or word user would like to search for in the watchlist with the `find` command.","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"KVignesh122"},"content":"\u003e* Extraneous parameters for all commands would be ignored.","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"KVignesh122"},"content":"\u003e    * For example, the command `bye 123`","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"KVignesh122"},"content":"\u003e      would be interpreted as `bye`.","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"KVignesh122"},"content":"\u003e    * The command `view 2 5` will be interpreted as `view 2`, so financial details of the second item in the watchlist","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"KVignesh122"},"content":"\u003e will be printed out.","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"theodorekwok"},"content":"\u003e* Instrument attributes that require fixed inputs and all commands are case-insensitive.","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"theodorekwok"},"content":"   \u003e    * For example, the command `ADd` would be interpreted as `add`.","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"theodorekwok"},"content":"   \u003e    * The `sentiment` input `POsiTive` would be accepted as `positive`.","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"KVignesh122"},"content":"### 2.1.0 Adding a new instrument: `add`","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"theodorekwok"},"content":"Adds a new instrument to the watchlist of instruments. If at any point in time you want to terminate the `add`","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"theodorekwok"},"content":"process, type in `abort` without any additional characters and mTracker will bring you back to the main workspace.","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"KVignesh122"},"content":"**Example usage**","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e add","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"KVignesh122"},"content":"**Expected outcome**","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"KVignesh122"},"content":"Upon entering the `add` command, mTracker prompts for the type of ","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"KVignesh122"},"content":"instrument to be added:","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"theodorekwok"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e add","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"theodorekwok"},"content":"\tPlease key in the type of instrument:","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e TYPE ","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"theodorekwok"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"KVignesh122"},"content":"After the desired instrument type is input, instruction prompts would be displayed to guide you through the process of","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"KVignesh122"},"content":"adding the new instrument. They are explained for the respective instrument types in the following sections below.","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"KVignesh122"},"content":"### *2.1.1 Adding a new `stock`*","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"williamlamjy"},"content":"After keying in `stock` as the type of instrument, mTracker prompts for the following parameters:","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"theodorekwok"},"content":"* `Name` Name of the stock. Empty name is not allowed.","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"theodorekwok"},"content":"* `Current price` Current price of the stock. Requires a positive number.","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"theodorekwok"},"content":"* `Sentiment` Sentiment of user towards the stock. Only accepts `positive`, `neutral` and `negative`.","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"KVignesh122"},"content":"* `Remarks` Any additional optional remarks about the stock that the user would like to record.","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"KVignesh122"},"content":"**Example usage**","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"theodorekwok"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e add","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"theodorekwok"},"content":"\tPlease key in the type of instrument: ","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e stock","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"theodorekwok"},"content":"\tName of stock: ","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e IBM","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"theodorekwok"},"content":"\tCurrent Price: ","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e 144.61","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"theodorekwok"},"content":"\tSentiment for instrument: ","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e positive","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"theodorekwok"},"content":"\tRemarks (optional): ","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e ","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"theodorekwok"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":132,"author":{"gitId":"KVignesh122"},"content":"**Expected outcome**","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"KVignesh122"},"content":"By following the instructions above, a new stock would be added, and an acknowledgement message would appear.","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"KVignesh122"},"content":"Following the usage example above would produce the following message:","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"theodorekwok"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"KVignesh122"},"content":"\t[S][ ] IBM; 144.61; positive - has been added to list.","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"theodorekwok"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":140,"author":{"gitId":"KVignesh122"},"content":"_**Note: If any of the non-optional parameters `Name`, `Current price` and `Sentiment` are provided with invalid","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"KVignesh122"},"content":"inputs, mTracker would prompt you once again to give a valid input.**_","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":143,"author":{"gitId":"KVignesh122"},"content":"### *2.1.2 Add a new `crypto`*","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"williamlamjy"},"content":"After keying in `crypto` as the type of instrument, mTracker prompts for the following parameters:","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"williamlamjy"},"content":"* `Name` Name of the crypto. Empty name is not allowed.","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"williamlamjy"},"content":"* `Current Price`  Current price of the crypto. Requires a positive number.","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"theodorekwok"},"content":"* `Sentiment` Sentiment of the crypto. Only accepts `positive`, `neutral` and `negative`.","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"williamlamjy"},"content":"* `Expiry` The date by which this trade setup should be executed. Date only in the `YYYY-MM-DD` format is allowed, and it should be a date in the future.","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"williamlamjy"},"content":"* `Remarks` Any additional optional remarks about the cryptocurrency the user would like record.","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":151,"author":{"gitId":"KVignesh122"},"content":"**Example usage**","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"williamlamjy"},"content":"```","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e add","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"williamlamjy"},"content":"\tPlease key in the type of instrument: ","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e crypto","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"williamlamjy"},"content":"\tName of crypto: ","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e bitcoin","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"williamlamjy"},"content":"\tCurrent Price: ","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e 14442.22","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"williamlamjy"},"content":"\tSentiment for instrument: ","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e positive","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"KVignesh122"},"content":"\tExpiry (YYYY-MM-DD): ","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e 2021-12-14","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"williamlamjy"},"content":"\tRemarks (optional): ","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e ","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"williamlamjy"},"content":"```","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"KVignesh122"},"content":"**Expected outcome**","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"williamlamjy"},"content":"By following the instructions above, a new crypto would be added and an acknowledgement message would appear.","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"williamlamjy"},"content":"Following the usage example above we would see the following message:","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"KVignesh122"},"content":"\t[C][ ] bitcoin; 14442.22; positive - has been added to list.","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"williamlamjy"},"content":"```","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":178,"author":{"gitId":"KVignesh122"},"content":"_**Note: If any of the non-optional parameters `Name`, `Current price`, `Sentiment` and `Expiry` are provided with invalid","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"KVignesh122"},"content":"inputs, you would be prompted to give a valid input.**_","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"KVignesh122"},"content":"### *2.1.3 Adding a new `etf`*","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"KVignesh122"},"content":"An exchange-traded fund (ETF) is a security that tracks an index, sector, commodity, or any","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"williamlamjy"},"content":"other asset. After keying in `etf` as the type of instrument, mTracker prompts for the following parameters:","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"KVignesh122"},"content":"* `Name` Name of the ETF. Empty name is not allowed.","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"theodorekwok"},"content":"* `Current price` Current price of the etf. Requires a positive number.","lastModifiedDate":"2021-11-05"},{"lineNumber":186,"author":{"gitId":"theodorekwok"},"content":"* `Sentiment` Sentiment of user towards the etf. Only accepts `positive`, `neutral` and `negative`.","lastModifiedDate":"2021-11-05"},{"lineNumber":187,"author":{"gitId":"theodorekwok"},"content":"* `Past returns` Optional input for past returns of the etf.","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"KVignesh122"},"content":"* `Remarks` Any additional optional remarks about the etf that the user would like to record.","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":190,"author":{"gitId":"KVignesh122"},"content":"**Example usage**","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e add","lastModifiedDate":"2021-11-05"},{"lineNumber":193,"author":{"gitId":"KVignesh122"},"content":"\tPlease key in the type of instrument: ","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e etf","lastModifiedDate":"2021-11-05"},{"lineNumber":195,"author":{"gitId":"KVignesh122"},"content":"\tName of etf: ","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e SPY","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"KVignesh122"},"content":"\tCurrent Price: ","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e 445.87","lastModifiedDate":"2021-11-05"},{"lineNumber":199,"author":{"gitId":"KVignesh122"},"content":"\tSentiment for instrument: ","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e positive","lastModifiedDate":"2021-11-05"},{"lineNumber":201,"author":{"gitId":"KVignesh122"},"content":"\tPast Returns (optional): ","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e 1200","lastModifiedDate":"2021-11-05"},{"lineNumber":203,"author":{"gitId":"KVignesh122"},"content":"\tRemarks (optional): ","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e Prices will plateau out in a few days.","lastModifiedDate":"2021-11-05"},{"lineNumber":205,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"KVignesh122"},"content":"**Expected outcome**","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":208,"author":{"gitId":"KVignesh122"},"content":"When the above ETF is added successfully, the following acknowledgement will be printed","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"KVignesh122"},"content":"out:","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"KVignesh122"},"content":"\t[E][ ] SPY; 445.87; positive - has been added to list.","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"williamlamjy"},"content":"_**Note: If any of the non-optional parameters `Name`, `Current price` and `Sentiment` are provided with invalid","lastModifiedDate":"2021-11-07"},{"lineNumber":215,"author":{"gitId":"williamlamjy"},"content":"inputs, you would be prompted to give a valid input.**_","lastModifiedDate":"2021-11-07"},{"lineNumber":216,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":217,"author":{"gitId":"KVignesh122"},"content":"### *2.1.4 Adding a new `forex`*","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"KVignesh122"},"content":"Bilateral currency pairs, known as forex pairs, are traded in the currency market","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"williamlamjy"},"content":"and mTracker provides the ability to add forex pairs to its watchlist.","lastModifiedDate":"2021-11-07"},{"lineNumber":220,"author":{"gitId":"KVignesh122"},"content":"After keying in `forex` as the type of instrument, mTracker prompts for the","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"KVignesh122"},"content":"following parameters:","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"KVignesh122"},"content":"* `Name` Name of forex. Empty name is not allowed and forex pairs\u0027 names should be ","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"KVignesh122"},"content":"  6 letters long. (Eg. AUDUSD instead of AUD USD, or Australian dollar-US dollar, or AUD/USD)","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"theodorekwok"},"content":"* `Current Price` Current price of the etf. Requires a positive number.","lastModifiedDate":"2021-11-05"},{"lineNumber":225,"author":{"gitId":"theodorekwok"},"content":"* `Sentiment` Sentiment of user towards the etf. Only accepts `positive`, `neutral` and `negative`.","lastModifiedDate":"2021-11-05"},{"lineNumber":226,"author":{"gitId":"KVignesh122"},"content":"* `Entry Price` Price at which to open an order for the forex pair.","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"KVignesh122"},"content":"* `Exit Price` Price at which to close the order.","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"KVignesh122"},"content":"* `Expiry` The date by which this trade setup should be executed. Dates only in the `YYYY-MM-DD` format and in the future are allowed.","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"KVignesh122"},"content":"* `Remarks` Any additional optional remarks about the forex that the user would like to record.","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"KVignesh122"},"content":"   (Eg. trade deficits between countries, FOMC meeting dates,","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"KVignesh122"},"content":"   interest rates outlook in currency\u0027s home country, etc.)","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":233,"author":{"gitId":"KVignesh122"},"content":"**Example usage**","lastModifiedDate":"2021-10-18"},{"lineNumber":234,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e add","lastModifiedDate":"2021-11-05"},{"lineNumber":237,"author":{"gitId":"KVignesh122"},"content":"\tPlease key in the type of instrument: ","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e forex","lastModifiedDate":"2021-11-05"},{"lineNumber":239,"author":{"gitId":"KVignesh122"},"content":"\tName of forex: ","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e USDJPY","lastModifiedDate":"2021-11-05"},{"lineNumber":241,"author":{"gitId":"KVignesh122"},"content":"\tCurrent Price: ","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e 114.289","lastModifiedDate":"2021-11-05"},{"lineNumber":243,"author":{"gitId":"KVignesh122"},"content":"\tSentiment for instrument: ","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e negative","lastModifiedDate":"2021-11-05"},{"lineNumber":245,"author":{"gitId":"theodorekwok"},"content":"\tEntry Price: ","lastModifiedDate":"2021-11-05"},{"lineNumber":246,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e 114.20","lastModifiedDate":"2021-11-05"},{"lineNumber":247,"author":{"gitId":"theodorekwok"},"content":"\tExit Price: ","lastModifiedDate":"2021-11-05"},{"lineNumber":248,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e 110.0","lastModifiedDate":"2021-11-05"},{"lineNumber":249,"author":{"gitId":"KVignesh122"},"content":"\tExpiry (YYYY-MM-DD): ","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e 2021-12-13","lastModifiedDate":"2021-11-05"},{"lineNumber":251,"author":{"gitId":"KVignesh122"},"content":"\tRemarks (optional): ","lastModifiedDate":"2021-10-18"},{"lineNumber":252,"author":{"gitId":"theodorekwok"},"content":"mTracker$add\u003e USD is losing momentum. Technical levels are holding firm.","lastModifiedDate":"2021-11-05"},{"lineNumber":253,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":254,"author":{"gitId":"KVignesh122"},"content":"**Expected outcome**","lastModifiedDate":"2021-10-18"},{"lineNumber":255,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":256,"author":{"gitId":"KVignesh122"},"content":"When the above forex pair is added successfully, the following acknowledgement will be printed","lastModifiedDate":"2021-10-18"},{"lineNumber":257,"author":{"gitId":"KVignesh122"},"content":"out:","lastModifiedDate":"2021-10-18"},{"lineNumber":258,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":259,"author":{"gitId":"KVignesh122"},"content":"\t[F][ ] USDJPY; 114.289; negative - has been added to list.","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":262,"author":{"gitId":"williamlamjy"},"content":"_**Note: If any of the non-optional parameters `Name`, `Current price`, `Sentiment`, `Entry Price`, `Exit Price`,","lastModifiedDate":"2021-11-07"},{"lineNumber":263,"author":{"gitId":"KVignesh122"},"content":"and `Expiry` are provided with invalid","lastModifiedDate":"2021-10-18"},{"lineNumber":264,"author":{"gitId":"KVignesh122"},"content":"inputs, you would be prompted to give a valid input.**_","lastModifiedDate":"2021-10-18"},{"lineNumber":265,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":266,"author":{"gitId":"KVignesh122"},"content":"### 2.2.0 Displaying general info of all instruments added: `list`","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":268,"author":{"gitId":"KVignesh122"},"content":"mTracker displays the 3 general parameters of `Name`, `Current Price`, ","lastModifiedDate":"2021-10-18"},{"lineNumber":269,"author":{"gitId":"williamlamjy"},"content":"and `Sentiment` for all instruments in an easy-to-view format, alongside","lastModifiedDate":"2021-11-07"},{"lineNumber":270,"author":{"gitId":"theodorekwok"},"content":"their execution status marked by an `[X]`.","lastModifiedDate":"2021-11-05"},{"lineNumber":271,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":272,"author":{"gitId":"KVignesh122"},"content":"**Example usage**","lastModifiedDate":"2021-10-18"},{"lineNumber":273,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":274,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":275,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e list","lastModifiedDate":"2021-11-05"},{"lineNumber":276,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":277,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":278,"author":{"gitId":"KVignesh122"},"content":"**Expected outcome**","lastModifiedDate":"2021-10-18"},{"lineNumber":279,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":280,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":281,"author":{"gitId":"KVignesh122"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":282,"author":{"gitId":"KVignesh122"},"content":"CURRENT WATCHLIST","lastModifiedDate":"2021-10-18"},{"lineNumber":283,"author":{"gitId":"KVignesh122"},"content":"1) [C][X] bitcoin; 14442.22; positive","lastModifiedDate":"2021-10-26"},{"lineNumber":284,"author":{"gitId":"KVignesh122"},"content":"2) [E][ ] SPY; 445.87; positive","lastModifiedDate":"2021-10-26"},{"lineNumber":285,"author":{"gitId":"KVignesh122"},"content":"3) [F][ ] USDJPY; 114.289; negative","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"KVignesh122"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":288,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":289,"author":{"gitId":"KVignesh122"},"content":"### 2.3.0 Viewing more info recorded for an instrument: `view`","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":291,"author":{"gitId":"KVignesh122"},"content":"Since there are many different parameters that are recorded for","lastModifiedDate":"2021-10-18"},{"lineNumber":292,"author":{"gitId":"KVignesh122"},"content":"various instruments, to view all the recorded information for an","lastModifiedDate":"2021-10-18"},{"lineNumber":293,"author":{"gitId":"KVignesh122"},"content":"instrument apart from the general information presented","lastModifiedDate":"2021-10-18"},{"lineNumber":294,"author":{"gitId":"KVignesh122"},"content":"by the output of the `list` command, the `view` command can be used.","lastModifiedDate":"2021-10-18"},{"lineNumber":295,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":296,"author":{"gitId":"KVignesh122"},"content":"**Format**","lastModifiedDate":"2021-10-18"},{"lineNumber":297,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":298,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":299,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e view INDEX","lastModifiedDate":"2021-11-05"},{"lineNumber":300,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":301,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":302,"author":{"gitId":"KVignesh122"},"content":"**Example usage**","lastModifiedDate":"2021-10-18"},{"lineNumber":303,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":304,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":305,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e view 2","lastModifiedDate":"2021-11-05"},{"lineNumber":306,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":307,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":308,"author":{"gitId":"KVignesh122"},"content":"**Expected outcome**","lastModifiedDate":"2021-10-18"},{"lineNumber":309,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":310,"author":{"gitId":"KVignesh122"},"content":"All the parameters for the instrument at the requested index ","lastModifiedDate":"2021-10-18"},{"lineNumber":311,"author":{"gitId":"KVignesh122"},"content":"will be printed out:","lastModifiedDate":"2021-10-18"},{"lineNumber":312,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":313,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":314,"author":{"gitId":"KVignesh122"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-18"},{"lineNumber":315,"author":{"gitId":"KVignesh122"},"content":"Type: Etf\t[ ]","lastModifiedDate":"2021-10-26"},{"lineNumber":316,"author":{"gitId":"KVignesh122"},"content":"Name: SPY","lastModifiedDate":"2021-10-18"},{"lineNumber":317,"author":{"gitId":"KVignesh122"},"content":"Current Price: 445.87","lastModifiedDate":"2021-10-18"},{"lineNumber":318,"author":{"gitId":"KVignesh122"},"content":"Sentiment: positive","lastModifiedDate":"2021-10-18"},{"lineNumber":319,"author":{"gitId":"KVignesh122"},"content":"Past Returns: 1200.0","lastModifiedDate":"2021-10-26"},{"lineNumber":320,"author":{"gitId":"KVignesh122"},"content":"Remarks: Prices will plateau out in a few days.","lastModifiedDate":"2021-10-18"},{"lineNumber":321,"author":{"gitId":"KVignesh122"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-18"},{"lineNumber":322,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":323,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":324,"author":{"gitId":"KVignesh122"},"content":"### 2.4.0 Marking a setup as acted upon: `done`","lastModifiedDate":"2021-10-26"},{"lineNumber":325,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":326,"author":{"gitId":"KVignesh122"},"content":"mTracker provides the ability for you to mark a particular","lastModifiedDate":"2021-10-18"},{"lineNumber":327,"author":{"gitId":"KVignesh122"},"content":"record of an instrument in the watchlist as executed or acted upon.","lastModifiedDate":"2021-10-18"},{"lineNumber":328,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":329,"author":{"gitId":"KVignesh122"},"content":"**Format**","lastModifiedDate":"2021-10-18"},{"lineNumber":330,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":331,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":332,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e done INDEX","lastModifiedDate":"2021-11-05"},{"lineNumber":333,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":334,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":335,"author":{"gitId":"KVignesh122"},"content":"**Example usage**","lastModifiedDate":"2021-10-18"},{"lineNumber":336,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":337,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e done 1","lastModifiedDate":"2021-11-05"},{"lineNumber":338,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":339,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":340,"author":{"gitId":"KVignesh122"},"content":"**Expected output**","lastModifiedDate":"2021-10-18"},{"lineNumber":341,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":342,"author":{"gitId":"KVignesh122"},"content":"Marks the first instrument in watchlist as complete,","lastModifiedDate":"2021-10-18"},{"lineNumber":343,"author":{"gitId":"KVignesh122"},"content":"and the following confirmation message will be displayed:","lastModifiedDate":"2021-10-18"},{"lineNumber":344,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":345,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":346,"author":{"gitId":"KVignesh122"},"content":"    Nice! I have marked this instrument as completed:","lastModifiedDate":"2021-10-26"},{"lineNumber":347,"author":{"gitId":"KVignesh122"},"content":"\t    [S][X] IBM; 144.61; positive","lastModifiedDate":"2021-10-26"},{"lineNumber":348,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":349,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":350,"author":{"gitId":"KVignesh122"},"content":"In this example, the first instrument is `IBM` so it has been","lastModifiedDate":"2021-10-18"},{"lineNumber":351,"author":{"gitId":"KVignesh122"},"content":"checked as complete with an \u0027X\u0027.","lastModifiedDate":"2021-10-26"},{"lineNumber":352,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":353,"author":{"gitId":"KVignesh122"},"content":"### 2.5.0 Editing an instrument: `edit`","lastModifiedDate":"2021-10-26"},{"lineNumber":354,"author":{"gitId":"theodorekwok"},"content":"Edit an existing instrument parameters. If at any point in time you want to terminate the `edit`","lastModifiedDate":"2021-11-05"},{"lineNumber":355,"author":{"gitId":"theodorekwok"},"content":"process, type in `abort` without any additional characters and mTracker will bring you back to the main workspace.","lastModifiedDate":"2021-11-05"},{"lineNumber":356,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":357,"author":{"gitId":"kum-wh"},"content":"**Format**","lastModifiedDate":"2021-10-20"},{"lineNumber":358,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":359,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e edit INDEX","lastModifiedDate":"2021-11-05"},{"lineNumber":360,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":361,"author":{"gitId":"kum-wh"},"content":"**Example usage**","lastModifiedDate":"2021-10-20"},{"lineNumber":362,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":363,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":364,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e edit 2","lastModifiedDate":"2021-11-05"},{"lineNumber":365,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":366,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":367,"author":{"gitId":"kum-wh"},"content":"**Expected outcome:**","lastModifiedDate":"2021-10-20"},{"lineNumber":368,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":369,"author":{"gitId":"kum-wh"},"content":"Upon entering the `edit` command, mTracker prompts for the parameters of ","lastModifiedDate":"2021-10-20"},{"lineNumber":370,"author":{"gitId":"kum-wh"},"content":"instrument to be edited:","lastModifiedDate":"2021-10-20"},{"lineNumber":371,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":372,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":373,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e edit 2","lastModifiedDate":"2021-11-05"},{"lineNumber":374,"author":{"gitId":"theodorekwok"},"content":"\tPlease enter one or more Etf parameters to edit separated by spaces only.","lastModifiedDate":"2021-11-05"},{"lineNumber":375,"author":{"gitId":"theodorekwok"},"content":"\tdone-status, name, current-price, sentiment, past-returns, remarks","lastModifiedDate":"2021-11-05"},{"lineNumber":376,"author":{"gitId":"theodorekwok"},"content":"mTracker$edit\u003e name current-price","lastModifiedDate":"2021-11-05"},{"lineNumber":377,"author":{"gitId":"KVignesh122"},"content":"\tEnter new name:","lastModifiedDate":"2021-10-26"},{"lineNumber":378,"author":{"gitId":"theodorekwok"},"content":"mTracker$edit\u003e XLF","lastModifiedDate":"2021-11-05"},{"lineNumber":379,"author":{"gitId":"KVignesh122"},"content":"\tEnter new Current price:","lastModifiedDate":"2021-10-26"},{"lineNumber":380,"author":{"gitId":"theodorekwok"},"content":"mTracker$edit\u003e 148.76","lastModifiedDate":"2021-11-05"},{"lineNumber":381,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":382,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":383,"author":{"gitId":"KVignesh122"},"content":"_**Note: If unknown/invalid parameters are input when mTracker prompts for the parameters to edit,","lastModifiedDate":"2021-10-26"},{"lineNumber":384,"author":{"gitId":"KVignesh122"},"content":"they will be ignored.**_","lastModifiedDate":"2021-10-26"},{"lineNumber":385,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":386,"author":{"gitId":"KVignesh122"},"content":"Then, it prints out the changes that have been made:","lastModifiedDate":"2021-10-26"},{"lineNumber":387,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":388,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":389,"author":{"gitId":"KVignesh122"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":390,"author":{"gitId":"KVignesh122"},"content":"Before:","lastModifiedDate":"2021-10-26"},{"lineNumber":391,"author":{"gitId":"KVignesh122"},"content":"Type: Etf\t[ ]","lastModifiedDate":"2021-10-26"},{"lineNumber":392,"author":{"gitId":"KVignesh122"},"content":"Name: SPY","lastModifiedDate":"2021-10-26"},{"lineNumber":393,"author":{"gitId":"KVignesh122"},"content":"Current Price: 445.87","lastModifiedDate":"2021-10-26"},{"lineNumber":394,"author":{"gitId":"KVignesh122"},"content":"Sentiment: positive","lastModifiedDate":"2021-10-26"},{"lineNumber":395,"author":{"gitId":"KVignesh122"},"content":"Past Returns: 1200.0","lastModifiedDate":"2021-10-26"},{"lineNumber":396,"author":{"gitId":"KVignesh122"},"content":"Remarks: Prices will plateau out in a few days.","lastModifiedDate":"2021-10-26"},{"lineNumber":397,"author":{"gitId":"KVignesh122"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":398,"author":{"gitId":"KVignesh122"},"content":"Changed To:","lastModifiedDate":"2021-10-26"},{"lineNumber":399,"author":{"gitId":"KVignesh122"},"content":"Type: Etf\t[ ]","lastModifiedDate":"2021-10-26"},{"lineNumber":400,"author":{"gitId":"KVignesh122"},"content":"Name: XLF","lastModifiedDate":"2021-10-26"},{"lineNumber":401,"author":{"gitId":"KVignesh122"},"content":"Current Price: 148.76","lastModifiedDate":"2021-10-26"},{"lineNumber":402,"author":{"gitId":"KVignesh122"},"content":"Sentiment: positive","lastModifiedDate":"2021-10-26"},{"lineNumber":403,"author":{"gitId":"KVignesh122"},"content":"Past Returns: 1200.0","lastModifiedDate":"2021-10-26"},{"lineNumber":404,"author":{"gitId":"KVignesh122"},"content":"Remarks: Prices will plateau out in a few days.","lastModifiedDate":"2021-10-26"},{"lineNumber":405,"author":{"gitId":"KVignesh122"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":406,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":407,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":408,"author":{"gitId":"KVignesh122"},"content":"### 2.6.0 Removing an instrument record: `delete`","lastModifiedDate":"2021-10-26"},{"lineNumber":409,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":410,"author":{"gitId":"williamlamjy"},"content":"You can remove an instrument from the watchlist with ","lastModifiedDate":"2021-11-07"},{"lineNumber":411,"author":{"gitId":"williamlamjy"},"content":"the index number of the instrument in the watchlist.","lastModifiedDate":"2021-11-07"},{"lineNumber":412,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":413,"author":{"gitId":"KVignesh122"},"content":"**Format**","lastModifiedDate":"2021-10-18"},{"lineNumber":414,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":415,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":416,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e delete INDEX","lastModifiedDate":"2021-11-05"},{"lineNumber":417,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":418,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":419,"author":{"gitId":"KVignesh122"},"content":"**Example usage**","lastModifiedDate":"2021-10-18"},{"lineNumber":420,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":421,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":422,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e delete 4","lastModifiedDate":"2021-11-05"},{"lineNumber":423,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":424,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":425,"author":{"gitId":"KVignesh122"},"content":"**Expected outcome**","lastModifiedDate":"2021-10-18"},{"lineNumber":426,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":427,"author":{"gitId":"KVignesh122"},"content":"The 4th instrument in the watchlist is removed, ","lastModifiedDate":"2021-10-18"},{"lineNumber":428,"author":{"gitId":"KVignesh122"},"content":"and the remaining instruments\u0027 index numbers are updated accordingly.","lastModifiedDate":"2021-10-18"},{"lineNumber":429,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":430,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":431,"author":{"gitId":"KVignesh122"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":432,"author":{"gitId":"KVignesh122"},"content":"Noted. [F][ ] USDJPY; 114.289; negative - removed from your watchlist","lastModifiedDate":"2021-10-26"},{"lineNumber":433,"author":{"gitId":"KVignesh122"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":434,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":435,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":436,"author":{"gitId":"KVignesh122"},"content":"You can key in `list` once again to view the latest watchlist.","lastModifiedDate":"2021-10-18"},{"lineNumber":437,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":438,"author":{"gitId":"KVignesh122"},"content":"### 2.7.0 Search for instruments in watchlist: `find`","lastModifiedDate":"2021-10-26"},{"lineNumber":439,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":440,"author":{"gitId":"KVignesh122"},"content":"You can find specific instruments in the watchlist by searching for them through `find` command.","lastModifiedDate":"2021-10-18"},{"lineNumber":441,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":442,"author":{"gitId":"KVignesh122"},"content":"**Format**","lastModifiedDate":"2021-10-18"},{"lineNumber":443,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":444,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":445,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e find SEARCH_STRING","lastModifiedDate":"2021-11-05"},{"lineNumber":446,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":447,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":448,"author":{"gitId":"KVignesh122"},"content":"**Example usage**","lastModifiedDate":"2021-10-18"},{"lineNumber":449,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":450,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":451,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e find coin","lastModifiedDate":"2021-11-05"},{"lineNumber":452,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":453,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":454,"author":{"gitId":"KVignesh122"},"content":"**Expected outcome:**","lastModifiedDate":"2021-10-18"},{"lineNumber":455,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":456,"author":{"gitId":"theodorekwok"},"content":"Any instrument name which contains the SEARCH_STRING will be returned:","lastModifiedDate":"2021-11-05"},{"lineNumber":457,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":458,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":459,"author":{"gitId":"KVignesh122"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":460,"author":{"gitId":"KVignesh122"},"content":"1) [C][ ] bitcoin; 14442.22; positive","lastModifiedDate":"2021-10-26"},{"lineNumber":461,"author":{"gitId":"theodorekwok"},"content":"2) [C][ ] dogecoin; 21.14; positive","lastModifiedDate":"2021-11-05"},{"lineNumber":462,"author":{"gitId":"KVignesh122"},"content":"There were 2 instrument(s) found for keyword, coin.","lastModifiedDate":"2021-10-26"},{"lineNumber":463,"author":{"gitId":"KVignesh122"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":464,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":465,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":466,"author":{"gitId":"KVignesh122"},"content":"In the event that there were no instruments found for the input","lastModifiedDate":"2021-10-18"},{"lineNumber":467,"author":{"gitId":"KVignesh122"},"content":"SEARCH_STRING, the following message will be printed out:","lastModifiedDate":"2021-10-18"},{"lineNumber":468,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":469,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":470,"author":{"gitId":"KVignesh122"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":471,"author":{"gitId":"theodorekwok"},"content":"There were no instruments found for keyword, JPY.","lastModifiedDate":"2021-11-05"},{"lineNumber":472,"author":{"gitId":"KVignesh122"},"content":"________________________________________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":473,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":474,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":475,"author":{"gitId":"theodorekwok"},"content":"_**Note: SEARCH_STRING is case-sensitive.**_","lastModifiedDate":"2021-11-05"},{"lineNumber":476,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":477,"author":{"gitId":"KVignesh122"},"content":"### 2.8.0 Exiting the bot: `bye`","lastModifiedDate":"2021-10-26"},{"lineNumber":478,"author":{"gitId":"KVignesh122"},"content":"When you wish to quit the mTracker program, simply type in `bye`.","lastModifiedDate":"2021-10-18"},{"lineNumber":479,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":480,"author":{"gitId":"KVignesh122"},"content":"**Example usage**","lastModifiedDate":"2021-10-18"},{"lineNumber":481,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":482,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":483,"author":{"gitId":"theodorekwok"},"content":"mTracker$main\u003e bye","lastModifiedDate":"2021-11-05"},{"lineNumber":484,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":485,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":486,"author":{"gitId":"KVignesh122"},"content":"**Expected outcome**","lastModifiedDate":"2021-10-18"},{"lineNumber":487,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":488,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":489,"author":{"gitId":"KVignesh122"},"content":" ______            _______  _","lastModifiedDate":"2021-10-18"},{"lineNumber":490,"author":{"gitId":"KVignesh122"},"content":"(  ___ \\ |\\     /|(  ____ \\( )","lastModifiedDate":"2021-10-18"},{"lineNumber":491,"author":{"gitId":"KVignesh122"},"content":"| (   ) )( \\   / )| (    \\/| |","lastModifiedDate":"2021-10-18"},{"lineNumber":492,"author":{"gitId":"KVignesh122"},"content":"| (__/ /  \\ (_) / | (__    | |","lastModifiedDate":"2021-10-18"},{"lineNumber":493,"author":{"gitId":"KVignesh122"},"content":"|  __ (    \\   /  |  __)   | |","lastModifiedDate":"2021-10-18"},{"lineNumber":494,"author":{"gitId":"KVignesh122"},"content":"| (  \\ \\    ) (   | (      (_)","lastModifiedDate":"2021-10-18"},{"lineNumber":495,"author":{"gitId":"KVignesh122"},"content":"| )___) )   | |   | (____/| _","lastModifiedDate":"2021-10-18"},{"lineNumber":496,"author":{"gitId":"KVignesh122"},"content":"|/ \\___/    \\_/   (_______/(_)","lastModifiedDate":"2021-10-18"},{"lineNumber":497,"author":{"gitId":"KVignesh122"},"content":"Thank you for using mTracker.","lastModifiedDate":"2021-10-18"},{"lineNumber":498,"author":{"gitId":"KVignesh122"},"content":"MAY THE MARKETS BE WITH YOU!!!","lastModifiedDate":"2021-10-26"},{"lineNumber":499,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":500,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":501,"author":{"gitId":"KVignesh122"},"content":"_**Note: Once quit, the instruments created during session","lastModifiedDate":"2021-10-18"},{"lineNumber":502,"author":{"gitId":"KVignesh122"},"content":"will be stored and retrieved back by mTracker once it is relaunched.**_","lastModifiedDate":"2021-10-18"},{"lineNumber":503,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":504,"author":{"gitId":"KVignesh122"},"content":"## 3.0 FAQ","lastModifiedDate":"2021-10-26"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":506,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":508,"author":{"gitId":"KVignesh122"},"content":"**A**: Locate text file named `mTracker.txt` and transfer the file over to another computer.","lastModifiedDate":"2021-10-26"},{"lineNumber":509,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":510,"author":{"gitId":"KVignesh122"},"content":"**Q**: Can I edit the data without launching the mTracker? ","lastModifiedDate":"2021-10-26"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":512,"author":{"gitId":"KVignesh122"},"content":"**A**: You can open the `mTracker.txt` file located in the same directory as the jar file","lastModifiedDate":"2021-10-26"},{"lineNumber":513,"author":{"gitId":"williamlamjy"},"content":"to edit/add instruments manually. However, please make sure that each line","lastModifiedDate":"2021-11-07"},{"lineNumber":514,"author":{"gitId":"williamlamjy"},"content":"contains details of only one instrument.","lastModifiedDate":"2021-11-07"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":516,"author":{"gitId":"KVignesh122"},"content":"## 4.0 Command Summary","lastModifiedDate":"2021-10-26"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":518,"author":{"gitId":"williamlamjy"},"content":"Action | Format | Examples","lastModifiedDate":"2021-10-17"},{"lineNumber":519,"author":{"gitId":"williamlamjy"},"content":" --------- | ------ |------","lastModifiedDate":"2021-10-17"},{"lineNumber":520,"author":{"gitId":"williamlamjy"},"content":"Add an instrument | `add` | Read [2.1.0 Add a new instrument: `add`](#210-adding-a-new-instrument-add) for detailed instructions and examples.","lastModifiedDate":"2021-10-26"},{"lineNumber":521,"author":{"gitId":"theodorekwok"},"content":"List all instruments in watchlist | `list` | `mTracker$main\u003e list` prints out all instruments in watchlist, and their respective general parameters\u0027 information.","lastModifiedDate":"2021-11-05"},{"lineNumber":522,"author":{"gitId":"theodorekwok"},"content":"View all info of an instrument | `view INDEX` | `mTracker$main\u003e view 1` prints out all financial details recorded for the first instrument in watchlist.","lastModifiedDate":"2021-11-05"},{"lineNumber":523,"author":{"gitId":"theodorekwok"},"content":"Mark an instrument\u0027s trade setup as completed | `done INDEX` | `mTracker$main\u003e done 2` marks second instrument in watchlist as acted upon.","lastModifiedDate":"2021-11-05"},{"lineNumber":524,"author":{"gitId":"williamlamjy"},"content":"Edit details recorded for an instrument | `edit INDEX` | Read [2.5.0 Edit an instrument: `edit`](#250-editing-an-instrument-edit) for detailed instructions and examples.","lastModifiedDate":"2021-10-26"},{"lineNumber":525,"author":{"gitId":"theodorekwok"},"content":"Delete an instrument from watchlist | `delete INDEX` | `mTracker$main\u003e delete 5` deletes the fifth instrument in watchlist.","lastModifiedDate":"2021-11-05"},{"lineNumber":526,"author":{"gitId":"theodorekwok"},"content":"Search for recorded instrument(s) | `find SEARCH_STRING` | `mTracker$main\u003e find USD` returns all financial instruments in watchlist that contain \"USD\". **(Note: SEARCH_STRING is case-sensitive.)**","lastModifiedDate":"2021-11-05"},{"lineNumber":527,"author":{"gitId":"theodorekwok"},"content":"Exit program | `bye` | `mTracker$main\u003e bye` prints out farewell message and program ends.","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"kum-wh":20,"theodorekwok":113,"williamlamjy":48,"KVignesh122":317,"-":29}},{"path":"docs/diagrams/AddStockSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"!include Styles.puml","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"box console COLOR_CONSOLE_SEGMENT","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"participant \":InputParser\" as InputParser COLOR_CONSOLE","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nInputParser\" as ClassInputParser COLOR_CONSOLE","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nAddInstrumentParser\" as AddInstrumentParser COLOR_CONSOLE","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"participant \":AddStockParser\" as AddStockParser COLOR_CONSOLE","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"participant \":AddStockCommand\" as AddStockCommand COLOR_COMMANDS","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"end box","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"box commands COLOR_FAINT_GREEN","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"participant \":AddStockCommand\" as AddStockCommand COLOR_FAINT_GREEN","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"box ui COLOR_LIGHT_BLUE","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nTextUi\" as TextUi COLOR_UI","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"end box","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"[-\u003e InputParser : filterByCommandType({\"add\"}, instruments)","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"activate InputParser","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"InputParser -\u003e InputParser : getAddInstrumentParameters()","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"activate InputParser","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"    loop until user enters a valid instrument type or aborts","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"        InputParser -\u003e TextUi : displayAddInstrumentFirstInstruction()","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"        activate TextUi","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"        TextUi --\u003e InputParser","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"        deactivate TextUi","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"theodorekwok"},"content":"        InputParser -\u003e ClassInputParser : getUserInput(\"add\")","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":"        activate ClassInputParser","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"theodorekwok"},"content":"        ClassInputParser --\u003e InputParser : return instrumentType","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"        deactivate ClassInputParser","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"    end loop","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"InputParser -\u003e AddInstrumentParser : filterByInstrumentType({\"stock\"})","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"activate AddInstrumentParser","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"note right","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"The parameter \"stock\" was","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"theodorekwok"},"content":"given by the user after","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"theodorekwok"},"content":"displayAddInstrumentFirstInstruction().","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"theodorekwok"},"content":"end note","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"create AddStockParser","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"AddInstrumentParser -\u003e AddStockParser : AddStockParser()","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"activate AddStockParser","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"AddStockParser --\u003e AddInstrumentParser","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"deactivate AddStockParser","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"AddInstrumentParser -\u003e AddStockParser : initParameters()","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"activate AddStockParser","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"AddStockParser --\u003e AddInstrumentParser","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"theodorekwok"},"content":"deactivate AddStockParser","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"theodorekwok"},"content":"ref over AddInstrumentParser, AddStockParser, AddStockCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"theodorekwok"},"content":"Get stock details from user and create the AddStockCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"theodorekwok"},"content":"endref","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"theodorekwok"},"content":"AddInstrumentParser --\u003e InputParser : return command","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"theodorekwok"},"content":"deactivate AddInstrumentParser","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"theodorekwok"},"content":"InputParser --\u003e InputParser : return command","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"theodorekwok"},"content":"deactivate InputParser","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"theodorekwok"},"content":"[\u003c-- InputParser : return command","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"theodorekwok"},"content":"deactivate InputParser","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"theodorekwok"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"theodorekwok":71}},{"path":"docs/diagrams/AddStockSequenceDiagramRef.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"!include Styles.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"group sd Get stock details from user and create the AddStockCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"box console COLOR_CONSOLE_SEGMENT","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nAddInstrumentParser\" as AddInstrumentParser COLOR_CONSOLE","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"participant \":AddStockParser\" as AddStockParser COLOR_CONSOLE","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nAddStockParser\" as ClassAddStockParser COLOR_CONSOLE","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"end box","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"box command COLOR_FAINT_GREEN","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"participant \":AddStockCommand\" as AddStockCommand COLOR_COMMANDS","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"end box","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"activate AddInstrumentParser","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"AddInstrumentParser-\u003e AddStockParser : getInstrumentParameters()","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"activate AddStockParser","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"AddStockParser-\u003eClassAddStockParser : getGeneralParameters(\"stock\")","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"activate ClassAddStockParser","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"ClassAddStockParser--\u003e AddStockParser","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"deactivate ClassAddStockParser","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"note right","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"Both getGeneralParameters() and","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"getStockSpecificParameters()","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"would prompt the user to input details for every","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"attribute to store as parameters.","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"end note","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"AddStockParser -\u003e AddStockParser : getStockSpecificParameters()","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"theodorekwok"},"content":"activate AddStockParser","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":"AddStockParser --\u003e AddStockParser","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"theodorekwok"},"content":"deactivate AddStockParser","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"create AddStockCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"AddStockParser -\u003e AddStockCommand : AddStockCommand()","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"activate AddStockCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"AddStockCommand --\u003e AddStockParser","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"deactivate AddStockCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"AddInstrumentParser\u003c--AddStockParser : return command","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"theodorekwok"},"content":"deactivate AddStockParser","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"theodorekwok"},"content":"AddInstrumentParser-\u003eAddStockParser : getParameters()","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"theodorekwok"},"content":"activate AddStockParser","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"AddInstrumentParser\u003c--AddStockParser : return parameters","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"deactivate AddStockParser","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"AddInstrumentParser-\u003e AddStockCommand : setParams(parameters)","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"activate AddStockCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"AddInstrumentParser\u003c--AddStockCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"deactivate AddStockCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"end","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"theodorekwok":57}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"!include Styles.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"hide members","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"Class \"\u003c$user\u003e\" as User COLOR_USER","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"    Class ui COLOR_UI","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"    Class main COLOR_MAIN","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"    Class commands COLOR_COMMANDS","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"    Class console COLOR_CONSOLE","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    Class model COLOR_MODEL","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    Class filemanager COLOR_STORAGE","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"    Class commons COLOR_COMMONS","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"main -down[COLOR_MAIN]-\u003e filemanager","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"main -down[COLOR_MAIN]-\u003e console","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"main -down[COLOR_MAIN]-\u003e model","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"main .down[COLOR_MAIN]-\u003e commands","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"main .down[COLOR_MAIN]-\u003e ui","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"filemanager .down[COLOR_STORAGE]-\u003eui","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"filemanager .down[COLOR_STORAGE]-\u003emodel","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"console .down[COLOR_CONSOLE]-\u003eui","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"console .down[COLOR_CONSOLE]-\u003emodel","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"console .down[COLOR_CONSOLE]-\u003ecommands","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"commands .down[COLOR_COMMANDS]-\u003eui","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"commands -down[COLOR_COMMANDS]-\u003emodel","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"ui .down[COLOR_UI]-\u003emodel","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"User ..[COLOR_USER]\u003e ui","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"theodorekwok":32,"williamlamjy":1}},{"path":"docs/diagrams/Colors.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"!define COLOR_WHITE #FFFFFF","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"!define COLOR_SILVER #C0C0C0","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"!define COLOR_GREY #A5A8AC","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"!define COLOR_BLACK #000000","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"!define COLOR_BROWN #800000","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"!define COLOR_RED #FF0000","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"!define COLOR_YELLOW #FFFF00","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"!define COLOR_BRIGHT_GREEN #00FF00","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"!define COLOR_DARK_GREEN #008000","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"!define COLOR_LIGHT_BLUE #00FFFF","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"!define COLOR_TEAL #008080","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"!define COLOR_DARK_BLUE #0000FF","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"!define COLOR_PINK #FF00FF","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"!define COLOR_PURPLE #800080","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_FAINT_TEAL #BBF1F1","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_FAINT_GREEN #C2F5CC","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_LIGHT_PURPLE #CBC3E3","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_LIGHT_BROWN #C89D7C","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_ORANGE #CF5300","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_FAINT_ORANGE #FFD580","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"theodorekwok":1,"williamlamjy":6,"KVignesh122":13}},{"path":"docs/diagrams/CommandsDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"!include Styles.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"Package \"Commands                    \"  \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"     Class \"{abstract}\\nCommand\" as Command COLOR_COMMANDS {","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"     {method} + setData(InstrumentManager)","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"     {method} + setParams(ArrayList\u003cString\u003e)","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"     {method} + execute() ABSTRACT: String","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"     }","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"     Class ViewCommand COLOR_COMMANDS {","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"     {method} + execute(): String","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"     }","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"     Class EditInstrumentCommand COLOR_COMMANDS {","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"     {method} + execute(): String","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"     }","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"     Class DoneCommand COLOR_COMMANDS {","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"     {method} + execute(): String","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"     }","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"     Class DeleteCommand COLOR_COMMANDS {","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"     {method} + execute(): String","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"     }","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"     Class InvalidCommand COLOR_COMMANDS {","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"     {method} + execute(): String","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"     }","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"     Class ABCCommand COLOR_COMMANDS {","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"     {method} + execute(): String","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"     }","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"     Class AddInstrumentCommand COLOR_COMMANDS {","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"     {method} + execute(): String","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"     }","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"     Class \"{abstract}\\nIndexedCommand\" as IndexedCommand COLOR_COMMANDS {","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"     {method} + execute() ABSTRACT: String","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"     }","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"     Class AddXYZCommand COLOR_COMMANDS {","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"     {method} + execute(): String","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"     }","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"Class InstrumentManager COLOR_MODEL {","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"    {method} + getSize(): int","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"    {method} + getInstruments(): ArrayList\u003cInstrument\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"    {method} + getInstrument(int): Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"    {method} + addInstrument(Instrument): Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"    {method} + findInstruments(String): ArrayList\u003cInstrument\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"    {method} + deleteInstrument(int)","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"KVignesh122"},"content":"    {method} + editInstrument(int, Hashmap\u003cString, String\u003e)","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"Class TextUi COLOR_UI","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"KVignesh122"},"content":"show Command members","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"show InstrumentManager members","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"KVignesh122"},"content":"show AddInstrumentCommand members","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"show IndexedCommand members","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"show InvalidCommand members","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"KVignesh122"},"content":"show DeleteCommand members","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"KVignesh122"},"content":"show DoneCommand members","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"KVignesh122"},"content":"show EditInstrumentCommand members","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"KVignesh122"},"content":"show ViewCommand members","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"KVignesh122"},"content":"show ABCCommand members","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"KVignesh122"},"content":"show AddXYZCommand members","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"KVignesh122"},"content":"Command -up[COLOR_COMMANDS]-\u003e\"1\" InstrumentManager","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"KVignesh122"},"content":"InvalidCommand -[COLOR_COMMANDS]-|\u003eCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"KVignesh122"},"content":"note right of ABCCommand: ABCCommand \u003d ExitCommand, \\nFindCommand, \\nListCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"KVignesh122"},"content":"ABCCommand -[COLOR_COMMANDS]-|\u003eCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"KVignesh122"},"content":"AddInstrumentCommand -[COLOR_COMMANDS]-|\u003eCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"KVignesh122"},"content":"IndexedCommand -up[COLOR_COMMANDS]-|\u003eCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"KVignesh122"},"content":"AddXYZCommand -[COLOR_COMMANDS]-|\u003eAddInstrumentCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"KVignesh122"},"content":"EditInstrumentCommand -[COLOR_COMMANDS]-|\u003eIndexedCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"KVignesh122"},"content":"ViewCommand -[COLOR_COMMANDS]-|\u003eIndexedCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"KVignesh122"},"content":"DoneCommand -[COLOR_COMMANDS]-|\u003eIndexedCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"KVignesh122"},"content":"DeleteCommand -[COLOR_COMMANDS]-|\u003eIndexedCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"KVignesh122"},"content":"AddXYZCommand -[COLOR_COMMANDS].\u003eTextUi","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"KVignesh122"},"content":"ABCCommand -[COLOR_COMMANDS].\u003eTextUi","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"KVignesh122"},"content":"DeleteCommand -[COLOR_COMMANDS].\u003eTextUi","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"KVignesh122"},"content":"DoneCommand -[COLOR_COMMANDS].\u003eTextUi","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"KVignesh122"},"content":"EditInstrumentCommand -[COLOR_COMMANDS].\u003eTextUi","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"KVignesh122"},"content":"ViewCommand -[COLOR_COMMANDS].\u003eTextUi","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"KVignesh122"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"KVignesh122":91}},{"path":"docs/diagrams/ConsoleDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"!include Styles.puml","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"Class main COLOR_MAIN","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"Package \"console                 \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"    Class InputParser COLOR_CONSOLE {","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"        + filterByCommandType(String[], ArrayList\u003cInstrument\u003e): Command","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"    Class \"{abstract}\\nAddInstrumentParser\" as AddInstrumentParser COLOR_CONSOLE {","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"        + {static} filterByInstrumentType(String[]): AddInstrumentCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"    Class AddXYZParser COLOR_CONSOLE {","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"        + getInstrumentParameters(): AddXYZCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"    Class EditInstrumentParser COLOR_CONSOLE {","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"        + {static} getEditedParameters(HashSet\u003cString\u003e, Instrument)","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"        + {static} createEditCommand(HashSet\u003cString\u003e, Instrument, int): EditInstrumentCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"show InputParser members","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"show AddInstrumentParser members","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"show AddXYZParser members","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"show EditInstrumentParser members","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"Class \"{abstract}\\nCommand\" as Command COLOR_COMMANDS","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"Class AddInstrumentCommand COLOR_COMMANDS","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"Class AddXYZCommand COLOR_COMMANDS","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"Class EditInstrumentCommand COLOR_COMMANDS","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"Class IndexedCommand COLOR_COMMANDS","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"Class TextUi COLOR_UI","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"Class \"{abstract}\\nInstrument\" as Instrument COLOR_MODEL","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"theodorekwok"},"content":"main -down[COLOR_MAIN]-\u003e\"1\" InputParser","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"AddInstrumentParser -up[COLOR_CONSOLE]-|\u003e InputParser","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"AddXYZParser -up[COLOR_CONSOLE]-|\u003e AddInstrumentParser","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"InputParser -down[COLOR_CONSOLE].\u003e Command : creates \u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"AddInstrumentParser -right[COLOR_CONSOLE].\u003e AddInstrumentCommand : creates \u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"AddXYZParser -right[COLOR_CONSOLE].\u003e AddXYZCommand : creates \u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"EditInstrumentParser -right[COLOR_CONSOLE].\u003e EditInstrumentCommand : creates \u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"theodorekwok"},"content":"InputParser -down[COLOR_CONSOLE].\u003e TextUi","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"theodorekwok"},"content":"AddInstrumentParser -left[COLOR_CONSOLE].\u003e TextUi","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"theodorekwok"},"content":"AddXYZParser -left[COLOR_CONSOLE].\u003e TextUi","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"InputParser -left[COLOR_CONSOLE].\u003e Instrument","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"EditInstrumentParser -right[COLOR_CONSOLE].\u003e Instrument","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"note bottom of AddXYZParser: AddXYZParser \u003d AddCryptoParser, \\nAddEtfParser, etc","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"EditInstrumentCommand -down[COLOR_COMMANDS]-|\u003e IndexedCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"IndexedCommand -up[COLOR_COMMANDS]-|\u003e Command","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"AddXYZCommand -up[COLOR_COMMANDS]-|\u003e AddInstrumentCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"AddInstrumentCommand -up[COLOR_COMMANDS]-|\u003e Command","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"note bottom of AddXYZCommand: AddXYZCommand \u003d AddCryptoCommand, \\nAddEtfCommand, etc","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"theodorekwok"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"theodorekwok":57,"williamlamjy":1}},{"path":"docs/diagrams/DoneCryptoExecuteDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"@startuml","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"!include Styles.puml","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"group sd Mark instrument as done and displays it in the TextUi","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"box command COLOR_FAINT_GREEN","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"participant \":DoneCommand\" as DoneCommand COLOR_COMMANDS","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"box model COLOR_MODEL_SEGMENT","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"participant \":InstrumentManager\" as InstrumentManager COLOR_MODEL","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"participant \":Instrument\" as Instrument COLOR_MODEL","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"box ui COLOR_LIGHT_BLUE","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nTextUi\" as TextUi COLOR_UI","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"activate DoneCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"DoneCommand-\u003e DoneCommand: getInstrumentAtIndex()","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"activate DoneCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"DoneCommand-\u003e InstrumentManager: getInstrument(1)","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"activate InstrumentManager","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"InstrumentManager--\u003e DoneCommand: return instrumentToComplete","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"deactivate InstrumentManager","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"DoneCommand--\u003e DoneCommand: return instrumentToComplete","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"deactivate DoneCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"DoneCommand-\u003e Instrument: markAsDone()","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"activate Instrument","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"Instrument--\u003e DoneCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"deactivate Instrument","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"DoneCommand-\u003e TextUi: displayDoneInstrument(instrument)","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"activate TextUi","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"TextUi-\u003e Instrument: getGeneralParams()","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"activate Instrument","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"Instrument--\u003e TextUi","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"deactivate Instrument","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"TextUi--\u003e DoneCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"deactivate TextUi","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"end","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"@enduml","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"williamlamjy":47}},{"path":"docs/diagrams/DoneCryptoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"!include Styles.puml","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"box console COLOR_CONSOLE_SEGMENT","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"participant \":InputParser\" as InputParser COLOR_CONSOLE","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"box command COLOR_FAINT_GREEN","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"participant \":DoneCommand\" as DoneCommand COLOR_COMMANDS","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"box model COLOR_MODEL_SEGMENT","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"participant \":InstrumentManager\" as InstrumentManager COLOR_MODEL","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"participant \":Instrument\" as Instrument COLOR_MODEL","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"box ui COLOR_LIGHT_BLUE","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nTextUi\" as TextUi COLOR_UI","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"[-\u003e InputParser : filterByCommandType({\"done\", \"1\"}, instruments)","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"activate InputParser","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"InputParser -\u003eInputParser: getDoneInstrumentCommand({\"done\", \"1\"}, instruments)","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"activate InputParser","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"create DoneCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"InputParser-\u003e DoneCommand: DoneCommand()","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"activate DoneCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"DoneCommand --\u003e InputParser","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"deactivate DoneCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"InputParser-\u003e InputParser: getAndValidateIndex({\"done\", \"1\"}, instruments)","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"activate InputParser","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"InputParser--\u003e InputParser","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"InputParser-\u003e InputParser: getAndValidateDoneStatus({\"done\", \"1\"}, instruments)","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"activate InputParser","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"InputParser--\u003e InputParser","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"deactivate InputParser","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"InputParser-\u003eDoneCommand: setIndex(1)","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"activate DoneCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"DoneCommand--\u003e InputParser","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"deactivate DoneCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"InputParser --\u003eInputParser: return doneCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"deactivate InputParser","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"[\u003c--InputParser: return doneCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"deactivate InputParser","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"[-\u003eDoneCommand:execute()","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"activate DoneCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"ref over DoneCommand, InstrumentManager, Instrument, TextUi","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"Mark instrument as done and displays it in the TextUi","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"endref","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"[\u003c--DoneCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"deactivate DoneCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"williamlamjy":70}},{"path":"docs/diagrams/EditExecuteRefrence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"!include Styles.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"box model COLOR_MODEL_SEGMENT","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"participant \":Stock\" as Instrument COLOR_MODEL","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"activate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"group sd check if parameter exist in HashMap and edit","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"Instrument -\u003e Instrument: editGeneralParameter({\"name, new name\"})","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"activate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"Instrument -\u003e Instrument: editName({\"name, new name\"})","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"note left: editName checks if the key \"name\" exist in HashMap\\nand if it exist, it updates the name parameter","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"activate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"Instrument --\u003e Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"deactivate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"Instrument -\u003e Instrument: editCurrentPrice({\"name, new name\"})","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"activate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"Instrument --\u003e Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"deactivate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"Instrument -\u003e Instrument: editSentiment({\"name, new name\"})","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"activate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"Instrument --\u003e Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"deactivate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"note left: The rest of the edit methods are similar to editName.","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"Instrument -\u003e Instrument: editDoneStatus({\"name, new name\"})","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"activate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"Instrument --\u003e Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"deactivate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"Instrument --\u003e Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"deactivate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"Instrument -\u003e Instrument: editRemark({\"name, new name\"})","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"activate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"Instrument --\u003e Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"deactivate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"end","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"deactivate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"kum-wh":51}},{"path":"docs/diagrams/EditExecuteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"!include Styles.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"box command COLOR_FAINT_GREEN","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"participant \":EditInstrumentCommand\" as EditInstrumentCommand COLOR_COMMANDS","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"box model COLOR_MODEL_SEGMENT","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"participant \":InstrumentManager\" as InstrumentManager COLOR_MODEL","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"participant \":Stock\" as Instrument COLOR_MODEL","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"box ui COLOR_LIGHT_BLUE","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\n:TextUi\" as TextUi COLOR_UI","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"[-\u003eEditInstrumentCommand:execute()","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"activate EditInstrumentCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"EditInstrumentCommand -\u003e EditInstrumentCommand: getInstrumentAtIndex()","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"activate EditInstrumentCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"EditInstrumentCommand-\u003e InstrumentManager: getInstrument(1)","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"activate InstrumentManager","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"InstrumentManager--\u003e EditInstrumentCommand: return instrumentToEdit","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"deactivate InstrumentManager","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"EditInstrumentCommand--\u003e EditInstrumentCommand: return instrumentToEdit","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"deactivate EditInstrumentCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"EditInstrumentCommand -\u003e Instrument: getAllParams()","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"activate Instrument","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"Instrument --\u003e EditInstrumentCommand: return parameters before edit","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"deactivate Instrument","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"EditInstrumentCommand-\u003e InstrumentManager: editInstrument(1, {\"name\", \"new name\"})","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"activate InstrumentManager","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"InstrumentManager -\u003e Instrument: editParameter({\"name\", \"new name\"})","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"activate Instrument","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"ref over Instrument","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"check if","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"stock","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"parameters","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"exist in","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"HashMap","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"and if it","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"exists,","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"update its","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"endref","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"Instrument --\u003e InstrumentManager","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"deactivate Instrument","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"InstrumentManager --\u003e EditInstrumentCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"deactivate InstrumentManager","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"EditInstrumentCommand -\u003e Instrument: getAllParams()","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"activate Instrument","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"Instrument --\u003e EditInstrumentCommand: return parameters after edit","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"deactivate Instrument","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"EditInstrumentCommand-\u003e TextUi: displayEditBeforeAfter(parameters before edit, parameters after edit)","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"activate TextUi","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"TextUi --\u003e EditInstrumentCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"deactivate TextUi","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"[\u003c--EditInstrumentCommand: return \"edit\"","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"deactivate EditInstrumentCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"kum-wh":74}},{"path":"docs/diagrams/EditInstrumentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"!include Styles.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"box console COLOR_CONSOLE_SEGMENT","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"participant \":InputParser\" as InputParser COLOR_CONSOLE","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"participant \":EditInstrumentParser\" as EditInstrumentParser COLOR_CONSOLE","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"box command COLOR_FAINT_GREEN","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"participant \":EditInstrumentCommand\" as EditInstrumentCommand COLOR_COMMANDS","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"box model COLOR_MODEL_SEGMENT","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"participant \":Stock\" as Instrument COLOR_MODEL","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"box ui COLOR_LIGHT_BLUE","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\n:TextUi\" as TextUi COLOR_UI","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"[-\u003e InputParser : filterByCommandType({\"edit\", \"1\"},\\n instruments)","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"activate InputParser","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"InputParser -\u003e InputParser: getEditInstrumentCommand({\"edit\", \"1\"},\\n instruments)","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"activate InputParser","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"InputParser -\u003e InputParser: getAndValidateIndexNumber({\"edit\", \"1\"}, instrument)","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"activate InputParser","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"InputParser --\u003e InputParser","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"InputParser -\u003e TextUi: displayEditInstrumentFirstInstruction(Stock)","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"activate TextUi","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"TextUi --\u003e InputParser","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"deactivate TextUi","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"InputParser -\u003e Instrument: getValidAttribute()","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"activate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"Instrument --\u003e InputParser: return validAttributes","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"deactivate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"InputParser -\u003e InputParser: getParametersToEdit(validAttributes)","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"activate InputParser","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"InputParser -\u003e InputParser: filterInvalidParameters({\"name\"}, validAttributes)","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"note right: Prompt user to enter in parameters and\\ncheck if parameters entered are valid.\\nError is thrown if there is no input.\\nvalidAttributes for Stock are name,\\ncurrent price, sentiment and remarks.","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"activate InputParser","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"InputParser --\u003e InputParser: return filteredParameters","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"InputParser --\u003e InputParser: return filteredParameters","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"create EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"InputParser -\u003e EditInstrumentParser: EditInstrumentParser()","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"activate EditInstrumentParser","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser --\u003e InputParser","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"deactivate EditInstrumentParser","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"InputParser -\u003e EditInstrumentParser: createEditCommand({\"name\"}, instrument, 1);","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"activate EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"ref over EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"Get new edited parameters","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"from user and create a hashmap","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"associating the parameter type","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"and its new value","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"endref","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"create EditInstrumentCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser -\u003e EditInstrumentCommand: EditInstrumentCommand()","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"activate EditInstrumentCommand","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"EditInstrumentCommand --\u003e EditInstrumentParser","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"deactivate EditInstrumentCommand","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser -\u003e EditInstrumentCommand: setIndex(1)","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"activate EditInstrumentCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"EditInstrumentCommand --\u003e EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"deactivate EditInstrumentCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser --\u003e InputParser: return editInstrumentCommand","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"deactivate EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"InputParser --\u003e InputParser: return editInstrumentCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"[\u003c--InputParser: return editInstrumentCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"kum-wh":90}},{"path":"docs/diagrams/EditRefrence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"!include Styles.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"box console COLOR_CONSOLE_SEGMENT","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"participant \":EditInstrumentParser\" as EditInstrumentParser COLOR_CONSOLE","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"group sd Get new edited parameters from user \\nand create a hashmap associating the parameter type and its new value","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"activate EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser -\u003e EditInstrumentParser: getEditedParameters({\"name\"}, instrument)","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"activate EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser -\u003e EditInstrumentParser: editNameParameter(\"stock\", {\"name\"})","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"note left: editNameParameters check if the name is entered \\nthen prompts user to provide a new name.\\nMethod loop until a valid name is given.","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"activate EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"alt parameters to edit does not include \"name\"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"else","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"loop until valid name is entered","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser -\u003e EditInstrumentParser: getUserInput()","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"activate EditInstrumentParser","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser --\u003e EditInstrumentParser: return new name","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"deactivate EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"end","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"end","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser --\u003e EditInstrumentParser","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"deactivate EditInstrumentParser","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser -\u003e EditInstrumentParser: editXYZParameter({\"name\"})","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"note left: This represents similar methods that does the same\\nas the one above but for other parameters.\\nXYZ represents all other parameters of\\ncurrent price, sentiments past returns, entry price,\\nexit price, expiry, remarks, status.","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"activate EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"alt parameters to edit does not include parameter \"XYZ\"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"else","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"loop until valid parameter is entered","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser -\u003e EditInstrumentParser: getUserInput()","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"activate EditInstrumentParser","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser --\u003e EditInstrumentParser: return new value of parameter","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"deactivate EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"end","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"end","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser --\u003e EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"deactivate EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"EditInstrumentParser --\u003e EditInstrumentParser","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"deactivate EditInstrumentParser","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"end","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"@enduml","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"kum-wh":55}},{"path":"docs/diagrams/FileManagerDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"!include Styles.puml","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"Class main COLOR_MAIN","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"Package \"filemanager\"  \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"     Class Storage COLOR_STORAGE {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"     + loadFileData(InstrumentManager)","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"     + writeFileData(ArrayList\u003cInstrument\u003e)","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"     + updateFileData(ArrayList\u003cInstrument\u003e)","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     }","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     Class InstrumentDecoder COLOR_STORAGE {","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     + {static} readFile(InstrumentManager, List\u003cString\u003e)","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     + {static} addSavedInstrumentToList(InstrumentManager, String[])","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"     }","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"     Class InstrumentEncoder COLOR_STORAGE {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"     + {static} editFile(String, FileWriter)","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"     + {static} writeFile(ArrayList\u003cInstrument\u003e, FileWriter)","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"     }","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"     Class XYZDecoder COLOR_STORAGE {","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"     + {static} addXYZToList(String[], InstrumentManager)","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"     }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"show Storage members","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"show InstrumentDecoder members","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"show InstrumentEncoder members","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"show XYZDecoder members","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"Class TextUi COLOR_UI","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"Class \"{abstract}\\n Instrument\" as Instrument COLOR_MODEL","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"Class InstrumentManager COLOR_MODEL","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"main -down[COLOR_MAIN]-\u003e\"1\" Storage","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"Class outside COLOR_WHITE","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":" Storage -down[COLOR_STORAGE].\u003e InstrumentEncoder","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":" Storage -down[COLOR_STORAGE].\u003e InstrumentDecoder","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":" Storage -down[COLOR_STORAGE].\u003e Instrument","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":" Storage -down[COLOR_STORAGE].\u003e InstrumentManager","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":" InstrumentEncoder -down[COLOR_STORAGE].\u003e Instrument","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":" InstrumentDecoder -down[COLOR_STORAGE].\u003e InstrumentManager","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":" InstrumentDecoder -down[COLOR_STORAGE].\u003e Instrument","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":" XYZDecoder -right[COLOR_STORAGE].\u003e Instrument","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":" XYZDecoder -down[COLOR_STORAGE].\u003e InstrumentManager","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":" XYZDecoder -up[COLOR_STORAGE]-|\u003eInstrumentDecoder","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":" Storage -left[COLOR_STORAGE].\u003e TextUi","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":" InstrumentDecoder -left[COLOR_STORAGE].\u003e TextUi","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"note bottom of XYZDecoder: XYZDecoder \u003d CryptoDecoder, ForexDecoder, \\nEtfDecoder, StockDecoder","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"williamlamjy":55}},{"path":"docs/diagrams/FileManagerEncodingSequenceDiag.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"!include Styles.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"box filemanager COLOR_STORAGE_SEGMENT","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"participant \":Storage\" as Storage COLOR_STORAGE","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nInstrumentEncoder\" as InstrumentEncoder COLOR_STORAGE","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"box model COLOR_MODEL_SEGMENT","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"participant \":Instrument\" as Instrument COLOR_MODEL","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"[-\u003e Storage: updateFileData(instruments)","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"activate Storage","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"Storage-\u003e Storage: writeFileData(instruments)","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"activate Storage","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"note bottom","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"writeFileData initialises a new","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"FileWriter to write into the txt file","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"and calls the writeFile method in","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"InstrumentEncoder","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"end note","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"Storage-\u003e InstrumentEncoder: writeFile(instruments, writeToFile)","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"activate InstrumentEncoder","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"note right","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"writeToFile is of type FileWriter","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"to enable a FileWriter to write to","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"the text file","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"end note","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"loop each instrument","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    InstrumentEncoder-\u003e Instrument: textFileFormatting()","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    activate Instrument","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"    Instrument--\u003e InstrumentEncoder: return InstrumentInFileFormat","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"    deactivate Instrument","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"    note bottom","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"    InstrumentInFileFormat","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"    is of type String eg.","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"theodorekwok"},"content":"    {\"Stock;AAPL;32.0;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"theodorekwok"},"content":"    positive;false;Nil\"}","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"    end note","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"    InstrumentEncoder-\u003e InstrumentEncoder: editFile(InstrumentInFileFormat, writeToFile)","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"    activate InstrumentEncoder","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"    InstrumentEncoder--\u003e InstrumentEncoder","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"    deactivate InstrumentEncoder","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"    note right","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"    editFile writes to the text file","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"    with the formatted instrument","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"    end note","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"end","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"InstrumentEncoder--\u003e Storage","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"deactivate InstrumentEncoder","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"Storage--\u003e Storage","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"deactivate Storage","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"[\u003c-- Storage","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"deactivate Storage","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"theodorekwok":4,"williamlamjy":64}},{"path":"docs/diagrams/FileManagerRefDiagCryptoDecoder.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"@startuml","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"!include Styles.puml","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"group sd Decode crypto attributes and create and add crypto to InstrumentManager","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"box filemanager COLOR_STORAGE_SEGMENT","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nCryptoDecoder\" as CryptoDecoder COLOR_STORAGE","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"box model COLOR_MODEL_SEGMENT","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"participant \":InstrumentManager\" as InstrumentManager COLOR_MODEL","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"participant \":Crypto\" as Crypto COLOR_MODEL","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"activate CryptoDecoder","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"CryptoDecoder-\u003e CryptoDecoder: validateAndDecodeGeneralAttributes(textSegment)","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"activate CryptoDecoder","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"CryptoDecoder--\u003e CryptoDecoder","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"deactivate CryptoDecoder","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"CryptoDecoder-\u003e CryptoDecoder: validateAndDecodeSpecificAttributes(textSegment)","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"activate CryptoDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"CryptoDecoder--\u003e CryptoDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"deactivate CryptoDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"CryptoDecoder-\u003e CryptoDecoder: createDecodedInstrument()","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"activate CryptoDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"create Crypto","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"CryptoDecoder-\u003e Crypto: Crypto(\"Crypto\", \"32.0\", \"positive\",\"true\", \"2022-12-12\", \"\")","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"activate Crypto","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"Crypto--\u003e CryptoDecoder: return crypto","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"deactivate Crypto","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"CryptoDecoder--\u003e CryptoDecoder: return crypto","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"deactivate CryptoDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"CryptoDecoder-\u003e InstrumentManager: addInstrument(crypto)","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"activate InstrumentManager","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"InstrumentManager--\u003e CryptoDecoder","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"deactivate InstrumentManager","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"end","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"deactivate CryptoDecoder","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"@enduml","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"williamlamjy":50}},{"path":"docs/diagrams/FileManagerSeqBetweenStorageAndDecoder.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"@startuml","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"!include Styles.puml","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"box filemanager COLOR_STORAGE_SEGMENT","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"participant \":Storage\" as Storage COLOR_STORAGE","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nInstrumentDecoder\" as InstrumentDecoder COLOR_STORAGE","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"box ui COLOR_LIGHT_BLUE","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nTextUi\" as TextUi COLOR_UI","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"[--\u003eStorage: loadFileData(instrumentManager)","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"activate Storage","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"alt File does not exist or is not regular","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    Storage-\u003eTextUi: displayCreateFile()","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    activate TextUi","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    TextUi--\u003e Storage","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    deactivate TextUi","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    note bottom","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    if file does not exist or is not regular,","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    a new text file will be created","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"    end note","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"else","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    Storage-\u003eTextUi: displayLoadingFile()","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"    activate TextUi","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    TextUi--\u003e Storage","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"    deactivate TextUi","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    Storage-\u003e InstrumentDecoder: readFile(instrumentManager, fileData)","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"    activate InstrumentDecoder","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"    ref over InstrumentDecoder","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    Decodes the text file and","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    updates InstrumentManager","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"    end ref","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"    InstrumentDecoder--\u003e Storage","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"    deactivate InstrumentDecoder","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    end","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"[\u003c--Storage","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"deactivate Storage","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"@enduml","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"williamlamjy":48}},{"path":"docs/diagrams/FileManagerSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"!include Styles.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"group sd Decodes the text file and updates InstrumentManager","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"box filemanager COLOR_STORAGE_SEGMENT","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nInstrumentDecoder\" as InstrumentDecoder COLOR_STORAGE","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nCryptoDecoder\" as CryptoDecoder COLOR_STORAGE","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"box model COLOR_MODEL_SEGMENT","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"participant \":InstrumentManager\" as InstrumentManager COLOR_MODEL","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"participant \":Crypto\" as Crypto COLOR_MODEL","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"box error COLOR_ERROR_SEGMENT","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"participant \":InvalidInstrumentInFileError\" as InvalidInstrumentInFileError COLOR_ERROR","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"activate InstrumentDecoder","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    loop each line in the file","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"        InstrumentDecoder-\u003e InstrumentDecoder: addSavedInstrumentToList(instrumentManager, textSegment)","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"        activate InstrumentDecoder","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"        note right","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"        The parameter textSegment is","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"        the array of Crypto parameters:","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"        {\"Crypto\", \"32.0\", \"positive\", \"2022-01-12\", \"\"}","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"        end note","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"            alt Instrument type is Crypto/Etf/Stock/Forex","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"                InstrumentDecoder-\u003e CryptoDecoder: addCryptoToList(textSegment, instrumentManager)","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"                activate CryptoDecoder","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"                ref over CryptoDecoder, InstrumentManager, Crypto","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"                Decode crypto attributes and create and add crypto to InstrumentManager","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"                endref","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"                note bottom","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"                Displaying only the outcome of adding","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"                a pre-existing Crypto to list. This if","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"                statement is supposed to be a switch statement","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"                amongst the 4 different instruments","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"                end note","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"                CryptoDecoder--\u003e InstrumentDecoder","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"                deactivate CryptoDecoder","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"            else","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"                create InvalidInstrumentInFileError","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"                InstrumentDecoder-\u003e InvalidInstrumentInFileError: throw new InvalidInstrumentInFileError()","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"                activate InvalidInstrumentInFileError","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"                InvalidInstrumentInFileError--\u003e InstrumentDecoder","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"                deactivate InvalidInstrumentInFileError","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"                end","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"                InstrumentDecoder--\u003e InstrumentDecoder","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"                deactivate InstrumentDecoder","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"                end","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"                end","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"                deactivate InstrumentDecoder","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"williamlamjy":70}},{"path":"docs/diagrams/ModelDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"!include Styles.puml","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"Package \"Model                    \"  \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"     Class \"{abstract}\\nInstrument\" as Instrument COLOR_MODEL","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"     Class InstrumentManager COLOR_MODEL {","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"        + addInstrument(Instrument)","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"        + findInstruments(String)","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"        + deleteInstrument(int)","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"        + editInstrument(int, HashMap\u003cString, String\u003e)","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"     }","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     Class Crypto COLOR_MODEL","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     Class Stock COLOR_MODEL","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     Class Etf COLOR_MODEL","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     Class Forex COLOR_MODEL","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"show InstrumentManager members","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"Class main COLOR_MAIN","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"main -down[COLOR_MODEL]-\u003e\"1\" InstrumentManager","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"Crypto -up[COLOR_MODEL]-|\u003eInstrument","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"Stock -up[COLOR_MODEL]-|\u003eInstrument","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"Etf -up[COLOR_MODEL]-|\u003eInstrument","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"Forex -up[COLOR_MODEL]-|\u003eInstrument","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"InstrumentManager -down[COLOR_MODEL]-\u003e \"              *\" Instrument","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"theodorekwok":14,"williamlamjy":14}},{"path":"docs/diagrams/Styles.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"!include Colors.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_UI COLOR_DARK_BLUE","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_MAIN COLOR_BLACK","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_COMMANDS COLOR_DARK_GREEN","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_COMMANDS_SEGMENT COLOR_FAINT_GREEN","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_CONSOLE COLOR_TEAL","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_CONSOLE_SEGMENT COLOR_FAINT_TEAL","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_MODEL COLOR_PURPLE","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_MODEL_SEGMENT COLOR_LIGHT_PURPLE","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_STORAGE COLOR_BROWN","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_STORAGE_SEGMENT COLOR_LIGHT_BROWN","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_ERROR COLOR_ORANGE","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"!define COLOR_ERROR_SEGMENT COLOR_FAINT_ORANGE","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"!define COLOR_COMMONS COLOR_GREY","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"!define COLOR_USER COLOR_RED","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"!define ABSTRACT \u0026#123;abstract\u0026#125;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"skinparam Class {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"    BorderThickness 1","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"    FontName Arial","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"skinparam Participant {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":"hide members","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"hide footbox","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"hide circle","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"theodorekwok":16,"williamlamjy":18,"KVignesh122":2}},{"path":"docs/diagrams/TextUiDisplayInstrumentAllParams.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"@startuml","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"!include Styles.puml","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"box ui COLOR_LIGHT_BLUE","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nTextUi\" as TextUi COLOR_UI","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"end box","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"box model COLOR_MODEL_SEGMENT","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"participant \":Instrument\" as Instrument COLOR_MODEL","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"end box","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"[-\u003e TextUi : displaySpecificInstrumentView(instrument)","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"activate TextUi","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"TextUi -\u003e Instrument : getAllParams()","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"activate Instrument","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"note left","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"displaySpecificInstrumentView()","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"invoked from ViewCommand.execute()","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"end note","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"Instrument --\u003e TextUi","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"deactivate Instrument","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"TextUi --\u003e[ : printout instrument\u0027s parameters","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"deactivate TextUi","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"note left","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"The getAllParams() method","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"returns all the stored information","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"on the instrument back as String.","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"end note","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"@enduml","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"KVignesh122":37}},{"path":"docs/diagrams/TextUiDisplayInstrumentGeneralParams.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"@startuml","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"!include Styles.puml","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"box ui COLOR_LIGHT_BLUE","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nTextUi\" as TextUi COLOR_UI","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"end box","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"box model COLOR_MODEL_SEGMENT","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"participant \":Instrument\" as Instrument COLOR_MODEL","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"end box","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"[-\u003e TextUi : displayAllInstruments(instruments)","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"activate TextUi","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"TextUi -\u003e TextUi : displayInstruments()","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"activate TextUi","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"    loop each instrument","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"        TextUi -\u003e TextUi : constructLineInList(idx, instrument)","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"        activate TextUi","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"        TextUi -\u003e Instrument : getGeneralParams()","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"        activate Instrument","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"        Instrument --\u003e TextUi","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"        deactivate Instrument","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"        TextUi --\u003e TextUi : printout instrument\u0027s \\ngeneral parameters","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"        note bottom","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"        The getGeneralParams() method","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"        returns the instrument\u0027s name, current price,","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"        and sentiment as String.","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"        end note","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"        deactivate TextUi","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"end","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"TextUi --\u003e TextUi : All instruments\u0027 general \\nparams printed out","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"deactivate TextUi","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"@enduml","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"KVignesh122":44}},{"path":"docs/team/kum-wh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"# Kum Wing Ho - Project Portfolio Page","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"## Overview","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"I was involved in the development of a greenfield project known as `mTracker`. The `mTracker` program","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"serves as a command-line trading journal interface that allows busy individuals to store important financial instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"Throughout the project development, my main responsibilities include:","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"* Implementing and handling bugs relenting to `Etf` instrument and adding it.","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"* Implementing and handling bugs relenting to `Edit` features.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"Below are some of my contributions to the project","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"* **Code contributed:**","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    * The code I contributed can be found in the reposense link [here](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dT12-1\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003dfunctional-code~other~test-code~docs\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dkum-wh\u0026tabRepo\u003dAY2122S1-CS2113T-T12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003dfunctional-code~test-code~docs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"**Enhancements**:","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"* **New Feature:** Provided the add `etf` into watchlist functionality.","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"* implemented the `add etf` functionality to allow users to","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"  store crypto information into `mTracker`.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"* Justification: This feature is one of the core features given that `crypto` is a widely known instrument type in","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"  the financial markets and is something our user would require support for.","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"* **New Feature:** Provided the `edit` functionality.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"* The `edit` functionality allows the user to edit a current instrument parameters","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"* Justification: This is a core feature that allow users to edit current instruments they added. This allows for updates of parameters on the instruments.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    * Highlights: The `edit` functionality is required to interact with all instrument type and require requesting of inputs from user.","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"kum-wh":25}},{"path":"docs/team/kvignesh122.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"# Vignesh\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"## Project Overview: mTracker","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"mTracker is a **CLI-based trading journal** that allows","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"user to store and view important trading-related information on their","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"shortlisted financial instruments. The program allows users to store","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"information on 4 types of instruments: Stock, ETF, Forex, Cryptocurrency. ","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"mTracker is written in Java 11 and contains over 5000 LoC.","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"### My key contributions to the project:","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"- Tested out various real-time market data API provider for initial idea of ","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"  implementing real-time capabailities in program. Coded and tried out a HTTP client","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"  server in Java. Idea was later discarded by team for various reasons.","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"- Project was mainly divided among group members based on instrument types.","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"I was in charge of implementing all forex-related command and parser classes, and their testing.","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"- Implemented the find feature, which allows users to search for ","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"instruments saved in the watchlist using their input search term.","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"- Was instrumental in beautifying the program\u0027s UI. Coded the ACSII patterns","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"for bye, and mTracker logo at startup.","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"- Made sure that error messages were consistent in formatting with fullstops ","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"and commas. Also made sure grammar is correct for the error messages and the UG due to ","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"  my strength in language.","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"- Coded the main run method in MTracker class and also the bye command for exiting","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"program.","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"- Abstracted out IndexedCommand class to handle index input by user, and","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"managing it alongside view, delete, done, and edit command classes.","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"- Abstracted out AddInstrumentParserTest class for all other instruments\u0027 addition parser test classes","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"to depend on.","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"  ","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"### Code contributed","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"[Vignesh\u0027s tP Code Dashboard](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dvignesh\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dKVignesh122\u0026tabRepo\u003dAY2122S1-CS2113T-T12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"### Enhancements","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"- Improved user-friendliness and aesthetics of program by","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"  making list command to display only the 3 main parameters for all instruments.","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"  Implemented a separate View feature instead for user to take deeper look into any one of the stored financial instruments.","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"- Implemented abort feature in Add and Edit operations for user to exit","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"the process of adding/editing an instrument prematurely.","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"- Wrote extensive Junit tests for testing abort and addition of instrument features","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"for crypto and forex.","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"  ","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"### Documentation:","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"- Reviewed grammar and sentence structure of all UG and DG content; made edits to enhance clarity.","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"- Contributed UML class diagram for Command classes in DG: [#238](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/238)","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"- Designed TextUi sequence diagram for List and View commands in DG: [#231](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/231)","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"KVignesh122"},"content":"- Wrote more than 60% of the UG. ([#88](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/88))","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"- Wrote Architecture section in DG: [#89](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/89)","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"### Team contributions:","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"- Major PRs reviewed: [#211](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/211) ","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"KVignesh122"},"content":"  [#95](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/95)","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"  [#91](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/91)","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"KVignesh122"},"content":"  [#83](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/83)","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"- Prepared the agenda, scheduled and conducted weekly project meetings outside of tutorial/lecture time.","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"- Assisted team members with Gradle setup.","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"KVignesh122"},"content":"- Planned and maintained team\u0027s GitHub issue tracker: [#29](https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/29)","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"KVignesh122"},"content":"[#36](https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/36)","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"KVignesh122"},"content":"  [#84](https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/84)","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"KVignesh122"},"content":"  [#141](https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/141)","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"KVignesh122"},"content":"- Improved overall code quality by abstracting out repetitive codeblocks as","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"KVignesh122"},"content":"    methods, and removed redundant setters and getters. [#92](https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/92)","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"KVignesh122":64}},{"path":"docs/team/theodorekwok.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"## Theodore Kwok - Project Portfolio Page","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"### Overview","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"I was involved in the development of a greenfield project known as `mTracker`. The `mTracker` program","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"serves as a command-line trading journal interface that allows busy individuals to store important financial instruments.","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"My main responsibilities include:","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"* Being the main code reviewer, conducting code quality and implementation checks on pull requests (PR).","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"* Designing and proposing software architectures to implement core features such as adding and editing","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"the different financial instruments.","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"* Implementing different features in mTracker.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"* Contributed to project management by updating the issues on issue tracker and noting down any possible ways we can","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"improve on code quality and design.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"Below are some of my contributions to the project","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"* **Code contributed:**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"  * The code I contributed can be found in the reposense link [here](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtheodorekwok\u0026tabRepo\u003dAY2122S1-CS2113T-T12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse).","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"* **Design architecture of add and edit functionality**","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"  * Implemented the foundations for `add` functionality. Seen in PR","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"  [#18](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/18) and ","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"  [#20](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/20)","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"  * Designed the add instrument functionality. Used OOP to handle parsing the different instrument types. Eg, the `AddInstrumentParser` class provides ","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"  easy extensibility for add functionality for different types of instruments.","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"  * Proposed `edit` functionality design through this PR [#130](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130).","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"    * Came up with a design that implements edit feature with only one parser class `EditInstrumentParser` and one command ","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"    class `EditInstrumentCommand`. The helps to reduce the amount of code we needed to write and allows user to edit ","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"    multiple parameters at once. As edit functionality is done on an existing instrument, we can determine the type of instrument and the kind of parameters supported ","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"    by that type of instrument. ","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"    * The design also provides extensibility for any parameters changes made to any of the ","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"    instrument classes. This is because only the instrument class with the parameter change will need to be modified.","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"theodorekwok"},"content":"* **Enhancements**:","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":"  * **New Feature:** Provided the add `stock` into watchlist functionality.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"theodorekwok"},"content":"    * Building on the foundations of `add` functionality, I implemented the `add stock` functionality to allow users to","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"    store stock information into `mTracker`.","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"    * Justification: This feature is one of the core features given that `stock` is a widely known instrument type in the","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"    financial markets and is something our user would require support for.","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"  * **New Feature:** Provided the `delete` from watchlist functionality.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"    * The `delete` functionality allows user to remove an instrument from the watchlist.","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"    * Justification: This is another core feature as over time and user will need to remove old instruments.","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"    * Highlights: There were considerations on how to parse the command. Previously the","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"    error checking and handling was done in the `DeleteCommand` class which reduced the cohesion of the class. As input","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"theodorekwok"},"content":"    validations and error checking are done in the parser class, it made sense to shift the index checking into the parser","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"theodorekwok"},"content":"    classes.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"theodorekwok"},"content":"  * **Feature depth:** Add support for date type in the expiry attribute for the instruments.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"* **Documentation:**","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"  * **UG**","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"    * Contributed to the add stock section through PR [#72](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/72)","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"    * Updated UG after bug fixes in v2.1 through PR [#224](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/224)","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"  * **DG**","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"    * Wrote the `parser` section under Design with the design considerations for add and edit functionality.","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"    * Wrote the `add instrument feature` section under Implementation.","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"    * Wrote some of the extra sections in dg [#234](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/234).","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"    * Created 5 diagrams:","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"      * [Architecture](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/docs/images/ArchitectureDiagram.png) ","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"theodorekwok"},"content":"      [Console diagram](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/docs/images/ConsoleDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"theodorekwok"},"content":"      [Add stock diagram](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/docs/images/AddStockSequenceDiagram.png) ","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"theodorekwok"},"content":"      [Add stock reference diagram](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/docs/images/AddStockSequenceDiagramRef.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"theodorekwok"},"content":"      [Add stock execute diagram](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/docs/images/AddStockSequenceExecuteDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"theodorekwok"},"content":"* **Contributions to team-based tasks**","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"theodorekwok"},"content":"  * Set up the Github team org/repo.","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"theodorekwok"},"content":"  * Contributed to some code refactorings:","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"theodorekwok"},"content":"    * Standardising the error handling and creating custom exception from ","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"theodorekwok"},"content":"    PR [#144](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/144)","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"theodorekwok"},"content":"    * Decoupling some functionality from unrelated classes. PR [#142](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/142)","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"theodorekwok"},"content":"  * Reviewed most of the PRs to ensure that the code quality standards are met and the implementation follow the","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"theodorekwok"},"content":"  sound design principles. Example of such PRs: [#35](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/35)","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"theodorekwok"},"content":"    [#41](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/41)","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"theodorekwok"},"content":"    [#76](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76)","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"theodorekwok"},"content":"    [#98](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98)","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"theodorekwok"},"content":"  * Reviewed sequence diagram PRs to ensure that the uml conventions and styles are followed. Example PR [here](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131)","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"theodorekwok"},"content":"  * Updated the issue tracker by reporting bugs and code quality issues. Example of issues:","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"theodorekwok"},"content":"    [#26](https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/26)","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"theodorekwok"},"content":"    [#92](https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/92)","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"theodorekwok"},"content":"    [#148](https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/148)","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"theodorekwok"},"content":"  * Released v2.0 jar file link [here](https://github.com/AY2122S1-CS2113T-T12-1/tp/releases/tag/v2.0-release).","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"theodorekwok":78}},{"path":"docs/team/williamlamjy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"# William Lam - Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"## Overview","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"I was involved in the development of a greenfield project known as `mTracker`. The `mTracker` program","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"serves as a command-line trading journal interface that allows busy individuals to store important financial instrument.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"Throughout the project development, my main responsibilities include:","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"* Providing assisting code reviews to ensure code quality and implementation is of high quality.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"* Implementing different features in mTracker.","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"* Contributed to project management by updating issues on issue tracker and noting down any possible ways we can","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"  improve on code quality and design.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"* Ensured high code quality by doing code refactoring for classes such as `Validate` and `AddXYZParserTest` and fixed","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"multiple bugs present in the code.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"Below are some of my contributions to the project","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"* **Code contributed:**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    * The code I contributed can be found in the reposense link [here](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dT12-1\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003dfunctional-code~other~test-code~docs\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dwilliamlamjy\u0026tabRepo\u003dAY2122S1-CS2113T-T12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003dfunctional-code~test-code~docs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"* **Design architecture of filemanager component**","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"  * Implemented the InstrumentEncoder, Storage and XYZDecoder classes. Seen in PR","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"    [#76](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76) and","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    [#108](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/108) and","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    [#209](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209)","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"  * Designed how the storage of data operates and split the process into encoding and decoding processes. The","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"  `InstrumentDecoder` is further abstracted into `XYZDecoder` classes which improves extensibility to allow greater code","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"  re-usability for developers to include more instruments in the future. This further improves code cohesion and more ","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"  focus can be placed to abstracting each instrument type.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"* **Design architecture of model component**","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"  * Implemented the foundations of the `Instrument`, `InstrumentManager` and `subinstrument` classes. Seen in PR","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"    [#19](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/19)","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    * Designed the basic structure of how the instruments are stored and edited through the `InstrumentManager` such","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"    that other developers could easily further enhance the respective sub-instruments with their specific attributes and","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"    methods.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"* **Enhancements**:","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    * **New Feature:** Provided the add `crypto` into watchlist functionality.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    * implemented the `add crypto` functionality to allow users to","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"      store crypto information into `mTracker`.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"    * Justification: This feature is one of the core features given that `crypto` is a widely known instrument type in ","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"  the financial markets and is something our user would require support for.","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"    * **New Feature:** Provided the `done` from watchlist functionality.","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"    * The `done` functionality allows the user to mark an instrument as completed in their watchlist.","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    * Justification: This is another core feature to allow users to keep track of the many instruments they have by","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"  marking it as done if they for example sold the instrument. This allows for easier updates on instruments.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"    * Highlights: The `done` functionality differs from other functionalities as it requires encoding and decoding","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"  features with the `filemanager` component to store the instrument\u0027s status. Thus, extra considerations were taken in","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"  implementation of the done feature such that it could be stored as an attribute in pre-existing instruments.","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"* **Documentation:**","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"  * **UG**","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"    * Contributed to the add crypto section and summary page through PR [#73](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/73)","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"    * Contributed to the contents page with hyperlinks through PR [#143](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/143)","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"  * **DG**","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"    * Wrote the `filemanager` component.","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"    * Wrote the `model` component.","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"    * Wrote implementation for `Storing current data` and `Loading pre-existing data` to show the implementation of","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"    encoding and decoding processes.","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"    * Assisted in the implementation of the `done` command by drawing the sequential diagram.","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"    * Created 8 diagrams:","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"      * Model Diagram [here](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/docs/images/ModelDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"      * FileManager Diagram [here](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/docs/images/FileManagerDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"      * Instrument Encoder Diagram [here](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/docs/images/FileManagerEncodingSequenceDiag.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"      * Instrument Decoder Diagram [here](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/docs/images/FileManagerSeqBetweenStorageAndDecoder.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"      * Instrument Decoder ref diagram [here](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/docs/images/FileManagerSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"      * Crypto Decoder ref diagram [here](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/docs/images/FileManagerRefDiagCryptoDecoder.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"      * Done Command Diagram [here](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/docs/images/DoneCryptoSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"      * Done Command ref diagram [here](https://github.com/AY2122S1-CS2113T-T12-1/tp/blob/master/docs/images/DoneCryptoExecuteDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"    * Provided user stories through PR [#152](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/152)","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"  * **Contributions to team-based tasks**","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"    * Contributed to some code refactorings:","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"      * Refactoring validation methods into `Validate` in the `commons` package from","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"      PR [#122](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/122)","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"      * Standardising junit parser tests into the same format from","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"      PR [#121](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/121)","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"    * Contributed to some bug fixes:","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"      * Fixing non-positive current price inputs from ","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"      PR [#198](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/198)","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"      * Enabling multiple invalid instrument type inputs when adding an instrument from","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"      PR [#198](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/198)","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"      * Enabling upper-casing for command inputs from","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"      PR [#204](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/204)","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"      * Handling file separator issues in input by using a special char from PR (shared contribution)","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"      [#199](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/199)","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"    * Reviewed some PRs to ensure that the code quality standards are met and the implementation follow the","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"      sound design principles. Example of such PRs: [#144](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/144)","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"    [#20](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/20)","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"    [#79](https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/79)","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"williamlamjy"},"content":"    * Managed issues in the issue tracker by addressing issues with comments and assigning issues to the corresponding","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"williamlamjy"},"content":"    developer. Examples: [#191](https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/191)","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"williamlamjy"},"content":"    [#186](https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/186)","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"williamlamjy"},"content":"    [#182](https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/182)","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"williamlamjy"},"content":"    [#179](https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/179)","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"williamlamjy":93}},{"path":"src/main/java/seedu/mtracker/LogHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":" * A class responsible for handling the error logging and the messages to log.","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"public class LogHelper {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    public static final String LOG_FILE_NAME \u003d \"logger.log\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"    public static final String LOG_FILE_ERROR \u003d \"Log file not working!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"    public static final String LOG_INVALID_NAME \u003d \"User tried to enter an invalid name here\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"    public static final String LOG_INVALID_PRICE \u003d \"User tried to enter an invalid price here\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"    public static final String LOG_INVALID_SENTIMENT \u003d \"User tried to enter an invalid sentiment here\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"    public static final String LOG_INVALID_PAST_RETURNS \u003d \"Invalid Past returns entered. Default: double -101.0\";","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"    public static final String LOG_INVALID_EXPIRY \u003d \"User gave an invalid expiry input\";","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"    public static final String LOG_INVALID_INSTRUMENT \u003d \"User tried to add an invalid instrument type here\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"    public static final String LOG_INVALID_COMMAND \u003d \"User entered an invalid command to console here\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"    public static final String LOG_DATA_FILE_LOAD_ERROR \u003d \"mtracker storage text file not loading\";","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"    public static final String LOG_DATA_FILE_WRITE_ERROR \u003d \"Writing to storage text file not loading\";","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"    public static final String LOG_DATA_FILE_INSTRUMENT_TYPE_CORRUPTED_ERROR \u003d \"Instrument type in storage text \"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"            + \"file got corrupted\";","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"    public static final String LOG_DATA_FILE_INSTRUMENT_CORRUPTED_ERROR \u003d \"Instrument in storage text file \"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"            + \"got corrupted\";","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"theodorekwok"},"content":"    private static LogHelper logHelper;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":"    private final Logger logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"    private LogHelper() {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"        logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"        setupLogger();","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"     * Checks and create an instance of logHelper if it does not exist.","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"theodorekwok"},"content":"     * @return The main instance of logHelper.","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"theodorekwok"},"content":"    public static LogHelper getInstance() {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"theodorekwok"},"content":"        if (logHelper \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"            logHelper \u003d new LogHelper();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"        return logHelper;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"    public Logger getLogger() {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"        return logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"theodorekwok"},"content":"     * Prepares the log files and set the logging level.","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"theodorekwok"},"content":"    public void setupLogger() {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"theodorekwok"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"theodorekwok"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"theodorekwok"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"theodorekwok"},"content":"            FileHandler logFile \u003d new FileHandler(LOG_FILE_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"theodorekwok"},"content":"            logFile.setLevel(Level.INFO);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"theodorekwok"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"theodorekwok"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"theodorekwok"},"content":"            logger.log(Level.SEVERE, LOG_FILE_ERROR, e);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"theodorekwok":73}},{"path":"src/main/java/seedu/mtracker/MTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.commands.Command;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.commands.ExitCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.commands.InvalidCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.console.InputParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.filemanager.Storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.InstrumentManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":" * Main class responsible for the running of the whole mTracker application.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"public class MTracker {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    private Storage storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    private InstrumentManager instrumentManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    private InputParser parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    private LogHelper logger;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"    private static final String MAIN_WORKSPACE \u003d \"main\";","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"    public MTracker() {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"            logger \u003d LogHelper.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"            instrumentManager \u003d InstrumentManager.getInstance();","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"            parser \u003d new InputParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"            storage.loadFileData(instrumentManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"            TextUi.showErrorMessage(e);","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"            System.exit(-1);","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"    // @@KVignesh122","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"     * Runs the overall logic of the program. Methods takes in user input command","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"     * and does the necessary execution, continuously until the user exits program.","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"    public void run() {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"        Command command;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"        String userInput;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"        String[] commandComponents;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"        do {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"            userInput \u003d InputParser.getUserInput(MAIN_WORKSPACE);","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"KVignesh122"},"content":"            commandComponents \u003d parser.getCommandComponents(userInput);","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"            try {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"                command \u003d parser.filterByCommandType(commandComponents, instrumentManager.getInstruments());","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"                command.setData(instrumentManager);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"                command.execute();","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"                storage.updateFileData(instrumentManager.getInstruments());","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"                logger.getLogger().log(Level.WARNING, e.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"                TextUi.showErrorMessage(e);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"                command \u003d new InvalidCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"KVignesh122"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"KVignesh122"},"content":"        } while (!(command instanceof ExitCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"KVignesh122"},"content":"     * Greets user at the start of program and runs the whole program.","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"KVignesh122"},"content":"    public void executeProgram() {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"KVignesh122"},"content":"        TextUi.greetAtStartUp();","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"KVignesh122"},"content":"        run();","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"KVignesh122"},"content":"     * Constructs a new instance of MTracker and executes the program.","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"KVignesh122"},"content":"     * This method is the main entry-point for the mTracker application.","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"KVignesh122"},"content":"        new MTracker().executeProgram();","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"theodorekwok":11,"williamlamjy":15,"KVignesh122":46,"-":6}},{"path":"src/main/java/seedu/mtracker/asserthelpers/AssertCommandHelpers.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.asserthelpers;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":" * The helper class that contains all assertions related to the command classes.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"public abstract class AssertCommandHelpers {","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"    public static final String INDEX_OUT_OF_BOUNDS \u003d \"Index is out of bounds when it should not be\";","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"     * Asserts whether that the index that is passed to the IndexedCommand class is not out of bounds.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"     * @param size The number of instruments in instrumentMananger instance.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"     * @param index The index that is parsed by InputParser and passed into IndexCommand.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    public static void assertIndexWithinBounds(int size, int index) {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c size : INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"theodorekwok":20}},{"path":"src/main/java/seedu/mtracker/asserthelpers/AssertOperationHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"package seedu.mtracker.asserthelpers;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":" * The helper class that contains all assertions related abort operation.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"public abstract class AssertOperationHelper {","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"    public static final String NOT_IN_ADD_OR_EDIT \u003d \"Program is currently neither in ADD \"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"            + \"nor EDIT workspaces.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"    public static final String NOT_IN_ADD \u003d \"Program is not in ADD workspace when it should be.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"    private static final String EDIT_PROCESS \u003d \"edit\";","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"    private static final String ADD_PROCESS \u003d \"add\";","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"     * Asserts that the current workspace user is in has to be either \u0027add\u0027 or \u0027edit\u0027.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"     * @param workspace A string representing the workspace the user is in.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"    public static void assertAddEditOperation(String workspace) {","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"        assert workspace.equals(ADD_PROCESS) || workspace.equals(EDIT_PROCESS) : NOT_IN_ADD_OR_EDIT;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"     * Asserts that current workspace has to be in \u0027add\u0027.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"     * @param workspace A string representing the workspace the user is in.","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"    public static void assertIsAddOperation(String workspace) {","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"        assert workspace.equals(ADD_PROCESS) : NOT_IN_ADD;","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"KVignesh122":31}},{"path":"src/main/java/seedu/mtracker/asserthelpers/AssertParserHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.asserthelpers;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":" * The helper class that contains all assertions related parser classes.","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"public abstract class AssertParserHelper {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"    public static final int NUM_GENERAL_PARAMETERS \u003d 3;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"    public static final String MISSING_GENERAL_PARAMETERS \u003d \"There are missing general parameters\";","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    public static final int NUM_STOCK_PARAMETERS \u003d 4;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"    public static final String MISSING_STOCK_PARAMETERS \u003d \"There are missing stock parameters\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"    public static final int NUM_CRYPTO_PARAMETERS \u003d 5;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"    public static final String MISSING_CRYPTO_PARAMETERS \u003d \"There are missing crypto parameters\";","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"    public static final int NUM_FX_PARAMETERS \u003d 7;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"    public static final String MISSING_FX_PARAMETERS \u003d \"There are missing forex parameters\";","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"    public static final int NUM_ETF_PARAMETERS \u003d 5;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"    public static final String MISSING_ETF_PARAMETERS \u003d \"There are missing Etf parameters\";","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"    public static final int MINIMUM_PRICE \u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"    public static final String NEGATIVE_PRICE \u003d \"Price recorded is negative\";","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"    public static final String EMPTY_STRING_INPUT \u003d \"Parameter is found to be empty when it should not be\";","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"    public static final String INVALID_EXPIRY \u003d \"Expiry date is set to the past when it should not be\";","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"theodorekwok"},"content":"     * Asserts that the price after parsing is not negative.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"     * @param price The price obtained after parsing the user price input.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"    public static void assertPriceNonNegative(String price) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"        assert Double.parseDouble(price) \u003e\u003d MINIMUM_PRICE : NEGATIVE_PRICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"theodorekwok"},"content":"     * Asserts that the number of general parameters that is collected after parsing is correct.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"theodorekwok"},"content":"     * @param parameters The arraylist that contains the general instrument parameters after parsing user inputs.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"    public static void assertNoMissingGeneralParameters(ArrayList\u003cString\u003e parameters) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"        assert parameters.size() \u003d\u003d NUM_GENERAL_PARAMETERS : MISSING_GENERAL_PARAMETERS;","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"     * Asserts that the number of stock parameters that is collected after parsing is correct.","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"     * @param stockParameters The arraylist that contains the stock instrument parameters after parsing user inputs.","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"    public static void assertNoMissingStockParameters(ArrayList\u003cString\u003e stockParameters) {","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"theodorekwok"},"content":"        assert stockParameters.size() \u003d\u003d NUM_STOCK_PARAMETERS : MISSING_STOCK_PARAMETERS;","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"theodorekwok"},"content":"    //@@author","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"theodorekwok"},"content":"     * Asserts that the number of crypto parameters that is collected after parsing is correct.","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"theodorekwok"},"content":"     * @param cryptoParameters The arraylist that contains the crypto instrument parameters after parsing user inputs.","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"    public static void assertNoMissingCryptoParameters(ArrayList\u003cString\u003e cryptoParameters) {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"        assert cryptoParameters.size() \u003d\u003d NUM_CRYPTO_PARAMETERS : MISSING_CRYPTO_PARAMETERS;","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"theodorekwok"},"content":"     * Asserts that the number of forex parameters that is collected after parsing is correct.","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"theodorekwok"},"content":"     * @param forexParameters The arraylist that contains the forex instrument parameters after parsing user inputs.","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"KVignesh122"},"content":"    public static void assertNoMissingForexParameters(ArrayList\u003cString\u003e forexParameters) {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"KVignesh122"},"content":"        assert forexParameters.size() \u003d\u003d NUM_FX_PARAMETERS : MISSING_FX_PARAMETERS;","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"theodorekwok"},"content":"     * Asserts that the number of etf parameters that is collected after parsing is correct.","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"theodorekwok"},"content":"     * @param etfParameters The arraylist that contains the etf instrument parameters after parsing user inputs.","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"    public static void assertNoMissingEtfParameters(ArrayList\u003cString\u003e etfParameters) {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"        assert etfParameters.size() \u003d\u003d NUM_ETF_PARAMETERS : MISSING_ETF_PARAMETERS;","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"theodorekwok"},"content":"    //@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"theodorekwok"},"content":"     * Asserts that the input parsed is not empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"theodorekwok"},"content":"     * @param param The parameter that has been parsed after user input.","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"theodorekwok"},"content":"    public static void assertInputNotEmpty(String param) {","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"theodorekwok"},"content":"        assert !param.isEmpty() : EMPTY_STRING_INPUT;","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"theodorekwok"},"content":"     * Asserts that the date parsed is in the future.","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"theodorekwok"},"content":"     * @param dateParam The date parameter that is parsed after user input.","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"theodorekwok"},"content":"    public static void assertExpiryInTheFuture(String dateParam) {","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"theodorekwok"},"content":"        LocalDate dateGiven \u003d LocalDate.parse(dateParam);","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"theodorekwok"},"content":"        assert dateGiven.isAfter(LocalDate.now()) || dateGiven.isEqual(LocalDate.now()) : INVALID_EXPIRY;","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kum-wh":4,"theodorekwok":96,"williamlamjy":4,"KVignesh122":4}},{"path":"src/main/java/seedu/mtracker/commands/AddCryptoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.subinstrument.Crypto;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":" * Responsible for adding Crypto to the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"public class AddCryptoCommand extends AddInstrumentCommand {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"    public static final String COMMAND_WORD \u003d \"crypto\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    public static final int EXPIRY_INDEX \u003d 3;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public static final int REMARK_INDEX \u003d 4;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    protected LocalDate expiryParameter;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    protected String remarkParameter;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    public void setCryptoParameters() {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"        expiryParameter \u003d LocalDate.parse(inputParameters.get(EXPIRY_INDEX));","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"        remarkParameter \u003d inputParameters.get(REMARK_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    public void createNewCrypto() {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"        newInstrument \u003d new Crypto(nameParameter, currentPriceParameter,","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"                sentimentParameter, expiryParameter, remarkParameter);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"     * Handles the execution of adding Crypto to the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"     * @return The name of the command.","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    public String execute() {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"        setAddGeneralParameters();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"        setCryptoParameters();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"        createNewCrypto();","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"        instrumentManager.addInstrument(newInstrument);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"        TextUi.displayInstrumentAdded(newInstrument);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"theodorekwok":4,"williamlamjy":42}},{"path":"src/main/java/seedu/mtracker/commands/AddEtfCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.subinstrument.Etf;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"//@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":" * Responsible for adding Etf to the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"public class AddEtfCommand extends AddInstrumentCommand {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    public static final String COMMAND_WORD \u003d \"etf\";","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    public static final int PAST_RETURNS_INDEX \u003d 3;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    public static final int REMARK_INDEX \u003d 4;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    protected double pastReturnParameter;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    protected String remarkParameter;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    public void setEtfParameters() {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"        remarkParameter \u003d inputParameters.get(REMARK_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"        pastReturnParameter \u003d Double.parseDouble(inputParameters.get(PAST_RETURNS_INDEX));","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    public void createNewEtf() {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"        newInstrument \u003d new Etf(nameParameter, currentPriceParameter,","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"                sentimentParameter, pastReturnParameter, remarkParameter);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"     * Handles the execution of adding Etf to the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"     * @return The name of the command.","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"    public String execute() {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"        setAddGeneralParameters();","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"        setEtfParameters();","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"        createNewEtf();","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"        instrumentManager.addInstrument(newInstrument);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"        TextUi.displayInstrumentAdded(newInstrument);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kum-wh":41,"theodorekwok":2,"williamlamjy":1}},{"path":"src/main/java/seedu/mtracker/commands/AddForexCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.subinstrument.Forex;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":" * Responsible for adding Forex to the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"public class AddForexCommand extends AddInstrumentCommand {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    public static final String COMMAND_WORD \u003d \"forex\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"    public static final int ENTRY_INDEX \u003d 3;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"    public static final int EXIT_INDEX \u003d 4;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"    public static final int EXPIRY_INDEX \u003d 5;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"    public static final int REMARK_INDEX \u003d 6;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"    protected double entryPriceParameter;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"    protected double exitPriceParameter;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"    protected LocalDate expiryParameter;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"    protected String remarkParameter;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"    public void setForexParameters() {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"        entryPriceParameter \u003d Double.parseDouble(inputParameters.get(ENTRY_INDEX));","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"        exitPriceParameter \u003d Double.parseDouble(inputParameters.get(EXIT_INDEX));","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"        expiryParameter \u003d LocalDate.parse(inputParameters.get(EXPIRY_INDEX));","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"        remarkParameter \u003d inputParameters.get(REMARK_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"    public void createNewFxPair() {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"        newInstrument \u003d new Forex(","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"                nameParameter,","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"                currentPriceParameter,","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"                sentimentParameter,","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"                entryPriceParameter,","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"                exitPriceParameter,","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"                expiryParameter,","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"                remarkParameter","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"     * Handles the execution of adding Forex to the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"     * @return The name of the command.","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"    public String execute() {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"KVignesh122"},"content":"        setAddGeneralParameters();","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"        setForexParameters();","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"        createNewFxPair();","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"KVignesh122"},"content":"        instrumentManager.addInstrument(newInstrument);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"        TextUi.displayInstrumentAdded(newInstrument);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"KVignesh122"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"theodorekwok":5,"williamlamjy":1,"KVignesh122":52}},{"path":"src/main/java/seedu/mtracker/commands/AddInstrumentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":" * Responsible for all commands adding different types of instruments into the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"public class AddInstrumentCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"    public static final int NAME_INDEX \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"    public static final int CURRENT_PRICE_INDEX \u003d 1;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    public static final int SENTIMENT_INDEX \u003d 2;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"    protected String nameParameter;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    protected Double currentPriceParameter;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"    protected String sentimentParameter;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"    protected Instrument newInstrument;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"    public void setAddGeneralParameters() {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"        nameParameter \u003d inputParameters.get(NAME_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"        currentPriceParameter \u003d Double.parseDouble(inputParameters.get(CURRENT_PRICE_INDEX));","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"        sentimentParameter \u003d inputParameters.get(SENTIMENT_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"    public String execute() {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"theodorekwok":30,"williamlamjy":1}},{"path":"src/main/java/seedu/mtracker/commands/AddStockCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.subinstrument.Stock;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":" * Responsible for adding Stock to the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"public class AddStockCommand extends AddInstrumentCommand {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"    public static final String COMMAND_WORD \u003d \"stock\";","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"    public static final int REMARK_INDEX \u003d 3;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    protected String remarkParameter;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    public void setStockParameters() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"        remarkParameter \u003d inputParameters.get(REMARK_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"    public void createNewStock() {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"        newInstrument \u003d new Stock(nameParameter, currentPriceParameter, sentimentParameter, remarkParameter);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"     * Handles the execution of adding Stock to the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"     * @return The name of the command.","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"    public String execute() {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"        setAddGeneralParameters();","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"theodorekwok"},"content":"        setStockParameters();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":"        createNewStock();","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"theodorekwok"},"content":"        instrumentManager.addInstrument(newInstrument);","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"        TextUi.displayInstrumentAdded(newInstrument);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"theodorekwok":38,"williamlamjy":1}},{"path":"src/main/java/seedu/mtracker/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.InstrumentManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":" * Responsible for all different type of user commands.","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"    protected InstrumentManager instrumentManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"    protected ArrayList\u003cString\u003e inputParameters;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    public void setData(InstrumentManager instrumentManager) {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"        this.instrumentManager \u003d instrumentManager;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    public void setParams(ArrayList\u003cString\u003e parameters) {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"        inputParameters \u003d parameters;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    public abstract String execute();","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"theodorekwok":4,"williamlamjy":21}},{"path":"src/main/java/seedu/mtracker/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":" * Responsible for the command that delete an instrument from the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"public class DeleteCommand extends IndexedCommand {","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    public DeleteCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"        index \u003d UNINITIALISED_INDEX;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"     * Handles the execution of deleting an instrument from the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"     * @return The name of the command.","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"    public String execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"        Instrument instrumentToDelete \u003d getInstrumentAtIndex();","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"        instrumentManager.deleteInstrument(index);","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"        TextUi.displayInstrumentDeleted(instrumentToDelete);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"theodorekwok":30}},{"path":"src/main/java/seedu/mtracker/commands/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" * Responsible for the command that marks an instrument as done.","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"public class DoneCommand extends IndexedCommand {","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"    public DoneCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"        index \u003d UNINITIALISED_INDEX;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"     * Handles the execution of marking an instrument as done.","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"     * @return The name of the command.","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    public String execute() {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"        Instrument instrumentToComplete \u003d getInstrumentAtIndex();","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"        instrumentToComplete.markAsDone();","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"        TextUi.displayDoneInstrument(instrumentToComplete);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"williamlamjy":30}},{"path":"src/main/java/seedu/mtracker/commands/EditInstrumentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"//@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":" * Handles changing the parameters to the new values.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"public class EditInstrumentCommand extends IndexedCommand {","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    protected HashMap\u003cString, String\u003e editedParameters;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    public EditInstrumentCommand(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"        index \u003d UNINITIALISED_INDEX;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"        this.editedParameters \u003d editedParameters;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"     * Handles the execution of the command, which is to change parameters to new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"     * @return name of the command.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    public String execute() {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"        Instrument instrumentToEdit \u003d getInstrumentAtIndex();","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"        String instrumentBefore \u003d instrumentToEdit.getAllParams();","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"        instrumentManager.editInstrument(index, editedParameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"        String instrumentAfter \u003d instrumentToEdit.getAllParams();","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"        TextUi.displayEditBeforeAfter(instrumentBefore, instrumentAfter);","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kum-wh":35}},{"path":"src/main/java/seedu/mtracker/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":" * Responsible for the command that terminiates the program.","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"     * Handles the execution of terminating the program.","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"     * @return The name of the command.","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"    public String execute() {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"        TextUi.displayExitMessage();","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"theodorekwok":2,"KVignesh122":21}},{"path":"src/main/java/seedu/mtracker/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":" * Responsible for the command that find instruments containing a specific keyword in the name parameter.","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    public static final String EMPTY_STR \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"    private String searchString;","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"    public FindCommand() {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"        searchString \u003d EMPTY_STR;","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"    public void setSearchString(String searchString) {","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"        this.searchString \u003d searchString;","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"     * Handles the execution of the finding of instruments.","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"     * @return The name of the command.","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"    public String execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"        ArrayList\u003cInstrument\u003e filteredInstruments \u003d instrumentManager.findInstruments(searchString);","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"        TextUi.displayInstrumentsFound(filteredInstruments, searchString);","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"KVignesh122":36}},{"path":"src/main/java/seedu/mtracker/commands/IndexedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.asserthelpers.AssertCommandHelpers;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":" * Responsible for all commands that requires an index being input along with the command.","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"public abstract class IndexedCommand extends Command {","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"    public static final int UNINITIALISED_INDEX \u003d -1;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"    protected int index;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    public void setIndex(int idx) {","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"        index \u003d idx;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"    public int getIndex() {","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"        return index;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"     * Gets a specific instrument via its index.","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"     * @return The instrument at a specific index.","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"    public Instrument getInstrumentAtIndex() {","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"        AssertCommandHelpers.assertIndexWithinBounds(instrumentManager.getSize(), index);","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"        return instrumentManager.getInstrument(index);","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"KVignesh122":31}},{"path":"src/main/java/seedu/mtracker/commands/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":" * Represents the command being created when an invalid input is entered.","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"    public static final String COMMAND_WORD \u003d \"invalid\";","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"    public String execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"KVignesh122":15}},{"path":"src/main/java/seedu/mtracker/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"//@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":" * Responsible for the command that shows all instruments in the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"     * Handles the execution of listing all the instruments in the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     * @return The name of the command.","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"    public String execute() {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"        ArrayList\u003cInstrument\u003e instruments \u003d instrumentManager.getInstruments();","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"        TextUi.displayAllInstruments(instruments);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kum-wh":24,"theodorekwok":2,"williamlamjy":1}},{"path":"src/main/java/seedu/mtracker/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"package seedu.mtracker.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":" * Responsible for the command that allow the user to view all the parameters of a specific instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"public class ViewCommand extends IndexedCommand {","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    public ViewCommand() {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"        index \u003d UNINITIALISED_INDEX;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"     * Handles the execution of displaying all the parameters of a specific instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"     * @return The name of the command.","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"    public String execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"        Instrument instrumentToView \u003d getInstrumentAtIndex();","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"        TextUi.displaySpecificInstrumentView(instrumentToView);","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"KVignesh122":28}},{"path":"src/main/java/seedu/mtracker/commons/Validate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.commons;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.LogHelper;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commands.AddCryptoCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commands.AddEtfCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commands.AddForexCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commands.AddStockCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.AlreadyDoneError;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidBoundsError;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidDateFormatError;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidEmptyExpiryDateError;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidEmptyPriceError;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidEmptySentimentError;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidEmptyStatusError;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidInstrumentError;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidNameError;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidNegativePriceError;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidPastDateError;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commons.error.InvalidPastReturnsError;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commons.error.InvalidPastReturnsTypeError;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidPriceError;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidSentimentError;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidStatusError;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.console.AddForexParser;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":" * Validates parameters of instruments to ensure they are of the right format.","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"public class Validate {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    public static final double MINIMUM_PRICE \u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"    public static final double MINIMUM_RETURN \u003d -100;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"    public static final String POSITIVE_SENTIMENT \u003d \"positive\";","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"    public static final String NEUTRAL_SENTIMENT \u003d \"neutral\";","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"    public static final String NEGATIVE_SENTIMENT \u003d \"negative\";","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"    public static final String DONE_INDICATOR \u003d \"done\";","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"    public static final String NOT_DONE_INDICATOR \u003d \"undone\";","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"theodorekwok"},"content":"    public static final String STATUS_DONE \u003d \"true\";","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"    public static final String STATUS_NOT_DONE \u003d \"false\";","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"    protected static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"    //@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"    private static final String FOREX_VALID_NAME_REGEX \u003d \"^[a-zA-Z]{3}/?[a-zA-Z]{3}$\";","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"KVignesh122"},"content":"     * Checks if the instrument\u0027s name is empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"     * If the instrument is of type forex, it checks that the name is 6 letters.","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"KVignesh122"},"content":"     * @param name Instrument\u0027s name","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"KVignesh122"},"content":"     * @param instrumentType Instrument\u0027s type","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"KVignesh122"},"content":"     * @return True if name is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"KVignesh122"},"content":"    public static boolean isInvalidNameCondition(String name, String instrumentType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"KVignesh122"},"content":"        if (instrumentType.equals(AddForexParser.INSTRUMENT_TYPE)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"KVignesh122"},"content":"            return (!name.matches(FOREX_VALID_NAME_REGEX));","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"KVignesh122"},"content":"        return name.isEmpty();","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"KVignesh122"},"content":"     * Checks if the instrument name is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"KVignesh122"},"content":"     * @param name Instrument\u0027s name","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"KVignesh122"},"content":"     * @param instrumentType Instrument\u0027s type","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"KVignesh122"},"content":"     * @throws InvalidNameError When name is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"KVignesh122"},"content":"    public static void checkName(String name, String instrumentType) throws InvalidNameError {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"KVignesh122"},"content":"        if (isInvalidNameCondition(name, instrumentType)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"KVignesh122"},"content":"            throw new InvalidNameError(instrumentType);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"    //@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"     * Checks if instrument type is one of the 4 valid types.","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"     * @param instrument Instrument that is being validated.","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"     * @return True if instrument is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"williamlamjy"},"content":"    public static boolean isInvalidInstrument(String instrument) {","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"williamlamjy"},"content":"        switch (instrument) {","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"williamlamjy"},"content":"        case AddStockCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"williamlamjy"},"content":"            // Fallthrough","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"williamlamjy"},"content":"        case AddCryptoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"williamlamjy"},"content":"            // Fallthrough","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"williamlamjy"},"content":"        case AddForexCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"williamlamjy"},"content":"            // Fallthrough","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"williamlamjy"},"content":"        case AddEtfCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"williamlamjy"},"content":"            return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"williamlamjy"},"content":"        default:","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"williamlamjy"},"content":"            return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"williamlamjy"},"content":"     * Checks if instrument is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"williamlamjy"},"content":"     * @param instrument Instrument that is being validated.","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidInstrumentError When instrument is of invalid type.","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"williamlamjy"},"content":"    public static void checkInstrument(String instrument) throws InvalidInstrumentError {","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"williamlamjy"},"content":"        if (isInvalidInstrument(instrument)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidInstrumentError();","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"williamlamjy"},"content":"     * Validates the instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"williamlamjy"},"content":"     * Catches and displays any errors if instrument is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":120,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"williamlamjy"},"content":"     * @param instrument Instrument that is being validated.","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"williamlamjy"},"content":"     * @return True if instrument is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":123,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":124,"author":{"gitId":"williamlamjy"},"content":"    public static boolean isValidInstrument(String instrument) {","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"williamlamjy"},"content":"            checkInstrument(instrument);","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"williamlamjy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"williamlamjy"},"content":"            logger.info(LogHelper.LOG_INVALID_INSTRUMENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"williamlamjy"},"content":"            TextUi.showErrorMessage(e);","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"williamlamjy"},"content":"            return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"williamlamjy"},"content":"        return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"williamlamjy"},"content":"     * Validates instrument name.","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"williamlamjy"},"content":"     * Catches and displays any errors if instrument is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"williamlamjy"},"content":"     * @param name Instrument\u0027s name.","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"williamlamjy"},"content":"     * @param instrumentType Instrument\u0027s type.","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"williamlamjy"},"content":"     * @return True if name is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"williamlamjy"},"content":"    public static boolean isValidName(String name, String instrumentType) {","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"williamlamjy"},"content":"            checkName(name, instrumentType);","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"williamlamjy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"williamlamjy"},"content":"            logger.info(LogHelper.LOG_INVALID_NAME);","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"williamlamjy"},"content":"            TextUi.showErrorMessage(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"williamlamjy"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"williamlamjy"},"content":"        return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"theodorekwok"},"content":"    //@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"theodorekwok"},"content":"     * Checks if price is empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"theodorekwok"},"content":"     * @param price Instrument\u0027s price.","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidEmptyPriceError When price parameter is empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":160,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":161,"author":{"gitId":"theodorekwok"},"content":"    public static void checkPriceIsEmpty(String price) throws InvalidEmptyPriceError {","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"theodorekwok"},"content":"        if (price.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidEmptyPriceError();","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"theodorekwok"},"content":"     * Checks if price is a valid numerical value.","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"theodorekwok"},"content":"     * @param price Instrument\u0027s price","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidPriceError When price is an invalid numerical.","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"theodorekwok"},"content":"    public static void checkPriceIsDouble(String price) throws InvalidPriceError {","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"theodorekwok"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"theodorekwok"},"content":"            Double.parseDouble(price);","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"theodorekwok"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidPriceError();","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":181,"author":{"gitId":"theodorekwok"},"content":"     * Checks if price is positive.","lastModifiedDate":"2021-11-06"},{"lineNumber":182,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":183,"author":{"gitId":"theodorekwok"},"content":"     * @param price Instrument\u0027s price.","lastModifiedDate":"2021-11-06"},{"lineNumber":184,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidNegativePriceError When price is negative","lastModifiedDate":"2021-11-06"},{"lineNumber":185,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":186,"author":{"gitId":"theodorekwok"},"content":"    public static void checkPriceIsNonNegative(String price) throws InvalidNegativePriceError {","lastModifiedDate":"2021-10-31"},{"lineNumber":187,"author":{"gitId":"theodorekwok"},"content":"        double inputPrice \u003d Double.parseDouble(price);","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"theodorekwok"},"content":"        if (inputPrice \u003c\u003d MINIMUM_PRICE) {","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidNegativePriceError();","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"theodorekwok"},"content":"     * Checks if price is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"theodorekwok"},"content":"     * Catches and displays any errors if price is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":197,"author":{"gitId":"theodorekwok"},"content":"     * @param price Instrument\u0027s price.","lastModifiedDate":"2021-11-06"},{"lineNumber":198,"author":{"gitId":"theodorekwok"},"content":"     * @return True if price is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":199,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":200,"author":{"gitId":"theodorekwok"},"content":"    public static boolean isValidPrice(String price) {","lastModifiedDate":"2021-11-06"},{"lineNumber":201,"author":{"gitId":"theodorekwok"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"theodorekwok"},"content":"            checkPriceIsEmpty(price);","lastModifiedDate":"2021-11-06"},{"lineNumber":203,"author":{"gitId":"theodorekwok"},"content":"            checkPriceIsDouble(price);","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"theodorekwok"},"content":"            checkPriceIsNonNegative(price);","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"theodorekwok"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"theodorekwok"},"content":"            logger.info(LogHelper.LOG_INVALID_PRICE);","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"theodorekwok"},"content":"            TextUi.showErrorMessage(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"theodorekwok"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"theodorekwok"},"content":"        return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":212,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":214,"author":{"gitId":"theodorekwok"},"content":"     * Validates instrument index.","lastModifiedDate":"2021-11-06"},{"lineNumber":215,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":216,"author":{"gitId":"theodorekwok"},"content":"     * @param instruments Instruments in current watchlist.","lastModifiedDate":"2021-11-06"},{"lineNumber":217,"author":{"gitId":"theodorekwok"},"content":"     * @param instrumentNumber Instrument index.","lastModifiedDate":"2021-11-06"},{"lineNumber":218,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidBoundsError When index is negative or greater than size of watch list.","lastModifiedDate":"2021-11-06"},{"lineNumber":219,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":220,"author":{"gitId":"theodorekwok"},"content":"    public static void validateIndexWithinBounds(ArrayList\u003cInstrument\u003e instruments, int instrumentNumber)","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"theodorekwok"},"content":"            throws InvalidBoundsError {","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"theodorekwok"},"content":"        boolean isNegative \u003d instrumentNumber \u003c 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"theodorekwok"},"content":"        boolean isGreaterThanListSize \u003d instrumentNumber \u003e\u003d instruments.size();","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"theodorekwok"},"content":"        if (isNegative || isGreaterThanListSize) {","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidBoundsError();","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"theodorekwok"},"content":"    //@@author","lastModifiedDate":"2021-11-05"},{"lineNumber":230,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":231,"author":{"gitId":"williamlamjy"},"content":"     * Checks if instrument is already done.","lastModifiedDate":"2021-11-06"},{"lineNumber":232,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":233,"author":{"gitId":"williamlamjy"},"content":"     * @param instruments Instruments in current watchlist.","lastModifiedDate":"2021-11-06"},{"lineNumber":234,"author":{"gitId":"williamlamjy"},"content":"     * @param instrumentNumber Instrument index.","lastModifiedDate":"2021-11-06"},{"lineNumber":235,"author":{"gitId":"williamlamjy"},"content":"     * @throws AlreadyDoneError When instrument is already done.","lastModifiedDate":"2021-11-06"},{"lineNumber":236,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":237,"author":{"gitId":"KVignesh122"},"content":"    public static void checkIsNotDone(ArrayList\u003cInstrument\u003e instruments, int instrumentNumber)","lastModifiedDate":"2021-10-31"},{"lineNumber":238,"author":{"gitId":"KVignesh122"},"content":"            throws AlreadyDoneError {","lastModifiedDate":"2021-10-31"},{"lineNumber":239,"author":{"gitId":"KVignesh122"},"content":"        Instrument instrument \u003d instruments.get(instrumentNumber);","lastModifiedDate":"2021-10-31"},{"lineNumber":240,"author":{"gitId":"KVignesh122"},"content":"        boolean isDoneStatus \u003d instrument.getIsDone();","lastModifiedDate":"2021-10-31"},{"lineNumber":241,"author":{"gitId":"KVignesh122"},"content":"        if (isDoneStatus) {","lastModifiedDate":"2021-10-31"},{"lineNumber":242,"author":{"gitId":"KVignesh122"},"content":"            throw new AlreadyDoneError();","lastModifiedDate":"2021-10-31"},{"lineNumber":243,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":244,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":245,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":246,"author":{"gitId":"theodorekwok"},"content":"    //@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":247,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":248,"author":{"gitId":"theodorekwok"},"content":"     * Checks if sentiment is empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":249,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":250,"author":{"gitId":"theodorekwok"},"content":"     * @param sentiment Instrument\u0027s sentiment","lastModifiedDate":"2021-11-06"},{"lineNumber":251,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidEmptySentimentError When sentiment parameter is empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":252,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":253,"author":{"gitId":"theodorekwok"},"content":"    public static void checkSentimentIsEmpty(String sentiment) throws InvalidEmptySentimentError {","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"theodorekwok"},"content":"        if (sentiment.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidEmptySentimentError();","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":260,"author":{"gitId":"theodorekwok"},"content":"     * Checks if sentiment is of one of the 3 valid types.","lastModifiedDate":"2021-11-06"},{"lineNumber":261,"author":{"gitId":"theodorekwok"},"content":"     * @param sentiment Instrument\u0027s sentiment","lastModifiedDate":"2021-11-06"},{"lineNumber":262,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidSentimentError When sentiment is of invalid type.","lastModifiedDate":"2021-11-06"},{"lineNumber":263,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"theodorekwok"},"content":"    public static void checkSentiment(String sentiment) throws InvalidSentimentError {","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"theodorekwok"},"content":"        boolean isValidPositiveSentiment \u003d sentiment.equals(POSITIVE_SENTIMENT);","lastModifiedDate":"2021-10-22"},{"lineNumber":266,"author":{"gitId":"theodorekwok"},"content":"        boolean isValidNegativeSentiment \u003d sentiment.equals(NEGATIVE_SENTIMENT);","lastModifiedDate":"2021-10-22"},{"lineNumber":267,"author":{"gitId":"theodorekwok"},"content":"        boolean isValidNeutralSentiment \u003d sentiment.equals(NEUTRAL_SENTIMENT);","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"theodorekwok"},"content":"        if (!isValidPositiveSentiment \u0026\u0026 !isValidNeutralSentiment \u0026\u0026 !isValidNegativeSentiment) {","lastModifiedDate":"2021-10-22"},{"lineNumber":269,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidSentimentError();","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":271,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":272,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"theodorekwok"},"content":"    //@@author","lastModifiedDate":"2021-11-05"},{"lineNumber":274,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":275,"author":{"gitId":"williamlamjy"},"content":"     * Checks if sentiment is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":276,"author":{"gitId":"williamlamjy"},"content":"     * Catches and displays any errors if sentiment is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":277,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":278,"author":{"gitId":"williamlamjy"},"content":"     * @param sentiment Instrument\u0027s sentiment","lastModifiedDate":"2021-11-06"},{"lineNumber":279,"author":{"gitId":"williamlamjy"},"content":"     * @return True if sentiment is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":280,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":281,"author":{"gitId":"theodorekwok"},"content":"    public static boolean isValidSentiment(String sentiment) {","lastModifiedDate":"2021-10-26"},{"lineNumber":282,"author":{"gitId":"theodorekwok"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":283,"author":{"gitId":"theodorekwok"},"content":"            checkSentimentIsEmpty(sentiment);","lastModifiedDate":"2021-10-27"},{"lineNumber":284,"author":{"gitId":"theodorekwok"},"content":"            checkSentiment(sentiment);","lastModifiedDate":"2021-10-27"},{"lineNumber":285,"author":{"gitId":"theodorekwok"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"williamlamjy"},"content":"            logger.info(LogHelper.LOG_INVALID_SENTIMENT);","lastModifiedDate":"2021-10-22"},{"lineNumber":287,"author":{"gitId":"theodorekwok"},"content":"            TextUi.showErrorMessage(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":288,"author":{"gitId":"williamlamjy"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":289,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"williamlamjy"},"content":"        return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":291,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":292,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":293,"author":{"gitId":"theodorekwok"},"content":"    //@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":294,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":295,"author":{"gitId":"theodorekwok"},"content":"     * Checks if past returns is a valid numerical.","lastModifiedDate":"2021-11-06"},{"lineNumber":296,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":297,"author":{"gitId":"theodorekwok"},"content":"     * @param pastReturn Etf\u0027s past returns.","lastModifiedDate":"2021-11-06"},{"lineNumber":298,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidPastReturnsTypeError When past returns is an invalid numerical.","lastModifiedDate":"2021-11-06"},{"lineNumber":299,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":300,"author":{"gitId":"theodorekwok"},"content":"    public static void checkPastReturnsIsDouble(String pastReturn) throws InvalidPastReturnsTypeError {","lastModifiedDate":"2021-11-06"},{"lineNumber":301,"author":{"gitId":"theodorekwok"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":302,"author":{"gitId":"theodorekwok"},"content":"            Double.parseDouble(pastReturn);","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"theodorekwok"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":304,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidPastReturnsTypeError();","lastModifiedDate":"2021-11-06"},{"lineNumber":305,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":309,"author":{"gitId":"theodorekwok"},"content":"     * Checks if past returns is less than the minimum value.","lastModifiedDate":"2021-11-06"},{"lineNumber":310,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":311,"author":{"gitId":"theodorekwok"},"content":"     * @param pastReturn Etf\u0027s past returns.","lastModifiedDate":"2021-11-06"},{"lineNumber":312,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidPastReturnsError When past returns is less than the minimum value.","lastModifiedDate":"2021-11-06"},{"lineNumber":313,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":314,"author":{"gitId":"theodorekwok"},"content":"    public static void checkPastReturnsIsValid(String pastReturn) throws InvalidPastReturnsError {","lastModifiedDate":"2021-11-06"},{"lineNumber":315,"author":{"gitId":"theodorekwok"},"content":"        double pastReturnValue \u003d Double.parseDouble(pastReturn);","lastModifiedDate":"2021-10-26"},{"lineNumber":316,"author":{"gitId":"theodorekwok"},"content":"        if (pastReturnValue \u003c MINIMUM_RETURN) {","lastModifiedDate":"2021-10-26"},{"lineNumber":317,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidPastReturnsError();","lastModifiedDate":"2021-11-06"},{"lineNumber":318,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":319,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":320,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":321,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":322,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":323,"author":{"gitId":"kum-wh"},"content":"     * Checks if past returns is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":324,"author":{"gitId":"kum-wh"},"content":"     * Catches and displays any errors if past returns is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":325,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":326,"author":{"gitId":"kum-wh"},"content":"     * @param pastReturn Etf\u0027s past returns.","lastModifiedDate":"2021-11-06"},{"lineNumber":327,"author":{"gitId":"kum-wh"},"content":"     * @return True if past returns is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":328,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":329,"author":{"gitId":"kum-wh"},"content":"    public static boolean isValidPastReturns(String pastReturn) {","lastModifiedDate":"2021-11-02"},{"lineNumber":330,"author":{"gitId":"kum-wh"},"content":"        if (pastReturn.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":331,"author":{"gitId":"kum-wh"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":333,"author":{"gitId":"kum-wh"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":334,"author":{"gitId":"kum-wh"},"content":"            checkPastReturnsIsDouble(pastReturn);","lastModifiedDate":"2021-11-06"},{"lineNumber":335,"author":{"gitId":"kum-wh"},"content":"            checkPastReturnsIsValid(pastReturn);","lastModifiedDate":"2021-11-06"},{"lineNumber":336,"author":{"gitId":"kum-wh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":337,"author":{"gitId":"kum-wh"},"content":"            logger.info(LogHelper.LOG_INVALID_PAST_RETURNS);","lastModifiedDate":"2021-10-25"},{"lineNumber":338,"author":{"gitId":"kum-wh"},"content":"            TextUi.showErrorMessage(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":339,"author":{"gitId":"kum-wh"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":340,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":341,"author":{"gitId":"kum-wh"},"content":"        return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":342,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":343,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":344,"author":{"gitId":"theodorekwok"},"content":"    //@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":345,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":346,"author":{"gitId":"theodorekwok"},"content":"     * Checks if expiry is empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":347,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":348,"author":{"gitId":"theodorekwok"},"content":"     * @param expiryInput Instrument\u0027s expiry.","lastModifiedDate":"2021-11-06"},{"lineNumber":349,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidEmptyExpiryDateError When expiry parameter is empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":350,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":351,"author":{"gitId":"theodorekwok"},"content":"    public static void checkExpiryIsEmpty(String expiryInput) throws InvalidEmptyExpiryDateError {","lastModifiedDate":"2021-11-06"},{"lineNumber":352,"author":{"gitId":"theodorekwok"},"content":"        if (expiryInput.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidEmptyExpiryDateError();","lastModifiedDate":"2021-10-27"},{"lineNumber":354,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":355,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":356,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":357,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":358,"author":{"gitId":"theodorekwok"},"content":"     * Checks if expiry is of valid date format.","lastModifiedDate":"2021-11-06"},{"lineNumber":359,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":360,"author":{"gitId":"theodorekwok"},"content":"     * @param expiryInput Instrument\u0027s expiry","lastModifiedDate":"2021-11-06"},{"lineNumber":361,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidDateFormatError When expiry is of invalid date format.","lastModifiedDate":"2021-11-06"},{"lineNumber":362,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":363,"author":{"gitId":"theodorekwok"},"content":"    public static void checkExpiryIsValidFormat(String expiryInput) throws InvalidDateFormatError {","lastModifiedDate":"2021-11-06"},{"lineNumber":364,"author":{"gitId":"theodorekwok"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":365,"author":{"gitId":"theodorekwok"},"content":"            LocalDate.parse(expiryInput);","lastModifiedDate":"2021-10-23"},{"lineNumber":366,"author":{"gitId":"theodorekwok"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":367,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidDateFormatError();","lastModifiedDate":"2021-10-23"},{"lineNumber":368,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":369,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":370,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":371,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":372,"author":{"gitId":"theodorekwok"},"content":"     * Checks if expiry is a future date.","lastModifiedDate":"2021-11-06"},{"lineNumber":373,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":374,"author":{"gitId":"theodorekwok"},"content":"     * @param expiryInput Instrument\u0027s expiry","lastModifiedDate":"2021-11-06"},{"lineNumber":375,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidPastDateError When expiry is in the past.","lastModifiedDate":"2021-11-06"},{"lineNumber":376,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":377,"author":{"gitId":"theodorekwok"},"content":"    public static void checkExpiryIsInPast(String expiryInput) throws InvalidPastDateError {","lastModifiedDate":"2021-11-06"},{"lineNumber":378,"author":{"gitId":"theodorekwok"},"content":"        LocalDate givenDate \u003d LocalDate.parse(expiryInput);","lastModifiedDate":"2021-10-23"},{"lineNumber":379,"author":{"gitId":"theodorekwok"},"content":"        if (givenDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":380,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidPastDateError();","lastModifiedDate":"2021-10-23"},{"lineNumber":381,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":382,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":383,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":384,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":385,"author":{"gitId":"theodorekwok"},"content":"     * Checks if expiry is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":386,"author":{"gitId":"theodorekwok"},"content":"     * Catches and displays any errors if expiry is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":387,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":388,"author":{"gitId":"theodorekwok"},"content":"     * @param expiryInput Instrument\u0027s expiry","lastModifiedDate":"2021-11-06"},{"lineNumber":389,"author":{"gitId":"theodorekwok"},"content":"     * @return True if expiry is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":390,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":391,"author":{"gitId":"theodorekwok"},"content":"    public static boolean isValidExpiry(String expiryInput) {","lastModifiedDate":"2021-10-23"},{"lineNumber":392,"author":{"gitId":"theodorekwok"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":393,"author":{"gitId":"theodorekwok"},"content":"            checkExpiryIsEmpty(expiryInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":394,"author":{"gitId":"theodorekwok"},"content":"            checkExpiryIsValidFormat(expiryInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":395,"author":{"gitId":"theodorekwok"},"content":"            checkExpiryIsInPast(expiryInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":396,"author":{"gitId":"theodorekwok"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":397,"author":{"gitId":"theodorekwok"},"content":"            logger.info(LogHelper.LOG_INVALID_EXPIRY);","lastModifiedDate":"2021-10-23"},{"lineNumber":398,"author":{"gitId":"theodorekwok"},"content":"            TextUi.showErrorMessage(e);","lastModifiedDate":"2021-10-23"},{"lineNumber":399,"author":{"gitId":"theodorekwok"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":400,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":401,"author":{"gitId":"theodorekwok"},"content":"        return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":402,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":403,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":404,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":405,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":406,"author":{"gitId":"kum-wh"},"content":"     * Checks if done status is empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":407,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":408,"author":{"gitId":"kum-wh"},"content":"     * @param doneStatus Instrument\u0027s done status.","lastModifiedDate":"2021-11-06"},{"lineNumber":409,"author":{"gitId":"kum-wh"},"content":"     * @throws InvalidEmptyStatusError When done parameter is empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":410,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":411,"author":{"gitId":"kum-wh"},"content":"    public static void checkStatusIsEmpty(String doneStatus) throws InvalidEmptyStatusError {","lastModifiedDate":"2021-11-04"},{"lineNumber":412,"author":{"gitId":"kum-wh"},"content":"        if (doneStatus.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":413,"author":{"gitId":"kum-wh"},"content":"            throw new InvalidEmptyStatusError();","lastModifiedDate":"2021-11-04"},{"lineNumber":414,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":415,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":416,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":417,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":418,"author":{"gitId":"kum-wh"},"content":"     * Checks if done status is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":419,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":420,"author":{"gitId":"kum-wh"},"content":"     * @param doneStatus Instrument\u0027s done status.","lastModifiedDate":"2021-11-06"},{"lineNumber":421,"author":{"gitId":"kum-wh"},"content":"     * @throws InvalidStatusError When done status is of invalid format.","lastModifiedDate":"2021-11-06"},{"lineNumber":422,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":423,"author":{"gitId":"kum-wh"},"content":"    public static void checkStatus(String doneStatus) throws InvalidStatusError {","lastModifiedDate":"2021-11-03"},{"lineNumber":424,"author":{"gitId":"kum-wh"},"content":"        boolean isValidCompletedStatus \u003d doneStatus.equals(DONE_INDICATOR);","lastModifiedDate":"2021-11-03"},{"lineNumber":425,"author":{"gitId":"kum-wh"},"content":"        boolean isValidNotCompletedStatus \u003d doneStatus.equals(NOT_DONE_INDICATOR);","lastModifiedDate":"2021-11-03"},{"lineNumber":426,"author":{"gitId":"kum-wh"},"content":"        if (!isValidCompletedStatus \u0026\u0026 !isValidNotCompletedStatus) {","lastModifiedDate":"2021-11-03"},{"lineNumber":427,"author":{"gitId":"kum-wh"},"content":"            throw new InvalidStatusError();","lastModifiedDate":"2021-11-03"},{"lineNumber":428,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":429,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":430,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":431,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":432,"author":{"gitId":"kum-wh"},"content":"     * Checks if done status is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":433,"author":{"gitId":"kum-wh"},"content":"     * Catches and displays any errors if done status is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":434,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":435,"author":{"gitId":"kum-wh"},"content":"     * @param doneStatus Instrument\u0027s done status.","lastModifiedDate":"2021-11-06"},{"lineNumber":436,"author":{"gitId":"kum-wh"},"content":"     * @return True if done status is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":437,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":438,"author":{"gitId":"kum-wh"},"content":"    public static boolean isValidInputStatus(String doneStatus) {","lastModifiedDate":"2021-11-04"},{"lineNumber":439,"author":{"gitId":"kum-wh"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":440,"author":{"gitId":"kum-wh"},"content":"            checkStatusIsEmpty(doneStatus);","lastModifiedDate":"2021-11-04"},{"lineNumber":441,"author":{"gitId":"kum-wh"},"content":"            checkStatus(doneStatus);","lastModifiedDate":"2021-11-03"},{"lineNumber":442,"author":{"gitId":"kum-wh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":443,"author":{"gitId":"kum-wh"},"content":"            TextUi.showErrorMessage(e);","lastModifiedDate":"2021-11-03"},{"lineNumber":444,"author":{"gitId":"kum-wh"},"content":"            return false;","lastModifiedDate":"2021-11-03"},{"lineNumber":445,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":446,"author":{"gitId":"kum-wh"},"content":"        return true;","lastModifiedDate":"2021-11-03"},{"lineNumber":447,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":448,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":449,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":450,"author":{"gitId":"kum-wh"},"content":"     * Checks if edit parameters is empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":451,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":452,"author":{"gitId":"kum-wh"},"content":"     * @param input User input of parameters to edit.","lastModifiedDate":"2021-11-06"},{"lineNumber":453,"author":{"gitId":"kum-wh"},"content":"     * @return True if edit parameters is not empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":454,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":455,"author":{"gitId":"kum-wh"},"content":"    public static boolean isNonEmptyEditParameters(String input) {","lastModifiedDate":"2021-11-02"},{"lineNumber":456,"author":{"gitId":"kum-wh"},"content":"        return !input.isEmpty();","lastModifiedDate":"2021-11-02"},{"lineNumber":457,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":458,"author":{"gitId":"kum-wh"},"content":"    ","lastModifiedDate":"2021-11-04"},{"lineNumber":459,"author":{"gitId":"theodorekwok"},"content":"    //@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":460,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":461,"author":{"gitId":"theodorekwok"},"content":"     * Checks if done status is of valid format in the mTracker file.","lastModifiedDate":"2021-11-06"},{"lineNumber":462,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":463,"author":{"gitId":"theodorekwok"},"content":"     * @param savedStatusFromFile Done status parameter from the file.","lastModifiedDate":"2021-11-06"},{"lineNumber":464,"author":{"gitId":"theodorekwok"},"content":"     * @return True if done status is valid.","lastModifiedDate":"2021-11-06"},{"lineNumber":465,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":466,"author":{"gitId":"theodorekwok"},"content":"    public static boolean isValidStatus(String savedStatusFromFile) {","lastModifiedDate":"2021-11-03"},{"lineNumber":467,"author":{"gitId":"theodorekwok"},"content":"        boolean isValidDoneStatus \u003d savedStatusFromFile.equals(STATUS_DONE);","lastModifiedDate":"2021-11-03"},{"lineNumber":468,"author":{"gitId":"theodorekwok"},"content":"        boolean isValidNotDoneStatus \u003d savedStatusFromFile.equals(STATUS_NOT_DONE);","lastModifiedDate":"2021-11-03"},{"lineNumber":469,"author":{"gitId":"theodorekwok"},"content":"        return isValidDoneStatus || isValidNotDoneStatus;","lastModifiedDate":"2021-11-03"},{"lineNumber":470,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":471,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"kum-wh":81,"theodorekwok":232,"williamlamjy":118,"KVignesh122":40}},{"path":"src/main/java/seedu/mtracker/commons/error/AlreadyDoneError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":" * The custom exception class that is thrown when instrument is marked done again.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"public class AlreadyDoneError extends Exception {","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"     * Returns the error message to the user stating that instrument already has a completed status.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"     * @return A string error message that states the instrument is already marked as completed.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"        return ErrorMessage.INSTRUMENT_MARKED_DONE_ERROR;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"theodorekwok":1,"KVignesh122":17}},{"path":"src/main/java/seedu/mtracker/commons/error/EditEmptyParameterError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"//@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":" *  * The custom exception class that is thrown when parameters to edit are not provided.","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"public class EditEmptyParameterError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"     * Returns the error message to the user stating that parameters to edit cannot be empty.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"     * @return A string error message that states parameters to edit must be provided.","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"        return ErrorMessage.EDIT_EMPTY_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"kum-wh":17,"theodorekwok":1}},{"path":"src/main/java/seedu/mtracker/commons/error/ErrorMessage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":" * Displays all the user facing errors.","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"public abstract class ErrorMessage {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"    public static final String INVALID_INSTRUMENT_GIVEN_ERROR \u003d \"Sorry instrument must be either \"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"            + \"stock, crypto, forex or etf.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"    public static final String INVALID_ABORT_IN_MAIN_ERROR \u003d \"Oops you can only abort if you are in add/edit workflow. \"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"            + \"Try \u0027bye\u0027 if you would like to exit the program.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"    public static final String INVALID_COMMAND_ERROR \u003d \"Oops, I do not understand you...\";","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    public static final String INVALID_FOREX_NAME_GIVEN_ERROR \u003d \"Sorry forex pair codes must contain 6 letters! \"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"            + \"\\nNo numbers allowed. (Eg: AUDUSD, EUR/GBP, xauusd, GBPjpy, usd/sgd, etc.)\";","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"    public static final String INVALID_PRICE_EMPTY_ERROR \u003d \"Sorry price cannot be empty.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"    public static final String INVALID_NEGATIVE_PRICE_ERROR \u003d \"Sorry price cannot be negative. \"","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"            + \"It must be a positive number.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"    public static final String INVALID_PRICE_INPUT_ERROR \u003d \"Sorry price must be a numeric value.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"    public static final String INVALID_SENTIMENT_EMPTY_ERROR \u003d \"Sorry sentiment cannot be empty. \"","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"            + \"It must be either positive, negative or neutral.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"    public static final String INVALID_SENTIMENT_ERROR \u003d \"Sorry sentiment must be either \"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"            + \"positive, negative or neutral.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"    public static final String INVALID_PAST_RETURN_TYPE_ERROR \u003d \"Sorry, past return must be a numeric value! \"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"            + \"Input value will be ignored.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"    public static final String INVALID_PAST_RETURN_ERROR \u003d \"Sorry, past return inserted cannot be lesser than -100.\"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"            + \" Input value will be ignored.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"    public static final String INVALID_EXPIRY_DATE_EMPTY_ERROR \u003d \"Sorry expiry date cannot be empty.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"    public static final String INVALID_PAST_DATE_GIVEN_ERROR \u003d \"Oops, expiry cannot be a date in the past.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"    public static final String INVALID_DATE_FORMAT_ERROR \u003d \"Oops, expiry given must be in YYYY-MM-DD format\";","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"    public static final String INVALID_INDEX_GIVEN_ERROR \u003d \"Oops an invalid index is given. \"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"            + \"\\nPlease provide an acceptable index number corresponding to the instruments in the watchlist.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"    public static final String INVALID_NO_INDEX_GIVEN_ERROR \u003d \"Oops no index given. \"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"            + \"\\nPlease provide an acceptable index number corresponding to the instruments in the watchlist.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"    public static final String INVALID_INSTRUMENT_NONEXISTENT_ERROR \u003d \"Oops, instrument does not exist at that index.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"    public static final String INVALID_INSTRUMENT_IN_FILE_ERROR \u003d \"Oops, it appears that the incorrect instrument \"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"            + \"type is provided in the mTracker.txt file\";","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"    public static final String INVALID_NO_SEARCH_STRING_GIVEN_ERROR \u003d \"Oops, please input a search\"","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"            + \" string after \u0027find\u0027 command.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"    public static final String INVALID_STATUS_EDIT_ERROR \u003d \"Sorry status entered is invalid. \"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"            + \"Enter either done or undone.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"    public static final String INVALID_STATUS_EDIT_EMPTY_ERROR \u003d \"Sorry status cannot be empty. \"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"            + \"Enter either done or undone.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"    public static final String INSTRUMENT_MARKED_DONE_ERROR \u003d \"Instrument at provided index \"","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"            + \"has already been marked as completed!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"    public static final String ADD_OPERATION_ABORTED \u003d \"Addition of new instrument has been aborted! \"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"            + \"You are in the main workspace now.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"    public static final String EDIT_OPERATION_ABORTED \u003d \"Edit process has been aborted! \"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"            + \"You are in the main workspace now.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"    public static final String FILE_WRITE_ERROR \u003d \"Oh no! There seems to be an error writing to the file\";","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"    public static final String FILE_LOAD_ERROR \u003d \"Oh no! There seems to be an error loading this file\";","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"    //@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"    public static final String REMARKS_FORMATTING_IN_FILE_ERROR \u003d \"Oh no! There seems to be an error in the formatting \"","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"            + \"of the remarks entry in the file\";","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"    public static final String EXPIRY_FORMATTING_IN_FILE_ERROR \u003d \"Oh no! There seems to be an error in the formatting \"","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"            + \"of the expiry entry in the file.\" + System.lineSeparator() + \"Please check that it is of YYYY-MM-DD \"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"            + \"format.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"    public static final String ENTRY_PRICE_FORMATTING_IN_FILE_ERROR \u003d \"Oh no! There seems to be an error in the \"","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"            + \"formatting of the entry price entry in the file.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"    public static final String CURR_PRICE_FORMATTING_IN_FILE_ERROR \u003d \"Oh no! There seems to be an error in the \"","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"            + \"formatting of the current price entry in the file.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"    public static final String SENTIMENT_FORMATTING_IN_FILE_ERROR \u003d \"Oh no! There seems to be an error in the \"","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"            + \"formatting of the sentiment entry in the file.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"    public static final String STATUS_FORMATTING_IN_FILE_ERROR \u003d \"Oh no! There seems to be an error in the \"","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"            + \"formatting of the status entry in the file.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"    public static final String NAME_FORMATTING_IN_FILE_ERROR \u003d \"Oh no! There seems to be an error in the formatting \"","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"            + \"of the name entry in the file.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"    public static final String EXIT_PRICE_FORMATTING_IN_FILE_ERROR \u003d \"Oh no! There seems to be an error in the \"","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"            + \"formatting of the exit price entry in the file.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"    public static final String PAST_RETURNS_FORMATTING_IN_FILE_ERROR \u003d \"Oh no! There seems to be an error in the \"","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"            + \"formatting of the past returns entry in the file.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"    public static final String EMPTY_ENTRY_PRICE_IN_FILE_ERROR \u003d \"Oh no! Looks like the entry price entry in the file\"","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"            + \" is empty.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"    public static final String EMPTY_EXIT_PRICE_IN_FILE_ERROR \u003d \"Oh no! Looks like the exit price entry in the file\"","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"            + \" is empty.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"    public static final String EMPTY_NAME_IN_FILE_ERROR \u003d \"Oh no! Looks like the name entry in the file\"","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"            + \" is empty.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"    public static final String EMPTY_SENTIMENT_IN_FILE_ERROR \u003d \"Oh no! Looks like the sentiment entry in the file\"","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"            + \" is empty.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"    public static final String EMPTY_CURR_PRICE_IN_FILE_ERROR \u003d \"Oh no! Looks like the curr price entry in the file\"","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"            + \" is empty.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"    public static final String EMPTY_STATUS_IN_FILE_ERROR \u003d \"Oh no! Looks like the status entry in the file\"","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"            + \" is empty.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"    public static final String EMPTY_EXPIRY_IN_FILE_ERROR \u003d \"Oh no! Looks like the expiry entry in the file is empty!\";","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"    public static final String EDIT_EMPTY_ERROR \u003d \"Edit parameters cannot be empty, aborting edit process.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"theodorekwok"},"content":"     * Returns an error message when name provided is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"theodorekwok"},"content":"     * @param instrumentType The type of instrument the user is providing a name for.","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that the instrument name cannot be empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"theodorekwok"},"content":"    public static String addInstrumentNameError(String instrumentType) {","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"theodorekwok"},"content":"        return \"Sorry \" + instrumentType + \" cannot have an empty name!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"theodorekwok"},"content":"     * Returns a forex error message when forex name provided is in the wrong format.","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that the forex name is not in the right format.","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"theodorekwok"},"content":"    public static String addForexNameError() {","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"theodorekwok"},"content":"        return INVALID_FOREX_NAME_GIVEN_ERROR;","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"kum-wh":2,"theodorekwok":46,"williamlamjy":40,"KVignesh122":21}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidBoundsError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":" * The custom exception class that is thrown when the index provided is out of bounds.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"public class InvalidBoundsError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"     * Returns the error message to the user stating that instrument at that index does not exist.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that states the instrument does not exist at that index.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"        return ErrorMessage.INVALID_INSTRUMENT_NONEXISTENT_ERROR;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"theodorekwok":18}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidCommandError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":" * The custom exception class that is thrown when the command provided is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"public class InvalidCommandError extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"    private static final String ABORTED \u003d \"abort\";","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"    private final String invalidCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"    public InvalidCommandError(String invalidCommand) {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"        this.invalidCommand \u003d invalidCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"     * Returns the error message to the user stating that command given is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that states the command given is not recognised.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"        if (invalidCommand.equals(ABORTED)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"            return ErrorMessage.INVALID_ABORT_IN_MAIN_ERROR;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"        return ErrorMessage.INVALID_COMMAND_ERROR;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"theodorekwok":22,"KVignesh122":6}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidDateFormatError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":" * The custom exception class that is thrown when the date provided is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"public class InvalidDateFormatError extends Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"     * Returns the error message to the user stating that date given is in the wrong format.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that states the date given is in the wrong format.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"        return ErrorMessage.INVALID_DATE_FORMAT_ERROR;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theodorekwok":18}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidEmptyExpiryDateError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":" * The custom exception class that is thrown when expiry date is not provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"public class InvalidEmptyExpiryDateError extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"     * Returns the error message to the user stating that date is not given.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"     * @return A string error message that states date must be provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"        return ErrorMessage.INVALID_EXPIRY_DATE_EMPTY_ERROR;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"theodorekwok":2,"KVignesh122":16}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidEmptyIndexError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":" * The custom exception class that is thrown when index is not provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"public class InvalidEmptyIndexError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"     * Returns the error message to the user stating that index is not given.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that states index must be provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"        return ErrorMessage.INVALID_NO_INDEX_GIVEN_ERROR;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"theodorekwok":18}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidEmptyPriceError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when price is not provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"public class InvalidEmptyPriceError extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that price is not given.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states price must be provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.INVALID_PRICE_EMPTY_ERROR;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":16}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidEmptySearchStringError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":" * The custom exception class that is thrown when search string is not provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"public class InvalidEmptySearchStringError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"     * Returns the error message to the user stating that the search string is not given.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"     * @return A string error message that states search string must be provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"        return ErrorMessage.INVALID_NO_SEARCH_STRING_GIVEN_ERROR;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"theodorekwok":1,"KVignesh122":17}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidEmptySentimentError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":" * The custom exception class that is thrown when sentiment is not provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"public class InvalidEmptySentimentError extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"     * Returns the error message to the user stating that the sentiment is not given.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that states sentiment must be provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"        return ErrorMessage.INVALID_SENTIMENT_EMPTY_ERROR;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"theodorekwok":18}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidEmptyStatusError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"//@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":" *  * The custom exception class that is thrown when an instrument status is not provided.","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"public class InvalidEmptyStatusError extends Exception {","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"     * Returns the error message to the user stating that done status of an instrument cannot be empty.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"     * @return A string error message that states done status of an instrument must be provided.","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"        return ErrorMessage.INVALID_STATUS_EDIT_EMPTY_ERROR;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"kum-wh":16,"theodorekwok":2}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidIndexError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":" * The custom exception class that is thrown when the index provided is not a number.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"public class InvalidIndexError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"     * Returns the error message to the user stating that index given is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that states the index given is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"        return ErrorMessage.INVALID_INDEX_GIVEN_ERROR;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"theodorekwok":18}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidInstrumentError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when the instrument type provided is not recognised.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"public class InvalidInstrumentError extends Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that instrument type given is not recognised.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the instrument type given is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.INVALID_INSTRUMENT_GIVEN_ERROR;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":16}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidNameError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.console.AddForexParser;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":" * The custom exception class that is thrown when the name of instrument provided is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"public class InvalidNameError extends Exception {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"    private final String instrumentType;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"     * Creates a new InvalidNameError instance.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"     * @param instrumentType The type of instrument that is throwing this error.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"    public InvalidNameError(String instrumentType) {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"        this.instrumentType \u003d instrumentType;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"     * Returns the error message to the user stating that name given is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"     * @return A string error message that states the name given is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"        if (instrumentType.equals(AddForexParser.INSTRUMENT_TYPE)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"            return ErrorMessage.addForexNameError();","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"        return ErrorMessage.addInstrumentNameError(instrumentType);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"theodorekwok":4,"KVignesh122":30}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidNegativePriceError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when price provided is a negative number.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"public class InvalidNegativePriceError extends Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that price given cannot be negative.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the price must be a positive numbers.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.INVALID_NEGATIVE_PRICE_ERROR;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"theodorekwok":1,"williamlamjy":17}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidPastDateError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":" * The custom exception class that is thrown when date provided is in the past.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"public class InvalidPastDateError extends Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"     * Returns the error message to the user stating that date given cannot be in the past.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that states the date cannot be in the past.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"        return ErrorMessage.INVALID_PAST_DATE_GIVEN_ERROR;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theodorekwok":18}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidPastReturnsError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":" * The custom exception class that is thrown when past returns given is less than -100.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"public class InvalidPastReturnsError extends Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"     * Returns the error message to the user stating that past returns given cannot be less than -100.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that states past returns cannot be less than -100.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"        return ErrorMessage.INVALID_PAST_RETURN_ERROR;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"theodorekwok":18}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidPastReturnsTypeError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":" * The custom exception class that is thrown when past returns provided is not a number.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"public class InvalidPastReturnsTypeError extends Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"     * Returns the error message to the user stating that past returns given is not a number.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that states past returns must be a numeric value.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"        return ErrorMessage.INVALID_PAST_RETURN_TYPE_ERROR;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"theodorekwok":18}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidPriceError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":" * The custom exception class that is thrown when price provided is not a number.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"public class InvalidPriceError extends Exception {","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"     * Returns the error message to the user stating that price given is not a number.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that states price must be a numeric value.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"        return ErrorMessage.INVALID_PRICE_INPUT_ERROR;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"theodorekwok":18}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidSentimentError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":" * The custom exception class that is thrown when sentiment provided is not recognised.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"public class InvalidSentimentError extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"     * Returns the error message to the user stating that sentiment given is not recognised.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that states the sentiment given is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"        return ErrorMessage.INVALID_SENTIMENT_ERROR;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"theodorekwok":18}},{"path":"src/main/java/seedu/mtracker/commons/error/InvalidStatusError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"//@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":" *  * The custom exception class that is thrown when status provided is not done or undone.","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"public class InvalidStatusError extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"     * Returns the error message to the user stating that status entered is not a valid status.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"     * @return A string error message that states done status must be either done or undone.","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"        return ErrorMessage.INVALID_STATUS_EDIT_ERROR;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"kum-wh":17,"theodorekwok":1}},{"path":"src/main/java/seedu/mtracker/commons/error/OperationAbortedError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.asserthelpers.AssertOperationHelper;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":" * The custom exception class that is thrown when user aborts an add or edit process.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"public class OperationAbortedError extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"    private static final String EDIT_PROCESS \u003d \"edit\";","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"    private final String process;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"     * Creates a new OperationAbortedError instance.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"     * @param process The type of process is underway when the user call abort.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"    public OperationAbortedError(String process) {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"        AssertOperationHelper.assertAddEditOperation(process);","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"        this.process \u003d process;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"     * Returns the error message to the user stating that process has been aborted.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"     * @return A string error message that states process is terminated.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"        if (process.equals(EDIT_PROCESS)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"            return ErrorMessage.EDIT_OPERATION_ABORTED;","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"        AssertOperationHelper.assertIsAddOperation(process);","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"        return ErrorMessage.ADD_OPERATION_ABORTED;","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"theodorekwok":1,"KVignesh122":36}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/FileLoadError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":" * The custom exception class that is thrown when there are problems with creating or loading a storage file.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"public class FileLoadError extends Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"     * Returns the error message to the user stating that storage file load has an error.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"     * @return A string error message that states the storage file has a load error.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"        return ErrorMessage.FILE_LOAD_ERROR;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"theodorekwok":19,"williamlamjy":1}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/FileWriteError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when there are problems with writing to the storage file.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class FileWriteError extends Exception {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that writing to the storage file has an error.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the storage file has a write error.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.FILE_WRITE_ERROR;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"theodorekwok":3,"williamlamjy":17}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidCurrPriceSavedInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file instrument current price is saved in the wrong format.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidCurrPriceSavedInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that current price in storage file has formatting issues.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the current price in storage file is stored wrongly.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.CURR_PRICE_FORMATTING_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidEmptyCurrPriceInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file instrument current price is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidEmptyCurrPriceInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that current price in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the current price in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.EMPTY_CURR_PRICE_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidEmptyEntryPriceInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file forex entry price is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidEmptyEntryPriceInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that entry price in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the entry price in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.EMPTY_ENTRY_PRICE_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidEmptyExitPriceInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file forex exit price is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidEmptyExitPriceInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that exit price in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the exit price in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.EMPTY_EXIT_PRICE_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidEmptyExpiryInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file instrument expiry date is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidEmptyExpiryInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that expiry date in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the expiry date in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.EMPTY_EXPIRY_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidEmptyNameInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file instrument name is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidEmptyNameInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that name in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the name in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.EMPTY_NAME_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidEmptySentimentInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file instrument sentiment is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidEmptySentimentInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that sentiment in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the sentiment in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.EMPTY_SENTIMENT_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidEmptyStatusInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file instrument status is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidEmptyStatusInFileError extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that status in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the status in storage file is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.EMPTY_STATUS_IN_FILE_ERROR;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidEntryPriceSavedInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file forex entry price is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidEntryPriceSavedInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that entry price in storage file is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the entry price in storage file is in the wrong format.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.ENTRY_PRICE_FORMATTING_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidExitPriceSavedInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file forex exit price is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidExitPriceSavedInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that exit price in storage file is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the exit price in storage file is in the wrong format.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.EXIT_PRICE_FORMATTING_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidExpirySavedInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file instrument expiry is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidExpirySavedInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that expiry in storage file is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the expiry in storage file is in the wrong format.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.EXPIRY_FORMATTING_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidInstrumentInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when the storage file instrument type provided is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidInstrumentInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that storage file instrument type is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the storage file instrument type is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.INVALID_INSTRUMENT_IN_FILE_ERROR;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidNameSavedInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file instrument name is not valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidNameSavedInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that name in storage file is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the name in storage file is in the wrong format.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.NAME_FORMATTING_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidPastReturnsSavedInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file instrument past returns is not valid or saved wrongly.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidPastReturnsSavedInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that past returns in storage file is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the past returns in storage file is in the wrong format.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.PAST_RETURNS_FORMATTING_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidRemarksInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file instrument remarks is saved in the wrong format.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidRemarksInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that remarks in storage file is saved in the wrong format.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the remarks in storage file is saved in the wrong format.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.REMARKS_FORMATTING_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidSentimentSavedInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file instrument sentiment saved is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidSentimentSavedInFileError extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that sentiment in storage file is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the sentiment in storage file is saved is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.SENTIMENT_FORMATTING_IN_FILE_ERROR;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/commons/error/fileerror/InvalidStatusSavedInFileError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.commons.error.fileerror;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.ErrorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":" * The custom exception class that is thrown when storage file instrument status is saved wrongly.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"public class InvalidStatusSavedInFileError extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"     * Returns the error message to the user stating that status in storage file is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"     * @return A string error message that states the status in storage file is saved is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        return ErrorMessage.STATUS_FORMATTING_IN_FILE_ERROR;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":2,"williamlamjy":18}},{"path":"src/main/java/seedu/mtracker/console/AddCryptoParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.asserthelpers.AssertParserHelper;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commands.AddCryptoCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.Validate;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":" * A class responsible for parsing inputs when user is adding a new crypto instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"public class AddCryptoParser extends AddInstrumentParser {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"    public static String INSTRUMENT_TYPE \u003d \"crypto\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"     * Queries and gets crypto remarks from the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"     * @return User remarks input.","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    public String getCryptoRemarksFromUser() {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"        TextUi.displayAddRemarksInstruction();","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"        return getUserInput(WORKSPACE);","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"     * Queries and gets crypto expiry date from the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"     * @return User expiry date input.","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    public String getCryptoExpiryFromUser() {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"        TextUi.displayAddExpiryInstruction();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"        return getUserInput(WORKSPACE);","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"     * Gets the user crypto expiry input and adds it into the parameters list.","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"     * @throws OperationAbortedError If the user wants to abort the add crypto process.","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"    public void addCryptoExpiryToParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"        String expiry;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"        do {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"            expiry \u003d getCryptoExpiryFromUser();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"            checkIfAbort(expiry, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"        } while (!Validate.isValidExpiry(expiry));","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"        parameters.add(expiry);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"        AssertParserHelper.assertExpiryInTheFuture(expiry);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"     * Gets the user crypto remarks input and adds it into the parameters list.","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"     * @throws OperationAbortedError If the user wants to abort the add crypto process.","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"    public void addCryptoRemarksToParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"        String remarks \u003d getCryptoRemarksFromUser();","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"        checkIfAbort(remarks, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"        parameters.add(remarks);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"     * Gets crypto specific parameters from the user when adding a new crypto instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"     * @throws OperationAbortedError If the user wants to abort the add crypto process.","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"    public void getCryptoSpecificParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"        addCryptoExpiryToParameters();","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"        addCryptoRemarksToParameters();","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"     * Gets from the user all parameters needed to create a new crypto instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"     * @return A command for adding a new crypto.","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"     * @throws OperationAbortedError If the user wants to abort the add crypto process.","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"    public AddCryptoCommand getInstrumentParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"        getGeneralParameters(INSTRUMENT_TYPE);","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"        getCryptoSpecificParameters();","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"        AssertParserHelper.assertNoMissingCryptoParameters(parameters);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"        return new AddCryptoCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"theodorekwok":6,"williamlamjy":80}},{"path":"src/main/java/seedu/mtracker/console/AddEtfParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.asserthelpers.AssertParserHelper;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commands.AddEtfCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commons.Validate;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"//@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":" * A class responsible for parsing inputs when user is adding a new etf instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"public class AddEtfParser extends AddInstrumentParser {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    public static String INSTRUMENT_TYPE \u003d \"etf\";","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    public static final double UNDEFINED_PAST_RETURN_VALUE \u003d -101;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     * Queries and gets etf remarks from the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"     * @return User remarks input.","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    public String getEtfRemarkFromUser() {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"        TextUi.displayAddRemarksInstruction();","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"        return getUserInput(WORKSPACE);","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"     * Queries and gets etf past returns from the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"     * @return User past returns input.","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the add etf process.","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"    public String getEtfPastReturnFromUser() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"        TextUi.displayAddPastReturnsInstruction();","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"        String userInput \u003d getUserInput(WORKSPACE);","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"        checkIfAbort(userInput, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"        if (!Validate.isValidPastReturns(userInput)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"            return String.valueOf(UNDEFINED_PAST_RETURN_VALUE);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"        return userInput;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"     * Gets the user etf remarks input and adds it into the parameters list.","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the add etf process.","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"    public void addEtfRemarkToParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"        String remarks \u003d getEtfRemarkFromUser();","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"        checkIfAbort(remarks, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"        parameters.add(remarks);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"     * Gets the user etf past returns input and adds it into the parameters list.","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the add etf process.","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"    public void addEtfPastReturnToParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"        String pastReturns \u003d getEtfPastReturnFromUser();","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"        parameters.add(pastReturns);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"     * Gets etf specific parameters from the user when adding a new etf instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the add etf process.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"    public void getEtfSpecificParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"        addEtfPastReturnToParameters();","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"        addEtfRemarkToParameters();","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"     * Gets from the user all parameters needed to create a new etf instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"     * @return A command for adding a new etf.","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the add etf process.","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"    public AddEtfCommand getInstrumentParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"        getGeneralParameters(INSTRUMENT_TYPE);","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"        getEtfSpecificParameters();","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"        AssertParserHelper.assertNoMissingEtfParameters(parameters);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"        return new AddEtfCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kum-wh":82,"theodorekwok":5,"williamlamjy":1}},{"path":"src/main/java/seedu/mtracker/console/AddForexParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.asserthelpers.AssertParserHelper;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commands.AddForexCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commons.Validate;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":" * A class responsible for parsing inputs when user is adding a new forex instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"public class AddForexParser extends AddInstrumentParser {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    public static String INSTRUMENT_TYPE \u003d \"forex\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"     * Queries and gets forex remarks from the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"     * @return User remarks input.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"    public String getForexRemarksFromUser() {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"        TextUi.displayAddRemarksInstruction();","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"        return getUserInput(WORKSPACE);","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"     * Queries and gets forex expiry date from the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"     * @return User expiry date input.","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"    public String getForexExpiryFromUser() {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"        TextUi.displayAddExpiryInstruction();","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"        return getUserInput(WORKSPACE);","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"     * Queries and gets forex entry price from the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"     * @return User entry price input.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"    public String getForexEntryFromUser() {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"        TextUi.displayAddEntryPriceInstruction();","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"        return getUserInput(WORKSPACE);","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"     * Queries and gets forex exit price from the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"KVignesh122"},"content":"     * @return User exit price input.","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"KVignesh122"},"content":"    public String getForexExitFromUser() {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"        TextUi.displayAddExitPriceInstruction();","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"        return getUserInput(WORKSPACE);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"     * Gets the user forex remarks input and adds it into the parameters list.","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"KVignesh122"},"content":"     * @throws OperationAbortedError If the user wants to abort the add forex process.","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"KVignesh122"},"content":"    public void addForexRemarksToParameter() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"KVignesh122"},"content":"        String remarks \u003d getForexRemarksFromUser();","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"KVignesh122"},"content":"        checkIfAbort(remarks, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"KVignesh122"},"content":"        parameters.add(remarks);","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"KVignesh122"},"content":"     * Gets the user forex entry price input and adds it into the parameters list.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"KVignesh122"},"content":"     * @throws OperationAbortedError If the user wants to abort the add forex process.","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"KVignesh122"},"content":"    public void addForexEntryToParameter() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"KVignesh122"},"content":"        String entryPrice;","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"KVignesh122"},"content":"        do {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"KVignesh122"},"content":"            entryPrice \u003d getForexEntryFromUser();","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"KVignesh122"},"content":"            checkIfAbort(entryPrice, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"KVignesh122"},"content":"        } while (!Validate.isValidPrice(entryPrice));","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"KVignesh122"},"content":"        parameters.add(entryPrice);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"KVignesh122"},"content":"        AssertParserHelper.assertInputNotEmpty(entryPrice);","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"KVignesh122"},"content":"        AssertParserHelper.assertPriceNonNegative(entryPrice);","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"KVignesh122"},"content":"     * Gets the user forex exit price input and adds it into the parameters list.","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"KVignesh122"},"content":"     * @throws OperationAbortedError If the user wants to abort the add forex process.","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"KVignesh122"},"content":"    public void addForexExitToParameter() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"KVignesh122"},"content":"        String exitPrice;","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"KVignesh122"},"content":"        do {","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"KVignesh122"},"content":"            exitPrice \u003d getForexExitFromUser();","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"KVignesh122"},"content":"            checkIfAbort(exitPrice, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"KVignesh122"},"content":"        } while (!Validate.isValidPrice(exitPrice));","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"KVignesh122"},"content":"        parameters.add(exitPrice);","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"KVignesh122"},"content":"        AssertParserHelper.assertInputNotEmpty(exitPrice);","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"KVignesh122"},"content":"        AssertParserHelper.assertPriceNonNegative(exitPrice);","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"KVignesh122"},"content":"     * Gets the user forex expiry date input and adds it into the parameters.","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"KVignesh122"},"content":"     * @throws OperationAbortedError If the user wants to abort the add forex process.","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"KVignesh122"},"content":"    public void addForexExpiryToParameter() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"KVignesh122"},"content":"        String expiry;","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"KVignesh122"},"content":"        do {","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"KVignesh122"},"content":"            expiry \u003d getForexExpiryFromUser();","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"KVignesh122"},"content":"            checkIfAbort(expiry, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"KVignesh122"},"content":"        } while (!Validate.isValidExpiry(expiry));","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"KVignesh122"},"content":"        parameters.add(expiry);","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"KVignesh122"},"content":"        AssertParserHelper.assertExpiryInTheFuture(expiry);","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"KVignesh122"},"content":"        AssertParserHelper.assertInputNotEmpty(expiry);","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"KVignesh122"},"content":"     * Gets forex specific parameters from the user parameters when adding a new forex instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"KVignesh122"},"content":"     * @throws OperationAbortedError If the user wants to abort the add forex process.","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"KVignesh122"},"content":"    public void getForexSpecificParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"KVignesh122"},"content":"        addForexEntryToParameter();","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"KVignesh122"},"content":"        addForexExitToParameter();","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"KVignesh122"},"content":"        addForexExpiryToParameter();","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"KVignesh122"},"content":"        addForexRemarksToParameter();","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"KVignesh122"},"content":"     * Gets from the user all parameters needed to create a new forex instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"KVignesh122"},"content":"     * @return A command for adding a new forex.","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"KVignesh122"},"content":"     * @throws OperationAbortedError If the user wants to abort the add forex process.","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"KVignesh122"},"content":"    public AddForexCommand getInstrumentParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"KVignesh122"},"content":"        getGeneralParameters(INSTRUMENT_TYPE);","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"KVignesh122"},"content":"        getForexSpecificParameters();","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"KVignesh122"},"content":"        AssertParserHelper.assertNoMissingForexParameters(parameters);","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"KVignesh122"},"content":"        return new AddForexCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"theodorekwok":6,"williamlamjy":1,"KVignesh122":133}},{"path":"src/main/java/seedu/mtracker/console/AddInstrumentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.LogHelper;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.asserthelpers.AssertParserHelper;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.commands.AddCryptoCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.commands.AddEtfCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.commands.AddForexCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.commands.AddInstrumentCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.commands.AddStockCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commons.Validate;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidInstrumentError;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":" * An abstract class that is responsible for parsing common parameters found in every instrument type.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"public abstract class AddInstrumentParser extends InputParser {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"    public static final int INSTRUMENT_COMMAND_INDEX \u003d 0;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"    protected static ArrayList\u003cString\u003e parameters;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"    protected static final String WORKSPACE \u003d AddInstrumentCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"     * Initialises the parameters attribute as a new list.","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"    public void initParameters() {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"        parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"theodorekwok"},"content":"    public ArrayList\u003cString\u003e getParameters() {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"        return parameters;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"     * Queries and gets instrument name from the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"     * @param instrumentType The type of instrument the user is adding.","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"     * @return User name input.","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"theodorekwok"},"content":"    public static String getInstrumentNameFromUser(String instrumentType) {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"theodorekwok"},"content":"        TextUi.displayAddInstrumentNameInstruction(instrumentType);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"theodorekwok"},"content":"        return getUserInput(WORKSPACE);","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"     * Gets the user instrument name input and adds it into the parameters list.","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"     * @param instrumentType The type of instrument the user is adding.","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"     * @throws OperationAbortedError If the user wants to abort the add instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"    public static void addNameToParameters(String instrumentType) throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"        String name;","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"theodorekwok"},"content":"        do {","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"theodorekwok"},"content":"            name \u003d getInstrumentNameFromUser(instrumentType);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"theodorekwok"},"content":"            checkIfAbort(name, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"theodorekwok"},"content":"        } while (!Validate.isValidName(name, instrumentType));","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"theodorekwok"},"content":"        parameters.add(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"theodorekwok"},"content":"        AssertParserHelper.assertInputNotEmpty(name);","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"theodorekwok"},"content":"     * Queries and gets instrument current price from the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"theodorekwok"},"content":"     * @return User current price input.","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"theodorekwok"},"content":"    public static String getCurrentPriceFromUser() {","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"theodorekwok"},"content":"        TextUi.displayAddInstrumentCurrentPriceInstruction();","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"theodorekwok"},"content":"        return getUserInput(WORKSPACE);","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"theodorekwok"},"content":"     * Gets the user current price and adds it into the parameters list.","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"theodorekwok"},"content":"     * @throws OperationAbortedError If the user wants to abort the add instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"theodorekwok"},"content":"    public static void addCurrentPriceToParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"theodorekwok"},"content":"        String currentPrice;","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"theodorekwok"},"content":"        do {","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"theodorekwok"},"content":"            currentPrice \u003d getCurrentPriceFromUser();","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"theodorekwok"},"content":"            checkIfAbort(currentPrice, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"theodorekwok"},"content":"        } while (!Validate.isValidPrice(currentPrice));","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"theodorekwok"},"content":"        parameters.add(currentPrice);","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"theodorekwok"},"content":"        AssertParserHelper.assertInputNotEmpty(currentPrice);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"theodorekwok"},"content":"        AssertParserHelper.assertPriceNonNegative(currentPrice);","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"theodorekwok"},"content":"     * Queries and gets instrument sentiment from the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"theodorekwok"},"content":"     * @return User sentiment input.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"theodorekwok"},"content":"    public static String getInstrumentSentimentFromUser() {","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"theodorekwok"},"content":"        TextUi.displayAddInstrumentSentimentInstruction();","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"theodorekwok"},"content":"        return getUserInput(WORKSPACE);","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"theodorekwok"},"content":"     * Gets the user sentiment input and adds it into the parameters.","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"theodorekwok"},"content":"     * @throws OperationAbortedError If the user wants to abort the add instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"theodorekwok"},"content":"    public static void addSentimentToParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"theodorekwok"},"content":"        String sentiment;","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"theodorekwok"},"content":"        do {","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"theodorekwok"},"content":"            sentiment \u003d getInstrumentSentimentFromUser().toLowerCase();","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"theodorekwok"},"content":"            checkIfAbort(sentiment, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"theodorekwok"},"content":"        } while (!Validate.isValidSentiment(sentiment));","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"theodorekwok"},"content":"        parameters.add(sentiment);","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"theodorekwok"},"content":"        AssertParserHelper.assertInputNotEmpty(sentiment);","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"theodorekwok"},"content":"     * Gets from the user parameters that are required for adding any of the different instrument types.","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"theodorekwok"},"content":"     * @param instrumentType The type of instrument the user is adding.","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"theodorekwok"},"content":"     * @throws OperationAbortedError If the user wants to abort the add instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"theodorekwok"},"content":"    public static void getGeneralParameters(String instrumentType) throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"theodorekwok"},"content":"        addNameToParameters(instrumentType);","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"theodorekwok"},"content":"        addCurrentPriceToParameters();","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"theodorekwok"},"content":"        addSentimentToParameters();","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"theodorekwok"},"content":"        AssertParserHelper.assertNoMissingGeneralParameters(parameters);","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"theodorekwok"},"content":"     * Gets from the user all parameters needed to create a new instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"theodorekwok"},"content":"     * @return A command for adding a new instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"theodorekwok"},"content":"     * @throws OperationAbortedError If the user wants to abort the add instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"theodorekwok"},"content":"    public abstract AddInstrumentCommand getInstrumentParameters() throws OperationAbortedError;","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"theodorekwok"},"content":"     * Filters and starts the add instrument process based on the type of instrument the user is adding.","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"theodorekwok"},"content":"     * Sets up the command to be returned with the parameters filled with the user input details.","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"theodorekwok"},"content":"     * @param commandComponents A string array containing the command words the user gave.","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"theodorekwok"},"content":"     * @return A command for adding a new instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidInstrumentError If the user gave an invalid instrument type.","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"theodorekwok"},"content":"     * @throws OperationAbortedError If the user wants to abort the add instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"theodorekwok"},"content":"    public static AddInstrumentCommand filterByInstrumentType(String[] commandComponents)","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"theodorekwok"},"content":"            throws InvalidInstrumentError, OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"theodorekwok"},"content":"        AddInstrumentCommand command;","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"theodorekwok"},"content":"        AddInstrumentParser addInstrumentParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"theodorekwok"},"content":"        switch (commandComponents[INSTRUMENT_COMMAND_INDEX]) {","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"theodorekwok"},"content":"        case AddStockCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"theodorekwok"},"content":"            addInstrumentParser \u003d new AddStockParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"theodorekwok"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"theodorekwok"},"content":"        case AddCryptoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"theodorekwok"},"content":"            addInstrumentParser \u003d new AddCryptoParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"theodorekwok"},"content":"            break;","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"theodorekwok"},"content":"        case AddForexCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"theodorekwok"},"content":"            addInstrumentParser \u003d new AddForexParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"theodorekwok"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"theodorekwok"},"content":"        case AddEtfCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"theodorekwok"},"content":"            addInstrumentParser \u003d new AddEtfParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"theodorekwok"},"content":"            break;","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"theodorekwok"},"content":"        default:","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"theodorekwok"},"content":"            logger.info(LogHelper.LOG_INVALID_INSTRUMENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidInstrumentError();","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"theodorekwok"},"content":"        addInstrumentParser.initParameters();","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"theodorekwok"},"content":"        command \u003d addInstrumentParser.getInstrumentParameters();","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"theodorekwok"},"content":"        command.setParams(addInstrumentParser.getParameters());","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"theodorekwok"},"content":"        return command;","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":174,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kum-wh":5,"theodorekwok":168,"williamlamjy":1}},{"path":"src/main/java/seedu/mtracker/console/AddStockParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.asserthelpers.AssertParserHelper;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commands.AddStockCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":" * A class responsible for parsing inputs when user is adding a new stock instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"public class AddStockParser extends AddInstrumentParser {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    public static String STOCK_TYPE \u003d \"stock\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"     * Queries and gets stock remarks from the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"     * @return User remarks. input.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"    public String getStockRemarksFromUser() {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"        TextUi.displayAddRemarksInstruction();","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"        return getUserInput(WORKSPACE);","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"     * Gets the user stock remarks input and adds it into the parameters.","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"     * @throws OperationAbortedError If the user wants to abort the add stock process.","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"    public void addStockRemarksToParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"        String remarks \u003d getStockRemarksFromUser();","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"theodorekwok"},"content":"        checkIfAbort(remarks, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":"        parameters.add(remarks);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"     * Gets stock specific parameters from the user when adding a new stock instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"     * @throws OperationAbortedError If the user wants to abort the add stock process.","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"    public void getStockSpecificParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"        addStockRemarksToParameters();","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"theodorekwok"},"content":"     * Gets from the user all parameters needed to create a new stock instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"     * @return A command for adding a new stock.","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"     * @throws OperationAbortedError If the user wants to abort the add stock process.","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"    public AddStockCommand getInstrumentParameters() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"        getGeneralParameters(STOCK_TYPE);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"        getStockSpecificParameters();","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"        AssertParserHelper.assertNoMissingStockParameters(parameters);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"        return new AddStockCommand();","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"theodorekwok":59}},{"path":"src/main/java/seedu/mtracker/console/EditInstrumentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.commands.EditInstrumentCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.commons.Validate;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"//@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":" * A class responsible for parsing inputs when the user wants to edit an existing instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"public class EditInstrumentParser extends InputParser {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    protected static HashMap\u003cString, String\u003e editedParameters;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    protected static final String NAME_ATTRIBUTE \u003d \"name\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    protected static final String CURRENT_PRICE_ATTRIBUTE \u003d \"current-price\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"    protected static final String SENTIMENT_ATTRIBUTE \u003d \"sentiment\";","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    protected static final String REMARK_ATTRIBUTE \u003d \"remarks\";","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"    protected static final String RETURN_ATTRIBUTE \u003d \"past-returns\";","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    protected static final String ENTRY_PRICE_ATTRIBUTE \u003d \"entry-price\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    protected static final String EXIT_PRICE_ATTRIBUTE \u003d \"exit-price\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    protected static final String EXPIRY_ATTRIBUTE \u003d \"expiry\";","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    protected static final String DONE_ATTRIBUTE \u003d \"done-status\";","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"    protected static final String WORKSPACE \u003d EditInstrumentCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"    protected static final double UNDEFINED_PAST_RETURN_VALUE \u003d -101;","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"     * Gets the user new name input and stores it in a hashmap that maps the name attribute to input.","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"     * Process is skipped if the user does not want to edit the name.","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"     * @param instrumentType The type of instrument user is editing.","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"     * @param parametersGiven The set of parameters of the instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"    public void editNameParameter(String instrumentType, HashSet\u003cString\u003e parametersGiven)","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"            throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"        if (!parametersGiven.contains(NAME_ATTRIBUTE)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"        String inputName;","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"        do {","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"            TextUi.displayEditName();","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"            inputName \u003d getUserInput(WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"            checkIfAbort(inputName, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"        } while (!Validate.isValidName(inputName, instrumentType));","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"        editedParameters.put(NAME_ATTRIBUTE, inputName);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"     * Gets the user new current price input and stores it in a hashmap that maps the current price attribute to input.","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"     * Process is skipped if the user does not want to edit the current price.","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"     * @param parametersGiven The set of parameters of the instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"    public void editCurrentPriceParameter(HashSet\u003cString\u003e parametersGiven)","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"            throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"        if (!parametersGiven.contains(CURRENT_PRICE_ATTRIBUTE)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"        String inputCurrentPrice;","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"        do {","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"            TextUi.displayEditCurrentPrice();","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"            inputCurrentPrice \u003d getUserInput(WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"            checkIfAbort(inputCurrentPrice, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"        } while (!Validate.isValidPrice(inputCurrentPrice));","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"        editedParameters.put(CURRENT_PRICE_ATTRIBUTE, inputCurrentPrice);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"     * Gets the user new sentiment input and stores it in a hashmap that maps the sentiment attribute to input.","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"     * Process is skipped if the user does not want to edit the sentiment.","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"     * @param parametersGiven The set of parameters of the instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"    public void editSentimentsParameter(HashSet\u003cString\u003e parametersGiven)","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"            throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"        if (!parametersGiven.contains(SENTIMENT_ATTRIBUTE)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"        String inputSentiment;","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"        do {","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"            TextUi.displayEditSentiment();","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"            inputSentiment \u003d getUserInput(WORKSPACE).toLowerCase();","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"            checkIfAbort(inputSentiment, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"        } while (!Validate.isValidSentiment(inputSentiment));","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"        editedParameters.put(SENTIMENT_ATTRIBUTE, inputSentiment);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"     * Gets the user new remarks input and stores it in a hashmap that maps the remarks attribute to input.","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"     * Process is skipped if the user does not want to edit the remarks.","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"     * @param parametersGiven The set of parameters of the instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"kum-wh"},"content":"    public void editRemarksParameter(HashSet\u003cString\u003e parametersGiven)","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"kum-wh"},"content":"            throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"kum-wh"},"content":"        if (!parametersGiven.contains(REMARK_ATTRIBUTE)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"kum-wh"},"content":"        TextUi.displayEditRemark();","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"        String inputRemark \u003d getUserInput(WORKSPACE);","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"        checkIfAbort(inputRemark, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"kum-wh"},"content":"        editedParameters.put(REMARK_ATTRIBUTE, inputRemark);","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"kum-wh"},"content":"     * Gets the user new past returns input and stores it in a hashmap that maps the past returns attribute to input.","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"     * Process is skipped if the user does not want to edit the past returns.","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"kum-wh"},"content":"     * @param parametersGiven The set of parameters of the instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"    public void editReturnParameter(HashSet\u003cString\u003e parametersGiven)","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"            throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"kum-wh"},"content":"        if (!parametersGiven.contains(RETURN_ATTRIBUTE)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"kum-wh"},"content":"        TextUi.displayEditReturn();","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"kum-wh"},"content":"        String inputReturn \u003d getUserInput(WORKSPACE);","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"kum-wh"},"content":"        checkIfAbort(inputReturn, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"kum-wh"},"content":"        if (!Validate.isValidPastReturns(inputReturn)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"kum-wh"},"content":"            inputReturn \u003d String.valueOf(UNDEFINED_PAST_RETURN_VALUE);","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"kum-wh"},"content":"        editedParameters.put(RETURN_ATTRIBUTE, inputReturn);","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"kum-wh"},"content":"     * Gets the user new entry price input and stores it in a hashmap that maps the entry price attribute to input.","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"kum-wh"},"content":"     * Process is skipped if the user does not want to edit the entry price.","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"kum-wh"},"content":"     * @param parametersGiven The set of parameters of the instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"kum-wh"},"content":"    public void editEntryPriceParameter(HashSet\u003cString\u003e parametersGiven)","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"kum-wh"},"content":"            throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"        if (!parametersGiven.contains(ENTRY_PRICE_ATTRIBUTE)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"kum-wh"},"content":"        String inputEntryPrice;","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"kum-wh"},"content":"        do {","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"kum-wh"},"content":"            TextUi.displayEditEntryPrice();","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"kum-wh"},"content":"            inputEntryPrice \u003d getUserInput(WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"kum-wh"},"content":"            checkIfAbort(inputEntryPrice, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"kum-wh"},"content":"        } while (!Validate.isValidPrice(inputEntryPrice));","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"kum-wh"},"content":"        editedParameters.put(ENTRY_PRICE_ATTRIBUTE, inputEntryPrice);","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"kum-wh"},"content":"     * Gets the user new exit price input and stores it in a hashmap that maps the exit price attribute to input.","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"kum-wh"},"content":"     * Process is skipped if the user does not want to edit the exit price.","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"kum-wh"},"content":"     * @param parametersGiven The set of parameters of the instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"kum-wh"},"content":"    public void editExitPriceParameter(HashSet\u003cString\u003e parametersGiven)","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"kum-wh"},"content":"            throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"kum-wh"},"content":"        if (!parametersGiven.contains(EXIT_PRICE_ATTRIBUTE)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"kum-wh"},"content":"        String inputExitPrice;","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"kum-wh"},"content":"        do {","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"kum-wh"},"content":"            TextUi.displayEditExitPrice();","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"kum-wh"},"content":"            inputExitPrice \u003d getUserInput(WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"kum-wh"},"content":"            checkIfAbort(inputExitPrice, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"kum-wh"},"content":"        } while (!Validate.isValidPrice(inputExitPrice));","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"kum-wh"},"content":"        editedParameters.put(EXIT_PRICE_ATTRIBUTE, inputExitPrice);","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":179,"author":{"gitId":"kum-wh"},"content":"     * Gets the user new done status input and stores it in a hashmap that maps the status attribute to input.","lastModifiedDate":"2021-11-06"},{"lineNumber":180,"author":{"gitId":"kum-wh"},"content":"     * Process is skipped if the user does not want to edit the status.","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":182,"author":{"gitId":"kum-wh"},"content":"     * @param parametersGiven The set of parameters of the instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":184,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":185,"author":{"gitId":"kum-wh"},"content":"    public void editDoneStatus(HashSet\u003cString\u003e parametersGiven) throws OperationAbortedError {","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"kum-wh"},"content":"        if (!parametersGiven.contains(DONE_ATTRIBUTE)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":187,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-11-03"},{"lineNumber":188,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":189,"author":{"gitId":"kum-wh"},"content":"        String inputStatus;","lastModifiedDate":"2021-11-03"},{"lineNumber":190,"author":{"gitId":"kum-wh"},"content":"        do {","lastModifiedDate":"2021-11-03"},{"lineNumber":191,"author":{"gitId":"kum-wh"},"content":"            TextUi.displayEditStatus();","lastModifiedDate":"2021-11-03"},{"lineNumber":192,"author":{"gitId":"kum-wh"},"content":"            inputStatus \u003d getUserInput(WORKSPACE).toLowerCase();","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"kum-wh"},"content":"            checkIfAbort(inputStatus, WORKSPACE);","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"kum-wh"},"content":"        } while (!Validate.isValidInputStatus(inputStatus));","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"kum-wh"},"content":"        editedParameters.put(DONE_ATTRIBUTE, inputStatus);","lastModifiedDate":"2021-11-03"},{"lineNumber":196,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":197,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":199,"author":{"gitId":"kum-wh"},"content":"     * Gets the user new expiry input and stores it in a hashmap that maps the expiry attribute to input.","lastModifiedDate":"2021-11-06"},{"lineNumber":200,"author":{"gitId":"kum-wh"},"content":"     * Process is skipped if the user does not want to edit the expiry.","lastModifiedDate":"2021-11-05"},{"lineNumber":201,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":202,"author":{"gitId":"kum-wh"},"content":"     * @param parametersGiven The set of parameters of the instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":203,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":204,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":205,"author":{"gitId":"kum-wh"},"content":"    public void editExpiryParameter(HashSet\u003cString\u003e parametersGiven)","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"kum-wh"},"content":"            throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":207,"author":{"gitId":"kum-wh"},"content":"        if (!parametersGiven.contains(EXPIRY_ATTRIBUTE)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"kum-wh"},"content":"        String inputExpiry;","lastModifiedDate":"2021-11-03"},{"lineNumber":211,"author":{"gitId":"kum-wh"},"content":"        do {","lastModifiedDate":"2021-11-03"},{"lineNumber":212,"author":{"gitId":"kum-wh"},"content":"            TextUi.displayEditExpiry();","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"kum-wh"},"content":"            inputExpiry \u003d getUserInput(WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":214,"author":{"gitId":"kum-wh"},"content":"            checkIfAbort(inputExpiry, WORKSPACE);","lastModifiedDate":"2021-11-03"},{"lineNumber":215,"author":{"gitId":"kum-wh"},"content":"        } while (!Validate.isValidExpiry(inputExpiry));","lastModifiedDate":"2021-11-03"},{"lineNumber":216,"author":{"gitId":"kum-wh"},"content":"        editedParameters.put(EXPIRY_ATTRIBUTE, inputExpiry);","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":220,"author":{"gitId":"kum-wh"},"content":"     * Gets from the user all the new values to needed to the update the existing instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":221,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":222,"author":{"gitId":"kum-wh"},"content":"     * @param parametersGiven The set of parameters of the instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":223,"author":{"gitId":"kum-wh"},"content":"     * @param instrumentOfInterest The instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":224,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":225,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":226,"author":{"gitId":"kum-wh"},"content":"    public void getEditedParameters(HashSet\u003cString\u003e parametersGiven, Instrument instrumentOfInterest)","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"kum-wh"},"content":"            throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":228,"author":{"gitId":"kum-wh"},"content":"        String instrumentType \u003d instrumentOfInterest.getType().toLowerCase();","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"kum-wh"},"content":"        editNameParameter(instrumentType, parametersGiven);","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"kum-wh"},"content":"        editCurrentPriceParameter(parametersGiven);","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"kum-wh"},"content":"        editSentimentsParameter(parametersGiven);","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"kum-wh"},"content":"        editReturnParameter(parametersGiven);","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"kum-wh"},"content":"        editEntryPriceParameter(parametersGiven);","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"kum-wh"},"content":"        editExitPriceParameter(parametersGiven);","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"kum-wh"},"content":"        editExpiryParameter(parametersGiven);","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"kum-wh"},"content":"        editRemarksParameter(parametersGiven);","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"kum-wh"},"content":"        editDoneStatus(parametersGiven);","lastModifiedDate":"2021-11-03"},{"lineNumber":238,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":241,"author":{"gitId":"kum-wh"},"content":"     * Creates the edit command and gets from the user the new values to update the instrument with.","lastModifiedDate":"2021-11-05"},{"lineNumber":242,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":243,"author":{"gitId":"kum-wh"},"content":"     * @param parametersGiven The set of parameters of the instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":244,"author":{"gitId":"kum-wh"},"content":"     * @param instrumentOfInterest The instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":245,"author":{"gitId":"kum-wh"},"content":"     * @param instrumentIndex The index number of the instrument to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":246,"author":{"gitId":"kum-wh"},"content":"     * @return A command for editing an existing instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":247,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":248,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":249,"author":{"gitId":"kum-wh"},"content":"    public EditInstrumentCommand createEditCommand(HashSet\u003cString\u003e parametersGiven,","lastModifiedDate":"2021-11-02"},{"lineNumber":250,"author":{"gitId":"kum-wh"},"content":"                                                     Instrument instrumentOfInterest, int instrumentIndex)","lastModifiedDate":"2021-11-03"},{"lineNumber":251,"author":{"gitId":"kum-wh"},"content":"            throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":252,"author":{"gitId":"kum-wh"},"content":"        EditInstrumentCommand command;","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"kum-wh"},"content":"        editedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"kum-wh"},"content":"        getEditedParameters(parametersGiven, instrumentOfInterest);","lastModifiedDate":"2021-11-03"},{"lineNumber":255,"author":{"gitId":"kum-wh"},"content":"        command \u003d new EditInstrumentCommand(editedParameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"kum-wh"},"content":"        command.setIndex(instrumentIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"kum-wh"},"content":"        return command;","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":261,"author":{"gitId":"kum-wh"},"content":"     * Gets the hashmap containing the instrument attributes and its edited value.","lastModifiedDate":"2021-11-05"},{"lineNumber":262,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":263,"author":{"gitId":"kum-wh"},"content":"     * @return A hashmap that contains the instrument attributes and its new value.","lastModifiedDate":"2021-11-05"},{"lineNumber":264,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":265,"author":{"gitId":"kum-wh"},"content":"    public static HashMap\u003cString, String\u003e getEditedParametersHash() {","lastModifiedDate":"2021-11-01"},{"lineNumber":266,"author":{"gitId":"kum-wh"},"content":"        return editedParameters;","lastModifiedDate":"2021-11-01"},{"lineNumber":267,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":268,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kum-wh":267,"theodorekwok":1}},{"path":"src/main/java/seedu/mtracker/console/InputParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.LogHelper;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.commands.AddInstrumentCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.commands.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.commands.DeleteCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.commands.DoneCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.commands.EditInstrumentCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.commands.ExitCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.commands.FindCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commands.ListCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"import seedu.mtracker.commands.ViewCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.Validate;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.AlreadyDoneError;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.EditEmptyParameterError;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidBoundsError;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidCommandError;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidEmptyIndexError;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidEmptySearchStringError;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidIndexError;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidInstrumentError;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"theodorekwok"},"content":" * A class responsible for all the user main command inputs.","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"theodorekwok"},"content":"public class InputParser {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"    public static final String SEPARATOR \u003d \" \";","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"    public static final int INDEX_OFFSET \u003d 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"    public static final int INSTRUMENT_INDEX \u003d 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"    public static final int SEARCH_STR_INDEX_START \u003d 1;","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"    public static final String ABORTED \u003d \"abort\";","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"    public static final int MAIN_COMMAND_INDEX \u003d 0;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"theodorekwok"},"content":"    protected static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"theodorekwok"},"content":"    protected static Scanner inputScanner;","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"    private int instrumentNumber;","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"    private String searchString;","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"     * Constructs the InputParser object and initialises it with a scanner for getting user input.","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"    public InputParser() {","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"        inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"theodorekwok"},"content":"     * Prompts the user to provide an input.","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"theodorekwok"},"content":"     * @param currentWorkspace The current workflow the user is in.","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"theodorekwok"},"content":"     * @return The user input.","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"theodorekwok"},"content":"    public static String getUserInput(String currentWorkspace) {","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"theodorekwok"},"content":"        TextUi.displayPrompter(currentWorkspace);","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"theodorekwok"},"content":"        return inputScanner.nextLine().trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"theodorekwok"},"content":"    public int getInstrumentNumber() {","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"theodorekwok"},"content":"        return instrumentNumber;","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"theodorekwok"},"content":"     * Starts the add instrument workflow and prompts the user provide the type of instrument to add.","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"theodorekwok"},"content":"     * @return A command to add a new instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidInstrumentError If the user gave an invalid instrument type.","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"theodorekwok"},"content":"     * @throws OperationAbortedError If the user wants to abort the add instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"theodorekwok"},"content":"    public AddInstrumentCommand getAddInstrumentParameters()","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"theodorekwok"},"content":"            throws InvalidInstrumentError, OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"theodorekwok"},"content":"        String addInstrumentType;","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"theodorekwok"},"content":"        do {","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"theodorekwok"},"content":"            TextUi.displayAddInstrumentFirstInstruction();","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"theodorekwok"},"content":"            addInstrumentType \u003d getUserInput(AddInstrumentCommand.COMMAND_WORD).toLowerCase();","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"theodorekwok"},"content":"            checkIfAbort(addInstrumentType, AddInstrumentCommand.COMMAND_WORD);","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"theodorekwok"},"content":"        } while (!Validate.isValidInstrument(addInstrumentType));","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"theodorekwok"},"content":"        return AddInstrumentParser.filterByInstrumentType(getCommandComponents(addInstrumentType));","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"theodorekwok"},"content":"     * Checks and prepares the delete command when the user wants to delete an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"theodorekwok"},"content":"     * @param commandComponents A string array containing the command words the user gave.","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"theodorekwok"},"content":"     * @param instruments The list of instruments currently in the user\u0027s watchlist.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"theodorekwok"},"content":"     * @return A command to delete an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidIndexError If the user does not provide a valid number.","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidEmptyIndexError If the user does not provide any number.","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidBoundsError If the user gives a number that is outside the range of the instrument list.","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"theodorekwok"},"content":"    public DeleteCommand getDeleteInstrumentCommand(String[] commandComponents, ArrayList\u003cInstrument\u003e instruments)","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"theodorekwok"},"content":"            throws InvalidIndexError, InvalidEmptyIndexError, InvalidBoundsError {","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"theodorekwok"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"theodorekwok"},"content":"        getAndValidateIndexNumber(commandComponents, instruments);","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"theodorekwok"},"content":"        deleteCommand.setIndex(instrumentNumber);","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"theodorekwok"},"content":"        return deleteCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"KVignesh122"},"content":"    //@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"KVignesh122"},"content":"     * Checks and prepares the view command when the user wants to view a specific instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"KVignesh122"},"content":"     * @param commandComponents A string array containing the command words the user gave.","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"KVignesh122"},"content":"     * @param instruments The list of instruments currently in the user\u0027s watchlist.","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"KVignesh122"},"content":"     * @return A command to view an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"KVignesh122"},"content":"     * @throws InvalidIndexError If the user does not provide a valid number.","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"KVignesh122"},"content":"     * @throws InvalidEmptyIndexError If the user does not provide any number.","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"KVignesh122"},"content":"     * @throws InvalidBoundsError If the user gives a number that is outside the range of the instrument list.","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"KVignesh122"},"content":"    public ViewCommand getViewInstrumentCommand(String[] commandComponents, ArrayList\u003cInstrument\u003e instruments)","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"KVignesh122"},"content":"            throws InvalidIndexError, InvalidEmptyIndexError, InvalidBoundsError {","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"KVignesh122"},"content":"        ViewCommand viewCommand \u003d new ViewCommand();","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"KVignesh122"},"content":"        getAndValidateIndexNumber(commandComponents, instruments);","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"KVignesh122"},"content":"        viewCommand.setIndex(instrumentNumber);","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"KVignesh122"},"content":"        return viewCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"KVignesh122"},"content":"     * Checks and prepare the find command when a user wants to find instruments.","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"KVignesh122"},"content":"     * @param commandComponents A string array containing the command words the user gave.","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"KVignesh122"},"content":"     * @return A command to find instruments.","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"KVignesh122"},"content":"     * @throws InvalidEmptySearchStringError If the user does not provide a search string.","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"KVignesh122"},"content":"    public FindCommand getFindInstrumentsCommand(String[] commandComponents)","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"KVignesh122"},"content":"            throws InvalidEmptySearchStringError {","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"KVignesh122"},"content":"        FindCommand findCommand \u003d new FindCommand();","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"KVignesh122"},"content":"        constructSearchString(commandComponents);","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"KVignesh122"},"content":"        findCommand.setSearchString(searchString);","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"KVignesh122"},"content":"        return findCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"williamlamjy"},"content":"    //@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"williamlamjy"},"content":"     * Checks and prepares the done command when the user wants to set the instrument status as done.","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"williamlamjy"},"content":"     * @param commandComponents A string array containing the command words the user gave.","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"williamlamjy"},"content":"     * @param instruments The list of instruments currently in the user\u0027s watchlist.","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"williamlamjy"},"content":"     * @return A command to set the status of an instrument as completed.","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidIndexError If the user does not provide a valid number.","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyIndexError If the user does not provide any number.","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidBoundsError If the user gives a number that is outside the range of the instrument list.","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"williamlamjy"},"content":"     * @throws AlreadyDoneError If the user tries to set the status of an already done instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"williamlamjy"},"content":"    public DoneCommand getDoneInstrumentCommand(String[] commandComponents, ArrayList\u003cInstrument\u003e instruments)","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"williamlamjy"},"content":"            throws InvalidIndexError, InvalidEmptyIndexError, InvalidBoundsError, AlreadyDoneError {","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"williamlamjy"},"content":"        DoneCommand doneCommand \u003d new DoneCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"williamlamjy"},"content":"        getAndValidateIndexNumber(commandComponents, instruments);","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"williamlamjy"},"content":"        getAndValidateDoneStatus(commandComponents, instruments);","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"williamlamjy"},"content":"        doneCommand.setIndex(instrumentNumber);","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"williamlamjy"},"content":"        return doneCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":165,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"kum-wh"},"content":"     * Checks and filters the user given parameters based on the instrument of interest set of valid attributes.","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"kum-wh"},"content":"     * @param parametersToEdit The set of parameters of the instrument the user wants to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"kum-wh"},"content":"     * @param validAttributes The set of acceptable attributes of the instrument of interest.","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"kum-wh"},"content":"     * @return A set containing the remaining valid parameters after filtering.","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"kum-wh"},"content":"    public HashSet\u003cString\u003e filterInvalidParameters(String[] parametersToEdit, HashSet\u003cString\u003e validAttributes) {","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"kum-wh"},"content":"        HashSet\u003cString\u003e filteredAttributes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"kum-wh"},"content":"        for (String param : parametersToEdit) {","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"kum-wh"},"content":"            if (validAttributes.contains(param)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"kum-wh"},"content":"                filteredAttributes.add(param);","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"kum-wh"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"kum-wh"},"content":"                TextUi.displayEditInvalidAttribute(param);","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"kum-wh"},"content":"        return filteredAttributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":185,"author":{"gitId":"kum-wh"},"content":"     * Gets from the user the attributes to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":186,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":187,"author":{"gitId":"kum-wh"},"content":"     * @param validAttributes The set of acceptable attributes of the instrument of interest.","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"kum-wh"},"content":"     * @return A set containing valid parameters.","lastModifiedDate":"2021-11-05"},{"lineNumber":189,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":190,"author":{"gitId":"kum-wh"},"content":"     * @throws EditEmptyParameterError If the user did not provide any parameters.","lastModifiedDate":"2021-11-05"},{"lineNumber":191,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":192,"author":{"gitId":"kum-wh"},"content":"    public HashSet\u003cString\u003e getParametersToEdit(HashSet\u003cString\u003e validAttributes)","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"kum-wh"},"content":"            throws OperationAbortedError, EditEmptyParameterError {","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"kum-wh"},"content":"        String parametersToEdit \u003d getUserInput(EditInstrumentCommand.COMMAND_WORD).toLowerCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":195,"author":{"gitId":"kum-wh"},"content":"        if (!Validate.isNonEmptyEditParameters(parametersToEdit)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"kum-wh"},"content":"            throw new EditEmptyParameterError();","lastModifiedDate":"2021-11-02"},{"lineNumber":197,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":198,"author":{"gitId":"kum-wh"},"content":"        checkIfAbort(parametersToEdit, EditInstrumentCommand.COMMAND_WORD);","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"kum-wh"},"content":"        String[] parameters \u003d getCommandComponents(parametersToEdit);","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"kum-wh"},"content":"        return filterInvalidParameters(parameters, validAttributes);","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":204,"author":{"gitId":"kum-wh"},"content":"     * Checks and prepares the edit command when the user wants to edit an existing instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":205,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":206,"author":{"gitId":"kum-wh"},"content":"     * @param commandComponents A string array containing the command words the user gave.","lastModifiedDate":"2021-11-05"},{"lineNumber":207,"author":{"gitId":"kum-wh"},"content":"     * @param instruments The list of instruments currently in the user\u0027s watchlist.","lastModifiedDate":"2021-11-05"},{"lineNumber":208,"author":{"gitId":"kum-wh"},"content":"     * @return A command to edit an existing instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":209,"author":{"gitId":"kum-wh"},"content":"     * @throws InvalidIndexError If the user does not provide a valid number.","lastModifiedDate":"2021-11-05"},{"lineNumber":210,"author":{"gitId":"kum-wh"},"content":"     * @throws InvalidEmptyIndexError If the user does not provide any number.","lastModifiedDate":"2021-11-05"},{"lineNumber":211,"author":{"gitId":"kum-wh"},"content":"     * @throws InvalidBoundsError If the user gives a number that is outside the range of the instrument list.","lastModifiedDate":"2021-11-05"},{"lineNumber":212,"author":{"gitId":"kum-wh"},"content":"     * @throws OperationAbortedError If the user wants to abort the edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":213,"author":{"gitId":"kum-wh"},"content":"     * @throws EditEmptyParameterError If the user did not provide any parameters.","lastModifiedDate":"2021-11-05"},{"lineNumber":214,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":215,"author":{"gitId":"kum-wh"},"content":"    public EditInstrumentCommand getEditInstrumentCommand(String[] commandComponents, ArrayList\u003cInstrument\u003e instruments)","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"kum-wh"},"content":"            throws InvalidIndexError, InvalidEmptyIndexError, InvalidBoundsError,","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"kum-wh"},"content":"            OperationAbortedError, EditEmptyParameterError {","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"kum-wh"},"content":"        getAndValidateIndexNumber(commandComponents, instruments);","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"kum-wh"},"content":"        Instrument instrumentToEdit \u003d instruments.get(instrumentNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"kum-wh"},"content":"        TextUi.displayEditInstrumentFirstInstruction(instrumentToEdit);","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"kum-wh"},"content":"        HashSet\u003cString\u003e parametersToEdit \u003d getParametersToEdit(instrumentToEdit.getValidAttribute());","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"kum-wh"},"content":"        EditInstrumentParser editInstrumentParser \u003d new EditInstrumentParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"kum-wh"},"content":"        return editInstrumentParser.createEditCommand(parametersToEdit, instrumentToEdit, instrumentNumber);","lastModifiedDate":"2021-11-02"},{"lineNumber":224,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"kum-wh"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":226,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":227,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":228,"author":{"gitId":"theodorekwok"},"content":"     * Checks if the index number provided is valid.","lastModifiedDate":"2021-11-05"},{"lineNumber":229,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":230,"author":{"gitId":"theodorekwok"},"content":"     * @param commandComponents A string array containing the command words the user gave.","lastModifiedDate":"2021-11-05"},{"lineNumber":231,"author":{"gitId":"theodorekwok"},"content":"     * @param instruments The list of instruments currently in the user\u0027s watchlist.","lastModifiedDate":"2021-11-05"},{"lineNumber":232,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidIndexError If the user does not provide a valid number.","lastModifiedDate":"2021-11-05"},{"lineNumber":233,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidEmptyIndexError If the user does not provide any number.","lastModifiedDate":"2021-11-05"},{"lineNumber":234,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidBoundsError If the user gives a number that is outside the range of the instrument list.","lastModifiedDate":"2021-11-05"},{"lineNumber":235,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":236,"author":{"gitId":"theodorekwok"},"content":"    private void getAndValidateIndexNumber(String[] commandComponents, ArrayList\u003cInstrument\u003e instruments)","lastModifiedDate":"2021-11-02"},{"lineNumber":237,"author":{"gitId":"theodorekwok"},"content":"            throws InvalidEmptyIndexError, InvalidIndexError, InvalidBoundsError {","lastModifiedDate":"2021-11-02"},{"lineNumber":238,"author":{"gitId":"williamlamjy"},"content":"        getIndexNumber(commandComponents);","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"williamlamjy"},"content":"        Validate.validateIndexWithinBounds(instruments, instrumentNumber);","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":242,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":243,"author":{"gitId":"theodorekwok"},"content":"     * Checks if the instrument is already done.","lastModifiedDate":"2021-11-05"},{"lineNumber":244,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":245,"author":{"gitId":"theodorekwok"},"content":"     * @param commandComponents A string array containing the command words the user gave.","lastModifiedDate":"2021-11-05"},{"lineNumber":246,"author":{"gitId":"theodorekwok"},"content":"     * @param instruments The list of instruments currently in the user\u0027s watchlist.","lastModifiedDate":"2021-11-05"},{"lineNumber":247,"author":{"gitId":"theodorekwok"},"content":"     * @throws AlreadyDoneError If the user tries to set the status of an already done instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":248,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidIndexError If the user does not provide a valid number.","lastModifiedDate":"2021-11-05"},{"lineNumber":249,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidEmptyIndexError If the user does not provide any number.","lastModifiedDate":"2021-11-05"},{"lineNumber":250,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":251,"author":{"gitId":"KVignesh122"},"content":"    private void getAndValidateDoneStatus(String[] commandComponents, ArrayList\u003cInstrument\u003e instruments)","lastModifiedDate":"2021-10-31"},{"lineNumber":252,"author":{"gitId":"theodorekwok"},"content":"            throws AlreadyDoneError, InvalidEmptyIndexError, InvalidIndexError {","lastModifiedDate":"2021-11-02"},{"lineNumber":253,"author":{"gitId":"KVignesh122"},"content":"        getIndexNumber(commandComponents);","lastModifiedDate":"2021-10-31"},{"lineNumber":254,"author":{"gitId":"KVignesh122"},"content":"        Validate.checkIsNotDone(instruments, instrumentNumber);","lastModifiedDate":"2021-10-31"},{"lineNumber":255,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":256,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":257,"author":{"gitId":"theodorekwok"},"content":"    //@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":258,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":259,"author":{"gitId":"theodorekwok"},"content":"     * Filters and returns the command type based on the user input.","lastModifiedDate":"2021-11-05"},{"lineNumber":260,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":261,"author":{"gitId":"theodorekwok"},"content":"     * @param commandComponents A string array containing the command words the user gave.","lastModifiedDate":"2021-11-05"},{"lineNumber":262,"author":{"gitId":"theodorekwok"},"content":"     * @param instruments The list of instruments currently in the user\u0027s watchlist.","lastModifiedDate":"2021-11-05"},{"lineNumber":263,"author":{"gitId":"theodorekwok"},"content":"     * @return The command the user wants to execute.","lastModifiedDate":"2021-11-05"},{"lineNumber":264,"author":{"gitId":"theodorekwok"},"content":"     * @throws Exception If any of the user\u0027s addition or lack of inputs violates the command requirements.","lastModifiedDate":"2021-11-05"},{"lineNumber":265,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":266,"author":{"gitId":"theodorekwok"},"content":"    public Command filterByCommandType(String[] commandComponents, ArrayList\u003cInstrument\u003e instruments)","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"theodorekwok"},"content":"            throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"theodorekwok"},"content":"        Command command;","lastModifiedDate":"2021-10-05"},{"lineNumber":269,"author":{"gitId":"theodorekwok"},"content":"        String commandGiven \u003d commandComponents[MAIN_COMMAND_INDEX].toLowerCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"theodorekwok"},"content":"        switch (commandGiven) {","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"theodorekwok"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":272,"author":{"gitId":"theodorekwok"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2021-10-05"},{"lineNumber":273,"author":{"gitId":"theodorekwok"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":274,"author":{"gitId":"theodorekwok"},"content":"        case AddInstrumentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":275,"author":{"gitId":"theodorekwok"},"content":"            command \u003d getAddInstrumentParameters();","lastModifiedDate":"2021-10-05"},{"lineNumber":276,"author":{"gitId":"theodorekwok"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":277,"author":{"gitId":"theodorekwok"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":278,"author":{"gitId":"theodorekwok"},"content":"            command \u003d getDeleteInstrumentCommand(commandComponents, instruments);","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"theodorekwok"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":280,"author":{"gitId":"theodorekwok"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-22"},{"lineNumber":281,"author":{"gitId":"theodorekwok"},"content":"            command \u003d getViewInstrumentCommand(commandComponents, instruments);","lastModifiedDate":"2021-10-22"},{"lineNumber":282,"author":{"gitId":"theodorekwok"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":283,"author":{"gitId":"theodorekwok"},"content":"        case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"theodorekwok"},"content":"            command \u003d getDoneInstrumentCommand(commandComponents, instruments);","lastModifiedDate":"2021-10-21"},{"lineNumber":285,"author":{"gitId":"theodorekwok"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":286,"author":{"gitId":"theodorekwok"},"content":"        case EditInstrumentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":287,"author":{"gitId":"theodorekwok"},"content":"            command \u003d getEditInstrumentCommand(commandComponents, instruments);","lastModifiedDate":"2021-10-24"},{"lineNumber":288,"author":{"gitId":"theodorekwok"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":289,"author":{"gitId":"theodorekwok"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"theodorekwok"},"content":"            command \u003d getFindInstrumentsCommand(commandComponents);","lastModifiedDate":"2021-10-22"},{"lineNumber":291,"author":{"gitId":"theodorekwok"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":292,"author":{"gitId":"theodorekwok"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":293,"author":{"gitId":"theodorekwok"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":294,"author":{"gitId":"theodorekwok"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":295,"author":{"gitId":"theodorekwok"},"content":"        default:","lastModifiedDate":"2021-10-05"},{"lineNumber":296,"author":{"gitId":"theodorekwok"},"content":"            logger.info(LogHelper.LOG_INVALID_COMMAND);","lastModifiedDate":"2021-10-13"},{"lineNumber":297,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidCommandError(commandGiven);","lastModifiedDate":"2021-11-04"},{"lineNumber":298,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":299,"author":{"gitId":"theodorekwok"},"content":"        return command;","lastModifiedDate":"2021-10-05"},{"lineNumber":300,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":301,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":302,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":303,"author":{"gitId":"theodorekwok"},"content":"     * Takes the user input and split it into individual words.","lastModifiedDate":"2021-11-05"},{"lineNumber":304,"author":{"gitId":"theodorekwok"},"content":"     * Removes any additional spaces in the front and back of the input.","lastModifiedDate":"2021-11-05"},{"lineNumber":305,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":306,"author":{"gitId":"theodorekwok"},"content":"     * @param commandInput The user input.","lastModifiedDate":"2021-11-05"},{"lineNumber":307,"author":{"gitId":"theodorekwok"},"content":"     * @return A string array containing the command words the user gave.","lastModifiedDate":"2021-11-05"},{"lineNumber":308,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":309,"author":{"gitId":"theodorekwok"},"content":"    public String[] getCommandComponents(String commandInput) {","lastModifiedDate":"2021-10-09"},{"lineNumber":310,"author":{"gitId":"theodorekwok"},"content":"        return commandInput.trim().split(SEPARATOR);","lastModifiedDate":"2021-11-02"},{"lineNumber":311,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":312,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":313,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":314,"author":{"gitId":"theodorekwok"},"content":"     * Parses the user input and gets the index value.","lastModifiedDate":"2021-11-05"},{"lineNumber":315,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":316,"author":{"gitId":"theodorekwok"},"content":"     * @param commandComponents A string array containing the command words the user gave.","lastModifiedDate":"2021-11-05"},{"lineNumber":317,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidEmptyIndexError If the user does not provide any number.","lastModifiedDate":"2021-11-05"},{"lineNumber":318,"author":{"gitId":"theodorekwok"},"content":"     * @throws InvalidIndexError If the user does not provide a valid number.","lastModifiedDate":"2021-11-05"},{"lineNumber":319,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":320,"author":{"gitId":"theodorekwok"},"content":"    public void getIndexNumber(String[] commandComponents) throws InvalidEmptyIndexError, InvalidIndexError {","lastModifiedDate":"2021-11-02"},{"lineNumber":321,"author":{"gitId":"theodorekwok"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":322,"author":{"gitId":"theodorekwok"},"content":"            instrumentNumber \u003d Integer.parseInt(commandComponents[INSTRUMENT_INDEX]) - INDEX_OFFSET;","lastModifiedDate":"2021-10-18"},{"lineNumber":323,"author":{"gitId":"theodorekwok"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":324,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidEmptyIndexError();","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"theodorekwok"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":326,"author":{"gitId":"theodorekwok"},"content":"            throw new InvalidIndexError();","lastModifiedDate":"2021-10-18"},{"lineNumber":327,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":328,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":329,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":330,"author":{"gitId":"KVignesh122"},"content":"    //@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":331,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":332,"author":{"gitId":"KVignesh122"},"content":"     * Builds the search string the user wants to use to find the instruments.","lastModifiedDate":"2021-11-05"},{"lineNumber":333,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":334,"author":{"gitId":"KVignesh122"},"content":"     * @param commandComponents A string array containing the command words the user gave.","lastModifiedDate":"2021-11-05"},{"lineNumber":335,"author":{"gitId":"KVignesh122"},"content":"     * @throws InvalidEmptySearchStringError If the user does not provide a search string.","lastModifiedDate":"2021-11-05"},{"lineNumber":336,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":337,"author":{"gitId":"KVignesh122"},"content":"    public void constructSearchString(String[] commandComponents) throws InvalidEmptySearchStringError {","lastModifiedDate":"2021-11-02"},{"lineNumber":338,"author":{"gitId":"KVignesh122"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":339,"author":{"gitId":"KVignesh122"},"content":"            searchString \u003d commandComponents[SEARCH_STR_INDEX_START];","lastModifiedDate":"2021-11-01"},{"lineNumber":340,"author":{"gitId":"KVignesh122"},"content":"            for (int i \u003d SEARCH_STR_INDEX_START + 1; i \u003c commandComponents.length; i++) {","lastModifiedDate":"2021-11-01"},{"lineNumber":341,"author":{"gitId":"KVignesh122"},"content":"                searchString +\u003d SEPARATOR + commandComponents[i];","lastModifiedDate":"2021-11-01"},{"lineNumber":342,"author":{"gitId":"KVignesh122"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":343,"author":{"gitId":"KVignesh122"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":344,"author":{"gitId":"KVignesh122"},"content":"            throw new InvalidEmptySearchStringError();","lastModifiedDate":"2021-11-01"},{"lineNumber":345,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":346,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":347,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":348,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":349,"author":{"gitId":"KVignesh122"},"content":"     * Checks whether the user wants to abort either the add or edit process.","lastModifiedDate":"2021-11-05"},{"lineNumber":350,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":351,"author":{"gitId":"KVignesh122"},"content":"     * @param userInput The user input.","lastModifiedDate":"2021-11-05"},{"lineNumber":352,"author":{"gitId":"KVignesh122"},"content":"     * @param currentProcess The current workflow the user is in.","lastModifiedDate":"2021-11-05"},{"lineNumber":353,"author":{"gitId":"KVignesh122"},"content":"     * @throws OperationAbortedError If the user wants to abort the add/edit instrument process.","lastModifiedDate":"2021-11-05"},{"lineNumber":354,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":355,"author":{"gitId":"KVignesh122"},"content":"    public static void checkIfAbort(String userInput, String currentProcess)","lastModifiedDate":"2021-11-03"},{"lineNumber":356,"author":{"gitId":"KVignesh122"},"content":"            throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":357,"author":{"gitId":"KVignesh122"},"content":"        if (userInput.equalsIgnoreCase(ABORTED)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":358,"author":{"gitId":"KVignesh122"},"content":"            throw new OperationAbortedError(currentProcess);","lastModifiedDate":"2021-11-03"},{"lineNumber":359,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":360,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":361,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kum-wh":65,"theodorekwok":192,"williamlamjy":26,"KVignesh122":78}},{"path":"src/main/java/seedu/mtracker/filemanager/CryptoDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.filemanager;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commons.Validate;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidCurrPriceSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyCurrPriceInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyExpiryInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyNameInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptySentimentInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyStatusInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidExpirySavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidNameSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidRemarksInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidSentimentSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidStatusSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.InstrumentManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.subinstrument.Crypto;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":" * Decodes and adds crypto instruments into the InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"public class CryptoDecoder extends InstrumentDecoder {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    public static final int CRYPTO_EXPIRY_INDEX \u003d 5;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"    public static final int CRYPTO_REMARKS_INDEX \u003d 6;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    protected static LocalDate decodedExpiry;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"    protected static String decodedRemarks;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"     * Gets expiry from the mTracker file.","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"     * @return Expiry of the crypto.","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyExpiryInFileError When the expiry parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"    public static String getExpiryFromFile(String[] textSegment) throws InvalidEmptyExpiryInFileError {","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"        String expiry;","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"            expiry \u003d textSegment[CRYPTO_EXPIRY_INDEX];","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidEmptyExpiryInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"        return expiry;","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"     * Gets remarks from the mTracker file.","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"     * @return Remarks of the instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidRemarksInFileError When the remarks parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"    public static String getRemarksFromFile(String[] textSegment) throws InvalidRemarksInFileError {","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"        String remarks;","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"            remarks \u003d textSegment[CRYPTO_REMARKS_INDEX];","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidRemarksInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"        return remarks;","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"     * Validates that specific crypto attributes are of the right format.","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidExpirySavedInFileError When the expiry parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"    private static void validateSpecificAttributes(String[] textSegment) throws InvalidExpirySavedInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"        if (!Validate.isValidExpiry(textSegment[CRYPTO_EXPIRY_INDEX])) {","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidExpirySavedInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"    private static void decodeSpecificAttributes(String expiry, String remarks) {","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"        decodedExpiry \u003d LocalDate.parse(expiry);","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"        decodedRemarks \u003d remarks;","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"     * Validates and decodes the specific attributes of the crypto.","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyExpiryInFileError When the expiry parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidRemarksInFileError When the remarks parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidExpirySavedInFileError When the expiry parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"williamlamjy"},"content":"    public static void validateAndDecodeSpecificAttributes(String[] textSegment) throws InvalidEmptyExpiryInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"williamlamjy"},"content":"            InvalidRemarksInFileError, InvalidExpirySavedInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"williamlamjy"},"content":"        String expiry \u003d getExpiryFromFile(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"williamlamjy"},"content":"        String remarks \u003d getRemarksFromFile(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"williamlamjy"},"content":"        validateSpecificAttributes(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"williamlamjy"},"content":"        decodeSpecificAttributes(expiry, remarks);","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"williamlamjy"},"content":"     * Adds the validated and decoded crypto to the InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"williamlamjy"},"content":"     * @param instrumentManager Current InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidNameSavedInFileError When the name parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidSentimentSavedInFileError When the sentiment parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidCurrPriceSavedInFileError When the current price parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyNameInFileError When the name parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyCurrPriceInFileError When the current price parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptySentimentInFileError When the sentiment parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyStatusInFileError When the done status parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidStatusSavedInFileError When the done status parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyExpiryInFileError When the expiry parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidRemarksInFileError When the remarks parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidExpirySavedInFileError When the expiry parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"williamlamjy"},"content":"    public static void addCryptoToList(String[] textSegment, InstrumentManager instrumentManager)","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"williamlamjy"},"content":"            throws InvalidNameSavedInFileError, InvalidSentimentSavedInFileError, InvalidCurrPriceSavedInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"williamlamjy"},"content":"            InvalidEmptyNameInFileError, InvalidEmptySentimentInFileError, InvalidEmptyStatusInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"williamlamjy"},"content":"            InvalidStatusSavedInFileError, InvalidEmptyCurrPriceInFileError, InvalidEmptyExpiryInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"williamlamjy"},"content":"            InvalidRemarksInFileError, InvalidExpirySavedInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"williamlamjy"},"content":"        validateAndDecodeGeneralAttributes(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"williamlamjy"},"content":"        validateAndDecodeSpecificAttributes(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"williamlamjy"},"content":"        Instrument crypto \u003d createDecodedInstrument();","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"williamlamjy"},"content":"        setDoneStatus(decodedIsDone, crypto);","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"williamlamjy"},"content":"        instrumentManager.addInstrument(crypto);","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"williamlamjy"},"content":"    private static Instrument createDecodedInstrument() {","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"williamlamjy"},"content":"        return new Crypto(decodedName, decodedCurrPrice, decodedSentiment,","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"williamlamjy"},"content":"                decodedExpiry, decodedRemarks);","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theodorekwok":13,"williamlamjy":120}},{"path":"src/main/java/seedu/mtracker/filemanager/EtfDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.filemanager;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commons.Validate;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidCurrPriceSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyCurrPriceInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyNameInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptySentimentInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyStatusInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidNameSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidPastReturnsSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidRemarksInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidSentimentSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidStatusSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.InstrumentManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.subinstrument.Etf;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"public class EtfDecoder extends InstrumentDecoder {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"    public static final int PAST_RETURNS_INDEX \u003d 5;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    public static final int ETF_REMARKS_INDEX \u003d 6;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    public static final double EMPTY_PAST_RETURNS \u003d -101.0;","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    protected static double decodedPastReturns;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"    protected static String decodedRemarks;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"     * Gets past returns from the mTracker file.","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"     * @return Past returns of the Etf.","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidPastReturnsSavedInFileError When the past returns parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"    public static String getPastReturnsFromFile(String[] textSegment) throws InvalidPastReturnsSavedInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"        String pastReturns;","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"            pastReturns \u003d textSegment[PAST_RETURNS_INDEX];","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidPastReturnsSavedInFileError();","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"        return pastReturns;","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"     * Gets remarks from the mTracker file.","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"     * @return Remarks of the instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidRemarksInFileError When the remarks parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"    public static String getRemarksFromFile(String[] textSegment) throws InvalidRemarksInFileError {","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"        String remarks;","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"            remarks \u003d textSegment[ETF_REMARKS_INDEX];","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidRemarksInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"        return remarks;","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"    private static void decodeSpecificAttributes(String pastReturns, String remarks) {","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"        if (pastReturns.isEmpty()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"            decodedPastReturns \u003d EMPTY_PAST_RETURNS;","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"        } else {","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"            decodedPastReturns \u003d Double.parseDouble(pastReturns);","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"        decodedRemarks \u003d remarks;","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"    private static void validateSpecificAttributes(String[] textSegment, String pastReturns)","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"            throws InvalidPastReturnsSavedInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"        if (!pastReturns.isEmpty() \u0026\u0026 !Validate.isValidPastReturns(textSegment[PAST_RETURNS_INDEX])) {","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidPastReturnsSavedInFileError();","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"     * Validates and decodes the specific attributes of the Etf.","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidRemarksInFileError When the remarks parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidPastReturnsSavedInFileError When the past returns parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"    public static void validateAndDecodeSpecificAttributes(String[] textSegment) throws","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"            InvalidRemarksInFileError, InvalidPastReturnsSavedInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"        String pastReturns \u003d getPastReturnsFromFile(textSegment);","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"        String remarks \u003d getRemarksFromFile(textSegment);","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"        validateSpecificAttributes(textSegment, pastReturns);","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"williamlamjy"},"content":"        decodeSpecificAttributes(pastReturns, remarks);","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"williamlamjy"},"content":"     * Adds the validated and decoded Etf to the InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"williamlamjy"},"content":"     * @param instrumentManager Current InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidNameSavedInFileError When the name parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidSentimentSavedInFileError When the sentiment parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidCurrPriceSavedInFileError When the current price parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyNameInFileError When the name parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyCurrPriceInFileError When the current price parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptySentimentInFileError When the sentiment parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyStatusInFileError When the done status parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidStatusSavedInFileError When the done status parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidRemarksInFileError When the remarks parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidPastReturnsSavedInFileError When the past returns parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"williamlamjy"},"content":"    public static void addEtfToList(String[] textSegment, InstrumentManager instrumentManager)","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"williamlamjy"},"content":"            throws InvalidNameSavedInFileError, InvalidSentimentSavedInFileError, InvalidCurrPriceSavedInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"williamlamjy"},"content":"            InvalidEmptyNameInFileError, InvalidEmptySentimentInFileError, InvalidEmptyStatusInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"williamlamjy"},"content":"            InvalidStatusSavedInFileError, InvalidEmptyCurrPriceInFileError, InvalidPastReturnsSavedInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"williamlamjy"},"content":"            InvalidRemarksInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"williamlamjy"},"content":"        validateAndDecodeGeneralAttributes(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"williamlamjy"},"content":"        validateAndDecodeSpecificAttributes(textSegment);","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"williamlamjy"},"content":"        Instrument etf \u003d createDecodedInstrument();","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"williamlamjy"},"content":"        setDoneStatus(decodedIsDone, etf);","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"williamlamjy"},"content":"        instrumentManager.addInstrument(etf);","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"williamlamjy"},"content":"    private static Instrument createDecodedInstrument() {","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"williamlamjy"},"content":"        return new Etf(decodedName, decodedCurrPrice, decodedSentiment,","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"williamlamjy"},"content":"                decodedPastReturns, decodedRemarks);","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theodorekwok":10,"williamlamjy":115}},{"path":"src/main/java/seedu/mtracker/filemanager/ForexDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.filemanager;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commons.Validate;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidCurrPriceSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyCurrPriceInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyEntryPriceInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyExitPriceInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyExpiryInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyNameInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptySentimentInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyStatusInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEntryPriceSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidExitPriceSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidExpirySavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidNameSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidRemarksInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidSentimentSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidStatusSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.InstrumentManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.subinstrument.Forex;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":" * Decodes and adds forex instruments into the InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"public class ForexDecoder extends InstrumentDecoder {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"    public static final int ENTRY_PRICE_INDEX \u003d 5;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    public static final int EXIT_PRICE_INDEX \u003d 6;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"    public static final int FOREX_EXPIRY_INDEX \u003d 7;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"    public static final int FOREX_REMARKS_INDEX \u003d 8;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"    protected static double decodedEntryPrice;","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"    protected static double decodedExitPrice;","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    protected static LocalDate decodedExpiry;","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    protected static String decodedRemarks;","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"     * Gets entry price from the mTracker file.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"     * @return Entry price of the forex","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyEntryPriceInFileError When the entry price parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"    public static String getEntryPriceFromFile(String[] textSegment) throws InvalidEmptyEntryPriceInFileError {","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"        String entryPrice;","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"            entryPrice \u003d textSegment[ENTRY_PRICE_INDEX];","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidEmptyEntryPriceInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"        return entryPrice;","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"     * Gets exit price from the mTracker file.","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"     * @return Exit price of the forex","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyExitPriceInFileError When the exit price parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"    public static String getExitPriceFromFile(String[] textSegment) throws InvalidEmptyExitPriceInFileError {","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"        String exitPrice;","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"            exitPrice \u003d textSegment[EXIT_PRICE_INDEX];","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidEmptyExitPriceInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"        return exitPrice;","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"     * Gets expiry from the mTracker file.","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"     * @return Expiry of the forex.","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyExpiryInFileError When the expiry parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"    public static String getExpiryFromFile(String[] textSegment) throws InvalidEmptyExpiryInFileError {","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"        String expiry;","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"            expiry \u003d textSegment[FOREX_EXPIRY_INDEX];","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidEmptyExpiryInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"        return expiry;","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"williamlamjy"},"content":"     * Gets remarks from the mTracker file.","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"williamlamjy"},"content":"     * @return Remarks of the instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidRemarksInFileError When the remarks parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"williamlamjy"},"content":"    public static String getRemarksFromFile(String[] textSegment) throws InvalidRemarksInFileError {","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"williamlamjy"},"content":"        String remarks;","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"williamlamjy"},"content":"            remarks \u003d textSegment[FOREX_REMARKS_INDEX];","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"williamlamjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidRemarksInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"williamlamjy"},"content":"        return remarks;","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"williamlamjy"},"content":"     * Validates and decodes the specific attributes of the forex.","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyEntryPriceInFileError When the entry price parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyExitPriceInFileError When the exit price parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyExpiryInFileError When the expiry parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidRemarksInFileError When the remarks parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidExpirySavedInFileError When the expiry parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEntryPriceSavedInFileError When the entry price parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidExitPriceSavedInFileError When the exit price parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"williamlamjy"},"content":"    public static void validateAndDecodeSpecificAttributes(String[] textSegment)","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"williamlamjy"},"content":"            throws InvalidEmptyEntryPriceInFileError, InvalidEmptyExitPriceInFileError, InvalidEmptyExpiryInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"williamlamjy"},"content":"            InvalidRemarksInFileError, InvalidEntryPriceSavedInFileError, InvalidExitPriceSavedInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"williamlamjy"},"content":"            InvalidExpirySavedInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"williamlamjy"},"content":"        String entryPrice \u003d getEntryPriceFromFile(textSegment);","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"williamlamjy"},"content":"        String exitPrice \u003d getExitPriceFromFile(textSegment);","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"williamlamjy"},"content":"        String expiry \u003d getExpiryFromFile(textSegment);","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"williamlamjy"},"content":"        String remarks \u003d getRemarksFromFile(textSegment);","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"williamlamjy"},"content":"        validateSpecificAttributes(textSegment);","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"williamlamjy"},"content":"        decodeSpecificAttributes(entryPrice, exitPrice, expiry, remarks);","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"williamlamjy"},"content":"    private static void validateSpecificAttributes(String[] textSegment) throws InvalidExpirySavedInFileError,","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"williamlamjy"},"content":"            InvalidExitPriceSavedInFileError, InvalidEntryPriceSavedInFileError {","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"williamlamjy"},"content":"        if (!Validate.isValidPrice(textSegment[ENTRY_PRICE_INDEX])) {","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidEntryPriceSavedInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"williamlamjy"},"content":"        if (!Validate.isValidPrice(textSegment[EXIT_PRICE_INDEX])) {","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidExitPriceSavedInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"williamlamjy"},"content":"        if (!Validate.isValidExpiry(textSegment[FOREX_EXPIRY_INDEX])) {","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidExpirySavedInFileError();","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"williamlamjy"},"content":"    private static void decodeSpecificAttributes(String entryPrice, String exitPrice, String expiry, String remarks) {","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"williamlamjy"},"content":"        decodedEntryPrice \u003d Double.parseDouble(entryPrice);","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"williamlamjy"},"content":"        decodedExitPrice \u003d Double.parseDouble(exitPrice);","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"williamlamjy"},"content":"        decodedExpiry \u003d LocalDate.parse(expiry);","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"williamlamjy"},"content":"        decodedRemarks \u003d remarks;","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"williamlamjy"},"content":"     * Adds the validated and decoded forex to the InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"williamlamjy"},"content":"     * @param instrumentManager Current InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidNameSavedInFileError When the name parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidSentimentSavedInFileError When the sentiment parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidCurrPriceSavedInFileError When the current price parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyNameInFileError When the name parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyCurrPriceInFileError When the current price parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptySentimentInFileError When the sentiment parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyStatusInFileError When the done status parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidStatusSavedInFileError When the done status parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEntryPriceSavedInFileError When the entry price parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidExitPriceSavedInFileError When the exit price parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyEntryPriceInFileError When the entry price parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyExitPriceInFileError When the exit price parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyExpiryInFileError When the expiry parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidRemarksInFileError When the remarks parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidExpirySavedInFileError When the expiry parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"williamlamjy"},"content":"    public static void addForexToList(String[] textSegment, InstrumentManager instrumentManager)","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"williamlamjy"},"content":"            throws InvalidNameSavedInFileError, InvalidSentimentSavedInFileError, InvalidCurrPriceSavedInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"williamlamjy"},"content":"            InvalidEmptyNameInFileError, InvalidEmptySentimentInFileError, InvalidEmptyStatusInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"williamlamjy"},"content":"            InvalidStatusSavedInFileError, InvalidEmptyCurrPriceInFileError, InvalidEntryPriceSavedInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"williamlamjy"},"content":"            InvalidExitPriceSavedInFileError, InvalidExpirySavedInFileError, InvalidEmptyExitPriceInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"williamlamjy"},"content":"            InvalidEmptyExpiryInFileError, InvalidEmptyEntryPriceInFileError, InvalidRemarksInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"williamlamjy"},"content":"        validateAndDecodeGeneralAttributes(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":180,"author":{"gitId":"williamlamjy"},"content":"        validateAndDecodeSpecificAttributes(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"williamlamjy"},"content":"        Instrument forex \u003d createDecodedInstrument();","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"williamlamjy"},"content":"        setDoneStatus(decodedIsDone, forex);","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"williamlamjy"},"content":"        instrumentManager.addInstrument(forex);","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":186,"author":{"gitId":"williamlamjy"},"content":"    private static Instrument createDecodedInstrument() {","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"williamlamjy"},"content":"        return new Forex(decodedName, decodedCurrPrice, decodedSentiment,","lastModifiedDate":"2021-11-03"},{"lineNumber":188,"author":{"gitId":"williamlamjy"},"content":"                decodedEntryPrice, decodedExitPrice, decodedExpiry, decodedRemarks);","lastModifiedDate":"2021-11-01"},{"lineNumber":189,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theodorekwok":17,"williamlamjy":173}},{"path":"src/main/java/seedu/mtracker/filemanager/InstrumentDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.filemanager;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.LogHelper;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commons.Validate;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidCurrPriceSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyCurrPriceInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyNameInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptySentimentInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyStatusInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidInstrumentInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidNameSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidSentimentSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidStatusSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.InstrumentManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":" * Decodes the pre-existing instruments saved in the mTracker file.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":" * Adds the decoded instruments into the current InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"public class InstrumentDecoder {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    public static final int SPLIT_FUNCTION_LIMIT_VALUE \u003d -1;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"    public static final String TYPE_CRYPTO \u003d \"crypto\";","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    public static final String TYPE_STOCK \u003d \"stock\";","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"    public static final String TYPE_ETF \u003d \"etf\";","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"    public static final String TYPE_FOREX \u003d \"forex\";","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"    public static final int INDEX_START \u003d 1;","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    public static final int TYPE_INDEX \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"    public static final int NAME_INDEX \u003d 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"    public static final int CURR_PRICE_INDEX \u003d 2;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"    public static final int SENTIMENT_INDEX \u003d 3;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"    public static final int IS_DONE_INDEX \u003d 4;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    protected static String decodedSentiment;","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"    protected static String decodedName;","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"    protected static double decodedCurrPrice;","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"    protected static boolean decodedIsDone;","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"    protected static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"    protected static final int ASCII_CODE \u003d 127;","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"    protected static final char FILE_SEPARATOR \u003d (char) ASCII_CODE;","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"     * Gets the instrument\u0027s name from the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"     * @return Name of the instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyNameInFileError When the name parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"    public static String getNameFromFile(String[] textSegment) throws InvalidEmptyNameInFileError {","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"        String name;","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"            name \u003d textSegment[NAME_INDEX];","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidEmptyNameInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"        return name;","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"     * Gets the instrument\u0027s current price from the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"     * @return Current price of the instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyCurrPriceInFileError When the current price parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"    public static String getCurrPriceFromFile(String[] textSegment) throws InvalidEmptyCurrPriceInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"        String currPrice;","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"            currPrice \u003d textSegment[CURR_PRICE_INDEX];","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidEmptyCurrPriceInFileError();","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"        return currPrice;","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"williamlamjy"},"content":"     * Gets the instrument\u0027s sentiment from the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"williamlamjy"},"content":"     * @return Sentiment of the instrument","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptySentimentInFileError When the sentiment parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"williamlamjy"},"content":"    public static String getSentimentFromFile(String[] textSegment) throws InvalidEmptySentimentInFileError {","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"williamlamjy"},"content":"        String sentiment;","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"williamlamjy"},"content":"            sentiment \u003d textSegment[SENTIMENT_INDEX];","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"williamlamjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidEmptySentimentInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"williamlamjy"},"content":"        return sentiment;","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"williamlamjy"},"content":"     * Gets the instrument\u0027s done status from the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"williamlamjy"},"content":"     * @return Done status of the instrument","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyStatusInFileError When the done status parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"williamlamjy"},"content":"    public static String getDoneStatusFromFile(String[] textSegment) throws InvalidEmptyStatusInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"williamlamjy"},"content":"        String status;","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"williamlamjy"},"content":"            status \u003d textSegment[IS_DONE_INDEX];","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"williamlamjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidEmptyStatusInFileError();","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"williamlamjy"},"content":"        return status;","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"williamlamjy"},"content":"    private static void validateGeneralAttributes(String[] textSegment) throws InvalidSentimentSavedInFileError,","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"williamlamjy"},"content":"            InvalidNameSavedInFileError, InvalidCurrPriceSavedInFileError, InvalidStatusSavedInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"williamlamjy"},"content":"        if (!Validate.isValidName(textSegment[NAME_INDEX], textSegment[TYPE_INDEX])) {","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidNameSavedInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"williamlamjy"},"content":"        if (!Validate.isValidPrice(textSegment[CURR_PRICE_INDEX])) {","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidCurrPriceSavedInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"williamlamjy"},"content":"        if (!Validate.isValidSentiment(textSegment[SENTIMENT_INDEX])) {","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidSentimentSavedInFileError();","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"williamlamjy"},"content":"        if (!Validate.isValidStatus(textSegment[IS_DONE_INDEX])) {","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidStatusSavedInFileError();","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"williamlamjy"},"content":"     * Decodes the three general attributes of the instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"williamlamjy"},"content":"     * @param name Name of instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"williamlamjy"},"content":"     * @param currPrice Current price of instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"williamlamjy"},"content":"     * @param sentiment Sentiment of instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"williamlamjy"},"content":"     * @param status Done status of instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"williamlamjy"},"content":"    public static void decodeGeneralAttributes(String name, String currPrice, String sentiment, String status) {","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"williamlamjy"},"content":"        decodedName \u003d name;","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"williamlamjy"},"content":"        decodedCurrPrice \u003d Double.parseDouble(currPrice);","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"williamlamjy"},"content":"        decodedSentiment \u003d sentiment;","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"williamlamjy"},"content":"        decodedIsDone \u003d Boolean.parseBoolean(status);","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"williamlamjy"},"content":"     * Validates the three general attributes of the instrument and decodes the attributes.","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyNameInFileError When the name parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyCurrPriceInFileError When the current price parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptySentimentInFileError When the sentiment parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidSentimentSavedInFileError When the sentiment parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyStatusInFileError When the done status parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidNameSavedInFileError When the name parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidCurrPriceSavedInFileError When the current price parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidStatusSavedInFileError When the done status parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"williamlamjy"},"content":"    public static void validateAndDecodeGeneralAttributes(String[] textSegment) throws InvalidEmptyNameInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"williamlamjy"},"content":"            InvalidEmptyCurrPriceInFileError, InvalidEmptySentimentInFileError, InvalidSentimentSavedInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"williamlamjy"},"content":"            InvalidEmptyStatusInFileError, InvalidNameSavedInFileError, InvalidCurrPriceSavedInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"williamlamjy"},"content":"            InvalidStatusSavedInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"williamlamjy"},"content":"        String name \u003d getNameFromFile(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"williamlamjy"},"content":"        String currPrice \u003d getCurrPriceFromFile(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"williamlamjy"},"content":"        String sentiment \u003d getSentimentFromFile(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"williamlamjy"},"content":"        String status \u003d getDoneStatusFromFile(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"williamlamjy"},"content":"        validateGeneralAttributes(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"williamlamjy"},"content":"        decodeGeneralAttributes(name, currPrice, sentiment, status);","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":179,"author":{"gitId":"williamlamjy"},"content":"     * Sets the done status of the instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":180,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"williamlamjy"},"content":"     * @param isDone Whether the instrument is marked as done.","lastModifiedDate":"2021-11-05"},{"lineNumber":182,"author":{"gitId":"williamlamjy"},"content":"     * @param doneInstrument The instrument that is setting its done status.","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":184,"author":{"gitId":"williamlamjy"},"content":"    public static void setDoneStatus(boolean isDone, Instrument doneInstrument) {","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"williamlamjy"},"content":"        if (!isDone) {","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"williamlamjy"},"content":"            return;","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"williamlamjy"},"content":"        doneInstrument.markAsDone();","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":192,"author":{"gitId":"williamlamjy"},"content":"     * Reads the encoded pre-existing instruments in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":193,"author":{"gitId":"williamlamjy"},"content":"     * Adds the decoded instruments into the InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":194,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":195,"author":{"gitId":"williamlamjy"},"content":"     * @param instrumentManager Current InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":196,"author":{"gitId":"williamlamjy"},"content":"     * @param fileData List of lines in the mTracker file.","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":198,"author":{"gitId":"williamlamjy"},"content":"    public static void readFile(InstrumentManager instrumentManager, List\u003cString\u003e fileData) {","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"williamlamjy"},"content":"        AtomicInteger idx \u003d new AtomicInteger(INDEX_START);","lastModifiedDate":"2021-11-03"},{"lineNumber":200,"author":{"gitId":"williamlamjy"},"content":"        fileData.stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"williamlamjy"},"content":"                .forEach((line) -\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"williamlamjy"},"content":"                    String[] textSegment \u003d line.split(String.valueOf(FILE_SEPARATOR), SPLIT_FUNCTION_LIMIT_VALUE);","lastModifiedDate":"2021-10-31"},{"lineNumber":203,"author":{"gitId":"williamlamjy"},"content":"                    try {","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"williamlamjy"},"content":"                        addSavedInstrumentToList(instrumentManager, textSegment);","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"williamlamjy"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":206,"author":{"gitId":"williamlamjy"},"content":"                        TextUi.showErrorMessage(e);","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"williamlamjy"},"content":"                        TextUi.ignoreCorruptedInstrument(idx);","lastModifiedDate":"2021-11-03"},{"lineNumber":208,"author":{"gitId":"williamlamjy"},"content":"                        logger.warning(LogHelper.LOG_DATA_FILE_INSTRUMENT_CORRUPTED_ERROR);","lastModifiedDate":"2021-11-03"},{"lineNumber":209,"author":{"gitId":"williamlamjy"},"content":"                    } finally {","lastModifiedDate":"2021-11-03"},{"lineNumber":210,"author":{"gitId":"williamlamjy"},"content":"                        idx.getAndIncrement();","lastModifiedDate":"2021-11-03"},{"lineNumber":211,"author":{"gitId":"williamlamjy"},"content":"                    }","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"williamlamjy"},"content":"                });","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"williamlamjy"},"content":"     * Adds the corresponding instrument into the InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":217,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":218,"author":{"gitId":"williamlamjy"},"content":"     * @param instrumentManager Current InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":219,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":220,"author":{"gitId":"williamlamjy"},"content":"     * @throws Exception When there is an error adding the instrument to the InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":221,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":222,"author":{"gitId":"williamlamjy"},"content":"    public static void addSavedInstrumentToList(InstrumentManager instrumentManager, String[] textSegment)","lastModifiedDate":"2021-11-02"},{"lineNumber":223,"author":{"gitId":"williamlamjy"},"content":"            throws Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":224,"author":{"gitId":"williamlamjy"},"content":"        switch (textSegment[TYPE_INDEX].toLowerCase()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":225,"author":{"gitId":"williamlamjy"},"content":"        case TYPE_CRYPTO:","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"williamlamjy"},"content":"            CryptoDecoder.addCryptoToList(textSegment, instrumentManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"williamlamjy"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"williamlamjy"},"content":"        case TYPE_STOCK:","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"williamlamjy"},"content":"            StockDecoder.addStockToList(textSegment, instrumentManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"williamlamjy"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"williamlamjy"},"content":"        case TYPE_FOREX:","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"williamlamjy"},"content":"            ForexDecoder.addForexToList(textSegment, instrumentManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"williamlamjy"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"williamlamjy"},"content":"        case TYPE_ETF:","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"williamlamjy"},"content":"            EtfDecoder.addEtfToList(textSegment, instrumentManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"williamlamjy"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"williamlamjy"},"content":"        default:","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"williamlamjy"},"content":"            logger.warning(LogHelper.LOG_DATA_FILE_INSTRUMENT_TYPE_CORRUPTED_ERROR);","lastModifiedDate":"2021-11-03"},{"lineNumber":239,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidInstrumentInFileError();","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theodorekwok":12,"williamlamjy":230}},{"path":"src/main/java/seedu/mtracker/filemanager/InstrumentEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.filemanager;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.LogHelper;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.FileWriteError;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":" * Encodes the pre-existing instruments into a savable format to store into the mTracker file.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"public class InstrumentEncoder {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    protected static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"     * Writes to the file with the formatted instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"     * @param line String of the formatted instrument to be written into a line in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"     * @param writeToFile FileWriter that writes to the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"     * @throws FileWriteError When there is an error writing to the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"    public static void editFile(String line, FileWriter writeToFile) throws FileWriteError {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"            writeToFile.write(line);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"            logger.severe(LogHelper.LOG_DATA_FILE_WRITE_ERROR);","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"            throw new FileWriteError();","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"     * Writes to the file the entire list of formatted instruments to be saved.","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"     * @param instruments Instruments to be saved.","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"     * @param writeToFile FileWriter that writes to the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"     * @throws IOException When there is an error writing to the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    public static void writeFile(ArrayList\u003cInstrument\u003e instruments, FileWriter writeToFile) throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"        instruments.stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"                .forEach(instrument -\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"                    try {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"                        editFile(instrument.textFileFormatting() + System.lineSeparator(), writeToFile);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"                    } catch (FileWriteError e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"                        TextUi.showErrorMessage(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"                    }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"                });","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"        writeToFile.close();","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theodorekwok":4,"williamlamjy":51}},{"path":"src/main/java/seedu/mtracker/filemanager/StockDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.filemanager;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidCurrPriceSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyCurrPriceInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyNameInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptySentimentInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyStatusInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidNameSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidRemarksInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidSentimentSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidStatusSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.InstrumentManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.subinstrument.Stock;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":" * Decodes and adds stock instruments into the InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"public class StockDecoder extends InstrumentDecoder {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    public static final int STOCK_REMARKS_INDEX \u003d 5;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    protected static String decodedRemarks;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"     * Gets remarks from the mTracker file.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"     * @return Remarks of the instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidRemarksInFileError When the remarks parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    public static String getRemarksFromFile(String[] textSegment) throws InvalidRemarksInFileError {","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"        String remarks;","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"            remarks \u003d textSegment[STOCK_REMARKS_INDEX];","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"            throw new InvalidRemarksInFileError();","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"        return remarks;","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"    private static void decodeSpecificAttributes(String remarks) {","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"        decodedRemarks \u003d remarks;","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"     * Validates and decodes the specific attributes of the stock.","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidRemarksInFileError When the remarks parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"    public static void validateAndDecodeSpecificAttributes(String[] textSegment) throws InvalidRemarksInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"        String remarks \u003d getRemarksFromFile(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"        decodeSpecificAttributes(remarks);","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"     * Adds the validated and decoded stock to the InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"     * @param textSegment Array containing the parameters of an instrument.","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"     * @param instrumentManager Current InstrumentManager.","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidNameSavedInFileError When the name parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidSentimentSavedInFileError When the sentiment parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidCurrPriceSavedInFileError When the current price parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyNameInFileError When the name parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyCurrPriceInFileError When the current price parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptySentimentInFileError When the sentiment parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidEmptyStatusInFileError When the done status parameter is empty in the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidStatusSavedInFileError When the done status parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"     * @throws InvalidRemarksInFileError When the remarks parameter is of invalid format.","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"    public static void addStockToList(String[] textSegment, InstrumentManager instrumentManager)","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"            throws InvalidNameSavedInFileError, InvalidSentimentSavedInFileError, InvalidCurrPriceSavedInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"            InvalidEmptyNameInFileError, InvalidEmptySentimentInFileError, InvalidEmptyStatusInFileError,","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"            InvalidStatusSavedInFileError, InvalidEmptyCurrPriceInFileError, InvalidRemarksInFileError {","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"        validateAndDecodeGeneralAttributes(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"        validateAndDecodeSpecificAttributes(textSegment);","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"        Instrument stock \u003d createDecodedInstrument();","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"        setDoneStatus(decodedIsDone, stock);","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"        instrumentManager.addInstrument(stock);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"    private static Instrument createDecodedInstrument() {","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"        return new Stock(decodedName, decodedCurrPrice, decodedSentiment, decodedRemarks);","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"theodorekwok":9,"williamlamjy":78}},{"path":"src/main/java/seedu/mtracker/filemanager/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.filemanager;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.LogHelper;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.FileLoadError;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.FileWriteError;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.InstrumentManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.ui.TextUi;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"import java.io.File;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":" * Stores data of pre-existing instruments and loads pre-existing data when the program runs.","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"public class Storage {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    public static final String FILE_PATH \u003d \"data/mTracker.txt\";","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"    protected static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"    private final File file;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    private final Path path;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"     * Initializes the Storage class with a file object.","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    public Storage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"        file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"        path \u003d Paths.get(FILE_PATH);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"     * Loads pre-existing data into the instrument manager.","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"     * If the file does not exist, a new file and directory will be created.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"     * @param instrumentManager The instrument manager to be updated.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"     * @throws FileLoadError When there is an error loading the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    public void loadFileData(InstrumentManager instrumentManager) throws FileLoadError {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"            if (!Files.exists(path) || !Files.isRegularFile(path)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"                TextUi.displayCreateFile();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"                file.getParentFile().mkdir();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"                file.createNewFile();","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"                return;","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"            TextUi.displayLoadingFile();","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"            InstrumentDecoder.readFile(instrumentManager, Files.readAllLines(path));","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"            logger.severe(LogHelper.LOG_DATA_FILE_LOAD_ERROR);","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"            throw new FileLoadError();","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"     * Creates a file writer to write to the mTracker file.","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"     * Writes to the mTracker file with the saved instruments.","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"     * @param instruments Instruments to be saved from the current session.","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"     * @throws FileWriteError When there is an error writing to the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"    public void writeFileData(ArrayList\u003cInstrument\u003e instruments) throws FileWriteError {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"            FileWriter writeToFile \u003d new FileWriter(file);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"            InstrumentEncoder.writeFile(instruments, writeToFile);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"            logger.severe(LogHelper.LOG_DATA_FILE_WRITE_ERROR);","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"            throw new FileWriteError();","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"     * Updates the mTracker file with added instruments.","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"     * @param instruments Instruments to be saved from the current session.","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"    public void updateFileData(ArrayList\u003cInstrument\u003e instruments) {","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"            writeFileData(instruments);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"        } catch (FileWriteError e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"            TextUi.showErrorMessage(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"theodorekwok":4,"williamlamjy":85}},{"path":"src/main/java/seedu/mtracker/model/Instrument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.model;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":" * Represents an instrument in the InstrumentManager.","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":" * Contains common instrument parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"public abstract class Instrument {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"    public static final String DATE_REGEX \u003d \"MMM dd yyyy\";","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"    public static final String SEMICOLON_SEP \u003d \"; \";","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    public static final String SPACE \u003d \" \";","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    protected String name;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    protected double currentPrice;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    protected String sentiment;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"    protected static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    protected static final int ASCII_CODE \u003d 127;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    protected static final char FILE_SEPARATOR \u003d (char) ASCII_CODE;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"    protected static final String DONE_SYMBOL \u003d \"[X]\";","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"    protected static final String NOT_DONE_SYMBOL \u003d \"[ ]\";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"    protected static HashSet\u003cString\u003e validAttribute;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    protected static final String NAME_ATTRIBUTE \u003d \"name\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"    protected static final String CURRENT_PRICE_ATTRIBUTE \u003d \"current-price\";","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"    protected static final String SENTIMENT_ATTRIBUTE \u003d \"sentiment\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"    protected static final String REMARK_ATTRIBUTE \u003d \"remarks\";","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    protected static final String DONE_ATTRIBUTE \u003d \"done-status\";","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"    protected static final String SEPARATOR \u003d \", \";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"    protected static final String DONE_INDICATOR \u003d \"done\";","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"    protected static final String UNDONE_INDICATOR \u003d \"undone\";","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"    protected static final String REMARKS_FIELD \u003d \"Remarks: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"    private static final String TYPE_FIELD \u003d \"Type: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"    private static final String NAME_FIELD \u003d \"Name: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"    private static final String CURRENT_PRICE_FIELD \u003d \"Current Price: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"    private static final String SENTIMENT_FIELD \u003d \"Sentiment: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    public Instrument(String name, double currentPrice, String sentiment) {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"        this.currentPrice \u003d currentPrice;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"        this.sentiment \u003d sentiment;","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"        validAttribute \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"    //@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"        return isDone;","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"     * Sets instrument as done.","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"     * Sets instrument as not done.","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"     * Gets the icon representing the done status of the instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"     * @return DONE_SYMBOL if instrument is marked as done and NOT_DONE_SYMBOL if instrument is not marked as done.","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"        return (isDone ? DONE_SYMBOL : NOT_DONE_SYMBOL);","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"    public String getName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"        return name;","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"    public void setName(String inputName) {","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"        name \u003d inputName;","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"    public void setCurrentPrice(double inputCurrentPrice) {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"        currentPrice \u003d inputCurrentPrice;","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"    public void setSentiment(String inputSentiment) {","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"        sentiment \u003d inputSentiment;","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"     * Sets name parameter to the new name if name parameter is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"    public void editName(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"        if (!editedParameters.containsKey(NAME_ATTRIBUTE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"kum-wh"},"content":"        setName(editedParameters.get(NAME_ATTRIBUTE));","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"     * Sets done status parameter to the new status if done status parameter is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"kum-wh"},"content":"    public void editDoneStatus(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"        if (!editedParameters.containsKey(DONE_ATTRIBUTE)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"        if (editedParameters.get(DONE_ATTRIBUTE).equals(DONE_INDICATOR)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"kum-wh"},"content":"            markAsDone();","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"        markAsNotDone();","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"        assert (editedParameters.get(DONE_ATTRIBUTE).equals(UNDONE_INDICATOR));","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"kum-wh"},"content":"     * Sets current price parameter to the new price if current price parameter is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":130,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":131,"author":{"gitId":"kum-wh"},"content":"    public void editCurrentPrice(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"kum-wh"},"content":"        if (!editedParameters.containsKey(CURRENT_PRICE_ATTRIBUTE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"kum-wh"},"content":"        double updatedPrice \u003d Double.parseDouble(editedParameters.get(CURRENT_PRICE_ATTRIBUTE));","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"kum-wh"},"content":"        setCurrentPrice(updatedPrice);","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"kum-wh"},"content":"     * Sets sentiment parameter to the new sentiment if sentiment parameter is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"kum-wh"},"content":"    public void editSentiment(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"        if (!editedParameters.containsKey(SENTIMENT_ATTRIBUTE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"kum-wh"},"content":"        setSentiment(editedParameters.get(SENTIMENT_ATTRIBUTE));","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"kum-wh"},"content":"     * Sets name, current price, sentiment and done status to its respective new values, if parameters is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"kum-wh"},"content":"    public void editGeneralParameter(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"kum-wh"},"content":"        editName(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"kum-wh"},"content":"        editCurrentPrice(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"kum-wh"},"content":"        editSentiment(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"kum-wh"},"content":"        editDoneStatus(editedParameters);","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":164,"author":{"gitId":"kum-wh"},"content":"     * Sets all the parameters being edited to its new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":165,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":167,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"kum-wh"},"content":"    public void editParameter(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"kum-wh"},"content":"        editGeneralParameter(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"kum-wh"},"content":"    public abstract String getType();","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"williamlamjy"},"content":"    //@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":175,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":176,"author":{"gitId":"williamlamjy"},"content":"     * Formats all the parameters of the instrument to save to text file.","lastModifiedDate":"2021-11-06"},{"lineNumber":177,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":178,"author":{"gitId":"williamlamjy"},"content":"     * @return A formatted string to save to text file.","lastModifiedDate":"2021-11-06"},{"lineNumber":179,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":180,"author":{"gitId":"williamlamjy"},"content":"    public String textFileFormatting() {","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"williamlamjy"},"content":"        return getType().toLowerCase() + FILE_SEPARATOR + name + FILE_SEPARATOR","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"williamlamjy"},"content":"                + currentPrice + FILE_SEPARATOR + sentiment + FILE_SEPARATOR","lastModifiedDate":"2021-10-30"},{"lineNumber":183,"author":{"gitId":"williamlamjy"},"content":"                + isDone;","lastModifiedDate":"2021-10-30"},{"lineNumber":184,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":185,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":186,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":188,"author":{"gitId":"kum-wh"},"content":"     * Gets all the type of parameters in the instrument in one string.","lastModifiedDate":"2021-11-06"},{"lineNumber":189,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"kum-wh"},"content":"     * @return A string containing all the type of parameters of the instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":191,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":192,"author":{"gitId":"kum-wh"},"content":"    public String editParameterInstructions() {","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"kum-wh"},"content":"        return DONE_ATTRIBUTE + SEPARATOR","lastModifiedDate":"2021-11-03"},{"lineNumber":194,"author":{"gitId":"kum-wh"},"content":"                + NAME_ATTRIBUTE + SEPARATOR","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"kum-wh"},"content":"                + CURRENT_PRICE_ATTRIBUTE + SEPARATOR","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"kum-wh"},"content":"                + SENTIMENT_ATTRIBUTE;","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"KVignesh122"},"content":"    //@@author KVignesh122","lastModifiedDate":"2021-11-07"},{"lineNumber":200,"author":{"gitId":"KVignesh122"},"content":"    public abstract String getTypeIcon();","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":203,"author":{"gitId":"KVignesh122"},"content":"     * Gets all the parameters of the instrument, with each parameter on a newline.","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"KVignesh122"},"content":"     * @return A string containing all parameters of the instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":207,"author":{"gitId":"KVignesh122"},"content":"    public String getAllParams() {","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"KVignesh122"},"content":"        return TYPE_FIELD + getType() + TAB + getStatusIcon() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"KVignesh122"},"content":"                + NAME_FIELD + name + System.lineSeparator()","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"KVignesh122"},"content":"                + CURRENT_PRICE_FIELD + currentPrice + System.lineSeparator()","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"KVignesh122"},"content":"                + SENTIMENT_FIELD + sentiment + System.lineSeparator();","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":215,"author":{"gitId":"KVignesh122"},"content":"     * Gets the done status, name, current price and sentiment parameters of the instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":216,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":217,"author":{"gitId":"KVignesh122"},"content":"     * @return A string containing the general parameters of the instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":218,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":219,"author":{"gitId":"KVignesh122"},"content":"    public String getGeneralParams() {","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"KVignesh122"},"content":"        return getTypeIcon() + getStatusIcon()","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"KVignesh122"},"content":"                + SPACE + name + SEMICOLON_SEP + currentPrice + SEMICOLON_SEP + sentiment;","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":223,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":225,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":226,"author":{"gitId":"kum-wh"},"content":"     * Adds all the type of parameters in an instrument into a HashSet.","lastModifiedDate":"2021-11-06"},{"lineNumber":227,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":228,"author":{"gitId":"kum-wh"},"content":"     * @return HashSet containing the type of parameters of the instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":229,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":230,"author":{"gitId":"kum-wh"},"content":"    public HashSet\u003cString\u003e getValidAttribute() {","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"kum-wh"},"content":"        validAttribute.add(NAME_ATTRIBUTE);","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"kum-wh"},"content":"        validAttribute.add(CURRENT_PRICE_ATTRIBUTE);","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"kum-wh"},"content":"        validAttribute.add(SENTIMENT_ATTRIBUTE);","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"kum-wh"},"content":"        validAttribute.add(REMARK_ATTRIBUTE);","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"kum-wh"},"content":"        validAttribute.add(DONE_ATTRIBUTE);","lastModifiedDate":"2021-11-03"},{"lineNumber":236,"author":{"gitId":"kum-wh"},"content":"        return validAttribute;","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kum-wh":136,"theodorekwok":11,"williamlamjy":60,"KVignesh122":31}},{"path":"src/main/java/seedu/mtracker/model/InstrumentManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.model;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":" * Responsible for storing and managing of all the different types of instruments.","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"public class InstrumentManager {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"    private final ArrayList\u003cInstrument\u003e instruments;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"    private static InstrumentManager instrumentManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    private InstrumentManager() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"        instruments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"     * Allows other class to get the only instance of this class instead of creating a new instance.","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"     * @return The only instance of this class.","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"    public static InstrumentManager getInstance() {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"        if (instrumentManager \u003d\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"            instrumentManager \u003d new InstrumentManager();","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"        return instrumentManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    public int getSize() {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"        return instruments.size();","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"    public ArrayList\u003cInstrument\u003e getInstruments() {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"        return instruments;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"    public Instrument getInstrument(int index) {","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"        return instruments.get(index);","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    public void addInstrument(Instrument addedInstrument) {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"        instruments.add(addedInstrument);","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"    //@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"     * Scans through the list and filter instruments with name contains a keyword entered by user.","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"     * @param keyword The word input by user to find.","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"     * @return A list containing instruments containing keyword in its name.","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"    public ArrayList\u003cInstrument\u003e findInstruments(String keyword) {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"        return (ArrayList\u003cInstrument\u003e) instruments.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"                .filter((instrument) -\u003e instrument.getName().contains(keyword))","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"theodorekwok"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"theodorekwok"},"content":"    public void deleteInstrument(int index) {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"theodorekwok"},"content":"        instruments.remove(index);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"     * Sets the parameters of the instruments to the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"     * @param index The index of the instrument to edit.","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters The parameters to be edited and its new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"    public void editInstrument(int index, HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"        Instrument instrument \u003d instruments.get(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"        instrument.editParameter(editedParameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kum-wh":13,"theodorekwok":19,"williamlamjy":44}},{"path":"src/main/java/seedu/mtracker/model/subinstrument/Crypto.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.model.subinstrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":" * Represents a Crypto type instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"public class Crypto extends Instrument {","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    protected LocalDate expiry;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    protected String remark;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    protected static final String CRYPTO_ICON \u003d \"[C]\";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    protected static final String TYPE_INSTRUMENT \u003d \"Crypto\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    protected static final String EXPIRY_FIELD \u003d \"Expiry: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"    protected static final String EXPIRY_ATTRIBUTE \u003d \"expiry\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    public Crypto(String name, double currentPrice, String sentiment, LocalDate expiry, String remark) {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"        super(name, currentPrice, sentiment);","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"        this.expiry \u003d expiry;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"     * Formats date into String.","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"     * @return Expiry date formatted into string.","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"    public String formatExpiry() {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"        return expiry.format(DateTimeFormatter.ofPattern(DATE_REGEX));","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"    public void setExpiry(LocalDate inputExpiry) {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"        expiry \u003d inputExpiry;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"    public void setRemark(String inputRemark) {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"        remark \u003d inputRemark;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"     * Sets remarks parameter to the new remarks if remarks parameter is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"    public void editRemark(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"        if (!editedParameters.containsKey(REMARK_ATTRIBUTE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"        setRemark(editedParameters.get(REMARK_ATTRIBUTE));","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"     * Sets expiry parameter to the new expiry if expiry parameter is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"    public void editExpiry(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"        if (!editedParameters.containsKey(EXPIRY_ATTRIBUTE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"        LocalDate updateExpiry \u003d LocalDate.parse(editedParameters.get(EXPIRY_ATTRIBUTE));","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"        setExpiry(updateExpiry);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"     * Sets all instrument specific parameters being edited to its new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"    public void editSpecificParameter(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"        editExpiry(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"        editRemark(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"     * Sets all the Crypto parameters being edited to its new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"    public void editParameter(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"        editGeneralParameter(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"        editSpecificParameter(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"    public String getType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"        return TYPE_INSTRUMENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"     * Formats all Crypto parameters to save to text file.","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"     * @return A formatted string to save to text file.","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"williamlamjy"},"content":"    public String textFileFormatting() {","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"theodorekwok"},"content":"        return super.textFileFormatting() + FILE_SEPARATOR + expiry","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"theodorekwok"},"content":"                + FILE_SEPARATOR + remark;","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"kum-wh"},"content":"     * Gets all the type of Crypto parameters in one string.","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"kum-wh"},"content":"     * @return A string containing all the type of Crypto parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"    public String editParameterInstructions() {","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"        return super.editParameterInstructions() + SEPARATOR + EXPIRY_ATTRIBUTE + SEPARATOR","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"kum-wh"},"content":"                + REMARK_ATTRIBUTE;","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"KVignesh122"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"KVignesh122"},"content":"        return CRYPTO_ICON;","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"kum-wh"},"content":"     * Gets all the Crypto parameters, with each parameter on a newline.","lastModifiedDate":"2021-11-06"},{"lineNumber":130,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":131,"author":{"gitId":"kum-wh"},"content":"     * @return A string containing all the Crypto parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":133,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"KVignesh122"},"content":"    public String getAllParams() {","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"KVignesh122"},"content":"        return super.getAllParams()","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"theodorekwok"},"content":"                + EXPIRY_FIELD + formatExpiry() + System.lineSeparator()","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"williamlamjy"},"content":"                + REMARKS_FIELD + remark;","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"     * Adds all the type of Crypto parameters into a HashSet.","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"kum-wh"},"content":"     * @return HashSet containing the type of Crypto parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"kum-wh"},"content":"    public HashSet\u003cString\u003e getValidAttribute() {","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"kum-wh"},"content":"        super.getValidAttribute();","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"kum-wh"},"content":"        validAttribute.add(EXPIRY_ATTRIBUTE);","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"kum-wh"},"content":"        return validAttribute;","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kum-wh":102,"theodorekwok":8,"williamlamjy":35,"KVignesh122":7}},{"path":"src/main/java/seedu/mtracker/model/subinstrument/Etf.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.model.subinstrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"//@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":" * Represents an Etf type instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"public class Etf extends Instrument {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    protected String remark;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    protected double pastReturns;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    protected static final String ETF_ICON \u003d \"[E]\";","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    protected static final String TYPE_INSTRUMENT \u003d \"Etf\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    protected static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    protected static final String RETURNS_FIELD \u003d \"Past Returns: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    protected static final String RETURNS_ATTRIBUTE \u003d \"past-returns\";","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"    protected static final double UNDEFINED_VALUE \u003d -101.0;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"    public Etf(String name, double currentPrice, String sentiment, double pastReturns, String remark) {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"        super(name, currentPrice, sentiment);","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"        this.pastReturns \u003d pastReturns;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"    public void setRemark(String inputRemark) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"        remark \u003d inputRemark;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"    public void setPastReturns(Double inputPastReturn) {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"        pastReturns \u003d inputPastReturn;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"     * Sets past return parameter to the new past return if past return parameter is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"    public void editReturn(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"        if (!editedParameters.containsKey(RETURNS_ATTRIBUTE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"        Double updateReturn \u003d Double.parseDouble(editedParameters.get(RETURNS_ATTRIBUTE));","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"        setPastReturns(updateReturn);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"     * Sets remarks parameter to the new remarks if remarks parameter is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"    public void editRemark(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"        if (!editedParameters.containsKey(REMARK_ATTRIBUTE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"        setRemark(editedParameters.get(REMARK_ATTRIBUTE));","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"     * Sets all instrument specific parameters being edited to its new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"    public void editSpecificParameters(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"        editReturn(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"        editRemark(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"     * Sets all the Etf parameters being edited to its new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"    public void editParameter(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"        editGeneralParameter(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"        editSpecificParameters(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"     * Gets the value past return in string.","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"     * @return Empty string if past returns is undefined else the value of the past return in string.","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"    public String getReturns() {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"        if (pastReturns \u003d\u003d UNDEFINED_VALUE) {","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"            return EMPTY_STRING;","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"        return String.valueOf(pastReturns);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"     * Gets all the type of Etf parameters in one string.","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"     * @return A string containing all the type of Etf parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"    public String editParameterInstructions() {","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"        return super.editParameterInstructions() + SEPARATOR + RETURNS_ATTRIBUTE + SEPARATOR","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"kum-wh"},"content":"                + REMARK_ATTRIBUTE;","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"kum-wh"},"content":"    public String getType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"kum-wh"},"content":"        return TYPE_INSTRUMENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"williamlamjy"},"content":"    //@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"williamlamjy"},"content":"     * Formats all Etf parameters to save to text file.","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"williamlamjy"},"content":"     * @return A formatted string to save to text file.","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"williamlamjy"},"content":"    public String textFileFormatting() {","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"williamlamjy"},"content":"        return super.textFileFormatting() + FILE_SEPARATOR + getReturns()","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"williamlamjy"},"content":"                + FILE_SEPARATOR + remark;","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"williamlamjy"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"KVignesh122"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"KVignesh122"},"content":"        return ETF_ICON;","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":131,"author":{"gitId":"kum-wh"},"content":"     * Gets all the Etf parameters, with each parameter on a newline.","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":133,"author":{"gitId":"kum-wh"},"content":"     * @return A string containing all the Etf parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":135,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"KVignesh122"},"content":"    public String getAllParams() {","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"KVignesh122"},"content":"        return super.getAllParams()","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"theodorekwok"},"content":"                + RETURNS_FIELD + getReturns() + System.lineSeparator()","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"williamlamjy"},"content":"                + REMARKS_FIELD + remark;","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"kum-wh"},"content":"     * Adds all the type of Etf parameters into a HashSet.","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"     * @return HashSet containing the type of Etf parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"kum-wh"},"content":"    public HashSet\u003cString\u003e getValidAttribute() {","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"kum-wh"},"content":"        super.getValidAttribute();","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"kum-wh"},"content":"        validAttribute.add(RETURNS_ATTRIBUTE);","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"kum-wh"},"content":"        return validAttribute;","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kum-wh":125,"theodorekwok":4,"williamlamjy":16,"KVignesh122":8}},{"path":"src/main/java/seedu/mtracker/model/subinstrument/Forex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.model.subinstrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":" * Represents a Forex type instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"public class Forex extends Instrument {","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"    protected double entryPrice;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"    protected double exitPrice;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"    protected LocalDate expiry;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"    protected String remark;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"    protected static final String FOREX_ICON \u003d \"[F]\";","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"    protected static final String TYPE_INSTRUMENT \u003d \"Forex\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"    protected static final String ENTRY_PRICE_FIELD \u003d \"Entry Price: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"    protected static final String EXIT_PRICE_FIELD \u003d \"Exit Price: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"    protected static final String EXPIRY_FIELD \u003d \"Expiry: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"    protected static final String ENTRY_PRICE_ATTRIBUTE \u003d \"entry-price\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"    protected static final String EXIT_PRICE_ATTRIBUTE \u003d \"exit-price\";","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"    protected static final String EXPIRY_ATTRIBUTE \u003d \"expiry\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"    public Forex(","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"            String name,","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"            double currentPrice,","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"            String sentiment,","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"            double entryPrice,","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"            double exitPrice,","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"            LocalDate expiry,","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"            String remark","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"    ) {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"        super(name, currentPrice, sentiment);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"        this.entryPrice \u003d entryPrice;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"        this.exitPrice \u003d exitPrice;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"        this.expiry \u003d expiry;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"     * Gets all the type of Forex parameters in one string.","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"     * @return A string containing all the type of Forex parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"    public String editParameterInstructions() {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"        return super.editParameterInstructions() + SEPARATOR + ENTRY_PRICE_ATTRIBUTE + SEPARATOR","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"                + EXIT_PRICE_ATTRIBUTE + SEPARATOR","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"                + EXPIRY_ATTRIBUTE + SEPARATOR","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"                + REMARK_ATTRIBUTE;","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"     * Formats date into String.","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"     * @return Expiry date formatted into string.","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"theodorekwok"},"content":"    public String formatExpiry() {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"theodorekwok"},"content":"        return expiry.format(DateTimeFormatter.ofPattern(DATE_REGEX));","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"    public void setRemark(String inputRemark) {","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"        remark \u003d inputRemark;","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"    public void setEntryPrice(Double inputEntryPrice) {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"        entryPrice \u003d inputEntryPrice;","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"    public void setExitPrice(Double inputExitPrice) {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"        exitPrice \u003d inputExitPrice;","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"    public void setExpiry(LocalDate inputExpiry) {","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"        expiry \u003d inputExpiry;","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"     * Sets remarks parameter to the new remarks if remarks parameter is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"    public void editRemark(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"        if (!editedParameters.containsKey(REMARK_ATTRIBUTE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"        setRemark(editedParameters.get(REMARK_ATTRIBUTE));","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"     * Sets expiry parameter to the new expiry if expiry parameter is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"kum-wh"},"content":"    public void editExpiry(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"kum-wh"},"content":"        if (!editedParameters.containsKey(EXPIRY_ATTRIBUTE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"        LocalDate updateExpiry \u003d LocalDate.parse(editedParameters.get(EXPIRY_ATTRIBUTE));","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"        setExpiry(updateExpiry);","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"     * Sets entry price parameter to the new price if entry price parameter is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"kum-wh"},"content":"    public void editEntryPrice(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"        if (!editedParameters.containsKey(ENTRY_PRICE_ATTRIBUTE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"        Double updateEntryPrice \u003d Double.parseDouble(editedParameters.get(ENTRY_PRICE_ATTRIBUTE));","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"kum-wh"},"content":"        setEntryPrice(updateEntryPrice);","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"kum-wh"},"content":"     * Sets exit price parameter to the new price if exit price parameter is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":130,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":131,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"kum-wh"},"content":"    public void editExitPrice(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"kum-wh"},"content":"        if (!editedParameters.containsKey(EXIT_PRICE_FIELD)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"kum-wh"},"content":"        Double updateExitPrice \u003d Double.parseDouble(editedParameters.get(EXIT_PRICE_FIELD));","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"kum-wh"},"content":"        setExitPrice(updateExitPrice);","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"kum-wh"},"content":"     * Sets all instrument specific parameters being edited to its new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"    public void editSpecificParameter(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"        editEntryPrice(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"kum-wh"},"content":"        editExitPrice(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"kum-wh"},"content":"        editExpiry(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"kum-wh"},"content":"        editRemark(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"kum-wh"},"content":"     * Sets all the Forex parameters being edited to its new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"kum-wh"},"content":"    public void editParameter(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"kum-wh"},"content":"        editGeneralParameter(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"kum-wh"},"content":"        editSpecificParameter(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"kum-wh"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"KVignesh122"},"content":"    public String getType() {","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"KVignesh122"},"content":"        return TYPE_INSTRUMENT;","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"KVignesh122"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"KVignesh122"},"content":"        return FOREX_ICON;","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"williamlamjy"},"content":"    //@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":175,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":176,"author":{"gitId":"williamlamjy"},"content":"     * Formats all Forex parameters to save to text file.","lastModifiedDate":"2021-11-06"},{"lineNumber":177,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":178,"author":{"gitId":"williamlamjy"},"content":"     * @return A formatted string to save to text file.","lastModifiedDate":"2021-11-06"},{"lineNumber":179,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":180,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"williamlamjy"},"content":"    public String textFileFormatting() {","lastModifiedDate":"2021-10-17"},{"lineNumber":182,"author":{"gitId":"williamlamjy"},"content":"        return super.textFileFormatting() + FILE_SEPARATOR + entryPrice","lastModifiedDate":"2021-10-30"},{"lineNumber":183,"author":{"gitId":"williamlamjy"},"content":"                + FILE_SEPARATOR + exitPrice + FILE_SEPARATOR + expiry","lastModifiedDate":"2021-10-30"},{"lineNumber":184,"author":{"gitId":"williamlamjy"},"content":"                + FILE_SEPARATOR + remark;","lastModifiedDate":"2021-10-30"},{"lineNumber":185,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":186,"author":{"gitId":"williamlamjy"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":189,"author":{"gitId":"kum-wh"},"content":"     * Gets all the Forex parameters, with each parameter on a newline.","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":191,"author":{"gitId":"kum-wh"},"content":"     * @return A string containing all the Forex parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":192,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":193,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"KVignesh122"},"content":"    public String getAllParams() {","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"KVignesh122"},"content":"        return super.getAllParams()","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"KVignesh122"},"content":"                + ENTRY_PRICE_FIELD + entryPrice + System.lineSeparator()","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"KVignesh122"},"content":"                + EXIT_PRICE_FIELD + exitPrice + System.lineSeparator()","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"theodorekwok"},"content":"                + EXPIRY_FIELD + formatExpiry() + System.lineSeparator()","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"williamlamjy"},"content":"                + REMARKS_FIELD + remark;","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":203,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"kum-wh"},"content":"     * Adds all the type of Forex parameters into a HashSet.","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"kum-wh"},"content":"     * @return HashSet containing the type of Forex parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":207,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":208,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"kum-wh"},"content":"    public HashSet\u003cString\u003e getValidAttribute() {","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"kum-wh"},"content":"        super.getValidAttribute();","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"kum-wh"},"content":"        validAttribute.add(ENTRY_PRICE_ATTRIBUTE);","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"kum-wh"},"content":"        validAttribute.add(EXIT_PRICE_ATTRIBUTE);","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"kum-wh"},"content":"        validAttribute.add(EXPIRY_ATTRIBUTE);","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"kum-wh"},"content":"        return validAttribute;","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kum-wh":141,"theodorekwok":8,"williamlamjy":19,"KVignesh122":48}},{"path":"src/main/java/seedu/mtracker/model/subinstrument/Stock.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.model.subinstrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":" * Represents a Stock type instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"public class Stock extends Instrument {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"    protected String remark;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"    protected static final String STOCK_ICON \u003d \"[S]\";","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"    protected static final String TYPE_INSTRUMENT \u003d \"Stock\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    public Stock(String name, double currentPrice, String sentiment, String remark) {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"        super(name, currentPrice, sentiment);","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"    public String getRemark() {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"        return remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    public void setRemark(String inputRemark) {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"        remark \u003d inputRemark;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"    //@@author","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"     * Sets remarks parameter to the new remarks if remarks parameter is being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"    public void editRemark(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"        if (!editedParameters.containsKey(REMARK_ATTRIBUTE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"        setRemark(editedParameters.get(REMARK_ATTRIBUTE));","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"     * Sets all the Stock parameters being edited to its new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"     * @param editedParameters HashMap containing parameters to edit and the new values.","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"    public void editParameter(HashMap\u003cString, String\u003e editedParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"        editGeneralParameter(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"        editRemark(editedParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"     * Gets all the type of Stock parameters in one string.","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"     * @return A string containing all the type of Stock parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"    public String editParameterInstructions() {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"        return super.editParameterInstructions() + SEPARATOR + REMARK_ATTRIBUTE;","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String getType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return TYPE_INSTRUMENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"    //@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"     * Formats all Stock parameters to save to text file.","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"     * @return A formatted string to save to text file.","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"    public String textFileFormatting() {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"        return super.textFileFormatting()","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"                + FILE_SEPARATOR + getRemark();","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"KVignesh122"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"KVignesh122"},"content":"        return STOCK_ICON;","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"     * Adds all the type of Stock parameters into a HashSet.","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"     * @return HashSet containing the type of Stock parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"KVignesh122"},"content":"    public String getAllParams() {","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"KVignesh122"},"content":"        return super.getAllParams()","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"williamlamjy"},"content":"                + REMARKS_FIELD + remark;","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kum-wh":49,"theodorekwok":21,"williamlamjy":16,"KVignesh122":7,"-":6}},{"path":"src/main/java/seedu/mtracker/ui/TextUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":" * Responsible for all interactions with the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"public class TextUi {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    private static final String INDEX_BRACKET \u003d \") \";","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"    private static final String TYPE_HEADER \u003d \"Please key in the type of instrument: \";","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"    private static final String REMARKS_HEADER \u003d \"Remarks (optional): \";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"    private static final String SENTIMENT_HEADER \u003d \"Sentiment for instrument: \";","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"    private static final String CURRENT_PRICE_HEADER \u003d \"Current Price: \";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"    private static final String ENTRY_PRICE_HEADER \u003d \"Entry Price: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"    private static final String EXIT_PRICE_HEADER \u003d \"Exit Price: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"    private static final String EXPIRY_HEADER \u003d \"Expiry (YYYY-MM-DD): \";","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"    private static final String RETURNS_HEADER \u003d \"Past Returns (optional): \";","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"    private static final String LINE_DECORATOR \u003d \"_\".repeat(80);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"    private static final String LOGO \u003d \"            _________                      __\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"            + \"           |  _   _  |                    [  |  _\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"            + \" _ .--..--.|_/ | | \\\\_| .--.  ,--.   .---.  | | / ] .---.  _ .--.\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"            + \"[ `.-. .-. |   | |  [ `/\u0027`\\\\]`\u0027_\\\\ : / /\u0027`\\\\] | \u0027\u0027 \u003c / /__\\\\\\\\[ `/\u0027`\\\\]\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"            + \" | | | | | |  _| |_  | |    /| | |,| \\\\__.  | |`\\\\ \\\\| \\\\__., | |\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"            + \"[___||__||__]|_____|[___]   \\\\\u0027-;__/\u0027.___.\u0027[__|  \\\\_]\u0027.__.\u0027[___]\\n\";","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"    private static final String BYE_LOGO \u003d \" ______            _______  _\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"            + \"(  ___ \\\\ |\\\\     /|(  ____ \\\\( )\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"            + \"| (   ) )( \\\\   / )| (    \\\\/| |\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"            + \"| (__/ /  \\\\ (_) / | (__    | |\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"            + \"|  __ (    \\\\   /  |  __)   | |\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"            + \"| (  \\\\ \\\\    ) (   | (      (_)\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"            + \"| )___) )   | |   | (____/| _\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"            + \"|/ \\\\___/    \\\\_/   (_______/(_)\";","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"    private static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"    private static final String EDIT_NAME_MESSAGE \u003d \"Enter new name:\";","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"    private static final String EDIT_CURRENT_PRICE_MESSAGE \u003d \"Enter new Current price:\";","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"    private static final String EDIT_SENTIMENT_MESSAGE \u003d \"Enter new Sentiment:\";","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"    private static final String EDIT_REMARKS_MESSAGE \u003d \"Enter new Remarks:\";","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"    private static final String EDIT_RETURN_MESSAGE \u003d \"Enter new Past Returns:\";","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"    private static final String EDIT_ENTRY_MESSAGE \u003d \"Enter new Entry Price:\";","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"    private static final String EDIT_EXIT_MESSAGE \u003d \"Enter new Exit Price:\";","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"KVignesh122"},"content":"    private static final String EDIT_EXPIRY_MESSAGE \u003d \"Enter new Expiry (YYYY-MM-DD):\";","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"    private static final String EDIT_STATUS_MESSAGE \u003d \"Enter new Status (please enter either done or undone):\";","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"KVignesh122"},"content":"    private static final String WATCHLIST_HEADER \u003d \"CURRENT WATCHLIST\";","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"    private static final int NONE_FOUND \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"KVignesh122"},"content":"     * Displays the new instrument added along with its parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"     * @param newInstrument The new instrument added to the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"KVignesh122"},"content":"    public static void displayInstrumentAdded(Instrument newInstrument) {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(TAB + newInstrument.getGeneralParams() + \" - has been added to list.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"KVignesh122"},"content":"     * Prompts user to enter the type of instrument being added.","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"KVignesh122"},"content":"    public static void displayAddInstrumentFirstInstruction() {","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(TAB + TYPE_HEADER);","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"KVignesh122"},"content":"     * Prompts user to enter the name of the instrument being added.","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"KVignesh122"},"content":"     * @param instrumentType The type of the instrument being added.","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"KVignesh122"},"content":"    public static void displayAddInstrumentNameInstruction(String instrumentType) {","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(TAB + \"Name of \" + instrumentType + \": \");","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"KVignesh122"},"content":"     * Prompts user to enter the current price of the instrument being added.","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"KVignesh122"},"content":"    public static void displayAddInstrumentCurrentPriceInstruction() {","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(TAB + CURRENT_PRICE_HEADER);","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"KVignesh122"},"content":"     * Prompts user to enter the sentiment of the instrument being added.","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"KVignesh122"},"content":"    public static void displayAddInstrumentSentimentInstruction() {","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(TAB + SENTIMENT_HEADER);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"KVignesh122"},"content":"     * Prompts user to enter the remarks of the instrument being added.","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"KVignesh122"},"content":"    public static void displayAddRemarksInstruction() {","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(TAB + REMARKS_HEADER);","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"KVignesh122"},"content":"     * Prompts user to enter the expiry of the instrument being added.","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"KVignesh122"},"content":"    public static void displayAddExpiryInstruction() {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(TAB + EXPIRY_HEADER);","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"KVignesh122"},"content":"     * Prompts user to enter the entry price of the instrument being added.","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"KVignesh122"},"content":"    public static void displayAddEntryPriceInstruction() {","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(TAB + ENTRY_PRICE_HEADER);","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"KVignesh122"},"content":"     * Prompts user to enter the exit price of the instrument being added.","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"KVignesh122"},"content":"    public static void displayAddExitPriceInstruction() {","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(TAB + EXIT_PRICE_HEADER);","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":123,"author":{"gitId":"KVignesh122"},"content":"     * Prompts user to enter the past returns of the instrument being added.","lastModifiedDate":"2021-11-06"},{"lineNumber":124,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":125,"author":{"gitId":"KVignesh122"},"content":"    public static void displayAddPastReturnsInstruction() {","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(TAB + RETURNS_HEADER);","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":130,"author":{"gitId":"KVignesh122"},"content":"     * Displays all the instruments and their general parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":131,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"KVignesh122"},"content":"     * @param instruments The list containing all the instruments.","lastModifiedDate":"2021-11-06"},{"lineNumber":133,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"KVignesh122"},"content":"    public static void displayInstruments(ArrayList\u003cInstrument\u003e instruments) {","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"KVignesh122"},"content":"        int idx \u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"KVignesh122"},"content":"        for (Instrument instrument: instruments) {","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"KVignesh122"},"content":"            idx +\u003d 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(constructLineInList(idx, instrument));","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"KVignesh122"},"content":"     * Displays all the instruments and their general parameters, along with separators and header for readability.","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"KVignesh122"},"content":"     * @param instruments The list containing all instruments.","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"KVignesh122"},"content":"    public static void displayAllInstruments(ArrayList\u003cInstrument\u003e instruments) {","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(WATCHLIST_HEADER);","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"KVignesh122"},"content":"        displayInstruments(instruments);","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"KVignesh122"},"content":"     * Displays to user the number of instruments found or no instrument is found.","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"KVignesh122"},"content":"     * @param numFound The number of instruments found.","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"KVignesh122"},"content":"     * @param searchTerm The keyword being search.","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":160,"author":{"gitId":"KVignesh122"},"content":"    private static void displayFoundMessage(int numFound, String searchTerm) {","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"KVignesh122"},"content":"        if (numFound \u003d\u003d NONE_FOUND) {","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"There were no instruments found for search string, \" + searchTerm + \".\");","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"KVignesh122"},"content":"            return;","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"There were \" + numFound + \" instrument(s) found for search string, \" + searchTerm + \".\");","lastModifiedDate":"2021-11-01"},{"lineNumber":166,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"KVignesh122"},"content":"     * Displays to the user the list of instruments with name containing a specific keyword.","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"KVignesh122"},"content":"     * @param instruments The list of instruments with name containing that keyword.","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"KVignesh122"},"content":"     * @param searchString The keyword being used to search.","lastModifiedDate":"2021-11-06"},{"lineNumber":173,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"KVignesh122"},"content":"    public static void displayInstrumentsFound(ArrayList\u003cInstrument\u003e instruments, String searchString) {","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"KVignesh122"},"content":"        displayInstruments(instruments);","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"KVignesh122"},"content":"        displayFoundMessage(instruments.size(), searchString);","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":182,"author":{"gitId":"KVignesh122"},"content":"     * Concatenates the instrument with its index and its general parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":183,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":184,"author":{"gitId":"KVignesh122"},"content":"     * @param idx The index of the instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":185,"author":{"gitId":"KVignesh122"},"content":"     * @param instrument The instrument to be displayed.","lastModifiedDate":"2021-11-06"},{"lineNumber":186,"author":{"gitId":"KVignesh122"},"content":"     * @return The concatted string of index and general parameters.","lastModifiedDate":"2021-11-06"},{"lineNumber":187,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":188,"author":{"gitId":"KVignesh122"},"content":"    private static String constructLineInList(int idx, Instrument instrument) {","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"KVignesh122"},"content":"        return idx + INDEX_BRACKET + instrument.getGeneralParams();","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":193,"author":{"gitId":"KVignesh122"},"content":"     * Displays all the parameters of an instrument to the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"KVignesh122"},"content":"     * @param instrument The instrument to display to the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":197,"author":{"gitId":"KVignesh122"},"content":"    public static void displaySpecificInstrumentView(Instrument instrument) {","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(instrument.getAllParams());","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"williamlamjy"},"content":"    //@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":204,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"williamlamjy"},"content":"     * Informs the user of the instrument that has been marked as done.","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"williamlamjy"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":207,"author":{"gitId":"williamlamjy"},"content":"     * @param instrument The instrument that is marked as done.","lastModifiedDate":"2021-11-06"},{"lineNumber":208,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":209,"author":{"gitId":"williamlamjy"},"content":"    public static void displayDoneInstrument(Instrument instrument) {","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(TAB + \"Nice! I have marked this instrument as completed:\"","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"williamlamjy"},"content":"                + System.lineSeparator() + TAB + TAB","lastModifiedDate":"2021-10-22"},{"lineNumber":212,"author":{"gitId":"williamlamjy"},"content":"                + instrument.getGeneralParams());","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"williamlamjy"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":215,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":217,"author":{"gitId":"kum-wh"},"content":"     * Informs the user that an instrument has been deleted from the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":218,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":219,"author":{"gitId":"kum-wh"},"content":"     * @param instrument The instrument that is deleted.","lastModifiedDate":"2021-11-06"},{"lineNumber":220,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":221,"author":{"gitId":"theodorekwok"},"content":"    public static void displayInstrumentDeleted(Instrument instrument) {","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"theodorekwok"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"Noted. \" + instrument.getGeneralParams() + \" - removed from your watchlist\");","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"theodorekwok"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"williamlamjy"},"content":"    //@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":228,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":229,"author":{"gitId":"williamlamjy"},"content":"     * Informs the user that the text file for saving cannot be detected and a new one will be created.","lastModifiedDate":"2021-11-06"},{"lineNumber":230,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":231,"author":{"gitId":"williamlamjy"},"content":"    public static void displayCreateFile() {","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(\"Unable to find a saved file. Creating a new one now...\");","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"williamlamjy"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":236,"author":{"gitId":"williamlamjy"},"content":"     * Informs the user that a text file used for saving have been detected and its content will be read.","lastModifiedDate":"2021-11-06"},{"lineNumber":237,"author":{"gitId":"williamlamjy"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":238,"author":{"gitId":"williamlamjy"},"content":"    public static void displayLoadingFile() {","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(\"Found a saved file. Loading the saved data now...\");","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"williamlamjy"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":242,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":244,"author":{"gitId":"kum-wh"},"content":"     * Displays the respective error message to the user when an error is encountered.","lastModifiedDate":"2021-11-06"},{"lineNumber":245,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":246,"author":{"gitId":"kum-wh"},"content":"     * @param e The error being encountered.","lastModifiedDate":"2021-11-06"},{"lineNumber":247,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":248,"author":{"gitId":"KVignesh122"},"content":"    public static void showErrorMessage(Exception e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"williamlamjy"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-10-07"},{"lineNumber":250,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":251,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":252,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":253,"author":{"gitId":"kum-wh"},"content":"     * Informs the user that an instrument in the text file is corrupted and will not be read from the file.","lastModifiedDate":"2021-11-06"},{"lineNumber":254,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":255,"author":{"gitId":"kum-wh"},"content":"     * @param idx The index of the instrument.","lastModifiedDate":"2021-11-06"},{"lineNumber":256,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":257,"author":{"gitId":"theodorekwok"},"content":"    public static void ignoreCorruptedInstrument(AtomicInteger idx) {","lastModifiedDate":"2021-11-03"},{"lineNumber":258,"author":{"gitId":"theodorekwok"},"content":"        System.out.println(\"Ignoring saved instrument \" + idx + \" as it was corrupted.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":259,"author":{"gitId":"theodorekwok"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-11-03"},{"lineNumber":260,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":261,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":262,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":263,"author":{"gitId":"kum-wh"},"content":"     * Displays a farewell message when the user exit the program.","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":265,"author":{"gitId":"KVignesh122"},"content":"    public static void displayExitMessage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":266,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(BYE_LOGO);","lastModifiedDate":"2021-10-10"},{"lineNumber":267,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"Thank you for using mTracker.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":268,"author":{"gitId":"KVignesh122"},"content":"                + \"MAY THE MARKETS BE WITH YOU!!!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":269,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":270,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":271,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":272,"author":{"gitId":"kum-wh"},"content":"     * Displays to the user the current workspace the user is in.","lastModifiedDate":"2021-11-06"},{"lineNumber":273,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":274,"author":{"gitId":"kum-wh"},"content":"     * @param workspace The current workspace the user is in.","lastModifiedDate":"2021-11-06"},{"lineNumber":275,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":276,"author":{"gitId":"KVignesh122"},"content":"    public static void displayPrompter(String workspace) {","lastModifiedDate":"2021-10-31"},{"lineNumber":277,"author":{"gitId":"KVignesh122"},"content":"        String prompter \u003d \"mTracker$\" + workspace + \"\u003e \";","lastModifiedDate":"2021-10-31"},{"lineNumber":278,"author":{"gitId":"KVignesh122"},"content":"        System.out.print(prompter);","lastModifiedDate":"2021-10-31"},{"lineNumber":279,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":280,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":281,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":282,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":283,"author":{"gitId":"kum-wh"},"content":"     * Prompts the user to enter the parameters to edit.","lastModifiedDate":"2021-11-06"},{"lineNumber":284,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":285,"author":{"gitId":"kum-wh"},"content":"     * @param instrument The instrument being edited.","lastModifiedDate":"2021-11-06"},{"lineNumber":286,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":287,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditInstrumentFirstInstruction(Instrument instrument) {","lastModifiedDate":"2021-10-24"},{"lineNumber":288,"author":{"gitId":"kum-wh"},"content":"        System.out.println(TAB + \"Please enter one or more \" + instrument.getType()","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"kum-wh"},"content":"                + \" parameters to edit separated by spaces only.\" + System.lineSeparator()","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"kum-wh"},"content":"                + TAB + instrument.editParameterInstructions());","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":292,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":293,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":294,"author":{"gitId":"kum-wh"},"content":"     * Informs the user that a certain input parameters is invalid and will not be processed.","lastModifiedDate":"2021-11-06"},{"lineNumber":295,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":296,"author":{"gitId":"kum-wh"},"content":"     * @param inputAttribute The input parameters that is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":297,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":298,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditInvalidAttribute(String inputAttribute) {","lastModifiedDate":"2021-10-24"},{"lineNumber":299,"author":{"gitId":"kum-wh"},"content":"        System.out.println(inputAttribute + \" is an invalid attribute of this instrument and will be ignored.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":300,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":301,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":302,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":303,"author":{"gitId":"kum-wh"},"content":"     * Prompts the user to enter the new name.","lastModifiedDate":"2021-11-06"},{"lineNumber":304,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":305,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditName() {","lastModifiedDate":"2021-10-24"},{"lineNumber":306,"author":{"gitId":"kum-wh"},"content":"        System.out.println(TAB + EDIT_NAME_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":308,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":309,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":310,"author":{"gitId":"kum-wh"},"content":"     * Prompts the user to enter the new current price.","lastModifiedDate":"2021-11-06"},{"lineNumber":311,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":312,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditCurrentPrice() {","lastModifiedDate":"2021-10-24"},{"lineNumber":313,"author":{"gitId":"kum-wh"},"content":"        System.out.println(TAB + EDIT_CURRENT_PRICE_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":314,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":315,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":316,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":317,"author":{"gitId":"kum-wh"},"content":"     * Prompts the user to enter the new sentiment value.","lastModifiedDate":"2021-11-06"},{"lineNumber":318,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":319,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditSentiment() {","lastModifiedDate":"2021-10-24"},{"lineNumber":320,"author":{"gitId":"kum-wh"},"content":"        System.out.println(TAB + EDIT_SENTIMENT_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":321,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":322,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":323,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":324,"author":{"gitId":"kum-wh"},"content":"     * Prompts the user to enter the new remarks.","lastModifiedDate":"2021-11-06"},{"lineNumber":325,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":326,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditRemark() {","lastModifiedDate":"2021-10-24"},{"lineNumber":327,"author":{"gitId":"kum-wh"},"content":"        System.out.println(TAB + EDIT_REMARKS_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":328,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":329,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":330,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":331,"author":{"gitId":"kum-wh"},"content":"     * Prompts the user to enter the new past return value.","lastModifiedDate":"2021-11-06"},{"lineNumber":332,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":333,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditReturn() {","lastModifiedDate":"2021-10-24"},{"lineNumber":334,"author":{"gitId":"kum-wh"},"content":"        System.out.println(TAB + EDIT_RETURN_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":335,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":336,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":337,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":338,"author":{"gitId":"kum-wh"},"content":"     * Prompts the user to enter the new entry price.","lastModifiedDate":"2021-11-06"},{"lineNumber":339,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":340,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditEntryPrice() {","lastModifiedDate":"2021-10-24"},{"lineNumber":341,"author":{"gitId":"kum-wh"},"content":"        System.out.println(TAB + EDIT_ENTRY_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":342,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":343,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":344,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":345,"author":{"gitId":"kum-wh"},"content":"     * Prompts the user to enter the new exit price.","lastModifiedDate":"2021-11-06"},{"lineNumber":346,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":347,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditExitPrice() {","lastModifiedDate":"2021-10-24"},{"lineNumber":348,"author":{"gitId":"kum-wh"},"content":"        System.out.println(TAB + EDIT_EXIT_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":349,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":350,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":351,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":352,"author":{"gitId":"kum-wh"},"content":"     * Prompts the user to enter the new expiry value.","lastModifiedDate":"2021-11-06"},{"lineNumber":353,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":354,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditExpiry() {","lastModifiedDate":"2021-10-24"},{"lineNumber":355,"author":{"gitId":"kum-wh"},"content":"        System.out.println(TAB + EDIT_EXPIRY_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":356,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":357,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":358,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":359,"author":{"gitId":"kum-wh"},"content":"     * Prompts the user to enter the new done status.","lastModifiedDate":"2021-11-06"},{"lineNumber":360,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":361,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditStatus() {","lastModifiedDate":"2021-11-03"},{"lineNumber":362,"author":{"gitId":"kum-wh"},"content":"        System.out.println(TAB + EDIT_STATUS_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":363,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":364,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":365,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":366,"author":{"gitId":"kum-wh"},"content":"     * Displays the parameters of the instrument before and after editing.","lastModifiedDate":"2021-11-06"},{"lineNumber":367,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":368,"author":{"gitId":"kum-wh"},"content":"     * @param beforeEdit The parameters of the instrument before editing.","lastModifiedDate":"2021-11-06"},{"lineNumber":369,"author":{"gitId":"kum-wh"},"content":"     * @param afterEdit The parameters of the instrument after editing.","lastModifiedDate":"2021-11-06"},{"lineNumber":370,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":371,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditChanges(String beforeEdit, String afterEdit) {","lastModifiedDate":"2021-11-04"},{"lineNumber":372,"author":{"gitId":"kum-wh"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-10-25"},{"lineNumber":373,"author":{"gitId":"kum-wh"},"content":"        System.out.println(\"Before:\");","lastModifiedDate":"2021-10-25"},{"lineNumber":374,"author":{"gitId":"kum-wh"},"content":"        System.out.println(beforeEdit);","lastModifiedDate":"2021-10-25"},{"lineNumber":375,"author":{"gitId":"kum-wh"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-10-25"},{"lineNumber":376,"author":{"gitId":"kum-wh"},"content":"        System.out.println(\"Changed To:\");","lastModifiedDate":"2021-10-25"},{"lineNumber":377,"author":{"gitId":"kum-wh"},"content":"        System.out.println(afterEdit);","lastModifiedDate":"2021-10-25"},{"lineNumber":378,"author":{"gitId":"kum-wh"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-10-25"},{"lineNumber":379,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":380,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":381,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":382,"author":{"gitId":"kum-wh"},"content":"     * Displays the parameters of the instrument before and after editing if changes were made,","lastModifiedDate":"2021-11-06"},{"lineNumber":383,"author":{"gitId":"kum-wh"},"content":"     * else display that no changes were made.","lastModifiedDate":"2021-11-06"},{"lineNumber":384,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":385,"author":{"gitId":"kum-wh"},"content":"     * @param beforeEdit The parameters of the instrument before editing.","lastModifiedDate":"2021-11-06"},{"lineNumber":386,"author":{"gitId":"kum-wh"},"content":"     * @param afterEdit The parameters of the instrument after editing.","lastModifiedDate":"2021-11-06"},{"lineNumber":387,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":388,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditBeforeAfter(String beforeEdit, String afterEdit) {","lastModifiedDate":"2021-11-04"},{"lineNumber":389,"author":{"gitId":"kum-wh"},"content":"        if (beforeEdit.equals(afterEdit)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":390,"author":{"gitId":"kum-wh"},"content":"            displayEditNoChange();","lastModifiedDate":"2021-11-04"},{"lineNumber":391,"author":{"gitId":"kum-wh"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":392,"author":{"gitId":"kum-wh"},"content":"            displayEditChanges(beforeEdit, afterEdit);","lastModifiedDate":"2021-11-04"},{"lineNumber":393,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":394,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":395,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":396,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":397,"author":{"gitId":"kum-wh"},"content":"     * Informs the user no changes were made to if no changes were made in the edit function.","lastModifiedDate":"2021-11-06"},{"lineNumber":398,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":399,"author":{"gitId":"kum-wh"},"content":"    public static void displayEditNoChange() {","lastModifiedDate":"2021-11-03"},{"lineNumber":400,"author":{"gitId":"kum-wh"},"content":"        System.out.println(\"No changes to instrument was made.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":401,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":402,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":403,"author":{"gitId":"kum-wh"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":404,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":405,"author":{"gitId":"kum-wh"},"content":"     * Displays the message that greet the user on start up.","lastModifiedDate":"2021-11-06"},{"lineNumber":406,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":407,"author":{"gitId":"KVignesh122"},"content":"    public static void greetAtStartUp() {","lastModifiedDate":"2021-10-09"},{"lineNumber":408,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-10-10"},{"lineNumber":409,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2021-10-10"},{"lineNumber":410,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"Hello! I am mTracker, your personal assistant bot that\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":411,"author":{"gitId":"KVignesh122"},"content":"                + \"helps you keep track of the markets.\\nWhat should I do for you now?\");","lastModifiedDate":"2021-10-25"},{"lineNumber":412,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(LINE_DECORATOR);","lastModifiedDate":"2021-10-10"},{"lineNumber":413,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":414,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kum-wh":152,"theodorekwok":15,"williamlamjy":32,"KVignesh122":215}},{"path":"src/test/java/seedu/mtracker/MTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"class MTrackerTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"theodorekwok":2,"-":10}},{"path":"src/test/java/seedu/mtracker/commons/ValidateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.commons;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"class ValidateTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"    public static final String EMPTY_INPUT \u003d \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"    public static final String VALID_TEST_NAME \u003d \"testName\";","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public static final String VALID_PRICE \u003d \"123.43\";","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    public static final String INVALID_PRICE \u003d \"32fvr\";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] VALID_SENTIMENTS \u003d {\"positive\", \"neutral\", \"negative\"};","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"    public static final String INVALID_SENTIMENT \u003d \"invalid\";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"    public static final String INVALID_EXPIRY \u003d \"18 Oct\";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"    public static final int DAYS_DIFFERENCE \u003d 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    public static final LocalDate FUTURE_DATE \u003d LocalDate.now().plusDays(DAYS_DIFFERENCE);","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    public static final LocalDate PAST_DATE \u003d LocalDate.now().minusDays(DAYS_DIFFERENCE);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"    public static final String VALID_TEST_INSTRUMENT \u003d \"testInstrument\";","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    void validateName_validName_expectSuccess() {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"        assertTrue(Validate.isValidName(VALID_TEST_NAME, VALID_TEST_INSTRUMENT));","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"    void validateName_emptyName_expectFailure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"        assertFalse(Validate.isValidName(EMPTY_INPUT, VALID_TEST_INSTRUMENT));","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"    void validateCurrentPrice_validNumber_expectSuccess() {","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"        assertTrue(Validate.isValidPrice(VALID_PRICE));","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"    void validateCurrentPrice_invalidNumber_expectFailure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"        assertFalse(Validate.isValidPrice(INVALID_PRICE));","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"    void validateCurrentPrice_emptyNumber_expectFailure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"        assertFalse(Validate.isValidPrice(EMPTY_INPUT));","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"    void validateSentiment_validSentiment_expectSuccess() {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"        Arrays.stream(VALID_SENTIMENTS)","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"                .forEach((sentiment) -\u003e assertTrue(Validate.isValidSentiment(sentiment)));","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"    void validateSentiment_invalidSentiment_expectFailure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"        assertFalse(Validate.isValidSentiment(INVALID_SENTIMENT));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"    void validateSentiment_emptySentiment_expectFailure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"        assertFalse(Validate.isValidSentiment(EMPTY_INPUT));","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"theodorekwok"},"content":"    //@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"theodorekwok"},"content":"    void addExpiry_validExpiryInFuture_expectSuccess() {","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"theodorekwok"},"content":"        assertTrue(Validate.isValidExpiry(FUTURE_DATE.toString()));","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"theodorekwok"},"content":"    void addExpiry_emptyExpiry_expectFailure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"theodorekwok"},"content":"        assertFalse(Validate.isValidExpiry(EMPTY_INPUT));","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"theodorekwok"},"content":"    void addExpiry_invalidExpiry_expectFailure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"theodorekwok"},"content":"        assertFalse(Validate.isValidExpiry(INVALID_EXPIRY));","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"theodorekwok"},"content":"    void addExpiry_validExpiryButIsInPast_expectFailure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"theodorekwok"},"content":"        assertFalse(Validate.isValidExpiry(PAST_DATE.toString()));","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"theodorekwok":29,"williamlamjy":59,"KVignesh122":1}},{"path":"src/test/java/seedu/mtracker/console/AddCryptoParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"williamlamjy"},"content":"class AddCryptoParserTest extends GeneralInstrumentParserTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"williamlamjy"},"content":"    public static final int PARAMETER_SIZE \u003d 5;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_NO_REMARKS \u003d \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_WITH_REMARKS \u003d \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] EXPECTED_PARAMS_NO_REMARKS \u003d {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"        \"TTTXXX\",","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"        \"23.4\",","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"        \"positive\",","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"        String.valueOf(FUTURE_DATE),","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"        \"\",","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] EXPECTED_PARAMS_WITH_REMARKS \u003d {","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"        \"TTTXXX\",","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"        \"23.4\",","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"        \"positive\",","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"        String.valueOf(FUTURE_DATE),","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"        \"fooRemarks\"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_INVALID_NAME \u003d SEPARATOR_SPECIFIER.repeat(2) + \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_INVALID_PRICE \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"2sd3.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_INVALID_SENTIMENT \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"foobar\"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER.repeat(2) + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_EMPTY_EXPIRY \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER.repeat(2) + FUTURE_DATE","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_INVALID_EXPIRY \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"2021/11/1\"","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"1 January 2021\"","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_PAST_EXPIRY \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + PAST_DATE","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + PAST_DATE","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"    //@@KVignesh122","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_REMARKS \u003d \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_NAME \u003d SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_PRICE \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"2sd3.4\"","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_SENTIMENT \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"foobar\"","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER.repeat(2) + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_EXPIRY \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER.repeat(2) + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"williamlamjy"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"williamlamjy"},"content":"    //@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"williamlamjy"},"content":"    void testCryptoParameters(String input, String[] expectedParameters) throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"williamlamjy"},"content":"        simulateConsoleInput(input);","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"williamlamjy"},"content":"        AddCryptoParser testCryptoParser \u003d new AddCryptoParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"williamlamjy"},"content":"        verifyInstrumentParameters(testCryptoParser, expectedParameters);","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"williamlamjy"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"williamlamjy"},"content":"    public int getParameterSize() {","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"williamlamjy"},"content":"        return PARAMETER_SIZE;","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"williamlamjy"},"content":"    void addCryptoParams_noRemarks_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"williamlamjy"},"content":"        testCryptoParameters(USER_INPUT_NO_REMARKS, EXPECTED_PARAMS_NO_REMARKS);","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"williamlamjy"},"content":"    void addCryptoParams_allValidParametersWithRemarks_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"williamlamjy"},"content":"        testCryptoParameters(USER_INPUT_WITH_REMARKS,","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"williamlamjy"},"content":"                EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"williamlamjy"},"content":"    void addCryptoParams_tryInvalidNameMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"williamlamjy"},"content":"        testCryptoParameters(USER_INPUT_TRY_INVALID_NAME, EXPECTED_PARAMS_NO_REMARKS);","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"williamlamjy"},"content":"    void addCryptoParams_tryInvalidPriceMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"williamlamjy"},"content":"        testCryptoParameters(USER_INPUT_TRY_INVALID_PRICE,","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"williamlamjy"},"content":"                EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"williamlamjy"},"content":"    void addCryptoParams_tryInvalidSentimentMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"williamlamjy"},"content":"        testCryptoParameters(USER_INPUT_TRY_INVALID_SENTIMENT,","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"williamlamjy"},"content":"                EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-11-01"},{"lineNumber":149,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"williamlamjy"},"content":"    void addCryptoParams_tryEmptyExpiryMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"williamlamjy"},"content":"        testCryptoParameters(USER_INPUT_TRY_EMPTY_EXPIRY,","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"williamlamjy"},"content":"                EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-11-01"},{"lineNumber":155,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"williamlamjy"},"content":"    void addForexParams_tryInvalidDateMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"williamlamjy"},"content":"        testCryptoParameters(USER_INPUT_TRY_INVALID_EXPIRY, EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"williamlamjy"},"content":"    void addForexParams_tryPastDateMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"williamlamjy"},"content":"        testCryptoParameters(USER_INPUT_TRY_PAST_EXPIRY, EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":166,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"williamlamjy"},"content":"    //@@KVignesh122","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"williamlamjy"},"content":"    void addCryptoParams_abortAtName_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e testCryptoParameters(USER_INPUT_TRY_ABORT_AT_NAME, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"williamlamjy"},"content":"    void addCryptoParams_abortAtPrice_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e testCryptoParameters(USER_INPUT_TRY_ABORT_AT_PRICE, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":180,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"williamlamjy"},"content":"    void addCryptoParams_abortAtSentiment_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":182,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":183,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e testCryptoParameters(USER_INPUT_TRY_ABORT_AT_SENTIMENT, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":184,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":185,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":186,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":187,"author":{"gitId":"williamlamjy"},"content":"    void addCryptoParams_abortAtExpiry_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":188,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":189,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e testCryptoParameters(USER_INPUT_TRY_ABORT_AT_EXPIRY, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":190,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":191,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":192,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"williamlamjy"},"content":"    void addCryptoParams_abortAtRemark_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":194,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e testCryptoParameters(USER_INPUT_TRY_ABORT_AT_REMARKS, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":196,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":197,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"theodorekwok":1,"williamlamjy":194,"KVignesh122":2}},{"path":"src/test/java/seedu/mtracker/console/AddEtfParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"//@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"public class AddEtfParserTest extends GeneralInstrumentParserTest {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"    public static final int PARAMETER_SIZE \u003d 5;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_NO_REMARKS \u003d \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"50.0\"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_All_PARAM \u003d \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"50.0\"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"    public static final String[] EXPECTED_PARAMS_NO_REMARKS \u003d {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"        \"TTTXXX\",","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"        \"23.4\",","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"        \"positive\",","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"        \"50.0\",","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"        \"\",","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"    };","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    public static final String[] EXPECTED_PARAMS_ALL_PARAM \u003d {","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"        \"TTTXXX\",","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"        \"23.4\",","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"        \"positive\",","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"        \"50.0\",","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"        \"fooRemarks\"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"    };","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"    public static final String[] EXPECTED_PARAMS_INVALID_RETURNS \u003d {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"        \"TTTXXX\",","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"        \"23.4\",","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"        \"positive\",","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"        \"-101.0\",","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"        \"fooRemarks\"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"    };","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_TRY_INVALID_NAME \u003d SEPARATOR_SPECIFIER.repeat(2) + \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"50.0\"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_TRY_INVALID_PRICE \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"2sd3.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"50.0\"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_TRY_INVALID_SENTIMENT \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"foobar\"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER.repeat(2) + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"50.0\"","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_TRY_EMPTY_RETURNS \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"\"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"    //@@KVignesh122","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_NAME \u003d SEPARATOR_SPECIFIER.repeat(2) + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_PRICE \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"2sd3.4\"","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_SENTIMENT \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER.repeat(2) + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_RETURNS \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_REMARKS \u003d \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + \"50.0\"","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"    //@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"    void testEtfParameters(String input, String[] expectedEtfParameters) throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"        simulateConsoleInput(input);","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"kum-wh"},"content":"        AddEtfParser testEtfParser \u003d new AddEtfParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"kum-wh"},"content":"        verifyInstrumentParameters(testEtfParser, expectedEtfParameters);","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"kum-wh"},"content":"    public int getParameterSize() {","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"        return PARAMETER_SIZE;","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"kum-wh"},"content":"    void addEtfParams_noRemarks_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"        testEtfParameters(USER_INPUT_NO_REMARKS, EXPECTED_PARAMS_NO_REMARKS);","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"kum-wh"},"content":"    void addEtfParams_noPastReturn_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"        testEtfParameters(USER_INPUT_TRY_EMPTY_RETURNS, EXPECTED_PARAMS_INVALID_RETURNS);","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"kum-wh"},"content":"    void addEtfParams_allParameters_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"kum-wh"},"content":"        testEtfParameters(USER_INPUT_All_PARAM, EXPECTED_PARAMS_ALL_PARAM);","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"kum-wh"},"content":"    void addEftParams_InvalidName_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"kum-wh"},"content":"        testEtfParameters(USER_INPUT_TRY_INVALID_NAME, EXPECTED_PARAMS_ALL_PARAM);","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"kum-wh"},"content":"    void addEftParams_InvalidPrice_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"kum-wh"},"content":"        testEtfParameters(USER_INPUT_TRY_INVALID_PRICE, EXPECTED_PARAMS_ALL_PARAM);","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"kum-wh"},"content":"    void addEtfParams_InvalidSentiment_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"kum-wh"},"content":"        testEtfParameters(USER_INPUT_TRY_INVALID_SENTIMENT, EXPECTED_PARAMS_ALL_PARAM);","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"kum-wh"},"content":"    //@@KVignesh122","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"    void addEtfParams_abortAtName_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"kum-wh"},"content":"            () -\u003e testEtfParameters(USER_INPUT_TRY_ABORT_AT_NAME, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"kum-wh"},"content":"    void addEtfParams_abortAtPrice_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"kum-wh"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"kum-wh"},"content":"            () -\u003e testEtfParameters(USER_INPUT_TRY_ABORT_AT_PRICE, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"kum-wh"},"content":"    void addEtfParams_abortAtSentiment_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"kum-wh"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"kum-wh"},"content":"            () -\u003e testEtfParameters(USER_INPUT_TRY_ABORT_AT_SENTIMENT, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"kum-wh"},"content":"    void addEtfParams_abortAtReturns_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"kum-wh"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"kum-wh"},"content":"            () -\u003e testEtfParameters(USER_INPUT_TRY_ABORT_AT_RETURNS, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"kum-wh"},"content":"    void addEtfParams_abortAtRemark_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"kum-wh"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"kum-wh"},"content":"            () -\u003e testEtfParameters(USER_INPUT_TRY_ABORT_AT_REMARKS, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kum-wh":171,"theodorekwok":1,"KVignesh122":1}},{"path":"src/test/java/seedu/mtracker/console/AddForexParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"//@@KVignesh122","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"class AddForexParserTest extends GeneralInstrumentParserTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"    public static final int PARAMETER_SIZE \u003d 7;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"    public static final String[] EXPECTED_PARAMS_NO_REMARKS \u003d {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"        \"TTTXXX\",","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"        \"1.11\",","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"        \"positive\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"        \"1.15\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"        \"1.30\",","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"        FUTURE_DATE.toString(),","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"        \"\"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"    };","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"    public static final String[] EXPECTED_PARAMS_WITH_REMARKS \u003d {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"        \"TTTXXX\",","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"        \"0.81\",","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"        \"negative\",","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"        \"0.79\",","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"        \"0.70\",","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"        FUTURE_DATE.toString(),","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"        \"fooRemarks\"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"    };","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"    public static final String USER_INPUT_NO_REMARKS \u003d \"TTTXXX\"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"1.11\"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"1.15\"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"1.30\"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_REMARKS \u003d \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"1.11\"","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"1.15\"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"1.30\"","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"    public static final String USER_INPUT_WITH_REMARKS \u003d \"TTTXXX\"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"0.81\"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"negative\"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"0.79\"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"0.70\"","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_INVALID_NAME \u003d SEPARATOR_SPECIFIER.repeat(2) + \"TTXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"1.11\"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"1.15\"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"1.30\"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"KVignesh122"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_NAME \u003d SEPARATOR_SPECIFIER.repeat(2) + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_INVALID_PRICE \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"lol\"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"0.81\"","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"negative\"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"foobar\"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"0.79\"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER.repeat(2) + \"0.70\"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"KVignesh122"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_CURRENT_PRICE \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"lol\"","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"    public static final String USER_INPUT_TRY_INVALID_SENTIMENT \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"0.81\"","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"foobar\"","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER.repeat(2) + \"negative\"","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"0.79\"","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"0.70\"","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"williamlamjy"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"KVignesh122"},"content":"    public static final String USER_INPUT_TRY_INVALID_EXPIRY \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"0.81\"","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"foobar\"","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"negative\"","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"0.79\"","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"0.70\"","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER.repeat(2) + \"testDate\"","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"31/12/2021\"","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"2021.01.01\"","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"KVignesh122"},"content":"    public static final String USER_INPUT_TRY_PAST_EXPIRY \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"0.81\"","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"foobar\"","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"negative\"","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"0.79\"","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"0.70\"","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + PAST_DATE","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + PAST_DATE","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + FUTURE_DATE","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"KVignesh122"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_SENTIMENT \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"0.81\"","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER.repeat(2) + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"KVignesh122"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_ENTRY_PRICE \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"lol\"","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"0.81\"","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"negative\"","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"KVignesh122"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_EXIT_PRICE \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"lol\"","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"0.81\"","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"negative\"","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"0.81\"","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"KVignesh122"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_EXPIRY \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"0.81\"","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"foobar\"","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER.repeat(2) + \"negative\"","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"0.79\"","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + \"0.70\"","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"KVignesh122"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"KVignesh122"},"content":"    void testForexParameters(String input, String[] expectedForexParameters) throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"KVignesh122"},"content":"        simulateConsoleInput(input);","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"KVignesh122"},"content":"        AddForexParser testForexParser \u003d new AddForexParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"KVignesh122"},"content":"        verifyInstrumentParameters(testForexParser, expectedForexParameters);","lastModifiedDate":"2021-11-01"},{"lineNumber":148,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":149,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":150,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":151,"author":{"gitId":"KVignesh122"},"content":"    public int getParameterSize() {","lastModifiedDate":"2021-11-01"},{"lineNumber":152,"author":{"gitId":"KVignesh122"},"content":"        return PARAMETER_SIZE;","lastModifiedDate":"2021-11-01"},{"lineNumber":153,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_allValidParameters_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"KVignesh122"},"content":"        testForexParameters(USER_INPUT_NO_REMARKS, EXPECTED_PARAMS_NO_REMARKS);","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_allValidParametersWithRemarks_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"KVignesh122"},"content":"        testForexParameters(USER_INPUT_WITH_REMARKS, EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_tryInvalidNameMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"KVignesh122"},"content":"        testForexParameters(USER_INPUT_TRY_INVALID_NAME, EXPECTED_PARAMS_NO_REMARKS);","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_tryInvalidPriceMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"KVignesh122"},"content":"        testForexParameters(USER_INPUT_TRY_INVALID_PRICE, EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_tryInvalidSentimentMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"KVignesh122"},"content":"        testForexParameters(USER_INPUT_TRY_INVALID_SENTIMENT, EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":180,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":181,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_tryInvalidDateMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":182,"author":{"gitId":"KVignesh122"},"content":"        testForexParameters(USER_INPUT_TRY_INVALID_EXPIRY, EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-11-01"},{"lineNumber":183,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":184,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":185,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":186,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_tryPastDateMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":187,"author":{"gitId":"KVignesh122"},"content":"        testForexParameters(USER_INPUT_TRY_PAST_EXPIRY, EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-11-01"},{"lineNumber":188,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":189,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":190,"author":{"gitId":"KVignesh122"},"content":"    // @@KVignesh122","lastModifiedDate":"2021-11-03"},{"lineNumber":191,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":192,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_abortAtName_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"KVignesh122"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":194,"author":{"gitId":"KVignesh122"},"content":"            () -\u003e testForexParameters(USER_INPUT_TRY_ABORT_AT_NAME, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":196,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":197,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_abortAtCurrentPrice_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"KVignesh122"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":200,"author":{"gitId":"KVignesh122"},"content":"            () -\u003e testForexParameters(USER_INPUT_TRY_ABORT_AT_CURRENT_PRICE, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":201,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":202,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":203,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":204,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_abortAtSentiment_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":205,"author":{"gitId":"KVignesh122"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":206,"author":{"gitId":"KVignesh122"},"content":"            () -\u003e testForexParameters(USER_INPUT_TRY_ABORT_AT_SENTIMENT, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":207,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":208,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":209,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":210,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_abortAtExpiry_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":211,"author":{"gitId":"KVignesh122"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":212,"author":{"gitId":"KVignesh122"},"content":"            () -\u003e testForexParameters(USER_INPUT_TRY_ABORT_AT_EXPIRY, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":213,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":214,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":215,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":216,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_abortAtRemark_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":217,"author":{"gitId":"KVignesh122"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":218,"author":{"gitId":"KVignesh122"},"content":"            () -\u003e testForexParameters(USER_INPUT_TRY_ABORT_AT_REMARKS, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":219,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":220,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":221,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":222,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_abortAtEntryPrice_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":223,"author":{"gitId":"KVignesh122"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":224,"author":{"gitId":"KVignesh122"},"content":"            () -\u003e testForexParameters(USER_INPUT_TRY_ABORT_AT_ENTRY_PRICE, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":225,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":226,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":227,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":228,"author":{"gitId":"KVignesh122"},"content":"    void addForexParams_abortAtExitPrice_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":229,"author":{"gitId":"KVignesh122"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":230,"author":{"gitId":"KVignesh122"},"content":"            () -\u003e testForexParameters(USER_INPUT_TRY_ABORT_AT_EXIT_PRICE, EXPECTED_PARAMS_NO_REMARKS));","lastModifiedDate":"2021-11-03"},{"lineNumber":231,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":232,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"theodorekwok":8,"williamlamjy":35,"KVignesh122":189}},{"path":"src/test/java/seedu/mtracker/console/AddStockParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"class AddStockParserTest extends GeneralInstrumentParserTest {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"    public static final int PARAMETER_SIZE \u003d 4;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"    public static final String USER_INPUT_NO_REMARKS \u003d \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"    public static final String USER_INPUT_WITH_REMARKS \u003d \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"    public static final String[] EXPECTED_PARAMS_NO_REMARKS \u003d {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"        \"TTTXXX\",","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"        \"23.4\",","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"        \"positive\",","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"        \"\",","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"    };","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"    public static final String[] EXPECTED_PARAMS_WITH_REMARKS \u003d {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"        \"TTTXXX\",","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"        \"23.4\",","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"theodorekwok"},"content":"        \"positive\",","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":"        \"fooRemarks\"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"theodorekwok"},"content":"    };","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"    public static final String USER_INPUT_TRY_INVALID_NAME \u003d SEPARATOR_SPECIFIER.repeat(2) + \" \"","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"    public static final String USER_INPUT_TRY_INVALID_PRICE \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"2sd3.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"    public static final String USER_INPUT_TRY_INVALID_SENTIMENT \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"foobar\"","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER.repeat(2) + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"fooRemarks\";","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"    // @@KVignesh122","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"theodorekwok"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_NAME \u003d ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"theodorekwok"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_PRICE \u003d \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"theodorekwok"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_SENTIMENT \u003d SEPARATOR_SPECIFIER + \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"foobar\"","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER.repeat(2) + DONT_ABORT","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"theodorekwok"},"content":"    public static final String USER_INPUT_TRY_ABORT_AT_REMARK \u003d \"TTTXXX\"","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"23.4\"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + \"positive\"","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"theodorekwok"},"content":"            + SEPARATOR_SPECIFIER + ABORT;","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"theodorekwok"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"theodorekwok"},"content":"    //@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"theodorekwok"},"content":"    void testStockParameters(String input, String[] expectedStockParameters) throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"theodorekwok"},"content":"        simulateConsoleInput(input);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"theodorekwok"},"content":"        AddStockParser testStockParser \u003d new AddStockParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"theodorekwok"},"content":"        verifyInstrumentParameters(testStockParser, expectedStockParameters);","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"theodorekwok"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"theodorekwok"},"content":"    public int getParameterSize() {","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"theodorekwok"},"content":"        return PARAMETER_SIZE;","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"theodorekwok"},"content":"    void addStockParams_allValidParameters_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"theodorekwok"},"content":"        testStockParameters(USER_INPUT_NO_REMARKS, EXPECTED_PARAMS_NO_REMARKS);","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"theodorekwok"},"content":"    void addStockParams_allValidParametersWithRemarks_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"theodorekwok"},"content":"        testStockParameters(USER_INPUT_WITH_REMARKS, EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"theodorekwok"},"content":"    void addStockParams_tryInvalidNameMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"theodorekwok"},"content":"        testStockParameters(USER_INPUT_TRY_INVALID_NAME, EXPECTED_PARAMS_NO_REMARKS);","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"theodorekwok"},"content":"    void addStockParams_tryInvalidPriceMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"theodorekwok"},"content":"        testStockParameters(USER_INPUT_TRY_INVALID_PRICE, EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"theodorekwok"},"content":"    void addStockParams_tryInvalidSentimentMultipleTimes_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"theodorekwok"},"content":"        testStockParameters(USER_INPUT_TRY_INVALID_SENTIMENT, EXPECTED_PARAMS_WITH_REMARKS);","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"theodorekwok"},"content":"    //@@KVignesh122","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"theodorekwok"},"content":"    void addStockParams_abortAtName_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e testStockParameters(USER_INPUT_TRY_ABORT_AT_NAME, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"theodorekwok"},"content":"    void addStockParams_abortAtPrice_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e testStockParameters(USER_INPUT_TRY_ABORT_AT_PRICE, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"theodorekwok"},"content":"    void addStockParams_abortAtSentiment_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e testStockParameters(USER_INPUT_TRY_ABORT_AT_SENTIMENT, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"theodorekwok"},"content":"    void addStockParams_abortAtRemark_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e testStockParameters(USER_INPUT_TRY_ABORT_AT_REMARK, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"theodorekwok":134,"KVignesh122":3}},{"path":"src/test/java/seedu/mtracker/console/EditInstrumentParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import seedu.mtracker.model.subinstrument.Stock;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"//@@author kum-wh","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"public class EditInstrumentParserTest extends GeneralInstrumentParserTest {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_EDIT_NAME_AND_REMARK \u003d \"TTTXXX\" + SEPARATOR_SPECIFIER + \"Test Remark\";","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    public static final String[] EXPECTED_KEYS_NAME_AND_REMARK \u003d {\"name\", \"remarks\"};","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    public static final String[] EXPECTED_OUTPUT_NAME_AND_REMARK \u003d {\"TTTXXX\", \"Test Remark\"};","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"    public static final HashSet\u003cString\u003e PARAM_INPUT_NAME_AND_REMARK \u003d new HashSet\u003c\u003e(Arrays.asList(\"name\", \"remarks\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_EDIT_CURRENT_PRICE_AND_SENTIMENT \u003d \"100\" + SEPARATOR_SPECIFIER + \"neutral\";","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    public static final String[] EXPECTED_KEYS_CURRENT_PRICE_AND_SENTIMENT \u003d {\"current-price\", \"sentiment\"};","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    public static final String[] EXPECTED_OUTPUT_CURRENT_PRICE_AND_SENTIMENT \u003d {\"100\", \"neutral\"};","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    public static final HashSet\u003cString\u003e PARAM_INPUT_CURRENT_PRICE_AND_SENTIMENT \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"            new HashSet\u003c\u003e(Arrays.asList(\"current-price\", \"sentiment\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_EDIT_ENTRY_PRICE_AND_EXIT_PRICE \u003d \"10\" + SEPARATOR_SPECIFIER + \"100\";","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"    public static final String[] EXPECTED_KEYS_ENTRY_PRICE_AND_EXIT_PRICE \u003d {\"entry-price\", \"exit-price\"};","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    public static final String[] EXPECTED_OUTPUT_ENTRY_PRICE_AND_EXIT_PRICE \u003d {\"10\", \"100\"};","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"    public static final HashSet\u003cString\u003e PARAM_INPUT_ENTRY_PRICE_AND_EXIT_PRICE \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"            new HashSet\u003c\u003e(Arrays.asList(\"entry-price\", \"exit-price\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"    public static final String USER_INPUT_ABORT \u003d ABORT;","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"    public static final HashSet\u003cString\u003e PARAM_INPUT_NAME \u003d new HashSet\u003c\u003e(List.of(\"name\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"    public static final HashSet\u003cString\u003e PARAM_INPUT_CURRENT_PRICE \u003d new HashSet\u003c\u003e(List.of(\"current-price\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"    public static final HashSet\u003cString\u003e PARAM_INPUT_SENTIMENT \u003d new HashSet\u003c\u003e(List.of(\"sentiment\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"    public static final HashSet\u003cString\u003e PARAM_INPUT_REMARKS \u003d new HashSet\u003c\u003e(List.of(\"remarks\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"    public static final String TEST_NAME \u003d \"Test\";","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"    public static final double TEST_PRICE \u003d 1.0;","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"    public static final String TEST_SENTIMENT \u003d \"neutral\";","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"    public static final String TEST_REMARK \u003d \"\";","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"    public static final Instrument TEST_STOCK \u003d new Stock(TEST_NAME, TEST_PRICE, TEST_SENTIMENT, TEST_REMARK);","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"    public static final int TEST_INDEX \u003d 0;","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"    public static final int SIZE_ZERO \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"    public int getParameterSize() {","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"        return SIZE_ZERO;","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"    HashMap\u003cString,String\u003e initialiseTestResources(String[] expectedKeys, String[] expectedValues) {","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"        HashMap\u003cString, String\u003e expectedResult \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"        assert (expectedKeys.length \u003d\u003d expectedValues.length);","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"        for (int i \u003d 0; i \u003c expectedKeys.length; i++) {","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"            expectedResult.put(expectedKeys[i], expectedValues[i]);","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"        return expectedResult;","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"    void testEditInstrumentParameters(String input, HashSet\u003cString\u003e expectedParameters,","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"                                      String[] expectedKeys, String[] expectedValues) throws OperationAbortedError {","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"        simulateConsoleInput(input);","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"        HashMap\u003cString, String\u003e expectedHash \u003d initialiseTestResources(expectedKeys, expectedValues);","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"        EditInstrumentParser editInstrumentParser \u003d new EditInstrumentParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"        editInstrumentParser.createEditCommand(expectedParameters, TEST_STOCK, TEST_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"        HashMap\u003cString, String\u003e outputHash \u003d EditInstrumentParser.getEditedParametersHash();","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"        assertEquals(outputHash, expectedHash);","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"    void editInstrumentParam_nameAndRemark_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"        testEditInstrumentParameters(USER_INPUT_EDIT_NAME_AND_REMARK,","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"                PARAM_INPUT_NAME_AND_REMARK,","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"                EXPECTED_KEYS_NAME_AND_REMARK,","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"                EXPECTED_OUTPUT_NAME_AND_REMARK);","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"    void editInstrumentParam_currentPriceAndSentiment_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"        testEditInstrumentParameters(USER_INPUT_EDIT_CURRENT_PRICE_AND_SENTIMENT,","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"                PARAM_INPUT_CURRENT_PRICE_AND_SENTIMENT,","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"                EXPECTED_KEYS_CURRENT_PRICE_AND_SENTIMENT,","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"                EXPECTED_OUTPUT_CURRENT_PRICE_AND_SENTIMENT);","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"    void editInstrumentParam_entryAndExitPrice_expectSuccess() throws OperationAbortedError {","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"        testEditInstrumentParameters(USER_INPUT_EDIT_ENTRY_PRICE_AND_EXIT_PRICE,","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"                PARAM_INPUT_ENTRY_PRICE_AND_EXIT_PRICE,","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"                EXPECTED_KEYS_ENTRY_PRICE_AND_EXIT_PRICE,","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"                EXPECTED_OUTPUT_ENTRY_PRICE_AND_EXIT_PRICE);","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"    void editInstrumentParam_abortAtName_expectException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"        assertThrows(OperationAbortedError.class,() -\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"                testEditInstrumentParameters(USER_INPUT_ABORT, PARAM_INPUT_NAME,","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"                        NO_PARAMS_EXPECTED, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"kum-wh"},"content":"    void editInstrumentParam_abortAtCurrentPrice_expectException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"kum-wh"},"content":"        assertThrows(OperationAbortedError.class, () -\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"kum-wh"},"content":"                testEditInstrumentParameters(USER_INPUT_ABORT, PARAM_INPUT_CURRENT_PRICE,","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"kum-wh"},"content":"                        NO_PARAMS_EXPECTED, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"kum-wh"},"content":"    void editInstrumentParam_abortAtSentiments_expectException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"kum-wh"},"content":"        assertThrows(OperationAbortedError.class, () -\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"                testEditInstrumentParameters(USER_INPUT_ABORT, PARAM_INPUT_SENTIMENT,","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"kum-wh"},"content":"                        NO_PARAMS_EXPECTED, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"kum-wh"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"    void editInstrumentParam_abortAtRemarks_expectException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"        assertThrows(OperationAbortedError.class, () -\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"                testEditInstrumentParameters(USER_INPUT_ABORT, PARAM_INPUT_REMARKS,","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"                        NO_PARAMS_EXPECTED, NO_PARAMS_EXPECTED));","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kum-wh":122,"theodorekwok":3}},{"path":"src/test/java/seedu/mtracker/console/GeneralInstrumentParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"//@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"public abstract class GeneralInstrumentParserTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"    protected static final String SEPARATOR_SPECIFIER \u003d \"%1$s\";","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    protected static final int DAYS_DIFFERENCE \u003d 1;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    protected static final LocalDate FUTURE_DATE \u003d LocalDate.now().plusDays(DAYS_DIFFERENCE);","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"    protected static final LocalDate PAST_DATE \u003d LocalDate.now().minusDays(DAYS_DIFFERENCE);","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"    public static final String ABORT \u003d \"abort\";","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"    public static final String DONT_ABORT \u003d \"don\u0027t abort\";","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"    public static final String[] NO_PARAMS_EXPECTED \u003d {};","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"    void verifyInstrumentParameters(AddInstrumentParser testInstrumentParser, String[] expectedParameters)","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"            throws OperationAbortedError {","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"        testInstrumentParser.initParameters();","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"        testInstrumentParser.getInstrumentParameters();","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"        checkParameters(testInstrumentParser, expectedParameters);","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"    public abstract int getParameterSize();","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"    //@@author theodorekwok","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"    String formatConsoleInput(String input) {","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"theodorekwok"},"content":"        return String.format(input, System.lineSeparator());","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"    void simulateConsoleInput(String input) {","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"        String formattedInput \u003d formatConsoleInput(input);","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"        ByteArrayInputStream inputStreamBytes \u003d new ByteArrayInputStream(formattedInput.getBytes());","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"        System.setIn(inputStreamBytes);","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"    void checkParameters(AddInstrumentParser testInstrumentParser, String[] expectedParameters) {","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"        for (int i \u003d 0; i \u003c getParameterSize(); i++) {","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"theodorekwok"},"content":"            assertEquals(testInstrumentParser.getParameters().get(i), expectedParameters[i]);","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"theodorekwok"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"theodorekwok":18,"KVignesh122":29}},{"path":"src/test/java/seedu/mtracker/console/InputParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.console;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commands.DeleteCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.commands.DoneCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.AlreadyDoneError;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidBoundsError;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidEmptyIndexError;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.InvalidIndexError;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.OperationAbortedError;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.model.Instrument;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.model.subinstrument.Stock;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"theodorekwok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"theodorekwok"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"theodorekwok"},"content":"//@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"theodorekwok"},"content":"class InputParserTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"theodorekwok"},"content":"    public static final int VALID_INDEX \u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"theodorekwok"},"content":"    public static final String[] NO_INDEX_DELETE_INPUT \u003d { \"delete\" };","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"theodorekwok"},"content":"    public static final String[] INVALID_INDEX_DELETE_INPUT \u003d { \"delete\", \"23r2fc\" };","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"theodorekwok"},"content":"    public static final String[] OUT_OF_BOUNDS_INDEX_DELETE_INPUT \u003d { \"delete\", \"23\" };","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"theodorekwok"},"content":"    public static final String[] VALID_INDEX_DELETE_INPUT \u003d { \"delete\", String.valueOf(VALID_INDEX)};","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"theodorekwok"},"content":"    public static final String[] NO_INDEX_DONE_INPUT \u003d { \"done\" };","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"theodorekwok"},"content":"    public static final String[] INVALID_INDEX_DONE_INPUT \u003d { \"done\", \"23r2fc\" };","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"theodorekwok"},"content":"    public static final String[] OUT_OF_BOUNDS_INDEX_DONE_INPUT \u003d { \"done\", \"23\" };","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"theodorekwok"},"content":"    public static final String[] VALID_INDEX_DONE_INPUT \u003d { \"done\", String.valueOf(VALID_INDEX)};","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"theodorekwok"},"content":"    public static final String TEST_NAME \u003d \"Test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"theodorekwok"},"content":"    public static final double TEST_PRICE \u003d 34.5;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"theodorekwok"},"content":"    public static final String TEST_SENTIMENT \u003d \"negative\";","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"theodorekwok"},"content":"    public static final String TEST_REMARK \u003d \"\";","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"theodorekwok"},"content":"    public static final Instrument TEST_STOCK \u003d new Stock(TEST_NAME, TEST_PRICE, TEST_SENTIMENT, TEST_REMARK);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"theodorekwok"},"content":"    public static final int INDEX_OFFSET \u003d 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"theodorekwok"},"content":"    public static ArrayList\u003cInstrument\u003e INSTRUMENTS;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"theodorekwok"},"content":"    public static final String ABORT \u003d \"abort\";","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"theodorekwok"},"content":"    public static final String ADD_WORKSPACE \u003d \"add\";","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"theodorekwok"},"content":"    public static final String EDIT_WORKSPACE \u003d \"edit\";","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"theodorekwok"},"content":"    private InputParser parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"theodorekwok"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"theodorekwok"},"content":"    void initialiseTestResources() {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"theodorekwok"},"content":"        parser \u003d new InputParser();","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"theodorekwok"},"content":"        INSTRUMENTS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"theodorekwok"},"content":"        INSTRUMENTS.add(TEST_STOCK);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"theodorekwok"},"content":"    void getIndexNumber_validIndexProvided_expectSuccess() throws InvalidEmptyIndexError, InvalidIndexError {","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"theodorekwok"},"content":"        parser.getIndexNumber(VALID_INDEX_DELETE_INPUT);","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"theodorekwok"},"content":"        assertEquals(parser.getInstrumentNumber(), VALID_INDEX - INDEX_OFFSET);","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"theodorekwok"},"content":"    void getIndexNumber_noIndexProvided_expectException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(InvalidEmptyIndexError.class,","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e parser.getIndexNumber(NO_INDEX_DELETE_INPUT));","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"theodorekwok"},"content":"    void getIndexNumber_invalidIndexProvided_expectException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(InvalidIndexError.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e parser.getIndexNumber(INVALID_INDEX_DELETE_INPUT));","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"theodorekwok"},"content":"    void getDeleteInstrumentCommand_noIndexProvided_expectException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(InvalidEmptyIndexError.class,","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e parser","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"theodorekwok"},"content":"                    .getDeleteInstrumentCommand(NO_INDEX_DELETE_INPUT, INSTRUMENTS));","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"theodorekwok"},"content":"    void getDeleteInstrumentCommand_invalidIndexProvided_expectException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(InvalidIndexError.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e parser","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"theodorekwok"},"content":"                    .getDeleteInstrumentCommand(INVALID_INDEX_DELETE_INPUT, INSTRUMENTS));","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"theodorekwok"},"content":"    void getDeleteInstrumentCommand_outOfBoundsIndexProvided_expectException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(InvalidBoundsError.class,","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e parser","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"theodorekwok"},"content":"                    .getDeleteInstrumentCommand(OUT_OF_BOUNDS_INDEX_DELETE_INPUT, INSTRUMENTS));","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"theodorekwok"},"content":"    void getDeleteInstrumentCommand_validIndexProvided_expectSuccess()","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"theodorekwok"},"content":"            throws InvalidEmptyIndexError, InvalidBoundsError, InvalidIndexError {","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"theodorekwok"},"content":"        DeleteCommand command \u003d parser","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"theodorekwok"},"content":"                .getDeleteInstrumentCommand(VALID_INDEX_DELETE_INPUT, INSTRUMENTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"theodorekwok"},"content":"        assertEquals(command.getIndex(), VALID_INDEX - INDEX_OFFSET);","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"theodorekwok"},"content":"    //@@author","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"williamlamjy"},"content":"    //@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"williamlamjy"},"content":"    void getDoneInstrumentCommand_noIndexProvided_expectException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidEmptyIndexError.class,","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e parser","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"williamlamjy"},"content":"                    .getDoneInstrumentCommand(NO_INDEX_DONE_INPUT, INSTRUMENTS));","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"williamlamjy"},"content":"    void getDoneInstrumentCommand_invalidIndexProvided_expectException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidIndexError.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e parser","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"williamlamjy"},"content":"                    .getDoneInstrumentCommand(INVALID_INDEX_DONE_INPUT, INSTRUMENTS));","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"williamlamjy"},"content":"    void getDoneInstrumentCommand_outOfBoundsIndexProvided_expectException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidBoundsError.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e parser","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"williamlamjy"},"content":"                    .getDoneInstrumentCommand(OUT_OF_BOUNDS_INDEX_DONE_INPUT, INSTRUMENTS));","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"williamlamjy"},"content":"    void getDoneInstrumentCommand_validIndexProvided_expectSuccess()","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"williamlamjy"},"content":"            throws AlreadyDoneError, InvalidEmptyIndexError, InvalidBoundsError, InvalidIndexError {","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"williamlamjy"},"content":"        DoneCommand command \u003d parser","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"williamlamjy"},"content":"                .getDoneInstrumentCommand(VALID_INDEX_DONE_INPUT, INSTRUMENTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"williamlamjy"},"content":"        assertEquals(command.getIndex(), VALID_INDEX - INDEX_OFFSET);","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"williamlamjy"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"KVignesh122"},"content":"    //@@author KVignesh122","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"KVignesh122"},"content":"    void abortOperation_validAbortInAdd_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"KVignesh122"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"KVignesh122"},"content":"            () -\u003e parser.checkIfAbort(ABORT, ADD_WORKSPACE));","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"KVignesh122"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"KVignesh122"},"content":"    void abortOperation_validAbortInEdit_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"KVignesh122"},"content":"        assertThrows(OperationAbortedError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"KVignesh122"},"content":"            () -\u003e parser.checkIfAbort(ABORT, EDIT_WORKSPACE));","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"KVignesh122"},"content":"    //@@author","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"theodorekwok":102,"williamlamjy":32,"KVignesh122":15}},{"path":"src/test/java/seedu/mtracker/filemanager/ForexDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"theodorekwok"},"content":"package seedu.mtracker.filemanager;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"theodorekwok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyEntryPriceInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyExitPriceInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyExpiryInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEntryPriceSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidExitPriceSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidExpirySavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidRemarksInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"class ForexDecoderTest extends InstrumentDecoderTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_FOREX_EXPIRY_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME,","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"        TEST_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"        TEST_SENTIMENT,","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"        TEST_DONE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"        TEST_ENTRY_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"        TEST_EXIT_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"        FUTURE_INVALID_DATE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"        TEST_REMARK","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_FOREX_EMPTY_EXPIRY_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME,","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"        TEST_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"        TEST_SENTIMENT,","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"        TEST_DONE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"        TEST_ENTRY_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"        TEST_EXIT_PRICE_STRING","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_FOREX_ENTRY_PRICE_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME,","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"        TEST_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"        TEST_SENTIMENT,","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"        TEST_DONE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"        TEST_INVALID_ENTRY_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"        TEST_EXIT_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"        FUTURE_DATE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"        TEST_REMARK","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_FOREX_EMPTY_ENTRY_PRICE_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME,","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"        TEST_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"        TEST_SENTIMENT,","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"        TEST_DONE_STRING","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_FOREX_EXIT_PRICE_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME,","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"        TEST_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"        TEST_SENTIMENT,","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"        TEST_DONE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"        TEST_ENTRY_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"        TEST_INVALID_EXIT_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"        FUTURE_DATE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"        TEST_REMARK","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_FOREX_EMPTY_EXIT_PRICE_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME,","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"        TEST_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"        TEST_SENTIMENT,","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"        TEST_DONE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"        TEST_ENTRY_PRICE_STRING","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_FOREX_REMARKS_WRONG_FORMAT_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME,","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"        TEST_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"        TEST_SENTIMENT,","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"        TEST_DONE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"        TEST_ENTRY_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"        TEST_EXIT_PRICE_STRING,","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"        FUTURE_DATE_STRING","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"williamlamjy"},"content":"    void decodeSpecificAttributes_invalidExpiry_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidExpirySavedInFileError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e ForexDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"williamlamjy"},"content":"                        .validateAndDecodeSpecificAttributes(INVALID_FOREX_EXPIRY_TEXT_SEGMENT));","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"williamlamjy"},"content":"    void decodeSpecificAttributes_emptyExpiry_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidEmptyExpiryInFileError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e ForexDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"williamlamjy"},"content":"                        .validateAndDecodeSpecificAttributes(INVALID_FOREX_EMPTY_EXPIRY_TEXT_SEGMENT));","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"williamlamjy"},"content":"    void decodeSpecificAttributes_invalidEntryPrice_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidEntryPriceSavedInFileError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e ForexDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"williamlamjy"},"content":"                        .validateAndDecodeSpecificAttributes(INVALID_FOREX_ENTRY_PRICE_TEXT_SEGMENT));","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"williamlamjy"},"content":"    void decodeSpecificAttributes_emptyEntryPrice_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidEmptyEntryPriceInFileError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e ForexDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"williamlamjy"},"content":"                        .validateAndDecodeSpecificAttributes(INVALID_FOREX_EMPTY_ENTRY_PRICE_TEXT_SEGMENT));","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"williamlamjy"},"content":"    void decodeSpecificAttributes_invalidExitPrice_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidExitPriceSavedInFileError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e ForexDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"williamlamjy"},"content":"                        .validateAndDecodeSpecificAttributes(INVALID_FOREX_EXIT_PRICE_TEXT_SEGMENT));","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"williamlamjy"},"content":"    void decodeSpecificAttributes_emptyExitPrice_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidEmptyExitPriceInFileError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e ForexDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"williamlamjy"},"content":"                        .validateAndDecodeSpecificAttributes(INVALID_FOREX_EMPTY_EXIT_PRICE_TEXT_SEGMENT));","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"williamlamjy"},"content":"    void decodeSpecificAttributes_remarksFormatNotCorrect_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidRemarksInFileError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e ForexDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"williamlamjy"},"content":"                        .validateAndDecodeSpecificAttributes(INVALID_FOREX_REMARKS_WRONG_FORMAT_TEXT_SEGMENT));","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"williamlamjy"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"theodorekwok":13,"williamlamjy":127}},{"path":"src/test/java/seedu/mtracker/filemanager/InstrumentDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"williamlamjy"},"content":"package seedu.mtracker.filemanager;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"williamlamjy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"williamlamjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidCurrPriceSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyCurrPriceInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyNameInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptySentimentInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidEmptyStatusInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidInstrumentInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidNameSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidSentimentSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"theodorekwok"},"content":"import seedu.mtracker.commons.error.fileerror.InvalidStatusSavedInFileError;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"williamlamjy"},"content":"import seedu.mtracker.model.InstrumentManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"theodorekwok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"williamlamjy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"williamlamjy"},"content":"//@@author williamlamjy","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"williamlamjy"},"content":"class InstrumentDecoderTest {","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_TYPE \u003d \"forex\";","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_INVALID_TYPE \u003d \"nft\";","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_NAME \u003d \"USDSGD\";","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_INVALID_FOREX_NAME \u003d \"Test\";","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_PRICE_STRING \u003d \"34.5\";","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_INVALID_PRICE_STRING \u003d \"0\";","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_SENTIMENT \u003d \"negative\";","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_INVALID_SENTIMENT \u003d \"+\";","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_INVALID_STATUS \u003d \"not valid status\";","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_DONE_STRING \u003d \"false\";","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_ENTRY_PRICE_STRING \u003d \"30.0\";","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_INVALID_ENTRY_PRICE_STRING \u003d \"-1\";","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_EXIT_PRICE_STRING \u003d \"31.0\";","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_INVALID_EXIT_PRICE_STRING \u003d \"-1\";","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"williamlamjy"},"content":"    public static final int DAYS_DIFFERENCE \u003d 1;","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"williamlamjy"},"content":"    public static final LocalDate FUTURE_DATE \u003d LocalDate.now().plusDays(DAYS_DIFFERENCE);","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"williamlamjy"},"content":"    public static final String FUTURE_DATE_STRING \u003d FUTURE_DATE.toString();","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"williamlamjy"},"content":"    public static final String FUTURE_INVALID_DATE_STRING \u003d \"2 November\";","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"williamlamjy"},"content":"    public static final String TEST_REMARK \u003d \"\";","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_INSTRUMENT_TYPE_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"williamlamjy"},"content":"        TEST_INVALID_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME,","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"williamlamjy"},"content":"        TEST_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"williamlamjy"},"content":"        TEST_SENTIMENT,","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"williamlamjy"},"content":"        TEST_DONE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"williamlamjy"},"content":"        TEST_ENTRY_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"williamlamjy"},"content":"        TEST_EXIT_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"williamlamjy"},"content":"        FUTURE_DATE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"williamlamjy"},"content":"        TEST_REMARK","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_FOREX_NAME_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"williamlamjy"},"content":"        TEST_INVALID_FOREX_NAME,","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"williamlamjy"},"content":"        TEST_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"williamlamjy"},"content":"        TEST_SENTIMENT,","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"williamlamjy"},"content":"        TEST_DONE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"williamlamjy"},"content":"        TEST_ENTRY_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"williamlamjy"},"content":"        TEST_EXIT_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"williamlamjy"},"content":"        FUTURE_DATE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"williamlamjy"},"content":"        TEST_REMARK","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_FOREX_PRICE_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME,","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"williamlamjy"},"content":"        TEST_INVALID_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"williamlamjy"},"content":"        TEST_SENTIMENT,","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"williamlamjy"},"content":"        TEST_DONE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"williamlamjy"},"content":"        TEST_ENTRY_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"williamlamjy"},"content":"        TEST_EXIT_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"williamlamjy"},"content":"        FUTURE_DATE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"williamlamjy"},"content":"        TEST_REMARK","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_FOREX_SENTIMENT_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME,","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"williamlamjy"},"content":"        TEST_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"williamlamjy"},"content":"        TEST_INVALID_SENTIMENT,","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"williamlamjy"},"content":"        TEST_DONE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"williamlamjy"},"content":"        TEST_ENTRY_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"williamlamjy"},"content":"        TEST_EXIT_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"williamlamjy"},"content":"        FUTURE_DATE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"williamlamjy"},"content":"        TEST_REMARK","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_EMPTY_NAME_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_EMPTY_CURRENT_PRICE_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_EMPTY_SENTIMENT_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME,","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"williamlamjy"},"content":"        TEST_PRICE_STRING","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_EMPTY_STATUS_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME,","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"williamlamjy"},"content":"        TEST_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"williamlamjy"},"content":"        TEST_SENTIMENT","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"williamlamjy"},"content":"    public static final String[] INVALID_STATUS_TEXT_SEGMENT \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"williamlamjy"},"content":"        TEST_TYPE,","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"williamlamjy"},"content":"        TEST_NAME,","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"williamlamjy"},"content":"        TEST_PRICE_STRING,","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"williamlamjy"},"content":"        TEST_SENTIMENT,","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"williamlamjy"},"content":"        TEST_INVALID_STATUS","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"williamlamjy"},"content":"    };","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"williamlamjy"},"content":"    private InstrumentManager instrumentManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"williamlamjy"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"williamlamjy"},"content":"    void initialiseTestResources() {","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"williamlamjy"},"content":"        instrumentManager \u003d InstrumentManager.getInstance();","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"williamlamjy"},"content":"    void decodeGeneralAttributes_invalidName_expectException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidNameSavedInFileError.class,","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e InstrumentDecoder","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"williamlamjy"},"content":"                    .validateAndDecodeGeneralAttributes(INVALID_FOREX_NAME_TEXT_SEGMENT));","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"williamlamjy"},"content":"    void decodeGeneralAttributes_invalidPrice_expectException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidCurrPriceSavedInFileError.class,","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e InstrumentDecoder","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"williamlamjy"},"content":"                    .validateAndDecodeGeneralAttributes(INVALID_FOREX_PRICE_TEXT_SEGMENT));","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"williamlamjy"},"content":"    void decodeGeneralAttributes_invalidSentiment_expectException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidSentimentSavedInFileError.class,","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e InstrumentDecoder","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"williamlamjy"},"content":"                    .validateAndDecodeGeneralAttributes(INVALID_FOREX_SENTIMENT_TEXT_SEGMENT));","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"williamlamjy"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"williamlamjy"},"content":"    void addSavedInstrumentToList_invalidType_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"williamlamjy"},"content":"        assertThrows(InvalidInstrumentInFileError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"williamlamjy"},"content":"            () -\u003e InstrumentDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"williamlamjy"},"content":"                    .addSavedInstrumentToList(instrumentManager, INVALID_INSTRUMENT_TYPE_TEXT_SEGMENT));","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"williamlamjy"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"williamlamjy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"theodorekwok"},"content":"    //@@author theodorekwok","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"theodorekwok"},"content":"    void addSavedInstrumentToList_emptyName_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(InvalidEmptyNameInFileError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e InstrumentDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"theodorekwok"},"content":"                        .addSavedInstrumentToList(instrumentManager, INVALID_EMPTY_NAME_TEXT_SEGMENT));","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":163,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":164,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":165,"author":{"gitId":"theodorekwok"},"content":"    void addSavedInstrumentToList_emptyPrice_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(InvalidEmptyCurrPriceInFileError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e InstrumentDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"theodorekwok"},"content":"                        .addSavedInstrumentToList(instrumentManager, INVALID_EMPTY_CURRENT_PRICE_TEXT_SEGMENT));","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"theodorekwok"},"content":"    void addSavedInstrumentToList_emptySentiment_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(InvalidEmptySentimentInFileError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e InstrumentDecoder","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"theodorekwok"},"content":"                        .addSavedInstrumentToList(instrumentManager, INVALID_EMPTY_SENTIMENT_TEXT_SEGMENT));","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"theodorekwok"},"content":"    void addSavedInstrumentToList_emptyStatus_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":180,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(InvalidEmptyStatusInFileError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e InstrumentDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":182,"author":{"gitId":"theodorekwok"},"content":"                        .addSavedInstrumentToList(instrumentManager, INVALID_EMPTY_STATUS_TEXT_SEGMENT));","lastModifiedDate":"2021-11-03"},{"lineNumber":183,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":184,"author":{"gitId":"theodorekwok"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":185,"author":{"gitId":"theodorekwok"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":186,"author":{"gitId":"theodorekwok"},"content":"    void addSavedInstrumentToList_invalidStatus_expectException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":187,"author":{"gitId":"theodorekwok"},"content":"        assertThrows(InvalidStatusSavedInFileError.class,","lastModifiedDate":"2021-11-03"},{"lineNumber":188,"author":{"gitId":"theodorekwok"},"content":"            () -\u003e InstrumentDecoder","lastModifiedDate":"2021-11-03"},{"lineNumber":189,"author":{"gitId":"theodorekwok"},"content":"                        .addSavedInstrumentToList(instrumentManager, INVALID_STATUS_TEXT_SEGMENT));","lastModifiedDate":"2021-11-03"},{"lineNumber":190,"author":{"gitId":"theodorekwok"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":191,"author":{"gitId":"theodorekwok"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"theodorekwok":47,"williamlamjy":144}}]
