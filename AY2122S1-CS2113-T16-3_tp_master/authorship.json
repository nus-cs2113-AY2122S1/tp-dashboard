[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"# Expiry Eliminator","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"This is a project based on Duke, which is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may_ have to set the Project language level field to the SDK default option.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/expiryeliminator/ExpiryEliminator.java` file, right-click it, and choose `Run ExpiryEliminator.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"* A skeleton JUnit test (`src/test/java/expiryeliminator/ExipiryEliminatorTest.java`) is provided with this project template. ","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"bernardboey":4,"-":61}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"    mainClassName \u003d \"expiryeliminator.ExpiryEliminator\"","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"    archiveBaseName \u003d \"expiryeliminator\"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"    archiveClassifier \u003d \"v2.0\"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bernardboey":2,"vincentlauhl":2,"-":43}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Bernard Boey | [Github](https://github.com/bernardboey) | [Portfolio](docs/team/bernardboey.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Joshua Dass | [Github](https://github.com/JoshHDs) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Vincent Lau Han Leong | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kairui | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"bernardboey":1,"KairuiHu":3,"vincentlauhl":1,"-":4,"JoshHDs":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"* Table of Contents","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"{:toc}","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"- Documentation and code references [Address Book (Level 2)](https://github.com/se-edu/addressbook-level2) and [Address Book (Level 3)](https://github.com/se-edu/addressbook-level3).","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"- Some portion of the code references [bernardboey\u0027s ip](https://github.com/bernardboey/ip/).","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"- Method to convert String to title case references [Baeldung](https://www.baeldung.com/java-string-title-case).","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"## Design","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"### Data","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"**API** : [Data.java](https://github.com/AY2122S1-CS2113-T16-3/tp/tree/master/src/main/java/expiryeliminator/data)","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"![](diagrams/Data.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":" - The `Data` Component,","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"     - Stores a list of `Recipe` objects, in the form of `RecipeList`","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"     - Stores a list of `IngredientStorage`, in the form of `IngredientRepository`","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":" - Each `Recipe` has its ingredients and respective quantities stored in `IngredientQuantity`","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":" - The `IngredientStorage` separates a specific ingredient into batches of quantities, ","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"   according to the expiry date.","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":" - `Ingredient` stores the information of the ingredients, which are its name and unit, ","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"   e.g. Chicken and grams.","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"- Each command takes an `Ingredient Repository` and a `RecipeList` as an input to modify the ingredients and recipes","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"  based on the command.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"### Parser","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"This is a simplified class diagram of the Parser component, which provides a high level overview. The same diagram will be displayed again later on, but with much greater detail.","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"![](diagrams/ParserClassDiagramSimplified.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"This is a more detailed class diagram of the `Parser`, `ArgsParser`, and `Prefix` classes. Note that `Parser` has 4 single arg prefixes, 3 multiple arg prefixes, and 3 optional arg prefixes. These prefixes correspond to the various arguments that are accepted by the various commands.","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"![](diagrams/ParserClassDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"- The `Parser` is the main component that communicates with the various subcomponents. It is called by the main `ExpiryEliminator` class and is responsible for parsing commands.","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"- The `ArgsParser` is responsible for parsing args. It does this by accepting a list of `Prefix` objects upon creation which will determine what prefixes it should look out for. Then, when instructed to parse, it parses an args string based on the prefixes.","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"- Each `Prefix` object represent a prefix that can be present in the command args. (E.g. a prefix can correspond to `i/`, `r/`, or `q/`, etc.). In addition to that, a prefix either belongs to a `SingleArgPrefix`, `MultipleArgPrefix`, or `OptionalArgPrefix`.","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"  - A `SingleArgPrefix` allows the prefix to appear exactly once in the args string.","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"  - A `MultipleArgPrefix` allows the prefix to appear multiple (i.e. one or more) times in the args string.","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"  - An `OptionalArgPrefix` allows the prefix to appear once or not at all in the args string.","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"- With these different prefixes, we can clearly dictate how the command arguments should be structured.","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"This is a more detailed class diagram of the `SingleArgParser` and `MultipleArgParser` classes.","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"![](diagrams/ArgParsersClassDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"- The `SingleArgParser` and `MultipleArgParser` objects represents a parser for an individual arg type (e.g. ingredient name).","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"  - A `SingleArgParser` represents a parser that accepts a single string and parses it according to the arg type.","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"bernardboey"},"content":"  - A `MultipleArgParser` represents a parser that accepts either a single string or a list of strings and parses it according to the arg type.","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"#### How the Parser works","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"1. When the `Parser` needs to parse a command, (e.g. `add recipe r/Apple Pie i/Apple q/2 i/Flour q/400`), it first separates the command and args (e.g. command: `add recipe`, args: `r/Apple Pie i/Apple q/2 i/Flour q/400`).","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"2. Then, it matches the command against a list of accepted commands.","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"bernardboey"},"content":"   1. If it does not match, then it notifies the user that it is an invalid command, via the `IncorrectCommand` class.","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"bernardboey"},"content":"   2. If it finds a match, then it proceeds to parse the args and prepare the corresponding `Command` class","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"bernardboey"},"content":"3. Based on the command, there is a specified set of args that it can accept (e.g. `add recipe` needs a single recipe name, and one or more ingredients and quantities). An `ArgsParser` is created based on what args are accepted. For example, for `add recipe`, the `ArgsParser` is created via `new ArgParser(PREFIX_RECIPE, PREFIX_MULTIPLE_INGREDIENT, PREFIX_MULTIPLE_QUANTITY)`. `PREFIX_RECIPE` is created via `new SingleArgPrefix(\"r\")`, and  `PREFIX_MULTIPLE_INGREDIENT` is created via `new MultipleArgPrefix(PREFIX_INGREDIENT)`.","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"bernardboey"},"content":"4. After the `ArgsParser` is created, it parses the args based on the specified parameters. It throws an error if it detects an invalid prefix, missing prefix, or there are multiple args when there should have only been none. These errors are handled gracefully by the `Parser`.","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"bernardboey"},"content":"5. Assuming there are no errors, the `Parser` will then query the `ArgsParser` for each type of arg and then parse the arg accordingly. For example, for `add recipe`, the `Parser` will ask `ArgsParser` for the arg corresponding to `PREFIX_RECIPE`. Once it has the result, it will then create a `RecipeParser` and parse the arg given by `ArgsParser`. If successful, it will retrieve the parsed data . If unsuccessful, it will handle the error gracefully.","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"bernardboey"},"content":"   - Note that there are separate methods to query `ArgsParser` for a single arg (i.e. for a prefix that should appear at most once) and for an arg list (i.e. for a prefix that can appear multiple times). The former method only accepts a `SingleArgPrefix`, while the latter method only accepts a `MultipleArgPrefix`.","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"bernardboey"},"content":"6. Finally, the `Parser` will take all the parsed data and return the relevant `Command` class, to be executed by the `ExpiryEliminator`.","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"bernardboey"},"content":"This is a (partial) sequence diagram of parsing an \"add recipe\" command. It demonstrates the interaction between the","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"bernardboey"},"content":"`Parser`, `ArgsParser`, and the corresponding single arg and multiple arg parsers (`RecipeParser`, `IngredientParser`, and `QuantityParser`).","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"bernardboey"},"content":"![](diagrams/ParserSequenceDiagram.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"bernardboey"},"content":"\u003e **Note**: The lifelines for `ArgsParser`, `RecipeParser`, `IngredientParser`, and `QuantityParser` should end at the destroy marker (X). However, due to a limitation of PlantUML, the lifelines reach the end of diagram.","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"bernardboey"},"content":"\u003e **Note**: This is a simplified diagram, and does not show that the code checks that there are an equal number of ingredients and quantities.  ","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"vincentlauhl"},"content":"## Implementation","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"vincentlauhl"},"content":"This section describes how the features are implemented.","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"bernardboey"},"content":"### List All Ingredients Feature","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"JoshHDs"},"content":"The list ingredients feature is performed by `IngredientRepository`. It loops through all the different","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"JoshHDs"},"content":"ingredient storages, and concatenates them into a string which is shown as the output list. Below is the","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"JoshHDs"},"content":"sequence diagram for how list works.","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"JoshHDs"},"content":"![](diagrams/List.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"JoshHDs"},"content":"### List Expired Ingredients Feature","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"JoshHDs"},"content":"The list expired ingredients feature is performed by `IngredientRepository`. It loops through all the","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"JoshHDs"},"content":"ingredient storages. For each ingredient storage, it gets the type of ingredient being stored in that ","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"JoshHDs"},"content":"storage, and creates an empty storage for that ingredient type to store the batches of that ingredient ","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"JoshHDs"},"content":"that are expired. The code then loops through all the batches of that ingredients, and add the expired ","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"JoshHDs"},"content":"batches to the expire ingredient storage. The expired ingredient storage is converted into a string and","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"JoshHDs"},"content":"is shown as the output. Below is the sequence diagram for how list expired ingredients works.","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"JoshHDs"},"content":"![](diagrams/ListIngredientsExpired.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"JoshHDs"},"content":"### Delete Expired Ingredients Feature","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"JoshHDs"},"content":"The delete expired ingredients feature is performed by the `IngredientRepository`. It loops through all","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"JoshHDs"},"content":"the ingredient storages. For each ingredient storage, it loops through all the batches of that ingredient.","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"JoshHDs"},"content":"If the batch has expired, it adds the expiry date of that batch to an array. After it has looped though","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"JoshHDs"},"content":"all the batches of a specific ingredient, it proceeds to remove all those ingredient batches from the","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"JoshHDs"},"content":"repository. This process then repeats for the next type of ingredient. Below is the sequence diagram for","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"JoshHDs"},"content":"how delete expired ingredients works.","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"JoshHDs"},"content":"![](diagrams/DeleteExpiredIngredients.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"JoshHDs"},"content":"### View Ingredient Feature","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"JoshHDs"},"content":"The view ingredient feature is performed by the `IngredientRepository`. It finds if the ingredient","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"JoshHDs"},"content":"repository contains an ingredient with the same name as the user input, and return the storage of that","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"JoshHDs"},"content":"ingredient. The storage data is represented as a string that is shown as an output. Below is the sequence","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"JoshHDs"},"content":"diagram for how view ingredient works.","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"JoshHDs"},"content":"![](diagrams/ViewIngredient.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"JoshHDs"},"content":"### Update Units Feature","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"JoshHDs"},"content":"The update units feature is performed by both the `IngredientRepository` and `RecipeList`. First, it finds","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"JoshHDs"},"content":"the ingredient storage of the ingredient and updates the units there. Then it finds the recipes which ","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"JoshHDs"},"content":"contain the ingredient and updates the units there. Below is the sequence diagram for how update unit","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"JoshHDs"},"content":"works.","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"JoshHDs"},"content":"![](diagrams/UpdateUnits.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"JoshHDs"},"content":"### Shopping List Feature","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"JoshHDs"},"content":"The shopping list feature is performed by the `IngredientRepository`. It loops through all the recipes ","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"JoshHDs"},"content":"the user wants to cook and collates all the ingredients and quantities into totalIngredients. It then","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"JoshHDs"},"content":"loops through all the ingredient storages to see if there is enough ingredients. If there isn\u0027t it adds ","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"JoshHDs"},"content":"the ingredient and respective quantity to the shopping list. It returns the shopping list as a String to","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"JoshHDs"},"content":"be shown as the output. Below is the sequence diagram for how the shopping list feature works.","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"JoshHDs"},"content":"![](diagrams/ShoppingList.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"vincentlauhl"},"content":"### Add Recipe Feature","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"vincentlauhl"},"content":"The add recipe feature is performed by `RecipeList`. It adds a `Recipe` and its respective ","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"vincentlauhl"},"content":"ingredients to the `RecipeList`.","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"vincentlauhl"},"content":"Here is the sequence diagram for how add recipe works if the correct input is given and ","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"vincentlauhl"},"content":"all ingredients exist in the `Ingredient Repository`.","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"vincentlauhl"},"content":"![](diagrams/AddRecipe.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"vincentlauhl"},"content":"\u003e **Note**: The lifeline for `AddRecipeComand` should end at the destroy marker (X). However, due to a limitation of PlantUML, the lifelines reach the end of diagram.","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"vincentlauhl"},"content":" `Recipe` checks if an ingredient exists in the `Ingredient Repository` before","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"vincentlauhl"},"content":" adding the ingredient into the `Recipe`. If it doesn\u0027t exist, `Recipe` adds ","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"vincentlauhl"},"content":" the ingredient into the `Ingredient Repository` without any quantity and expiry date, ","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"vincentlauhl"},"content":" and it reminds the user to update the units of the ingredients.","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"vincentlauhl"},"content":"The reason for this implementation is so that the user doesn\u0027t have to manually add the ingredients,","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"vincentlauhl"},"content":"as the ingredient has to be in the `Ingredient Repository` for the [cooked ","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"vincentlauhl"},"content":"recipe feature](#cooked-recipe-feature) to work","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"vincentlauhl"},"content":"\u003e **Note** : Here are a few cases where an error will be returned, and the `Recipe` ","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"vincentlauhl"},"content":"\u003e will not be saved.","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"vincentlauhl"},"content":"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"vincentlauhl"},"content":"\u003e - the `Recipe` already exists in the `RecipeList`,","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"vincentlauhl"},"content":"\u003e - A number less than 1 is entered for one of the quantity of the ingredients of the `Recipe`.","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"vincentlauhl"},"content":"\u003e - Two same ingredients in one `Recipe`.","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"vincentlauhl"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"vincentlauhl"},"content":"### Delete Recipe Feature","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"vincentlauhl"},"content":"The delete recipe feature is performed by `RecipeList`. It deletes a `Recipe` from the `RecipeList`.","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"vincentlauhl"},"content":"Here is the sequence diagram for how delete recipe works if the `Recipe` exists in the `RecipeList`.","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"vincentlauhl"},"content":"![](diagrams/DeleteRecipe.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"vincentlauhl"},"content":"\u003e **Note**: The lifeline for `DeleteRecipeComand` should end at the destroy marker (X). However, due to a limitation of PlantUML, the lifelines reach the end of diagram.","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"vincentlauhl"},"content":"\u003e **Note** : If the `Recipe` doesn\u0027t exist in the `RecipeList`, an error will be returned.","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"vincentlauhl"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"vincentlauhl"},"content":"### Cooked Recipe Feature","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"vincentlauhl"},"content":"The cooked recipe feature is performed by `Recipe`. It deletes a certain quantity of ingredients in the","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"vincentlauhl"},"content":"`Ingredient Repository` based on the quantities of ingredients in the `Recipe`.","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"vincentlauhl"},"content":"Here is the sequence diagram for how cooked recipe works if the amount of ingredients in the `Ingredient Repository`","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"vincentlauhl"},"content":"is sufficient to be deducted.","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"vincentlauhl"},"content":"![](diagrams/CookedRecipe.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"vincentlauhl"},"content":"\u003e **Note**: The lifelines for `CookedRecipeComand` should end at the destroy marker (X). However, due to a limitation of PlantUML, the lifelines reach the end of diagram.","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"vincentlauhl"},"content":"The feature leaves the responsibility of dealing with expired ingredients to the user, and","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"vincentlauhl"},"content":"will remove ingredients starting from the earliest batch of ingredients. (ingredients that ","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"vincentlauhl"},"content":"expire the soonest, including those that are already expired.)","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"vincentlauhl"},"content":"\u003e **Note** : Here are a few cases where an error will be returned, and the quantities of the ingredients in the","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"vincentlauhl"},"content":"\u003e `Ingredient Repository` will not be updated.","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"vincentlauhl"},"content":"\u003e ","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"vincentlauhl"},"content":"\u003e - The `Recipe` does not exist in the `RecipeList`","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"vincentlauhl"},"content":"\u003e - There is insufficient ingredients in the `Ingredient Repository` for the `Recipe` to be cooked.","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"vincentlauhl"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"vincentlauhl"},"content":"### List Recipes User Can Cook Feature","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"vincentlauhl"},"content":"The list recipe user can cook feature is performed by the `ListRecipeUserCanCookCommand`.","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"vincentlauhl"},"content":"It returns a list of recipes that the user can cook with the ingredients the user currently","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"vincentlauhl"},"content":"have.","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"vincentlauhl"},"content":"Here is the sequence diagram for how list recipe user can cook works","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"vincentlauhl"},"content":"![](diagrams/ListRecipesUserCanCook.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"vincentlauhl"},"content":"\u003e **Note**: The lifelines for `ListRecipesUserCanCookComand` should end at the destroy marker (X). However, due to a limitation of PlantUML, the lifelines reach the end of diagram.","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"vincentlauhl"},"content":"The feature will indicate that the `Recipe` can be cooked even if some of the ingredients have","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"vincentlauhl"},"content":"expired. However, it will inform the user that there are expiring ingredients. The responsibility","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"vincentlauhl"},"content":"of dealing with expired ingredients is left to the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"vincentlauhl"},"content":"The feature will inform the user if there is insufficient ingredients to cook any `Recipe` or if ","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"vincentlauhl"},"content":"there is no `Recipe` in the `RecipeList`.","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"vincentlauhl"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"vincentlauhl"},"content":"Young adults who are living in their own home.","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"bernardboey"},"content":"To help young adults who are living in their own home keep track of ingredients and foods that they can make based on the ingredients they have in their kitchen.","lastModifiedDate":"2021-10-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":240,"author":{"gitId":"bernardboey"},"content":"|v1.0|user|add an ingredient|record what ingredients I have|","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"bernardboey"},"content":"|v1.0|user|delete an ingredient|remove ingredients that I no longer have|","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"bernardboey"},"content":"|v1.0|user|increment quantities for a particular ingredient|record how much of that ingredient I have|","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"bernardboey"},"content":"|v1.0|user|decrement quantities for a particular ingredient|know how many ingredients are left|","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"JoshHDs"},"content":"|v1.0|user|list the ingredients with quantities and expiry dates|know the ingredients I have at a glance|","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"JoshHDs"},"content":"|v1.0|user|view the quantities for a particular ingredient|know how much of a specific ingredient I have|","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"JoshHDs"},"content":"|v1.0|user|list ingredients expiring within the week|know which ingredients I should use up first|","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"JoshHDs"},"content":"|v1.0|user|list ingredients that have expired already|know which ingredients to throw away|","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"bernardboey"},"content":"|v1.0|user|add the expiry date for a specific ingredient|record when it must be used by|","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"vincentlauhl"},"content":"|v1.0|user|add a recipe and its constituent ingredients|keep track of what I want to cook|","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"vincentlauhl"},"content":"|v1.0|user|delete a recipe|retain only recipes I want|","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"vincentlauhl"},"content":"|v2.0|user|be able to indicate that I have cooked a recipe|keep my ingredient repository accurate|","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"vincentlauhl"},"content":"|v2.0|user|list recipes i can cook based on the ingredients I have|save time on checking the ingredients I have|","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"JoshHDs"},"content":"|v2.0|user|generate a shopping list for a particular recipe/recipes|know what ingredients to buy|","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"JoshHDs"},"content":"|v2.0|user|delete all ingredients that have expired at one go|all ingredients I keep track of are not expired|","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":257,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":259,"author":{"gitId":"bernardboey"},"content":"1. Should work on Windows, Mac, and any mainstream Linux OS as long as it has Java 11 or above installed.","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"bernardboey"},"content":"2. {more to be added}","lastModifiedDate":"2021-10-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":262,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":268,"author":{"gitId":"vincentlauhl"},"content":"### Launch and Shutdown","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"vincentlauhl"},"content":"1. Initial launch","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"vincentlauhl"},"content":"    1. Download the [jarfile](https://github.com/AY2122S1-CS2113-T16-3/tp/releases) of the latest release and copy it into an empty folder.","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"vincentlauhl"},"content":"    2. For Windows, launch Command Prompt and navigate to the folder that contains the jar file","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"vincentlauhl"},"content":"    3. Type `java -jar fileName.jar`, where `fileName` is the name of the jar file.","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"vincentlauhl"},"content":"       Expected: Shows the welcome message of the application","lastModifiedDate":"2021-11-04"},{"lineNumber":274,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"vincentlauhl"},"content":"2. Shutdown","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"vincentlauhl"},"content":"    1. Type `bye`","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"vincentlauhl"},"content":"       Expected: the program exits.","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"vincentlauhl"},"content":"### Add a recipe","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"vincentlauhl"},"content":"1. Add a recipe ","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"vincentlauhl"},"content":"    1. Prerequisite: ","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"vincentlauhl"},"content":"    The ingredient \"Chicken\" and \"Salt\" exist in the IngredientRepository. The recipe \"Chicken Soup\" doesn\u0027t exist in the RecipeList.","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"vincentlauhl"},"content":"    2. Test case: `add recipe r/Chicken Soup i/Chicken q/1 i/Salt q/20`","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"vincentlauhl"},"content":"       Expected: Recipe added. Details of the recipe added shown. Number of recipes in the RecipeList shown.","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"vincentlauhl"},"content":"    3. Test case: `add recipe` \u003cbr/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"vincentlauhl"},"content":"    Expected: No recipe added, Details of error shown.","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"vincentlauhl"},"content":"    4. Other incorrect add recipe commands to try `add recipe r/1 i/Chicken q/1`,`add recipe r/Chicken Soup i/1 q/1`,`...` \u003cbr/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"vincentlauhl"},"content":"   Expected: Similar to previous.","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"vincentlauhl"},"content":"    ","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"vincentlauhl"},"content":"2. Add a recipe when the recipe already exists.","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"vincentlauhl"},"content":"    1. Prerequisite: The recipe \"Chicken Soup\" exists in the RecipeList.","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"vincentlauhl"},"content":"    2. Test case: `add recipe r/Chicken Soup i/Chicken q/1 i/Salt q/20`","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"vincentlauhl"},"content":"       Expected: No recipe added. Details of the error are shown.","lastModifiedDate":"2021-11-04"},{"lineNumber":295,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":296,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":297,"author":{"gitId":"vincentlauhl"},"content":"3. Add a recipe with zero quantity for an ingredient.","lastModifiedDate":"2021-11-04"},{"lineNumber":298,"author":{"gitId":"vincentlauhl"},"content":"    1. Test case: `add recipe r/Chicken Soup i/Chicken q/0 i/Salt q/20`","lastModifiedDate":"2021-11-04"},{"lineNumber":299,"author":{"gitId":"vincentlauhl"},"content":"       Expected: No recipe added. Details of the error are shown.","lastModifiedDate":"2021-11-04"},{"lineNumber":300,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":301,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":302,"author":{"gitId":"vincentlauhl"},"content":"4. Add a recipe with some ingredients having no quantity or vice versa.","lastModifiedDate":"2021-11-04"},{"lineNumber":303,"author":{"gitId":"vincentlauhl"},"content":"   1. Test case: `add recipe r/Chicken Soup i/Chicken i/Salt q/20` \u003cbr/.","lastModifiedDate":"2021-11-04"},{"lineNumber":304,"author":{"gitId":"vincentlauhl"},"content":"     Expected: No recipe added. Details of the error are shown, command usage message is shown.","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"vincentlauhl"},"content":"   2. Test case: `add recipe r/Chicken Soup q/1 i/Salt q/20` \u003cbr/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":306,"author":{"gitId":"vincentlauhl"},"content":"    Expected: Similar to previous.","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"bernardboey":60,"vincentlauhl":151,"-":34,"JoshHDs":61}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"Expiry Eliminator is a desktop app for managing the freshness of ingredients in your kitchen and the recipes you want to cook, optimized for use via a Command Line Interface (CLI). If you can type fast, Expiry Eliminator can help you manage your ingredients and recipes quickly.","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"bernardboey":1,"-":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"Expiry Eliminator is a desktop app for managing the freshness of ingredients in your kitchen and the recipes you want to cook, optimized for use via a Command Line Interface (CLI). If you can type fast, Expiry Eliminator can help you manage your ingredients and recipes quickly.","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"* Table of Contents","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"{:toc}","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"2. Download the latest version of `ExpiryEliminator` from [here](https://github.com/AY2122S1-CS2113-T16-3/tp/releases).","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"3. Copy the file to the folder you want to use as the home folder for this program.","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"4. Open a command prompt / PowerShell / terminal window and run the program with `java -jar [filepath of jar file]`.","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"\u003e **Notes about the command format:**","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"\u003e - Words in UPPER_CASE are the parameters to be supplied by the user (e.g. in `view i/INGREDIENT`, `INGREDIENT` is a parameter which can be used as `view i/Red Apple`).","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"\u003e - Parameters in square brackets are optional (e.g. `[u/UNIT]`).","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"\u003e - Parameters with `...` after them can be used multiple times, but must appear at least once (e.g. `q/QUANTITY...`).","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"\u003e - Parameters can be in any order.","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"\u003e - There must be no spaces between / and the parameters. (e.g. `u/ UNITS`).","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"### Adding an ingredient: `add`","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"Adds an ingredient to the ingredient repository.","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"Format: `add i/INGREDIENT [u/UNIT] [q/QUANTITY e/EXPIRY_DATE]`","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"- Unit is optional.","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"- Quantity and expiry date is optional, but you cannot have one and not the other (i.e. you either don\u0027t provide both quantity and expiry date, or you provide both quantity and expiry date).","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"- Expiry date must be in the format of `yyyy-mm-dd`. It is possible to add an ingredient that has already expired.","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"- Quantity must be a positive integer.","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"- Note that ingredient names are case-insensitive, and will be automatically stored in title case (e.g. `ReD aPplE` will be stored as `Red Apple`).","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"- Ingredient names must be unique.","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"- If the ingredient name already exists, an error message will be shown.","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"- `add i/Red Apple`","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"- `add i/Salt u/g`","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"- `add i/Chicken u/kg`","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"### Incrementing quantities for an ingredient: `increment`","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"Increments the specified quantities for the specified ingredient in the ingredient repository.","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"Format: `increment i/INGREDIENT q/QUANTITY e/EXPIRY_DATE`","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"- It is possible to have multiple batches of the same ingredient with different expiry dates.","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"bernardboey"},"content":"- Names are case-insensitive (e.g. `red apple` will match `Red Apple`).","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"- Expiry date must be in the format of `yyyy-mm-dd`. It is possible to add an ingredient that has already expired.","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"- Quantity must be a positive integer.","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"- If the ingredient name is not found, an error message will be shown.","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"bernardboey"},"content":"Example of usage:","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"JoshHDs"},"content":"- `increment i/red apple q/10 e/2021-10-28`","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"bernardboey"},"content":"- `increment i/Salt q/200 e/2021-10-22`","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"JoshHDs"},"content":"- `increment i/Chicken q/2 e/2021-11-15`","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"JoshHDs"},"content":"- `increment i/Chicken q/2 e/2021-11-08`","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"bernardboey"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"bernardboey"},"content":"### Decrementing quantities for an ingredient: `decrement`","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"bernardboey"},"content":"Decrements the specified quantities for the specified ingredient in the ingredient repository.","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"bernardboey"},"content":"Format: `decrement i/INGREDIENT q/QUANTITY`","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"bernardboey"},"content":"- The batches of ingredients that expire the earliest will be decremented first.","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"bernardboey"},"content":"- Names are case-insensitive (e.g. `red apple` will match `Red Apple`).","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"bernardboey"},"content":"- Quantity must be a positive integer.","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"bernardboey"},"content":"- If the ingredient name is not found, an error message will be shown.","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"bernardboey"},"content":"- If the specified quantity is greater than the quantity of the specified ingredient in the ingredient repository, an error message will be shown.","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"bernardboey"},"content":"Example of usage:","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"bernardboey"},"content":"- `decrement i/Red Apple q/2`","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"bernardboey"},"content":"- `decrement i/Salt q/10`","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"bernardboey"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"bernardboey"},"content":"### Updating units of an ingredient: `update units`","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"bernardboey"},"content":"Updates the units of the specified ingredient in both the ingredient repository and recipe list.","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"bernardboey"},"content":"Format: `update units i/INGREDIENT u/UNIT`","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"bernardboey"},"content":"- The units will be updated in both the ingredient repository and recipes.","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"bernardboey"},"content":"- If units is left blank, the units will be deleted (back to default value).","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"JoshHDs"},"content":"- There cannot be a space between / and your input units ","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"JoshHDs"},"content":"Example of usage:","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"JoshHDs"},"content":"- `update units i/salt u/grams`","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"JoshHDs"},"content":"- `update units i/chicken u/kilograms`","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"JoshHDs"},"content":"- `update units i/pork u/kg`","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"JoshHDs"},"content":"- `update units i/salt u/`","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"JoshHDs"},"content":"Example incorrect usage:","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"JoshHDs"},"content":"- `update units i/salt u/ kilograms`","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"JoshHDs"},"content":"- `update units i/salt u/6`","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"JoshHDs"},"content":"Output: ","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"JoshHDs"},"content":"- If ingredient exists:","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"JoshHDs"},"content":"     The units for this ingredient has been updated to kilograms.","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"JoshHDs"},"content":"- If ingredient does not exist","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"JoshHDs"},"content":"     Sorry. No matching ingredients found!","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"JoshHDs"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"JoshHDs"},"content":"### Listing all ingredients: `list`","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"bernardboey"},"content":"Shows a list of all ingredients in the ingredient repository, along with their quantities and expiry dates.","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"JoshHDs"},"content":"Format: `list`","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"bernardboey"},"content":"- As it is possible to have different batches of the same ingredient with different expiry dates, all batches will be shown.","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"JoshHDs"},"content":"Example of usage:","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"JoshHDs"},"content":"- `list`","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"JoshHDs"},"content":"Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"JoshHDs"},"content":"     ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"JoshHDs"},"content":"     Here are the ingredients in your list:","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"JoshHDs"},"content":"     Chicken (qty: 4 kg)","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"JoshHDs"},"content":"     - 2 kg (2021-11-08)","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"JoshHDs"},"content":"     - 2 kg (2021-11-15)","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"JoshHDs"},"content":"     Red Apple (qty: 10)","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"JoshHDs"},"content":"     - 10 (2021-10-28)","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"JoshHDs"},"content":"     Salt (qty: 200 kilograms)","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"JoshHDs"},"content":"     - 200 kilograms (2021-10-22)","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"JoshHDs"},"content":"     You have a total of 3 ingredient(s)","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"JoshHDs"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":155,"author":{"gitId":"JoshHDs"},"content":"### Listing ingredients that are expiring: `list expiring`","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"bernardboey"},"content":"Shows a list of all ingredients in the ingredient repository that are expiring within one week, along with their quantities and expiry dates.","lastModifiedDate":"2021-10-29"},{"lineNumber":158,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"JoshHDs"},"content":"Format: `list expiring`","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"JoshHDs"},"content":"Example of usage:","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"JoshHDs"},"content":"- `list expiring`","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"JoshHDs"},"content":"Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"JoshHDs"},"content":"- If no expiring ingredients:","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"JoshHDs"},"content":"     Here are the expiring ingredients in your list:","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"JoshHDs"},"content":"- If have expiring ingredients:","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"JoshHDs"},"content":"     Here are the expiring ingredients in your list:","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"JoshHDs"},"content":"     Chicken (qty: 2 kg)","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"JoshHDs"},"content":"     - 2 kg (2021-11-08)","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":180,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":182,"author":{"gitId":"JoshHDs"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"JoshHDs"},"content":"### Listing ingredients that have expired: `list expired`","lastModifiedDate":"2021-10-29"},{"lineNumber":185,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":186,"author":{"gitId":"JoshHDs"},"content":"Shows a list of all ingredients, its quantity and expiry dates, that have expired.","lastModifiedDate":"2021-10-29"},{"lineNumber":187,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"JoshHDs"},"content":"Format: `list expired`","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"bernardboey"},"content":"- Ingredient is considered to have expired if its expiry date is before the current date. ","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"JoshHDs"},"content":"  - E.g.: Ingredient with expiry date of 2021-01-01 is considered as expired.","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"bernardboey"},"content":"- Hence, an ingredient expiring on the current day is not yet counted as expired.","lastModifiedDate":"2021-10-29"},{"lineNumber":193,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":194,"author":{"gitId":"JoshHDs"},"content":"Example of usage:","lastModifiedDate":"2021-10-29"},{"lineNumber":195,"author":{"gitId":"JoshHDs"},"content":"- `list expired`","lastModifiedDate":"2021-10-29"},{"lineNumber":196,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":197,"author":{"gitId":"JoshHDs"},"content":"Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"JoshHDs"},"content":"- If no expired ingredients:","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":200,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":201,"author":{"gitId":"JoshHDs"},"content":"     Here are the expired ingredients in your list:","lastModifiedDate":"2021-11-03"},{"lineNumber":202,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":203,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":204,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":205,"author":{"gitId":"JoshHDs"},"content":"- If have expired ingredients:","lastModifiedDate":"2021-11-03"},{"lineNumber":206,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":207,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":208,"author":{"gitId":"JoshHDs"},"content":"     Here are the expired ingredients in your list:","lastModifiedDate":"2021-11-03"},{"lineNumber":209,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":210,"author":{"gitId":"JoshHDs"},"content":"     Red Apple (qty: 10)","lastModifiedDate":"2021-11-03"},{"lineNumber":211,"author":{"gitId":"JoshHDs"},"content":"     - 10 (2021-10-28)","lastModifiedDate":"2021-11-03"},{"lineNumber":212,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":213,"author":{"gitId":"JoshHDs"},"content":"     Salt (qty: 200 kilograms)","lastModifiedDate":"2021-11-03"},{"lineNumber":214,"author":{"gitId":"JoshHDs"},"content":"     - 200 kilograms (2021-10-22)","lastModifiedDate":"2021-11-03"},{"lineNumber":215,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":216,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":217,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":218,"author":{"gitId":"JoshHDs"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"bernardboey"},"content":"### Viewing a specific ingredient: `view`","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"JoshHDs"},"content":"Shows a specific ingredient with its quantity and expiry date.","lastModifiedDate":"2021-10-29"},{"lineNumber":223,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":224,"author":{"gitId":"JoshHDs"},"content":"Format: `view i/INGREDIENT`","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":226,"author":{"gitId":"bernardboey"},"content":"- Names are case-insensitive (e.g.: `SalT` will match `Salt`).","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"bernardboey"},"content":"- The order of the keywords matter. e.g. `Apple Red` will NOT match `Red Apple`.","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"bernardboey"},"content":"- Only the full name will be matched. e.g. `Apple` will NOT match `Red Apple`.","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"bernardboey"},"content":"- If the ingredient name is not found, an error message will be shown.","lastModifiedDate":"2021-10-29"},{"lineNumber":230,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"JoshHDs"},"content":"Example of usage:","lastModifiedDate":"2021-10-29"},{"lineNumber":232,"author":{"gitId":"JoshHDs"},"content":"- `view i/Salt`","lastModifiedDate":"2021-11-01"},{"lineNumber":233,"author":{"gitId":"JoshHDs"},"content":"- `view i/Red apple`","lastModifiedDate":"2021-11-01"},{"lineNumber":234,"author":{"gitId":"JoshHDs"},"content":"- `view i/Chicken`","lastModifiedDate":"2021-11-01"},{"lineNumber":235,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":236,"author":{"gitId":"JoshHDs"},"content":"Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":237,"author":{"gitId":"JoshHDs"},"content":"- If ingredient exists:","lastModifiedDate":"2021-11-03"},{"lineNumber":238,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":239,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":240,"author":{"gitId":"JoshHDs"},"content":"     Here is the ingredient in your list:","lastModifiedDate":"2021-11-03"},{"lineNumber":241,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":242,"author":{"gitId":"JoshHDs"},"content":"     Chicken (qty: 4 kg)","lastModifiedDate":"2021-11-03"},{"lineNumber":243,"author":{"gitId":"JoshHDs"},"content":"     - 2 kg (2021-11-08)","lastModifiedDate":"2021-11-03"},{"lineNumber":244,"author":{"gitId":"JoshHDs"},"content":"     - 2 kg (2021-11-15)","lastModifiedDate":"2021-11-03"},{"lineNumber":245,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":246,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":247,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":248,"author":{"gitId":"JoshHDs"},"content":"- If ingredient does not exist:","lastModifiedDate":"2021-11-03"},{"lineNumber":249,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":250,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":251,"author":{"gitId":"JoshHDs"},"content":"     Sorry. No matching ingredients found!","lastModifiedDate":"2021-11-03"},{"lineNumber":252,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":253,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":254,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":255,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":256,"author":{"gitId":"bernardboey"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":257,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":258,"author":{"gitId":"bernardboey"},"content":"### Deleting an ingredient: `delete`","lastModifiedDate":"2021-10-29"},{"lineNumber":259,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"bernardboey"},"content":"Deletes the specified ingredient from the ingredient repository.","lastModifiedDate":"2021-10-29"},{"lineNumber":261,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"bernardboey"},"content":"Format: `delete i/INGREDIENT`","lastModifiedDate":"2021-10-29"},{"lineNumber":263,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":264,"author":{"gitId":"bernardboey"},"content":"- An ingredient cannot be deleted if it is part of a recipe. To delete an ingredient, delete all recipes that contain the ingredient first.","lastModifiedDate":"2021-10-29"},{"lineNumber":265,"author":{"gitId":"bernardboey"},"content":"- To clear all quantities of an ingredient in the ingredient repository, use the `decrement` command instead. That way, the ingredient can still be used as part of a recipe.","lastModifiedDate":"2021-10-29"},{"lineNumber":266,"author":{"gitId":"bernardboey"},"content":"- Names are case-insensitive (e.g. `red apple` will match `Red Apple`).","lastModifiedDate":"2021-10-29"},{"lineNumber":267,"author":{"gitId":"bernardboey"},"content":"- If the ingredient name is not found, an error message will be shown.","lastModifiedDate":"2021-10-29"},{"lineNumber":268,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":269,"author":{"gitId":"bernardboey"},"content":"Example:","lastModifiedDate":"2021-10-29"},{"lineNumber":270,"author":{"gitId":"bernardboey"},"content":"- `delete i/Red Apple`","lastModifiedDate":"2021-10-29"},{"lineNumber":271,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":272,"author":{"gitId":"JoshHDs"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":273,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":274,"author":{"gitId":"JoshHDs"},"content":"### Deleting all expired ingredients: `delete expired`","lastModifiedDate":"2021-10-29"},{"lineNumber":275,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":276,"author":{"gitId":"JoshHDs"},"content":"Removes all expired batches (not Ingredients) of ingredients from the ingredient repository.","lastModifiedDate":"2021-10-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":278,"author":{"gitId":"JoshHDs"},"content":"Format: `delete expired`","lastModifiedDate":"2021-10-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":280,"author":{"gitId":"bernardboey"},"content":"- Even if all batches of an ingredient are expired, this command will not delete the ingredient entry in the repository (i.e. the ingredient will continue to exist but with zero quantity.","lastModifiedDate":"2021-10-29"},{"lineNumber":281,"author":{"gitId":"JoshHDs"},"content":"- Ingredient is considered to have expired if its expiry date is before the current date.","lastModifiedDate":"2021-10-29"},{"lineNumber":282,"author":{"gitId":"JoshHDs"},"content":"  - E.g.: Ingredient with expiry date of 2021-01-01 is considered as expired.","lastModifiedDate":"2021-11-01"},{"lineNumber":283,"author":{"gitId":"bernardboey"},"content":"- Hence, an ingredient expiring on the current day is not yet counted as expired.","lastModifiedDate":"2021-10-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":285,"author":{"gitId":"JoshHDs"},"content":"Example of usage:","lastModifiedDate":"2021-10-29"},{"lineNumber":286,"author":{"gitId":"JoshHDs"},"content":"- `delete expired`","lastModifiedDate":"2021-10-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":288,"author":{"gitId":"JoshHDs"},"content":"Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":289,"author":{"gitId":"JoshHDs"},"content":"- If there are expired ingredients:","lastModifiedDate":"2021-11-03"},{"lineNumber":290,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":291,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":292,"author":{"gitId":"JoshHDs"},"content":"     All expired ingredients have been deleted!","lastModifiedDate":"2021-11-03"},{"lineNumber":293,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":294,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":296,"author":{"gitId":"JoshHDs"},"content":"- If there are no expired ingredients:","lastModifiedDate":"2021-11-03"},{"lineNumber":297,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":298,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":299,"author":{"gitId":"JoshHDs"},"content":"     You do not have expired ingredients!","lastModifiedDate":"2021-11-03"},{"lineNumber":300,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":301,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":302,"author":{"gitId":"JoshHDs"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":303,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":304,"author":{"gitId":"vincentlauhl"},"content":"### Adding a recipe: `add recipe`","lastModifiedDate":"2021-10-27"},{"lineNumber":305,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":306,"author":{"gitId":"bernardboey"},"content":"Adds a recipe with its respective ingredients and quantities to the recipe list.","lastModifiedDate":"2021-10-29"},{"lineNumber":307,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":308,"author":{"gitId":"bernardboey"},"content":"Format: `add recipe r/RECIPE i/INGREDIENT q/QUANTITY i/INGREDIENT q/QUANTITY ...`","lastModifiedDate":"2021-10-29"},{"lineNumber":309,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":310,"author":{"gitId":"vincentlauhl"},"content":"- Adds a recipe with the name `RECIPE` and its `INGREDIENT` with the corresponding `QUANTITY` for each ingredient. ","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"bernardboey"},"content":"  `QUANTITY` must be a positive integer. It is not possible to have zero quantity.","lastModifiedDate":"2021-10-29"},{"lineNumber":312,"author":{"gitId":"vincentlauhl"},"content":"- The ingredient and recipe names are case-insensitive, and will be automatically stored in title case ","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"vincentlauhl"},"content":"  (E.g.: `ChiCkEN SoUP` would be recorded as `Chicken Soup`)","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"bernardboey"},"content":"- The recipe is added to the recipe list.","lastModifiedDate":"2021-10-29"},{"lineNumber":315,"author":{"gitId":"vincentlauhl"},"content":"- The ingredients and the quantity can be added in any order, but the first ingredient will correspond to the first","lastModifiedDate":"2021-10-27"},{"lineNumber":316,"author":{"gitId":"vincentlauhl"},"content":" quantity entered, second ingredient to second quantity entered etc.","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"vincentlauhl"},"content":"- A recipe must have at least one ingredient.","lastModifiedDate":"2021-11-03"},{"lineNumber":318,"author":{"gitId":"vincentlauhl"},"content":"- If there are too many ingredients in the recipe, users can add at least one ingredient first with `add recipe` and","lastModifiedDate":"2021-11-03"},{"lineNumber":319,"author":{"gitId":"vincentlauhl"},"content":"  add the rest later on to avoid confusion","lastModifiedDate":"2021-11-03"},{"lineNumber":320,"author":{"gitId":"vincentlauhl"},"content":"  (see [Update recipe](#updating-quantities-of-ingredients-in-a-recipe-update-recipe))","lastModifiedDate":"2021-11-03"},{"lineNumber":321,"author":{"gitId":"vincentlauhl"},"content":"- The units of the ingredients in the recipe will follow the units of the ingredients ","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"bernardboey"},"content":"  saved in the ingredient repository.","lastModifiedDate":"2021-10-29"},{"lineNumber":323,"author":{"gitId":"bernardboey"},"content":"- If the ingredients of the recipe do not exist in the ingredient repository when adding the recipe, the","lastModifiedDate":"2021-10-29"},{"lineNumber":324,"author":{"gitId":"bernardboey"},"content":"  ingredients will be added into the ingredient repository with zero quantity and no units (to add units, see [Updating units of an ingredient](#updating-units-of-an-ingredient-update-units)).","lastModifiedDate":"2021-10-29"},{"lineNumber":325,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"vincentlauhl"},"content":"Example of usage:","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"vincentlauhl"},"content":"- `add recipe r/Chicken Soup i/Chicken q/300 i/Salt q/10`","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"vincentlauhl"},"content":"- `add recipe r/Chicken Soup i/Chicken i/Salt q/300 q/10`","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"JoshHDs"},"content":"- `add recipe r/Pork Soup i/Pork q/300 i/Salt q/10`","lastModifiedDate":"2021-11-03"},{"lineNumber":330,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":331,"author":{"gitId":"vincentlauhl"},"content":"Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":332,"author":{"gitId":"vincentlauhl"},"content":"- If the ingredients do not exist in the list,","lastModifiedDate":"2021-11-03"},{"lineNumber":333,"author":{"gitId":"vincentlauhl"},"content":"  ```","lastModifiedDate":"2021-11-03"},{"lineNumber":334,"author":{"gitId":"vincentlauhl"},"content":"      ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":335,"author":{"gitId":"vincentlauhl"},"content":"       I\u0027ve added this recipe:","lastModifiedDate":"2021-11-03"},{"lineNumber":336,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":337,"author":{"gitId":"vincentlauhl"},"content":"       Chicken Soup","lastModifiedDate":"2021-11-03"},{"lineNumber":338,"author":{"gitId":"vincentlauhl"},"content":"        - Chicken (qty: 1)","lastModifiedDate":"2021-11-03"},{"lineNumber":339,"author":{"gitId":"vincentlauhl"},"content":"        - Salt (qty: 20)","lastModifiedDate":"2021-11-03"},{"lineNumber":340,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":341,"author":{"gitId":"vincentlauhl"},"content":"       Now you have 3 recipe(s)","lastModifiedDate":"2021-11-03"},{"lineNumber":342,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":343,"author":{"gitId":"vincentlauhl"},"content":"       I\u0027ve also added these ingredients:","lastModifiedDate":"2021-11-03"},{"lineNumber":344,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":345,"author":{"gitId":"vincentlauhl"},"content":"       Chicken","lastModifiedDate":"2021-11-03"},{"lineNumber":346,"author":{"gitId":"vincentlauhl"},"content":"       Salt","lastModifiedDate":"2021-11-03"},{"lineNumber":347,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":348,"author":{"gitId":"vincentlauhl"},"content":"       Please update the unit if required.","lastModifiedDate":"2021-11-03"},{"lineNumber":349,"author":{"gitId":"vincentlauhl"},"content":"      ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":350,"author":{"gitId":"vincentlauhl"},"content":"  ```","lastModifiedDate":"2021-11-03"},{"lineNumber":351,"author":{"gitId":"vincentlauhl"},"content":"- If the ingredients exist in the list,","lastModifiedDate":"2021-11-03"},{"lineNumber":352,"author":{"gitId":"vincentlauhl"},"content":"  ```","lastModifiedDate":"2021-11-03"},{"lineNumber":353,"author":{"gitId":"vincentlauhl"},"content":"      ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":354,"author":{"gitId":"vincentlauhl"},"content":"       I\u0027ve added this recipe:","lastModifiedDate":"2021-11-03"},{"lineNumber":355,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":356,"author":{"gitId":"vincentlauhl"},"content":"       Chicken Soup","lastModifiedDate":"2021-11-03"},{"lineNumber":357,"author":{"gitId":"vincentlauhl"},"content":"       - Chicken (qty: 1)","lastModifiedDate":"2021-11-03"},{"lineNumber":358,"author":{"gitId":"vincentlauhl"},"content":"       - Salt (qty: 20)","lastModifiedDate":"2021-11-03"},{"lineNumber":359,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":360,"author":{"gitId":"vincentlauhl"},"content":"       Now you have 3 recipe(s)","lastModifiedDate":"2021-11-03"},{"lineNumber":361,"author":{"gitId":"vincentlauhl"},"content":"      ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":362,"author":{"gitId":"vincentlauhl"},"content":"  ```","lastModifiedDate":"2021-11-03"},{"lineNumber":363,"author":{"gitId":"vincentlauhl"},"content":"  ","lastModifiedDate":"2021-11-03"},{"lineNumber":364,"author":{"gitId":"vincentlauhl"},"content":"  ","lastModifiedDate":"2021-11-03"},{"lineNumber":365,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":366,"author":{"gitId":"vincentlauhl"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":367,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":368,"author":{"gitId":"vincentlauhl"},"content":"### Deleting a recipe: `delete recipe`","lastModifiedDate":"2021-10-28"},{"lineNumber":369,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":370,"author":{"gitId":"bernardboey"},"content":"Deletes a recipe from the recipe list.","lastModifiedDate":"2021-10-29"},{"lineNumber":371,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":372,"author":{"gitId":"vincentlauhl"},"content":"Format : `delete recipe r/RECIPE`","lastModifiedDate":"2021-10-28"},{"lineNumber":373,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":374,"author":{"gitId":"vincentlauhl"},"content":"- Deletes a recipe with the name `RECIPE` and all its information.","lastModifiedDate":"2021-10-28"},{"lineNumber":375,"author":{"gitId":"vincentlauhl"},"content":"- The recipe is removed from the list.","lastModifiedDate":"2021-10-28"},{"lineNumber":376,"author":{"gitId":"vincentlauhl"},"content":"- The recipe name is case-insensitive (typing `cHiCKEn sOUP` would cause `Chicken Soup` ","lastModifiedDate":"2021-10-28"},{"lineNumber":377,"author":{"gitId":"vincentlauhl"},"content":"  to be deleted if it’s in the list).","lastModifiedDate":"2021-10-28"},{"lineNumber":378,"author":{"gitId":"vincentlauhl"},"content":"- The recipe name specified must exist in the list.","lastModifiedDate":"2021-10-28"},{"lineNumber":379,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":380,"author":{"gitId":"vincentlauhl"},"content":"Example of usage:","lastModifiedDate":"2021-10-28"},{"lineNumber":381,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":382,"author":{"gitId":"vincentlauhl"},"content":"- `delete recipe r/Chicken Soup`","lastModifiedDate":"2021-10-28"},{"lineNumber":383,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":384,"author":{"gitId":"vincentlauhl"},"content":"Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":385,"author":{"gitId":"vincentlauhl"},"content":"- If recipe is in the list.","lastModifiedDate":"2021-11-03"},{"lineNumber":386,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":387,"author":{"gitId":"vincentlauhl"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":388,"author":{"gitId":"vincentlauhl"},"content":"     I\u0027ve deleted this recipe for you:","lastModifiedDate":"2021-11-03"},{"lineNumber":389,"author":{"gitId":"vincentlauhl"},"content":"     ","lastModifiedDate":"2021-11-03"},{"lineNumber":390,"author":{"gitId":"vincentlauhl"},"content":"     Chicken Soup","lastModifiedDate":"2021-11-03"},{"lineNumber":391,"author":{"gitId":"vincentlauhl"},"content":"     - Chicken (qty: 1)","lastModifiedDate":"2021-11-03"},{"lineNumber":392,"author":{"gitId":"vincentlauhl"},"content":"     - Salt (qty: 20)","lastModifiedDate":"2021-11-03"},{"lineNumber":393,"author":{"gitId":"vincentlauhl"},"content":"     ","lastModifiedDate":"2021-11-03"},{"lineNumber":394,"author":{"gitId":"vincentlauhl"},"content":"     Now you have 2 recipe(s)","lastModifiedDate":"2021-11-03"},{"lineNumber":395,"author":{"gitId":"vincentlauhl"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":396,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":397,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":398,"author":{"gitId":"vincentlauhl"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":399,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":400,"author":{"gitId":"bernardboey"},"content":"### Removing ingredients when a recipe is cooked: `cooked`","lastModifiedDate":"2021-10-29"},{"lineNumber":401,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":402,"author":{"gitId":"bernardboey"},"content":"Removes certain amount of ingredients from the ingredient repository based on the recipe that is cooked.","lastModifiedDate":"2021-10-29"},{"lineNumber":403,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":404,"author":{"gitId":"vincentlauhl"},"content":"Format: `cooked r/RECIPE`","lastModifiedDate":"2021-10-28"},{"lineNumber":405,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":406,"author":{"gitId":"bernardboey"},"content":"- Removes a certain amount of ingredients from the ingredient repository according to the amount of the ingredients","lastModifiedDate":"2021-10-29"},{"lineNumber":407,"author":{"gitId":"vincentlauhl"},"content":"  for the `RECIPE`.","lastModifiedDate":"2021-10-28"},{"lineNumber":408,"author":{"gitId":"vincentlauhl"},"content":"- The recipe name is case-insensitive (typing `cHiCKEn sOUP` would cause the given amount of ingredients in ","lastModifiedDate":"2021-10-28"},{"lineNumber":409,"author":{"gitId":"bernardboey"},"content":"  `Chicken Soup` to be removed from the ingredient repository).","lastModifiedDate":"2021-10-29"},{"lineNumber":410,"author":{"gitId":"vincentlauhl"},"content":"- The recipe name specified must exist in the list.","lastModifiedDate":"2021-10-28"},{"lineNumber":411,"author":{"gitId":"bernardboey"},"content":"- The quantities of ingredients in the ingredient repository should be sufficient to cook the recipe ","lastModifiedDate":"2021-10-29"},{"lineNumber":412,"author":{"gitId":"vincentlauhl"},"content":"  for it to be removed.","lastModifiedDate":"2021-10-28"},{"lineNumber":413,"author":{"gitId":"bernardboey"},"content":"- The batches of ingredients that expire the earliest will be remove first.","lastModifiedDate":"2021-10-29"},{"lineNumber":414,"author":{"gitId":"vincentlauhl"},"content":"- Expired ingredients can be removed with this command so the user must be careful in managing ","lastModifiedDate":"2021-10-28"},{"lineNumber":415,"author":{"gitId":"bernardboey"},"content":"  expired ingredients (see [Deleting all expired ingredients](#deleting-all-expired-ingredients-delete-expired)).","lastModifiedDate":"2021-10-29"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":417,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-10-27"},{"lineNumber":418,"author":{"gitId":"vincentlauhl"},"content":"- `cooked r/Chicken Soup`","lastModifiedDate":"2021-10-28"},{"lineNumber":419,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":420,"author":{"gitId":"vincentlauhl"},"content":"Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":421,"author":{"gitId":"vincentlauhl"},"content":"- If there are sufficient ingredients.","lastModifiedDate":"2021-11-03"},{"lineNumber":422,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":423,"author":{"gitId":"vincentlauhl"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":424,"author":{"gitId":"vincentlauhl"},"content":"     Now you have these quantities left for your ingredients:","lastModifiedDate":"2021-11-03"},{"lineNumber":425,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":426,"author":{"gitId":"vincentlauhl"},"content":"     Chicken (qty: 1)","lastModifiedDate":"2021-11-03"},{"lineNumber":427,"author":{"gitId":"vincentlauhl"},"content":"     - 1 (2021-11-20)","lastModifiedDate":"2021-11-03"},{"lineNumber":428,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":429,"author":{"gitId":"vincentlauhl"},"content":"     Salt (qty: 20)","lastModifiedDate":"2021-11-03"},{"lineNumber":430,"author":{"gitId":"vincentlauhl"},"content":"     - 20 (2021-12-31)","lastModifiedDate":"2021-11-03"},{"lineNumber":431,"author":{"gitId":"vincentlauhl"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":432,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":433,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":434,"author":{"gitId":"vincentlauhl"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":435,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":436,"author":{"gitId":"bernardboey"},"content":"### Listing recipes that can be cooked: `list recipes I can cook`","lastModifiedDate":"2021-10-29"},{"lineNumber":437,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":438,"author":{"gitId":"vincentlauhl"},"content":"Returns a list of recipes which the user can cook with the ingredients they currently have ","lastModifiedDate":"2021-10-28"},{"lineNumber":439,"author":{"gitId":"bernardboey"},"content":"in their ingredient repository.","lastModifiedDate":"2021-10-29"},{"lineNumber":440,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":441,"author":{"gitId":"vincentlauhl"},"content":"Format: `list recipes i can cook`","lastModifiedDate":"2021-10-28"},{"lineNumber":442,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":443,"author":{"gitId":"bernardboey"},"content":"- There must be sufficient ingredients in the ingredient repository to cook the recipe for the recipe","lastModifiedDate":"2021-10-29"},{"lineNumber":444,"author":{"gitId":"vincentlauhl"},"content":"  to be shown in the list.","lastModifiedDate":"2021-10-28"},{"lineNumber":445,"author":{"gitId":"vincentlauhl"},"content":"- The recipe will be shown even if some ingredients have expired and the user will be informed ","lastModifiedDate":"2021-10-28"},{"lineNumber":446,"author":{"gitId":"vincentlauhl"},"content":"  of the ingredients that have expired.","lastModifiedDate":"2021-10-28"},{"lineNumber":447,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":448,"author":{"gitId":"vincentlauhl"},"content":"Example of usage: ","lastModifiedDate":"2021-10-28"},{"lineNumber":449,"author":{"gitId":"vincentlauhl"},"content":"- `list recipes i can cook`","lastModifiedDate":"2021-10-28"},{"lineNumber":450,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":451,"author":{"gitId":"vincentlauhl"},"content":"Output: ","lastModifiedDate":"2021-11-03"},{"lineNumber":452,"author":{"gitId":"vincentlauhl"},"content":"- If there are no expired ingredients","lastModifiedDate":"2021-11-03"},{"lineNumber":453,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":454,"author":{"gitId":"vincentlauhl"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":455,"author":{"gitId":"vincentlauhl"},"content":"     Here are the recipes you can cook with the ingredients you have:","lastModifiedDate":"2021-11-03"},{"lineNumber":456,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":457,"author":{"gitId":"vincentlauhl"},"content":"     Chicken Soup","lastModifiedDate":"2021-11-03"},{"lineNumber":458,"author":{"gitId":"vincentlauhl"},"content":"     - Chicken (qty: 1)","lastModifiedDate":"2021-11-03"},{"lineNumber":459,"author":{"gitId":"vincentlauhl"},"content":"     - Salt (qty: 20)","lastModifiedDate":"2021-11-03"},{"lineNumber":460,"author":{"gitId":"vincentlauhl"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":461,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":462,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":463,"author":{"gitId":"vincentlauhl"},"content":"- If there are expired ingredients","lastModifiedDate":"2021-11-03"},{"lineNumber":464,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":465,"author":{"gitId":"vincentlauhl"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":466,"author":{"gitId":"vincentlauhl"},"content":"     Here are the recipes you can cook with the ingredients you have:","lastModifiedDate":"2021-11-03"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":468,"author":{"gitId":"vincentlauhl"},"content":"     Chicken Soup","lastModifiedDate":"2021-11-03"},{"lineNumber":469,"author":{"gitId":"vincentlauhl"},"content":"     - Chicken (qty: 1)","lastModifiedDate":"2021-11-03"},{"lineNumber":470,"author":{"gitId":"vincentlauhl"},"content":"     - Salt (qty: 20)","lastModifiedDate":"2021-11-03"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":472,"author":{"gitId":"vincentlauhl"},"content":"     Note that some of these ingredients have expired:","lastModifiedDate":"2021-11-03"},{"lineNumber":473,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":474,"author":{"gitId":"vincentlauhl"},"content":"     Chicken","lastModifiedDate":"2021-11-03"},{"lineNumber":475,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":476,"author":{"gitId":"vincentlauhl"},"content":"     Please remove them if you don\u0027t want to use them for your recipe.","lastModifiedDate":"2021-11-03"},{"lineNumber":477,"author":{"gitId":"vincentlauhl"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":478,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":479,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":480,"author":{"gitId":"KairuiHu"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":481,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":482,"author":{"gitId":"bernardboey"},"content":"### Listing all recipes: `list recipes`","lastModifiedDate":"2021-10-29"},{"lineNumber":483,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":484,"author":{"gitId":"bernardboey"},"content":"Returns a list of recipes that are stored in the recipe list.","lastModifiedDate":"2021-10-29"},{"lineNumber":485,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":486,"author":{"gitId":"KairuiHu"},"content":"Format: `list recipes`","lastModifiedDate":"2021-10-29"},{"lineNumber":487,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":488,"author":{"gitId":"KairuiHu"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":489,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":490,"author":{"gitId":"bernardboey"},"content":"### Viewing a specific recipe: `view recipe`","lastModifiedDate":"2021-10-29"},{"lineNumber":491,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":492,"author":{"gitId":"bernardboey"},"content":"Views a specific recipe in the recipe list, along with the corresponding ingredients and quantities.","lastModifiedDate":"2021-10-29"},{"lineNumber":493,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":494,"author":{"gitId":"KairuiHu"},"content":"Format: `view recipe r/RECIPE`","lastModifiedDate":"2021-10-29"},{"lineNumber":495,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":496,"author":{"gitId":"bernardboey"},"content":"- The search is case-insensitive. e.g `pasta` will match `Pasta`. ","lastModifiedDate":"2021-10-29"},{"lineNumber":497,"author":{"gitId":"bernardboey"},"content":"- The order of the keywords matter. e.g. `Nasi Padang` will NOT match `Padang Nasi`. ","lastModifiedDate":"2021-10-29"},{"lineNumber":498,"author":{"gitId":"bernardboey"},"content":"- The input should only contain the name of the recipe. ","lastModifiedDate":"2021-10-29"},{"lineNumber":499,"author":{"gitId":"bernardboey"},"content":"- Only the full name will be matched. e.g. `Chicken` will NOT match `Curry Chicken`.","lastModifiedDate":"2021-10-29"},{"lineNumber":500,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":501,"author":{"gitId":"KairuiHu"},"content":"Example of usage:","lastModifiedDate":"2021-10-29"},{"lineNumber":502,"author":{"gitId":"KairuiHu"},"content":"- `view recipe r/Curry Chicken`","lastModifiedDate":"2021-10-29"},{"lineNumber":503,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":504,"author":{"gitId":"KairuiHu"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":505,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":506,"author":{"gitId":"bernardboey"},"content":"### Updating quantities of ingredients in a recipe: `update recipe`","lastModifiedDate":"2021-10-29"},{"lineNumber":507,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":508,"author":{"gitId":"bernardboey"},"content":"Updates a recipe by modifying the quantity of ingredients in that recipe.","lastModifiedDate":"2021-10-29"},{"lineNumber":509,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":510,"author":{"gitId":"bernardboey"},"content":"Format: `update recipe r/RECIPE i/INGREDIENT q/QUANTITY i/INGREDIENT q/QUANTITY ...`","lastModifiedDate":"2021-10-29"},{"lineNumber":511,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":512,"author":{"gitId":"bernardboey"},"content":"- It is not possible to update an ingredient to be zero quantity.","lastModifiedDate":"2021-10-29"},{"lineNumber":513,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":514,"author":{"gitId":"KairuiHu"},"content":"Example of usage:","lastModifiedDate":"2021-10-29"},{"lineNumber":515,"author":{"gitId":"KairuiHu"},"content":"- `update recipe r/Apple Pie i/apple q/3 i/flour q/200`","lastModifiedDate":"2021-10-29"},{"lineNumber":516,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":517,"author":{"gitId":"KairuiHu"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":518,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":519,"author":{"gitId":"bernardboey"},"content":"### Creating a shopping list of ingredients for a list of recipes: `shopping list`","lastModifiedDate":"2021-10-29"},{"lineNumber":520,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":521,"author":{"gitId":"JoshHDs"},"content":"Takes in multiple recipes the user wants to cook, and generates a shopping list of ingredients that","lastModifiedDate":"2021-10-29"},{"lineNumber":522,"author":{"gitId":"JoshHDs"},"content":"the user does not have and needs to buy.","lastModifiedDate":"2021-10-29"},{"lineNumber":523,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":524,"author":{"gitId":"bernardboey"},"content":"Format: `shopping list r/RECIPE...`","lastModifiedDate":"2021-10-29"},{"lineNumber":525,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":526,"author":{"gitId":"bernardboey"},"content":"- Can take in multiple recipe inputs.","lastModifiedDate":"2021-10-29"},{"lineNumber":527,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":528,"author":{"gitId":"JoshHDs"},"content":"Example of usage:","lastModifiedDate":"2021-10-29"},{"lineNumber":529,"author":{"gitId":"JoshHDs"},"content":"- `shopping list r/Chicken Soup`","lastModifiedDate":"2021-10-29"},{"lineNumber":530,"author":{"gitId":"JoshHDs"},"content":"- `shopping list r/Chicken Soup r/Pork Soup`","lastModifiedDate":"2021-10-29"},{"lineNumber":531,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":532,"author":{"gitId":"JoshHDs"},"content":"Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":533,"author":{"gitId":"JoshHDs"},"content":"- If recipe exists:","lastModifiedDate":"2021-11-03"},{"lineNumber":534,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":535,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":536,"author":{"gitId":"JoshHDs"},"content":"     Here is your shopping list!","lastModifiedDate":"2021-11-03"},{"lineNumber":537,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":538,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":539,"author":{"gitId":"JoshHDs"},"content":"     Chicken (qty: 296 kg)","lastModifiedDate":"2021-11-03"},{"lineNumber":540,"author":{"gitId":"JoshHDs"},"content":"     Pork (qty: 300)","lastModifiedDate":"2021-11-03"},{"lineNumber":541,"author":{"gitId":"JoshHDs"},"content":"     Salt (qty: 20 kilograms)","lastModifiedDate":"2021-11-03"},{"lineNumber":542,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":543,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":544,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":545,"author":{"gitId":"JoshHDs"},"content":"- If at least one recipe does not exist:","lastModifiedDate":"2021-11-03"},{"lineNumber":546,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":547,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":548,"author":{"gitId":"JoshHDs"},"content":"     Sorry. One or more of your recipes are not found!","lastModifiedDate":"2021-11-03"},{"lineNumber":549,"author":{"gitId":"JoshHDs"},"content":"    ____________________________________________________________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":550,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":551,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":552,"author":{"gitId":"KairuiHu"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":553,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":554,"author":{"gitId":"bernardboey"},"content":"### Viewing help: `help`","lastModifiedDate":"2021-10-29"},{"lineNumber":555,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":556,"author":{"gitId":"bernardboey"},"content":"Shows a help message explaining the various commands.","lastModifiedDate":"2021-10-29"},{"lineNumber":557,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":558,"author":{"gitId":"KairuiHu"},"content":"Format: `help`","lastModifiedDate":"2021-10-29"},{"lineNumber":559,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":560,"author":{"gitId":"KairuiHu"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":561,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":562,"author":{"gitId":"bernardboey"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2021-10-29"},{"lineNumber":563,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":564,"author":{"gitId":"bernardboey"},"content":"Exits the program.","lastModifiedDate":"2021-10-29"},{"lineNumber":565,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":566,"author":{"gitId":"bernardboey"},"content":"Format: `bye`","lastModifiedDate":"2021-10-29"},{"lineNumber":567,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":568,"author":{"gitId":"bernardboey"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":570,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":572,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":574,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":576,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":578,"author":{"gitId":"bernardboey"},"content":"1. Adding an ingredient","lastModifiedDate":"2021-10-29"},{"lineNumber":579,"author":{"gitId":"bernardboey"},"content":"    - Command: `add i/INGREDIENT [u/UNIT] [q/QUANTITY e/EXPIRY_DATE]`","lastModifiedDate":"2021-10-29"},{"lineNumber":580,"author":{"gitId":"bernardboey"},"content":"    - E.g.: `add i/Red Apple`","lastModifiedDate":"2021-10-29"},{"lineNumber":581,"author":{"gitId":"bernardboey"},"content":"    - E.g.: `add i/Salt u/g`","lastModifiedDate":"2021-10-29"},{"lineNumber":582,"author":{"gitId":"bernardboey"},"content":"    - E.g.: `add i/Red Apple q/5 e/2021-10-08`","lastModifiedDate":"2021-10-29"},{"lineNumber":583,"author":{"gitId":"bernardboey"},"content":"    - E.g.: `add i/Salt u/g q/1000 e/2021-01-01`","lastModifiedDate":"2021-10-29"},{"lineNumber":584,"author":{"gitId":"bernardboey"},"content":"2. Incrementing quantities for an ingredient","lastModifiedDate":"2021-10-29"},{"lineNumber":585,"author":{"gitId":"bernardboey"},"content":"    - Command: `increment i/INGREDIENT q/QUANTITY e/EXPIRY_DATE`","lastModifiedDate":"2021-10-29"},{"lineNumber":586,"author":{"gitId":"bernardboey"},"content":"    - E.g.: `increment i/Red Apple q/6 e/2021-10-22`","lastModifiedDate":"2021-10-29"},{"lineNumber":587,"author":{"gitId":"bernardboey"},"content":"    - E.g.: `increment i/Salt q/200 e/2021-10-22`","lastModifiedDate":"2021-10-29"},{"lineNumber":588,"author":{"gitId":"bernardboey"},"content":"3. Decrementing quantities for an ingredient","lastModifiedDate":"2021-10-29"},{"lineNumber":589,"author":{"gitId":"bernardboey"},"content":"    - Command: `decrement i/INGREDIENT q/QUANTITY`","lastModifiedDate":"2021-10-29"},{"lineNumber":590,"author":{"gitId":"bernardboey"},"content":"    - E.g.: `decrement i/Red Apple q/2`","lastModifiedDate":"2021-10-29"},{"lineNumber":591,"author":{"gitId":"bernardboey"},"content":"    - E.g.: `decrement i/Salt q/10`","lastModifiedDate":"2021-10-29"},{"lineNumber":592,"author":{"gitId":"bernardboey"},"content":"4. Updating units of an ingredient","lastModifiedDate":"2021-10-29"},{"lineNumber":593,"author":{"gitId":"bernardboey"},"content":"    - Command: `update units i/INGREDIENT u/UNIT`","lastModifiedDate":"2021-10-29"},{"lineNumber":594,"author":{"gitId":"bernardboey"},"content":"    - E.g.: `update units i/salt u/kilograms`","lastModifiedDate":"2021-10-29"},{"lineNumber":595,"author":{"gitId":"bernardboey"},"content":"    - E.g.: `update units i/salt u/`","lastModifiedDate":"2021-10-29"},{"lineNumber":596,"author":{"gitId":"bernardboey"},"content":"5. Listing all ingredients","lastModifiedDate":"2021-10-29"},{"lineNumber":597,"author":{"gitId":"bernardboey"},"content":"    - Command: `list`","lastModifiedDate":"2021-10-29"},{"lineNumber":598,"author":{"gitId":"bernardboey"},"content":"6. Listing ingredients that are expiring","lastModifiedDate":"2021-10-29"},{"lineNumber":599,"author":{"gitId":"bernardboey"},"content":"    - Command: `list expiring`","lastModifiedDate":"2021-10-29"},{"lineNumber":600,"author":{"gitId":"bernardboey"},"content":"7. Listing ingredients that have expired","lastModifiedDate":"2021-10-29"},{"lineNumber":601,"author":{"gitId":"bernardboey"},"content":"    - Command: `list expired`","lastModifiedDate":"2021-10-29"},{"lineNumber":602,"author":{"gitId":"bernardboey"},"content":"8. Viewing a specific ingredient","lastModifiedDate":"2021-10-29"},{"lineNumber":603,"author":{"gitId":"bernardboey"},"content":"    - Command: `view i/INGREDIENT`","lastModifiedDate":"2021-10-29"},{"lineNumber":604,"author":{"gitId":"bernardboey"},"content":"    - E.g.: `view i/salt`","lastModifiedDate":"2021-10-29"},{"lineNumber":605,"author":{"gitId":"bernardboey"},"content":"9. Deleting an ingredient","lastModifiedDate":"2021-10-29"},{"lineNumber":606,"author":{"gitId":"bernardboey"},"content":"    - Command: `delete i/INGREDIENT`","lastModifiedDate":"2021-10-29"},{"lineNumber":607,"author":{"gitId":"bernardboey"},"content":"    - E.g. `delete i/Red Apple`","lastModifiedDate":"2021-10-29"},{"lineNumber":608,"author":{"gitId":"bernardboey"},"content":"10. Deleting all expired ingredients","lastModifiedDate":"2021-10-29"},{"lineNumber":609,"author":{"gitId":"bernardboey"},"content":"    - Command: `delete expired`","lastModifiedDate":"2021-10-29"},{"lineNumber":610,"author":{"gitId":"bernardboey"},"content":"11. Adding a recipe","lastModifiedDate":"2021-10-29"},{"lineNumber":611,"author":{"gitId":"bernardboey"},"content":"    - Command: `add recipe r/RECIPE i/INGREDIENT q/QUANTITY i/INGREDIENT q/QUANTITY ...`","lastModifiedDate":"2021-10-29"},{"lineNumber":612,"author":{"gitId":"vincentlauhl"},"content":"    - E.g.: `add recipe r/Chicken Soup i/Chicken q/300 i/Salt q/10`","lastModifiedDate":"2021-10-28"},{"lineNumber":613,"author":{"gitId":"vincentlauhl"},"content":"    - E.g.: `add recipe r/Chicken Soup i/Chicken i/Salt q/300 q/10`","lastModifiedDate":"2021-10-28"},{"lineNumber":614,"author":{"gitId":"bernardboey"},"content":"12. Deleting a recipe","lastModifiedDate":"2021-10-29"},{"lineNumber":615,"author":{"gitId":"vincentlauhl"},"content":"    - Command : `delete recipe r/RECIPE`","lastModifiedDate":"2021-10-28"},{"lineNumber":616,"author":{"gitId":"vincentlauhl"},"content":"    - E.g.: `delete recipe r/Chicken Soup`","lastModifiedDate":"2021-10-28"},{"lineNumber":617,"author":{"gitId":"bernardboey"},"content":"13. Removing ingredients when a recipe is cooked:","lastModifiedDate":"2021-10-29"},{"lineNumber":618,"author":{"gitId":"vincentlauhl"},"content":"    - Command: `cooked r/RECIPE`","lastModifiedDate":"2021-10-28"},{"lineNumber":619,"author":{"gitId":"vincentlauhl"},"content":"    - E.g.: `cooked r/Chicken Soup`","lastModifiedDate":"2021-10-28"},{"lineNumber":620,"author":{"gitId":"bernardboey"},"content":"14. Listing recipes that can be cooked","lastModifiedDate":"2021-10-29"},{"lineNumber":621,"author":{"gitId":"bernardboey"},"content":"    - Command: `list recipes i can cook`","lastModifiedDate":"2021-10-29"},{"lineNumber":622,"author":{"gitId":"bernardboey"},"content":"15. Listing all recipes","lastModifiedDate":"2021-10-29"},{"lineNumber":623,"author":{"gitId":"KairuiHu"},"content":"    - Command: `list recipes`","lastModifiedDate":"2021-10-29"},{"lineNumber":624,"author":{"gitId":"bernardboey"},"content":"16. Viewing a specific recipe","lastModifiedDate":"2021-10-29"},{"lineNumber":625,"author":{"gitId":"KairuiHu"},"content":"    - Command: `view recipe r/RECIPE`","lastModifiedDate":"2021-10-29"},{"lineNumber":626,"author":{"gitId":"KairuiHu"},"content":"    - E.g.: `view recipe r/Curry Chicken`","lastModifiedDate":"2021-10-29"},{"lineNumber":627,"author":{"gitId":"bernardboey"},"content":"17. Updating quantities of ingredients in a recipe","lastModifiedDate":"2021-10-29"},{"lineNumber":628,"author":{"gitId":"bernardboey"},"content":"    - Command: `update recipe r/RECIPE i/INGREDIENT q/QUANTITY i/INGREDIENT q/QUANTITY ...`","lastModifiedDate":"2021-10-29"},{"lineNumber":629,"author":{"gitId":"KairuiHu"},"content":"    - E.g.: `update recipe r/Apple Pie i/apple q/3 i/flour q/200`","lastModifiedDate":"2021-10-29"},{"lineNumber":630,"author":{"gitId":"bernardboey"},"content":"18. Creating a shopping list of ingredients for a list of recipes","lastModifiedDate":"2021-10-29"},{"lineNumber":631,"author":{"gitId":"bernardboey"},"content":"    - Command: `shopping list r/RECIPE...`","lastModifiedDate":"2021-10-29"},{"lineNumber":632,"author":{"gitId":"bernardboey"},"content":"    - E.g.: `shopping list r/Chicken Soup`","lastModifiedDate":"2021-10-29"},{"lineNumber":633,"author":{"gitId":"bernardboey"},"content":"    - E.g.: `shopping list r/Chicken Soup r/Pork Soup`","lastModifiedDate":"2021-10-29"},{"lineNumber":634,"author":{"gitId":"bernardboey"},"content":"19. Viewing help","lastModifiedDate":"2021-10-29"},{"lineNumber":635,"author":{"gitId":"KairuiHu"},"content":"    - Command: `help`","lastModifiedDate":"2021-10-29"},{"lineNumber":636,"author":{"gitId":"bernardboey"},"content":"20. Exiting the program","lastModifiedDate":"2021-10-29"},{"lineNumber":637,"author":{"gitId":"bernardboey"},"content":"    - Command: `bye`","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"bernardboey":190,"KairuiHu":36,"vincentlauhl":160,"-":35,"JoshHDs":216}},{"path":"docs/diagrams/AddRecipe.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"!include style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"skinparam defaultFontSize 25","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"autonumber","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"box Logic","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"-\u003e \":Parser\": parseCommand(userInput)","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"activate \":Parser\"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"create \":AddRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"note right of \":AddRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"AddRecipeCommand() is called with the following args","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"- recipeName","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"- ingredientNames","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"- quantities","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"end note","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"\":Parser\" -\u003e \":AddRecipeCommand\" : AddRecipeCommand()","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"activate \":AddRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"return command","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"-\u003e \":AddRecipeCommand\" : execute(ingredients,recipes)","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"activate \":AddRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"box Data","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"create \"recipe :Recipe\"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"\":AddRecipeCommand\" -\u003e \"recipe :Recipe\" : Recipe(name)","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"activate \"recipe :Recipe\"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"loop all ingredients","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"\":AddRecipeCommand\" -\u003e \"recipe :Recipe\" : add()","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"note right","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"add() is called with the following args","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"- ingredientName","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"- quantity","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"- ingredients","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"end note","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"activate \"recipe :Recipe\"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"create \":IngredientQuantity\"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"\"recipe :Recipe\" -\u003e \":IngredientQuantity\" : IngredientQuantity()","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"activate \":IngredientQuantity\"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"end","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"\":AddRecipeCommand\" -\u003e \"recipes :RecipeList\" : add(recipe)","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"activate \"recipes :RecipeList\"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"return message","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"destroy \":AddRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"vincentlauhl":62}},{"path":"docs/diagrams/ArgParsersClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"class \"{abstract}\\nSingleArgParser\u003cT\u003e\" as SingleArgParser","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"class \"{abstract}\\nMultipleArgParser\u003cT\u003e\" as MultipleArgParser","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"class SingleArgParser {","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"    + {abstract} parse(argString: String) : T","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"class MultipleArgParser extends SingleArgParser {","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"    +parse(argList: ArrayList\u003cString\u003e) : ArrayList\u003cT\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"class ExpiryDateParser\u003cLocalDate\u003e extends SingleArgParser {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    +parse(argString: String) : LocalDate","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"class IngredientParser\u003cString\u003e extends MultipleArgParser {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"    +parse(argString: String) : String","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"class QuantityParser\u003cInteger\u003e extends MultipleArgParser {","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    +parse(argString: String) : Integer","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"class RecipeParser\u003cString\u003e extends MultipleArgParser {","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    +parse(argString: String) : String","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"class UnitParser\u003cString\u003e extends SingleArgParser {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"    +parse(argString: String) : String","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"class Parser {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"    +parseCommand(userInput: String) : Command","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"Parser .up.\u003e ExpiryDateParser","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"Parser .up.\u003e IngredientParser","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"Parser .up.\u003e QuantityParser","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"Parser .up.\u003e RecipeParser","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"Parser .up.\u003e UnitParser","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"bernardboey":39}},{"path":"docs/diagrams/CookedRecipe.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"!include style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"skinparam defaultFontSize 25","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"autonumber","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"box Logic","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"-\u003e \":Parser\": parseCommand(userInput)","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"activate \":Parser\"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"create \":CookedRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"\":Parser\" -\u003e \":CookedRecipeCommand\" : CookedRecipeCommand(name)","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"activate \":CookedRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"return command","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"-\u003e \":CookedRecipeCommand\" : execute(ingredients, recipes)","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"activate \":CookedRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"box Data","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"\":CookedRecipeCommand\" -\u003e \"recipes :RecipeList\" : findRecipe(name)","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"activate \"recipes :RecipeList\"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"return recipe","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"\":CookedRecipeCommand\" -\u003e \":Recipe\" : getIngredientQuantities()","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"activate \":Recipe\"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"return ingredientsInRecipe","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"\":CookedRecipeCommand\" -\u003e \":CookedRecipeCommand\" : allIngredientsAreSufficient()","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"note right","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"allIngredientsAreSufficient() is called with the following args:","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"- ingredientsInRecipe","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"- Ingredients","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"end note","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"activate \":CookedRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"opt all ingredients are sufficient","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"loop all ingredients in recipe","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"\":CookedRecipeCommand\" -\u003e \"ingredients :IngredientRepository\" : findWithNullReturn(name)","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"activate \"ingredients :IngredientRepository\"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"return ingredientStorage","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"\":CookedRecipeCommand\" -\u003e \":IngredientStorage\" : remove(quantity)","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"activate \":IngredientStorage\"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"return ingredient","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"end","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"end","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"return message","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"destroy \":CookedRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"vincentlauhl":59}},{"path":"docs/diagrams/Data.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"!include style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"class ExpiryEliminator","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"component Data {","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"class Recipe {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"    -name: String","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"    +Recipe(name: String)","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"class IngredientStorage {","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"    -quantity: int","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    -ingredientBatches: TreeMap\u003cLocalDate, Integer\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"class IngredientQuantity {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    -quantity: int","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"class IngredientRepository","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"class RecipeList","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"class Ingredient {","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    -name: String","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    -unit: String","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"IngredientStorage o--\u003e \"1\"Ingredient","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"IngredientRepository o--\u003e \"*\" IngredientStorage","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"IngredientQuantity o--\u003e \"1\" Ingredient","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"Recipe o--\u003e \"*\" IngredientQuantity","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"RecipeList o--\u003e \"*\" Recipe","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"Recipe ..\u003e IngredientRepository","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"ExpiryEliminator o--\u003e \"1\"IngredientRepository","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"ExpiryEliminator o--\u003e \"1\"RecipeList","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"vincentlauhl":38}},{"path":"docs/diagrams/DeleteExpiredIngredients.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"!include style.puml","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"participant \":DeleteExpiredIngredientsCommand\" as DeleteExpiredIngredientsCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"participant \":IngredientRepository\" as IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"autonumber","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":" -\u003e Parser: parseCommand()","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"activate Parser","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"return command","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"destroy Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":" -\u003e DeleteExpiredIngredientsCommand: execute()","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"activate DeleteExpiredIngredientsCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"DeleteExpiredIngredientsCommand -\u003e IngredientRepository: deleteExpiredIngredients()","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"activate IngredientRepository","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"return boolean","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"destroy IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"return message","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"destroy DeleteExpiredIngredientsCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"JoshHDs":30}},{"path":"docs/diagrams/DeleteRecipe.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"!include style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"autonumber","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"box Logic","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"-\u003e \":Parser\": parseCommand(userInput)","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"activate \":Parser\"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"create \":DeleteRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"\":Parser\" -\u003e \":DeleteRecipeCommand\" : DeleteRecipeCommand(recipeName)","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"activate \":DeleteRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"return command","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"-\u003e \":DeleteRecipeCommand\" : execute(ingredients,recipes)","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"activate \":DeleteRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"box Data","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"\":DeleteRecipeCommand\" -\u003e \"recipes :RecipeList\" : remove(recipeName)","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"activate \"recipes :RecipeList\"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"return message","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"destroy \":DeleteRecipeCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"vincentlauhl":31}},{"path":"docs/diagrams/List.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"!include style.puml","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"participant \":ListCommand\" as ListCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"participant \":IngredientRepository\" as IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"participant \":IngredientStorage\" as IngredientStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"autonumber","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":" -\u003e Parser: parseCommand()","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"activate Parser","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"return command","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"destroy Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"-\u003e ListCommand: execute()","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"activate ListCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"opt ingredientRepository.size() \u003e0","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"    ListCommand -\u003e IngredientRepository: printWholeList()","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"    activate IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"        loop IngredientStorages","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"            IngredientRepository -\u003e IngredientStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"            activate IngredientStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"            IngredientStorage --\u003e IngredientRepository: ingredientStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"            deactivate IngredientStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"        end","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"    return list","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"    destroy IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"end","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"return list","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"destroy ListCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"JoshHDs":45}},{"path":"docs/diagrams/ListIngredientsExpired.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"!include style.puml","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"participant \":ListIngredientsExpiredCommand\" as ListIngredientsExpiredCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"participant \":IngredientRepository\" as IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"participant \":IngredientStorage\" as IngredientStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"autonumber","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":" -\u003e Parser: parseCommand()","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"activate Parser","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"return command","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"destroy Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"-\u003e ListIngredientsExpiredCommand: execute()","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"activate ListIngredientsExpiredCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"ListIngredientsExpiredCommand -\u003e IngredientRepository: findExpiredIngredients()","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"activate IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"loop ingredientStorages","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"    IngredientRepository -\u003e IngredientStorage: getIngredient()","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"    activate IngredientStorage","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"    IngredientStorage --\u003e IngredientRepository: ingredient: Ingredient","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"    deactivate IngredientStorage","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"    IngredientRepository -\u003e IngredientStorage: new(ingredient: Ingredient)","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"    activate IngredientStorage","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"    IngredientStorage -\u003e IngredientRepository: expiredIngredientStorage: IngredientStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"    deactivate IngredientStorage","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"    loop ingredientStorageBatches","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"            opt expiryDateOfBatch \u003c currentDate","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"                IngredientRepository -\u003e expiredIngredientStorage: add( ingredientBatch)","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"                activate expiredIngredientStorage","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"            end","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"    end","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"    expiredIngredientStorage --\u003e IngredientRepository:expiredIngredientStorage: IngredientStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"    deactivate expiredIngredientStorage","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"JoshHDs"},"content":"end","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"JoshHDs"},"content":"IngredientRepository --\u003e ListIngredientsExpiredCommand: list","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"JoshHDs"},"content":"deactivate IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"JoshHDs"},"content":"return list","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"JoshHDs"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"JoshHDs":59}},{"path":"docs/diagrams/ListRecipes.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KairuiHu"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"KairuiHu"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"autonumber","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":" -\u003e Parser: parseCommand()","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"KairuiHu"},"content":"activate Parser","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"Parser -\u003e ListRecipeCommand: execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"activate ListRecipeCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"ListRecipeCommand -\u003e recipeList: getWholeRecipeList()","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"activate recipeList","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"recipeList -\u003e Recipe: toString()","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"activate Recipe","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"Recipe --\u003e recipeList: String","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"deactivate Recipe","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"recipeList --\u003e ListRecipeCommand: String","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"deactivate recipeList","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"ListRecipeCommand --\u003e Parser: String","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"deactivate ListRecipeCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"\u003c-- Parser: Command","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"KairuiHu"},"content":"deactivate Parser","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"KairuiHu":23}},{"path":"docs/diagrams/ListRecipesUserCanCook.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"!include style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"skinparam defaultFontSize 25","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"autonumber","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"box Logic","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"-\u003e \":Parser\" : parseCommand(userInput)","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"activate \":Parser\"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"create \":ListRecipeUserCanCookCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"\":Parser\" -\u003e \":ListRecipeUserCanCookCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"activate \":ListRecipeUserCanCookCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"return command","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"-\u003e \":ListRecipeUserCanCookCommand\" : execute(ingredients,recipes)","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"activate \":ListRecipeUserCanCookCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"box Data","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"\":ListRecipeUserCanCookCommand\" -\u003e \"recipes :RecipeList\" : getRecipes()","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"activate \"recipes :RecipeList\"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"return recipes","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"loop recipes in \"recipes :RecipeList\"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"\":ListRecipeUserCanCookCommand\" -\u003e \":ListRecipeUserCanCookCommand\" : allIngredientsAreSufficient()","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"note right","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"allIngredientsAreSufficient() is called with the following args:","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"- ingredientsFromRecipe","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"- Ingredients","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"end note","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"activate \":ListRecipeUserCanCookCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"return","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"opt ingredients are sufficient","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"\":ListRecipeUserCanCookCommand\" -\u003e \":ListRecipeUserCanCookCommand\" : checkForExpiredIngredients()","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"note right","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"checkForExpiredIngredients() is called with the following args:","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"- ingredientsFromRecipe","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"- Ingredients","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"end note","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"activate \":ListRecipeUserCanCookCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"return recipe and expired ingredients","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"end","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"end","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"return recipes user can cook and expired ingredients","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"destroy \":ListRecipeUserCanCookCommand\"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"vincentlauhl":59}},{"path":"docs/diagrams/ParserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"class \"{abstract}\\nPrefix\" as Prefix","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"class Prefix {","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"    #prefix : String","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"    +getPrefix() : String","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"class SingleArgPrefix extends Prefix {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    +SingleArgPrefix(prefix: String)","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"class MultipleArgPrefix extends Prefix {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"    +MultipleArgPrefix(singleArgPrefix: SingleArgPrefix)","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"class OptionalArgPrefix extends SingleArgPrefix {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"    +OptionalArgPrefix(prefix : String)","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"class ArgsParser {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"    ~ArgsParser(prefixList: Prefix[])","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    ~parse(args: String) : void","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"    ~getSingleArg(prefix: SingleArgPrefix) : String","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    ~getArgList(prefix: MultipleArgPrefix) : ArrayList\u003cString\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"class Parser {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"    +{static}parseCommand(userInput: String) : Command","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"ArgsParser ..\u003e Prefix","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"ArgsParser ..\u003e SingleArgPrefix","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"ArgsParser ..\u003e MultipleArgPrefix","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"Parser ..\u003e ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"Parser \"1\" --\u003e \"4\" SingleArgPrefix","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"Parser \"1\" --\u003e \"3  \" MultipleArgPrefix","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"Parser \"    1\" --\u003e \"1 \" OptionalArgPrefix","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"MultipleArgPrefix .\u003e SingleArgPrefix","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"note bottom of MultipleArgPrefix","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"Parser has the following prefixes:","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"PREFIX_MULTIPLE_INGREDIENT","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"PREFIX_MULTIPLE_QUANTITY","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"PREFIX_MULTIPLE_RECIPE","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"note right of SingleArgPrefix","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"Parser has the following prefixes:","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"PREFIX_RECIPE","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"PREFIX_INGREDIENT","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"PREFIX_QUANTITY","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"PREFIX_EXPIRY","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"bernardboey"},"content":"note right of OptionalArgPrefix","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"Parser has the following prefix:","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"PREFIX_OPTIONAL_UNIT","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"bernardboey"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"bernardboey":60}},{"path":"docs/diagrams/ParserClassDiagramSimplified.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"hide members","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"class \"{abstract}\\nPrefix\" as Prefix","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"class SingleArgPrefix extends Prefix","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"class MultipleArgPrefix extends Prefix","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"class OptionalArgPrefix extends SingleArgPrefix","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"class ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"class Parser","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"class \"{abstract}\\nSingleArgParser\" as SingleArgParser","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"class \"{abstract}\\nMultipleArgParser\" as MultipleArgParser extends SingleArgParser","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"class ExpiryDateParser extends SingleArgParser","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"class IngredientParser extends MultipleArgParser","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"class QuantityParser extends MultipleArgParser","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"class RecipeParser extends MultipleArgParser","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"class UnitParser extends SingleArgParser","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"ArgsParser ..\u003e Prefix","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"ArgsParser ..\u003e SingleArgPrefix","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"ArgsParser ..\u003e MultipleArgPrefix","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"Parser ..\u003e ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"MultipleArgPrefix .\u003e SingleArgPrefix","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"bernardboey":27}},{"path":"docs/diagrams/ParserSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"@startuml","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"skinparam sequenceMessageAlign center","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"participant \":ArgsParser\" as ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"participant \":RecipeParser\" as RecipeParser","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"participant \":IngredientParser\" as IngredientParser","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"participant \":QuantityParser\" as QuantityParser","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"participant \"c:AddRecipeCommand\" as AddRecipeCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"-\u003e Parser: prepareAddRecipe(args)","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"activate Parser","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"create ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"Parser -\u003e ArgsParser : ArgsParser()","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"note right","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"ArgsParser() is called with the following args:","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"PREFIX_RECIPE","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"PREFIX_MULTIPLE_INGREDIENT","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"PREFIX_MULTIPLE_QUANTITY","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"activate ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"Parser \u003c- ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"deactivate ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"Parser -\u003e ArgsParser : parse(args)","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"activate ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"Parser \u003c- ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"deactivate ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"Parser -\u003e ArgsParser : getSingleArg()","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"note right","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"getSingleArg() is called with PREFIX_RECIPE","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"activate ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"Parser \u003c- ArgsParser : recipeArg","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"deactivate ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"create RecipeParser","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"Parser -\u003e RecipeParser","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"activate RecipeParser","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"Parser \u003c- RecipeParser","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"deactivate RecipeParser","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"Parser -\u003e RecipeParser : parse(recipeArg)","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"activate RecipeParser","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"Parser \u003c- RecipeParser : recipe","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"deactivate RecipeParser","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"destroy RecipeParser","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"Parser -\u003e ArgsParser : getArgList()","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"bernardboey"},"content":"note right","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"getArgList() is called with PREFIX_MULTIPLE_INGREDIENT","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"activate ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"Parser \u003c- ArgsParser : ingredientArgList","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"bernardboey"},"content":"deactivate ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"bernardboey"},"content":"create IngredientParser","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"bernardboey"},"content":"Parser -\u003e IngredientParser","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"bernardboey"},"content":"activate IngredientParser","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"bernardboey"},"content":"Parser \u003c- IngredientParser","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"bernardboey"},"content":"deactivate IngredientParser","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"bernardboey"},"content":"Parser -\u003e IngredientParser : parse(ingredientArgList)","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"bernardboey"},"content":"activate IngredientParser","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"bernardboey"},"content":"Parser \u003c- IngredientParser : ingredients","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"bernardboey"},"content":"deactivate IngredientParser","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"bernardboey"},"content":"destroy IngredientParser","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"bernardboey"},"content":"Parser -\u003e ArgsParser : getArgList()","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"bernardboey"},"content":"note right","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"bernardboey"},"content":"getArgList() is called with PREFIX_MULTIPLE_QUANTITY","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"bernardboey"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"bernardboey"},"content":"activate ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"bernardboey"},"content":"Parser \u003c- ArgsParser : quantityArgList","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"bernardboey"},"content":"deactivate ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"bernardboey"},"content":"create QuantityParser","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"bernardboey"},"content":"Parser -\u003e QuantityParser","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"bernardboey"},"content":"activate QuantityParser","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"bernardboey"},"content":"Parser \u003c- QuantityParser","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"bernardboey"},"content":"deactivate QuantityParser","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"bernardboey"},"content":"Parser -\u003e QuantityParser : parse(quantityArgList)","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"bernardboey"},"content":"activate QuantityParser","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"bernardboey"},"content":"Parser \u003c- QuantityParser : quantities","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"bernardboey"},"content":"deactivate QuantityParser","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"bernardboey"},"content":"destroy QuantityParser","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"bernardboey"},"content":"create AddRecipeCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"bernardboey"},"content":"Parser -\u003e AddRecipeCommand : AddRecipeCommand(recipe, ingredients, quantities)","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"bernardboey"},"content":"activate AddRecipeCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"bernardboey"},"content":"Parser \u003c- AddRecipeCommand : c","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"bernardboey"},"content":"deactivate AddRecipeCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"bernardboey"},"content":"\u003c- Parser: c","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"bernardboey"},"content":"destroy ArgsParser","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"bernardboey"},"content":"deactivate Parser","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"bernardboey"},"content":"@enduml","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"bernardboey":104}},{"path":"docs/diagrams/ShoppingList.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"!include style.puml","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"participant \":ShoppingListCommand\" as ShoppingListCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"participant \":IngredientRepository\" as IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"autonumber","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"-\u003e Parser: parseCommand()","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"activate Parser","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"Parser -\u003e Parser: prepareShoppingList()","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"activate Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"create ShoppingListCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"Parser -\u003e ShoppingListCommand: new()","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"activate ShoppingListCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"return shoppingListCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"return shoppingListCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"return shoppingListCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"destroy Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"-\u003e ShoppingListCommand: execute()","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"activate ShoppingListCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"ShoppingListCommand -\u003e IngredientRepository: generateShoppingList(recipes: Array\u003cRecipe\u003e)","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"activate IngredientRepository","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"loop recipes","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"    IngredientRepository -\u003e IngredientRepository: updateShoppingListItemQuantity(ingredientName: String, recipe: Recipe)","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"    activate IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"    IngredientRepository -\u003e IngredientRepository: totalIngredients: Treemap\u003cString, IngredientQuantity\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"    deactivate IngredientRepository","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"end","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"return shoppingList","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"destroy IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"return shoppingList","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"destroy ShoppingListCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"JoshHDs"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"JoshHDs":50}},{"path":"docs/diagrams/Storage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KairuiHu"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"KairuiHu"},"content":"\u0027https://plantuml.com/component-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"component \"Storage\" {","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"    component \"Ingredient Storage\" {","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"        [IngredientStorage] o--\u003e \"1\"[Ingredient]","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"        [IngredientRepository] o--\u003e \"*\" [IngredientStorage]","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"        [IngredientQuantity] o--\u003e \"1\" [Ingredient]","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"    component \"Recipe Storage\" {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"        [RecipeList] o--\u003e \"*\" [Recipe]","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"        [Recipe] o--\u003e \"*\" [IngredientQuantity]","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"    [SaveData] o-l-\u003e \"1\" [IngredientRepository]","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"    [SaveData] o-d-\u003e \"1\" [RecipeList]","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"KairuiHu"},"content":"XYZCommand ..\u003e [SaveData]","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"KairuiHu":23}},{"path":"docs/diagrams/UpdateUnits.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"!include style.puml","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"participant \":UpdateUnitsCommand\" as UpdateUnitsCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"participant \":IngredientRepository\" as IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"participant \":IngredientStorage\" as IngredientStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"participant \":RecipeList\" as RecipeList","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"autonumber","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"-\u003e Parser: parseCommand(userInput)","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"activate Parser","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"create UpdateUnitsCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"Parser -\u003e UpdateUnitsCommand : UpdateUnitsCommand()","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"activate UpdateUnitsCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"return updateUnitsCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"return command","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"destroy Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"-\u003e UpdateUnitsCommand: execute()","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"activate UpdateUnitsCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"UpdateUnitsCommand -\u003e IngredientRepository: find(ingredientName: String)","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"activate IngredientRepository","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"IngredientRepository --\u003e UpdateUnitsCommand: ingredientStorage: IngredientStorage","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"destroy IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"UpdateUnitsCommand -\u003e IngredientStorage: updateUnits(unit: String)","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"activate IngredientStorage","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"IngredientStorage --\u003e UpdateUnitsCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"destroy IngredientStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"UpdateUnitsCommand -\u003e RecipeList: updateUnits(ingredientName: String, unit: String)","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"activate RecipeList","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"RecipeList --\u003e UpdateUnitsCommand:","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"destroy RecipeList","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"\u003c-- UpdateUnitsCommand: message","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"destroy UpdateUnitsCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"JoshHDs":48}},{"path":"docs/diagrams/ViewIngredient.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"!include style.puml","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"participant \":ViewIngredientCommand\" as ViewIngredientCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"participant \":IngredientRepository\" as IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"autonumber","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"-\u003e Parser: parseCommand(userInput)","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"activate Parser","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"create ViewIngredientCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"Parser -\u003e ViewIngredientCommand: ViewIngredientCommand(ingredientName: String))","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"activate ViewIngredientCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"return viewIngredientCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"return command","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"destroy Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"-\u003e ViewIngredientCommand: execute()","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"activate ViewIngredientCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"ViewIngredientCommand -\u003e IngredientRepository: find(ingredientName: String)","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"activate IngredientRepository","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"IngredientRepository --\u003e ViewIngredientCommand: ingredient: IngredientStorage","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"destroy IngredientRepository","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"\u003c-- ViewIngredientCommand: ingredient","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"destroy ViewIngredientCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"JoshHDs":35}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"hide circle","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"hide footbox","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"skinparam componentStyle rectangle","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"bernardboey":7,"vincentlauhl":1}},{"path":"docs/team/bernardboey.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"# Bernard Boey - Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"## Overview","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"### Summary of Contributions","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"Command","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"Parser","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"- ArgsParser","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"- Prefixes","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"- SingleArgParser and MultipleArgParser","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"bernardboey":13}},{"path":"docs/team/vincentlau.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"#Vincent Lau - Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"##Overview","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"##Summary of Contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"### Code Contributed","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"- The [Reposense](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabAuthor\u003dvincentlauhl\u0026tabRepo\u003dAY2122S1-CS2113-T16-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026tabType\u003dauthorship)","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"  page shows the amount of code I have typed in terms of functionalities, documentation, and testing.","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"vincentlauhl":10}},{"path":"src/main/java/expiryeliminator/ExpiryEliminator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.common.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.Parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.storage.SaveData;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.storage.LoadData;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":" * Entry point of the ExpiryEliminator application.","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":" * Initialises the application and starts the interaction with the user.","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"public class ExpiryEliminator {","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    private static Ui ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    private static IngredientRepository ingredients;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"    private static RecipeList recipes;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ExpiryEliminator.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"     * Initialises the ExpiryEliminator application.","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"    public ExpiryEliminator() {","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"        ingredients \u003d new IngredientRepository();","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"        recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    //@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/ui/Ui.java","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Runs the program.","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void run() {","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ui.showGreeting();","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        LoadData.loadRecipeList(recipes);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        LoadData.loadIngredientRepo(ingredients);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            final String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.log(Level.INFO, \"Received used input: \" + userInput);","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            final Command command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            final String feedback \u003d command.execute(ingredients, recipes);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            SaveData.saveIngredientRepoToFile(ingredients);","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            SaveData.saveRecipeListToFile(recipes);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            ui.showToUser(feedback);","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //@author","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Main entry-point for the ExpiryEliminator application.","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"Starting program.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        new ExpiryEliminator().run();","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"Exiting program.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bernardboey":21,"KairuiHu":1,"vincentlauhl":4,"-":38,"JoshHDs":3}},{"path":"src/main/java/expiryeliminator/commands/AddIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":" * Adds an ingredient, together with its associated quantity and expiry date.","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"public class AddIngredientCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an ingredient to the ingredient repository.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"            + \"Ingredient names are case insensitive and must be unique.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"            + \"Parameters: i/INGREDIENT [u/UNIT]\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"            + \"Example: \" + COMMAND_WORD + \" i/Chicken u/grams\";","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_ADDED \u003d \"I\u0027ve added this ingredient:\\n\" + \"\\n%1$s\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"            + \"Now you have %2$s ingredient(s)\";","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_ALREADY_EXISTS \u003d \"Unable to add ingredient: %1$s\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"            + \"You already have it in your list\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"            + \"If you are trying to add quantities for an ingredient, please use the `increment` command instead\";","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    private final String name;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"    private final String unit;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"     * Instantiates ingredient with the specified name and unit.","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"     * @param name Name of ingredient to be added.","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"     * @param unit Unit for ingredient to be added. Can be null.","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"    public AddIngredientCommand(String name, String unit) {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"        assert name !\u003d null \u0026\u0026 !name.isBlank() : \"Ingredient name cannot be null and cannot be blank\";","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"        this.unit \u003d unit;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"    public String execute(IngredientRepository ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"        assert ingredients !\u003d null : \"Ingredient repository cannot be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"        final IngredientStorage ingredientStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"            ingredientStorage \u003d ingredients.add(name, unit);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"            return String.format(MESSAGE_INGREDIENT_ALREADY_EXISTS, name);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"        return String.format(MESSAGE_INGREDIENT_ADDED, ingredientStorage, ingredients.size());","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":51,"vincentlauhl":1}},{"path":"src/main/java/expiryeliminator/commands/AddRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":" * Adds a recipe, together with the ingredients needed.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"//@@author vincentlauhl","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"public class AddRecipeCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    public static final String COMMAND_WORD \u003d \"add recipe\";","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_RECIPE_ADDED \u003d \"I\u0027ve added this recipe:\\n\" + \"\\n%1$s\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"            + \"Now you have %2$s recipe(s)\";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_RECIPE_ADDED_WITH_REMINDER \u003d \"I\u0027ve added this recipe:\\n\" + \"\\n%1$s\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"            + \"Now you have %2$s recipe(s)\\n\" + \"\\nI\u0027ve also added these ingredients:\\n\" + \"\\n%3$s\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"            + \"Please update the unit if required.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_RECIPE_ALREADY_EXISTS \u003d \"Unable to add recipe: %1$s\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"            + \"You already have it in your list\";","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_DUPLICATE_INGREDIENT \u003d \"Unable to add recipe: %1$s\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"            + \"There is a duplicate ingredient: %2$s.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a recipe with its constituent ingredients\"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"            + \" to the recipe list.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"            + \"You can add any number of ingredients with its required quantities.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"            + \"You must add at least one ingredient to the recipe.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"            + \"Parameters: r/RECIPE NAME i/INGREDIENT... q/QUANTITY...\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"            + \" r/Chicken Soup i/Chicken q/1 i/Salt q/20 i/Ginger q/2\";","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_ILLEGAL_VALUE_ERROR \u003d \"Quantity of ingredients for recipe cannot be zero.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"    private final String name;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"    private final ArrayList\u003cString\u003e ingredientNames;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"    private final ArrayList\u003cInteger\u003e quantities;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"    public AddRecipeCommand(String name, ArrayList\u003cString\u003e ingredientNames, ArrayList\u003cInteger\u003e quantities) {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"        assert name !\u003d null : \"Recipe name cannot be null\";","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"        assert ingredientNames !\u003d null : \"Ingredient list cannot be null\";","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"        assert quantities !\u003d null : \"Quantity list cannot be null\";","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"        assert ingredientNames.size() !\u003d 0 : \"Ingredient list cannot be empty\";","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"        assert ingredientNames.size() \u003d\u003d quantities.size() : \"Quantity list cannot be empty\";","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"        this.ingredientNames \u003d ingredientNames;","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"        this.quantities \u003d quantities;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"    public String execute(IngredientRepository ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"        assert ingredients !\u003d null : \"Ingredient repository cannot be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"        assert recipes !\u003d null : \"Recipe list cannot be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"        final Recipe recipe \u003d new Recipe(name);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"        for (int i \u003d 0; i \u003c ingredientNames.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"                message +\u003d recipe.add(ingredientNames.get(i), quantities.get(i), ingredients);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"            } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"                return String.format(MESSAGE_DUPLICATE_INGREDIENT, name, ingredientNames.get(i));","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"            } catch (IllegalValueException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"                return MESSAGE_ILLEGAL_VALUE_ERROR;","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"            recipes.add(recipe);","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"vincentlauhl"},"content":"            return String.format(MESSAGE_RECIPE_ALREADY_EXISTS, name);","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"vincentlauhl"},"content":"        if (message.equals(\"\")) {","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"vincentlauhl"},"content":"            return String.format(MESSAGE_RECIPE_ADDED, recipe, recipes.size());","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"vincentlauhl"},"content":"        return String.format(MESSAGE_RECIPE_ADDED_WITH_REMINDER, recipe, recipes.size(), message);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"bernardboey":4,"vincentlauhl":76}},{"path":"src/main/java/expiryeliminator/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/commands/ByeCommand.java","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FAREWELL \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String execute(IngredientRepository ingredientRepository, RecipeList recipes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return MESSAGE_FAREWELL;","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":2,"-":29}},{"path":"src/main/java/expiryeliminator/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/commands/Command.java","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents an executable command.","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Executes the appropriate actions.","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param ingredients Ingredient repository.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param recipes Recipe List.","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @return Feedback about what was executed.","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public abstract String execute(IngredientRepository ingredients, RecipeList recipes);","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @return {@code true} if and only if the command is an exit command; {@code false} otherwise.","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":2,"-":30}},{"path":"src/main/java/expiryeliminator/commands/CookedRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientQuantity;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientStorage;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.exception.IllegalValueException;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":" * Updates the ingredient amounts in the repository based on the recipe that is cooked.","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"public class CookedRecipeCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"    public static final String COMMAND_WORD \u003d \"cooked\";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_RECIPE_COOKED \u003d \"Now you have these quantities left for your ingredients:\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"            + \"\\n%1$s\\n\";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_INSUFFICIENT_QUANTITY \u003d \"You don\u0027t have enough ingredients! \"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"            + \"Generate a shopping list to see what ingredients you\u0027re missing.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes the ingredients\u0027 quantities based on\"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"            + \"the recipe cooked.\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"            + \"Parameters: r/RECIPE NAME\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"            + \" r/Chicken Soup\";","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"    private final String name;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"    public CookedRecipeCommand(String name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"        assert name !\u003d null : \"The recipe name cannot be null\";","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"        assert !name.isEmpty() : \"The recipe name cannot be empty\";","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"    private boolean allIngredientsAreSufficient(TreeMap\u003cString, IngredientQuantity\u003e ingredientsFromRecipe,","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"                                                IngredientRepository ingredients) {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"        for (IngredientQuantity i : ingredientsFromRecipe.values()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"            IngredientStorage ingredient \u003d ingredients.findWithNullReturn(i.getName());","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"            assert ingredient !\u003d null : \"Ingredient should be in the repository after the recipe is added\";","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"            if (ingredient.getQuantity() \u003c i.getQuantity()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"                return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"    public String execute(IngredientRepository ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"        String ingredientsLeft \u003d \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"            Recipe recipe \u003d recipes.findRecipe(name);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"            TreeMap\u003cString, IngredientQuantity\u003e ingredientsInRecipe \u003d recipe.getIngredientQuantities();","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"            if (!allIngredientsAreSufficient(ingredientsInRecipe, ingredients)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"                return MESSAGE_INSUFFICIENT_QUANTITY;","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"            for (String s : ingredientsInRecipe.keySet()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"                IngredientStorage ingredient \u003d ingredients.findWithNullReturn(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"                assert ingredient !\u003d null : \"Ingredient should be added in when recipe is added.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"                ingredient.remove(ingredientsInRecipe.get(s).getQuantity());","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"                ingredientsLeft +\u003d ingredient + \"\\n\";","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"            return ViewRecipeCommand.MESSAGE_RECIPE_NOT_FOUND;","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"            assert false : \"The ingredients should have sufficient quantity\";","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"        return String.format(MESSAGE_RECIPE_COOKED, ingredientsLeft);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"bernardboey":5,"vincentlauhl":67}},{"path":"src/main/java/expiryeliminator/commands/DecrementCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":" * Decrement ingredient by a specified quantity.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"public class DecrementCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    public static final String COMMAND_WORD \u003d \"decrement\";","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"            COMMAND_WORD + \": Decreases the quantity of a specified ingredient by a specified amount.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"                    + \"Parameters: i/INGREDIENT q/QUANTITY e/EXPIRY_DATE\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"                    + \"Example: \" + COMMAND_WORD + \" i/Red Apple q/5 e/2021-12-25\";","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_NOT_FOUND \u003d \"Sorry. No matching ingredients found!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_QUANTITY_NEGATIVE \u003d \"Sorry, you currently only have %1$s of this ingredient.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"            + \"You cannot decrease it by %2$s.\\n\" + \"\\n%3$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_DECREMENTED \u003d \"I\u0027ve decremented this ingredient by %1$s:\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"            + \"\\n%2$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"    private final String ingredientName;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"    private final int quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"     * Initialises command and stores relevant parameters.","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient to be incremented.","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"     * @param quantity Quantity to increment by.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"    public DecrementCommand(String ingredientName, int quantity) {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"        assert ingredientName !\u003d null \u0026\u0026 !ingredientName.isBlank()","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"                : \"Ingredient name cannot be null and cannot be blank\";","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"        assert quantity \u003e\u003d 0 : \"Quantity cannot be negative\";","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"        this.ingredientName \u003d ingredientName;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"    public String execute(IngredientRepository ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"        assert ingredients !\u003d null : \"Ingredient repository cannot be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"        final IngredientStorage ingredientStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"            ingredientStorage \u003d ingredients.find(ingredientName);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"            return MESSAGE_INGREDIENT_NOT_FOUND;","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"            ingredientStorage.remove(quantity);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"bernardboey"},"content":"            return String.format(MESSAGE_QUANTITY_NEGATIVE, ingredientStorage.getQuantity(), quantity,","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"                    ingredientStorage);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"        return String.format(MESSAGE_INGREDIENT_DECREMENTED, quantity, ingredientStorage);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"bernardboey":60}},{"path":"src/main/java/expiryeliminator/commands/DeleteExpiredIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":" * Deletes all expired ingredients one shot.","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"public class DeleteExpiredIngredientCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    public static final String COMMAND_WORD \u003d \"delete expired\";","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"            COMMAND_WORD + \": Deletes all expired ingredient from the ingredient repository.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"                    + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_DELETED_ALL_EXPIRED \u003d \"All expired ingredients have been deleted!\";","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_NO_EXPIRED_INGREDIENTS \u003d \"You do not have expired ingredients!\";","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    public String execute(IngredientRepository ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"        Boolean haveExpired \u003d ingredients.deleteExpiredIngredients();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"        if (haveExpired) {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"            return MESSAGE_DELETED_ALL_EXPIRED;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"            return MESSAGE_NO_EXPIRED_INGREDIENTS;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"JoshHDs":31}},{"path":"src/main/java/expiryeliminator/commands/DeleteIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":" * Deletes an ingredient.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"public class DeleteIngredientCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"            COMMAND_WORD + \": Deletes an ingredient from the ingredient repository.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"                    + \"Parameters: i/INGREDIENT\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"                    + \"Example: \" + COMMAND_WORD + \" i/Red Apple\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_NOT_FOUND \u003d \"Sorry. No matching ingredients found!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_DELETED \u003d \"I\u0027ve deleted this ingredient for you:\\n\" + \"%1$s\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"            + \"Now you have %2$s ingredient(s)\";","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_USED_IN_RECIPE \u003d \"Sorry. You cannot delete an ingredient that is \"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"            + \"being used in a recipe.\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"            + \"Please delete the recipe(s) that contain the ingredient first:\\n%1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"    private final String ingredientName;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"     * Initialises command and stores relevant parameters.","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient to be deleted.","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"    public DeleteIngredientCommand(String ingredientName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"        assert ingredientName !\u003d null \u0026\u0026 !ingredientName.isBlank()","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"                : \"Ingredient name cannot be null and cannot be blank\";","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"        this.ingredientName \u003d ingredientName;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"    public String execute(IngredientRepository ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"        assert ingredients !\u003d null : \"Ingredient repository cannot be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"        assert recipes !\u003d null : \"Recipe list cannot be null\";","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"        StringBuilder recipesContainingIngredient \u003d new StringBuilder();","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"        for (Recipe recipe : recipes.getRecipes().values()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"            if (recipe.contains(ingredientName)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"                recipesContainingIngredient.append(\"\\n\").append(recipe.getName());","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"        if (recipesContainingIngredient.length() \u003e 0) {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"            return String.format(MESSAGE_INGREDIENT_USED_IN_RECIPE, recipesContainingIngredient);","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"bernardboey"},"content":"        final IngredientStorage ingredient;","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"            ingredient \u003d ingredients.remove(ingredientName);","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"            return MESSAGE_INGREDIENT_NOT_FOUND;","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"bernardboey"},"content":"        return String.format(MESSAGE_INGREDIENT_DELETED, ingredient, ingredients.size());","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"bernardboey":63}},{"path":"src/main/java/expiryeliminator/commands/DeleteRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":" * Deletes a recipe from the recipe list.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"public class DeleteRecipeCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    public static final String COMMAND_WORD \u003d \"delete recipe\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"    private final String recipeName;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_RECIPE_NOT_FOUND \u003d \"You don\u0027t have this recipe in your list :(\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_RECIPE_DELETED \u003d \"I\u0027ve deleted this recipe for you:\\n\" + \"\\n%1$s\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"            + \"Now you have %2$s recipe(s)\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the recipe with the given name in the list,\"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"            + \"if it exists.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"            + \"Parameters: r/RECIPE NAME\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"            + \" r/Chicken Soup\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    public DeleteRecipeCommand(String recipeName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"        this.recipeName \u003d recipeName;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    public String execute(IngredientRepository ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"            Recipe deletedRecipe \u003d recipes.remove(recipeName);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"            return String.format(MESSAGE_RECIPE_DELETED, deletedRecipe, recipes.size());","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"            return MESSAGE_RECIPE_NOT_FOUND;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"bernardboey":4,"vincentlauhl":33}},{"path":"src/main/java/expiryeliminator/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KairuiHu"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"KairuiHu"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"     * Unique word associated with the command.","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_SHOW_INSTRUCTION \u003d \"Here are the instructions:\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    public String execute(IngredientRepository ingredientRepository, RecipeList recipes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"        return MESSAGE_SHOW_INSTRUCTION","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + AddIngredientCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + AddRecipeCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + DeleteIngredientCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"                + \"\\n\\n\" + DeleteExpiredIngredientCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + DeleteRecipeCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + DecrementCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + IncrementCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ListRecipeCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"                + \"\\n\\n\" + ListRecipesUserCanCookCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"                + \"\\n\\n\" + CookedRecipeCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ViewRecipeCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + UpdateRecipeCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ListCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ViewIngredientCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ListIngredientExpiringCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ListIngredientsExpiredCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"                + \"\\n\\n\" + UpdateUnitsCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"                + \"\\n\\n\" + ShoppingListCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + HelpCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ByeCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"KairuiHu"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bernardboey":3,"KairuiHu":31,"vincentlauhl":2,"JoshHDs":3}},{"path":"src/main/java/expiryeliminator/commands/IncorrectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/commands/IncorrectCommand.java","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents an incorrect command. Upon execution, produces some feedback to the user.","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IncorrectCommand(String feedbackToUser) {","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public String execute(IngredientRepository ingredientRepository, RecipeList recipes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":2,"-":26}},{"path":"src/main/java/expiryeliminator/commands/IncrementCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":" * Increment ingredient by a specified quantity.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"public class IncrementCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"    public static final String COMMAND_WORD \u003d \"increment\";","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"            COMMAND_WORD + \": Increases the quantity of a specified ingredient by a specified amount.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"                    + \"Parameters: i/INGREDIENT q/QUANTITY e/EXPIRY_DATE\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"                    + \"Example: \" + COMMAND_WORD + \" i/Red Apple q/3 e/2021-12-25\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_NOT_FOUND \u003d \"Sorry. No matching ingredients found!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_INCREMENTED \u003d \"I\u0027ve incremented this ingredient by %1$s:\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"            + \"\\n%2$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    private final String ingredientName;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"    private final int quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"    private final LocalDate expiryDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"     * Initialises command and stores relevant parameters.","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient to be incremented.","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"     * @param quantity Quantity to increment by.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"    public IncrementCommand(String ingredientName, int quantity, LocalDate expiryDate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"        assert ingredientName !\u003d null \u0026\u0026 !ingredientName.isBlank()","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"                : \"Ingredient name cannot be null and cannot be blank\";","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"        assert quantity \u003e\u003d 0 : \"Quantity cannot be negative\";","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"        assert expiryDate !\u003d null : \"Expiry date cannot be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"        this.ingredientName \u003d ingredientName;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"    public String execute(IngredientRepository ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"        assert ingredients !\u003d null : \"Ingredient repository cannot be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"        final IngredientStorage ingredientStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"            ingredientStorage \u003d ingredients.find(ingredientName);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"            return MESSAGE_INGREDIENT_NOT_FOUND;","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"        ingredientStorage.add(quantity, expiryDate);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"bernardboey"},"content":"        return String.format(MESSAGE_INGREDIENT_INCREMENTED, quantity, ingredientStorage);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"bernardboey":57}},{"path":"src/main/java/expiryeliminator/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":" * Lists all ingredient, together with its associated quantity and expiry date.","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists out all the ingredients in the repository.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_SHOW_WHOLE_LIST \u003d \"Here are the ingredients in your list:\\n\" + \"%1$s\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"            + \"You have a total of %2$s ingredient(s)\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_EMPTY_INGREDIENT_LIST \u003d \"The ingredient repository is currently empty!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"    public String execute(IngredientRepository ingredientRepository, RecipeList recipes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"        if (ingredientRepository.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"            return MESSAGE_EMPTY_INGREDIENT_LIST;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"            assert ingredientRepository.size() \u003e 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"            return String.format(MESSAGE_SHOW_WHOLE_LIST, ingredientRepository.printWholeList(),","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"                    ingredientRepository.size());","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"JoshHDs":34}},{"path":"src/main/java/expiryeliminator/commands/ListIngredientExpiringCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":" * Lists ingredients expiring within the week, together with its associated quantity and expiry date.","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"public class ListIngredientExpiringCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    public static final String COMMAND_WORD \u003d \"list expiring\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"            COMMAND_WORD + \": Lists out the ingredients that are going to expire within the week.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"                    + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_SHOW_WHOLE_LIST \u003d \"Here are the expiring ingredients in your list:\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"            + \"\\n%1$s\\n\";","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    public String execute(IngredientRepository ingredientRepository, RecipeList recipes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"        return String.format(MESSAGE_SHOW_WHOLE_LIST, ingredientRepository.findExpiringIngredients());","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"JoshHDs":27}},{"path":"src/main/java/expiryeliminator/commands/ListIngredientsExpiredCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":" * Lists ingredients that have expired, together with its associated quantity and expiry date.","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"public class ListIngredientsExpiredCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    public static final String COMMAND_WORD \u003d \"list expired\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists out the ingredients that have expired.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_SHOW_WHOLE_LIST \u003d \"Here are the expired ingredients in your list:\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"            + \"\\n%1$s\\n\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"    public String execute(IngredientRepository ingredientRepository, RecipeList recipes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"        return String.format(MESSAGE_SHOW_WHOLE_LIST, ingredientRepository.findExpiredIngredients());","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"JoshHDs":25}},{"path":"src/main/java/expiryeliminator/commands/ListRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KairuiHu"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":" * Lists all recipes, together with its associated ingredients.","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"public class ListRecipeCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"     * Unique word associated with the command.","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"    public static final String COMMAND_WORD \u003d \"list recipes\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"    public static final String MESSAGE_RECIPE_LIST \u003d \"Here are the recipes in your recipe list:\\n\" + \"%1$s\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"            + \"You have a total of %2$s recipe(s)\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_EMPTY_RECIPE_LIST \u003d \"The recipe list is currently empty!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": List all recipes in the recipe list.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"KairuiHu"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"    public String execute(IngredientRepository ingredientRepository, RecipeList recipeList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"KairuiHu"},"content":"        if (recipeList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"KairuiHu"},"content":"            return MESSAGE_EMPTY_RECIPE_LIST;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"KairuiHu"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"KairuiHu"},"content":"            return String.format(MESSAGE_RECIPE_LIST, recipeList.getWholeRecipeList(), recipeList.size());","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"KairuiHu"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":3,"KairuiHu":31}},{"path":"src/main/java/expiryeliminator/commands/ListRecipesUserCanCookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.IngredientQuantity;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.IngredientStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":" * Lists recipes that can be cooked with the current amount of ingredients.","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"public class ListRecipesUserCanCookCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    public static final String COMMAND_WORD \u003d \"list recipes i can cook\";","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_NOT_ENOUGH_INGREDIENTS \u003d \"You don\u0027t have enough ingredients to cook \"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"            + \"any recipes :(\";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_RECIPES_WITH_ENOUGH_INGREDIENTS_TO_COOK \u003d \"Here are the recipes you can cook \"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"            + \"with the ingredients you have:\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"            + \"\\n%1$s\";","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_INGREDIENTS_EXPIRED \u003d \"Note that some of these ingredients have expired:\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"            + \"\\n%1$s\\n\" + \"Please remove them if you don\u0027t want to use them for your recipe.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists recipes that you can cook with the ingredients\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"            + \"you currently have.\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"    private boolean allIngredientsAreSufficient(TreeMap\u003cString, IngredientQuantity\u003e ingredientsFromRecipe,","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"                                                IngredientRepository ingredients) {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"        for (IngredientQuantity i : ingredientsFromRecipe.values()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"            IngredientStorage ingredient \u003d ingredients.findWithNullReturn(i.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"            assert ingredient !\u003d null : \"Ingredient should be in the repository after the recipe is added\";","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"            if (ingredient.getQuantity() \u003c i.getQuantity()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"                return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"        return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"    private String checkForExpiredIngredients(TreeMap\u003cString, IngredientQuantity\u003e ingredientsFromRecipe,","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"                                                IngredientRepository ingredients) {","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"        String expiredIngredients \u003d \"\";","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"        for (IngredientQuantity i : ingredientsFromRecipe.values()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"            IngredientStorage ingredient \u003d ingredients.findWithNullReturn(i.getName());","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"            assert ingredient !\u003d null : \"Ingredient should be in the repository after the recipe is added\";","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"            LocalDate expiryDate \u003d ingredient.getEarliestExpiryDate();","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"            if (expiryDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"                expiredIngredients +\u003d ingredient.getIngredient() + \"\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"        return expiredIngredients;","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"    public String execute(IngredientRepository ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"        String recipeList \u003d \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"        String expiredIngredients \u003d \"\";","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"        for (Recipe r : recipes.getRecipes().values()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"            if (allIngredientsAreSufficient(r.getIngredientQuantities(),ingredients)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"                recipeList +\u003d r + \"\\n\";","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"                expiredIngredients +\u003d checkForExpiredIngredients(r.getIngredientQuantities(),ingredients);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"        if (recipes.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"            return ListRecipeCommand.MESSAGE_EMPTY_RECIPE_LIST;","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"        } else if (recipeList.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"            return MESSAGE_NOT_ENOUGH_INGREDIENTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"        } else if (!expiredIngredients.isBlank()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"            return String.format(MESSAGE_RECIPES_WITH_ENOUGH_INGREDIENTS_TO_COOK,recipeList)","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"vincentlauhl"},"content":"                    + String.format(MESSAGE_INGREDIENTS_EXPIRED,expiredIngredients);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"vincentlauhl"},"content":"        return String.format(MESSAGE_RECIPES_WITH_ENOUGH_INGREDIENTS_TO_COOK,recipeList);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"vincentlauhl":77}},{"path":"src/main/java/expiryeliminator/commands/ShoppingListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.exception.IllegalValueException;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":" * Lists ingredients required to be bought depending on recipe/recipes user chooses to make.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"public class ShoppingListCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"    public static final String COMMAND_WORD \u003d \"shopping list\";","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists out ingredients needed to buy to make recipe.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"            + \"Parameters: r/RECIPE...\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"            + \"Example: \" + COMMAND_WORD + \" r/Chicken Soup r/Pork Soup\";","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_SHOW_SHOPPING_LIST \u003d \"Here is your shopping list!\\n\";","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_RECIPE_NOT_FOUND \u003d \"Sorry. One or more of your recipes are not found!\";","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"    private final ArrayList\u003cString\u003e recipeDescriptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"     * Initialises command and stores relevant parameter.","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"     * @param recipeDescriptions Name of recipe/recipes user wants to generate shopping list for.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"    public ShoppingListCommand(ArrayList\u003cString\u003e recipeDescriptions) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"        this.recipeDescriptions \u003d recipeDescriptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"    public String execute(IngredientRepository ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"            ArrayList\u003cRecipe\u003e recipeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"            for (String recipeDescription : recipeDescriptions) {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"                Recipe recipe \u003d recipes.findRecipe(recipeDescription);","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"                recipeList.add(recipe);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"            String shoppingList \u003d ingredients.generateShoppingList(recipeList);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"            return (MESSAGE_SHOW_SHOPPING_LIST + \"\\n\" + shoppingList);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"        } catch (NotFoundException | IllegalValueException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"            return MESSAGE_RECIPE_NOT_FOUND;","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"JoshHDs":51}},{"path":"src/main/java/expiryeliminator/commands/UpdateRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KairuiHu"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.exception.IllegalValueException;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"public class UpdateRecipeCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"     * Unique word associated with the command.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"    public static final String COMMAND_WORD \u003d \"update recipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_RECIPE_UPDATED \u003d \"I\u0027ve updated this recipe:\\n\\n\" + \"%1$s\\n\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"            + \"You may want to use the \u0027list recipes\u0027 command to check the whole recipe list.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"    public static final String RECIPE_UPDATE_FAIL \u003d \"Unable to update this recipe:\\n\\n\" + \"%1$s\\n\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"KairuiHu"},"content":"            + \"No matching recipes or ingredients found, please check your input again.\\n\";","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_ILLEGAL_VALUE_ERROR \u003d \"Unable to update this recipe:\\n\\n\" + \"%1$s\\n\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"            + \"Quantity of ingredients for recipe cannot be negative.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_NO_INGREDIENT_ERROR \u003d \"Unable to update this recipe:\\n\\n\" + \"%1$s\\n\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"KairuiHu"},"content":"            + \"Why update fails:\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"KairuiHu"},"content":"            + \"There should be at least one ingredient in the recipe.\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"KairuiHu"},"content":"            + \"But your command may result in a recipe without any ingredients.\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"KairuiHu"},"content":"            + \"Therefore, please add another ingredient first if you still want to delete this ingredient.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the quantity of ingredients\"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"KairuiHu"},"content":"            + \" in the recipe list.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"            + \"Parameters: r/RECIPE NAME i/INGREDIENT... q/QUANTITY...\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"KairuiHu"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"KairuiHu"},"content":"            + \" r/Chicken Soup i/Chicken q/1 i/Salt q/20 i/Ginger q/2\";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"KairuiHu"},"content":"    private final String name;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"KairuiHu"},"content":"    private final ArrayList\u003cString\u003e ingredientNames;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"KairuiHu"},"content":"    private final ArrayList\u003cInteger\u003e quantities;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"KairuiHu"},"content":"    public UpdateRecipeCommand(String name, ArrayList\u003cString\u003e ingredientNames, ArrayList\u003cInteger\u003e quantities) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"KairuiHu"},"content":"        assert name !\u003d null : \"Recipe name cannot be null\";","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"KairuiHu"},"content":"        assert ingredientNames !\u003d null : \"Ingredient list cannot be null\";","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"KairuiHu"},"content":"        assert quantities !\u003d null : \"Quantity list cannot be null\";","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"KairuiHu"},"content":"        assert ingredientNames.size() !\u003d 0 : \"Ingredient list cannot be empty\";","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"KairuiHu"},"content":"        assert ingredientNames.size() \u003d\u003d quantities.size() : \"Quantity list cannot be empty\";","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"KairuiHu"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"KairuiHu"},"content":"        this.ingredientNames \u003d ingredientNames;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"KairuiHu"},"content":"        this.quantities \u003d quantities;","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"KairuiHu"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"KairuiHu"},"content":"    public String execute(IngredientRepository ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"KairuiHu"},"content":"        assert recipes !\u003d null : \"Recipe list cannot be null\";","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"KairuiHu"},"content":"        final Recipe recipe;","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"KairuiHu"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"KairuiHu"},"content":"            recipe \u003d recipes.findRecipe(name);","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"KairuiHu"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"KairuiHu"},"content":"            return String.format(RECIPE_UPDATE_FAIL, name);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"KairuiHu"},"content":"        for (int i \u003d 0; i \u003c ingredientNames.size(); i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"KairuiHu"},"content":"            int quantity \u003d quantities.get(i);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"KairuiHu"},"content":"            String ingredientName \u003d ingredientNames.get(i);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"KairuiHu"},"content":"            if (quantity \u003d\u003d 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"KairuiHu"},"content":"                try {","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"KairuiHu"},"content":"                    recipe.delete(ingredientName);","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"KairuiHu"},"content":"                } catch (IllegalValueException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"KairuiHu"},"content":"                    return String.format(MESSAGE_NO_INGREDIENT_ERROR, name);","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"KairuiHu"},"content":"                } catch (NotFoundException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"KairuiHu"},"content":"                    return String.format(RECIPE_UPDATE_FAIL, name);","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"KairuiHu"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"KairuiHu"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"KairuiHu"},"content":"                try {","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"KairuiHu"},"content":"                    recipe.update(ingredientName, quantity);","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"KairuiHu"},"content":"                } catch (IllegalValueException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"KairuiHu"},"content":"                    return String.format(RECIPE_UPDATE_FAIL, name) + \"\\n\\n\" + MESSAGE_ILLEGAL_VALUE_ERROR;","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"KairuiHu"},"content":"                } catch (NotFoundException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"KairuiHu"},"content":"                    try {","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"KairuiHu"},"content":"                        recipe.add(ingredientName, quantity, ingredients);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"KairuiHu"},"content":"                    } catch (DuplicateDataException | IllegalValueException ex) {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"KairuiHu"},"content":"                        return String.format(RECIPE_UPDATE_FAIL, name);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"KairuiHu"},"content":"                    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"KairuiHu"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"KairuiHu"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"KairuiHu"},"content":"        return String.format(MESSAGE_RECIPE_UPDATED, recipe);","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"KairuiHu"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bernardboey":3,"KairuiHu":86}},{"path":"src/main/java/expiryeliminator/commands/UpdateUnitsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":" * Updates the units of ingredients both in the ingredient repository and in recipes.","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"public class UpdateUnitsCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    public static final String COMMAND_WORD \u003d \"update units\";","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"            COMMAND_WORD + \": Updates the unit of a specified ingredient.\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"                    + \"Parameters: i/INGREDIENT u/UNITS\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"                    + \"Example: \" + COMMAND_WORD + \" i/Chicken u/kilograms\";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    private static final String MESSAGE_INGREDIENT_NOT_FOUND \u003d \"Sorry. No matching ingredients found!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    private static final String MESSAGE_INGREDIENT_UNIT_UPDATED \u003d \"The units for this \"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"            + \"ingredient has been updated to %1$s.\\n\";","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"    private static final String MESSAGE_INGREDIENT_UNIT_DELETED \u003d \"The units for this \"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"            + \"ingredient has been deleted\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"    private final String ingredientName;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"    private final String newUnit;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"     * Initialises command and stores relevant parameters.","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"     * @param ingredientName Name of ingredient to be incremented.","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"     * @param newUnit New unit to modify to.","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"    public UpdateUnitsCommand(String ingredientName, String newUnit) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientName !\u003d null \u0026\u0026 !ingredientName.isBlank()","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"                : \"Ingredient name cannot be null and cannot be blank\";","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"        this.ingredientName \u003d ingredientName;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"        this.newUnit \u003d newUnit;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"    public String execute(IngredientRepository ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"        assert ingredients !\u003d null : \"Ingredient repository cannot be null\";","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"        final IngredientStorage ingredientStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"        //find ingredient in ingredient repo","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"JoshHDs"},"content":"            ingredientStorage \u003d ingredients.find(ingredientName);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"JoshHDs"},"content":"        } catch (NotFoundException error) {","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"JoshHDs"},"content":"            return MESSAGE_INGREDIENT_NOT_FOUND;","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"JoshHDs"},"content":"        //update units of ingredient in ingredient repo","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"JoshHDs"},"content":"        ingredientStorage.updateUnits(newUnit);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"JoshHDs"},"content":"        //update units of ingredient in recipe list","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"JoshHDs"},"content":"        recipes.updateUnits(ingredientName, newUnit);","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"JoshHDs"},"content":"        if (newUnit \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"JoshHDs"},"content":"            return MESSAGE_INGREDIENT_UNIT_DELETED;","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"JoshHDs"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"JoshHDs"},"content":"            return String.format(MESSAGE_INGREDIENT_UNIT_UPDATED, newUnit);","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"JoshHDs":66}},{"path":"src/main/java/expiryeliminator/commands/ViewIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":" * Finds a specific ingredient, together with its associated quantity and expiry date.","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"public class ViewIngredientCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds an ingredient to the ingredient repository.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"            + \"Ingredient names are case insensitive and must be unique.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"            + \"Parameters: i/INGREDIENT\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"            + \"Example: \" + COMMAND_WORD + \" i/Red Apple\";","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_SHOW_INGREDIENT \u003d \"Here is the ingredient in your list:\\n\" + \"\\n%1$s\\n\";","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_INGREDIENT_NOT_FOUND \u003d \"Sorry. No matching ingredients found!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"    private final String ingredientName;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"     * Initialises command and stores relevant parameters.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"     * @param ingredientName Name of ingredient to find.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"    public ViewIngredientCommand(String ingredientName) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientName !\u003d null \u0026\u0026 !ingredientName.isBlank();","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"        this.ingredientName \u003d ingredientName;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"    public String execute(IngredientRepository ingredientRepository, RecipeList recipes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"            final IngredientStorage ingredient \u003d ingredientRepository.find(ingredientName);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"            return String.format(MESSAGE_SHOW_INGREDIENT, ingredient);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"            return MESSAGE_INGREDIENT_NOT_FOUND;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"JoshHDs":46}},{"path":"src/main/java/expiryeliminator/commands/ViewRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KairuiHu"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":" * Finds a specific recipe, together with its associated ingredients.","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"public class ViewRecipeCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"     * Unique word associated with the command.","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"    public static final String COMMAND_WORD \u003d \"view recipe\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_SHOW_RECIPE \u003d \"Here is the recipe in your recipe list:\\n\" + \"\\n%1$s\\n\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_RECIPE_NOT_FOUND \u003d \"Sorry. No matching recipes found!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": View a recipe in the recipe list.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"            + \"Only full name of recipe will be matched.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"KairuiHu"},"content":"            + \"Parameters: r/RECIPE NAME\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"            + \"Example: \" + COMMAND_WORD + \" r/Chicken Soup\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"KairuiHu"},"content":"    private final String recipeDescription;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"KairuiHu"},"content":"    public ViewRecipeCommand(String recipeDescription) {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"KairuiHu"},"content":"        this.recipeDescription \u003d recipeDescription;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"KairuiHu"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"    public String execute(IngredientRepository ingredientRepository, RecipeList recipeList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"            final Recipe recipe \u003d recipeList.findRecipe(recipeDescription);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"KairuiHu"},"content":"            return String.format(MESSAGE_SHOW_RECIPE, recipe);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"            return MESSAGE_RECIPE_NOT_FOUND;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"KairuiHu"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":8,"KairuiHu":32}},{"path":"src/main/java/expiryeliminator/common/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.common;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"public class LogsCenter {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    //@@author bernardboey-reused","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    // Referenced from","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    // https://github.com/se-edu/addressbook-level3/blob/master/src/main/java/seedu/address/commons/core/LogsCenter.java","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"expiryeliminator.log\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns a logger for the given class.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param clazz Class to create a logger for.","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return Logger for the given class.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        final Logger logger \u003d Logger.getLogger(clazz.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // Prevent logs from being shown in the console.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.INFO);","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bernardboey":10,"-":28}},{"path":"src/main/java/expiryeliminator/common/Utils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.common;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" * Contains shared utility methods.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"public class Utils {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     * Returns a string converted to title case.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     * @param string String to be converted to title case.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     * @return Title case string.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    public static String toTitleCase(String string) {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        //@@author bernardboey-reused","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // Referenced from https://www.baeldung.com/java-string-title-case","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assert string !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return Arrays.stream(string.toLowerCase().split(\" \"))","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .filter(word -\u003e !word.isEmpty())","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .map(word -\u003e Character.toUpperCase(word.charAt(0)) + word.substring(1))","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                .collect(Collectors.joining(\" \"));","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"    //@@author JoshHDs","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"     * Checks whether a string is alphabetic (i.e. only contains letters).","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"     * @param string String to be checked.","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"     * @return True if the string only contains letters; false otherwise.","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"    public static Boolean isAlphabetic(String string) {","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"        assert string !\u003d null;","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"        for (int i \u003d 0; i \u003c string.length(); i++) {","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"            char c \u003d string.charAt(i);","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"            if (!Character.isLetter(c) \u0026\u0026 !Character.isSpaceChar(c)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"                return false;","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"        return true;","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"    //@@author","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bernardboey":19,"-":8,"JoshHDs":19}},{"path":"src/main/java/expiryeliminator/data/Ingredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Represents an ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"public class Ingredient {","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"    private final String name;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"    private String unit;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     * Initialises an ingredient without specifying a unit.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     * @param name The name of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"    Ingredient(String name) {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"        assert name !\u003d null \u0026\u0026 !name.isBlank();","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"     * Initialises an ingredient with a unit.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"     * @param name The name of the ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"     * @param unit The unit for the ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"KairuiHu"},"content":"    public Ingredient(String name, String unit) {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"        this(name);","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"        this.unit \u003d unit;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"     * Returns the name of the ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"     * @return The name of the ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"    String getName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"        return name;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"     * Returns the unit for the ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"     * @return The unit for the ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"    public String getUnit() {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"        return unit;","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"     * Sets the unit for the ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"     * @param unit The unit for the ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"    void setUnit(String unit) {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"bernardboey"},"content":"        this.unit \u003d unit;","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"    public String toString() {","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"bernardboey"},"content":"        return name;","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":59,"KairuiHu":1,"JoshHDs":2}},{"path":"src/main/java/expiryeliminator/data/IngredientQuantity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":" * Represents an ingredient and it\u0027s associated quantity.","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"public class IngredientQuantity {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"    private final Ingredient ingredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"    private int quantity;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     * Initialises ingredient and quantity.","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     * @param ingredient Ingredient object.","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     * @param quantity Quantity of ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"     * @throws IllegalValueException If quantity is less than or equal to 0.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"    public IngredientQuantity(Ingredient ingredient, int quantity) throws IllegalValueException {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"        assert ingredient !\u003d null : \"Ingredient cannot be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"        this.ingredient \u003d ingredient;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"        setQuantity(quantity);","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"     * Returns name of ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"     * @return Name of ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"    public String getName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"        return ingredient.getName();","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"     * Returns unit for ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"     * @return Unit for ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"    public String getUnit() {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"        return ingredient.getUnit();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"     * Returns quantity of ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"     * @return Quantity of ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"    public int getQuantity() {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"        return quantity;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"JoshHDs"},"content":"    public Ingredient getIngredient() {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"JoshHDs"},"content":"        return ingredient;","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"     * Sets quantity associated with the ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"     * @param quantity New value for quantity.","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"bernardboey"},"content":"     * @throws IllegalValueException If quantity is less than or equal to 0.","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"bernardboey"},"content":"    void setQuantity(int quantity) throws IllegalValueException {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"bernardboey"},"content":"        if (quantity \u003c\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"bernardboey"},"content":"            throw new IllegalValueException();","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"bernardboey"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"bernardboey"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"bernardboey"},"content":"        return ingredient","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"bernardboey"},"content":"                + \" (qty: \" + quantity","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"bernardboey"},"content":"                + (ingredient.getUnit() \u003d\u003d null ? \"\" : \" \" + ingredient.getUnit())","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"bernardboey"},"content":"                + \")\";","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"bernardboey":68,"KairuiHu":3,"vincentlauhl":1,"JoshHDs":4}},{"path":"src/main/java/expiryeliminator/data/IngredientRepository.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":" * Represents the ingredient repository and contains methods to add and remove ingredients.","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"public class IngredientRepository {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"    private final TreeMap\u003cString, IngredientStorage\u003e ingredients \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"    public TreeMap\u003cString, IngredientStorage\u003e getIngredients() {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"        return ingredients;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"     * Adds an ingredient to the repository without any associated unit or quantity.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient to be added.","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"     * @return Ingredient storage object corresponding to the added ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"     * @throws DuplicateDataException If ingredient already exists in the repository.","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"    public IngredientStorage add(String ingredientName) throws DuplicateDataException {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"        return add(ingredientName, null);","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"     * Adds an ingredient to the repository with an associated unit, but without any associated quantity.","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient to be added.","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"     * @param unit Unit for ingredient. Can be null.","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"     * @return Ingredient storage object corresponding to the added ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"     * @throws DuplicateDataException If ingredient already exists in the repository.","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"    public IngredientStorage add(String ingredientName, String unit) throws DuplicateDataException {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"        assert ingredientName !\u003d null : \"Ingredient name cannot be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"        checkDuplicateIngredient(ingredientName);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"        final Ingredient ingredient \u003d new Ingredient(ingredientName, unit);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"        final IngredientStorage ingredientStorage \u003d new IngredientStorage(ingredient);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"        ingredients.put(ingredient.getName(), ingredientStorage);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"        return ingredientStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"     * Adds an ingredient to the repository with an associated unit, quantity and expiry date.","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient to be added.","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"bernardboey"},"content":"     * @param unit Unit for ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"     * @param quantity Quantity of ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"     * @param expiryDate Expiry date of ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"     * @return Ingredient storage object corresponding to the added ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"     * @throws DuplicateDataException If ingredient already exists in the repository.","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"bernardboey"},"content":"    public IngredientStorage add(String ingredientName, String unit, int quantity, LocalDate expiryDate)","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"bernardboey"},"content":"            throws DuplicateDataException {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"bernardboey"},"content":"        assert ingredientName !\u003d null : \"Ingredient name cannot be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"bernardboey"},"content":"        assert expiryDate !\u003d null : \"Expiry date cannot be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"bernardboey"},"content":"        checkDuplicateIngredient(ingredientName);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"bernardboey"},"content":"        final Ingredient ingredient \u003d new Ingredient(ingredientName, unit);","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"bernardboey"},"content":"        final IngredientStorage ingredientStorage \u003d new IngredientStorage(ingredient);","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"bernardboey"},"content":"        ingredientStorage.add(quantity, expiryDate);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"bernardboey"},"content":"        ingredients.put(ingredient.getName(), ingredientStorage);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"bernardboey"},"content":"        return ingredientStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"bernardboey"},"content":"     * Checks if the ingredient already exists in the repository.","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"bernardboey"},"content":"     * @throws DuplicateDataException If ingredient already exists in the repository.","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"bernardboey"},"content":"    private void checkDuplicateIngredient(String ingredientName) throws DuplicateDataException {","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"bernardboey"},"content":"        if (ingredients.containsKey(ingredientName)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"bernardboey"},"content":"            throw new DuplicateDataException();","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"bernardboey"},"content":"     * Removes a batch of ingredients based on the given expiry date.","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"bernardboey"},"content":"     * @param expiryDate Expiry date of batch of ingredients to be removed.","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"bernardboey"},"content":"     * @throws NotFoundException If ingredient does not exist in the repository.","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"bernardboey"},"content":"     * @throws IllegalValueException If the ingredient does not have any batch with the given expiry date.","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"bernardboey"},"content":"    public void remove(String ingredientName, LocalDate expiryDate) throws NotFoundException, IllegalValueException {","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"bernardboey"},"content":"        final IngredientStorage ingredientStorage \u003d find(ingredientName);","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"bernardboey"},"content":"        ingredientStorage.remove(expiryDate);","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"bernardboey"},"content":"     * Removes ingredient from the ingredient repository.","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient to be removed.","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"bernardboey"},"content":"     * @return Ingredient that was removed.","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"bernardboey"},"content":"    public IngredientStorage remove(String ingredientName) throws NotFoundException {","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"bernardboey"},"content":"        final IngredientStorage ingredientStorage \u003d ingredients.remove(ingredientName);","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"bernardboey"},"content":"        if (ingredientStorage \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"bernardboey"},"content":"            throw new NotFoundException();","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"bernardboey"},"content":"        return ingredientStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"bernardboey"},"content":"     * Returns the number of ingredients in the ingredient repository.","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"bernardboey"},"content":"     * @return The number of ingredients in the ingredient repository.","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"bernardboey"},"content":"    public int size() {","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"bernardboey"},"content":"        return ingredients.size();","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"bernardboey"},"content":"     * Returns a string representation of the whole list.","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"bernardboey"},"content":"     * @return returns a string representing all the ingredients and their specific quantities and expiration dates.","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"bernardboey"},"content":"    public String printWholeList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"bernardboey"},"content":"        StringBuilder wholeList \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"bernardboey"},"content":"        for (IngredientStorage ingredientStorage : ingredients.values()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"bernardboey"},"content":"            wholeList.append(\"\\n\").append(ingredientStorage);","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"bernardboey"},"content":"        return wholeList.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"bernardboey"},"content":"     * Returns the ingredient storage object corresponding to the given ingredient name.","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"bernardboey"},"content":"     * @return Ingredient storage object corresponding to the given ingredient name.","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"bernardboey"},"content":"     * @throws NotFoundException If ingredient does not exist in the repository.","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"bernardboey"},"content":"    public IngredientStorage find(String ingredientName) throws NotFoundException {","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"bernardboey"},"content":"        final IngredientStorage ingredientStorage \u003d ingredients.get(ingredientName);","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"bernardboey"},"content":"        if (ingredientStorage \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"bernardboey"},"content":"            throw new NotFoundException();","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"bernardboey"},"content":"        return ingredientStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"vincentlauhl"},"content":"     * Returns the ingredient storage object corresponding to the given ingredient name. Allows null to be returned","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"vincentlauhl"},"content":"     * to allow ingredients to be added into storage if it\u0027s not found.","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"vincentlauhl"},"content":"     * @param ingredientName Name of ingredient.","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"vincentlauhl"},"content":"     * @return Ingredient storage object corresponding to the given ingredient name.","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"vincentlauhl"},"content":"    public IngredientStorage findWithNullReturn(String ingredientName) {","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"vincentlauhl"},"content":"        return ingredients.get(ingredientName);","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"JoshHDs"},"content":"    //@@author JoshHDs","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"JoshHDs"},"content":"     * Looks for the ingredients that are expiring within the week.","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"JoshHDs"},"content":"     * @return the string representing the list of expiring ingredients.","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"JoshHDs"},"content":"    public String findExpiringIngredients() {","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"JoshHDs"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"JoshHDs"},"content":"        LocalDate currentDatePlusAWeek \u003d currentDate.plus(1, ChronoUnit.WEEKS);","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"JoshHDs"},"content":"        StringBuilder expiringIngredientsList \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"JoshHDs"},"content":"        for (IngredientStorage ingredientStorage : ingredients.values()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"JoshHDs"},"content":"            //create a storage to store expiring batches","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"JoshHDs"},"content":"            IngredientStorage expiredIngredientStorage \u003d new IngredientStorage(ingredientStorage.getIngredient());","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"JoshHDs"},"content":"            boolean hasExpiringIngredients \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"JoshHDs"},"content":"            for (LocalDate expiryDate : ingredientStorage.getIngredientBatches().keySet()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"JoshHDs"},"content":"                if (expiryDate.isAfter(currentDate) \u0026\u0026 expiryDate.isBefore(currentDatePlusAWeek)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"JoshHDs"},"content":"                    expiredIngredientStorage.add(ingredientStorage.getIngredientBatches().get(expiryDate), expiryDate);","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"JoshHDs"},"content":"                    hasExpiringIngredients \u003d true;","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"JoshHDs"},"content":"            if (hasExpiringIngredients) {","lastModifiedDate":"2021-10-31"},{"lineNumber":185,"author":{"gitId":"JoshHDs"},"content":"                expiringIngredientsList.append(expiredIngredientStorage);","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"JoshHDs"},"content":"                expiringIngredientsList.append(\"\\n\");","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"JoshHDs"},"content":"        return expiringIngredientsList.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"JoshHDs"},"content":"     * Looks for the ingredients that have expired.","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"JoshHDs"},"content":"     * @return the string representing the list of expired ingredients.","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"JoshHDs"},"content":"    public String findExpiredIngredients() {","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"JoshHDs"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"JoshHDs"},"content":"        StringBuilder expiredIngredientsList \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"JoshHDs"},"content":"        for (IngredientStorage ingredientStorage : ingredients.values()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"JoshHDs"},"content":"            //create a storage to store expired batches","lastModifiedDate":"2021-10-31"},{"lineNumber":204,"author":{"gitId":"JoshHDs"},"content":"            IngredientStorage expiredIngredientStorage \u003d new IngredientStorage(ingredientStorage.getIngredient());","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"JoshHDs"},"content":"            boolean hasExpiredIngredients \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":206,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"JoshHDs"},"content":"            for (LocalDate expiryDate : ingredientStorage.getIngredientBatches().keySet()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"JoshHDs"},"content":"                if (expiryDate.isBefore(currentDate)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"JoshHDs"},"content":"                    expiredIngredientStorage.add(ingredientStorage.getIngredientBatches().get(expiryDate), expiryDate);","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"JoshHDs"},"content":"                    hasExpiredIngredients \u003d true;","lastModifiedDate":"2021-10-31"},{"lineNumber":211,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"JoshHDs"},"content":"            if (hasExpiredIngredients) {","lastModifiedDate":"2021-10-31"},{"lineNumber":215,"author":{"gitId":"JoshHDs"},"content":"                expiredIngredientsList.append(expiredIngredientStorage);","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"JoshHDs"},"content":"                expiredIngredientsList.append(\"\\n\");","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"JoshHDs"},"content":"        return expiredIngredientsList.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"JoshHDs"},"content":"     * Deletes all ingredients that have expired.","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"JoshHDs"},"content":"     * @return a boolean that represents if there are expired ingredients within the repository","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"JoshHDs"},"content":"    public Boolean deleteExpiredIngredients() {","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"JoshHDs"},"content":"        boolean haveExpired \u003d false;","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"JoshHDs"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"JoshHDs"},"content":"        for (IngredientStorage ingredientStorage : ingredients.values()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"JoshHDs"},"content":"            ArrayList\u003cLocalDate\u003e expiryDatesToRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"JoshHDs"},"content":"            for (LocalDate expiryDate : ingredientStorage.getIngredientBatches().keySet()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"JoshHDs"},"content":"                if (expiryDate.isBefore(currentDate)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"JoshHDs"},"content":"                    expiryDatesToRemove.add(expiryDate);","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"JoshHDs"},"content":"                    haveExpired \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":237,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"JoshHDs"},"content":"            for (LocalDate expiryDate : expiryDatesToRemove) {","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"JoshHDs"},"content":"                ingredientStorage.remove(expiryDate);","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"JoshHDs"},"content":"        return haveExpired;","lastModifiedDate":"2021-10-22"},{"lineNumber":244,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":247,"author":{"gitId":"JoshHDs"},"content":"     * Adds an ingredient and its required quantity determined by the recipe it is part of to a Treemap storing","lastModifiedDate":"2021-10-31"},{"lineNumber":248,"author":{"gitId":"JoshHDs"},"content":"     * the total types and quantity of ingredients in all the recipes that the user wants to generate a shopping","lastModifiedDate":"2021-10-31"},{"lineNumber":249,"author":{"gitId":"JoshHDs"},"content":"     * list for.","lastModifiedDate":"2021-10-31"},{"lineNumber":250,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":251,"author":{"gitId":"JoshHDs"},"content":"     * @param ingredientName The name of the ingredient to be added to totalIngredient Treemap.","lastModifiedDate":"2021-10-31"},{"lineNumber":252,"author":{"gitId":"JoshHDs"},"content":"     * @param recipe The recipe that the ingredient belongs to.","lastModifiedDate":"2021-10-31"},{"lineNumber":253,"author":{"gitId":"JoshHDs"},"content":"     * @param totalIngredients The treemap that keeps track of the total types and quantity of each ingredient","lastModifiedDate":"2021-10-31"},{"lineNumber":254,"author":{"gitId":"JoshHDs"},"content":"     *         needed to make all the recipes that the user input.","lastModifiedDate":"2021-10-31"},{"lineNumber":255,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":256,"author":{"gitId":"JoshHDs"},"content":"    public void updateShoppingListItemQuantity(String ingredientName, Recipe recipe, TreeMap\u003cString,","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"JoshHDs"},"content":"            IngredientQuantity\u003e totalIngredients) throws IllegalValueException {","lastModifiedDate":"2021-10-23"},{"lineNumber":258,"author":{"gitId":"JoshHDs"},"content":"        int quantity \u003d recipe.getIngredientQuantities().get(ingredientName).getQuantity();","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"JoshHDs"},"content":"        String units \u003d recipe.getIngredientQuantities().get(ingredientName).getUnit();","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"JoshHDs"},"content":"        if (totalIngredients.containsKey(ingredientName)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"JoshHDs"},"content":"                int previousQuantity \u003d totalIngredients.get(ingredientName).getQuantity();","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"JoshHDs"},"content":"                totalIngredients.get(ingredientName).setQuantity(quantity + previousQuantity);","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"JoshHDs"},"content":"            } catch (IllegalValueException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"JoshHDs"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"JoshHDs"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"JoshHDs"},"content":"            Ingredient ingredientItem \u003d new Ingredient(ingredientName, units);","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"JoshHDs"},"content":"            IngredientQuantity ingredientAndQuantityItem \u003d new IngredientQuantity(ingredientItem, quantity);","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"JoshHDs"},"content":"            totalIngredients.put(ingredientName, ingredientAndQuantityItem);","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"JoshHDs"},"content":"     * Generates a list of ingredients and quantity to buy depending on what recipe/recipes the user wants to make.","lastModifiedDate":"2021-10-21"},{"lineNumber":276,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"JoshHDs"},"content":"     * @param recipes The list of recipes the user wants to make.","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"JoshHDs"},"content":"     * @return the string representing the list ingredients and its quantities to be bought.","lastModifiedDate":"2021-10-21"},{"lineNumber":279,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"JoshHDs"},"content":"    public String generateShoppingList(ArrayList\u003cRecipe\u003e recipes) throws IllegalValueException {","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"JoshHDs"},"content":"        StringBuilder shoppingList \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"JoshHDs"},"content":"        TreeMap\u003cString, IngredientQuantity\u003e totalIngredients \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":285,"author":{"gitId":"JoshHDs"},"content":"        //tally total types and quantities of ingredients needed to cook the recipes","lastModifiedDate":"2021-10-23"},{"lineNumber":286,"author":{"gitId":"JoshHDs"},"content":"        for (Recipe recipe : recipes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"JoshHDs"},"content":"            for (String ingredientName : recipe.getIngredientQuantities().keySet()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"JoshHDs"},"content":"                updateShoppingListItemQuantity(ingredientName, recipe, totalIngredients);","lastModifiedDate":"2021-10-23"},{"lineNumber":289,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":292,"author":{"gitId":"JoshHDs"},"content":"        //determine what and how much of an ingredient is needed to be bought","lastModifiedDate":"2021-10-23"},{"lineNumber":293,"author":{"gitId":"JoshHDs"},"content":"        for (String ingredientName : totalIngredients.keySet()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"JoshHDs"},"content":"            IngredientQuantity ingredientAndQuantityItem \u003d totalIngredients.get(ingredientName);","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"JoshHDs"},"content":"            int quantityRequired \u003d ingredientAndQuantityItem.getQuantity();","lastModifiedDate":"2021-10-21"},{"lineNumber":296,"author":{"gitId":"JoshHDs"},"content":"            Ingredient ingredient \u003d ingredientAndQuantityItem.getIngredient();","lastModifiedDate":"2021-10-21"},{"lineNumber":297,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":298,"author":{"gitId":"JoshHDs"},"content":"            if (ingredients.containsKey(ingredientName)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"JoshHDs"},"content":"                IngredientStorage ingredientStorage \u003d ingredients.get(ingredientName);","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"JoshHDs"},"content":"                int quantityAvailable \u003d ingredientStorage.getQuantity();","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"JoshHDs"},"content":"                if (quantityAvailable \u003c quantityRequired) {","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"JoshHDs"},"content":"                    int quantityRequiredToBuy \u003d quantityRequired - quantityAvailable;","lastModifiedDate":"2021-10-23"},{"lineNumber":303,"author":{"gitId":"JoshHDs"},"content":"                    try {","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"JoshHDs"},"content":"                        IngredientQuantity shoppingItem \u003d new IngredientQuantity(ingredient, quantityRequiredToBuy);","lastModifiedDate":"2021-10-23"},{"lineNumber":305,"author":{"gitId":"JoshHDs"},"content":"                        shoppingList.append(\"\\n\").append(shoppingItem);","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"JoshHDs"},"content":"                    } catch (IllegalValueException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"JoshHDs"},"content":"                        e.printStackTrace();","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"JoshHDs"},"content":"                    }","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"JoshHDs"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"JoshHDs"},"content":"                shoppingList.append(\"\\n\").append(ingredientAndQuantityItem);","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"JoshHDs"},"content":"        return shoppingList.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":317,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"bernardboey":142,"vincentlauhl":11,"JoshHDs":164}},{"path":"src/main/java/expiryeliminator/data/IngredientStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":" * Represents the storage of a particular ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"public class IngredientStorage {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"    private Ingredient ingredient;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    private int quantity \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"    private final TreeMap\u003cLocalDate, Integer\u003e ingredientBatches \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"     * Initialises ingredient storage.","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"     * @param ingredient Ingredient object.","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"    public IngredientStorage(Ingredient ingredient) {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"        this.ingredient \u003d ingredient;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"     * Returns the associated ingredient object.","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"     * @return Ingredient object.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"    public Ingredient getIngredient() {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"        return ingredient;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"KairuiHu"},"content":"     * Set ingredient with associated input.","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"KairuiHu"},"content":"     * @param ingredientInput ingredient to be copied to the ingredient object in the class.","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"KairuiHu"},"content":"    public void setIngredient(Ingredient ingredientInput) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"KairuiHu"},"content":"        ingredient \u003d ingredientInput;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"     * Returns the total quantity of the ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"     * @return Quantity of ingredient.","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"    public int getQuantity() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"        return quantity;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"    public LocalDate getEarliestExpiryDate() {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"        return ingredientBatches.firstKey();","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"JoshHDs"},"content":"     * Returns the different batches of ingredients and their respective quantity and expiry date.","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"JoshHDs"},"content":"     * @return The different batches of the ingredient","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"JoshHDs"},"content":"    public TreeMap\u003cLocalDate, Integer\u003e getIngredientBatches() {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"JoshHDs"},"content":"        return ingredientBatches;","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"bernardboey"},"content":"     * Adds a batch of ingredients to the storage.","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"bernardboey"},"content":"     * @param quantity Quantity of batch of ingredients to be added.","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"bernardboey"},"content":"     * @param expiryDate Expiry date of batch of ingredients to be added.","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"bernardboey"},"content":"    public void add(int quantity, LocalDate expiryDate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"bernardboey"},"content":"        assert expiryDate !\u003d null : \"Expiry date cannot be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"bernardboey"},"content":"        if (ingredientBatches.containsKey(expiryDate)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"bernardboey"},"content":"            ingredientBatches.replace(expiryDate, ingredientBatches.get(expiryDate) + quantity);","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"bernardboey"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"bernardboey"},"content":"            ingredientBatches.put(expiryDate, quantity);","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"bernardboey"},"content":"        this.quantity +\u003d quantity;","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"bernardboey"},"content":"     * Updates the quantity of a batch of ingredients based on the given expiry date.","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"bernardboey"},"content":"     * @param quantity New quantity.","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"bernardboey"},"content":"     * @param expiryDate Expiry date of batch of ingredients to update.","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"bernardboey"},"content":"    public void update(int quantity, LocalDate expiryDate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"bernardboey"},"content":"        assert expiryDate !\u003d null : \"Expiry date cannot be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"bernardboey"},"content":"        ingredientBatches.put(expiryDate, quantity);","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"bernardboey"},"content":"     * Removes a quantity of ingredients from the storage.","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"bernardboey"},"content":"     * Removes from the earliest batch of expiry date first.","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"bernardboey"},"content":"     * @param quantity Quantity to be removed.","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"bernardboey"},"content":"     * @throws IllegalValueException If quantity to be removed exceeds the current available quantity.","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"bernardboey"},"content":"    public void remove(int quantity) throws IllegalValueException {","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"bernardboey"},"content":"        if (this.quantity \u003c quantity) {","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"bernardboey"},"content":"            throw new IllegalValueException();","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"bernardboey"},"content":"        int toRemove \u003d quantity;","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"bernardboey"},"content":"        while (toRemove \u003e 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"bernardboey"},"content":"            final LocalDate expiryDate \u003d ingredientBatches.firstKey();","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"bernardboey"},"content":"            final int batchQuantity \u003d ingredientBatches.get(expiryDate);","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"bernardboey"},"content":"            if (toRemove \u003e\u003d batchQuantity) {","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"bernardboey"},"content":"                ingredientBatches.remove(expiryDate);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"bernardboey"},"content":"                toRemove -\u003d batchQuantity;","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"bernardboey"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"bernardboey"},"content":"                ingredientBatches.put(expiryDate, batchQuantity - toRemove);","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"bernardboey"},"content":"                toRemove \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"bernardboey"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"bernardboey"},"content":"        this.quantity -\u003d quantity;","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"bernardboey"},"content":"     * Removes a batch of ingredients from the storage based on the given expiry date.","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"bernardboey"},"content":"     * @param expiryDate Expiry date of batch of ingredients to be removed.","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"JoshHDs"},"content":"    public void remove(LocalDate expiryDate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"JoshHDs"},"content":"        //assert expiryDate !\u003d null : \"Expiry date cannot be null\";","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"bernardboey"},"content":"        final Integer quantity \u003d ingredientBatches.remove(expiryDate);","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"bernardboey"},"content":"        this.quantity -\u003d quantity;","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"JoshHDs"},"content":"     * Updates units if ingredient in storage.","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"JoshHDs"},"content":"     * @param newUnit The new unit to change to.","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"JoshHDs"},"content":"    public void updateUnits(String newUnit) {","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"JoshHDs"},"content":"        ingredient.setUnit(newUnit);","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"bernardboey"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"bernardboey"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"bernardboey"},"content":"        stringBuilder.append(ingredient.getName()).append(\" (qty: \").append(quantity);","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"bernardboey"},"content":"        final String unitString \u003d ingredient.getUnit() \u003d\u003d null ? \"\" : \" \" + ingredient.getUnit();","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"bernardboey"},"content":"        stringBuilder.append(unitString);","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"bernardboey"},"content":"        stringBuilder.append(\")\\n\");","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"bernardboey"},"content":"        for (Map.Entry\u003cLocalDate, Integer\u003e entry : ingredientBatches.entrySet()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"bernardboey"},"content":"            stringBuilder.append(\"- \").append(entry.getValue()).append(unitString);","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"bernardboey"},"content":"            stringBuilder.append(\" (\").append(entry.getKey()).append(\")\").append(\"\\n\");","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"bernardboey"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"bernardboey":120,"KairuiHu":10,"vincentlauhl":4,"JoshHDs":21}},{"path":"src/main/java/expiryeliminator/data/Recipe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":" * Represents a recipe.","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"public class Recipe {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"    private String name;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    private final TreeMap\u003cString, IngredientQuantity\u003e ingredientQuantities \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"     * Initialises a recipe.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"     * @param name The name of the recipe","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    public Recipe(String name) {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"     * Returns the name of the recipe.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"     * @return Name of the recipe.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"    public String getName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"        return name;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"KairuiHu"},"content":"    public void setName(String inputName) {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"KairuiHu"},"content":"        name \u003d inputName;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"KairuiHu"},"content":"    public void setIngredientQuantities(String ingredientName, IngredientQuantity ingredientQuantity) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"KairuiHu"},"content":"        ingredientQuantities.put(ingredientName, ingredientQuantity);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"     * Returns the ingredients and the respective quantities of the recipe.","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"     * @return Ingredients and the respective quantities of the recipe.","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"    public TreeMap\u003cString, IngredientQuantity\u003e getIngredientQuantities() {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"        return ingredientQuantities;","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"    //@@author vincentlauhl","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"     * Adds an ingredient and its associated quantity to the recipe.","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"     * @param ingredientName       Name of ingredient to be added.","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"     * @param quantity             Quantity of ingredient to be added.","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"     * @param ingredientRepository Ingredient repository.","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"     * @throws DuplicateDataException If ingredient already exists in the recipe.","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"     * @throws IllegalValueException  If quantity is less than or equal to 0.","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"    public String add(String ingredientName, int quantity, IngredientRepository ingredientRepository)","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"            throws DuplicateDataException, IllegalValueException {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"        String ingredientNameIfNotInList \u003d \"\";","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientStorage ingredientStorage \u003d ingredientRepository.findWithNullReturn(ingredientName);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"        Ingredient ingredient;","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"        if (ingredientStorage \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"            ingredientRepository.add(ingredientName);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"            ingredientNameIfNotInList \u003d ingredientName + \"\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"            ingredient \u003d new Ingredient(ingredientName);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"            ingredient \u003d ingredientStorage.getIngredient();","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientQuantity ingredientQuantity \u003d new IngredientQuantity(ingredient, quantity);","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"vincentlauhl"},"content":"        assert quantity \u003e 0 : \"Quantity for an ingredient in the recipe cannot be zero\";","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"vincentlauhl"},"content":"        if (ingredientQuantities.containsKey(ingredientQuantity.getName())) {","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"vincentlauhl"},"content":"            throw new DuplicateDataException();","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"vincentlauhl"},"content":"        ingredientQuantities.put(ingredientQuantity.getName(), ingredientQuantity);","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"vincentlauhl"},"content":"        return ingredientNameIfNotInList;","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"vincentlauhl"},"content":"    //@@author","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"KairuiHu"},"content":"     * Delete ingredients in a recipe.","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"KairuiHu"},"content":"     * @param ingredientName Name of ingredient to be added.","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"KairuiHu"},"content":"    public void delete(String ingredientName) throws IllegalValueException, NotFoundException {","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"KairuiHu"},"content":"        if (!contains(ingredientName)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"KairuiHu"},"content":"            throw new NotFoundException();","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"KairuiHu"},"content":"        if (ingredientQuantities.size() \u003c\u003d 1) {","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"KairuiHu"},"content":"            throw new IllegalValueException();","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"KairuiHu"},"content":"        ingredientQuantities.remove(ingredientName);","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"KairuiHu"},"content":"     * Updates the quantity of ingredients in a recipe.","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"KairuiHu"},"content":"     * @param ingredientName Name of ingredient to be added.","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"KairuiHu"},"content":"     * @param quantity       quantity of ingredient to be updated to.","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"KairuiHu"},"content":"    public void update(String ingredientName, int quantity) throws NotFoundException, IllegalValueException {","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"KairuiHu"},"content":"        if (!contains(ingredientName)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"KairuiHu"},"content":"            throw new NotFoundException();","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"KairuiHu"},"content":"        IngredientQuantity ingredientQuantity \u003d ingredientQuantities.get(ingredientName);","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"KairuiHu"},"content":"        ingredientQuantity.setQuantity(quantity);","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"bernardboey"},"content":"     * Checks if the recipe contains the given ingredient name.","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"bernardboey"},"content":"     * @return True if the recipe contains the given ingredient name; false otherwise.","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"bernardboey"},"content":"    public Boolean contains(String ingredientName) {","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"bernardboey"},"content":"        return ingredientQuantities.containsKey(ingredientName);","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"vincentlauhl"},"content":"    //@@author vincentlauhl","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"vincentlauhl"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"vincentlauhl"},"content":"        assert ingredientQuantities.size() \u003e 0 : \"Recipe must contain at least one ingredient.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"vincentlauhl"},"content":"        StringBuilder ingredientsWithQuantities \u003d new StringBuilder(name + \"\\n\");","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"vincentlauhl"},"content":"        for (IngredientQuantity ingredientQuantity : ingredientQuantities.values()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"vincentlauhl"},"content":"            ingredientsWithQuantities.append(\"- \").append(ingredientQuantity).append(\"\\n\");","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"vincentlauhl"},"content":"        return ingredientsWithQuantities.toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"bernardboey":16,"KairuiHu":41,"vincentlauhl":76,"JoshHDs":1}},{"path":"src/main/java/expiryeliminator/data/RecipeList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.exception.IllegalValueException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":" * Represents the recipe list and contains methods to add and remove recipes.","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"public class RecipeList {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"    private TreeMap\u003cString, Recipe\u003e recipes;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"     * Constructs Recipe List with no recipes.","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    public RecipeList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"        recipes \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"     * Adds a recipe to the recipe list.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"     * @param recipe Recipe to be added","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"     * @throws DuplicateDataException If the recipe already exists.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"    public void add(Recipe recipe) throws DuplicateDataException {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"        if (recipes.containsKey(recipe.getName())) {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"            throw new DuplicateDataException();","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"            recipes.put(recipe.getName(), recipe);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"     * Removes a recipe from the recipe list.","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"     * @param name name of the recipe to be removed","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"     * @return The recipe removed.","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"     * @throws NotFoundException If there are no such recipes in the list","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"    public Recipe remove(String name) throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"        Recipe recipe \u003d recipes.get(name);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"        if (recipe \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"            throw new NotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"        recipes.remove(name);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"        return recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"     * Returns the list of recipes.","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"     * @return The list of recipes.","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"    public TreeMap\u003cString, Recipe\u003e getRecipes() {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"        return recipes;","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"KairuiHu"},"content":"    public void setRecipes(TreeMap\u003cString, Recipe\u003e inputRecipes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"KairuiHu"},"content":"        this.recipes \u003d inputRecipes;","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"     * Returns the number of recipes in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"     * @return Number of recipes in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"    public int size() {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"vincentlauhl"},"content":"        return recipes.size();","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"KairuiHu"},"content":"     * Returns a string representation of the whole recipe list.","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"KairuiHu"},"content":"     * @return returns a string representing all the recipes.","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"KairuiHu"},"content":"    public String getWholeRecipeList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"bernardboey"},"content":"        StringBuilder wholeRecipeList \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"KairuiHu"},"content":"        for (Recipe recipe : recipes.values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"bernardboey"},"content":"            wholeRecipeList.append(\"\\n\").append(recipe.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"bernardboey"},"content":"        return wholeRecipeList.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"KairuiHu"},"content":"     * Looks for the recipe that the user is looking for.","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"KairuiHu"},"content":"     * @param recipeDescription The recipe name the user is searching for.","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"KairuiHu"},"content":"     * @return the recipe object that the user is searching for.","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"bernardboey"},"content":"    public Recipe findRecipe(String recipeDescription) throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"bernardboey"},"content":"        final Recipe recipe \u003d recipes.get(recipeDescription);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"bernardboey"},"content":"        if (recipe \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"bernardboey"},"content":"            throw new NotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"bernardboey"},"content":"        return recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"JoshHDs"},"content":"     * Updates units of specified ingredient in all recipes.","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"JoshHDs"},"content":"     * @param ingredientName The name of the ingredient.","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"JoshHDs"},"content":"     * @param newUnits       The new units to change to.","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"JoshHDs"},"content":"    public void updateUnits(String ingredientName, String newUnits) {","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"JoshHDs"},"content":"        //iterate through all recipes","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"JoshHDs"},"content":"        for (Recipe recipe : recipes.values()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"JoshHDs"},"content":"            //iterate through all the ingredients in the recipe","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"JoshHDs"},"content":"            for (String ingredientInRecipeName : recipe.getIngredientQuantities().keySet()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"JoshHDs"},"content":"                if (ingredientInRecipeName.equals(ingredientName)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"JoshHDs"},"content":"                    recipe.getIngredientQuantities().get(ingredientInRecipeName).getIngredient().setUnit(newUnits);","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"bernardboey":18,"KairuiHu":27,"vincentlauhl":57,"JoshHDs":18}},{"path":"src/main/java/expiryeliminator/data/exception/DuplicateDataException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data.exception;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/data/exception/DuplicateDataException.java","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Signals an error caused by duplicate data where there should be none.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DuplicateDataException extends Exception {","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":2,"-":11}},{"path":"src/main/java/expiryeliminator/data/exception/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data.exception;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/data/exception/IllegalValueException.java","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"bernardboey":2,"-":11}},{"path":"src/main/java/expiryeliminator/data/exception/NotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data.exception;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Signals an error caused by not being able to find a specified item where it should have been present.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class NotFoundException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"bernardboey":7}},{"path":"src/main/java/expiryeliminator/parser/ArgsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidPrefixException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.MissingPrefixException;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.MultipleArgsException;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.MultipleArgPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.OptionalArgPrefix;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.Prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.SingleArgPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":" * Parses arguments based on a specified format and validates them.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"class ArgsParser {","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"     * Maps each prefix to a list of argument strings that correspond to that prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"    private final HashMap\u003cString, ArrayList\u003cString\u003e\u003e prefixesToArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"     * Used for separation of each prefix and argument.","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"     * E.g. this matches \"/a aaaaa aaaa\"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"    private static final Pattern ARGS_FORMAT \u003d Pattern.compile(\"\\\\w+/([^/\\\\s]+( +|$))+\");","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"    private final ArrayList\u003cPrefix\u003e prefixList;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"     * Initialises argument parser and stores prefix list.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"     * @param prefixList List of prefixes that should be parsed.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"    ArgsParser(Prefix... prefixList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"        assert prefixList.length \u003e 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"        this.prefixList \u003d new ArrayList\u003c\u003e(Arrays.asList(prefixList));","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"        for (Prefix prefix : prefixList) {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"            assert prefix !\u003d null : \"Prefix cannot be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"            prefixesToArgs.put(prefix.getPrefix(), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"     * Parses arguments based on the specified prefixes.","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"     * @param args Argument string to be parsed.","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidPrefixException If there is an invalid prefix found in the args that does not correspond","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"     *         to any of the specified prefixes.","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"bernardboey"},"content":"     * @throws MissingPrefixException If there is a missing prefix that could not be found in the args.","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"     * @throws MultipleArgsException If there is a prefix that appears more than once in the args when it should","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"     *         have only appeared once.","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"    void parse(String args) throws InvalidPrefixException, MissingPrefixException, MultipleArgsException {","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"bernardboey"},"content":"        args \u003d args \u003d\u003d null ? \"\" : args.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"bernardboey"},"content":"        final Matcher matcher \u003d ARGS_FORMAT.matcher(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"bernardboey"},"content":"        findAndPopulateArgs(matcher);","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"bernardboey"},"content":"        checkAllArgsPresent();","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"bernardboey"},"content":"    private void findAndPopulateArgs(Matcher matcher) throws InvalidPrefixException {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"bernardboey"},"content":"        while (matcher.find()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"bernardboey"},"content":"            final String match \u003d matcher.group();","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"bernardboey"},"content":"            final String[] prefixAndArg \u003d match.split(\"/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"bernardboey"},"content":"            final String prefix \u003d prefixAndArg[0];","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"bernardboey"},"content":"            final String arg \u003d prefixAndArg[1].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"bernardboey"},"content":"            try {","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"bernardboey"},"content":"                prefixesToArgs.get(prefix).add(arg);","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"bernardboey"},"content":"            } catch (NullPointerException error) {","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"bernardboey"},"content":"                throw new InvalidPrefixException(prefix);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"bernardboey"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"bernardboey"},"content":"    private void checkAllArgsPresent() throws MissingPrefixException, MultipleArgsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"bernardboey"},"content":"        for (Prefix prefix : prefixList) {","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"bernardboey"},"content":"            final ArrayList\u003cString\u003e argList \u003d prefixesToArgs.get(prefix.getPrefix());","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"bernardboey"},"content":"            if (!(prefix instanceof OptionalArgPrefix) \u0026\u0026 argList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"bernardboey"},"content":"                throw new MissingPrefixException(prefix);","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"bernardboey"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"bernardboey"},"content":"            if (prefix instanceof SingleArgPrefix \u0026\u0026 argList.size() \u003e 1) {","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"bernardboey"},"content":"                throw new MultipleArgsException();","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"bernardboey"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"bernardboey"},"content":"     * Returns the arg that corresponds to the given prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"bernardboey"},"content":"     * @param prefix Single arg prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"bernardboey"},"content":"     * @return Arg that corresponds to the given prefix, or null if there is none (only for optional args).","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"bernardboey"},"content":"    String getSingleArg(SingleArgPrefix prefix) {","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"bernardboey"},"content":"        assert prefix !\u003d null \u0026\u0026 prefixList.contains(prefix)","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"bernardboey"},"content":"                : \"Prefix cannot be null and must be present in the arg parser\u0027s prefix list\";","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"bernardboey"},"content":"        final ArrayList\u003cString\u003e argList \u003d prefixesToArgs.get(prefix.getPrefix());","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"bernardboey"},"content":"        assert argList !\u003d null","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"bernardboey"},"content":"                : \"Arg list should not be null because we should have already initialised with an empty array list\";","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"bernardboey"},"content":"        if (prefix instanceof OptionalArgPrefix) {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"bernardboey"},"content":"            if (argList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"bernardboey"},"content":"                return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"bernardboey"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"bernardboey"},"content":"        assert argList.size() \u003d\u003d 1 : \"There should be one arg because we should have eliminated all other cases\";","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"bernardboey"},"content":"        return argList.get(0);","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"bernardboey"},"content":"     * Returns the list of arg that corresponds to the given prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"bernardboey"},"content":"     * @param prefix Multiple arg prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"bernardboey"},"content":"     * @return List of args that correspond to the given prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"bernardboey"},"content":"    ArrayList\u003cString\u003e getArgList(MultipleArgPrefix prefix) {","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"bernardboey"},"content":"        assert prefix !\u003d null \u0026\u0026 prefixList.contains(prefix)","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"bernardboey"},"content":"                : \"Prefix cannot be null and must be present in the arg parser\u0027s prefix list\";","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"bernardboey"},"content":"        final ArrayList\u003cString\u003e argList \u003d prefixesToArgs.get(prefix.getPrefix());","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"bernardboey"},"content":"        assert argList !\u003d null","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"bernardboey"},"content":"                : \"Arg list should not be null because we should have already initialised with an empty array list\";","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"bernardboey"},"content":"        return argList;","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":130}},{"path":"src/main/java/expiryeliminator/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.AddIngredientCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.AddRecipeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.ByeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.CookedRecipeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.DecrementCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.DeleteExpiredIngredientCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.DeleteIngredientCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.DeleteRecipeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.HelpCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.IncorrectCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.IncrementCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.ListCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.ListIngredientExpiringCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.ListIngredientsExpiredCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.ListRecipeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.ListRecipesUserCanCookCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.ShoppingListCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.UpdateRecipeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.UpdateUnitsCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.ViewIngredientCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.ViewRecipeCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.argparser.ExpiryDateParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.argparser.IngredientParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.argparser.QuantityParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.argparser.RecipeParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.argparser.UnitParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidPrefixException;","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.MissingPrefixException;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.MultipleArgsException;","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.MultipleArgPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.OptionalArgPrefix;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.SingleArgPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":" * Parses user input.","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"public class Parser {","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/parser/Parser.java","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"^(?\u003ccommand\u003e[^/]+)(?\u003cargs\u003e .*)?$\");","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final SingleArgPrefix PREFIX_RECIPE \u003d new SingleArgPrefix(\"r\");","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final SingleArgPrefix PREFIX_INGREDIENT \u003d new SingleArgPrefix(\"i\");","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final SingleArgPrefix PREFIX_QUANTITY \u003d new SingleArgPrefix(\"q\");","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final SingleArgPrefix PREFIX_EXPIRY \u003d new SingleArgPrefix(\"e\");","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final OptionalArgPrefix PREFIX_OPTIONAL_UNIT \u003d new OptionalArgPrefix(\"u\");","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final MultipleArgPrefix PREFIX_MULTIPLE_INGREDIENT \u003d new MultipleArgPrefix(PREFIX_INGREDIENT);","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final MultipleArgPrefix PREFIX_MULTIPLE_QUANTITY \u003d new MultipleArgPrefix(PREFIX_QUANTITY);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final MultipleArgPrefix PREFIX_MULTIPLE_RECIPE \u003d new MultipleArgPrefix(PREFIX_RECIPE);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format!\\n%1$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_ARGUMENT_FORMAT \u003d \"Invalid argument format!\\n%1$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_UNRECOGNISED_COMMAND \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"For help, please type `help`.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses user input as a command.","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param userInput Input command together with any arguments.","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @return Command that corresponds to the user input, if valid.","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Command parseCommand(String userInput) {","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert userInput !\u003d null : \"User input string cannot be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput);","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new IncorrectCommand(MESSAGE_UNRECOGNISED_COMMAND);","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final String command \u003d matcher.group(\"command\");","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String args \u003d matcher.group(\"args\");","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            switch (command) {","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            case AddIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                return prepareAddIngredient(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            case DecrementCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                return prepareDecrementIngredient(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            case IncrementCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                return prepareIncrementIngredient(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            case DeleteIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                return prepareDeleteIngredient(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                return new ListCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            case ListIngredientExpiringCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                return new ListIngredientExpiringCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            case ListIngredientsExpiredCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                return new ListIngredientsExpiredCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            case DeleteExpiredIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                return new DeleteExpiredIngredientCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            case ViewIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                return prepareViewIngredient(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            case AddRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                return prepareAddRecipe(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            case DeleteRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                return prepareDeleteRecipe(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            case ListRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                return new ListRecipeCommand();","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            case ListRecipesUserCanCookCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                return new ListRecipesUserCanCookCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            case ViewRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                return prepareViewRecipe(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            case UpdateRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                return prepareUpdateRecipe(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            case ShoppingListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                return prepareShoppingList(args);","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            case CookedRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                return prepareCookedRecipe(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            case UpdateUnitsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                return prepareUpdateUnits(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                return new ByeCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                return new HelpCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2021-10-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                return new IncorrectCommand(MESSAGE_UNRECOGNISED_COMMAND);","lastModifiedDate":"2021-10-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (InvalidArgFormatException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_ARGUMENT_FORMAT, e.getMessage()));","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-10-03"},{"lineNumber":137,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":138,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareAddIngredient(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"bernardboey"},"content":"        final ArgsParser argsParser \u003d new ArgsParser(PREFIX_INGREDIENT, PREFIX_OPTIONAL_UNIT);","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"bernardboey"},"content":"            argsParser.parse(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"bernardboey"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"bernardboey"},"content":"        final String ingredient \u003d new IngredientParser().parse(argsParser.getSingleArg(PREFIX_INGREDIENT));","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"bernardboey"},"content":"        final String unitString \u003d new UnitParser().parse(argsParser.getSingleArg(PREFIX_OPTIONAL_UNIT));","lastModifiedDate":"2021-11-01"},{"lineNumber":148,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"bernardboey"},"content":"        return new AddIngredientCommand(ingredient, unitString);","lastModifiedDate":"2021-11-01"},{"lineNumber":150,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareDecrementIngredient(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"bernardboey"},"content":"        final ArgsParser argsParser \u003d new ArgsParser(PREFIX_INGREDIENT, PREFIX_QUANTITY);","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"bernardboey"},"content":"            argsParser.parse(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DecrementCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"bernardboey"},"content":"        final String ingredient \u003d new IngredientParser().parse(argsParser.getSingleArg(PREFIX_INGREDIENT));","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"bernardboey"},"content":"        final int quantity \u003d new QuantityParser().parse(argsParser.getSingleArg(PREFIX_QUANTITY));","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"bernardboey"},"content":"        return new DecrementCommand(ingredient, quantity);","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareIncrementIngredient(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"bernardboey"},"content":"        final ArgsParser argsParser \u003d new ArgsParser(PREFIX_INGREDIENT, PREFIX_QUANTITY, PREFIX_EXPIRY);","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"bernardboey"},"content":"            argsParser.parse(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, IncrementCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"bernardboey"},"content":"        final String ingredient \u003d new IngredientParser().parse(argsParser.getSingleArg(PREFIX_INGREDIENT));","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"bernardboey"},"content":"        final int quantity \u003d new QuantityParser().parse(argsParser.getSingleArg(PREFIX_QUANTITY));","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"bernardboey"},"content":"        final LocalDate expiry \u003d new ExpiryDateParser().parse(argsParser.getSingleArg(PREFIX_EXPIRY));","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"bernardboey"},"content":"        return new IncrementCommand(ingredient, quantity, expiry);","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareDeleteIngredient(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"bernardboey"},"content":"        final ArgsParser argsParser \u003d new ArgsParser(PREFIX_INGREDIENT);","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"bernardboey"},"content":"            argsParser.parse(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"bernardboey"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"bernardboey"},"content":"        final String ingredient \u003d new IngredientParser().parse(argsParser.getSingleArg(PREFIX_INGREDIENT));","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"bernardboey"},"content":"        return new DeleteIngredientCommand(ingredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"vincentlauhl"},"content":"    //@@author vincentlauhl","lastModifiedDate":"2021-11-05"},{"lineNumber":193,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":194,"author":{"gitId":"vincentlauhl"},"content":"     * Creates a AddRecipeCommand from the inputs.","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":196,"author":{"gitId":"vincentlauhl"},"content":"     * @param args Command arguments.","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"vincentlauhl"},"content":"     * @return AddRecipeCommand with the recipe name and the ingredients if successful and IncorrectCommand if not.","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":199,"author":{"gitId":"vincentlauhl"},"content":"    private static Command prepareAddRecipe(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":200,"author":{"gitId":"vincentlauhl"},"content":"        final ArgsParser argsParser \u003d new ArgsParser(PREFIX_RECIPE, PREFIX_MULTIPLE_INGREDIENT,","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"vincentlauhl"},"content":"                PREFIX_MULTIPLE_QUANTITY);","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":203,"author":{"gitId":"vincentlauhl"},"content":"            argsParser.parse(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":204,"author":{"gitId":"vincentlauhl"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":205,"author":{"gitId":"vincentlauhl"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":207,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"vincentlauhl"},"content":"        final String recipe \u003d new RecipeParser().parse(argsParser.getSingleArg(PREFIX_RECIPE));","lastModifiedDate":"2021-10-29"},{"lineNumber":209,"author":{"gitId":"vincentlauhl"},"content":"        final ArrayList\u003cString\u003e ingredients \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":210,"author":{"gitId":"vincentlauhl"},"content":"                new IngredientParser().parse(argsParser.getArgList(PREFIX_MULTIPLE_INGREDIENT));","lastModifiedDate":"2021-10-29"},{"lineNumber":211,"author":{"gitId":"vincentlauhl"},"content":"        final ArrayList\u003cInteger\u003e quantities \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"vincentlauhl"},"content":"                new QuantityParser().parse(argsParser.getArgList(PREFIX_MULTIPLE_QUANTITY));","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"vincentlauhl"},"content":"        if (ingredients.size() !\u003d quantities.size()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"vincentlauhl"},"content":"            return new IncorrectCommand(\"Should have same number of ingredient names and quantities\");","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":217,"author":{"gitId":"vincentlauhl"},"content":"        assert !recipe.isBlank();","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"vincentlauhl"},"content":"        return new AddRecipeCommand(recipe, ingredients, quantities);","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":220,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":221,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"vincentlauhl"},"content":"     * Creates a DeleteRecipeCommand from the inputs.","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"vincentlauhl"},"content":"     * @param args Command arguments.","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"vincentlauhl"},"content":"     * @return a DeleteRecipeCommand with the recipe name if successful and an IncorrectCommand if not.","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"vincentlauhl"},"content":"    private static Command prepareDeleteRecipe(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"vincentlauhl"},"content":"        final ArgsParser argsParser \u003d new ArgsParser(PREFIX_RECIPE);","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"vincentlauhl"},"content":"            argsParser.parse(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"vincentlauhl"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":232,"author":{"gitId":"vincentlauhl"},"content":"            return new IncorrectCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"vincentlauhl"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":236,"author":{"gitId":"vincentlauhl"},"content":"        final String recipe \u003d new RecipeParser().parse(argsParser.getSingleArg(PREFIX_RECIPE));","lastModifiedDate":"2021-10-29"},{"lineNumber":237,"author":{"gitId":"vincentlauhl"},"content":"        assert !recipe.isBlank();","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"vincentlauhl"},"content":"        return new DeleteRecipeCommand(recipe);","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":240,"author":{"gitId":"vincentlauhl"},"content":"    //@@author","lastModifiedDate":"2021-11-05"},{"lineNumber":241,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":243,"author":{"gitId":"KairuiHu"},"content":"     * Creates a ViewIngredientCommand from the inputs.","lastModifiedDate":"2021-11-03"},{"lineNumber":244,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":245,"author":{"gitId":"KairuiHu"},"content":"     * @param args Command arguments.","lastModifiedDate":"2021-11-03"},{"lineNumber":246,"author":{"gitId":"KairuiHu"},"content":"     * @return a DeleteRecipeCommand with the recipe name if successful and an IncorrectCommand if not.","lastModifiedDate":"2021-11-03"},{"lineNumber":247,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":248,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareViewIngredient(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":249,"author":{"gitId":"bernardboey"},"content":"        final ArgsParser argsParser \u003d new ArgsParser(PREFIX_INGREDIENT);","lastModifiedDate":"2021-10-29"},{"lineNumber":250,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":251,"author":{"gitId":"bernardboey"},"content":"            argsParser.parse(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":252,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":253,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":254,"author":{"gitId":"bernardboey"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":255,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":256,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":257,"author":{"gitId":"bernardboey"},"content":"        final String ingredient \u003d new IngredientParser().parse(argsParser.getSingleArg(PREFIX_INGREDIENT));","lastModifiedDate":"2021-10-29"},{"lineNumber":258,"author":{"gitId":"bernardboey"},"content":"        return new ViewIngredientCommand(ingredient);","lastModifiedDate":"2021-10-09"},{"lineNumber":259,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":260,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":261,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":262,"author":{"gitId":"KairuiHu"},"content":"     * Creates a UpdateRecipeCommand from the inputs.","lastModifiedDate":"2021-11-03"},{"lineNumber":263,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":264,"author":{"gitId":"KairuiHu"},"content":"     * @param args Command arguments.","lastModifiedDate":"2021-11-03"},{"lineNumber":265,"author":{"gitId":"KairuiHu"},"content":"     * @return a DeleteRecipeCommand with the recipe name if successful and an IncorrectCommand if not.","lastModifiedDate":"2021-11-03"},{"lineNumber":266,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":267,"author":{"gitId":"KairuiHu"},"content":"    private static Command prepareUpdateRecipe(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"bernardboey"},"content":"        final ArgsParser argsParser \u003d new ArgsParser(PREFIX_RECIPE, PREFIX_MULTIPLE_INGREDIENT,","lastModifiedDate":"2021-10-29"},{"lineNumber":269,"author":{"gitId":"bernardboey"},"content":"                PREFIX_MULTIPLE_QUANTITY);","lastModifiedDate":"2021-10-29"},{"lineNumber":270,"author":{"gitId":"KairuiHu"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":271,"author":{"gitId":"bernardboey"},"content":"            argsParser.parse(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":272,"author":{"gitId":"KairuiHu"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"KairuiHu"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"KairuiHu"},"content":"                    UpdateRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":276,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":277,"author":{"gitId":"bernardboey"},"content":"        final String recipe \u003d new RecipeParser().parse(argsParser.getSingleArg(PREFIX_RECIPE));","lastModifiedDate":"2021-10-29"},{"lineNumber":278,"author":{"gitId":"KairuiHu"},"content":"        final ArrayList\u003cString\u003e ingredients \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":279,"author":{"gitId":"bernardboey"},"content":"                new IngredientParser().parse(argsParser.getArgList(PREFIX_MULTIPLE_INGREDIENT));","lastModifiedDate":"2021-10-29"},{"lineNumber":280,"author":{"gitId":"KairuiHu"},"content":"        final ArrayList\u003cInteger\u003e quantities \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":281,"author":{"gitId":"bernardboey"},"content":"                new QuantityParser().parse(argsParser.getArgList(PREFIX_MULTIPLE_QUANTITY));","lastModifiedDate":"2021-10-29"},{"lineNumber":282,"author":{"gitId":"KairuiHu"},"content":"        if (ingredients.size() !\u003d quantities.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":283,"author":{"gitId":"KairuiHu"},"content":"            return new IncorrectCommand(\"Should have same number of ingredient names and quantities\");","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":285,"author":{"gitId":"KairuiHu"},"content":"        assert !recipe.isBlank();","lastModifiedDate":"2021-10-24"},{"lineNumber":286,"author":{"gitId":"KairuiHu"},"content":"        return new UpdateRecipeCommand(recipe, ingredients, quantities);","lastModifiedDate":"2021-10-24"},{"lineNumber":287,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":288,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":289,"author":{"gitId":"vincentlauhl"},"content":"    //@@author vincentlauhl","lastModifiedDate":"2021-11-05"},{"lineNumber":290,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":291,"author":{"gitId":"vincentlauhl"},"content":"     * Creates a CookedRecipeCommand from the inputs.","lastModifiedDate":"2021-11-03"},{"lineNumber":292,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":293,"author":{"gitId":"vincentlauhl"},"content":"     * @param args Command arguments.","lastModifiedDate":"2021-11-03"},{"lineNumber":294,"author":{"gitId":"vincentlauhl"},"content":"     * @return a DeleteRecipeCommand with the recipe name if successful and an IncorrectCommand if not.","lastModifiedDate":"2021-11-03"},{"lineNumber":295,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":296,"author":{"gitId":"vincentlauhl"},"content":"    private static Command prepareCookedRecipe(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-23"},{"lineNumber":297,"author":{"gitId":"vincentlauhl"},"content":"        final ArgsParser argsParser \u003d new ArgsParser(PREFIX_RECIPE);","lastModifiedDate":"2021-10-29"},{"lineNumber":298,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":299,"author":{"gitId":"vincentlauhl"},"content":"            argsParser.parse(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":300,"author":{"gitId":"vincentlauhl"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":301,"author":{"gitId":"vincentlauhl"},"content":"            return new IncorrectCommand(","lastModifiedDate":"2021-10-23"},{"lineNumber":302,"author":{"gitId":"vincentlauhl"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CookedRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":304,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":305,"author":{"gitId":"vincentlauhl"},"content":"        final String recipe \u003d new RecipeParser().parse(argsParser.getSingleArg(PREFIX_RECIPE));","lastModifiedDate":"2021-10-29"},{"lineNumber":306,"author":{"gitId":"vincentlauhl"},"content":"        return new CookedRecipeCommand(recipe);","lastModifiedDate":"2021-10-23"},{"lineNumber":307,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":308,"author":{"gitId":"vincentlauhl"},"content":"    //@@author","lastModifiedDate":"2021-11-05"},{"lineNumber":309,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":310,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":311,"author":{"gitId":"KairuiHu"},"content":"     * Creates a ViewRecipeCommand from the inputs.","lastModifiedDate":"2021-11-03"},{"lineNumber":312,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":313,"author":{"gitId":"KairuiHu"},"content":"     * @param args Command arguments.","lastModifiedDate":"2021-11-03"},{"lineNumber":314,"author":{"gitId":"KairuiHu"},"content":"     * @return a DeleteRecipeCommand with the recipe name if successful and an IncorrectCommand if not.","lastModifiedDate":"2021-11-03"},{"lineNumber":315,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":316,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareViewRecipe(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":317,"author":{"gitId":"bernardboey"},"content":"        final ArgsParser argsParser \u003d new ArgsParser(PREFIX_RECIPE);","lastModifiedDate":"2021-10-29"},{"lineNumber":318,"author":{"gitId":"KairuiHu"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":319,"author":{"gitId":"bernardboey"},"content":"            argsParser.parse(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":320,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":321,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":322,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":323,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":324,"author":{"gitId":"bernardboey"},"content":"        final String recipe \u003d new RecipeParser().parse(argsParser.getSingleArg(PREFIX_RECIPE));","lastModifiedDate":"2021-10-29"},{"lineNumber":325,"author":{"gitId":"KairuiHu"},"content":"        return new ViewRecipeCommand(recipe);","lastModifiedDate":"2021-10-09"},{"lineNumber":326,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":327,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":328,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":329,"author":{"gitId":"KairuiHu"},"content":"     * Creates a ShoppingListCommand from the inputs.","lastModifiedDate":"2021-11-03"},{"lineNumber":330,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":331,"author":{"gitId":"KairuiHu"},"content":"     * @param args Command arguments.","lastModifiedDate":"2021-11-03"},{"lineNumber":332,"author":{"gitId":"KairuiHu"},"content":"     * @return a DeleteRecipeCommand with the recipe name if successful and an IncorrectCommand if not.","lastModifiedDate":"2021-11-03"},{"lineNumber":333,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":334,"author":{"gitId":"JoshHDs"},"content":"    private static Command prepareShoppingList(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"bernardboey"},"content":"        final ArgsParser argsParser \u003d new ArgsParser(PREFIX_MULTIPLE_RECIPE);","lastModifiedDate":"2021-10-29"},{"lineNumber":336,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"bernardboey"},"content":"            argsParser.parse(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":338,"author":{"gitId":"JoshHDs"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"JoshHDs"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"JoshHDs"},"content":"                    ShoppingListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"bernardboey"},"content":"        final ArrayList\u003cString\u003e recipe \u003d new RecipeParser().parse(argsParser.getArgList(PREFIX_MULTIPLE_RECIPE));","lastModifiedDate":"2021-10-29"},{"lineNumber":343,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":344,"author":{"gitId":"JoshHDs"},"content":"        return new ShoppingListCommand(recipe);","lastModifiedDate":"2021-10-21"},{"lineNumber":345,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":346,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":347,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":348,"author":{"gitId":"KairuiHu"},"content":"     * Creates a UpdateUnitsCommand from the inputs.","lastModifiedDate":"2021-11-03"},{"lineNumber":349,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":350,"author":{"gitId":"KairuiHu"},"content":"     * @param args Command arguments.","lastModifiedDate":"2021-11-03"},{"lineNumber":351,"author":{"gitId":"KairuiHu"},"content":"     * @return a DeleteRecipeCommand with the recipe name if successful and an IncorrectCommand if not.","lastModifiedDate":"2021-11-03"},{"lineNumber":352,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":353,"author":{"gitId":"JoshHDs"},"content":"    private static Command prepareUpdateUnits(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-23"},{"lineNumber":354,"author":{"gitId":"bernardboey"},"content":"        final ArgsParser argsParser \u003d new ArgsParser(PREFIX_INGREDIENT, PREFIX_OPTIONAL_UNIT);","lastModifiedDate":"2021-10-29"},{"lineNumber":355,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":356,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":357,"author":{"gitId":"bernardboey"},"content":"            argsParser.parse(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":358,"author":{"gitId":"JoshHDs"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":359,"author":{"gitId":"JoshHDs"},"content":"            return new IncorrectCommand(","lastModifiedDate":"2021-10-23"},{"lineNumber":360,"author":{"gitId":"vincentlauhl"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateUnitsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":361,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":362,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":363,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":364,"author":{"gitId":"JoshHDs"},"content":"        final String unitString \u003d new UnitParser().parse(argsParser.getSingleArg(PREFIX_OPTIONAL_UNIT));","lastModifiedDate":"2021-11-01"},{"lineNumber":365,"author":{"gitId":"bernardboey"},"content":"        final String ingredient \u003d new IngredientParser().parse(argsParser.getSingleArg(PREFIX_INGREDIENT));","lastModifiedDate":"2021-10-29"},{"lineNumber":366,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":367,"author":{"gitId":"JoshHDs"},"content":"        return new UpdateUnitsCommand(ingredient, unitString);","lastModifiedDate":"2021-10-23"},{"lineNumber":368,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":369,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":105,"KairuiHu":72,"vincentlauhl":77,"-":89,"JoshHDs":26}},{"path":"src/main/java/expiryeliminator/parser/argparser/ExpiryDateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.argparser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":" * Parses expiry date.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"public class ExpiryDateParser extends SingleArgParser\u003cLocalDate\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INVALID_DATE \u003d \"Expiry must be a valid date (yyyy-mm-dd).\";","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     * Parses expiry date.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"     * @param expiryDateString String to be parsed as an expiry date.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"     * @return Parsed expiry date.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If the string is blank or is not a valid date.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"    public LocalDate parse(String expiryDateString) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"        checkArgNotBlank(expiryDateString, \"Expiry date cannot be blank.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"            return LocalDate.parse(expiryDateString);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"            throw new InvalidArgFormatException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":30}},{"path":"src/main/java/expiryeliminator/parser/argparser/IngredientParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.argparser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.common.Utils;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" * Parses ingredient name.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"public class IngredientParser extends MultipleArgParser\u003cString\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INVALID_INGREDIENT \u003d \"Ingredient name must only consist of letters, \"","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"            + \"not numbers or other special digits.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     * Parses ingredient name and converts to title case.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientString String to be parsed as an ingredient name.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"     * @return Parsed ingredient name in title case.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If the string is blank.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    public String parse(String ingredientString) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"        checkArgNotBlank(ingredientString, \"Ingredient name cannot be blank.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"        if (!Utils.isAlphabetic(ingredientString)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"            throw new InvalidArgFormatException(MESSAGE_INVALID_INGREDIENT);","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"        return Utils.toTitleCase(ingredientString);","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":28}},{"path":"src/main/java/expiryeliminator/parser/argparser/MultipleArgParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.argparser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":" * Represents a parser that parses multiple arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"public abstract class MultipleArgParser\u003cT\u003e extends SingleArgParser\u003cT\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"     * Parses a list of arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     * @param argList List of argument strings to be parsed.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     * @return List of parsed arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If any of the arguments is of an invalid format.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"    public ArrayList\u003cT\u003e parse(ArrayList\u003cString\u003e argList) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"        final ArrayList\u003cT\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"        for (String argString : argList) {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"            results.add(parse(argString));","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"        return results;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":25}},{"path":"src/main/java/expiryeliminator/parser/argparser/QuantityParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.argparser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":" * Parses quantity.","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"public class QuantityParser extends MultipleArgParser\u003cInteger\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INVALID_NUMBER \u003d \"Quantity must be a valid number.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_NEGATIVE_NUMBER \u003d \"Quantity cannot be a negative number.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     * Parses quantity.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     * @param quantityString String to be parsed as a quantity.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     * @return Parsed quantity.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If the string is blank, is not a valid number, or is negative.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    public Integer parse(String quantityString) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"        checkArgNotBlank(quantityString, \"Quantity cannot be blank.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"            final int quantity \u003d Integer.parseInt(quantityString);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"            if (quantity \u003c 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"                throw new InvalidArgFormatException(MESSAGE_NEGATIVE_NUMBER);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"            return quantity;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"            throw new InvalidArgFormatException(MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":32}},{"path":"src/main/java/expiryeliminator/parser/argparser/RecipeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.argparser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.common.Utils;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" * Parses recipe name.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"public class RecipeParser extends MultipleArgParser\u003cString\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INVALID_RECIPE \u003d \"Recipe name must only consist of letters, \"","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"            + \"not numbers or other special digits.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     * Parses recipe name and converts to title case.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     * @param recipeString String to be parsed as a recipe name.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"     * @return Parsed recipe name in title case.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If the string is blank.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    public String parse(String recipeString) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"        checkArgNotBlank(recipeString, \"Recipe name cannot be blank.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"        if (!Utils.isAlphabetic(recipeString)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"            throw new InvalidArgFormatException(MESSAGE_INVALID_RECIPE);","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"        return Utils.toTitleCase(recipeString);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":26,"JoshHDs":1}},{"path":"src/main/java/expiryeliminator/parser/argparser/SingleArgParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.argparser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":" * Represents a parser that parses a single argument.","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"public abstract class SingleArgParser\u003cT\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"     * Parses a single argument.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"     * @param argString Argument string to be parsed.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     * @return The parsed argument.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If the argument is of an invalid format.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    public abstract T parse(String argString) throws InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"     * Checks that the argument is not blank.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"     * @param argString Argument string to be checked.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"     * @param errorMessage Error message to be used for the exception if the argument is blank.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If argument is blank.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    protected void checkArgNotBlank(String argString, String errorMessage) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"        if (argString \u003d\u003d null || argString.isBlank()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"            throw new InvalidArgFormatException(errorMessage);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":30}},{"path":"src/main/java/expiryeliminator/parser/argparser/UnitParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.argparser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.common.Utils;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":" * Parses unit.","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"public class UnitParser extends SingleArgParser\u003cString\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    private static final String MESSAGE_INVALID_UNIT \u003d \"Units must only consist of letters, \"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"            + \"not numbers or other special digits.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"     * Parses unit.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"     * @param unitString String to be parsed as a unit.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"     * @return Parsed unit.","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    public String parse(String unitString) throws InvalidArgFormatException {","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"        if (unitString !\u003d null \u0026\u0026 !Utils.isAlphabetic(unitString)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"            throw new InvalidArgFormatException(MESSAGE_INVALID_UNIT);","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"        return unitString;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"bernardboey":2,"JoshHDs":27}},{"path":"src/main/java/expiryeliminator/parser/exception/InvalidArgFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.exception;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Signals an error caused by an invalid argument format.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class InvalidArgFormatException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"     * Initialises exception and stores error message.","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"     * @param message Error message.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    public InvalidArgFormatException(String message) {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"        super(message);","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":15}},{"path":"src/main/java/expiryeliminator/parser/exception/InvalidPrefixException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.exception;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Signals an error caused by an invalid prefix that was encountered.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class InvalidPrefixException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"    private final String prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"     * Initialises exception and stores the invalid prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"     * @param prefix Invalid prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    public InvalidPrefixException(String prefix) {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"     * Returns the invalid prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"     * @return Invalid prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    public String getPrefix() {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"        return prefix;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":26}},{"path":"src/main/java/expiryeliminator/parser/exception/MissingPrefixException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.exception;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.Prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" * Signals an error caused by a missing prefix where it should have been present.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"public class MissingPrefixException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"    private final Prefix prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     * Initialises exception and stores the missing prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     * @param prefix Missing prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"    public MissingPrefixException(Prefix prefix) {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"     * Returns the missing prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"     * @return Missing prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"    public Prefix getPrefix() {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"        return prefix;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":29}},{"path":"src/main/java/expiryeliminator/parser/exception/MultipleArgsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.exception;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Signals an error caused by having multiple arguments where there should have been only one.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class MultipleArgsException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":7}},{"path":"src/main/java/expiryeliminator/parser/prefix/MultipleArgPrefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Represents a prefix that can appear more than once.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class MultipleArgPrefix extends Prefix {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"     * Initialises multiple arg prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"     * @param singleArgPrefix Prefix that should be allowed to appear more than once.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    public MultipleArgPrefix(SingleArgPrefix singleArgPrefix) {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"        prefix \u003d singleArgPrefix.getPrefix();","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bernardboey":15}},{"path":"src/main/java/expiryeliminator/parser/prefix/OptionalArgPrefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.prefix;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Represents a prefix that is optional.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class OptionalArgPrefix extends SingleArgPrefix {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"     * Initialises optional arg prefix with a prefix string.","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"     * @param prefix Prefix.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    public OptionalArgPrefix(String prefix) {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"        super(prefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"bernardboey":15}},{"path":"src/main/java/expiryeliminator/parser/prefix/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Represents a prefix (e.g. \"i/\").","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public abstract class Prefix {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"    protected String prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"     * Returns prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"     * @return Prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    public String getPrefix() {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"        return prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bernardboey":17}},{"path":"src/main/java/expiryeliminator/parser/prefix/SingleArgPrefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Represents a prefix that should only appear once.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class SingleArgPrefix extends Prefix {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"     * Initialises prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"     * @param prefix Prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    public SingleArgPrefix(String prefix) {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bernardboey":15}},{"path":"src/main/java/expiryeliminator/storage/LoadData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KairuiHu"},"content":"package expiryeliminator.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.Ingredient;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.IngredientQuantity;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.IngredientStorage;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.exception.IllegalValueException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"import java.io.File;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"public class LoadData {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"     * Load the recipe list from txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"     * @param recipes The whole recipe list.","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"KairuiHu"},"content":"    public static void loadRecipeList(RecipeList recipes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"KairuiHu"},"content":"        String pathName \u003d \"./data/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"KairuiHu"},"content":"        String fileName \u003d \"recipeList.txt\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"KairuiHu"},"content":"        File file \u003d new File(pathName + fileName);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"KairuiHu"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"KairuiHu"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"KairuiHu"},"content":"            Recipe currentRecipe \u003d new Recipe(null);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"KairuiHu"},"content":"            storeCurrentRecipeFromList(recipes, sc, currentRecipe);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"KairuiHu"},"content":"        } catch (DuplicateDataException | IllegalValueException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"KairuiHu"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"KairuiHu"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"KairuiHu"},"content":"            SaveData.createFileOrFolder(pathName, fileName);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"KairuiHu"},"content":"     * Store the current recipe from the txt file to the recipe list.","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"KairuiHu"},"content":"     * @param recipes       The whole recipe list.","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"KairuiHu"},"content":"     * @param sc            The scanner.","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"KairuiHu"},"content":"     * @param currentRecipe The current recipe that is going to be stored.","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"KairuiHu"},"content":"    private static void storeCurrentRecipeFromList(RecipeList recipes, Scanner sc, Recipe currentRecipe)","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"KairuiHu"},"content":"            throws IllegalValueException, DuplicateDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"KairuiHu"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"KairuiHu"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"KairuiHu"},"content":"            if (!line.isBlank()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"KairuiHu"},"content":"                if (!line.contains(\"-\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"KairuiHu"},"content":"                    currentRecipe.setName(line);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"KairuiHu"},"content":"                } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"KairuiHu"},"content":"                    storeCurrentIngredientOfRecipe(currentRecipe, line);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"KairuiHu"},"content":"                    if (!sc.hasNext()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"KairuiHu"},"content":"                        recipes.add(currentRecipe);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"KairuiHu"},"content":"                    }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"KairuiHu"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"KairuiHu"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"KairuiHu"},"content":"                if (currentRecipe.getName() !\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"KairuiHu"},"content":"                    recipes.add(currentRecipe);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"KairuiHu"},"content":"                    currentRecipe \u003d new Recipe(null);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"KairuiHu"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"KairuiHu"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"KairuiHu"},"content":"     * Stores the current ingredient of a recipe from the txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"KairuiHu"},"content":"     * @param currentRecipe The current recipe that is stored.","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"KairuiHu"},"content":"     * @param line          The current line of the txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"KairuiHu"},"content":"    private static void storeCurrentIngredientOfRecipe(Recipe currentRecipe, String line)","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"KairuiHu"},"content":"            throws IllegalValueException {","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"KairuiHu"},"content":"        int ingredientNameSeparator \u003d line.indexOf(\"(\") - 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"KairuiHu"},"content":"        String ingredientName \u003d line.substring(2, ingredientNameSeparator);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"KairuiHu"},"content":"        String theDigits \u003d line.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"KairuiHu"},"content":"        int lengthOfQuantity \u003d theDigits.length();","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"KairuiHu"},"content":"        int quantityStartIndex \u003d line.indexOf(theDigits);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"KairuiHu"},"content":"        int unitStartIndex \u003d quantityStartIndex + lengthOfQuantity;","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"KairuiHu"},"content":"        int unitEndIndex \u003d line.indexOf(\")\");","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"KairuiHu"},"content":"        int quantity \u003d Integer.parseInt(theDigits);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"KairuiHu"},"content":"        String unit \u003d getUnitForIngredientRepo(line, unitStartIndex, unitEndIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"KairuiHu"},"content":"        Ingredient ingredient \u003d new Ingredient(ingredientName, unit);","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"KairuiHu"},"content":"        IngredientQuantity ingredientQuantity \u003d new IngredientQuantity(ingredient, quantity);","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"KairuiHu"},"content":"        currentRecipe.setIngredientQuantities(ingredientName, ingredientQuantity);","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"KairuiHu"},"content":"     * Gets the current unit of an ingredient from the txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"KairuiHu"},"content":"     * @param line           The current line of a txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"KairuiHu"},"content":"     * @param unitStartIndex The starting index of the unit substring.","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"KairuiHu"},"content":"     * @param unitEndIndex   The ending index of the unit substring.","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"KairuiHu"},"content":"    private static String getUnitForIngredientRepo(String line, int unitStartIndex, int unitEndIndex) {","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"KairuiHu"},"content":"        String unit \u003d line.substring(unitStartIndex, unitEndIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"KairuiHu"},"content":"        if (unit.isBlank()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"KairuiHu"},"content":"            unit \u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"KairuiHu"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"KairuiHu"},"content":"            unit \u003d unit.substring(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"KairuiHu"},"content":"        return unit;","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"KairuiHu"},"content":"     * Loading the ingredient repository from the txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"KairuiHu"},"content":"     * @param ingredients The whole ingredient repository.","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"KairuiHu"},"content":"    public static void loadIngredientRepo(IngredientRepository ingredients) {","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"KairuiHu"},"content":"        String pathName \u003d \"./data/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"KairuiHu"},"content":"        String fileName \u003d \"ingredientRepo.txt\";","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"KairuiHu"},"content":"        File file \u003d new File(pathName + fileName);","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"KairuiHu"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"KairuiHu"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"KairuiHu"},"content":"            loadCurrentIngredientFromRepo(ingredients, sc);","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"KairuiHu"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"KairuiHu"},"content":"            SaveData.createFileOrFolder(pathName, fileName);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"KairuiHu"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"KairuiHu"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"KairuiHu"},"content":"     * Gets the current quantity of the ingredient with batch number from the txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"KairuiHu"},"content":"     * @param line            The current line of a txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"KairuiHu"},"content":"     * @param expiryDateStart The start index of the expiry date substring.","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"KairuiHu"},"content":"    private static int getQuantityWithBatch(String line, int expiryDateStart) {","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"KairuiHu"},"content":"        int quantityWithBatch;","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"KairuiHu"},"content":"        String quantityWithUnit \u003d line.substring(2, expiryDateStart - 2);","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"KairuiHu"},"content":"        String theDigits \u003d quantityWithUnit.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"KairuiHu"},"content":"        quantityWithBatch \u003d Integer.parseInt(theDigits);","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"KairuiHu"},"content":"        return quantityWithBatch;","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"KairuiHu"},"content":"     * Gets the unit of an ingredient in the current recipe from the txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"KairuiHu"},"content":"     * @param line The current line of a txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"KairuiHu"},"content":"    private static String getUnitForRecipeList(String line) {","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"KairuiHu"},"content":"        String unit;","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"KairuiHu"},"content":"        String theDigits \u003d line.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"KairuiHu"},"content":"        int lengthOfQuantity \u003d theDigits.length();","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"KairuiHu"},"content":"        int quantityStartIndex \u003d line.indexOf(theDigits);","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"KairuiHu"},"content":"        int unitStartIndex \u003d quantityStartIndex + lengthOfQuantity;","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"KairuiHu"},"content":"        int unitEndIndex \u003d line.indexOf(\")\");","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"KairuiHu"},"content":"        unit \u003d line.substring(unitStartIndex, unitEndIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"KairuiHu"},"content":"        if (unit.isBlank()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"KairuiHu"},"content":"            unit \u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"KairuiHu"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"KairuiHu"},"content":"            unit \u003d unit.substring(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"KairuiHu"},"content":"        return unit;","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"KairuiHu"},"content":"     * Loads the current ingredient from the txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"KairuiHu"},"content":"     * @param ingredients The whole ingredient repository.","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"KairuiHu"},"content":"     * @param sc          The scanner.","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"KairuiHu"},"content":"    private static void loadCurrentIngredientFromRepo(IngredientRepository ingredients, Scanner sc)","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"KairuiHu"},"content":"            throws DuplicateDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"KairuiHu"},"content":"        LocalDate expiryDate \u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"KairuiHu"},"content":"        String unit \u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"KairuiHu"},"content":"        String ingredientName \u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"KairuiHu"},"content":"        String expiryDateString;","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"KairuiHu"},"content":"        int quantityWithBatch \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"KairuiHu"},"content":"        IngredientStorage ingredientStorage \u003d new IngredientStorage(null);","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"KairuiHu"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"KairuiHu"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"KairuiHu"},"content":"            if (!line.isBlank()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"KairuiHu"},"content":"                if (!line.contains(\"-\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"KairuiHu"},"content":"                    int ingredientNameSeparator \u003d line.indexOf(\"(\") - 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"KairuiHu"},"content":"                    ingredientName \u003d line.substring(0, ingredientNameSeparator);","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"KairuiHu"},"content":"                    unit \u003d getUnitForRecipeList(line);","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"KairuiHu"},"content":"                    Ingredient currentIngredient \u003d new Ingredient(ingredientName, unit);","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"KairuiHu"},"content":"                    ingredientStorage.setIngredient(currentIngredient);","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"KairuiHu"},"content":"                    ingredients.add(ingredientName, unit);","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"KairuiHu"},"content":"                } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"KairuiHu"},"content":"                    int expiryDateStart \u003d line.indexOf(\"(\") + 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"KairuiHu"},"content":"                    int expiryDateEnd \u003d line.indexOf(\")\");","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"KairuiHu"},"content":"                    expiryDateString \u003d line.substring(expiryDateStart, expiryDateEnd);","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"KairuiHu"},"content":"                    expiryDate \u003d LocalDate.parse(expiryDateString);","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"KairuiHu"},"content":"                    quantityWithBatch \u003d getQuantityWithBatch(line, expiryDateStart);","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"KairuiHu"},"content":"                    ingredientStorage.add(quantityWithBatch, expiryDate);","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"KairuiHu"},"content":"                    ingredients.getIngredients().put(ingredientName, ingredientStorage);","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"KairuiHu"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"KairuiHu"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"KairuiHu"},"content":"                ingredientStorage \u003d new IngredientStorage(null);","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"KairuiHu"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"KairuiHu"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"KairuiHu":200}},{"path":"src/main/java/expiryeliminator/storage/SaveData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KairuiHu"},"content":"package expiryeliminator.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"KairuiHu"},"content":"import java.io.File;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"public class SaveData {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"     * Saves the recipe list to the txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"     * @param recipes The whole recipe list.","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"KairuiHu"},"content":"    public static void saveRecipeListToFile(RecipeList recipes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"        String pathName \u003d \"./data/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"        String fileName \u003d \"recipeList.txt\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"KairuiHu"},"content":"        flushFile(pathName, fileName);","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"KairuiHu"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"KairuiHu"},"content":"            String textToAppend \u003d recipes.getWholeRecipeList();","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"KairuiHu"},"content":"            appendToFile(pathName + fileName, textToAppend);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"KairuiHu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"KairuiHu"},"content":"            System.out.println(\"An recipeList IO error has occurred: \" + e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"KairuiHu"},"content":"     * Saves the whole ingredient repository to the txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"KairuiHu"},"content":"     * @param ingredients The whole ingredient repository.","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"KairuiHu"},"content":"    public static void saveIngredientRepoToFile(IngredientRepository ingredients) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"KairuiHu"},"content":"        String pathName \u003d \"./data/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"KairuiHu"},"content":"        String fileName \u003d \"ingredientRepo.txt\";","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"KairuiHu"},"content":"        flushFile(pathName, fileName);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"KairuiHu"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"KairuiHu"},"content":"            String textToAppend \u003d ingredients.printWholeList();","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"KairuiHu"},"content":"            appendToFile(pathName + fileName, textToAppend);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"KairuiHu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"KairuiHu"},"content":"            System.out.println(\"An IngredientList IO error has occurred: \" + e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"KairuiHu"},"content":"     * Flushes the txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"KairuiHu"},"content":"     * @param pathName The pathname of the txt file, containing the directory name.","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"KairuiHu"},"content":"     * @param fileName The filename of the txt file, containing the file name.","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"KairuiHu"},"content":"    public static void flushFile(String pathName, String fileName) {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"KairuiHu"},"content":"        File file \u003d new File(pathName + fileName);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"KairuiHu"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"KairuiHu"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"KairuiHu"},"content":"            fw.flush();","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"KairuiHu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"KairuiHu"},"content":"            System.out.println(\"An flush IO error has occurred: \" + e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"KairuiHu"},"content":"     * Creates the txt file or the folder.","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"KairuiHu"},"content":"     * @param pathName The pathname of the txt file, containing the directory name.","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"KairuiHu"},"content":"     * @param fileName The filename of the txt file, containing the file name.","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"KairuiHu"},"content":"    public static void createFileOrFolder(String pathName, String fileName) {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"KairuiHu"},"content":"        boolean hasExist \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"KairuiHu"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"KairuiHu"},"content":"            Path path \u003d Paths.get(pathName);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"KairuiHu"},"content":"            Files.createDirectory(path);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"KairuiHu"},"content":"        } catch (FileAlreadyExistsException ignored) {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"KairuiHu"},"content":"            hasExist \u003d true;","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"KairuiHu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"KairuiHu"},"content":"            System.out.println(\"An createFile IO error has occurred: \" + e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"KairuiHu"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"KairuiHu"},"content":"            Path file \u003d Paths.get(pathName + fileName);","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"KairuiHu"},"content":"            Files.createFile(file);","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"KairuiHu"},"content":"        } catch (FileAlreadyExistsException ignored) {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"KairuiHu"},"content":"            hasExist \u003d true;","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"KairuiHu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"KairuiHu"},"content":"            System.out.println(\"An createFile IO error has occurred: \" + e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"KairuiHu"},"content":"     * Append text to the txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"KairuiHu"},"content":"     * @param filePath     The whole pathname of the txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"KairuiHu"},"content":"     * @param textToAppend The string that is going to be appended to the txt file.","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"KairuiHu"},"content":"    public static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"KairuiHu"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"KairuiHu"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"KairuiHu"},"content":"        fw.close();","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"KairuiHu"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"KairuiHu":104}},{"path":"src/main/java/expiryeliminator/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/ui/Ui.java","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Text UI of the application.","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Ui {","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String INDENTED_HORIZONTAL_LINE \u003d \" \".repeat(4) + \"_\".repeat(100);","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String LINE_PREFIX \u003d \" \".repeat(5);","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** Platform independent line separator. */","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_GREETING \u003d \"Welcome to Expiry Eliminator. What can I do for you?\";","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Reads input commands from the user.","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Ignores blank lines and trims input command.","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return Trimmed input command.","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String line \u003d SCANNER.nextLine();","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // Ignore blank lines","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        while (line.trim().isEmpty()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            line \u003d SCANNER.nextLine();","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return line.trim().toLowerCase();","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Prints out the specified text formatted as a block.","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Horizontal lines will be printed before and after the","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * specified text, and the text will be indented.","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param text Text to be printed out.","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void showToUser(String text) {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assert text !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        System.out.println(INDENTED_HORIZONTAL_LINE);","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        System.out.println(addPrefixAndReplaceNewline(text));","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        System.out.println(INDENTED_HORIZONTAL_LINE);","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        System.out.println();","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Prints out greeting message.","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void showGreeting() {","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showToUser(MESSAGE_GREETING);","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Adds {@link #LINE_PREFIX} to the start of each line of {@code text}, and replaces newline characters with the","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * platform independent line separator ({@link #LINE_SEPARATOR}).","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param text Text to be processed.","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @return Processed text.","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private String addPrefixAndReplaceNewline(String text) {","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assert text !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String[] lines \u003d text.split(\"\\n\");","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (lines[i].isBlank()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                lines[i] \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                lines[i] \u003d LINE_PREFIX + lines[i];","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return String.join(LINE_SEPARATOR, lines);","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":5,"-":73}},{"path":"src/test/java/expiryeliminator/ExpiryEliminatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"class ExpiryEliminatorTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"bernardboey":2,"-":10}},{"path":"src/test/java/expiryeliminator/commands/AddIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"public class AddIngredientCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/commands/AddRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"class AddRecipeCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    public void addRecipeCommand_duplicateRecipeName_recipeAlreadyExistsError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"        final IngredientRepository ingredientRepository \u003d TestUtil.generateIngredientRepositoryForRecipe();","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new AddRecipeCommand(TestUtil.EXAMPLE_RECIPE_NAME,","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateIngredientNamesForRecipe(\"Chicken\",\"Salt\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateQuantitiesForRecipe(1,20));","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"        String errorMessage \u003d String.format(AddRecipeCommand.MESSAGE_RECIPE_ALREADY_EXISTS,","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.EXAMPLE_RECIPE_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"        assertEquals(command.execute(ingredientRepository, recipes), errorMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    public void addRecipeCommand_duplicateIngredientName_duplicateIngredientsInRecipeError() {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientRepository ingredientRepository \u003d new IngredientRepository();","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new AddRecipeCommand(TestUtil.EXAMPLE_RECIPE_NAME,","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateIngredientNamesForRecipe(\"Chicken\",\"Chicken\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateQuantitiesForRecipe(1,20));","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"        String errorMessage \u003d String.format(AddRecipeCommand.MESSAGE_DUPLICATE_INGREDIENT, TestUtil.EXAMPLE_RECIPE_NAME,","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.EXAMPLE_INGREDIENT_NAME);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(ingredientRepository, recipes), errorMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"    public void addRecipeCommand_zeroForQuantity_IllegalValueError() {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientRepository ingredientRepository \u003d new IngredientRepository();","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new AddRecipeCommand(TestUtil.EXAMPLE_RECIPE_NAME,","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateIngredientNamesForRecipe(\"Chicken\",\"Salt\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateQuantitiesForRecipe(1,0));","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"        String errorMessage \u003d AddRecipeCommand.MESSAGE_ILLEGAL_VALUE_ERROR;","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(ingredientRepository, recipes), errorMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"    public void addRecipeCommand_correctInput_recipeAddedSuccessfully() {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"        final IngredientRepository ingredientRepository \u003d TestUtil.generateIngredientRepositoryForRecipe();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new AddRecipeCommand(TestUtil.EXAMPLE_RECIPE_NAME,","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateIngredientNamesForRecipe(\"Chicken\",\"Salt\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateQuantitiesForRecipe(1,20));","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"JoshHDs"},"content":"        String successMessage \u003d String.format(AddRecipeCommand.MESSAGE_RECIPE_ADDED,","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"JoshHDs"},"content":"                TestUtil.generateChickenRecipe(), 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"        assertEquals(command.execute(ingredientRepository, recipes), successMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"    public void addRecipeCommand_correctInputAndIngredientsNotInRepository_recipeAndIngredientsAddedSuccessfully() {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientRepository ingredientRepository \u003d new IngredientRepository();","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new AddRecipeCommand(TestUtil.EXAMPLE_RECIPE_NAME,","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateIngredientNamesForRecipe(\"Chicken\",\"Salt\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateQuantitiesForRecipe(1,20));","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"        String successAndIngredientsAddedMessage \u003d String.format(AddRecipeCommand.MESSAGE_RECIPE_ADDED_WITH_REMINDER,","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateRecipeWithoutUnits(),1,TestUtil.INGREDIENTS_TO_UPDATE_UNITS);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(ingredientRepository,recipes),successAndIngredientsAddedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(ingredientRepository.size(),2);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"        assertNotNull(ingredientRepository.findWithNullReturn(\"Chicken\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"        assertNotNull(ingredientRepository.findWithNullReturn(\"Salt\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"bernardboey":8,"vincentlauhl":63,"JoshHDs":3}},{"path":"src/test/java/expiryeliminator/commands/CookedRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"class CookedRecipeCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    public void cookedRecipeCommand_recipeNotInList_recipeNotFoundError() {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"        final RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientRepository ingredients \u003d TestUtil.generateIngredientRepositoryForRecipe();","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new CookedRecipeCommand(\"Duck Soup\");","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(ingredients,recipes),ViewRecipeCommand.MESSAGE_RECIPE_NOT_FOUND);","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"    public void cookedRecipeCommand_correctInputAndInsufficientIngredientQuantity_insufficientQuantityError() {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"        final RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientRepository ingredients \u003d TestUtil.generateIngredientRepositoryForExampleRecipe(2,10);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new CookedRecipeCommand(TestUtil.EXAMPLE_RECIPE_NAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(ingredients,recipes),CookedRecipeCommand.MESSAGE_INSUFFICIENT_QUANTITY);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"            assertEquals(2,ingredients.find(\"Chicken\").getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"            assertEquals(10,ingredients.find(\"Salt\").getQuantity());","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Ingredients should be in repository by definition.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"    public void cookedRecipeCommand_correctInputAndSufficientIngredientQuantity_ingredientRepositoryUpdated() {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"        final RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientRepository ingredients \u003d TestUtil.generateIngredientRepositoryForExampleRecipe(2,40);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new CookedRecipeCommand(TestUtil.EXAMPLE_RECIPE_NAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"        String successMessage \u003d String.format(CookedRecipeCommand.MESSAGE_RECIPE_COOKED,","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateFirstIngredient() + \"\\n\" + TestUtil.generateSecondIngredient() + \"\\n\");","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(successMessage,command.execute(ingredients,recipes));","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"            assertEquals(1, ingredients.find(\"Chicken\").getQuantity());","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"            assertEquals(20, ingredients.find(\"Salt\").getQuantity());","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Ingredients should be in repository by definition\");","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"vincentlauhl":50}},{"path":"src/test/java/expiryeliminator/commands/DecrementCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"public class DecrementCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/commands/DeleteExpiredIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"public class DeleteExpiredIngredientCommandTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    public void deleteExpiredIngredientCommand_ingredientRepoWithExpiredIngredients_deletedExpiredIngredientsMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"        //generate repository with some expired ingredients","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"        IngredientRepository ingredientRepository \u003d TestUtil.generateIngredientRepositoryWithSomeExpiredIngredients();","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientRepository !\u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new DeleteExpiredIngredientCommand();","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientRepository, null),","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"                DeleteExpiredIngredientCommand.MESSAGE_DELETED_ALL_EXPIRED);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"    public void deleteExpiredIngredientCommand_ingredientRepoWithoutExpiredIngredients_noExpiredIngredientsMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"        //generate repository without expired ingredients","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"        IngredientRepository ingredientRepository \u003d TestUtil.generateIngredientRepositoryWithoutExpiredIngredients();","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientRepository !\u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new DeleteExpiredIngredientCommand();","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientRepository, null),","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"                DeleteExpiredIngredientCommand.MESSAGE_NO_EXPIRED_INGREDIENTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"JoshHDs":37}},{"path":"src/test/java/expiryeliminator/commands/DeleteIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"public class DeleteIngredientCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/commands/DeleteRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"class DeleteRecipeCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    public void deleteRecipeCommand_recipeNameNotInList_recipeNotFoundErrorMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new DeleteRecipeCommand(\"Duck soup\");","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(null, recipes), DeleteRecipeCommand.MESSAGE_RECIPE_NOT_FOUND);","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    public void deleteRecipeCommand_recipeNameInList_recipeDeletedMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new DeleteRecipeCommand(TestUtil.EXAMPLE_RECIPE_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"        String message \u003d String.format(DeleteRecipeCommand.MESSAGE_RECIPE_DELETED, TestUtil.generateChickenRecipe(), 0);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(null, recipes), message);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":22,"JoshHDs":3}},{"path":"src/test/java/expiryeliminator/commands/IncrementCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"public class IncrementCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    public void listCommand_sampleIngredientRepository_expectListString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"        IngredientRepository ingredientRepository \u003d TestUtil.generateIngredientRepositoryWithSomeExpiredIngredients();","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientRepository !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new ListCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"        String message \u003d String.format(ListCommand.MESSAGE_SHOW_WHOLE_LIST, ingredientRepository.printWholeList(), 3);","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientRepository, null), message);","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"    public void listCommand_emptyIngredientRepository_emptyIngredientRepositoryMessage() {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"        IngredientRepository ingredientRepository \u003d TestUtil.generateEmptyIngredientRepository();","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new ListCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"        String message \u003d ListCommand.MESSAGE_EMPTY_INGREDIENT_LIST;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientRepository, null), message);","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"JoshHDs":33}},{"path":"src/test/java/expiryeliminator/commands/ListIngredientsExpiredCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"public class ListIngredientsExpiredCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    public void listIngredientsExpiredCommand_sampleIngredientRepository_expectExpiredIngredientString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"        IngredientRepository ingredientRepository \u003d TestUtil.generateIngredientRepositoryWithSomeExpiredIngredients();","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientRepository !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new ListIngredientsExpiredCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        String message \u003d String.format(ListIngredientsExpiredCommand.MESSAGE_SHOW_WHOLE_LIST,","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"                ingredientRepository.findExpiredIngredients());","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientRepository, null), message);","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"JoshHDs":24}},{"path":"src/test/java/expiryeliminator/commands/ListIngredientsExpiringCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"public class ListIngredientsExpiringCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    public void listIngredientsExpiringCommand_sampleIngredientRepository_expectExpiringIngredientString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"        IngredientRepository ingredientRepository \u003d TestUtil.generateIngredientRepositoryWithSomeExpiredIngredients();","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientRepository !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new ListIngredientExpiringCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        String message \u003d String.format(ListIngredientExpiringCommand.MESSAGE_SHOW_WHOLE_LIST,","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"                ingredientRepository.findExpiringIngredients());","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientRepository, null), message);","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"JoshHDs":26}},{"path":"src/test/java/expiryeliminator/commands/ListRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KairuiHu"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"KairuiHu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"class ListRecipeCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"    public void listRecipeCommand_sampleRecipeList_expectLIstString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"        RecipeList recipeList \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"        assert recipeList !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"        Command command \u003d new ListRecipeCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"        String message \u003d String.format(ListRecipeCommand.MESSAGE_RECIPE_LIST, recipeList.getWholeRecipeList(), 1);","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"        assertEquals(command.execute(null, recipeList), message);","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"KairuiHu":18,"JoshHDs":1}},{"path":"src/test/java/expiryeliminator/commands/ListRecipesUserCanCookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"public class ListRecipesUserCanCookCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    public void listRecipesUserCanCookCommand_noRecipes_emptyRecipeListError() {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"        final RecipeList recipes \u003d TestUtil.generateEmptyRecipeList();","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientRepository ingredients \u003d TestUtil.generateIngredientRepositoryWithoutExpiredIngredients();","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new ListRecipesUserCanCookCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(ingredients,recipes),ListRecipeCommand.MESSAGE_EMPTY_RECIPE_LIST);","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    public void listRecipesUserCanCookCommand_notEnoughIngredients_notEnoughIngredientsError() {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"        final RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientRepository ingredients \u003d TestUtil.generateIngredientRepositoryForExampleRecipe(0,0);","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new ListRecipesUserCanCookCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(ingredients,recipes),","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"                ListRecipesUserCanCookCommand.MESSAGE_NOT_ENOUGH_INGREDIENTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"    public void listRecipesUserCanCookCommand_enoughIngredients_listRecipeUserCanCook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"        final RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientRepository ingredients \u003d TestUtil.generateIngredientRepositoryForExampleRecipe(1,20);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new ListRecipesUserCanCookCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"        String message \u003d String.format(ListRecipesUserCanCookCommand.MESSAGE_RECIPES_WITH_ENOUGH_INGREDIENTS_TO_COOK,","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateChickenRecipe() + \"\\n\");","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(ingredients,recipes),message);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"    public void listRecipesUserCanCookCommand_enoughIngredientsButSomeAreExpired_listRecipeUserCanCook() {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"        final RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientRepository ingredients \u003d TestUtil.generateExpiredIngredientsForExampleRecipe(1,20);","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new ListRecipesUserCanCookCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"        String message \u003d String.format(ListRecipesUserCanCookCommand.MESSAGE_RECIPES_WITH_ENOUGH_INGREDIENTS_TO_COOK,","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateChickenRecipe() + \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"                        + String.format(ListRecipesUserCanCookCommand.MESSAGE_INGREDIENTS_EXPIRED,\"Chicken\\nSalt\\n\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(ingredients,recipes),message);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"vincentlauhl":48}},{"path":"src/test/java/expiryeliminator/commands/ShoppingListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"public class ShoppingListCommandTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"    public void shoppingListCommand_singleRecipeInput_expectStringOfIngredients() {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"        //generate ingredient repo","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        IngredientRepository ingredientRepository \u003d TestUtil.generateIngredientRepositoryForRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientRepository !\u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"        //generate recipe repo that contains a single recipe","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"        //generate array list of recipe input","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"        ArrayList\u003cString\u003e recipeInput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"        recipeInput.add(\"Chicken Soup\");","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"        //output message string","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"        String outputList \u003d \"Here is your shopping list!\\n\" + \"\\n\" + \"\\n\" + \"Chicken (qty: 1 grams)\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"                + \"Salt (qty: 20 grams)\";","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new ShoppingListCommand(recipeInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientRepository, recipes), outputList);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"    public void shoppingListCommand_multipleRecipeInput_expectStringOfIngredients() {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"        //generate ingredient repo","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"        IngredientRepository ingredientRepository \u003d TestUtil.generateIngredientRepositoryForMultipleRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientRepository !\u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"        //generate recipe repo that contains a multiple recipe","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeListWithMultipleRecipes();","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"        //generate array list of recipe input","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"        ArrayList\u003cString\u003e recipeInput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"        recipeInput.add(\"Chicken Soup\");","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"        recipeInput.add(\"Pork Soup\");","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"        //output message string","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"        String outputList \u003d \"Here is your shopping list!\\n\" + \"\\n\" + \"\\n\" + \"Chicken (qty: 1 grams)\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"                + \"Pork (qty: 1)\\n\" + \"Salt (qty: 40 grams)\";","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new ShoppingListCommand(recipeInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientRepository, recipes), outputList);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"JoshHDs":55}},{"path":"src/test/java/expiryeliminator/commands/UpdateUnitsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"public class UpdateUnitsCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"    public void updateUnitsCommandTest_inputIngredientNameAndNewUNits_unitsOfIngredientRepoIsUpdated() {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"        //generate ingredient repo","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        IngredientRepository ingredientRepository \u003d TestUtil.generateIngredientRepositoryForRecipe();","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientRepository !\u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"        //generate recipe list","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"        //update units","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new UpdateUnitsCommand(\"Salt\",\"kilograms\");","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"        String output \u003d command.execute(ingredientRepository, recipes);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"        //check it updated","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"        String newUnit \u003d TestUtil.getUpdatedUnitsForIngredientRepo(ingredientRepository);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(newUnit, \"kilograms\");","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"    public void updateUnitsCommandTest_inputIngredientNameAndNewUNits_unitsOfRecipeListIsUpdated() {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"        //generate ingredient repo","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"        IngredientRepository ingredientRepository \u003d TestUtil.generateIngredientRepositoryForRecipe();","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientRepository !\u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"        //generate recipe list","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"        //update units","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new UpdateUnitsCommand(\"Salt\",\"kilograms\");","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"        String output \u003d command.execute(ingredientRepository, recipes);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"        //check it updated","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"        String newUnit \u003d TestUtil.getUpdatedUnitsForRecipeList(recipes);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(newUnit, \"kilograms\");","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"JoshHDs":51}},{"path":"src/test/java/expiryeliminator/commands/ViewIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//@@author JoshHDs","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"public class ViewIngredientCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"    public void viewIngredientCommand_sampleIngredientRepository_expectRedAppleString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        IngredientRepository ingredientRepository \u003d TestUtil.generateIngredientRepositoryWithSomeExpiredIngredients();","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientRepository !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new ViewIngredientCommand(\"Red Apple\");","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"        IngredientStorage ingredientStorage \u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"            ingredientStorage \u003d ingredientRepository.find(\"Red Apple\");","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"            fail(\"Ingredient should exist by definition\");","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"        String message \u003d String.format(ViewIngredientCommand.MESSAGE_SHOW_INGREDIENT, ingredientStorage);","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientRepository, null), message);","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":2,"JoshHDs":31}},{"path":"src/test/java/expiryeliminator/commands/ViewRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"KairuiHu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"public class ViewRecipeCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"    public void viewRecipeCommand_noMatchingRecipeName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"        Command command \u003d new ViewRecipeCommand(TestUtil.RANDOM_INPUT_RECIPE_NAME);","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"        String errorMessage \u003d ViewRecipeCommand.MESSAGE_RECIPE_NOT_FOUND;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"        assertEquals(command.execute(null, recipes), errorMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"    public void viewRecipeCommand_hasMatchingRecipeName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeListWithSingleRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"        Command command \u003d new ViewRecipeCommand(TestUtil.EXAMPLE_RECIPE_NAME);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"        String confirmMessage \u003d String.format(ViewRecipeCommand.MESSAGE_SHOW_RECIPE, TestUtil.generateChickenRecipe());","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"KairuiHu"},"content":"        assertEquals(command.execute(null, recipes), confirmMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"KairuiHu":19,"vincentlauhl":4,"JoshHDs":3}},{"path":"src/test/java/expiryeliminator/common/UtilsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"public class UtilsTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"    public void toTitleCase_lowercaseString_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Lorem Ipsum Dolor Sit Amet\", Utils.toTitleCase(\"lorem ipsum dolor sit amet\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Hello World\", Utils.toTitleCase(\"hello world\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Abc\", Utils.toTitleCase(\"abc\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    public void toTitleCase_uppercaseString_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Lorem Ipsum Dolor Sit Amet\", Utils.toTitleCase(\"LOREM IPSUM DOLOR SIT AMET\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Hello World\", Utils.toTitleCase(\"HELLO WORLD\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Abc\", Utils.toTitleCase(\"ABC\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    public void toTitleCase_titleCaseString_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Lorem Ipsum Dolor Sit Amet\", Utils.toTitleCase(\"Lorem Ipsum Dolor Sit Amet\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Hello World\", Utils.toTitleCase(\"Hello World\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Abc\", Utils.toTitleCase(\"Abc\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"    public void toTitleCase_messyCaseString_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Lorem Ipsum Dolor Sit Amet\", Utils.toTitleCase(\"lOrEm iPsUm dOlOr sIt aMeT\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Hello World\", Utils.toTitleCase(\"hElLo wOrLd\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Abc\", Utils.toTitleCase(\"aBc\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"    public void toTitleCase_stringWithSpaces_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Lorem Ipsum Dolor Sit Amet\",","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"                Utils.toTitleCase(\"   Lorem   Ipsum   Dolor   Sit   Amet   \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Hello World\", Utils.toTitleCase(\"   Hello   World   \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Abc\", Utils.toTitleCase(\"   Abc   \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"    public void toTitleCase_emptyString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"\", Utils.toTitleCase(\"\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"bernardboey":44,"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/data/IngredientRepositoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"public class IngredientRepositoryTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"bernardboey":4}},{"path":"src/test/java/expiryeliminator/data/RecipeListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"public class RecipeListTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"    public void add_correctRecipeInput_correctRecipe() {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"        Recipe recipe \u003d TestUtil.generateChickenRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"            recipes.add(recipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Recipe not added.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(recipes.size(), 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    public void add_duplicateRecipeName_ExceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"        Recipe recipe \u003d TestUtil.generateChickenRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"            recipes.add(recipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"            Recipe duplicateRecipe \u003d TestUtil.generateChickenRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"            assertThrows(DuplicateDataException.class, () -\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"                recipes.add(duplicateRecipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"            });","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Recipe not added.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"    public void remove_recipeNameNotInList_ExceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"        Recipe recipe \u003d TestUtil.generateChickenRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"            recipes.add(recipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"            assertThrows(NotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"                recipes.remove(\"Duck\");","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"            });","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Recipe not added.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"    public void remove_recipeNameInList_recipeRemoved() {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"JoshHDs"},"content":"        Recipe recipe \u003d TestUtil.generateChickenRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"            recipes.add(recipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"            recipes.remove(TestUtil.EXAMPLE_RECIPE_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"            assertEquals(recipes.size(), 0);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Recipe not added.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"bernardboey":6,"vincentlauhl":56,"JoshHDs":5}},{"path":"src/test/java/expiryeliminator/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import static expiryeliminator.parser.Parser.parseCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.AddRecipeCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.DeleteRecipeCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"class ParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareAddRecipe_incorrectFormats_ErrorMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"        String[] tests \u003d {\"add recipe r/chicken soup i/chicken q/\",","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe r/chicken soup i/ q/1\",","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe r/chicken soup\",","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe r/Apple Pie\",","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe i/Red Apple q/4 i/Green Apple q/4\"};","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"        for (String test : tests) {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"            assertEquals(parseCommand(test).execute(null, null),","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"                    String.format(Parser.MESSAGE_INVALID_COMMAND_FORMAT, AddRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareAddRecipe_quantityNotANumber_ErrorMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"        String test \u003d \"add recipe r/Apple Pie i/Red Apple q/4 i/Green Apple q/four\";","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"        assertEquals(String.format(Parser.MESSAGE_INVALID_ARGUMENT_FORMAT, \"Quantity must be a valid number.\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"                parseCommand(test).execute(null, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareAddRecipe_missingQuantityOrIngredient_ErrorMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"        String[] tests \u003d {\"add recipe r/chicken soup i/chicken q/1 i/salt\",","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe r/chicken soup i/chicken q/1 q/20\",","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe r/Apple Pie i/Red Apple q/4 i/Green Apple\",","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe r/Apple Pie i/Red Apple q/4 q/4\"};","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"        for (String test : tests) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"            assertEquals(\"Should have same number of ingredient names and quantities\",","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"                    parseCommand(test).execute(null, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareAddRecipe_correctInput_AddRecipeCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"        String test \u003d \"add recipe r/Chicken Soup i/chicken q/1 i/salt q/20\";","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"        assertTrue(parseCommand(test) instanceof AddRecipeCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareAddRecipe_ingredientWithZeroQuantity_ErrorMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"        final IngredientRepository ingredientRepository \u003d TestUtil.generateIngredientRepositoryForRecipe();","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"        final RecipeList recipeList \u003d TestUtil.generateEmptyRecipeList();","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"        String test \u003d \"add recipe r/Chicken Soup i/chicken q/0 i/salt q/20\";","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(\"Quantity of ingredients for recipe cannot be zero.\",","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"bernardboey"},"content":"                parseCommand(test).execute(ingredientRepository, recipeList));","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareDeleteRecipe_correctInput_DeleteRecipeCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"        String test \u003d \"delete recipe r/Chicken Soup\";","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"        assertTrue(parseCommand(test) instanceof DeleteRecipeCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareDeleteRecipe_incorrectFormat_ErrorMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"vincentlauhl"},"content":"        String test \u003d \"delete recipe r/\";","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(parseCommand(test).execute(null, null),","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"bernardboey"},"content":"                String.format(Parser.MESSAGE_INVALID_COMMAND_FORMAT, DeleteRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"bernardboey":14,"vincentlauhl":63}},{"path":"src/test/java/expiryeliminator/ui/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"public class UiTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/util/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.util;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.IngredientRepository;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.IngredientStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientQuantity;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"public class TestUtil {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    public static final String EXAMPLE_RECIPE_NAME \u003d \"Chicken Soup\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"    public static final String EXAMPLE_INGREDIENT_NAME \u003d \"Chicken\";","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"KairuiHu"},"content":"    public static final String RANDOM_INPUT_RECIPE_NAME \u003d \"Foo\";","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    public static final String INGREDIENTS_TO_UPDATE_UNITS \u003d \"Chicken\\nSalt\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"    public static void addIngredientsToChickenRecipe(Recipe recipe) {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"        final IngredientRepository ingredientRepository \u003d generateIngredientRepositoryForRecipe();","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"        assert ingredientRepository !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"            recipe.add(\"Chicken\", 1, ingredientRepository);","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"            recipe.add(\"Salt\", 20, ingredientRepository);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DuplicateDataException | IllegalValueException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Recipe should be valid by definition\");","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"    public static void addIngredientsToPorkRecipe(Recipe recipe) {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"        final IngredientRepository ingredientRepository \u003d generateIngredientRepositoryForRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientRepository !\u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"            recipe.add(\"Pork\", 1, ingredientRepository);","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"            recipe.add(\"Salt\", 20, ingredientRepository);","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"        } catch (DuplicateDataException | IllegalValueException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"            fail(\"Recipe should be valid by definition\");","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"    public static void addIngredientsWithoutUnitsToRecipe(Recipe recipe) {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientRepository ingredientRepository \u003d generateIngredientRepositoryForExampleRecipe(1,20);","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"        assert ingredientRepository !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"            recipe.add(\"Chicken\", 1, ingredientRepository);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"            recipe.add(\"Salt\", 20, ingredientRepository);","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"        } catch (DuplicateDataException | IllegalValueException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Recipe should be valid by definition\");","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"JoshHDs"},"content":"    public static Recipe generateChickenRecipe() {","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"bernardboey"},"content":"        final Recipe recipe \u003d new Recipe(\"Chicken Soup\");","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"JoshHDs"},"content":"        addIngredientsToChickenRecipe(recipe);","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"JoshHDs"},"content":"        return recipe;","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"JoshHDs"},"content":"    public static Recipe generatePorkRecipe() {","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"JoshHDs"},"content":"        final Recipe recipe \u003d new Recipe(\"Pork Soup\");","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"JoshHDs"},"content":"        addIngredientsToPorkRecipe(recipe);","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"bernardboey"},"content":"        return recipe;","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"    public static Recipe generateRecipeWithoutUnits() {","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"vincentlauhl"},"content":"        final Recipe recipe \u003d new Recipe(\"Chicken Soup\");","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"vincentlauhl"},"content":"        addIngredientsWithoutUnitsToRecipe(recipe);","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"vincentlauhl"},"content":"        return recipe;","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"vincentlauhl"},"content":"     * Generates the ingredient names required for a recipe to test for AddRecipeCommand.","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"vincentlauhl"},"content":"     * @param name1 The name of the first ingredient in the recipe","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"vincentlauhl"},"content":"     * @param name2 The name of the second ingredient in the recipe","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"vincentlauhl"},"content":"     * @return The list of ingredient names for the recipe.","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"vincentlauhl"},"content":"    public static ArrayList\u003cString\u003e generateIngredientNamesForRecipe(String name1, String name2) {","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"bernardboey"},"content":"        final ArrayList\u003cString\u003e ingredientNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"vincentlauhl"},"content":"        ingredientNames.add(name1);","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"vincentlauhl"},"content":"        ingredientNames.add(name2);","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"bernardboey"},"content":"        return ingredientNames;","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"vincentlauhl"},"content":"     * Generates the quantities required for a recipe to test for AddRecipeCommand.","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"vincentlauhl"},"content":"     * @param quantity1 Quantity for \"Chicken\" ingredient","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"vincentlauhl"},"content":"     * @param quantity2 Quantity for \"Salt\" ingredient","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"vincentlauhl"},"content":"     * @return The list of quantities for the ingredients.","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"vincentlauhl"},"content":"    public static ArrayList\u003cInteger\u003e generateQuantitiesForRecipe(int quantity1, int quantity2) {","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"bernardboey"},"content":"        final ArrayList\u003cInteger\u003e quantities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"vincentlauhl"},"content":"        quantities.add(quantity1);","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"vincentlauhl"},"content":"        quantities.add(quantity2);","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"vincentlauhl"},"content":"        return quantities;","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"JoshHDs"},"content":"    public static RecipeList generateRecipeListWithSingleRecipe() {","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"JoshHDs"},"content":"            Recipe recipe \u003d generateChickenRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"vincentlauhl"},"content":"            RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"vincentlauhl"},"content":"            recipes.add(recipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"vincentlauhl"},"content":"            return recipes;","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Recipe should be valid by definition\");","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"vincentlauhl"},"content":"            return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"JoshHDs"},"content":"    public static RecipeList generateRecipeListWithMultipleRecipes() {","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"JoshHDs"},"content":"            Recipe recipe1 \u003d generateChickenRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"JoshHDs"},"content":"            Recipe recipe2 \u003d generatePorkRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"JoshHDs"},"content":"            RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"JoshHDs"},"content":"            recipes.add(recipe1);","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"JoshHDs"},"content":"            recipes.add(recipe2);","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"JoshHDs"},"content":"            return recipes;","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"JoshHDs"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"JoshHDs"},"content":"            fail(\"Recipe should be valid by definition\");","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"JoshHDs"},"content":"            return null;","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"bernardboey"},"content":"    public static RecipeList generateEmptyRecipeList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"bernardboey"},"content":"        return new RecipeList();","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"bernardboey"},"content":"    public static IngredientRepository generateIngredientRepositoryForRecipe() {","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"bernardboey"},"content":"        final IngredientRepository ingredientRepository \u003d new IngredientRepository();","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"bernardboey"},"content":"            ingredientRepository.add(\"Chicken\", \"grams\");","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"bernardboey"},"content":"            ingredientRepository.add(\"Salt\", \"grams\");","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"bernardboey"},"content":"            return ingredientRepository;","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"bernardboey"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"bernardboey"},"content":"            fail(\"Ingredient repository should be valid by definition\");","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"bernardboey"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"JoshHDs"},"content":"    public static IngredientRepository generateIngredientRepositoryForMultipleRecipe() {","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"JoshHDs"},"content":"        final IngredientRepository ingredientRepository \u003d new IngredientRepository();","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"JoshHDs"},"content":"            ingredientRepository.add(\"Chicken\", \"grams\");","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"JoshHDs"},"content":"            ingredientRepository.add(\"Pork\", \"grams\");","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"JoshHDs"},"content":"            ingredientRepository.add(\"Salt\", \"grams\");","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"JoshHDs"},"content":"            return ingredientRepository;","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"JoshHDs"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"JoshHDs"},"content":"            fail(\"Ingredient repository should be valid by definition\");","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"JoshHDs"},"content":"            return null;","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"vincentlauhl"},"content":"     * Generates unexpired ingredients for example recipe to test for ListRecipeUserCanCookCommand output.","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"vincentlauhl"},"content":"     * @param quantity1 The quantity of the \"Chicken\" ingredient in the example recipe","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"vincentlauhl"},"content":"     * @param quantity2 The quantity of the \"Salt\" ingredient in the example recipe","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"vincentlauhl"},"content":"     * @return The ingredient repository for the example recipe.","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"vincentlauhl"},"content":"    public static IngredientRepository generateIngredientRepositoryForExampleRecipe(int quantity1, int quantity2) {","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"vincentlauhl"},"content":"        final LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"vincentlauhl"},"content":"        final LocalDate currentDatePlusThreeDays \u003d currentDate.plus(3, ChronoUnit.DAYS);","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"vincentlauhl"},"content":"        final LocalDate currentDatePlusThreeWeeks \u003d currentDate.plus(3, ChronoUnit.WEEKS);","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientRepository ingredientRepository \u003d new IngredientRepository();","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"vincentlauhl"},"content":"            //expiring","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"vincentlauhl"},"content":"            ingredientRepository.add(\"Chicken\", null, quantity1, currentDatePlusThreeDays);","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"vincentlauhl"},"content":"            //fresh","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"vincentlauhl"},"content":"            ingredientRepository.add(\"Salt\", null, quantity2, currentDatePlusThreeWeeks);","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"vincentlauhl"},"content":"            return ingredientRepository;","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Ingredient repository should be valid by definition\");","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"vincentlauhl"},"content":"            return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":191,"author":{"gitId":"vincentlauhl"},"content":"     * Generates expired ingredients for example recipe to test for ListRecipeUserCanCookCommand output.","lastModifiedDate":"2021-11-03"},{"lineNumber":192,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"vincentlauhl"},"content":"     * @param quantity1 The quantity of the \"Chicken\" ingredient in the example recipe","lastModifiedDate":"2021-11-03"},{"lineNumber":194,"author":{"gitId":"vincentlauhl"},"content":"     * @param quantity2 The quantity of the \"Salt\" ingredient in the example recipe","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"vincentlauhl"},"content":"     * @return The ingredient repository for the example recipe.","lastModifiedDate":"2021-11-03"},{"lineNumber":196,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":197,"author":{"gitId":"vincentlauhl"},"content":"    public static IngredientRepository generateExpiredIngredientsForExampleRecipe(int quantity1, int quantity2) {","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"vincentlauhl"},"content":"        final LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"vincentlauhl"},"content":"        final LocalDate currentDateMinusThreeDays \u003d currentDate.minus(3, ChronoUnit.DAYS);","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"vincentlauhl"},"content":"        final LocalDate currentDateMinusThreeWeeks \u003d currentDate.minus(3, ChronoUnit.WEEKS);","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"vincentlauhl"},"content":"        final IngredientRepository ingredientRepository \u003d new IngredientRepository();","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"vincentlauhl"},"content":"            ingredientRepository.add(\"Chicken\", null, quantity1, currentDateMinusThreeDays);","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"vincentlauhl"},"content":"            ingredientRepository.add(\"Salt\", null, quantity2, currentDateMinusThreeWeeks);","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"vincentlauhl"},"content":"            return ingredientRepository;","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Ingredient repository should be valid by definition\");","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"vincentlauhl"},"content":"            return null;","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":215,"author":{"gitId":"vincentlauhl"},"content":"     * Generates the ingredient to be used for comparison of CookedRecipeCommand output.","lastModifiedDate":"2021-11-03"},{"lineNumber":216,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":217,"author":{"gitId":"vincentlauhl"},"content":"     * @return The ingredient \"Chicken\" for the example recipe","lastModifiedDate":"2021-11-03"},{"lineNumber":218,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":219,"author":{"gitId":"vincentlauhl"},"content":"    public static IngredientStorage generateFirstIngredient() {","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"vincentlauhl"},"content":"        final LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"vincentlauhl"},"content":"        final LocalDate currentDatePlusThreeDays \u003d currentDate.plus(3, ChronoUnit.DAYS);","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":223,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"vincentlauhl"},"content":"            final IngredientRepository ingredients \u003d new IngredientRepository();","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"vincentlauhl"},"content":"            ingredients.add(\"Chicken\",null, 1, currentDatePlusThreeDays);","lastModifiedDate":"2021-10-23"},{"lineNumber":226,"author":{"gitId":"vincentlauhl"},"content":"            return ingredients.find(\"Chicken\");","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Ingredient repository should be valid by definition\");","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"vincentlauhl"},"content":"            return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"vincentlauhl"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Ingredient should be in the repository by definition\");","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"vincentlauhl"},"content":"            return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":237,"author":{"gitId":"vincentlauhl"},"content":"     * Generates the ingredient to be used for comparison of CookedRecipeCommand output.","lastModifiedDate":"2021-11-03"},{"lineNumber":238,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":239,"author":{"gitId":"vincentlauhl"},"content":"     * @return The ingredient \"Salt\" for the example recipe","lastModifiedDate":"2021-11-03"},{"lineNumber":240,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":241,"author":{"gitId":"vincentlauhl"},"content":"    public static IngredientStorage generateSecondIngredient() {","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"vincentlauhl"},"content":"        final LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"vincentlauhl"},"content":"        final LocalDate currentDatePlusThreeWeeks \u003d currentDate.plus(3, ChronoUnit.WEEKS);","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":246,"author":{"gitId":"vincentlauhl"},"content":"            final IngredientRepository ingredients \u003d new IngredientRepository();","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"vincentlauhl"},"content":"            ingredients.add(\"Salt\",null, 20, currentDatePlusThreeWeeks);","lastModifiedDate":"2021-10-23"},{"lineNumber":248,"author":{"gitId":"vincentlauhl"},"content":"            return ingredients.find(\"Salt\");","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Ingredient repository should be valid by definition\");","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"vincentlauhl"},"content":"            return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":252,"author":{"gitId":"vincentlauhl"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":253,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Ingredient should be in the repository by definition\");","lastModifiedDate":"2021-10-23"},{"lineNumber":254,"author":{"gitId":"vincentlauhl"},"content":"            return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":255,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":256,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":258,"author":{"gitId":"JoshHDs"},"content":"    //@@author JoshHDs","lastModifiedDate":"2021-11-01"},{"lineNumber":259,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":260,"author":{"gitId":"JoshHDs"},"content":"    public static IngredientRepository generateEmptyIngredientRepository() {","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"JoshHDs"},"content":"        return new IngredientRepository();","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":265,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":266,"author":{"gitId":"JoshHDs"},"content":"     * Creates an ingredient repository with 3 ingredients, one which is expired, one which is expiring, and one that","lastModifiedDate":"2021-11-01"},{"lineNumber":267,"author":{"gitId":"JoshHDs"},"content":"     * is not expiring any time soon.","lastModifiedDate":"2021-11-01"},{"lineNumber":268,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":269,"author":{"gitId":"JoshHDs"},"content":"     * @return the ingredient repository consisting of the three type of ingredients.","lastModifiedDate":"2021-11-01"},{"lineNumber":270,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":271,"author":{"gitId":"JoshHDs"},"content":"    public static IngredientRepository generateIngredientRepositoryWithSomeExpiredIngredients() {","lastModifiedDate":"2021-11-01"},{"lineNumber":272,"author":{"gitId":"JoshHDs"},"content":"        final LocalDate pastDate \u003d LocalDate.of(2021, 10, 8);","lastModifiedDate":"2021-11-01"},{"lineNumber":273,"author":{"gitId":"JoshHDs"},"content":"        final LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-11-01"},{"lineNumber":274,"author":{"gitId":"JoshHDs"},"content":"        final LocalDate currentDatePlusThreeDays \u003d currentDate.plus(3, ChronoUnit.DAYS);","lastModifiedDate":"2021-11-01"},{"lineNumber":275,"author":{"gitId":"JoshHDs"},"content":"        final LocalDate currentDatePlusThreeWeeks \u003d currentDate.plus(3, ChronoUnit.WEEKS);","lastModifiedDate":"2021-11-01"},{"lineNumber":276,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":277,"author":{"gitId":"JoshHDs"},"content":"        final IngredientRepository ingredientRepository \u003d new IngredientRepository();","lastModifiedDate":"2021-11-01"},{"lineNumber":278,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":279,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-11-01"},{"lineNumber":280,"author":{"gitId":"JoshHDs"},"content":"            //expired","lastModifiedDate":"2021-11-01"},{"lineNumber":281,"author":{"gitId":"JoshHDs"},"content":"            ingredientRepository.add(\"Red Apple\", null, 1, pastDate);","lastModifiedDate":"2021-11-01"},{"lineNumber":282,"author":{"gitId":"JoshHDs"},"content":"            //expiring","lastModifiedDate":"2021-11-01"},{"lineNumber":283,"author":{"gitId":"JoshHDs"},"content":"            ingredientRepository.add(\"Blue Apple\", null, 2, currentDatePlusThreeDays);","lastModifiedDate":"2021-11-01"},{"lineNumber":284,"author":{"gitId":"JoshHDs"},"content":"            //fresh","lastModifiedDate":"2021-11-01"},{"lineNumber":285,"author":{"gitId":"JoshHDs"},"content":"            ingredientRepository.add(\"Green Apple\", null, 3, currentDatePlusThreeWeeks);","lastModifiedDate":"2021-11-01"},{"lineNumber":286,"author":{"gitId":"JoshHDs"},"content":"            return ingredientRepository;","lastModifiedDate":"2021-11-01"},{"lineNumber":287,"author":{"gitId":"JoshHDs"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":288,"author":{"gitId":"JoshHDs"},"content":"            fail(\"Ingredient repository should be valid by definition\");","lastModifiedDate":"2021-11-01"},{"lineNumber":289,"author":{"gitId":"JoshHDs"},"content":"            return null;","lastModifiedDate":"2021-11-01"},{"lineNumber":290,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":291,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":292,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":293,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":294,"author":{"gitId":"JoshHDs"},"content":"     * Creates an ingredient repository with 2 ingredients, both of which have not expired.","lastModifiedDate":"2021-11-01"},{"lineNumber":295,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":296,"author":{"gitId":"JoshHDs"},"content":"     * @return the ingredient repository consisting of the three type of ingredients.","lastModifiedDate":"2021-11-01"},{"lineNumber":297,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":298,"author":{"gitId":"JoshHDs"},"content":"    public static IngredientRepository generateIngredientRepositoryWithoutExpiredIngredients() {","lastModifiedDate":"2021-11-01"},{"lineNumber":299,"author":{"gitId":"JoshHDs"},"content":"        final LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-11-01"},{"lineNumber":300,"author":{"gitId":"JoshHDs"},"content":"        final LocalDate currentDatePlusThreeDays \u003d currentDate.plus(3, ChronoUnit.DAYS);","lastModifiedDate":"2021-11-01"},{"lineNumber":301,"author":{"gitId":"JoshHDs"},"content":"        final LocalDate currentDatePlusThreeWeeks \u003d currentDate.plus(3, ChronoUnit.WEEKS);","lastModifiedDate":"2021-11-01"},{"lineNumber":302,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":303,"author":{"gitId":"JoshHDs"},"content":"        final IngredientRepository ingredientRepository \u003d new IngredientRepository();","lastModifiedDate":"2021-11-01"},{"lineNumber":304,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":305,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-11-01"},{"lineNumber":306,"author":{"gitId":"JoshHDs"},"content":"            //expiring","lastModifiedDate":"2021-11-01"},{"lineNumber":307,"author":{"gitId":"JoshHDs"},"content":"            ingredientRepository.add(\"Blue Apple\", null, 2, currentDatePlusThreeDays);","lastModifiedDate":"2021-11-01"},{"lineNumber":308,"author":{"gitId":"JoshHDs"},"content":"            //fresh","lastModifiedDate":"2021-11-01"},{"lineNumber":309,"author":{"gitId":"JoshHDs"},"content":"            ingredientRepository.add(\"Green Apple\", null, 3, currentDatePlusThreeWeeks);","lastModifiedDate":"2021-11-01"},{"lineNumber":310,"author":{"gitId":"JoshHDs"},"content":"            return ingredientRepository;","lastModifiedDate":"2021-11-01"},{"lineNumber":311,"author":{"gitId":"JoshHDs"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":312,"author":{"gitId":"JoshHDs"},"content":"            fail(\"Ingredient repository should be valid by definition\");","lastModifiedDate":"2021-11-01"},{"lineNumber":313,"author":{"gitId":"JoshHDs"},"content":"            return null;","lastModifiedDate":"2021-11-01"},{"lineNumber":314,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":315,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":316,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":317,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":318,"author":{"gitId":"JoshHDs"},"content":"     * Gets the units of the salt ingredient in the ingredient repository.","lastModifiedDate":"2021-11-01"},{"lineNumber":319,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":320,"author":{"gitId":"JoshHDs"},"content":"     * @return the units of the salt ingredient in the ingredient repository.","lastModifiedDate":"2021-11-01"},{"lineNumber":321,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":322,"author":{"gitId":"JoshHDs"},"content":"    public static String getUpdatedUnitsForIngredientRepo(IngredientRepository ingredientRepository) {","lastModifiedDate":"2021-10-23"},{"lineNumber":323,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":324,"author":{"gitId":"JoshHDs"},"content":"            IngredientStorage ingredientStorage \u003d ingredientRepository.find(\"Salt\");","lastModifiedDate":"2021-10-23"},{"lineNumber":325,"author":{"gitId":"JoshHDs"},"content":"            return ingredientStorage.getIngredient().getUnit();","lastModifiedDate":"2021-10-23"},{"lineNumber":326,"author":{"gitId":"JoshHDs"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":327,"author":{"gitId":"JoshHDs"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":328,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":329,"author":{"gitId":"JoshHDs"},"content":"        return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":330,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":331,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":332,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":333,"author":{"gitId":"JoshHDs"},"content":"     * Gets the units of the salt ingredient in the recipe list.","lastModifiedDate":"2021-11-01"},{"lineNumber":334,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":335,"author":{"gitId":"JoshHDs"},"content":"     * @return the units of the salt ingredient in the recipe list.","lastModifiedDate":"2021-11-01"},{"lineNumber":336,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":337,"author":{"gitId":"JoshHDs"},"content":"    public static String getUpdatedUnitsForRecipeList(RecipeList recipes) {","lastModifiedDate":"2021-10-23"},{"lineNumber":338,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":339,"author":{"gitId":"JoshHDs"},"content":"            Recipe chickenSoupRecipe \u003d recipes.findRecipe(\"Chicken Soup\");","lastModifiedDate":"2021-10-23"},{"lineNumber":340,"author":{"gitId":"JoshHDs"},"content":"            IngredientQuantity ingredientAndQuantity \u003d chickenSoupRecipe.getIngredientQuantities().get(\"Salt\");","lastModifiedDate":"2021-10-23"},{"lineNumber":341,"author":{"gitId":"JoshHDs"},"content":"            String newUnit \u003d ingredientAndQuantity.getIngredient().getUnit();","lastModifiedDate":"2021-10-23"},{"lineNumber":342,"author":{"gitId":"JoshHDs"},"content":"            return newUnit;","lastModifiedDate":"2021-10-23"},{"lineNumber":343,"author":{"gitId":"JoshHDs"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":344,"author":{"gitId":"JoshHDs"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":345,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":346,"author":{"gitId":"JoshHDs"},"content":"        return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":347,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":348,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"bernardboey":33,"KairuiHu":2,"vincentlauhl":165,"JoshHDs":148}}]
