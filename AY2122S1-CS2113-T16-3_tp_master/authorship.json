[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"# Expiry Eliminator","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"This is a project based on Duke, which is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may_ have to set the Project language level field to the SDK default option.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/expiryeliminator/ExpiryEliminator.java` file, right-click it, and choose `Run ExpiryEliminator.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"* A skeleton JUnit test (`src/test/java/expiryeliminator/ExipiryEliminatorTest.java`) is provided with this project template. ","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"bernardboey":4,"-":61}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"    mainClassName \u003d \"expiryeliminator.ExpiryEliminator\"","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"    archiveBaseName \u003d \"expiryeliminator\"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"    archiveClassifier \u003d \"v1.0\"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bernardboey":3,"vincentlauhl":1,"-":43}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Bernard Boey | [Github](https://github.com/bernardboey) | [Portfolio](docs/team/bernardboey.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Joshua Dass | [Github](https://github.com/JoshHDs) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Vincent Lau Han Leong | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kairui | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"bernardboey":1,"KairuiHu":3,"vincentlauhl":1,"-":4,"JoshHDs":1}},{"path":"docs/team/bernardboey.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"# Bernard Boey - Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"## Overview","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"### Summary of Contributions","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"bernardboey":6}},{"path":"src/main/java/expiryeliminator/ExpiryEliminator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.common.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.Parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":" * Entry point of the ExpiryEliminator application.","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":" * Initialises the application and starts the interaction with the user.","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"public class ExpiryEliminator {","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"    private static Ui ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"    private static IngredientList ingredients;","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    private static RecipeList recipes;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ExpiryEliminator.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"     * Initialises the ExpiryEliminator application.","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"    public ExpiryEliminator() {","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"        ingredients \u003d new IngredientList();","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"        recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    //@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/ui/Ui.java","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Runs the program.","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void run() {","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ui.showGreeting();","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            final String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            logger.log(Level.INFO, \"Received used input: \" + userInput);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            final Command command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            final String feedback \u003d command.execute(ingredients, recipes);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            ui.showToUser(feedback);","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //@author","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Main entry-point for the ExpiryEliminator application.","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"Starting program.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        new ExpiryEliminator().run();","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"Exiting program.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bernardboey":24,"vincentlauhl":3,"-":34}},{"path":"src/main/java/expiryeliminator/commands/AddIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.Ingredient;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":" * Adds an ingredient, together with its associated quantity and expiry date.","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"public class AddIngredientCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an ingredient to the ingredient repository. \"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"            + \"Expiry date must be yyyy-mm-dd.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"            + \"Quantity must be an integer. Ingredient names are case insensitive and must be unique.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"            + \"Parameters: i/INGREDIENT q/QUANTITY e/EXPIRY_DATE\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"            + \"Example: \" + COMMAND_WORD + \" i/Red Apple q/5 e/2021-12-25\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_ADDED \u003d \"I\u0027ve added this ingredient:\\n\" + \"%1$s\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"            + \"Now you have %2$s ingredient(s)\";","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_ALREADY_EXISTS \u003d \"Unable to add ingredient: %1$s\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"            + \"You already have it in your list\";","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"    private final Ingredient ingredient;","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"     * Instantiates ingredient with the specified name, quantity, and expiry date.","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"     * @param name Name of ingredient to be added.","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"     * @param quantity Quantity of ingredient to be added.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"     * @param expiryDate Expiry date of ingredient to be added.","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"    public AddIngredientCommand(String name, int quantity, LocalDate expiryDate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"        assert name !\u003d null \u0026\u0026 !name.isBlank() : \"Ingredient name cannot be null and cannot be blank\";","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"        assert quantity \u003e\u003d 0 : \"Quantity cannot be negative\";","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"        assert expiryDate !\u003d null : \"Expiry date cannot be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"        ingredient \u003d new Ingredient(name, quantity, expiryDate);","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"    public String execute(IngredientList ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"        assert ingredients !\u003d null : \"Ingredient list cannot be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"            ingredients.add(ingredient);","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"            return String.format(MESSAGE_INGREDIENT_ALREADY_EXISTS, ingredient.getName());","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"        return String.format(MESSAGE_INGREDIENT_ADDED, ingredient, ingredients.size());","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":51,"vincentlauhl":2}},{"path":"src/main/java/expiryeliminator/commands/AddRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":" * Adds a recipe, together with the ingredients needed.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"public class AddRecipeCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    public static final String COMMAND_WORD \u003d \"add recipe\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_RECIPE_ADDED \u003d \"I\u0027ve added this recipe:\\n\" + \"%1$s\"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"            + \"Now you have %2$s recipe(s)\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_RECIPE_ALREADY_EXISTS \u003d \"Unable to add recipe: %1$s\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"            + \"You already have it in your list\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a recipe with its constituent ingredients\"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"            + \" to the recipe list.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"            + \"You can add any number of ingredients with its required quantities.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"            + \"Parameters: r/RECIPE NAME i/INGREDIENT q/QUANTITY i/INGREDIENT q/QUANTITY ...\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"            + \" r/Chicken Soup i/Chicken q/1 i/Salt q/20 i/Ginger q/2\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    private final Recipe recipe;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"    public AddRecipeCommand(String name, IngredientList ingredients) {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"        recipe \u003d new Recipe(name, ingredients);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"    public String execute(IngredientList ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"            recipes.add(recipe);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"            return String.format(MESSAGE_RECIPE_ALREADY_EXISTS, recipe.getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"        return String.format(MESSAGE_RECIPE_ADDED, recipe, recipes.size());","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"vincentlauhl":41}},{"path":"src/main/java/expiryeliminator/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/commands/ByeCommand.java","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FAREWELL \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String execute(IngredientList ingredientList, RecipeList recipes) {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return MESSAGE_FAREWELL;","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":2,"-":29}},{"path":"src/main/java/expiryeliminator/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/commands/Command.java","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents an executable command.","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Executes the appropriate actions.","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param ingredientList Ingredient list.","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param recipes Recipe List.","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @return Feedback about what was executed.","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public abstract String execute(IngredientList ingredientList, RecipeList recipes);","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @return {@code true} if and only if the command is an exit command; {@code false} otherwise.","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":2,"-":30}},{"path":"src/main/java/expiryeliminator/commands/DecrementCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":" * Decrement ingredient by a specified quantity.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"public class DecrementCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    public static final String COMMAND_WORD \u003d \"decrement\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"            COMMAND_WORD + \": Decreases the quantity of a specified ingredient by a specified amount.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"                    + \"Parameters: i/INGREDIENT q/QUANTITY\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"                    + \"Example: \" + COMMAND_WORD + \" i/Red Apple q/5\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_NOT_FOUND \u003d \"Sorry. No matching ingredients found!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_QUANTITY_NEGATIVE \u003d \"Sorry, you currently only have %1$s of this ingredient.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"            + \"You cannot decrease it by %2$s.\\n\" + \"%3$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"    private static final String MESSAGE_INGREDIENT_DECREMENTED \u003d \"I\u0027ve decremented this ingredient by %1$s:\\n\" + \"%2$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"    private final String ingredientName;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    private final int quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"     * Initialises command and stores relevant parameters.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient to be incremented.","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"     * @param quantity Quantity to increment by.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"    public DecrementCommand(String ingredientName, int quantity) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"        assert ingredientName !\u003d null \u0026\u0026 !ingredientName.isBlank()","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"                : \"Ingredient name cannot be null and cannot be blank\";","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"        assert quantity \u003e\u003d 0 : \"Quantity cannot be negative\";","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"        this.ingredientName \u003d ingredientName;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"    public String execute(IngredientList ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"        assert ingredients !\u003d null : \"Ingredient list cannot be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"        final Ingredient ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"            ingredient \u003d ingredients.find(ingredientName);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"            return MESSAGE_INGREDIENT_NOT_FOUND;","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"        final int newQuantity \u003d ingredient.getQuantity() - quantity;","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"        if (newQuantity \u003c 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"            return String.format(MESSAGE_QUANTITY_NEGATIVE, ingredient.getQuantity(), quantity, ingredient);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"        ingredient.setQuantity(newQuantity);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"        return String.format(MESSAGE_INGREDIENT_DECREMENTED, quantity, ingredient);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"bernardboey":55,"vincentlauhl":2}},{"path":"src/main/java/expiryeliminator/commands/DeleteIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":" * Deletes an ingredient.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"public class DeleteIngredientCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"            COMMAND_WORD + \": Deletes an ingredient from the ingredient repository.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"                    + \"Parameters: i/INGREDIENT\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"                    + \"Example: \" + COMMAND_WORD + \" i/Red Apple\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_NOT_FOUND \u003d \"Sorry. No matching ingredients found!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_DELETED \u003d \"I\u0027ve deleted this ingredient for you:\\n\" + \"%1$s\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"            + \"Now you have %2$s ingredient(s)\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    private final String ingredientName;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"     * Initialises command and stores relevant parameters.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient to be deleted.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"    public DeleteIngredientCommand(String ingredientName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"        assert ingredientName !\u003d null \u0026\u0026 !ingredientName.isBlank()","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"                : \"Ingredient name cannot be null and cannot be blank\";","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"        this.ingredientName \u003d ingredientName;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"    public String execute(IngredientList ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"        assert ingredients !\u003d null : \"Ingredient list cannot be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"        final Ingredient ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"            ingredient \u003d ingredients.remove(ingredientName);","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"            return MESSAGE_INGREDIENT_NOT_FOUND;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"        return String.format(MESSAGE_INGREDIENT_DELETED, ingredient, ingredients.size());","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"bernardboey":47}},{"path":"src/main/java/expiryeliminator/commands/DeleteRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":" * Deletes a recipe from the recipe list.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"public class DeleteRecipeCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    public static final String COMMAND_WORD \u003d \"delete recipe\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"    private final String recipeName;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_RECIPE_NOT_FOUND \u003d \"You don\u0027t have this recipe in your list :(\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_RECIPE_DELETED \u003d \"I\u0027ve deleted this recipe for you:\\n\" + \"%1$s\"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"            + \"Now you have %2$s recipe(s)\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the recipe with the given name in the list,\"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"            + \"if it exists.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"            + \"Parameters: r/RECIPE NAME\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"            + \" r/Chicken Soup\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    public DeleteRecipeCommand(String recipeName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"        this.recipeName \u003d recipeName;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"    public String execute(IngredientList ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"            Recipe deletedRecipe \u003d recipes.remove(recipeName);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"            return String.format(MESSAGE_RECIPE_DELETED, deletedRecipe, recipes.size());","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"            return MESSAGE_RECIPE_NOT_FOUND;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"bernardboey":2,"vincentlauhl":35}},{"path":"src/main/java/expiryeliminator/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KairuiHu"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"KairuiHu"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_SHOW_INSTRUCTION \u003d \"Here are the instructions:\";","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"    public String execute(IngredientList ingredientList, RecipeList recipes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"        return MESSAGE_SHOW_INSTRUCTION","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + AddIngredientCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + AddRecipeCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + DeleteIngredientCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + DeleteRecipeCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + DecrementCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + IncrementCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ListRecipeCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ViewRecipeCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ListCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ViewIngredientCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ListIngredientExpiringCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ListIngredientsExpiredCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + HelpCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"KairuiHu"},"content":"                + \"\\n\\n\" + ByeCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"KairuiHu"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bernardboey":1,"KairuiHu":30}},{"path":"src/main/java/expiryeliminator/commands/IncorrectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/commands/IncorrectCommand.java","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents an incorrect command. Upon execution, produces some feedback to the user.","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IncorrectCommand(String feedbackToUser) {","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public String execute(IngredientList ingredientList, RecipeList recipes) {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":2,"-":26}},{"path":"src/main/java/expiryeliminator/commands/IncrementCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":" * Increment ingredient by a specified quantity.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"public class IncrementCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    public static final String COMMAND_WORD \u003d \"increment\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"            COMMAND_WORD + \": Increases the quantity of a specified ingredient by a specified amount.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"                    + \"Parameters: i/INGREDIENT q/QUANTITY\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"                    + \"Example: \" + COMMAND_WORD + \" i/Red Apple q/3\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_NOT_FOUND \u003d \"Sorry. No matching ingredients found!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_INCREMENTED \u003d \"I\u0027ve incremented this ingredient by %1$s:\\n\" + \"%2$s\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"    private final String ingredientName;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    private final int quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"     * Initialises command and stores relevant parameters.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient to be incremented.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"     * @param quantity Quantity to increment by.","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"    public IncrementCommand(String ingredientName, int quantity) {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"        assert ingredientName !\u003d null \u0026\u0026 !ingredientName.isBlank()","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"                : \"Ingredient name cannot be null and cannot be blank\";","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"        assert quantity \u003e\u003d 0 : \"Quantity cannot be negative\";","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"        this.ingredientName \u003d ingredientName;","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"    public String execute(IngredientList ingredients, RecipeList recipes) {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"        assert ingredients !\u003d null : \"Ingredient list cannot be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"        final Ingredient ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"            ingredient \u003d ingredients.find(ingredientName);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"            return MESSAGE_INGREDIENT_NOT_FOUND;","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"        ingredient.setQuantity(ingredient.getQuantity() + quantity);","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"        return String.format(MESSAGE_INGREDIENT_INCREMENTED, quantity, ingredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"bernardboey":51}},{"path":"src/main/java/expiryeliminator/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":" * Lists all ingredient, together with its associated quantity and expiry date.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists out all the ingredients in the repository.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_SHOW_WHOLE_LIST \u003d \"Here are the ingredients in your list:\\n\" + \"\\n%1$s\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"            + \"You have a total of %2$s ingredient(s)\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"    public static final String MESSAGE_EMPTY_INGREDIENT_LIST \u003d \"The ingredient repository is currently empty!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    public String execute(IngredientList ingredientList, RecipeList recipes) {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"        if (ingredientList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"            return MESSAGE_EMPTY_INGREDIENT_LIST;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"            assert ingredientList.size() \u003e 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"            return String.format(MESSAGE_SHOW_WHOLE_LIST, ingredientList.printWholeList(), ingredientList.size());","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bernardboey":3,"JoshHDs":28}},{"path":"src/main/java/expiryeliminator/commands/ListIngredientExpiringCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":" * Lists ingredients expiring within the week, together with its associated quantity and expiry date.","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"public class ListIngredientExpiringCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    public static final String COMMAND_WORD \u003d \"list expiring\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"            COMMAND_WORD + \": Lists out the ingredients that are going to expire within the week.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"                    + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_SHOW_WHOLE_LIST \u003d \"Here are the expiring ingredients in your list:\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"            + \"\\n%1$s\\n\";","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    public String execute(IngredientList ingredientList, RecipeList recipes) {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"        return String.format(MESSAGE_SHOW_WHOLE_LIST, ingredientList.findExpiringIngredients());","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":3,"JoshHDs":23}},{"path":"src/main/java/expiryeliminator/commands/ListIngredientsExpiredCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":" * Lists ingredients that have expired, together with its associated quantity and expiry date.","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"public class ListIngredientsExpiredCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"    public static final String COMMAND_WORD \u003d \"list expired\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists out the ingredients that have expired.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_SHOW_WHOLE_LIST \u003d \"Here are the expired ingredients in your list:\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"            + \"\\n%1$s\\n\";","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"    public String execute(IngredientList ingredientList, RecipeList recipes) {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"        return String.format(MESSAGE_SHOW_WHOLE_LIST, ingredientList.findExpiredIngredients());","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":2,"JoshHDs":21}},{"path":"src/main/java/expiryeliminator/commands/ListRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KairuiHu"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":" * Lists all recipes, together with its associated ingredients.","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"public class ListRecipeCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"     * Unique word associated with the command.","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"    public static final String COMMAND_WORD \u003d \"list recipes\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_RECIPE_LIST \u003d \"Here are the recipes in your recipe list:\\n\" + \"\\n%1$s\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"            + \"You have a total of %2$s recipe(s)\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_EMPTY_RECIPE_LIST \u003d \"The recipe list is currently empty!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": List all recipes in the recipe list.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"KairuiHu"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"KairuiHu"},"content":"    public String execute(IngredientList ingredientList, RecipeList recipeList) {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"KairuiHu"},"content":"        if (recipeList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"KairuiHu"},"content":"            return MESSAGE_EMPTY_RECIPE_LIST;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"KairuiHu"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"KairuiHu"},"content":"            return String.format(MESSAGE_RECIPE_LIST, recipeList.getWholeRecipeList(), recipeList.size());","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"KairuiHu"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"KairuiHu":34}},{"path":"src/main/java/expiryeliminator/commands/ViewIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.Ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":" * Finds a specific ingredient, together with its associated quantity and expiry date.","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"public class ViewIngredientCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds an ingredient to the ingredient repository.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"            + \"Ingredient names are case insensitive and must be unique.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"            + \"Parameters: i/INGREDIENT\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"            + \"Example: \" + COMMAND_WORD + \" i/Red Apple\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_SHOW_INGREDIENT \u003d \"Here is the ingredient in your list:\\n\" + \"\\n%1$s\\n\";","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"    public static final String MESSAGE_INGREDIENT_NOT_FOUND \u003d \"Sorry. No matching ingredients found!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    private final String ingredientDescription;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"     * Initialises command and stores relevant parameters.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"     * @param ingredientDescription Name of ingredient to find.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"    public ViewIngredientCommand(String ingredientDescription) {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientDescription !\u003d null \u0026\u0026 !ingredientDescription.isBlank();","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"        this.ingredientDescription \u003d ingredientDescription;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"    public String execute(IngredientList ingredientList, RecipeList recipes) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"            final Ingredient ingredient \u003d ingredientList.find(ingredientDescription);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"            return String.format(MESSAGE_SHOW_INGREDIENT, ingredient);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"            return MESSAGE_INGREDIENT_NOT_FOUND;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"bernardboey":5,"JoshHDs":39}},{"path":"src/main/java/expiryeliminator/commands/ViewRecipeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KairuiHu"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":" * Finds a specific recipe, together with its associated ingredients.","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"public class ViewRecipeCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"     * Unique word associated with the command.","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"    public static final String COMMAND_WORD \u003d \"view recipe\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_SHOW_RECIPE \u003d \"Here is the recipe in your recipe list:\\n\" + \"\\n%1$s\\n\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_RECIPE_NOT_FOUND \u003d \"Sorry. No matching recipes found!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": View a recipe in the recipe list.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"            + \"Only full name of recipe will be matched.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"KairuiHu"},"content":"            + \"Parameters: r/RECIPE NAME\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"            + \"Example: \" + COMMAND_WORD + \" r/Chicken Soup\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"KairuiHu"},"content":"    private final String recipeDescription;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"KairuiHu"},"content":"    public ViewRecipeCommand(String recipeDescription) {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"KairuiHu"},"content":"        this.recipeDescription \u003d recipeDescription;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"KairuiHu"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"KairuiHu"},"content":"    public String execute(IngredientList ingredientList, RecipeList recipeList) {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"            final Recipe recipe \u003d recipeList.findRecipe(recipeDescription);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"KairuiHu"},"content":"            return String.format(MESSAGE_SHOW_RECIPE, recipe);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"            return MESSAGE_RECIPE_NOT_FOUND;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"KairuiHu"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":6,"KairuiHu":34}},{"path":"src/main/java/expiryeliminator/common/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.common;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"public class LogsCenter {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    //@@author bernardboey-reused","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    // Referenced from","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    // https://github.com/se-edu/addressbook-level3/blob/master/src/main/java/seedu/address/commons/core/LogsCenter.java","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"expiryeliminator.log\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns a logger for the given class.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param clazz Class to create a logger for.","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return Logger for the given class.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        final Logger logger \u003d Logger.getLogger(clazz.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // Prevent logs from being shown in the console.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.INFO);","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bernardboey":10,"-":28}},{"path":"src/main/java/expiryeliminator/common/Utils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.common;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" * Contains shared utility methods.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"public class Utils {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     * Returns a string converted to title case.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     * @param string String to be converted to title case.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     * @return Title case string.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    public static String toTitleCase(String string) {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        //@@author bernardboey-reused","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // Referenced from https://www.baeldung.com/java-string-title-case","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assert string !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return Arrays.stream(string.toLowerCase().split(\" \"))","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .filter(word -\u003e !word.isEmpty())","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .map(word -\u003e Character.toUpperCase(word.charAt(0)) + word.substring(1))","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                .collect(Collectors.joining(\" \"));","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bernardboey":18,"-":8}},{"path":"src/main/java/expiryeliminator/data/Ingredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":" * Represents an ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"public class Ingredient {","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"    private final String name;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"    private int quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"    private final LocalDate expiryDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     * Initialises an ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     * @param name The name of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"     * @param quantity The quantity of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"     * @param expiryDate The expiry date of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    public Ingredient(String name, int quantity, LocalDate expiryDate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"        assert name !\u003d null \u0026\u0026 !name.isBlank();","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"        assert quantity \u003e\u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"     * Returns the name of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"     * @return The name of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"    public String getName() {","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"        return name;","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"     * Returns the quantity of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"     * @return The quantity of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"    public int getQuantity() {","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"        return quantity;","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"     * Sets the quantity of the ingredient.","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"     * @param quantity Quantity of the ingredient.","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"    public void setQuantity(int quantity) {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"        assert quantity \u003e\u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"     * Returns the expiry date of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"     * @return The expiry date of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"bernardboey"},"content":"    public LocalDate getExpiryDate() {","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"bernardboey"},"content":"        return expiryDate;","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"bernardboey"},"content":"    public String toString() {","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"bernardboey"},"content":"        return name + \" (qty: \" + quantity + \") (expiry: \" + expiryDate + \")\";","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":69}},{"path":"src/main/java/expiryeliminator/data/IngredientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":" * Represents the ingredient list and contains methods to add and remove ingredients.","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"public class IngredientList {","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"    private final HashMap\u003cString, Ingredient\u003e ingredients;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"     * Constructs IngredientList object with no ingredients.","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    public IngredientList() {","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"        ingredients \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"     * Adds ingredient to the ingredient list.","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"     * @param ingredient Ingredient to be added.","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"     * @throws DuplicateDataException If the ingredient already exists.","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"    public void add(Ingredient ingredient) throws DuplicateDataException {","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"        assert ingredient !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"        if (contains(ingredient)) {","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"            throw new DuplicateDataException();","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"        ingredients.put(ingredient.getName(), ingredient);","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"     * Removes ingredient from the ingredient list.","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientName Name of ingredient to be removed.","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"     * @return Ingredient that was removed.","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"    public Ingredient remove(String ingredientName) throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"        final Ingredient ingredient \u003d ingredients.remove(ingredientName);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"        if (ingredient \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"            throw new NotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"        return ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"    public Collection\u003cIngredient\u003e getIngredients() {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"        return ingredients.values();","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"     * Returns {@code true} if the ingredient list contains the specified ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"     * @param ingredient Ingredient whose presence in this list is to be tested.","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"bernardboey"},"content":"     * @return {@code true} if the ingredient list contains the specified ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"bernardboey"},"content":"    public boolean contains(Ingredient ingredient) {","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"bernardboey"},"content":"        assert ingredient !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"bernardboey"},"content":"        return ingredients.containsKey(ingredient.getName());","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"bernardboey"},"content":"     * Returns the number of ingredients in the ingredient list.","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"bernardboey"},"content":"     * @return The number of ingredients in the ingredient list.","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"bernardboey"},"content":"    public int size() {","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"bernardboey"},"content":"        return ingredients.size();","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"JoshHDs"},"content":"     * Returns a string representation of the whole list.","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"JoshHDs"},"content":"     * @return returns a string representing all the ingredients and their specific quantities and expiration dates.","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"JoshHDs"},"content":"    public String printWholeList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"bernardboey"},"content":"        StringBuilder wholeList \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"JoshHDs"},"content":"        for (Ingredient ingredient : ingredients.values()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"bernardboey"},"content":"            wholeList.append(ingredient.toString()).append(\"\\n\");","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"bernardboey"},"content":"        return wholeList.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"JoshHDs"},"content":"     * Looks for the ingredient that the user is looking for.","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"JoshHDs"},"content":"     * @param ingredientDescription The ingredient name the user is searching for.","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"JoshHDs"},"content":"     * @return the ingredient object that the user is searching for.","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"bernardboey"},"content":"    public Ingredient find(String ingredientDescription) throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientDescription !\u003d null \u0026\u0026 !ingredientDescription.isBlank();","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"bernardboey"},"content":"        final Ingredient ingredient \u003d ingredients.get(ingredientDescription);","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"bernardboey"},"content":"        if (ingredient \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"bernardboey"},"content":"            throw new NotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"bernardboey"},"content":"        return ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"JoshHDs"},"content":"     * Looks for the ingredients that are expiring within the week.","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"JoshHDs"},"content":"     * @return the string representing the list of expiring ingredients.","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"JoshHDs"},"content":"    public String findExpiringIngredients() {","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"JoshHDs"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"JoshHDs"},"content":"        LocalDate currentDatePlusAWeek \u003d currentDate.plus(1, ChronoUnit.WEEKS);","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"bernardboey"},"content":"        StringBuilder expiringIngredientsList \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"JoshHDs"},"content":"        for (Ingredient ingredient : ingredients.values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"JoshHDs"},"content":"            if (ingredient.getExpiryDate().isAfter(currentDate)","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"JoshHDs"},"content":"                    \u0026\u0026 ingredient.getExpiryDate().isBefore(currentDatePlusAWeek)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"bernardboey"},"content":"                expiringIngredientsList.append(ingredient).append(\"\\n\");","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"bernardboey"},"content":"        return expiringIngredientsList.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"JoshHDs"},"content":"     * Looks for the ingredients that have expired.","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"JoshHDs"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"JoshHDs"},"content":"     * @return the string representing the list of expired ingredients.","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"JoshHDs"},"content":"    public String findExpiredIngredients() {","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"JoshHDs"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"bernardboey"},"content":"        StringBuilder expiredIngredientsList \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"JoshHDs"},"content":"        for (Ingredient ingredient : ingredients.values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"JoshHDs"},"content":"            if (ingredient.getExpiryDate().isBefore(currentDate)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"bernardboey"},"content":"                expiredIngredientsList.append(ingredient).append(\"\\n\");","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"bernardboey"},"content":"        return expiredIngredientsList.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":82,"vincentlauhl":6,"JoshHDs":53}},{"path":"src/main/java/expiryeliminator/data/Recipe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":" * Represents a recipe.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"public class Recipe {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"    private final String name;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"    private IngredientList ingredients;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"     * Initialises a recipe.","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"     * @param name The name of the recipe","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"     * @param ingredients The ingredients for the recipe","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    public Recipe(String name, IngredientList ingredients) {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"        this.ingredients \u003d ingredients;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"     * Returns the name of the recipe.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"     * @return Name of the recipe.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    public String getName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"        return name;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"     * Returns the ingredients for the recipe.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"     * @return Ingredients for the recipe.","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"    public IngredientList getIngredients() {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"        return ingredients;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"        StringBuilder ingredientsWithQuantities \u003d new StringBuilder(name + \"\\n\");","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"        for (Ingredient ingredient : ingredients.getIngredients()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"            ingredientsWithQuantities.append(\"- \").append(ingredient.getName())","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"                    .append(\" (qty: \").append(ingredient.getQuantity()).append(\")\\n\");","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"        return ingredientsWithQuantities.toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"    //TODO(vincentlauhl): Allow users to modify recipe.","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"bernardboey":4,"vincentlauhl":46}},{"path":"src/main/java/expiryeliminator/data/RecipeList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":" * Represents the recipe list and contains methods to add and remove recipes.","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"public class RecipeList {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    private final HashMap\u003cString, Recipe\u003e recipes;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"     * Constructs Recipe List with no recipes.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    public RecipeList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"        recipes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"     * Adds a recipe to the recipe list.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"     * @param recipe Recipe to be added","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"     * @throws DuplicateDataException If the recipe already exists.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    public void add(Recipe recipe) throws DuplicateDataException {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"        if (recipes.containsKey(recipe.getName())) {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"            throw new DuplicateDataException();","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"            recipes.put(recipe.getName(), recipe);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"     * Removes a recipe from the recipe list.","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"     * @param name name of the recipe to be removed","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"     * @return The recipe removed.","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"     * @throws NotFoundException If there are no such recipes in the list","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"    public Recipe remove(String name) throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"        Recipe recipe \u003d recipes.get(name);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"        if (recipe \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"            throw new NotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"        recipes.remove(name);","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"        return recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"     * Returns the number of recipes in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"     * @return Number of recipes in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"    public int size() {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"        return recipes.size();","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"KairuiHu"},"content":"     * Returns a string representation of the whole recipe list.","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"KairuiHu"},"content":"     * @return returns a string representing all the recipes.","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"KairuiHu"},"content":"    public String getWholeRecipeList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"bernardboey"},"content":"        StringBuilder wholeRecipeList \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"KairuiHu"},"content":"        for (Recipe recipe : recipes.values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"bernardboey"},"content":"            wholeRecipeList.append(recipe.toString()).append(\"\\n\");","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"bernardboey"},"content":"        return wholeRecipeList.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"KairuiHu"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"KairuiHu"},"content":"     * Looks for the recipe that the user is looking for.","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"KairuiHu"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"KairuiHu"},"content":"     * @param recipeDescription The recipe name the user is searching for.","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"KairuiHu"},"content":"     * @return the recipe object that the user is searching for.","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"KairuiHu"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"bernardboey"},"content":"    public Recipe findRecipe(String recipeDescription) throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"bernardboey"},"content":"        final Recipe recipe \u003d recipes.get(recipeDescription);","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"bernardboey"},"content":"        if (recipe \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"bernardboey"},"content":"            throw new NotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"bernardboey"},"content":"        return recipe;","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"bernardboey":17,"KairuiHu":19,"vincentlauhl":50}},{"path":"src/main/java/expiryeliminator/data/exception/DuplicateDataException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data.exception;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/data/exception/DuplicateDataException.java","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Signals an error caused by duplicate data where there should be none.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DuplicateDataException extends Exception {","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":2,"-":11}},{"path":"src/main/java/expiryeliminator/data/exception/NotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data.exception;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Signals an error caused by not being able to find a specified item where it should have been present.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class NotFoundException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"bernardboey":7}},{"path":"src/main/java/expiryeliminator/parser/ArgParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidPrefixException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.MissingPrefixException;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.MultipleArgsException;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.MultipleArgPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.Prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.SingleArgPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":" * Parses arguments based on a specified format and validates them.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"public class ArgParser {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"     * Maps each prefix to a list of argument strings that correspond to that prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    private final HashMap\u003cString, ArrayList\u003cString\u003e\u003e prefixesToArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"     * Used for separation of each prefix and argument.","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"     * E.g. this matches \"/a aaaaa aaaa\"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    private static final Pattern ARGS_FORMAT \u003d Pattern.compile(\"\\\\w+/([^/\\\\s]+( +|$))+\");","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"    private final ArrayList\u003cPrefix\u003e prefixList;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"     * Initialises argument parser and stores prefix list.","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"     * @param prefixList List of prefixes that should be parsed.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"    public ArgParser(Prefix... prefixList) {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"        assert prefixList.length \u003e 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"        this.prefixList \u003d new ArrayList\u003c\u003e(Arrays.asList(prefixList));","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"        for (Prefix prefix : prefixList) {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"            assert prefix !\u003d null : \"Prefix cannot be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"            prefixesToArgs.put(prefix.getPrefix(), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"     * Parses arguments based on the specified prefixes.","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"     * @param args Argument string to be parsed.","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidPrefixException If there is an invalid prefix found in the args that does not correspond","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"     *         to any of the specified prefixes.","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"     * @throws MissingPrefixException If there is a missing prefix that could not be found in the args.","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"bernardboey"},"content":"     * @throws MultipleArgsException If there is a prefix that appears more than once in the args when it should","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"     *         have only appeared once.","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"bernardboey"},"content":"    public void parse(String args) throws InvalidPrefixException, MissingPrefixException, MultipleArgsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"bernardboey"},"content":"        args \u003d args \u003d\u003d null ? \"\" : args.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"bernardboey"},"content":"        final Matcher matcher \u003d ARGS_FORMAT.matcher(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"bernardboey"},"content":"        findAndPopulateArgs(matcher);","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"bernardboey"},"content":"        checkAllArgsPresent();","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"bernardboey"},"content":"    private void findAndPopulateArgs(Matcher matcher) throws InvalidPrefixException {","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"bernardboey"},"content":"        while (matcher.find()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"bernardboey"},"content":"            final String match \u003d matcher.group();","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"bernardboey"},"content":"            final String[] prefixAndArg \u003d match.split(\"/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"bernardboey"},"content":"            final String prefix \u003d prefixAndArg[0];","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"bernardboey"},"content":"            final String arg \u003d prefixAndArg[1].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"bernardboey"},"content":"            try {","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"bernardboey"},"content":"                prefixesToArgs.get(prefix).add(arg);","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"bernardboey"},"content":"            } catch (NullPointerException error) {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"bernardboey"},"content":"                throw new InvalidPrefixException(prefix);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"bernardboey"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"bernardboey"},"content":"    private void checkAllArgsPresent() throws MissingPrefixException, MultipleArgsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"bernardboey"},"content":"        for (Prefix prefix : prefixList) {","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"bernardboey"},"content":"            final ArrayList\u003cString\u003e argList \u003d prefixesToArgs.get(prefix.getPrefix());","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"bernardboey"},"content":"            if (argList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"bernardboey"},"content":"                throw new MissingPrefixException(prefix);","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"bernardboey"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"bernardboey"},"content":"            if (prefix instanceof SingleArgPrefix \u0026\u0026 argList.size() \u003e 1) {","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"bernardboey"},"content":"                throw new MultipleArgsException();","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"bernardboey"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"bernardboey"},"content":"     * Returns the arg that corresponds to the given prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"bernardboey"},"content":"     * @param prefix Single arg prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"bernardboey"},"content":"     * @return Arg that corresponds to the given prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"bernardboey"},"content":"    public String getSingleArg(SingleArgPrefix prefix) {","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"bernardboey"},"content":"        assert prefix !\u003d null \u0026\u0026 prefixList.contains(prefix)","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"bernardboey"},"content":"                : \"Prefix cannot be null and must be present in the arg parser\u0027s prefix list\";","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"bernardboey"},"content":"        final ArrayList\u003cString\u003e argList \u003d prefixesToArgs.get(prefix.getPrefix());","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"bernardboey"},"content":"        assert argList !\u003d null","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"bernardboey"},"content":"                : \"Arg list should not be null because we should have already checked that all args are present\";","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"bernardboey"},"content":"        assert argList.size() \u003d\u003d 1 : \"There should be one arg because we should have already checked that beforehand\";","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"bernardboey"},"content":"        return argList.get(0);","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"bernardboey"},"content":"     * Returns the list of arg that corresponds to the given prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"bernardboey"},"content":"     * @param prefix Multiple arg prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"bernardboey"},"content":"     * @return List of args that correspond to the given prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"bernardboey"},"content":"    public ArrayList\u003cString\u003e getArgList(MultipleArgPrefix prefix) {","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"bernardboey"},"content":"        assert prefix !\u003d null \u0026\u0026 prefixList.contains(prefix)","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"bernardboey"},"content":"                : \"Prefix cannot be null and must be present in the arg parser\u0027s prefix list\";","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"bernardboey"},"content":"        final ArrayList\u003cString\u003e argList \u003d prefixesToArgs.get(prefix.getPrefix());","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"bernardboey"},"content":"        assert argList !\u003d null","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"bernardboey"},"content":"                : \"Arg list should not be null because we should have already checked that all args are present\";","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"bernardboey"},"content":"        return argList;","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":124}},{"path":"src/main/java/expiryeliminator/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.AddIngredientCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.AddRecipeCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.ByeCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.DecrementCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.DeleteIngredientCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.DeleteRecipeCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.HelpCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.IncorrectCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.IncrementCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.ListCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.ListIngredientExpiringCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.ListIngredientsExpiredCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.ListRecipeCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.ViewIngredientCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.commands.ViewRecipeCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.Ingredient;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.argparser.ExpiryDateParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.argparser.IngredientParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.argparser.QuantityParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.argparser.RecipeParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidPrefixException;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.MissingPrefixException;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.MultipleArgsException;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.MultipleArgPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.SingleArgPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":" * Parses user input.","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"public class Parser {","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/parser/Parser.java","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"^(?\u003ccommand\u003e[^/]+)(?\u003cargs\u003e .*)?$\");","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final SingleArgPrefix PREFIX_RECIPE \u003d new SingleArgPrefix(\"r\");","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final SingleArgPrefix PREFIX_INGREDIENT \u003d new SingleArgPrefix(\"i\");","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final SingleArgPrefix PREFIX_QUANTITY \u003d new SingleArgPrefix(\"q\");","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final SingleArgPrefix PREFIX_EXPIRY \u003d new SingleArgPrefix(\"e\");","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final MultipleArgPrefix PREFIX_MULTIPLE_INGREDIENT \u003d new MultipleArgPrefix(PREFIX_INGREDIENT);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final MultipleArgPrefix PREFIX_MULTIPLE_QUANTITY \u003d new MultipleArgPrefix(PREFIX_QUANTITY);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format!\\n%1$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_ARGUMENT_FORMAT \u003d \"Invalid argument format!\\n%1$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_UNRECOGNISED_COMMAND \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"For help, please type `help`.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses user input as a command.","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param userInput Input command together with any arguments.","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @return Command that corresponds to the user input, if valid.","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static Command parseCommand(String userInput) {","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assert userInput !\u003d null : \"User input string cannot be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput);","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new RuntimeException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        final String command \u003d matcher.group(\"command\");","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String args \u003d matcher.group(\"args\");","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            switch (command) {","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            case AddIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                return prepareAddIngredient(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            case DecrementCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                return prepareDecrementIngredient(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            case IncrementCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                return prepareIncrementIngredient(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            case DeleteIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                return prepareDeleteIngredient(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                return new ListCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            case ListIngredientExpiringCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                return new ListIngredientExpiringCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            case ListIngredientsExpiredCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                return new ListIngredientsExpiredCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            case ViewIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                return prepareViewIngredient(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            case AddRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                return prepareAddRecipe(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            case DeleteRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                return prepareDeleteRecipe(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            case ListRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                return new ListRecipeCommand();","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            case ViewRecipeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                return prepareViewRecipe(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                return new ByeCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                return new HelpCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2021-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                return new IncorrectCommand(MESSAGE_UNRECOGNISED_COMMAND);","lastModifiedDate":"2021-10-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } catch (InvalidArgFormatException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_ARGUMENT_FORMAT, e.getMessage()));","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-10-03"},{"lineNumber":118,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":119,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareAddIngredient(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"bernardboey"},"content":"        final ArgParser argParser \u003d new ArgParser(PREFIX_INGREDIENT, PREFIX_QUANTITY, PREFIX_EXPIRY);","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"bernardboey"},"content":"            argParser.parse(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"bernardboey"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"bernardboey"},"content":"        final String ingredient \u003d new IngredientParser().parse(argParser.getSingleArg(PREFIX_INGREDIENT));","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"bernardboey"},"content":"        final int quantity \u003d new QuantityParser().parse(argParser.getSingleArg(PREFIX_QUANTITY));","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"bernardboey"},"content":"        final LocalDate expiry \u003d new ExpiryDateParser().parse(argParser.getSingleArg(PREFIX_EXPIRY));","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"bernardboey"},"content":"        return new AddIngredientCommand(ingredient, quantity, expiry);","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareDecrementIngredient(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"bernardboey"},"content":"        final ArgParser argParser \u003d new ArgParser(PREFIX_INGREDIENT, PREFIX_QUANTITY);","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"bernardboey"},"content":"            argParser.parse(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DecrementCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"bernardboey"},"content":"        final String ingredient \u003d new IngredientParser().parse(argParser.getSingleArg(PREFIX_INGREDIENT));","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"bernardboey"},"content":"        final int quantity \u003d new QuantityParser().parse(argParser.getSingleArg(PREFIX_QUANTITY));","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"bernardboey"},"content":"        return new DecrementCommand(ingredient, quantity);","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareIncrementIngredient(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"bernardboey"},"content":"        final ArgParser argParser \u003d new ArgParser(PREFIX_INGREDIENT, PREFIX_QUANTITY);","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"bernardboey"},"content":"            argParser.parse(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, IncrementCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"bernardboey"},"content":"        final String ingredient \u003d new IngredientParser().parse(argParser.getSingleArg(PREFIX_INGREDIENT));","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"bernardboey"},"content":"        final int quantity \u003d new QuantityParser().parse(argParser.getSingleArg(PREFIX_QUANTITY));","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"bernardboey"},"content":"        return new IncrementCommand(ingredient, quantity);","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareDeleteIngredient(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"bernardboey"},"content":"        final ArgParser argParser \u003d new ArgParser(PREFIX_INGREDIENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"bernardboey"},"content":"            argParser.parse(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"bernardboey"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"bernardboey"},"content":"        final String ingredient \u003d new IngredientParser().parse(argParser.getSingleArg(PREFIX_INGREDIENT));","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"bernardboey"},"content":"        return new DeleteIngredientCommand(ingredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":174,"author":{"gitId":"vincentlauhl"},"content":"     * Creates a AddRecipeCommand from the inputs.","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":176,"author":{"gitId":"bernardboey"},"content":"     * @param args Command arguments.","lastModifiedDate":"2021-10-09"},{"lineNumber":177,"author":{"gitId":"vincentlauhl"},"content":"     * @return a AddRecipeCommand with the recipe name and the ingredients if successful","lastModifiedDate":"2021-10-05"},{"lineNumber":178,"author":{"gitId":"vincentlauhl"},"content":"     *         and an IncorrectCommand if not.","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareAddRecipe(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"bernardboey"},"content":"        final ArgParser argParser \u003d new ArgParser(PREFIX_RECIPE, PREFIX_MULTIPLE_INGREDIENT, PREFIX_MULTIPLE_QUANTITY);","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":183,"author":{"gitId":"bernardboey"},"content":"            argParser.parse(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":187,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"bernardboey"},"content":"        final String recipe \u003d new RecipeParser().parse(argParser.getSingleArg(PREFIX_RECIPE));","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"bernardboey"},"content":"        final ArrayList\u003cString\u003e ingredients \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"bernardboey"},"content":"                new IngredientParser().parse(argParser.getArgList(PREFIX_MULTIPLE_INGREDIENT));","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"bernardboey"},"content":"        final ArrayList\u003cInteger\u003e quantities \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"bernardboey"},"content":"                new QuantityParser().parse(argParser.getArgList(PREFIX_MULTIPLE_QUANTITY));","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"bernardboey"},"content":"        final IngredientList ingredientList \u003d new IngredientList();","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"bernardboey"},"content":"        final IncorrectCommand error \u003d addIngredients(ingredients, quantities, ingredientList);","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"vincentlauhl"},"content":"        if (error !\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":196,"author":{"gitId":"vincentlauhl"},"content":"            return error;","lastModifiedDate":"2021-10-05"},{"lineNumber":197,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":198,"author":{"gitId":"vincentlauhl"},"content":"        assert !recipe.isBlank();","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"bernardboey"},"content":"        return new AddRecipeCommand(recipe, ingredientList);","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":201,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":202,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"vincentlauhl"},"content":"     * Creates a DeleteRecipeCommand from the inputs.","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"vincentlauhl"},"content":"     * @param args Command arguments.","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"vincentlauhl"},"content":"     * @return a DeleteRecipeCommand with the recipe name if successful and an IncorrectCommand if not.","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareDeleteRecipe(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"vincentlauhl"},"content":"        final ArgParser argParser \u003d new ArgParser(PREFIX_RECIPE);","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"vincentlauhl"},"content":"            argParser.parse(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"bernardboey"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"vincentlauhl"},"content":"        final String recipe \u003d new RecipeParser().parse(argParser.getSingleArg(PREFIX_RECIPE));","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"vincentlauhl"},"content":"        assert !recipe.isBlank();","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"vincentlauhl"},"content":"        return new DeleteRecipeCommand(recipe);","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":223,"author":{"gitId":"vincentlauhl"},"content":"     * Adds the ingredients into the ingredient list.","lastModifiedDate":"2021-10-05"},{"lineNumber":224,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":225,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientNames Array of name of ingredients","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"bernardboey"},"content":"     * @param quantities Array of quantity of ingredients","lastModifiedDate":"2021-10-09"},{"lineNumber":227,"author":{"gitId":"vincentlauhl"},"content":"     * @param ingredients Ingredient list to store the ingredients","lastModifiedDate":"2021-10-05"},{"lineNumber":228,"author":{"gitId":"vincentlauhl"},"content":"     * @return null if there\u0027s no error and an IncorrectCommand if there is.","lastModifiedDate":"2021-10-05"},{"lineNumber":229,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":230,"author":{"gitId":"bernardboey"},"content":"    private static IncorrectCommand addIngredients(ArrayList\u003cString\u003e ingredientNames, ArrayList\u003cInteger\u003e quantities,","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"bernardboey"},"content":"                                                   IngredientList ingredients) {","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"bernardboey"},"content":"        if (ingredientNames.size() !\u003d quantities.size()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(\"Should have same number of ingredient names and quantities\");","lastModifiedDate":"2021-10-09"},{"lineNumber":234,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":235,"author":{"gitId":"bernardboey"},"content":"        for (int i \u003d 0; i \u003c ingredientNames.size(); i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"vincentlauhl"},"content":"            if (quantities.get(i) \u003d\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"vincentlauhl"},"content":"                return new IncorrectCommand(\"Quantity of ingredients for recipe cannot be zero.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"vincentlauhl"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"bernardboey"},"content":"            Ingredient ingredient \u003d new Ingredient(ingredientNames.get(i), quantities.get(i), null);","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"vincentlauhl"},"content":"            assert !ingredientNames.get(i).isBlank();","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"vincentlauhl"},"content":"            assert quantities.get(i) !\u003d null \u0026\u0026 quantities.get(i) !\u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"vincentlauhl"},"content":"            try {","lastModifiedDate":"2021-10-05"},{"lineNumber":243,"author":{"gitId":"vincentlauhl"},"content":"                ingredients.add(ingredient);","lastModifiedDate":"2021-10-05"},{"lineNumber":244,"author":{"gitId":"vincentlauhl"},"content":"            } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":245,"author":{"gitId":"vincentlauhl"},"content":"                return new IncorrectCommand(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-05"},{"lineNumber":246,"author":{"gitId":"vincentlauhl"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":247,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":248,"author":{"gitId":"vincentlauhl"},"content":"        return null;","lastModifiedDate":"2021-10-05"},{"lineNumber":249,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":250,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":251,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareViewIngredient(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":252,"author":{"gitId":"bernardboey"},"content":"        final ArgParser argParser \u003d new ArgParser(PREFIX_INGREDIENT);","lastModifiedDate":"2021-10-09"},{"lineNumber":253,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":254,"author":{"gitId":"bernardboey"},"content":"            argParser.parse(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":255,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":256,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":257,"author":{"gitId":"bernardboey"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":258,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":259,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":260,"author":{"gitId":"bernardboey"},"content":"        final String ingredient \u003d new IngredientParser().parse(argParser.getSingleArg(PREFIX_INGREDIENT));","lastModifiedDate":"2021-10-09"},{"lineNumber":261,"author":{"gitId":"bernardboey"},"content":"        return new ViewIngredientCommand(ingredient);","lastModifiedDate":"2021-10-09"},{"lineNumber":262,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":263,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":264,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareViewRecipe(String args) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"KairuiHu"},"content":"        final ArgParser argParser \u003d new ArgParser(PREFIX_RECIPE);","lastModifiedDate":"2021-10-09"},{"lineNumber":266,"author":{"gitId":"KairuiHu"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":267,"author":{"gitId":"KairuiHu"},"content":"            argParser.parse(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":268,"author":{"gitId":"bernardboey"},"content":"        } catch (InvalidPrefixException | MissingPrefixException | MultipleArgsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":269,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":270,"author":{"gitId":"KairuiHu"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":271,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":272,"author":{"gitId":"KairuiHu"},"content":"        final String recipe \u003d new RecipeParser().parse(argParser.getSingleArg(PREFIX_RECIPE));","lastModifiedDate":"2021-10-09"},{"lineNumber":273,"author":{"gitId":"KairuiHu"},"content":"        return new ViewRecipeCommand(recipe);","lastModifiedDate":"2021-10-09"},{"lineNumber":274,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":275,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":124,"KairuiHu":18,"vincentlauhl":55,"-":75,"JoshHDs":3}},{"path":"src/main/java/expiryeliminator/parser/argparser/ExpiryDateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.argparser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":" * Parses expiry date.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"public class ExpiryDateParser extends SingleArgParser\u003cLocalDate\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INVALID_DATE \u003d \"Expiry must be a valid date (yyyy-mm-dd).\";","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     * Parses expiry date.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"     * @param expiryDateString String to be parsed as an expiry date.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"     * @return Parsed expiry date.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If the string is blank or is not a valid date.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"    public LocalDate parse(String expiryDateString) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"        checkArgNotBlank(expiryDateString, \"Expiry date cannot be blank.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"            return LocalDate.parse(expiryDateString);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"            throw new InvalidArgFormatException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":30}},{"path":"src/main/java/expiryeliminator/parser/argparser/IngredientParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.argparser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.common.Utils;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" * Parses ingredient name.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"public class IngredientParser extends MultipleArgParser\u003cString\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     * Parses ingredient name and converts to title case.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     * @param ingredientString String to be parsed as an ingredient name.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     * @return Parsed ingredient name in title case.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If the string is blank.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"    public String parse(String ingredientString) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"        checkArgNotBlank(ingredientString, \"Ingredient name cannot be blank.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"        return Utils.toTitleCase(ingredientString);","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":22}},{"path":"src/main/java/expiryeliminator/parser/argparser/MultipleArgParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.argparser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":" * Represents a parser that parses multiple arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"public abstract class MultipleArgParser\u003cT\u003e extends SingleArgParser\u003cT\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"     * Parses a list of arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     * @param argList List of argument strings to be parsed.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     * @return List of parsed arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If any of the arguments is of an invalid format.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"    public ArrayList\u003cT\u003e parse(ArrayList\u003cString\u003e argList) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"        final ArrayList\u003cT\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"        for (String argString : argList) {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"            results.add(parse(argString));","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"        return results;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":25}},{"path":"src/main/java/expiryeliminator/parser/argparser/QuantityParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.argparser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":" * Parses quantity.","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"public class QuantityParser extends MultipleArgParser\u003cInteger\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INVALID_NUMBER \u003d \"Quantity must be a valid number.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_NEGATIVE_NUMBER \u003d \"Quantity cannot be a negative number.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     * Parses quantity.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     * @param quantityString String to be parsed as a quantity.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     * @return Parsed quantity.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If the string is blank, is not a valid number, or is negative.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    public Integer parse(String quantityString) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"        checkArgNotBlank(quantityString, \"Quantity cannot be blank.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"            final int quantity \u003d Integer.parseInt(quantityString);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"            if (quantity \u003c 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"                throw new InvalidArgFormatException(MESSAGE_NEGATIVE_NUMBER);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"            return quantity;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"            throw new InvalidArgFormatException(MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":32}},{"path":"src/main/java/expiryeliminator/parser/argparser/RecipeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.argparser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.common.Utils;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" * Parses recipe name.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"public class RecipeParser extends SingleArgParser\u003cString\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     * Parses recipe name and converts to title case.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     * @param recipeString String to be parsed as a recipe name.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     * @return Parsed recipe name in title case.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If the string is blank.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"    public String parse(String recipeString) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"        checkArgNotBlank(recipeString, \"Recipe name cannot be blank.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"        return Utils.toTitleCase(recipeString);","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":21}},{"path":"src/main/java/expiryeliminator/parser/argparser/SingleArgParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.argparser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.exception.InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":" * Represents a parser that parses a single argument.","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"public abstract class SingleArgParser\u003cT\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"     * Parses a single argument.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"     * @param argString Argument string to be parsed.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     * @return The parsed argument.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If the argument is of an invalid format.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    public abstract T parse(String argString) throws InvalidArgFormatException;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"     * Checks that the argument is not blank.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"     * @param argString Argument string to be checked.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"     * @param errorMessage Error message to be used for the exception if the argument is blank.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"     * @throws InvalidArgFormatException If argument is blank.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    protected void checkArgNotBlank(String argString, String errorMessage) throws InvalidArgFormatException {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"        if (argString \u003d\u003d null || argString.isBlank()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"            throw new InvalidArgFormatException(errorMessage);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":30}},{"path":"src/main/java/expiryeliminator/parser/exception/InvalidArgFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.exception;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Signals an error caused by an invalid argument format.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class InvalidArgFormatException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"     * Initialises exception and stores error message.","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"     * @param message Error message.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    public InvalidArgFormatException(String message) {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"        super(message);","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":15}},{"path":"src/main/java/expiryeliminator/parser/exception/InvalidPrefixException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.exception;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Signals an error caused by an invalid prefix that was encountered.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class InvalidPrefixException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"    private final String prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"     * Initialises exception and stores the invalid prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"     * @param prefix Invalid prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    public InvalidPrefixException(String prefix) {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"     * Returns the invalid prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"     * @return Invalid prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    public String getPrefix() {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"        return prefix;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":26}},{"path":"src/main/java/expiryeliminator/parser/exception/MissingPrefixException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.exception;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.prefix.Prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":" * Signals an error caused by a missing prefix where it should have been present.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"public class MissingPrefixException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"    private final Prefix prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     * Initialises exception and stores the missing prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     * @param prefix Missing prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"    public MissingPrefixException(Prefix prefix) {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"     * Returns the missing prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"     * @return Missing prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"    public Prefix getPrefix() {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"        return prefix;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":29}},{"path":"src/main/java/expiryeliminator/parser/exception/MultipleArgsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.exception;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Signals an error caused by having multiple arguments where there should have been only one.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class MultipleArgsException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"bernardboey":7}},{"path":"src/main/java/expiryeliminator/parser/prefix/MultipleArgPrefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Represents a prefix that can appear more than once.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class MultipleArgPrefix extends Prefix {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"     * Initialises multiple arg prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"     * @param singleArgPrefix Prefix that should be allowed to appear more than once.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    public MultipleArgPrefix(SingleArgPrefix singleArgPrefix) {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"        prefix \u003d singleArgPrefix.getPrefix();","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bernardboey":15}},{"path":"src/main/java/expiryeliminator/parser/prefix/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Represents a prefix (e.g. \"i/\").","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public abstract class Prefix {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"    protected String prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"     * Returns prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"     * @return Prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    public String getPrefix() {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"        return prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bernardboey":17}},{"path":"src/main/java/expiryeliminator/parser/prefix/SingleArgPrefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser.prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Represents a prefix that should only appear once.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class SingleArgPrefix extends Prefix {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"     * Initialises prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"     * @param prefix Prefix.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    public SingleArgPrefix(String prefix) {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bernardboey":15}},{"path":"src/main/java/expiryeliminator/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/ui/Ui.java","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Text UI of the application.","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Ui {","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String INDENTED_HORIZONTAL_LINE \u003d \" \".repeat(4) + \"_\".repeat(100);","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String LINE_PREFIX \u003d \" \".repeat(5);","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** Platform independent line separator. */","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_GREETING \u003d \"Welcome to Expiry Eliminator. What can I do for you?\";","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Reads input commands from the user.","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Ignores blank lines and trims input command.","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return Trimmed input command.","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String line \u003d SCANNER.nextLine();","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // Ignore blank lines","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        while (line.trim().isEmpty()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            line \u003d SCANNER.nextLine();","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return line.trim();","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Prints out the specified text formatted as a block.","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Horizontal lines will be printed before and after the","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * specified text, and the text will be indented.","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param text Text to be printed out.","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void showToUser(String text) {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assert text !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        System.out.println(INDENTED_HORIZONTAL_LINE);","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        System.out.println(addPrefixAndReplaceNewline(text));","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        System.out.println(INDENTED_HORIZONTAL_LINE);","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        System.out.println();","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Prints out greeting message.","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void showGreeting() {","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showToUser(MESSAGE_GREETING);","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Adds {@link #LINE_PREFIX} to the start of each line of {@code text}, and replaces newline characters with the","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * platform independent line separator ({@link #LINE_SEPARATOR}).","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param text Text to be processed.","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @return Processed text.","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private String addPrefixAndReplaceNewline(String text) {","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assert text !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String[] lines \u003d text.split(\"\\n\");","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (lines[i].isBlank()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                lines[i] \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                lines[i] \u003d LINE_PREFIX + lines[i];","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return String.join(LINE_SEPARATOR, lines);","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":5,"-":73}},{"path":"src/test/java/expiryeliminator/ExpiryEliminatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"class ExpiryEliminatorTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"bernardboey":2,"-":10}},{"path":"src/test/java/expiryeliminator/commands/AddIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"public class AddIngredientCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/commands/AddRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"class AddRecipeCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    public void addRecipeCommand_duplicateRecipeName_recipeAlreadyExistsError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new AddRecipeCommand(TestUtil.EXAMPLE_RECIPE_NAME,","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateIngredientListForRecipe());","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"        String errorMessage \u003d String.format(AddRecipeCommand.MESSAGE_RECIPE_ALREADY_EXISTS,","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.EXAMPLE_RECIPE_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(null, recipes), errorMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"    public void addRecipeCommand_correctInput_recipeAddedSuccessfully() {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new AddRecipeCommand(TestUtil.EXAMPLE_RECIPE_NAME,","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"                TestUtil.generateIngredientListForRecipe());","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"        String successMessage \u003d String.format(AddRecipeCommand.MESSAGE_RECIPE_ADDED, TestUtil.generateRecipe(), 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(null, recipes), successMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":29}},{"path":"src/test/java/expiryeliminator/commands/DecrementCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"public class DecrementCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/commands/DeleteIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"public class DeleteIngredientCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/commands/DeleteRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"class DeleteRecipeCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    public void deleteRecipeCommand_recipeNameNotInList_recipeNotFoundErrorMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new DeleteRecipeCommand(\"Duck soup\");","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(null, recipes), DeleteRecipeCommand.MESSAGE_RECIPE_NOT_FOUND);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"    public void deleteRecipeCommand_recipeNameInList_recipeDeletedMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d new DeleteRecipeCommand(TestUtil.EXAMPLE_RECIPE_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"        String message \u003d String.format(DeleteRecipeCommand.MESSAGE_RECIPE_DELETED, TestUtil.generateRecipe(), 0);","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(command.execute(null, recipes), message);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":27}},{"path":"src/test/java/expiryeliminator/commands/IncrementCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"public class IncrementCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    public void listCommand_sampleIngredientList_expectListString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"        IngredientList ingredientList \u003d TestUtil.generateIngredientList();","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientList !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new ListCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"        String message \u003d String.format(ListCommand.MESSAGE_SHOW_WHOLE_LIST, ingredientList.printWholeList(), 3);","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientList, null), message);","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    public void listCommand_emptyIngredientList_emptyIngredientListMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"        IngredientList ingredientList \u003d TestUtil.generateEmptyIngredientList();","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new ListCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"        String message \u003d ListCommand.MESSAGE_EMPTY_INGREDIENT_LIST;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientList, null), message);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"JoshHDs":32}},{"path":"src/test/java/expiryeliminator/commands/ListIngredientsExpiredCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"public class ListIngredientsExpiredCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"    public void listIngredientsExpiredCommand_sampleIngredientList_expectExpiredIngredientString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"        IngredientList ingredientList \u003d TestUtil.generateIngredientList();","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientList !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new ListIngredientsExpiredCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"        String message \u003d  String.format(ListIngredientsExpiredCommand.MESSAGE_SHOW_WHOLE_LIST,","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"                ingredientList.findExpiredIngredients());","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientList, null), message);","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"JoshHDs":21}},{"path":"src/test/java/expiryeliminator/commands/ListIngredientsExpiringCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"public class ListIngredientsExpiringCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"    public void listIngredientsExpiringCommand_sampleIngredientList_expectExpiringIngredientString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"        IngredientList ingredientList \u003d TestUtil.generateIngredientList();","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientList !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new ListIngredientExpiringCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"        String message \u003d  String.format(ListIngredientExpiringCommand.MESSAGE_SHOW_WHOLE_LIST,","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"                ingredientList.findExpiringIngredients());","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientList, null), message);","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"JoshHDs":23}},{"path":"src/test/java/expiryeliminator/commands/ListRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KairuiHu"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"KairuiHu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"class ListRecipeCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"    public void listRecipeCommand_sampleRecipeList_expectLIstString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"        RecipeList recipeList \u003d TestUtil.generateRecipeList();","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"        assert recipeList !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"        Command command \u003d new ListRecipeCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"        String message \u003d String.format(ListRecipeCommand.MESSAGE_RECIPE_LIST, recipeList.getWholeRecipeList(), 1);","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"        assertEquals(command.execute(null, recipeList), message);","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"KairuiHu":19}},{"path":"src/test/java/expiryeliminator/commands/ViewIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.Ingredient;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"public class ViewIngredientCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    public void viewIngredientCommand_sampleIngredientList_expectRedAppleString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"        IngredientList ingredientList \u003d TestUtil.generateIngredientList();","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"        assert ingredientList !\u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"        Command command \u003d new ViewIngredientCommand(\"Red Apple\");","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"        LocalDate pastDate \u003d LocalDate.of(2021,10,8);","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"        Ingredient ingredient \u003d new Ingredient(\"Red Apple\", 1,pastDate);","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"        String message \u003d  String.format(ViewIngredientCommand.MESSAGE_SHOW_INGREDIENT, ingredient);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"        assertEquals(command.execute(ingredientList, null), message);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":4,"JoshHDs":22}},{"path":"src/test/java/expiryeliminator/commands/ViewRecipeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"KairuiHu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"KairuiHu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"public class ViewRecipeCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"KairuiHu"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"KairuiHu"},"content":"    public void viewRecipeCommand_noMatchingRecipeName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"KairuiHu"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeList();","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"KairuiHu"},"content":"        Command command \u003d new ViewRecipeCommand(TestUtil.RANDOM_INPUT_RECIPE_NAME);","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"KairuiHu"},"content":"        String errorMessage \u003d ViewRecipeCommand.MESSAGE_RECIPE_NOT_FOUND;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"KairuiHu"},"content":"        assertEquals(command.execute(null, recipes), errorMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"KairuiHu"},"content":"    public void viewRecipeCommand_hasMatchingRecipeName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"KairuiHu"},"content":"        RecipeList recipes \u003d TestUtil.generateRecipeList();","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"KairuiHu"},"content":"        Command command \u003d new ViewRecipeCommand(TestUtil.EXAMPLE_RECIPE_NAME);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"KairuiHu"},"content":"        String confirmMessage \u003d String.format(ViewRecipeCommand.MESSAGE_SHOW_RECIPE, TestUtil.generateRecipe());","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"KairuiHu"},"content":"        assertEquals(command.execute(null, recipes), confirmMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"KairuiHu"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"KairuiHu":22,"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/common/UtilsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"public class UtilsTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"    public void toTitleCase_lowercaseString_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Lorem Ipsum Dolor Sit Amet\", Utils.toTitleCase(\"lorem ipsum dolor sit amet\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Hello World\", Utils.toTitleCase(\"hello world\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Abc\", Utils.toTitleCase(\"abc\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    public void toTitleCase_uppercaseString_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Lorem Ipsum Dolor Sit Amet\", Utils.toTitleCase(\"LOREM IPSUM DOLOR SIT AMET\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Hello World\", Utils.toTitleCase(\"HELLO WORLD\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Abc\", Utils.toTitleCase(\"ABC\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    public void toTitleCase_titleCaseString_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Lorem Ipsum Dolor Sit Amet\", Utils.toTitleCase(\"Lorem Ipsum Dolor Sit Amet\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Hello World\", Utils.toTitleCase(\"Hello World\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Abc\", Utils.toTitleCase(\"Abc\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"    public void toTitleCase_messyCaseString_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Lorem Ipsum Dolor Sit Amet\", Utils.toTitleCase(\"lOrEm iPsUm dOlOr sIt aMeT\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Hello World\", Utils.toTitleCase(\"hElLo wOrLd\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Abc\", Utils.toTitleCase(\"aBc\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"    public void toTitleCase_stringWithSpaces_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Lorem Ipsum Dolor Sit Amet\",","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"                Utils.toTitleCase(\"   Lorem   Ipsum   Dolor   Sit   Amet   \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Hello World\", Utils.toTitleCase(\"   Hello   World   \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"Abc\", Utils.toTitleCase(\"   Abc   \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"    public void toTitleCase_emptyString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"        assertEquals(\"\", Utils.toTitleCase(\"\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"bernardboey":44,"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/data/IngredientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"public class IngredientListTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/data/RecipeListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.util.TestUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"public class RecipeListTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    public void add_correctRecipeInput_correctRecipe() {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"        Recipe recipe \u003d new Recipe(TestUtil.EXAMPLE_RECIPE_NAME, TestUtil.generateIngredientListForRecipe());","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"            recipes.add(recipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Recipe not added.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(recipes.size(), 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    public void add_duplicateRecipeName_ExceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"        Recipe recipe \u003d new Recipe(TestUtil.EXAMPLE_RECIPE_NAME, TestUtil.generateIngredientListForRecipe());","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"            recipes.add(recipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"            Recipe duplicateRecipe \u003d new Recipe(TestUtil.EXAMPLE_RECIPE_NAME,","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"                    TestUtil.generateIngredientListForRecipe());","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"            assertThrows(DuplicateDataException.class, () -\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"                recipes.add(duplicateRecipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"            });","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Recipe not added.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"    public void remove_recipeNameNotInList_ExceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"        Recipe recipe \u003d new Recipe(TestUtil.EXAMPLE_RECIPE_NAME, TestUtil.generateIngredientListForRecipe());","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"            recipes.add(recipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"            assertThrows(NotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"                recipes.remove(\"Duck\");","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"            });","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Recipe not added.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"    public void remove_recipeNameInList_recipeRemoved() {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"        Recipe recipe \u003d new Recipe(TestUtil.EXAMPLE_RECIPE_NAME, TestUtil.generateIngredientListForRecipe());","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"        RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"            recipes.add(recipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"            recipes.remove(TestUtil.EXAMPLE_RECIPE_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"            assertEquals(recipes.size(), 0);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Recipe not added.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":67}},{"path":"src/test/java/expiryeliminator/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import static expiryeliminator.parser.Parser.parseCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.AddRecipeCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.DeleteRecipeCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"class ParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareAddRecipe_incorrectFormats_ErrorMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"        String[] tests \u003d {\"add recipe r/chicken soup i/chicken q/\",","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe r/chicken soup i/ q/1\",","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe r/chicken soup\",","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe r/Apple Pie\",","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe i/Red Apple q/4 i/Green Apple q/4\"};","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"        for (String test : tests) {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"            assertEquals(parseCommand(test).execute(null, null),","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"                    String.format(Parser.MESSAGE_INVALID_COMMAND_FORMAT, AddRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareAddRecipe_quantityNotANumber_ErrorMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"        String test \u003d \"add recipe r/Apple Pie i/Red Apple q/4 i/Green Apple q/four\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"        assertEquals(String.format(Parser.MESSAGE_INVALID_ARGUMENT_FORMAT, \"Quantity must be a valid number.\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"                parseCommand(test).execute(null, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareAddRecipe_missingQuantityOrIngredient_ErrorMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"        String[] tests \u003d {\"add recipe r/chicken soup i/chicken q/1 i/salt\",","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe r/chicken soup i/chicken q/1 q/20\",","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe r/Apple Pie i/Red Apple q/4 i/Green Apple\",","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"                          \"add recipe r/Apple Pie i/Red Apple q/4 q/4\"};","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"        for (String test : tests) {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"            assertEquals(\"Should have same number of ingredient names and quantities\",","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"                    parseCommand(test).execute(null, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareAddRecipe_correctInput_AddRecipeCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"        String test \u003d \"add recipe r/Chicken Soup i/chicken q/1 i/salt q/20\";","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"        assertTrue(parseCommand(test) instanceof AddRecipeCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareAddRecipe_ingredientWithZeroQuantity_ErrorMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"        String test \u003d \"add recipe r/Chicken Soup i/chicken q/0 i/salt q/20\";","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(\"Quantity of ingredients for recipe cannot be zero.\",","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"                parseCommand(test).execute(null, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareDeleteRecipe_correctInput_DeleteRecipeCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"        String test \u003d \"delete recipe r/Chicken Soup\";","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"        assertTrue(parseCommand(test) instanceof DeleteRecipeCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"    public void prepareDeleteRecipe_incorrectFormat_ErrorMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"        String test \u003d \"delete recipe r/\";","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"        assertEquals(parseCommand(test).execute(null, null),","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"bernardboey"},"content":"                String.format(Parser.MESSAGE_INVALID_COMMAND_FORMAT, DeleteRecipeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"bernardboey":8,"vincentlauhl":64}},{"path":"src/test/java/expiryeliminator/ui/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"public class UiTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"vincentlauhl":4}},{"path":"src/test/java/expiryeliminator/util/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package expiryeliminator.util;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.Ingredient;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.Recipe;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.RecipeList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"public class TestUtil {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    public static final String EXAMPLE_RECIPE_NAME \u003d \"Chicken Soup\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"KairuiHu"},"content":"    public static final String RANDOM_INPUT_RECIPE_NAME \u003d \"Foo\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    public static IngredientList generateIngredientListForRecipe() {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"        Ingredient firstIngredient \u003d new Ingredient(\"Chicken\", 1,null);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"        Ingredient secondIngredient \u003d new Ingredient(\"Salt\", 20,null);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"        IngredientList ingredientsForRecipe \u003d new IngredientList();","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"            ingredientsForRecipe.add(firstIngredient);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"            ingredientsForRecipe.add(secondIngredient);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"            return ingredientsForRecipe;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Recipe should be valid by definition\");","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"            return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"    public static Recipe generateRecipe() {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"        return new Recipe(\"Chicken Soup\", generateIngredientListForRecipe());","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"    public static RecipeList generateRecipeList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"            Recipe recipe \u003d generateRecipe();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"            RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"            recipes.add(recipe);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"            return recipes;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"            fail(\"Recipe should be valid by definition\");","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"            return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"JoshHDs"},"content":"    public static IngredientList generateIngredientList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"JoshHDs"},"content":"        LocalDate pastDate \u003d LocalDate.of(2021,10,8);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"JoshHDs"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"JoshHDs"},"content":"        LocalDate currentDatePlusThreeDays \u003d currentDate.plus(3, ChronoUnit.DAYS);","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"JoshHDs"},"content":"        LocalDate currentDatePlusThreeWeeks \u003d currentDate.plus(3, ChronoUnit.WEEKS);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"JoshHDs"},"content":"        //expired","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"JoshHDs"},"content":"        Ingredient firstIngredient \u003d new Ingredient(\"Red Apple\", 1,pastDate);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"JoshHDs"},"content":"        //expiring","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"JoshHDs"},"content":"        Ingredient secondIngredient \u003d new Ingredient(\"Blue Apple\", 2,currentDatePlusThreeDays);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"JoshHDs"},"content":"        //fresh","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"JoshHDs"},"content":"        Ingredient thirdIngredient \u003d new Ingredient(\"Green Apple\", 3,currentDatePlusThreeWeeks);","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"JoshHDs"},"content":"        IngredientList ingredientList \u003d new IngredientList();","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"JoshHDs"},"content":"            ingredientList.add(firstIngredient);","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"JoshHDs"},"content":"            ingredientList.add(secondIngredient);","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"JoshHDs"},"content":"            ingredientList.add(thirdIngredient);","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"JoshHDs"},"content":"            return ingredientList;","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"JoshHDs"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"JoshHDs"},"content":"            fail(\"Ingredient List should be valid by definition\");","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"JoshHDs"},"content":"            return null;","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"JoshHDs"},"content":"    public static IngredientList generateEmptyIngredientList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"JoshHDs"},"content":"        IngredientList ingredientList \u003d new IngredientList();","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"JoshHDs"},"content":"        return ingredientList;","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"KairuiHu":2,"vincentlauhl":44,"JoshHDs":34}}]
