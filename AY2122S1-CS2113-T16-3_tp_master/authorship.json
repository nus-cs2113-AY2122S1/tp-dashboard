[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"# Expiry Eliminator","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"This is a project based on Duke, which is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may_ have to set the Project language level field to the SDK default option.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/expiryeliminator/ExpiryEliminator.java` file, right-click it, and choose `Run ExpiryEliminator.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"* A skeleton JUnit test (`src/test/java/expiryeliminator/ExipiryEliminatorTest.java`) is provided with this project template. ","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"bernardboey":4,"-":61}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"    mainClassName \u003d \"expiryeliminator.ExpiryEliminator\"","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bernardboey":1,"-":45}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Bernard Boey | [Github](https://github.com/bernardboey) | [Portfolio](docs/team/bernardboey.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Joshua Dass | [Github](https://github.com/JoshHDs) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Vincent Lau Han Leong | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"KairuiHu"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kairui | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"KairuiHu"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"bernardboey":1,"KairuiHu":3,"vincentlauhl":1,"-":4,"JoshHDs":1}},{"path":"docs/team/bernardboey.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"# Bernard Boey - Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"## Overview","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"### Summary of Contributions","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"bernardboey":6}},{"path":"src/main/java/expiryeliminator/ExpiryEliminator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.parser.Parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":" * Entry point of the ExpiryEliminator application.","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":" * Initialises the application and starts the interaction with the user.","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"public class ExpiryEliminator {","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    private static Ui ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    private static IngredientList ingredients;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"     * Initialises the ExpiryEliminator application.","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"    public ExpiryEliminator() {","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"        ingredients \u003d new IngredientList();","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    //@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/ui/Ui.java","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Runs the program.","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void run() {","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ui.showGreeting();","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            final String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            final Command command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            final String feedback \u003d command.execute(ingredients);","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            ui.showToUser(feedback);","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //@author","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Main entry-point for the ExpiryEliminator application.","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        new ExpiryEliminator().run();","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bernardboey":19,"-":31}},{"path":"src/main/java/expiryeliminator/commands/AddIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.Ingredient;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":" * Adds an ingredient, together with its associated quantity and expiry date.","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"public class AddIngredientCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_ADDED \u003d \"I\u0027ve added this ingredient:\\n\" + \"%1$s\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"            + \"Now you have %2$s ingredient(s)\";","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    private static final String MESSAGE_INGREDIENT_ALREADY_EXISTS \u003d \"Unable to add ingredient: %1$s\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"            + \"You already have it in your list\";","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"    private final Ingredient ingredient;","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"    public AddIngredientCommand(String name, int quantity, String expiryDate) {","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"        ingredient \u003d new Ingredient(name, quantity, expiryDate);","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"    public String execute(IngredientList ingredients) {","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"            ingredients.add(ingredient);","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"        } catch (DuplicateDataException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"            return String.format(MESSAGE_INGREDIENT_ALREADY_EXISTS, ingredient.getName());","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"        return String.format(MESSAGE_INGREDIENT_ADDED, ingredient, ingredients.size());","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":34}},{"path":"src/main/java/expiryeliminator/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/commands/ByeCommand.java","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /** Unique word associated with the command. */","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FAREWELL \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String execute(IngredientList ingredientList) {","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return MESSAGE_FAREWELL;","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":2,"-":26}},{"path":"src/main/java/expiryeliminator/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/commands/Command.java","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents an executable command.","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Executes the appropriate actions.","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param ingredientList Ingredient list.","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @return Feedback about what was executed.","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public abstract String execute(IngredientList ingredientList);","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return {@code true} if and only if the command is an exit command; {@code false} otherwise.","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":2,"-":28}},{"path":"src/main/java/expiryeliminator/commands/IncorrectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/commands/IncorrectCommand.java","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import expiryeliminator.data.IngredientList;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents an incorrect command. Upon execution, produces some feedback to the user.","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public IncorrectCommand(String feedbackToUser) {","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String execute(IngredientList ingredientList) {","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":2,"-":25}},{"path":"src/main/java/expiryeliminator/data/Ingredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":" * Represents an ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"public class Ingredient {","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"    private final String name;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"    private final int quantity;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"    // TODO(bernardboey): Change to LocalDate and make sure to validate.","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"    private final String expiryDate;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"     * Initialises an ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     * @param name The name of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"     * @param quantity The quantity of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"     * @param expiryDate The expiry date of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"    public Ingredient(String name, int quantity, String expiryDate) {","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"     * Returns the name of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"     * @return The name of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"    public String getName() {","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"        return name;","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"     * Returns the quantity of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"     * @return The quantity of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"    public int getQuantity() {","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"        return quantity;","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"     * Returns the expiry date of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"     * @return The expiry date of the ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"    public String getExpiryDate() {","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"        return expiryDate;","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"bernardboey"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"bernardboey"},"content":"    public String toString() {","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"bernardboey"},"content":"        return name + \" (qty: \" + quantity + \") (expiry: \" + expiryDate + \")\";","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":56}},{"path":"src/main/java/expiryeliminator/data/IngredientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.data.exception.DuplicateDataException;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":" * Represents the ingredient list and contains methods to add and remove ingredients.","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"public class IngredientList {","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"    private final HashMap\u003cString, Ingredient\u003e ingredients;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":"     * Constructs IngredientList object with no tasks.","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"bernardboey"},"content":"    public IngredientList() {","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"bernardboey"},"content":"        ingredients \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"bernardboey"},"content":"     * Adds ingredient to the ingredient list.","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"bernardboey"},"content":"     * @param ingredient Ingredient to be added.","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"bernardboey"},"content":"     * @throws DuplicateDataException If the ingredient already exists.","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"bernardboey"},"content":"    public void add(Ingredient ingredient) throws DuplicateDataException {","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"bernardboey"},"content":"        if (contains(ingredient)) {","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"bernardboey"},"content":"            throw new DuplicateDataException();","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"bernardboey"},"content":"        ingredients.put(ingredient.getName(), ingredient);","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"bernardboey"},"content":"     * Returns {@code true} if the ingredient list contains the specified ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"bernardboey"},"content":"     * @param ingredient Ingredient whose presence in this list is to be tested.","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"bernardboey"},"content":"     * @return {@code true} if the ingredient list contains the specified ingredient.","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"bernardboey"},"content":"    public boolean contains(Ingredient ingredient) {","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"bernardboey"},"content":"        return ingredients.containsKey(ingredient.getName());","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"bernardboey"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"bernardboey"},"content":"     * Returns the number of ingredients in the ingredient list.","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"bernardboey"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"bernardboey"},"content":"     * @return The number of ingredients in the ingredient list.","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"bernardboey"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"bernardboey"},"content":"    public int size() {","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"bernardboey"},"content":"        return ingredients.size();","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":51}},{"path":"src/main/java/expiryeliminator/data/exception/DuplicateDataException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.data.exception;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/data/exception/DuplicateDataException.java","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/** Signals an error cause by duplicate data where there should be none. */","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class DuplicateDataException extends Exception {","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":2,"-":9}},{"path":"src/main/java/expiryeliminator/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"bernardboey"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.AddIngredientCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.ByeCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"bernardboey"},"content":"import expiryeliminator.commands.IncorrectCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"bernardboey"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"bernardboey"},"content":" * Parses user input.","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"bernardboey"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"bernardboey"},"content":"public class Parser {","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    //@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/parser/Parser.java","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** Used for initial separation of command word and args. */","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"^(?\u003ccommand\u003e[^/]+)(?\u003cargs\u003e .*)?$\");","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Used for separation of each prefix and argument.","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * E.g. this matches \"/a aaaaa aaaa\"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Pattern ARGS_FORMAT \u003d Pattern.compile(\"\\\\w+/([^/\\\\s]+( +|$))+\");","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String PREFIX_INGREDIENT \u003d \"i\";","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String PREFIX_QUANTITY \u003d \"q\";","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String PREFIX_EXPIRY \u003d \"e\";","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format!\";","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_UNRECOGNISED_COMMAND \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_QUANTITY \u003d \"The specified quantity is not a valid integer.\";","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input as a command.","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput Input command together with any arguments.","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return Command that corresponds to the user input, if valid.","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Command parseCommand(String userInput) {","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput);","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new RuntimeException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String command \u003d matcher.group(\"command\");","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String args \u003d matcher.group(\"args\");","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // May not contain all arguments (e.g. if user did not provide).","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final HashMap\u003cString, String\u003e prefixesToArgs \u003d parseArgs(args);","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (command) {","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return prepareAddIngredient(prefixesToArgs);","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new IncorrectCommand(MESSAGE_UNRECOGNISED_COMMAND);","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"bernardboey"},"content":"    private static HashMap\u003cString, String\u003e parseArgs(String args) {","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"bernardboey"},"content":"        // TODO(bernardboey): Change the way this is done to allow for multiple of the same tags.","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"bernardboey"},"content":"        // Separate to different class and feed in the argument prefixes that are expected when parsing?","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"bernardboey"},"content":"        args \u003d args \u003d\u003d null ? \"\" : args.trim();","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"bernardboey"},"content":"        final HashMap\u003cString, String\u003e prefixesToArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"bernardboey"},"content":"        final Matcher matcher \u003d ARGS_FORMAT.matcher(args);","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"bernardboey"},"content":"        while (matcher.find()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"bernardboey"},"content":"            final String match \u003d matcher.group();","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"bernardboey"},"content":"            final String[] prefixAndArg \u003d match.split(\"/\");","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"bernardboey"},"content":"            final String prefix \u003d prefixAndArg[0];","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"bernardboey"},"content":"            final String arg \u003d prefixAndArg[1].trim();","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"bernardboey"},"content":"            prefixesToArgs.put(prefix, arg);","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"bernardboey"},"content":"        return prefixesToArgs;","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"bernardboey"},"content":"    private static Command prepareAddIngredient(HashMap\u003cString, String\u003e prefixesToArgs) {","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"bernardboey"},"content":"        final String ingredient \u003d prefixesToArgs.get(PREFIX_INGREDIENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"bernardboey"},"content":"        final String quantity \u003d prefixesToArgs.get(PREFIX_QUANTITY);","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"bernardboey"},"content":"        final String expiry \u003d prefixesToArgs.get(PREFIX_EXPIRY);","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"bernardboey"},"content":"        if (ingredient \u003d\u003d null || ingredient.isBlank()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(\"Missing ingredient\");","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"bernardboey"},"content":"        if (quantity \u003d\u003d null || quantity.isBlank()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(\"Missing quantity\");","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"bernardboey"},"content":"        if (expiry \u003d\u003d null || expiry.isBlank()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(\"Missing expiry\");","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":94,"author":{"gitId":"bernardboey"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"bernardboey"},"content":"            return new AddIngredientCommand(ingredient, parseQuantity(quantity), expiry);","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"bernardboey"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"bernardboey"},"content":"            return new IncorrectCommand(MESSAGE_INVALID_QUANTITY);","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"bernardboey"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":99,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":101,"author":{"gitId":"bernardboey"},"content":"    private static int parseQuantity(String quantityString) throws NumberFormatException {","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"bernardboey"},"content":"        return Integer.parseInt(quantityString);","lastModifiedDate":"2021-10-03"},{"lineNumber":103,"author":{"gitId":"bernardboey"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":104,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":57,"-":47}},{"path":"src/main/java/expiryeliminator/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator.ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"bernardboey"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"bernardboey"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author bernardboey-reused","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// Reused from https://github.com/bernardboey/ip/blob/master/src/main/java/duke/ui/Ui.java","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Text UI of the application.","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Ui {","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String INDENTED_HORIZONTAL_LINE \u003d \" \".repeat(4) + \"_\".repeat(60);","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String LINE_PREFIX \u003d \" \".repeat(5);","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** Platform independent line separator. */","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_GREETING \u003d \"Welcome to Expiry Eliminator. What can I do for you?\";","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Reads input commands from the user.","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Ignores blank lines and trims input command.","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return Trimmed input command.","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String line \u003d SCANNER.nextLine();","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // Ignore blank lines","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        while (line.trim().isEmpty()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            line \u003d SCANNER.nextLine();","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return line.trim();","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Prints out the specified text formatted as a block.","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Horizontal lines will be printed before and after the","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * specified text, and the text will be indented.","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param text Text to be printed out.","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void showToUser(String text) {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        System.out.println(INDENTED_HORIZONTAL_LINE);","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        System.out.println(addPrefixAndReplaceNewline(text));","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        System.out.println(INDENTED_HORIZONTAL_LINE);","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        System.out.println();","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Prints out greeting message.","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void showGreeting() {","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showToUser(MESSAGE_GREETING);","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Adds {@link #LINE_PREFIX} to the start of each line of {@code text}, and replaces newline characters with the","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * platform independent line separator ({@link #LINE_SEPARATOR}).","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param text Text to be processed.","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return Processed text.","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private String addPrefixAndReplaceNewline(String text) {","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String[] lines \u003d text.split(\"\\n\");","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            lines[i] \u003d LINE_PREFIX + lines[i];","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return String.join(LINE_SEPARATOR, lines);","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"bernardboey"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"bernardboey":5,"-":67}},{"path":"src/test/java/expiryeliminator/ExpiryEliminatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardboey"},"content":"package expiryeliminator;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"bernardboey"},"content":"class ExpiryEliminatorTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"bernardboey":2,"-":10}}]
