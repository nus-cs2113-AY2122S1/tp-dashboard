[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"brendanlsz"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"brendanlsz":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Keng Jit | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"brendanlsz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Brendan Lau | [Github](https://github.com/brendanlsz) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"praj-bellakka"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Prajwal Bellakka | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"brendanlsz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Cheng Siyuan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Adeline Boo | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kengjit":1,"brendanlsz":2,"-":4,"aaapppsss":1,"praj-bellakka":1}},{"path":"docs/AddFoodEntry.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"autonumber","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"-\u003e \":AddFoodEntryCommand\": execute()","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"activate \":AddFoodEntryCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"alt Food does not exist in database","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"    create \":Food\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"    \":AddFoodEntryCommand\" -\u003e \":Food\" : new","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"    activate \":Food\"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    return customFood:Food","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"    \":AddFoodEntryCommand\" -\u003e \":EntryDatabase\" : addEntry","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"    activate \":EntryDatabase\"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"    return","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"    \":AddFoodEntryCommand\" -\u003e \":FoodDatabase\" : addFood","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"    activate \":FoodDatabase\"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"    return","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"else Food exists in database","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"    \":AddFoodEntryCommand\" -\u003e \":EntryDatabase\" : addEntry","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"    activate \":EntryDatabase\"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"    return","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"end","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"return output","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kengjit":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"siyuancheng178"},"content":"\u003ch1\u003eDeveloper Guide\u003c/h1\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"siyuancheng178"},"content":"\u003ch2\u003eContent \u003c/h2\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"siyuancheng178"},"content":"\u003col\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e\u003ca href\u003d\"#Product-Scope\"\u003eProduct Scope\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e\u003ca href\u003d\"#quick-start\"\u003eQuick Start\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e\u003ca href\u003d\"user-story\"\u003e User Story\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e\u003ca href\u003d\"#Architecture\"\u003eApplication Architecture \u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e\u003ca href\u003d\"#Implementation\"\u003eImplementation \u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e\u003ca href\u003d\"#instruction-for-manual-testing\"\u003eInstruction for manual testing\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e\u003ca href\u003d\"#NF-Requirement\"\u003eNon-functional Requirement \u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"siyuancheng178"},"content":"\u003c/ol\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"siyuancheng178"},"content":"\u003ch2\u003e Acknowledgements \u003c/h2\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"siyuancheng178"},"content":"\u003ch2 id\u003d\"Product-Scope\"\u003eProduct scope\u003c/h2\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"siyuancheng178"},"content":"\u003ch3\u003eTarget user profile\u003c/h3\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"siyuancheng178"},"content":"NUS Computer Engineering students reside in UTown going on diet.","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"siyuancheng178"},"content":"\u003ch3\u003eValue proposition\u003c/h3\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"siyuancheng178"},"content":"Help user to keep track of their daily calorie intake, and manage their diet wisely.","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"siyuancheng178"},"content":"\u003ch2 id\u003d\"quick-start\"\u003eQuick Start\u003c/h2\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"siyuancheng178"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"siyuancheng178"},"content":"2. Download the latest fitnus.jar from here (no link for now).","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"siyuancheng178"},"content":"3. Copy the file to the folder you want to use as the home folder for your WellNUS Tracker","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"siyuancheng178"},"content":"4. Type the following command in your terminal to run this program: java -jar fitnus.jar (You should change directory to where the wellnus.jar file is located or provide the absolute path of wellnus.jar).","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"siyuancheng178"},"content":"   \u003cbr/\u003eSome example commands you can try:","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"siyuancheng178"},"content":"- `add Chicken Rice /cal 607`: Adds an entry of Chicken Rice with 607 calories to your food tracker and food database.","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"siyuancheng178"},"content":"- `list food`: Lists all foods in database","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"siyuancheng178"},"content":"- `list intake /DAY`: Lists all entries in the food tracker for the day.","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"siyuancheng178"},"content":"- `exit`: Exits the app.","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"siyuancheng178"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"siyuancheng178"},"content":"  Refer to the User Guide (no link for now) for details of each command.","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"siyuancheng178"},"content":"The entry point of the app is the `FitNUS` class, where the application is run and all other components are initialised and used. The primary components of the app are listed below:","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"siyuancheng178"},"content":"- `Command`: The abstract class that all other command classes inherit from","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"siyuancheng178"},"content":"- `EntryDatabase`: For handling all functionality regarding food tracker entries.","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"siyuancheng178"},"content":"- `FoodDatabase`: For handling all functionality regarding food database entries.","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"siyuancheng178"},"content":"- `Parser`: For parsing user input.","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"siyuancheng178"},"content":"- `Storage`: For handling backend storage.","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"siyuancheng178"},"content":"- `Ui`: For displaying information to the user.","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"siyuancheng178"},"content":"- `User`: For handling all functionality regarding personalisation of user experience.","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"siyuancheng178"},"content":"\u003ch2 id\u003d\"#user-story\"\u003e User Stories\u003c/h2\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"siyuancheng178"},"content":"\u003ch2 id\u003d\"Architecture\"\u003e Architecture \u003c/h2\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"siyuancheng178"},"content":"![Overall Architecture Diagram](diagrams/overall%20architecture.png) \u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"siyuancheng178"},"content":"The Architecture Diagram given above explains the high-level design of the App. \u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"siyuancheng178"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"siyuancheng178"},"content":"\u003ch3\u003e Main components of the architecture \u003c/h3\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"siyuancheng178"},"content":"\u003ch4\u003ecommand component\u003c/h4\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"siyuancheng178"},"content":"![command class diagram](diagrams/command%20class%20diagram.drawio.png) \u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"siyuancheng178"},"content":"- Different kinds of commands inherit from abstract class command, and inside which there is an abstract method called `execute()`","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"siyuancheng178"},"content":"- Subclasses are instantiated through parser after parsing the user\u0027s input, and each command has its own `execute()` command to perform its task.","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"siyuancheng178"},"content":"\u003ch4\u003etracker\u003c/h4\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"siyuancheng178"},"content":"![tracker class diagram](diagrams/tracker%20class%20diagram.png) \u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"siyuancheng178"},"content":"\u003ch4\u003edatabase\u003c/h4\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"siyuancheng178"},"content":"{TO BE ADDED HERE}","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"siyuancheng178"},"content":"\u003ch2\u003e Glossary\u003c/h2\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"siyuancheng178"},"content":"*glossary item* - Definition","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"siyuancheng178"},"content":"\u003ch2\u003eAdd Food Entry Feature\u003c/h2\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"aaapppsss"},"content":"The add food entry mechanism is facilitated by \u003ccode\u003eAddFoodEntryCommand\u003c/code\u003e.","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"aaapppsss"},"content":"It extends \u003ccode\u003eCommand\u003c/code\u003e and stores the data internally into \u003ccode\u003eEntryDatabase\u003c/code\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"aaapppsss"},"content":"and \u003ccode\u003eFoodDatabase\u003c/code\u003e.","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"aaapppsss"},"content":"Additionally, it implements the following operations:","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"aaapppsss"},"content":"- \u003ccode\u003eEntryDatabase#addEntry(Entry)\u003c/code\u003e -- Adds a new entry into the entry database","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"aaapppsss"},"content":"- \u003ccode\u003eFoodDatabase#addFood\u003c/code\u003e -- Adds a new food into the food database","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"aaapppsss"},"content":"![AddFoodEntrySeqDiagram](AddFoodEntry.png \"AddFoodEntry Sequence Diagram\")","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"siyuancheng178"},"content":"\u003ch2 id\u003d\"Implementation\"\u003e Implementation \u003c/h2\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"siyuancheng178"},"content":"\u003col\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e\u003ch3\u003eWeight Tracker\u003c/h3\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"siyuancheng178"},"content":"The weight tracker exists as an ArrayList called \u003ccode\u003eWeightProgressEntries\u003c/code\u003e within the User class. The ArrayList contains objects of class \u003ccode\u003eWeightProgressEntry\u003c/code\u003e.\u003c/li\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e\u003ch3\u003eSetWeightCommand Component\u003c/h3\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"siyuancheng178"},"content":"The entry point for setting or updating weight. The \u003ccode\u003eexecute\u003c/code\u003e method in this object calls \u003ccode\u003eupdateWeightAndWeightTracker\u003c/code\u003e method in the User object initialised in the main file in order to update the user\u0027s weight and weight progress.\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e\u003ch3\u003eStorage Component\u003c/h3\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"siyuancheng178"},"content":"Weight progress entries are stored in a text file in the following format: \u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"siyuancheng178"},"content":"\u003ccode\u003eWEIGHT | DATE(YYYY-MM-DD)\u003c/code\u003e Example: \u003ccode\u003e100 | 2021-03-01\u003c/code\u003e\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"siyuancheng178"},"content":"The weight progress storage file is updated every time the user sets or updates their weight for the day, as all storage files are updated at every iteration of the main loop using the \u003ccode\u003esaveFitNus\u003c/code\u003e method.\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"siyuancheng178"},"content":"On startup, the storage file is  parsed and the corresponding WeightProgressEntry objects are created and loaded into the ArrayList.\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e\u003ch3\u003eUser Component\u003c/h3\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"siyuancheng178"},"content":"\u003cdiv\u003eHow the User component works in the context of the weight tracker: \u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"siyuancheng178"},"content":"\u003col\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003eWhen the user inputs the weight setting command, User is called upon to execute the function to update the user\u0027s weight and weight tracker.\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003eIn all cases, the weight attribute of the initialised User object will be updated to the new weight inputted by the user.\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003eIf no weight progress entries were present in the storage text file, the tracker does not attempt to calculate the difference between the updated weight and the previous weight.\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003eIf the latest weight progress entry was recorded on the same day, that entry is updated with the new weight (that is, no new entry is added to the weight tracker). Otherwise, a new weight progress entry is created in the ArrayList with the current date and new weight.\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"siyuancheng178"},"content":"\u003c/ol\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"siyuancheng178"},"content":"\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"siyuancheng178"},"content":"\u003ch3\u003eView Diet Summary\u003c/h3\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"siyuancheng178"},"content":"The Summary class provides an overview of user\u0027s diet over the past week/month.","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"siyuancheng178"},"content":"\u003ch4\u003ecommand format\u003c/h4\u003e\u003ccode\u003esummary /week\u003c/code\u003e or \u003ccode\u003esummary /month\u003c/code\u003e \u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"siyuancheng178"},"content":"\u003ccode\u003eSummary\u003c/code\u003e class provides two methods \u003ccode\u003egenerateWeekSummaryReport()\u003c/code\u003e and \u003ccode\u003egenerateMonthSummaryReport()\u003c/code\u003e to give the user weekly/monthly report of their diets.\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"siyuancheng178"},"content":"\u003cul\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e \u003ccode\u003egenerateWeekSummaryReport()\u003c/code\u003e shows weekly calorie intake trend graph, average daily calorie intake, and the most/least frequently eaten food over past 7 days.\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e \u003ccode\u003egenerateMonthSummaryReport()\u003c/code\u003e shows average daily calorie intake, and the most/least frequently eaten food over this month.\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"siyuancheng178"},"content":"\u003c/ul\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"siyuancheng178"},"content":"\u003ch4\u003eUML Sequence Diagram\u003c/h4\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"siyuancheng178"},"content":"The following sequence diagram describes the operation of the \u003ccode\u003egenerateWeekSummary()\u003c/code\u003e.\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"siyuancheng178"},"content":"\u003cimg src\u003d\"diagrams/weekly-report.png\"/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"siyuancheng178"},"content":"\u003cbr/\u003eThe following sequence diagram describes the operation of \u003ccode\u003egenerateMonthSummary()\u003c/code\u003e.\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"siyuancheng178"},"content":"\u003cimg src\u003d\"diagrams/monthly-report.png\"/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"siyuancheng178"},"content":"\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"siyuancheng178"},"content":"\u003ch3\u003eStorage\u003c/h3\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"brendanlsz"},"content":"The Storage class reads and writes data to and from the text file.","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"siyuancheng178"},"content":"\u003ch4\u003eStorage format\u003c/h4\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"siyuancheng178"},"content":"\u003cdiv\u003e\u003cstrong\u003eEvery line in each text file represents one object / entry / item\u003c/strong\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"siyuancheng178"},"content":"\u003cul\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"siyuancheng178"},"content":"FoodDatabase:\u003ccode\u003eFOODNAME | CALORIE_VALUE\u003c/code\u003e \u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"siyuancheng178"},"content":"Example: \u003ccode\u003eNasi Lemak | 400\u003c/code\u003e \u0026nbsp; \u003ccode\u003eRamen | 600\u003c/code\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"siyuancheng178"},"content":"\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"siyuancheng178"},"content":"EntryDatabase:\u003ccode\u003eMEALTYPE | FOODNAME | CALORIE_VALUE | DATE\u003c/code\u003e \u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"siyuancheng178"},"content":"Example: \u003ccode\u003eDinner | Ramen | 500 | 2021-10-20\u003c/code\u003e \u0026nbsp; \u003ccode\u003eLunch | Fried rice | 600 | 2021-10-20\u003c/code\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"siyuancheng178"},"content":"\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"siyuancheng178"},"content":"User:\u003ccode\u003eCALORIE_GOAL | GENDER\u003c/code\u003e \u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"siyuancheng178"},"content":"Example: \u003ccode\u003e1000 | 0\u003c/code\u003e \u0026nbsp;","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"siyuancheng178"},"content":"\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"siyuancheng178"},"content":"User weight:\u003ccode\u003eWEIGHT | DATE\u003c/code\u003e \u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"siyuancheng178"},"content":"Example: \u003ccode\u003e60.0 | 2021-07-20\u003c/code\u003e \u0026nbsp; \u003ccode\u003e59.0 | 2021-08-20\u003c/code\u003e \u0026nbsp; \u003ccode\u003e58.0 | 2021-09-20\u003c/code\u003e \u0026nbsp; \u003ccode\u003e45.0 | 2021-10-21\u003c/code\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"siyuancheng178"},"content":"\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"siyuancheng178"},"content":"\u003c/ul\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"siyuancheng178"},"content":"\u003ch4\u003eImplementation\u003c/h4\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"siyuancheng178"},"content":"\u003col\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"siyuancheng178"},"content":"\u003cdiv\u003e\u003cstrong\u003eSaving to file\u003c/strong\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"siyuancheng178"},"content":"\u003ccode\u003eFoodDatabase\u003c/code\u003e, \u003ccode\u003eEntryDatabase\u003c/code\u003e, and \u003ccode\u003eUser\u003c/code\u003e classes each have a method to convert","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"siyuancheng178"},"content":"its data to String format. This String is then saved to the text file. \u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"siyuancheng178"},"content":"For instance, when saving the \u003ccode\u003eFoodDatabase\u003c/code\u003e data, \u003ccode\u003eStorage\u003c/code\u003e calls the \u003ccode\u003econvertDatabaseToString()\u003c/code\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"siyuancheng178"},"content":"method to obtain the String representation of all the data within the `FoodDatabase`. This String is then written to the text file.","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"siyuancheng178"},"content":"\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"siyuancheng178"},"content":"\u003cdiv\u003e\u003cstrong\u003eLoading from file \u003c/strong\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"siyuancheng178"},"content":"\u003ccode\u003eStorage\u003c/code\u003e makes use of the \u003ccode\u003eBufferedReader\u003c/code\u003e and \u003ccode\u003eFileInputStream\u003c/code\u003e provided  by \u003ccode\u003ejava.io\u003c/code\u003e to access ","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"siyuancheng178"},"content":"the contents of the storage text files. This is then passed to the respective objects for preloading. \u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"siyuancheng178"},"content":"For instance, when preloading the \u003ccode\u003eFoodDatabase\u003c/code\u003e data, \u003ccode\u003eStorage\u003c/code\u003e accesses the storage text file","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"siyuancheng178"},"content":"and passes the file contents to the \u003ccode\u003epreLoadDatabase()\u003c/code\u003e method in ,\u003ccode\u003eFoodDatabase\u003c/code\u003e which populates","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"siyuancheng178"},"content":"the ArrayList in \u003ccode\u003eFoodDatabase\u003c/code\u003e.","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"siyuancheng178"},"content":"\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"siyuancheng178"},"content":"\u003c/ol\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"siyuancheng178"},"content":"\u003ch4\u003eUML Sequence Diagram \u003c/h4\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"siyuancheng178"},"content":"The following sequence diagram describes the operation of the \u003ccode\u003esaveFoodDatabase()\u003c/code\u003e operation.\u003cbr/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"siyuancheng178"},"content":"\u003cimg src\u003d\"diagrams/StorageSequenceUML.PNG\"/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"siyuancheng178"},"content":"\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"siyuancheng178"},"content":"\u003ch3\u003eParser Component\u003c/h3\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"siyuancheng178"},"content":"\u003cdiv\u003eThe parser component makes use of the user input String from the \u003ccode\u003efitNus\u003c/code\u003e class to detect the type of \u003ccode\u003eCommand\u003c/code\u003e object called.","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"siyuancheng178"},"content":"It then returns a \u003ccode\u003eCommand\u003c/code\u003e object that represents the type of command called through the input.\u003c/div\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"siyuancheng178"},"content":"\u003cul\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003edetermines the type of \u003ccode\u003eCommand\u003c/code\u003e object and returns it.\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003ehandles input exceptions and returns relevant \u003ccode\u003eFitNusException\u003c/code\u003e command.\u003c/li\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"siyuancheng178"},"content":"\u003c/ul\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"siyuancheng178"},"content":"\u003ch4\u003eImplementation\u003c/h4\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"siyuancheng178"},"content":"\u003cul\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"siyuancheng178"},"content":"\u003cli\u003e\u003ch5\u003eIdentifying type of method called\u003c/h5\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"siyuancheng178"},"content":"The \u003ccode\u003eParser\u003c/code\u003e is invoked through the \u003ccode\u003eparseCommandType()\u003c/code\u003e method. The input is first split up by identifying a space character.","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"siyuancheng178"},"content":"If no space character is detected, and the \u003ccode\u003ehelp\u003c/code\u003e or \u003ccode\u003eexit\u003c/code\u003e method was not called, a \u003ccode\u003eFitNusException\u003c/code\u003e is thrown. The first string element is ","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"siyuancheng178"},"content":"then compared with default list of commands to determine the type of method called using if-else statements.","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"siyuancheng178"},"content":"\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ol\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"siyuancheng178"},"content":"\u003ch2 id\u003d\"instruction-for-manual-testing\"\u003e Instructions for manual testing\u003c/h2\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"siyuancheng178"},"content":"\u003ch2 id\u003d\"NF-Requirement\"\u003e Non-Functional Requirements \u003c/h2\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"siyuancheng178"},"content":"1. Data of users and foods should be stored and retrieved swiftly without delay, even for a long time user with very a big data set.","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"siyuancheng178"},"content":"2. User\u0027s and food\u0027s data should be kept safely, and it is crashed, the program should be able to detect it.","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"brendanlsz":11,"siyuancheng178":165,"-":28,"aaapppsss":8,"praj-bellakka":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"FitNUS Tracker is a desktop app for tracking daily food intake to keep a healthy lifestyle. ","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"It is based on a Command Line Interface (CLI) and has rich functionality in order to cater to the needs of potential users.","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"praj-bellakka"},"content":"Here is the list of sections we will be covering in this User Guide.","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"praj-bellakka"},"content":"- Quick Start","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"praj-bellakka"},"content":"- Features","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"  - Food Tracker","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"    - Adding food tracker entry: `add`","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"    - Editing existing food tracker entry: `edit`","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"    - Deleting food tracker entry: `remove /entry`","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"    - Listing tracker entries: `list /entry`","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"    - Searching for tracker entries with keyword: `find /entry`","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"  - Food Database","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"    - Deleting food from food database: `remove /food`","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"    - Searching for foods with keyword: `find /food`","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"    - Listing foods in food database: `list /food`","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"  - Weight Tracker","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"aaapppsss"},"content":"    - Recording weight: `weight /set`","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"    - Listing weight records: `list /weight`","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"  - Personalisation","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"aaapppsss"},"content":"    - Setting gender: `gender /set`","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"aaapppsss"},"content":"    - Setting height: `height /set`","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"aaapppsss"},"content":"    - Setting age: `age /set`","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"aaapppsss"},"content":"    - Setting calorie goal: `calorie /set`","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"aaapppsss"},"content":"    - Generate and set calorie goal: `calorie /generate`","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"aaapppsss"},"content":"  - Other","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"aaapppsss"},"content":"    - Viewing statistics: `summary`","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"aaapppsss"},"content":"    - Viewing help: `help`","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"aaapppsss"},"content":"    - Getting food recommendations: `suggest`","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"aaapppsss"},"content":"    - Exiting FitNUS: `exit`","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"aaapppsss"},"content":"- Command Summary","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"praj-bellakka"},"content":"---","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"praj-bellakka"},"content":"1. Ensure that you have Java 11 installed in your computer. ","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"praj-bellakka"},"content":"2. Download the latest version of `fitNus.jar` from [here](https://github.com/AY2122S1-CS2113T-W12-1/tp/releases/tag/V2.0).","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"praj-bellakka"},"content":"3. Copy the file to the folder you want to use as the home folder for your FitNUS Tracker.","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"praj-bellakka"},"content":"4. Type the following command in your terminal to run this program: ","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"praj-bellakka"},"content":"```java -jar fitnus.jar```","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"praj-bellakka"},"content":"5. If you have successfully run the programme, you should see the following message as follows:","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"praj-bellakka"},"content":"\u003e **⚠️ Notes about command format**","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"praj-bellakka"},"content":"\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"praj-bellakka"},"content":"\u003e - Words in **UPPER_CASE** are the parameters to be input by the user!","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"praj-bellakka"},"content":"\u003e  e.g. in `add /food NAME`, NAME is a parameter which can be substituted as `add /food burgers`.","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"praj-bellakka"},"content":"\u003e - Items in **[Square brackets]** are optional!","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"aaapppsss"},"content":"\u003e  e.g. `add [/MEALTYPE] FOOD_NAME` can be used as `add /lunch sandwiches` or `add sandwiches`.","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"aaapppsss"},"content":"### Food Tracker","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"aaapppsss"},"content":"#### Adding food tracker entry: `add`","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"kengjit"},"content":"Adds a food entry to the food tracker and prompts the user to fill in any additional information needed if an exact match to the user inputted food name was not found in the food database. ","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"praj-bellakka"},"content":"Format: `add [/MEALTYPE] FOOD_NAME`","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"praj-bellakka"},"content":"* The `MEALTYPE` can be of the following 4 types:","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"praj-bellakka"},"content":"  * `bfast` - to denote breakfast","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"praj-bellakka"},"content":"  * `lunch` - to denote lunch","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"praj-bellakka"},"content":"  * `dinner` - to denote dinner","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"praj-bellakka"},"content":"  * `snack` - to denote snacks","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"aaapppsss"},"content":"* If several matches ","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"praj-bellakka"},"content":"\u003e **⚠️ Notes about omitting `MEALTYPE`**","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"praj-bellakka"},"content":"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"praj-bellakka"},"content":"\u003e The `MEALTYPE` will be automatically added based on the current time if not explicitly specified based on the following criteria:","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"praj-bellakka"},"content":"\u003e- Breakfast: 6am to 10am","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"praj-bellakka"},"content":"\u003e- Lunch: 11am to 2pm","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"praj-bellakka"},"content":"\u003e- Dinner: 6pm to 9pm","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"praj-bellakka"},"content":"\u003e- Snack: Remaining time","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"praj-bellakka"},"content":"Examples of usage:","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"praj-bellakka"},"content":"`add /bfast chocolate rolls`","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"kengjit"},"content":"- Adds a tracker entry, \"chocolate rolls\", with type Breakfast,","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"aaapppsss"},"content":"#### Editing existing food tracker entry: `edit`","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"kengjit"},"content":"Edits an existing food entry\u0027s food information. FitNUS will search for FOOD_NAME in the food database ","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"kengjit"},"content":"and update the specified entry\u0027s food details accordingly.","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"kengjit"},"content":"Format: `edit INDEX_OF_ENTRY FOOD_NAME`","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"kengjit"},"content":"\u003e **⚠️ Notes about `INDEX_OF_ENTRY`**","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"kengjit"},"content":"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"kengjit"},"content":"\u003e INDEX_OF_ENTRY refers to the index of the entry shown when command `list /entry` is used.","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"kengjit"},"content":"`edit 2 fish n chips`","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"kengjit"},"content":"- Edits whatever food is in index 2 to \"fish n chips\"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"aaapppsss"},"content":"#### Deleting food tracker entry: `remove`","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"praj-bellakka"},"content":"Deletes a food entry from the food tracker.","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":109,"author":{"gitId":"praj-bellakka"},"content":"Format: `remove /entry INDEX_OF_FOOD`","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"praj-bellakka"},"content":"Example of usage:","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"praj-bellakka"},"content":"`remove /entry 2`","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"kengjit"},"content":"#### Listing tracker entries: `list`","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"kengjit"},"content":"Lists out all foods entered for a given timeframe.","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"kengjit"},"content":"Format: `list /entry [/TIMEFRAME]`","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"kengjit"},"content":"* The `TIMEFRAME` can be of the following 2 types:","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"kengjit"},"content":"  * `day` - to show entries in the current day","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"kengjit"},"content":"  * `week` - to show entries in the past week","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"kengjit"},"content":"\u003e **⚠️ Notes about omitting `TIMEFRAME`**","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"kengjit"},"content":"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"kengjit"},"content":"\u003e Command will list out **ALL** available food entries.","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"kengjit"},"content":"`list /entry /week`","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"kengjit"},"content":"- lists out all food entries logged in for the past week.","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"aaapppsss"},"content":"#### Searching for tracker entries with keyword: `find`","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"aaapppsss"},"content":"Finds all matching entries in the EntryDatabase based on the keyword you provided.","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":139,"author":{"gitId":"aaapppsss"},"content":"Format: `find /entry KEYWORD`","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"praj-bellakka"},"content":"Example of usage:","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"kengjit"},"content":"`find /entry rice`","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"kengjit"},"content":"- Prints out all food entries that contains \"rice\".","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"aaapppsss"},"content":"### Food Database","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"aaapppsss"},"content":"#### Deleting food from food database: `remove`","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"aaapppsss"},"content":"Deletes food from the food database.","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"aaapppsss"},"content":"Format: `remove /food INDEX_OF_FOOD`","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"aaapppsss"},"content":"Example of usage:","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"aaapppsss"},"content":"`remove /food 12`","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"kengjit"},"content":"- Removes the 12th food in the list of preset foods.","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"aaapppsss"},"content":"#### Searching for foods with keyword: `find`","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"aaapppsss"},"content":"Finds all matching food in the FoodDatabase based on the keyword you provided.","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"aaapppsss"},"content":"Format: `find /food KEYWORD`","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"praj-bellakka"},"content":"Example of usage:","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"kengjit"},"content":"`find /food rice`","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"kengjit"},"content":"- Prints out all preset foods that contains \"rice\".","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"aaapppsss"},"content":"#### Listing foods in food database: `list`","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"praj-bellakka"},"content":"Lists out all foods in the database and their respective calories.","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"praj-bellakka"},"content":"Format: `list /food`","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"praj-bellakka"},"content":"Example of usage:","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"praj-bellakka"},"content":"`list /food`","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"aaapppsss"},"content":"### Weight Tracker","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"aaapppsss"},"content":"#### Recording weight: `weight /set`","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"aaapppsss"},"content":"Updates the user\u0027s current weight as well as their weight record for the day in the weight tracker.","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"aaapppsss"},"content":"Format: `weight /set WEIGHT`","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"praj-bellakka"},"content":"Example of usage:","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"aaapppsss"},"content":"`weight /set 55.6`","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"aaapppsss"},"content":"#### Listing weight records: `list`","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"praj-bellakka"},"content":"Lists out all past records of weight entered by the user.","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"praj-bellakka"},"content":"Format: `list /weight`","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"praj-bellakka"},"content":"Example of usage:","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"praj-bellakka"},"content":"`list /weight`","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"aaapppsss"},"content":"### Personalisation","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"aaapppsss"},"content":"####  Setting gender: `gender /set`","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"aaapppsss"},"content":"Sets the user\u0027s gender to either Male or Female.","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":219,"author":{"gitId":"aaapppsss"},"content":"Format: `gender /set GENDER_SYMBOL`","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"aaapppsss"},"content":"Example of usage:","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":223,"author":{"gitId":"aaapppsss"},"content":"`gender /set m`","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"aaapppsss"},"content":"####  Setting height: `height /set`","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"aaapppsss"},"content":"Sets the user\u0027s height in centimeters.","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"aaapppsss"},"content":"Format: `height /set HEIGHT`","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"aaapppsss"},"content":"Example of usage:","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"aaapppsss"},"content":"`height /set 180`","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"aaapppsss"},"content":"####  Setting age: `age /set`","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"aaapppsss"},"content":"Sets the user\u0027s age in years.","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"aaapppsss"},"content":"Format: `age /set AGE`","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"aaapppsss"},"content":"Example of usage:","lastModifiedDate":"2021-10-23"},{"lineNumber":246,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"aaapppsss"},"content":"`age /set 18`","lastModifiedDate":"2021-10-23"},{"lineNumber":248,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"aaapppsss"},"content":"####  Setting calorie goal: `calorie /set`","lastModifiedDate":"2021-10-23"},{"lineNumber":252,"author":{"gitId":"aaapppsss"},"content":"Sets the user\u0027s calorie goal in kcal.","lastModifiedDate":"2021-10-23"},{"lineNumber":253,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":254,"author":{"gitId":"aaapppsss"},"content":"Format: `calorie /set CALORIE_GOAL`","lastModifiedDate":"2021-10-23"},{"lineNumber":255,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":256,"author":{"gitId":"aaapppsss"},"content":"Example of usage:","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":258,"author":{"gitId":"aaapppsss"},"content":"`calorie /set 2000`","lastModifiedDate":"2021-10-23"},{"lineNumber":259,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":260,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"aaapppsss"},"content":"####  Generate and set calorie goal: `calorie /generate`","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"aaapppsss"},"content":"Generates and sets a calorie goal based on the user\u0027s target weight loss/gain per week, age, height, weight and gender.","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"aaapppsss"},"content":"Format: `calorie /generate /WEIGHT_CHANGE_TYPE WEEKLY_TARGET`","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"aaapppsss"},"content":"Example of usage:","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"aaapppsss"},"content":"`calorie /generate /gain 0.5`","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"aaapppsss"},"content":"### Other","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":275,"author":{"gitId":"aaapppsss"},"content":"#### Viewing Help: `help`","lastModifiedDate":"2021-10-23"},{"lineNumber":276,"author":{"gitId":"aaapppsss"},"content":"Lists out available commands and additional information regarding each command.","lastModifiedDate":"2021-10-23"},{"lineNumber":277,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":278,"author":{"gitId":"aaapppsss"},"content":"Format: `help`","lastModifiedDate":"2021-10-23"},{"lineNumber":279,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":280,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":281,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":282,"author":{"gitId":"siyuancheng178"},"content":"#### View statistics: `summary`","lastModifiedDate":"2021-10-23"},{"lineNumber":283,"author":{"gitId":"kengjit"},"content":"FitNUS supports two kinds of diet reports:","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":285,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":286,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":287,"author":{"gitId":"siyuancheng178"},"content":"##### Weekly report","lastModifiedDate":"2021-10-23"},{"lineNumber":288,"author":{"gitId":"kengjit"},"content":"Weekly report gives you an overview of your diet over the past 7 days, which includes:","lastModifiedDate":"2021-10-24"},{"lineNumber":289,"author":{"gitId":"kengjit"},"content":"- Graph of daily calorie intake","lastModifiedDate":"2021-10-24"},{"lineNumber":290,"author":{"gitId":"kengjit"},"content":"- Average calorie intake","lastModifiedDate":"2021-10-24"},{"lineNumber":291,"author":{"gitId":"kengjit"},"content":"- Most frequently eaten foods","lastModifiedDate":"2021-10-24"},{"lineNumber":292,"author":{"gitId":"kengjit"},"content":"- Least frequently eaten foods","lastModifiedDate":"2021-10-24"},{"lineNumber":293,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":294,"author":{"gitId":"siyuancheng178"},"content":"Format: `summary /week`","lastModifiedDate":"2021-10-23"},{"lineNumber":295,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":296,"author":{"gitId":"siyuancheng178"},"content":"##### Monthly report","lastModifiedDate":"2021-10-23"},{"lineNumber":297,"author":{"gitId":"kengjit"},"content":"Monthly report gives you an overview of your diet over this month, which includes:","lastModifiedDate":"2021-10-24"},{"lineNumber":298,"author":{"gitId":"kengjit"},"content":"- Average calorie intake","lastModifiedDate":"2021-10-24"},{"lineNumber":299,"author":{"gitId":"kengjit"},"content":"- Most frequently eaten foods","lastModifiedDate":"2021-10-24"},{"lineNumber":300,"author":{"gitId":"kengjit"},"content":"- Least frequently eaten foods","lastModifiedDate":"2021-10-24"},{"lineNumber":301,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":302,"author":{"gitId":"siyuancheng178"},"content":"Format: `summary /month`","lastModifiedDate":"2021-10-23"},{"lineNumber":303,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":304,"author":{"gitId":"kengjit"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":305,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":306,"author":{"gitId":"kengjit"},"content":"#### Suggest food based on food type and calorie goal: `suggest`","lastModifiedDate":"2021-10-24"},{"lineNumber":307,"author":{"gitId":"brendanlsz"},"content":"Filters food items in the database based on food type (meal, snack, beverage, others) ","lastModifiedDate":"2021-10-23"},{"lineNumber":308,"author":{"gitId":"brendanlsz"},"content":"that if consumed, will not exceed the daily calorie goal set by the user.","lastModifiedDate":"2021-10-23"},{"lineNumber":309,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":310,"author":{"gitId":"kengjit"},"content":"Format: `suggest /FOODTYPE [/sort]`","lastModifiedDate":"2021-10-24"},{"lineNumber":311,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":312,"author":{"gitId":"brendanlsz"},"content":"\u003e **_OPTIONAL:_** You can sort the suggestions by calorie value by simply appending \"/sort\"","lastModifiedDate":"2021-10-23"},{"lineNumber":313,"author":{"gitId":"brendanlsz"},"content":"\u003e to the command above e.g. suggest /FOODTYPE /sort","lastModifiedDate":"2021-10-23"},{"lineNumber":314,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":315,"author":{"gitId":"brendanlsz"},"content":"Example of usage:","lastModifiedDate":"2021-10-23"},{"lineNumber":316,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":317,"author":{"gitId":"brendanlsz"},"content":"`suggest /meal`","lastModifiedDate":"2021-10-23"},{"lineNumber":318,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":319,"author":{"gitId":"brendanlsz"},"content":"`suggest /snack /sort`","lastModifiedDate":"2021-10-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-10-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":325,"author":{"gitId":"brendanlsz"},"content":"## Command summary","lastModifiedDate":"2021-10-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":327,"author":{"gitId":"brendanlsz"},"content":"Action | Command Format | Example","lastModifiedDate":"2021-10-23"},{"lineNumber":328,"author":{"gitId":"brendanlsz"},"content":"--- | --- | --- | ","lastModifiedDate":"2021-10-23"},{"lineNumber":329,"author":{"gitId":"brendanlsz"},"content":"Add | add /MEALTYPE FOOD_NAME | `add /bfast chocolate rolls`","lastModifiedDate":"2021-10-23"},{"lineNumber":330,"author":{"gitId":"kengjit"},"content":"Edit | edit INDEX_OF_FOOD FOOD_NAME | `edit 1 burger`","lastModifiedDate":"2021-10-24"},{"lineNumber":331,"author":{"gitId":"brendanlsz"},"content":"Remove entry | remove /entry INDEX_OF_FOOD | `remove /entry 2`","lastModifiedDate":"2021-10-23"},{"lineNumber":332,"author":{"gitId":"brendanlsz"},"content":"Remove food | remove /food INDEX_OF_FOOD | `remove /food 12`","lastModifiedDate":"2021-10-23"},{"lineNumber":333,"author":{"gitId":"brendanlsz"},"content":"Find food | find /food KEYWORD | `find /food rice`","lastModifiedDate":"2021-10-23"},{"lineNumber":334,"author":{"gitId":"brendanlsz"},"content":"Find entry | find /entry KEYWORD | `find /entry rice`","lastModifiedDate":"2021-10-23"},{"lineNumber":335,"author":{"gitId":"brendanlsz"},"content":"List food | list /food | `list /food`","lastModifiedDate":"2021-10-23"},{"lineNumber":336,"author":{"gitId":"kengjit"},"content":"List all entries | list /entry | `list /entry`","lastModifiedDate":"2021-10-24"},{"lineNumber":337,"author":{"gitId":"kengjit"},"content":"List daily entry | list /entry | `list /entry /day`","lastModifiedDate":"2021-10-24"},{"lineNumber":338,"author":{"gitId":"kengjit"},"content":"List weekly entry | list /entry | `list /entry /week`","lastModifiedDate":"2021-10-24"},{"lineNumber":339,"author":{"gitId":"brendanlsz"},"content":"List weight record | list /weight | `list /weight`","lastModifiedDate":"2021-10-23"},{"lineNumber":340,"author":{"gitId":"siyuancheng178"},"content":"View weekly statistics | summary /week | `summary /week`","lastModifiedDate":"2021-10-23"},{"lineNumber":341,"author":{"gitId":"siyuancheng178"},"content":"View monthly statistics | summary /month | `summary /month`","lastModifiedDate":"2021-10-23"},{"lineNumber":342,"author":{"gitId":"brendanlsz"},"content":"Suggest food | suggest /FOODTYPE \u003cbr /\u003e suggest /FOODTYPE /sort | `suggest /meal` \u003cbr /\u003e `suggest /snack /sort`","lastModifiedDate":"2021-10-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"kengjit":88,"brendanlsz":22,"siyuancheng178":12,"-":34,"aaapppsss":111,"praj-bellakka":77}},{"path":"docs/adelineDG/adelineDG.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aaapppsss"},"content":"## Weight Tracker Design \u0026 Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aaapppsss"},"content":"###Architecture","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aaapppsss"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"The weight tracker exists as an ArrayList called `WeightProgressEntries` within the User class. The ArrayList contains objects of class `WeightProgressEntry`.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"**SetWeightCommand Component**","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"The entry point for setting or updating weight. The `execute` method in this object calls `updateWeightAndWeightTracker` method in the User object initialised in the main file in order to update the user\u0027s weight and weight progress.","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"**Storage Component**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"Weight progress entries are stored in a text file in the following format:","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"`WEIGHT | DATE(YYYY-MM-DD)`","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"Example: `100 | 2021-03-01`","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"The weight progress storage file is updated every time the user sets or updates their weight for the day, as all storage files are updated at every iteration of the main loop using the `saveFitNus` method.","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"On startup, the storage file is  parsed and the corresponding WeightProgressEntry objects are created and loaded into the ArrayList.","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aaapppsss"},"content":"**User Component**","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"How the User component works in the context of the weight tracker:","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"aaapppsss"},"content":"1. When the user inputs the weight setting command, User is called upon to execute the function to update the user\u0027s weight and weight tracker.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"aaapppsss"},"content":"2. In all cases, the weight attribute of the initialised User object will be updated to the new weight inputted by the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"aaapppsss"},"content":"3. If no weight progress entries were present in the storage text file, the tracker does not attempt to calculate the difference between the updated weight and the previous weight.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"aaapppsss"},"content":"4. If the latest weight progress entry was recorded on the same day, that entry is updated with the new weight (that is, no new entry is added to the weight tracker). Otherwise, a new weight progress entry is created in the ArrayList with the current date and new weight.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aaapppsss":31}},{"path":"docs/overallClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"class FitNus {","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"+main(String[])","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"class User {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"-calorieGoal:int","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"-gender:int","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"+getCalorieGoal()","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"+setCalorieGoal(int)","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"+getGender()","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"+setGender(int)","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"+showCaloriesRemaining(EntryDatabase)","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"+preloadUserData(BufferedReader)","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"+listUserData()","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"+convertUserDataToString()","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"class Ui {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"+printWelcomeMessage()","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"+println(String)","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"+print(String)","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"+printPreloadDatabaseError()","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"+printPreloadUserError()","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"+readInput()","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"+printNoMatchingResults()","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"+printMatchingFoods(ArrayList\u003cFood\u003e)","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"+printMatchingEntries(ArrayList\u003cEntry\u003e)","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"class Storage {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"+createDirectoryAndFiles()","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"+initialiseFoodDatabase(FoodDatabase)","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"+initialiseEntryDatabase(EntryDatabase)","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"+initialiseUser(User)","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"+saveFoodDatabase(FoodDatabase)","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"+saveEntryDatabase(EntryDatabase)","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"+saveUserData(User)","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kengjit"},"content":"+saveData(String)","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kengjit"},"content":"+createFile(String)","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"+createDirectory(String)","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"class Parser","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"class Entry","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"class Food","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"enum MealType {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kengjit"},"content":"BREAKFAST","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"LUNCH","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kengjit"},"content":"DINNER","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kengjit"},"content":"SNACK","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kengjit"},"content":"class EntryDatabase","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kengjit"},"content":"class FoodDatabase","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kengjit"},"content":"abstract Command","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kengjit"},"content":"class XYZCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kengjit"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kengjit":56}},{"path":"src/main/java/fitnus/FitNus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package fitnus;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"aaapppsss"},"content":"import fitnus.command.SetGenderCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"aaapppsss"},"content":"import fitnus.command.SetAgeCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"aaapppsss"},"content":"import fitnus.command.SetHeightCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"import fitnus.command.SetWeightCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"aaapppsss"},"content":"import fitnus.command.HelpCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"import fitnus.command.ExitCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"import fitnus.command.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"brendanlsz"},"content":"import fitnus.storage.Storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.tracker.Gender;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"brendanlsz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"siyuancheng178"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"siyuancheng178"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"brendanlsz"},"content":"public class FitNus {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"brendanlsz"},"content":"    private static final Logger logger \u003d Logger.getLogger(\"FitNus\");","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"brendanlsz"},"content":"    private static void initialiseFitNus(FoodDatabase fd, EntryDatabase ed, User user) {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"        // Load From Storage","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"brendanlsz"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"brendanlsz"},"content":"            Storage.createDirectoryAndFiles();","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"brendanlsz"},"content":"            Storage.initialiseFoodDatabase(fd);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"brendanlsz"},"content":"            Storage.initialiseEntryDatabase(ed);","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"aaapppsss"},"content":"            Storage.initialiseWeightProgress(user);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"aaapppsss"},"content":"            int successfullyInitialisedUser \u003d Storage.initialiseUser(user);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"aaapppsss"},"content":"            if (successfullyInitialisedUser \u003d\u003d 0) { //did not successfully initialise user data","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"aaapppsss"},"content":"                Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"aaapppsss"},"content":"                ui.println(\"Welcome to FitNUS! Please enter your gender (m/f):\");","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"aaapppsss"},"content":"                initialiseGender(ui, ed, fd, user);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"aaapppsss"},"content":"                ui.println(\"Please enter your age in years:\");","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"aaapppsss"},"content":"                initialiseAge(ui, ed, fd, user);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"aaapppsss"},"content":"                ui.println(\"Please enter your height in cm:\");","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"aaapppsss"},"content":"                initialiseHeight(ui, ed, fd, user);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"aaapppsss"},"content":"                ui.println(\"Please enter your weight in kg:\");","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"aaapppsss"},"content":"                initialiseWeight(ui, ed, fd, user);","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"aaapppsss"},"content":"                ui.println(\"Generated your daily calorie needs accordingly.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"aaapppsss"},"content":"                int calorieGoal \u003d user.generateCalorieGoal(0, \"gain\");","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"aaapppsss"},"content":"                user.setCalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"aaapppsss"},"content":"                ui.println(\"Your daily calorie need is \" + calorieGoal + \" kcal.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"aaapppsss"},"content":"                saveFitNus(fd, ed, user);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"aaapppsss"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"brendanlsz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"siyuancheng178"},"content":"            logger.log(Level.INFO, \"some problems when loading data\");","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"brendanlsz"},"content":"            Ui.println(\"I/O error! \" + e.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"brendanlsz"},"content":"        } catch (FitNusException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"siyuancheng178"},"content":"            logger.log(Level.INFO, \"some problems when loading data\");","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"brendanlsz"},"content":"            Ui.println(e.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"aaapppsss"},"content":"    private static void initialiseGender(Ui ui, EntryDatabase ed, FoodDatabase fd, User user) {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"aaapppsss"},"content":"        boolean genderInitialised \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"aaapppsss"},"content":"        while (genderInitialised \u003d\u003d false) {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"aaapppsss"},"content":"            try {","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"aaapppsss"},"content":"                String genderString \u003d ui.readInput().strip();","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"aaapppsss"},"content":"                Command c \u003d new SetGenderCommand(genderString);","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"aaapppsss"},"content":"                Ui.println(c.execute(ed, fd, user));","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"aaapppsss"},"content":"                genderInitialised \u003d true;","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"aaapppsss"},"content":"            } catch (FitNusException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"aaapppsss"},"content":"                genderInitialised \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"aaapppsss"},"content":"                Ui.println(e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"aaapppsss"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"aaapppsss"},"content":"    private static void initialiseAge(Ui ui, EntryDatabase ed, FoodDatabase fd, User user) {","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"aaapppsss"},"content":"        boolean ageInitialised \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"aaapppsss"},"content":"        while (ageInitialised \u003d\u003d false) {","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"aaapppsss"},"content":"            try {","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"aaapppsss"},"content":"                int age;","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"aaapppsss"},"content":"                try {","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"aaapppsss"},"content":"                    age \u003d Integer.parseInt(ui.readInput().strip());","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"aaapppsss"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"aaapppsss"},"content":"                    throw new FitNusException(\"Input must be an integer!\");","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"aaapppsss"},"content":"                }","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"aaapppsss"},"content":"                Command c \u003d new SetAgeCommand(age);","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"aaapppsss"},"content":"                Ui.println(c.execute(ed, fd, user));","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"aaapppsss"},"content":"                ageInitialised \u003d true;","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"aaapppsss"},"content":"            } catch (FitNusException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"aaapppsss"},"content":"                ageInitialised \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"aaapppsss"},"content":"                Ui.println(e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"aaapppsss"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"aaapppsss"},"content":"    private static void initialiseHeight(Ui ui, EntryDatabase ed, FoodDatabase fd, User user) {","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"aaapppsss"},"content":"        boolean heightInitialised \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"aaapppsss"},"content":"        while (heightInitialised \u003d\u003d false) {","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"aaapppsss"},"content":"            try {","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"aaapppsss"},"content":"                int height;","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"aaapppsss"},"content":"                try {","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"aaapppsss"},"content":"                    height \u003d Integer.parseInt(ui.readInput().strip());","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"aaapppsss"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"aaapppsss"},"content":"                    throw new FitNusException(\"Input must be an integer!\");","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"aaapppsss"},"content":"                }","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"aaapppsss"},"content":"                Command c \u003d new SetHeightCommand(height);","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"aaapppsss"},"content":"                Ui.println(c.execute(ed, fd, user));","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"aaapppsss"},"content":"                heightInitialised \u003d true;","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"aaapppsss"},"content":"            } catch (FitNusException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"aaapppsss"},"content":"                heightInitialised \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"aaapppsss"},"content":"                Ui.println(e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"aaapppsss"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"aaapppsss"},"content":"    private static void initialiseWeight(Ui ui, EntryDatabase ed, FoodDatabase fd, User user) {","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"aaapppsss"},"content":"        boolean weightInitialised \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"aaapppsss"},"content":"        while (weightInitialised \u003d\u003d false) {","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"aaapppsss"},"content":"            try {","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"aaapppsss"},"content":"                float weight;","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"aaapppsss"},"content":"                try {","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"aaapppsss"},"content":"                    weight \u003d Float.parseFloat(ui.readInput().strip());","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"aaapppsss"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"aaapppsss"},"content":"                    throw new FitNusException(\"Input must be a number!\");","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"aaapppsss"},"content":"                }","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"aaapppsss"},"content":"                Command c \u003d new SetWeightCommand(weight);","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"aaapppsss"},"content":"                Ui.println(c.execute(ed, fd, user));","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"aaapppsss"},"content":"                weightInitialised \u003d true;","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"aaapppsss"},"content":"            } catch (FitNusException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"aaapppsss"},"content":"                weightInitialised \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"aaapppsss"},"content":"                Ui.println(e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"aaapppsss"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"brendanlsz"},"content":"    private static void saveFitNus(FoodDatabase fd, EntryDatabase ed, User user) {","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"brendanlsz"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"brendanlsz"},"content":"            Storage.createDirectoryAndFiles();","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"brendanlsz"},"content":"            Storage.saveFoodDatabase(fd);","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"brendanlsz"},"content":"            Storage.saveEntryDatabase(ed);","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"brendanlsz"},"content":"            Storage.saveUserData(user);","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"aaapppsss"},"content":"            Storage.saveWeightData(user);","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"brendanlsz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"siyuancheng178"},"content":"            logger.log(Level.INFO, \"some problems when saving data\");","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"brendanlsz"},"content":"            Ui.println(\"I/O error! \" + e.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"brendanlsz"},"content":"    private static void run(Ui ui, Parser parser, FoodDatabase fd, EntryDatabase ed,","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"kengjit"},"content":"                            User user) {","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"kengjit"},"content":"        Ui.println(new HelpCommand().execute(ed, fd, user));","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"siyuancheng178"},"content":"        while (true) {","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"kengjit"},"content":"            try {","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"siyuancheng178"},"content":"                String userInput;","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"siyuancheng178"},"content":"                Command inputType;","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"siyuancheng178"},"content":"                userInput \u003d ui.readInput();","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"siyuancheng178"},"content":"                inputType \u003d parser.parseCommandType(userInput, fd);","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"aaapppsss"},"content":"                //inputType \u003d new SetHeightCommand(18);","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"siyuancheng178"},"content":"                Ui.println(inputType.execute(ed, fd, user));","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"brendanlsz"},"content":"                ed.sortDatabase();","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"brendanlsz"},"content":"                saveFitNus(fd, ed, user);","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"siyuancheng178"},"content":"                if (inputType instanceof ExitCommand) {","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"siyuancheng178"},"content":"                    break;","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"siyuancheng178"},"content":"                }","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"kengjit"},"content":"            } catch (FitNusException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"kengjit"},"content":"                Ui.println(e.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"kengjit"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"brendanlsz"},"content":"    public static void printPreloadedData(FoodDatabase fd, EntryDatabase ed, User user) {","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"brendanlsz"},"content":"        Ui.println(\"Food database:\" + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"brendanlsz"},"content":"                + fd.listFoods());","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"brendanlsz"},"content":"        Ui.println(\"Entry database:\" + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"brendanlsz"},"content":"                + ed.listEntries());","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"brendanlsz"},"content":"        Ui.println(\"User data:\" + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"brendanlsz"},"content":"                + user.listUserData());","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"brendanlsz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"aaapppsss"},"content":"        User user \u003d new User(Gender.MALE, 1000);","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"brendanlsz"},"content":"        FoodDatabase fd \u003d new FoodDatabase();","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"brendanlsz"},"content":"        EntryDatabase ed \u003d new EntryDatabase();","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"kengjit"},"content":"        // Init","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"brendanlsz"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"brendanlsz"},"content":"        initialiseFitNus(fd, ed, user);","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"brendanlsz"},"content":"        printPreloadedData(fd, ed, user);","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"kengjit"},"content":"        // Run","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"kengjit"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"kengjit"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"brendanlsz"},"content":"        run(ui, parser, fd, ed, user);","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":197,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"kengjit":15,"brendanlsz":48,"siyuancheng178":17,"aaapppsss":107,"praj-bellakka":10}},{"path":"src/main/java/fitnus/command/AddFoodEntryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"import fitnus.tracker.MealType;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"public class AddFoodEntryCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"    private final MealType mealType;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"    private final String foodName;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    private final int calories;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"    private final Food food;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"    private final boolean isCustom;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"brendanlsz"},"content":"    private Food.FoodType type \u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"brendanlsz"},"content":"    public AddFoodEntryCommand(MealType mealType, Food food) {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"        this.mealType \u003d mealType;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"        this.food \u003d food;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"        this.foodName \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"        this.calories \u003d -1;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"        this.isCustom \u003d false;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"brendanlsz"},"content":"    public AddFoodEntryCommand(MealType mealType, String foodName, int calories, Food.FoodType type) {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"        this.mealType \u003d mealType;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"        this.foodName \u003d foodName;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"        this.food \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"        this.isCustom \u003d true;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"brendanlsz"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"        if (isCustom) {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"brendanlsz"},"content":"            Food customFood \u003d new Food(foodName, calories, type);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"kengjit"},"content":"            ed.addEntry(mealType, customFood);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"            fd.addFood(customFood);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"            return \"You have successfully added \" + customFood;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"            ed.addEntry(mealType, food);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"            return \"You have successfully added \" + food;","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kengjit":42,"brendanlsz":5}},{"path":"src/main/java/fitnus/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siyuancheng178"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"siyuancheng178"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"    public abstract String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kengjit":2,"siyuancheng178":5,"praj-bellakka":4}},{"path":"src/main/java/fitnus/command/DeleteFoodEntryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siyuancheng178"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Entry;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"siyuancheng178"},"content":"public class DeleteFoodEntryCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"    private final int index;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"    public DeleteFoodEntryCommand(int index) {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"siyuancheng178"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"        Entry deletedEntry \u003d ed.getEntryAtIndex(index);","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"        ed.deleteEntry(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"        return \"You have successfully deleted \" + deletedEntry.getFood();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kengjit":10,"siyuancheng178":7,"praj-bellakka":5}},{"path":"src/main/java/fitnus/command/EditFoodEntryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"public class EditFoodEntryCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"    private final int index;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"    private final String foodName;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"    private final int calories;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    private final Food food;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"    private final boolean isCustom;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"brendanlsz"},"content":"    private final Food.FoodType type;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"    public EditFoodEntryCommand(int index, Food food) {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"        this.food \u003d food;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"        this.foodName \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"        this.calories \u003d -1;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"        this.isCustom \u003d false;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"        this.type \u003d food.getType();","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"brendanlsz"},"content":"    public EditFoodEntryCommand(int index, String foodName, int calories, Food.FoodType type) {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"        this.foodName \u003d foodName;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"        this.food \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"        this.isCustom \u003d true;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"brendanlsz"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kengjit"},"content":"        if (isCustom) {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"brendanlsz"},"content":"            Food customFood \u003d new Food(foodName, calories, type);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"            ed.editEntryAtIndex(index, customFood);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"            fd.addFood(customFood);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"            return \"Entry successfully edited to \" + customFood;","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"            ed.editEntryAtIndex(index, food);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"            return \"Entry successfully edited to \" + food;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kengjit":43,"brendanlsz":5}},{"path":"src/main/java/fitnus/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siyuancheng178"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"siyuancheng178"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"siyuancheng178"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"siyuancheng178"},"content":"        return \"Thanks for using FitNUS! See you next time\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kengjit":2,"siyuancheng178":8,"praj-bellakka":3}},{"path":"src/main/java/fitnus/command/FindEntryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanlsz"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"brendanlsz"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"brendanlsz"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"brendanlsz"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"brendanlsz"},"content":"import fitnus.tracker.Entry;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"brendanlsz"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"brendanlsz"},"content":"import fitnus.utility.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"brendanlsz"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"brendanlsz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"brendanlsz"},"content":"public class FindEntryCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"brendanlsz"},"content":"    private final String keyword;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"brendanlsz"},"content":"    public FindEntryCommand(String keyword) {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"brendanlsz"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"brendanlsz"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"brendanlsz"},"content":"        ArrayList\u003cEntry\u003e matchingEntries \u003d ed.findEntry(keyword);","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"brendanlsz"},"content":"        Ui.printMatchingEntries(matchingEntries);","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"brendanlsz"},"content":"        return \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"brendanlsz"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"brendanlsz":26}},{"path":"src/main/java/fitnus/command/FindFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanlsz"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"brendanlsz"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"brendanlsz"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"brendanlsz"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"brendanlsz"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"brendanlsz"},"content":"import fitnus.utility.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"brendanlsz"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"brendanlsz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"brendanlsz"},"content":"public class FindFoodCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"brendanlsz"},"content":"    private final String keyword;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"brendanlsz"},"content":"    public FindFoodCommand(String keyword) {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"brendanlsz"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"brendanlsz"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"brendanlsz"},"content":"        ArrayList\u003cFood\u003e matchingFoods \u003d fd.findFood(keyword);","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"brendanlsz"},"content":"        Ui.printMatchingFoods(matchingFoods);","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"brendanlsz"},"content":"        return \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"brendanlsz"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"brendanlsz":25}},{"path":"src/main/java/fitnus/command/GenerateCalorieGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aaapppsss"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"aaapppsss"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"aaapppsss"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"aaapppsss"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.tracker.Gender;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"aaapppsss"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"public class GenerateCalorieGoalCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"    private final float weeklyChange;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"    private final String changeType;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"    private static final String GAIN_STRING \u003d \"gain\";","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"    private static final String LOSE_STRING \u003d \"lose\";","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"    public GenerateCalorieGoalCommand(float weeklyChange, String changeType) {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"        this.weeklyChange \u003d weeklyChange;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"        this.changeType \u003d changeType;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"        if (weeklyChange \u003c\u003d 1) {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"aaapppsss"},"content":"            if ((changeType \u003d\u003d GAIN_STRING || changeType \u003d\u003d LOSE_STRING)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"                int newGoal \u003d us.generateCalorieGoal(weeklyChange, changeType);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"                us.setCalorieGoal(newGoal);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"aaapppsss"},"content":"                return \"Your new calorie goal to \" + changeType + \" \" + weeklyChange","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"aaapppsss"},"content":"                        + \" kg per week is \" + newGoal + \" kcal daily!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"aaapppsss"},"content":"            } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"aaapppsss"},"content":"                throw new FitNusException(\"Invalid change type! \"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"aaapppsss"},"content":"                        + \"Please enter /gain or /lose as the change type parameter.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"aaapppsss"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"aaapppsss"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"aaapppsss"},"content":"            throw new FitNusException(\"In order to lose or gain weight in a safe and healthy way, \"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"aaapppsss"},"content":"                    + \"FitNUS recommends a weekly change in weight of not more than \"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"aaapppsss"},"content":"                    + \"1 kg. Please try again with a lower weekly goal!\");","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"siyuancheng178":1,"aaapppsss":38}},{"path":"src/main/java/fitnus/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siyuancheng178"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"siyuancheng178"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"siyuancheng178"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"siyuancheng178"},"content":"        super();","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"siyuancheng178"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"siyuancheng178"},"content":"        return \"------------------ \\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"siyuancheng178"},"content":"                + \"Here are some commands that you can use!\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"siyuancheng178"},"content":"                + \"------------------ \\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ADD/EDIT/REMOVE \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"                + \"[X] Add entry: add /MEALTYPE FOOD_NAME (MEALTYPE - /bfast, /lunch, /dinner, /snack)\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"                + \"[X] Edit existing entry: edit INDEX_OF_ENTRY FOOD_NAME\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"                + \"[X] Delete entry: remove /entry INDEX_OF_FOOD\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"                + \"[X] Delete preset food: remove /food INDEX_OF_FOOD\\n\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d LIST \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"siyuancheng178"},"content":"                + \"[X] List foods in database: list /food\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"                + \"[X] List out entries: list /entry /TIMEFRAME (/day, /week)\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"                + \"[X] List past records of weight: list /weight\\n\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SEARCH \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"                + \"[X] Search food with keyword: find /food KEYWORD\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"                + \"[X] Search entry with keyword: find /entry KEYWORD\\n\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d USER \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"siyuancheng178"},"content":"                + \"[X] Set Gender: gender /set M/F (Select one)\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"                + \"[X] Set Weight: weight /set WEIGHT\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"siyuancheng178"},"content":"                + \"[X] Set calorie goal: calorie /set GOAL\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"siyuancheng178"},"content":"                + \"[X] View remaining calories for the day: calorie /remain\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"                + \"[X] Auto generate calorie goal: calorie /generate\\n\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OTHERS \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"                + \"[X] List out available commands: help\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"                + \"[X] Show summary: summary /TIMEFRAME (/week, /month)\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"brendanlsz"},"content":"                + \"[X] Recommend food to eat: suggest /FOODTYPE (/meal, /beverage, /snack, /others)\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"brendanlsz"},"content":"                + \"[X] Recommend food to eat (sorted): suggest /FOODTYPE /sort\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"siyuancheng178"},"content":"                + \"[X] Exit FitNUS: exit\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"siyuancheng178"},"content":"                + \"------------------ \\n\";","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kengjit":18,"brendanlsz":2,"siyuancheng178":20,"praj-bellakka":3}},{"path":"src/main/java/fitnus/command/ListFoodDatabaseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siyuancheng178"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"siyuancheng178"},"content":"public class ListFoodDatabaseCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"    public ListFoodDatabaseCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"siyuancheng178"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"        return fd.listFoods();","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kengjit":1,"siyuancheng178":9,"aaapppsss":2,"praj-bellakka":3}},{"path":"src/main/java/fitnus/command/ListFoodEntryAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siyuancheng178"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"public class ListFoodEntryAllCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"    public ListFoodEntryAllCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"siyuancheng178"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"        return ed.listEntries();","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kengjit":3,"siyuancheng178":9,"aaapppsss":4,"praj-bellakka":3}},{"path":"src/main/java/fitnus/command/ListFoodEntryDayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"public class ListFoodEntryDayCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"    public ListFoodEntryDayCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"        EntryDatabase dayEntry \u003d ed.getPastDaysEntryDatabase(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"        return dayEntry.listEntries();","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kengjit":18}},{"path":"src/main/java/fitnus/command/ListFoodEntryWeekCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"public class ListFoodEntryWeekCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"    public static final int DAYS_IN_WEEK \u003d 7;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"    public ListFoodEntryWeekCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"        EntryDatabase weekEntry \u003d ed.getPastDaysEntryDatabase(DAYS_IN_WEEK);","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"        return weekEntry.listEntries();","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kengjit":20}},{"path":"src/main/java/fitnus/command/ListWeightProgressCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aaapppsss"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"aaapppsss"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"aaapppsss"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"aaapppsss"},"content":"import fitnus.tracker.WeightProgressEntry;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"public class ListWeightProgressCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"    public ListWeightProgressCommand() {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"        ArrayList\u003cWeightProgressEntry\u003e weightProgressEntries \u003d us.getWeightProgressEntries();","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"        float startingWeight \u003d weightProgressEntries.get(0).getWeight();","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"        float currentWeight \u003d weightProgressEntries.get(weightProgressEntries.size() - 1).getWeight();","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"        float weightChange \u003d startingWeight - currentWeight;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"        String changeType \u003d weightChange \u003c 0 ? \"gained\" : \"lost\";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"        weightChange \u003d Math.abs(weightChange);","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"        return \"Your weight progress: \\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"                + us.convertWeightRecordsToStringForUi()","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"aaapppsss"},"content":"                + \"You have \" + changeType + \" \" + weightChange + \" kg since the start of your FitNUS journey!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"aaapppsss":29}},{"path":"src/main/java/fitnus/command/SetAgeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aaapppsss"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"aaapppsss"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"aaapppsss"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"aaapppsss"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"public class SetAgeCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"    private final int age;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"    private static final int MINIMUM_AGE \u003d 12;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"    public SetAgeCommand(int age) {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"        if (age \u003c MINIMUM_AGE) {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"            throw new FitNusException(\"Users of FitNUS must be \" + MINIMUM_AGE","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"                    + \" years old and above!\");","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"aaapppsss"},"content":"        us.setAge(this.age);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"        return \"You have set your age to \" + this.age + \" years old!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"aaapppsss":27}},{"path":"src/main/java/fitnus/command/SetCalorieGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siyuancheng178"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"siyuancheng178"},"content":"public class SetCalorieGoalCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"brendanlsz"},"content":"    private final int calorieGoal;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"    public SetCalorieGoalCommand(int calorieGoal) {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"siyuancheng178"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"siyuancheng178"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"        us.setCalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"siyuancheng178"},"content":"        return \"The calorie goal has been set to \" + this.calorieGoal;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kengjit":1,"brendanlsz":1,"siyuancheng178":12,"aaapppsss":2,"praj-bellakka":4}},{"path":"src/main/java/fitnus/command/SetGenderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siyuancheng178"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.tracker.Gender;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"siyuancheng178"},"content":"public class SetGenderCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"siyuancheng178"},"content":"    private final Gender genderSymbol;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"siyuancheng178"},"content":"    private static final String MALE_SYMBOL \u003d \"Male\";","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"siyuancheng178"},"content":"    private static final String FEMALE_SYMBOL \u003d \"Female\";","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"    public SetGenderCommand(String genderSymbol) {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"siyuancheng178"},"content":"        this.genderSymbol \u003d Gender.findGender(genderSymbol);","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"siyuancheng178"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"siyuancheng178"},"content":"        if (genderSymbol !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"siyuancheng178"},"content":"            us.setGender(genderSymbol);","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"siyuancheng178"},"content":"            if (genderSymbol.toString().equals(\"f\")) {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"siyuancheng178"},"content":"                return \"You have set your gender to \" + FEMALE_SYMBOL;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"siyuancheng178"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"siyuancheng178"},"content":"            return \"You have set your gender to \" + MALE_SYMBOL;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"aaapppsss"},"content":"        throw new FitNusException(\"Invalid input! Please input m for male or \"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"aaapppsss"},"content":"                + \"f for female when setting your gender.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kengjit":1,"siyuancheng178":19,"aaapppsss":9,"praj-bellakka":3}},{"path":"src/main/java/fitnus/command/SetHeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aaapppsss"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"aaapppsss"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"aaapppsss"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"aaapppsss"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"public class SetHeightCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"    private int height;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"    private static final int MINIMUM_HEIGHT \u003d 40;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"    public SetHeightCommand(int height) {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"        if (height \u003c MINIMUM_HEIGHT) {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"            throw new FitNusException(\"Please enter a height of \" + MINIMUM_HEIGHT","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"                    + \" cm and above!\");","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"aaapppsss"},"content":"        us.setHeight(height);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"        return \"You have set your height to \" + this.height + \" cm!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"aaapppsss":27}},{"path":"src/main/java/fitnus/command/SetWeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aaapppsss"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aaapppsss"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aaapppsss"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aaapppsss"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"public class SetWeightCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"    private final float newWeight;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"    public SetWeightCommand(float newWeight) {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"        this.newWeight \u003d newWeight;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"        if (newWeight \u003c\u003d 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"            throw new FitNusException(\"Please enter a positive number for your weight!\");","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"        float newWeightIn2Dp \u003d (float) (Math.round(newWeight * 10.0) / 10.0);","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"        return us.updateWeightAndWeightTracker(newWeightIn2Dp);","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aaapppsss":24}},{"path":"src/main/java/fitnus/command/ViewEachCategoryCalorieCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siyuancheng178"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.tracker.Entry;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.tracker.MealType;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"siyuancheng178"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"siyuancheng178"},"content":"public class ViewEachCategoryCalorieCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"brendanlsz"},"content":"    private final int totalMealType \u003d 5;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"siyuancheng178"},"content":"    public ViewEachCategoryCalorieCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"siyuancheng178"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"siyuancheng178"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"siyuancheng178"},"content":"        ArrayList\u003cEntry\u003e entries \u003d ed.getEntries();","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"siyuancheng178"},"content":"        int[] typeFrequency \u003d {0, 0, 0, 0, 0};","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"siyuancheng178"},"content":"        int[] typeCalories \u003d {0, 0, 0, 0, 0};","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"siyuancheng178"},"content":"        String[] types \u003d {\"Breakfast\", \"Lunch\", \"Dinner\", \"Snack\", \"Undefined\"};","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"siyuancheng178"},"content":"        for (Entry entry : entries) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"siyuancheng178"},"content":"            int i \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"siyuancheng178"},"content":"            switch (entry.getMealType()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"siyuancheng178"},"content":"            case BREAKFAST:","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"siyuancheng178"},"content":"                i \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"siyuancheng178"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"siyuancheng178"},"content":"            case LUNCH:","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"siyuancheng178"},"content":"                i \u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"siyuancheng178"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"siyuancheng178"},"content":"            case DINNER:","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"siyuancheng178"},"content":"                i \u003d 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"siyuancheng178"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"siyuancheng178"},"content":"            case SNACK:","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"siyuancheng178"},"content":"                i \u003d 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"siyuancheng178"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"siyuancheng178"},"content":"            default:","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"siyuancheng178"},"content":"                i \u003d 4;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"siyuancheng178"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"siyuancheng178"},"content":"            typeFrequency[i] +\u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"siyuancheng178"},"content":"            typeCalories[i] +\u003d entry.getFood().getCalories();","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"siyuancheng178"},"content":"        StringBuilder result \u003d new StringBuilder(\"This is the overview of your diet for different meal types: \\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"siyuancheng178"},"content":"        for (int i \u003d 0; i \u003c totalMealType; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"siyuancheng178"},"content":"            result.append(String.format(\"[%s] Frequency:%d  Total Calories:%d\\n\", types[i],","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"siyuancheng178"},"content":"                    typeFrequency[i], typeCalories[i]));","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"siyuancheng178"},"content":"        return result.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"brendanlsz":1,"siyuancheng178":54}},{"path":"src/main/java/fitnus/command/ViewMonthSummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"import fitnus.tracker.Summary;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"siyuancheng178"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"public class ViewMonthSummaryCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"    public ViewMonthSummaryCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"        // Retrieves all entries that fall in the past week","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"        EntryDatabase pastMonthEntries \u003d ed.getPastMonthEntryDatabase();","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"siyuancheng178"},"content":"        Summary sum \u003d new Summary(pastMonthEntries, LocalDate.now().getDayOfMonth());","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"        return sum.generateMonthSummaryReport();","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kengjit":20,"siyuancheng178":3}},{"path":"src/main/java/fitnus/command/ViewRemainingCalorieCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siyuancheng178"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"siyuancheng178"},"content":"public class ViewRemainingCalorieCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"    public ViewRemainingCalorieCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"siyuancheng178"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"siyuancheng178"},"content":"        int calorieRemain \u003d us.showCaloriesRemaining(ed);","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"siyuancheng178"},"content":"        if (calorieRemain \u003c 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"            return String.format(\"Oops! You have exceeded the daily calorie goal by %d\", Math.abs(calorieRemain));","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"siyuancheng178"},"content":"        return String.format(\"The remaining calories before reaching the daily goal is %d\",","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"siyuancheng178"},"content":"                calorieRemain);","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kengjit":1,"siyuancheng178":14,"aaapppsss":2,"praj-bellakka":3}},{"path":"src/main/java/fitnus/command/ViewSuggestionsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanlsz"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"brendanlsz"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"brendanlsz"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"brendanlsz"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"brendanlsz"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"brendanlsz"},"content":"import fitnus.utility.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"brendanlsz"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"brendanlsz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"brendanlsz"},"content":"public class ViewSuggestionsCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"brendanlsz"},"content":"    private final Food.FoodType type;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"brendanlsz"},"content":"    private final boolean isSort;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"brendanlsz"},"content":"    public ViewSuggestionsCommand(Food.FoodType type, boolean isSort) {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"brendanlsz"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"brendanlsz"},"content":"        this.isSort \u003d isSort;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"brendanlsz"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"brendanlsz"},"content":"        int remaining \u003d us.getCalorieGoal() - ed.getTotalDailyCalorie();","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"brendanlsz"},"content":"        ArrayList\u003cFood\u003e suggestions \u003d fd.findSuggestions(type, remaining, isSort);","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"brendanlsz"},"content":"        Ui.printMatchingSuggestions(suggestions);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"brendanlsz"},"content":"        return \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"brendanlsz"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"brendanlsz":28}},{"path":"src/main/java/fitnus/command/ViewWeekSummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"import fitnus.tracker.Summary;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"public class ViewWeekSummaryCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"    public static final int DAYS_IN_WEEK \u003d 7;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    public ViewWeekSummaryCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"    public String execute(EntryDatabase ed, FoodDatabase fd, User us) throws FitNusException {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"        // Retrieves all entries that fall in the past week","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"        EntryDatabase pastWeekEntries \u003d ed.getPastDaysEntryDatabase(DAYS_IN_WEEK);","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"siyuancheng178"},"content":"        Summary sum \u003d new Summary(pastWeekEntries, DAYS_IN_WEEK);","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"        return sum.generateWeekSummaryReport();","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kengjit":23,"siyuancheng178":1}},{"path":"src/main/java/fitnus/database/EntryDatabase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praj-bellakka"},"content":"package fitnus.database;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"brendanlsz"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"siyuancheng178"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Entry;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"import fitnus.tracker.MealType;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"brendanlsz"},"content":"import fitnus.storage.Storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"brendanlsz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"import java.time.Month;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"siyuancheng178"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"brendanlsz"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"brendanlsz"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"brendanlsz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"siyuancheng178"},"content":"public class EntryDatabase {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"brendanlsz"},"content":"    private final ArrayList\u003cEntry\u003e entries;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"brendanlsz"},"content":"    private static final String DELIMITER \u003d \" | \";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"siyuancheng178"},"content":"    public EntryDatabase() {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"siyuancheng178"},"content":"        this.entries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"    public void addEntry(MealType mealType, Food food) {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"        this.entries.add(new Entry(mealType, food));","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"brendanlsz"},"content":"    public void addEntry(Entry entry) {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"brendanlsz"},"content":"        this.entries.add(entry);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"brendanlsz"},"content":"    public void sortDatabase() {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"brendanlsz"},"content":"        entries.sort(Comparator.comparing(Entry::getDate));","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"    public void deleteEntry(int index) throws FitNusException {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"            this.entries.remove(index - 1);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"kengjit"},"content":"            throw new FitNusException(\"Sorry the index chosen is invalid! Please try again!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"aaapppsss"},"content":"    public int getTotalDailyCalorie() {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"siyuancheng178"},"content":"        int caloriesConsumed \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"siyuancheng178"},"content":"        for (Entry e : entries) {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"brendanlsz"},"content":"            if (e.getDate().equals(LocalDate.now().toString())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"siyuancheng178"},"content":"                caloriesConsumed +\u003d e.getFood().getCalories();","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"siyuancheng178"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kengjit"},"content":"        assert caloriesConsumed \u003e\u003d 0 : \"calories consumed should be non-negative\";","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"siyuancheng178"},"content":"        return caloriesConsumed;","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"aaapppsss"},"content":"    public String convertDatabaseToString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"brendanlsz"},"content":"        StringBuilder lines \u003d new StringBuilder();","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"siyuancheng178"},"content":"        for (Entry e : entries) {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"brendanlsz"},"content":"            assert e !\u003d null : \"e should not be null\";","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"kengjit"},"content":"            MealType mealType \u003d e.getMealType();","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"brendanlsz"},"content":"            Food food \u003d e.getFood();","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"brendanlsz"},"content":"            String date \u003d e.getDate();","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"brendanlsz"},"content":"            String name \u003d food.getName();","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"brendanlsz"},"content":"            Integer calories \u003d food.getCalories();","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"brendanlsz"},"content":"            String type \u003d food.getType().toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"kengjit"},"content":"            lines.append(mealType).append(DELIMITER).append(name).append(DELIMITER).append(calories).append(DELIMITER)","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"brendanlsz"},"content":"                    .append(date).append(DELIMITER).append(type).append(System.lineSeparator());","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"brendanlsz"},"content":"        return lines.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"brendanlsz"},"content":"    public void preLoadDatabase(BufferedReader reader) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"brendanlsz"},"content":"        int preloadEntryCount \u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"brendanlsz"},"content":"        String line;","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"brendanlsz"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"brendanlsz"},"content":"            String[] description \u003d line.trim().split(\"\\\\s*[|]\\\\s*\");","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"brendanlsz"},"content":"            try {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"praj-bellakka"},"content":"                MealType mealType \u003d Parser.parseMealType(description[0], true);","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"kengjit"},"content":"                String name \u003d description[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"kengjit"},"content":"                Integer calories \u003d Integer.parseInt(description[2]);","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"brendanlsz"},"content":"                Food.FoodType type \u003d Parser.parseFoodType(description[4]);","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"brendanlsz"},"content":"                Food food \u003d new Food(name, calories, type);","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"brendanlsz"},"content":"                LocalDate date \u003d Parser.getDate(line);","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"kengjit"},"content":"                Entry entry \u003d new Entry(mealType, food, date);","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"brendanlsz"},"content":"                this.addEntry(entry);","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"brendanlsz"},"content":"                preloadEntryCount++;","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"brendanlsz"},"content":"            } catch (FitNusException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"brendanlsz"},"content":"                Ui.println(e.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"brendanlsz"},"content":"                Ui.printPreloadDatabaseError();","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"brendanlsz"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"brendanlsz"},"content":"                Ui.printPreloadDatabaseError();","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"brendanlsz"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"brendanlsz"},"content":"        System.out.println(\"Successfully preloaded \" + preloadEntryCount + \" entries\");","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"aaapppsss"},"content":"    public ArrayList\u003cEntry\u003e getEntries() {","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"aaapppsss"},"content":"        return entries;","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"kengjit"},"content":"    public void addDefaultEntry(MealType mealType, FoodDatabase fd, int index) throws FitNusException {","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"kengjit"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"kengjit"},"content":"            Food food \u003d fd.getFoodAtIndex(index);","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"kengjit"},"content":"            addEntry(mealType, food);","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"kengjit"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"kengjit"},"content":"            throw new FitNusException(\"Sorry the index chosen is invalid! Please try again!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"kengjit"},"content":"    public Entry getEntryAtIndex(int index) throws FitNusException {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"kengjit"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"kengjit"},"content":"            return entries.get(index - 1);","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"kengjit"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"kengjit"},"content":"            throw new FitNusException(\"Sorry the index chosen is invalid! Please try again!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"brendanlsz"},"content":"    public String listEntries() {","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"brendanlsz"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"brendanlsz"},"content":"        for (int i \u003d 1; i \u003c\u003d entries.size(); i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"brendanlsz"},"content":"            result +\u003d String.format(\" %d.%s\", i, entries.get(i - 1)","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"brendanlsz"},"content":"                    + System.lineSeparator());","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"brendanlsz"},"content":"        return result;","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"brendanlsz"},"content":"    public ArrayList\u003cEntry\u003e findEntry(String keyword) throws FitNusException {","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"brendanlsz"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"brendanlsz"},"content":"            throw new FitNusException(\"Please provide a valid keyword\");","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"brendanlsz"},"content":"        return (ArrayList\u003cEntry\u003e) entries.stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"brendanlsz"},"content":"                .filter(t -\u003e t.getFood().getName().contains(keyword))","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"brendanlsz"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"kengjit"},"content":"    public EntryDatabase getPastDaysEntryDatabase(int days) {","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"kengjit"},"content":"        sortDatabase();","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"kengjit"},"content":"        ArrayList\u003cEntry\u003e totalEntries \u003d getEntries();","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"kengjit"},"content":"        EntryDatabase pastDaysEntries \u003d new EntryDatabase();","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"kengjit"},"content":"        LocalDate datePointer \u003d LocalDate.now();","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"kengjit"},"content":"        int count \u003d totalEntries.size() - 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"kengjit"},"content":"        for (int i \u003d 0; count \u003e\u003d 0 \u0026\u0026 i \u003c days; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"kengjit"},"content":"            while (count \u003e\u003d 0 \u0026\u0026 totalEntries.get(count).getRawDate().equals(datePointer)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"kengjit"},"content":"                pastDaysEntries.addEntry(totalEntries.get(count));","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"kengjit"},"content":"                count--;","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"kengjit"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"kengjit"},"content":"            datePointer \u003d datePointer.minusDays(1);","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"kengjit"},"content":"        Collections.reverse(pastDaysEntries.entries);","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"kengjit"},"content":"        return pastDaysEntries;","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"kengjit"},"content":"    public EntryDatabase getPastMonthEntryDatabase() {","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"kengjit"},"content":"        sortDatabase();","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"kengjit"},"content":"        ArrayList\u003cEntry\u003e totalEntries \u003d getEntries();","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"kengjit"},"content":"        EntryDatabase pastMonthEntries \u003d new EntryDatabase();","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"kengjit"},"content":"        Month monthPointer \u003d LocalDate.now().getMonth();","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"kengjit"},"content":"        int count \u003d totalEntries.size() - 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"kengjit"},"content":"        while (count \u003e\u003d 0 \u0026\u0026 totalEntries.get(count).getRawDate().getMonth().equals(monthPointer)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"kengjit"},"content":"            pastMonthEntries.addEntry(totalEntries.get(count));","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"kengjit"},"content":"            count--;","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"kengjit"},"content":"        return pastMonthEntries;","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"kengjit"},"content":"    public void editEntryAtIndex(int index, Food food) throws FitNusException {","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"kengjit"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"kengjit"},"content":"            entries.get(index - 1).setFood(food);","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"kengjit"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"kengjit"},"content":"            throw new FitNusException(\"Invalid index!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":185,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"kengjit":77,"brendanlsz":67,"siyuancheng178":28,"aaapppsss":7,"praj-bellakka":6}},{"path":"src/main/java/fitnus/database/FoodDatabase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praj-bellakka"},"content":"package fitnus.database;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"brendanlsz"},"content":"import fitnus.parser.Parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"brendanlsz"},"content":"import fitnus.tracker.Entry;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"brendanlsz"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"brendanlsz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"brendanlsz"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"brendanlsz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"siyuancheng178"},"content":"public class FoodDatabase {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"brendanlsz"},"content":"    private final ArrayList\u003cFood\u003e databaseFoods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"brendanlsz"},"content":"    private static final String DELIMITER \u003d \" | \";","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"brendanlsz"},"content":"    public void addFood(String name, Integer calories, Food.FoodType type) throws FitNusException {","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"        if (calories \u003c\u003d 0) {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"            throw new FitNusException(\"Food must have more than 0 calories!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"brendanlsz"},"content":"        Food food \u003d new Food(name, calories, type);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"brendanlsz"},"content":"        databaseFoods.add(food);","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"aaapppsss"},"content":"    public void addFood(Food food) throws FitNusException {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"brendanlsz"},"content":"        assert food !\u003d null : \"food should not be null\";","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"aaapppsss"},"content":"        if (food.getCalories() \u003c\u003d 0) {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"aaapppsss"},"content":"            throw new FitNusException(\"Food must have more than 0 calories!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"siyuancheng178"},"content":"        databaseFoods.add(food);","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"    // Index here starts from 1","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"    public Food getFoodAtIndex(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"        return databaseFoods.get(index - 1);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"siyuancheng178"},"content":"    public String listFoods() {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"siyuancheng178"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"brendanlsz"},"content":"        for (int i \u003d 1; i \u003c\u003d databaseFoods.size(); i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"brendanlsz"},"content":"            result +\u003d String.format(\" %d.%s\", i, databaseFoods.get(i - 1)","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"brendanlsz"},"content":"                    + System.lineSeparator());","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"siyuancheng178"},"content":"        return result;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"brendanlsz"},"content":"    public String convertDatabaseToString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"brendanlsz"},"content":"        StringBuilder lines \u003d new StringBuilder();","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"brendanlsz"},"content":"        for (Food food : databaseFoods) {","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"brendanlsz"},"content":"            String name \u003d food.getName();","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"brendanlsz"},"content":"            Integer calories \u003d food.getCalories();","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"brendanlsz"},"content":"            String type \u003d food.getType().toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"brendanlsz"},"content":"            lines.append(name).append(DELIMITER).append(calories)","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"brendanlsz"},"content":"                    .append(DELIMITER).append(type).append(System.lineSeparator());","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"brendanlsz"},"content":"        return lines.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"aaapppsss"},"content":"    public void preLoadDatabase(BufferedReader reader) throws IOException, FitNusException {","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"brendanlsz"},"content":"        int preloadFoodCount \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"brendanlsz"},"content":"        String line;","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"brendanlsz"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"brendanlsz"},"content":"            String[] description \u003d line.trim().split(\"\\\\s*[|]\\\\s*\");","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"aaapppsss"},"content":"            //assert description.length \u003d\u003d 4 : \"description does not contain both name and calories\";","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"brendanlsz"},"content":"            try {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"aaapppsss"},"content":"                String name \u003d description[0].strip();","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"praj-bellakka"},"content":"                //assert name.equals(\"\") \u003d\u003d false : \"name field cannot only contain white spaces\";","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"aaapppsss"},"content":"                String caloriesString \u003d description[1].strip();","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"aaapppsss"},"content":"                assert caloriesString.equals(\"\") \u003d\u003d false : \"calories field cannot only contain white spaces\";","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"brendanlsz"},"content":"                Food.FoodType type \u003d Parser.parseFoodType(description[2]);","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"aaapppsss"},"content":"                Integer calories \u003d Integer.parseInt(caloriesString);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"brendanlsz"},"content":"                this.addFood(name, calories, type);","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"brendanlsz"},"content":"                preloadFoodCount++;","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"brendanlsz"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"brendanlsz"},"content":"                Ui.printPreloadDatabaseError();","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"brendanlsz"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"brendanlsz"},"content":"        System.out.println(\"Successfully preloaded \" + preloadFoodCount + \" foods\");","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"brendanlsz"},"content":"    public ArrayList\u003cFood\u003e findFood(String keyword) throws FitNusException {","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"brendanlsz"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"brendanlsz"},"content":"            throw new FitNusException(\"Please provide a valid keyword\");","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"brendanlsz"},"content":"        return (ArrayList\u003cFood\u003e) databaseFoods.stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"brendanlsz"},"content":"                .filter(t -\u003e t.getName().contains(keyword))","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"brendanlsz"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"brendanlsz"},"content":"    public ArrayList\u003cFood\u003e findSuggestions(Food.FoodType type, int calories, boolean isSort) {","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"brendanlsz"},"content":"        ArrayList\u003cFood\u003e matchingSuggestions \u003d (ArrayList\u003cFood\u003e) databaseFoods.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"brendanlsz"},"content":"                .filter(t -\u003e t.getType().equals(type))","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"brendanlsz"},"content":"                .filter(c -\u003e c.getCalories() \u003c calories)","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"brendanlsz"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"brendanlsz"},"content":"        if (isSort) {","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"brendanlsz"},"content":"            matchingSuggestions.sort(Comparator.comparing(Food::getCalories));","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"brendanlsz"},"content":"        return matchingSuggestions;","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"kengjit":9,"brendanlsz":68,"siyuancheng178":7,"aaapppsss":15,"praj-bellakka":6}},{"path":"src/main/java/fitnus/exception/FitNusException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praj-bellakka"},"content":"package fitnus.exception;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"public class FitNusException extends Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"    public FitNusException(String exception) {","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"        super(exception);","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kengjit":6,"praj-bellakka":1}},{"path":"src/main/java/fitnus/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praj-bellakka"},"content":"package fitnus.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import fitnus.command.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import fitnus.command.HelpCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import fitnus.command.EditFoodEntryCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"import fitnus.command.DeleteFoodEntryCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"import fitnus.command.ViewMonthSummaryCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"import fitnus.command.ViewWeekSummaryCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"import fitnus.command.AddFoodEntryCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"import fitnus.command.ListFoodEntryAllCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"import fitnus.command.ListFoodEntryDayCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"import fitnus.command.ListFoodEntryWeekCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"import fitnus.command.FindEntryCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"import fitnus.command.FindFoodCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"import fitnus.command.GenerateCalorieGoalCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"import fitnus.command.ListFoodDatabaseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"import fitnus.command.ListWeightProgressCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"import fitnus.command.SetAgeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"import fitnus.command.SetCalorieGoalCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"import fitnus.command.SetGenderCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"import fitnus.command.SetHeightCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"import fitnus.command.ViewEachCategoryCalorieCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"import fitnus.command.SetWeightCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"import fitnus.command.ExitCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"import fitnus.command.ViewRemainingCalorieCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"import fitnus.command.ViewSuggestionsCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"import fitnus.tracker.MealType;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"brendanlsz"},"content":"import fitnus.utility.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"brendanlsz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"brendanlsz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"praj-bellakka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"brendanlsz"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"brendanlsz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"brendanlsz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"praj-bellakka"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"praj-bellakka"},"content":" * Handles the extraction of user inputs into relevant components.","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"praj-bellakka"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"aaapppsss"},"content":"public class Parser {","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"brendanlsz"},"content":"    //Logger object","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"brendanlsz"},"content":"    private static final Logger logger \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"siyuancheng178"},"content":"    private static final String SPACE_CHARACTER \u003d \" \";","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"siyuancheng178"},"content":"    private static final String BACKSLASH_CHARACTER \u003d \"/\";","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"siyuancheng178"},"content":"    private static final String PIPE_CHARACTER \u003d \"|\";","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"praj-bellakka"},"content":"    //main command types","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"siyuancheng178"},"content":"    private static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"siyuancheng178"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"kengjit"},"content":"    private static final String COMMAND_EDIT \u003d \"edit\";","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"siyuancheng178"},"content":"    private static final String COMMAND_CALORIE \u003d \"calorie\";","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"siyuancheng178"},"content":"    private static final String COMMAND_REMOVE \u003d \"remove\";","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"siyuancheng178"},"content":"    private static final String COMMAND_GENDER \u003d \"gender\";","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"brendanlsz"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"brendanlsz"},"content":"    private static final String COMMAND_SUGGEST \u003d \"suggest\";","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"kengjit"},"content":"    private static final String COMMAND_SUMMARY \u003d \"summary\";","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"praj-bellakka"},"content":"    //specific descriptors of the main command types","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"praj-bellakka"},"content":"    private static final String DESCRIPTOR_CUSTOM \u003d \"/cust\";","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"praj-bellakka"},"content":"    private static final String DESCRIPTOR_FOOD \u003d \"/food\";","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"kengjit"},"content":"    private static final String DESCRIPTOR_INTAKE \u003d \"/entry\";","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"praj-bellakka"},"content":"    private static final String DESCRIPTOR_DEFAULT \u003d \"/def\";","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"praj-bellakka"},"content":"    private static final String DESCRIPTOR_REMAIN \u003d \"/remain\";","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"praj-bellakka"},"content":"    private static final String DESCRIPTOR_SET \u003d \"/set\";","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"praj-bellakka"},"content":"    public static final int INVALID_INPUT \u003d -1;","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"kengjit"},"content":"    public static final String INVALID_COMMAND_MESSAGE \u003d \"That was an invalid command! PLease try again!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"brendanlsz"},"content":"    // FoodType related strings","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"brendanlsz"},"content":"    private static final String MEAL \u003d \"/meal\";","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"brendanlsz"},"content":"    private static final String BEVERAGE \u003d \"/beverage\";","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"brendanlsz"},"content":"    private static final String SNACK \u003d \"/snack\";","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"brendanlsz"},"content":"    private static final String OTHERS \u003d \"/others\";","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"kengjit"},"content":"    // Summary related strings","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"kengjit"},"content":"    private static final String WEEK \u003d \"/week\";","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"kengjit"},"content":"    private static final String MONTH \u003d \"/month\";","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"praj-bellakka"},"content":"    public static final int CALORIE_LIMIT \u003d 5000;","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"praj-bellakka"},"content":"    private static boolean isLoopFlagOn \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"praj-bellakka"},"content":"    public Command parseCommandType(String input, FoodDatabase fd) throws FitNusException {","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"praj-bellakka"},"content":"        String[] splitString \u003d input.strip().split(SPACE_CHARACTER);","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"siyuancheng178"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"siyuancheng178"},"content":"            int spaceIndex \u003d input.indexOf(SPACE_CHARACTER);","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"praj-bellakka"},"content":"            /**","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"praj-bellakka"},"content":"             * If no space is detected, the input does not contain any tracker related actions.","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"praj-bellakka"},"content":"             * Help, Exit or Invalid command will be returned based on the input.","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"praj-bellakka"},"content":"             */","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"praj-bellakka"},"content":"            if (spaceIndex \u003d\u003d INVALID_INPUT) {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"praj-bellakka"},"content":"                assert spaceIndex \u003c 0 : \"Illegal input\";","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"siyuancheng178"},"content":"                switch (input) {","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"siyuancheng178"},"content":"                case \"help\":","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"siyuancheng178"},"content":"                    return new HelpCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"siyuancheng178"},"content":"                case \"exit\":","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"siyuancheng178"},"content":"                    return new ExitCommand();","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"siyuancheng178"},"content":"                default:","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"kengjit"},"content":"                    throw new FitNusException(INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"siyuancheng178"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"praj-bellakka"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"praj-bellakka"},"content":"            String inputCommandType \u003d input.substring(0, spaceIndex);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"praj-bellakka"},"content":"            String subString \u003d input.substring(spaceIndex).trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"praj-bellakka"},"content":"            if (inputCommandType.equals(COMMAND_ADD)) { //add custom food","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"praj-bellakka"},"content":"                return parseAddTypeCommand(subString, fd);","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"praj-bellakka"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"praj-bellakka"},"content":"            if (inputCommandType.equals(COMMAND_LIST)) { //list type command","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"siyuancheng178"},"content":"                return parseListTypeCommand(subString);","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"praj-bellakka"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"kengjit"},"content":"            if (inputCommandType.equals(COMMAND_EDIT)) { //edit type command","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"kengjit"},"content":"                return parseEditTypeCommand(subString, fd);","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"kengjit"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"praj-bellakka"},"content":"            if (inputCommandType.equals(COMMAND_CALORIE)) { //calorie type command","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"siyuancheng178"},"content":"                return parseCalorieTypeCommand(subString);","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"praj-bellakka"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"praj-bellakka"},"content":"            if (inputCommandType.equals(COMMAND_GENDER)) { //gender type command","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"siyuancheng178"},"content":"                return parseGenderTypeCommand(subString);","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"praj-bellakka"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"praj-bellakka"},"content":"            if (inputCommandType.equals(COMMAND_REMOVE)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"siyuancheng178"},"content":"                return parseRemoveTypeCommand(subString);","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"praj-bellakka"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"brendanlsz"},"content":"            if (inputCommandType.equals(COMMAND_FIND)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"brendanlsz"},"content":"                return parseFindCommand(subString);","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"brendanlsz"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"brendanlsz"},"content":"            if (inputCommandType.equals(COMMAND_SUGGEST)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"brendanlsz"},"content":"                return parseSuggestCommand(subString);","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"brendanlsz"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"kengjit"},"content":"            if (inputCommandType.equals(COMMAND_SUMMARY)) { //summary type command","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"kengjit"},"content":"                return parseSummaryCommand(subString);","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"kengjit"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"praj-bellakka"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"kengjit"},"content":"            throw new FitNusException(\"Input format is not correct. Follow the one stated!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"praj-bellakka"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"kengjit"},"content":"            throw new FitNusException(\"Input value is not an integer!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"praj-bellakka"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"kengjit"},"content":"            throw new FitNusException(\"Did you forget to write the full command? :)\");","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"kengjit"},"content":"        throw new FitNusException(INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"praj-bellakka"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"praj-bellakka"},"content":"     * Function handles adding food command,by taking in an input string and the food database.","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"praj-bellakka"},"content":"     * The function finds the MealType of the food using {@link #parseMealType(String)}.If no meal type was added by","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"praj-bellakka"},"content":"     * the user, it will be automatically allocated based on time of day using {@link #findMealTypeTiming()}.","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"praj-bellakka"},"content":"     * The food is then searched thorugh the database using FoodDatabase. If food match exists, user will be prompted to","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"praj-bellakka"},"content":"     * either select from an existing foodlist by entering its index, or create a custom food by entering \u003c0\u003e.","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"praj-bellakka"},"content":"     * If no food match exists, the user will be prompted to enter the food\u0027s calorie between 0 to 5000.","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"praj-bellakka"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"praj-bellakka"},"content":"     * @param input String containing food name and mealtype (optional).","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"praj-bellakka"},"content":"     * @param fd    FoodDatabase object passed from Main(), containing food in database.","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"praj-bellakka"},"content":"     * @return Command object","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"praj-bellakka"},"content":"     * @throws FitNusException Thrown when foodname is empty.","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"praj-bellakka"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"praj-bellakka"},"content":"    private Command parseAddTypeCommand(String input, FoodDatabase fd) throws FitNusException {","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"praj-bellakka"},"content":"        //step 1: find meal category and food name","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"praj-bellakka"},"content":"        int spaceCharacterIndex \u003d input.indexOf(SPACE_CHARACTER);","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"praj-bellakka"},"content":"        String mealTypeString \u003d \"\";","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"praj-bellakka"},"content":"        if (spaceCharacterIndex \u003d\u003d -1) {","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"praj-bellakka"},"content":"            mealTypeString \u003d input;","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"praj-bellakka"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"praj-bellakka"},"content":"            mealTypeString \u003d input.substring(0, input.indexOf(SPACE_CHARACTER));","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"praj-bellakka"},"content":"        MealType mealType \u003d parseMealType(mealTypeString, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"praj-bellakka"},"content":"        String foodName \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"praj-bellakka"},"content":"        //if mealType is null, user didn\u0027t specify the command -\u003e auto tag the meal type","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"praj-bellakka"},"content":"        if (mealType.equals(MealType.UNDEFINED)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"praj-bellakka"},"content":"            //TODO: Add a print statement that tells user that food category has been auto added","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"praj-bellakka"},"content":"            mealType \u003d mealType.findMealTypeTiming();","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"brendanlsz"},"content":"            foodName \u003d input.strip();","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"praj-bellakka"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"brendanlsz"},"content":"            foodName \u003d input.substring(input.indexOf(SPACE_CHARACTER)).strip();","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"praj-bellakka"},"content":"        //step 2: search database if food exists","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"praj-bellakka"},"content":"        ArrayList\u003cFood\u003e tempFoodDb \u003d fd.findFood(foodName);","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"praj-bellakka"},"content":"        Ui newUi \u003d new Ui();","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"brendanlsz"},"content":"        Ui.printMatchingFoods(tempFoodDb); //search database for match","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"praj-bellakka"},"content":"        int userInputLoop;","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"praj-bellakka"},"content":"        //step 3a: prompt the user the suggestions if matches are found","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"praj-bellakka"},"content":"        if (tempFoodDb.size() \u003e 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"praj-bellakka"},"content":"            //TODO: Beautify the print statement","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"praj-bellakka"},"content":"            System.out.println(\"Select the food you want by entering the number below. \"","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"praj-bellakka"},"content":"                    + \"If the food doesn\u0027t exist, enter 0 to create a new custom food!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"praj-bellakka"},"content":"            return returnUserInput(mealType, foodName, tempFoodDb, newUi, true);","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"praj-bellakka"},"content":"        } else if (tempFoodDb.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"praj-bellakka"},"content":"            //step 3b: prompt the user to input calorie if not match","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"praj-bellakka"},"content":"            System.out.println(\"The food you specified does not exist in the database!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"praj-bellakka"},"content":"            return returnUserInput(mealType, foodName, tempFoodDb, newUi, false);","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"praj-bellakka"},"content":"        return null;","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"praj-bellakka"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"praj-bellakka"},"content":"     * Function is responsible for receiving input from the user again during the adding of food phase.","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"praj-bellakka"},"content":"     * If the user inputs an invalid entry for calorie, i.e. negative or non-integers, the function continues looping.","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"praj-bellakka"},"content":"     * If the user inputs an invalid entry for selecting choice, i.e. out of range, negative or non-integer,","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"praj-bellakka"},"content":"     * the function wll continue looping.","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"praj-bellakka"},"content":"     * {@link #isLoopFlagOn} breakLoopFlag is set to false when user prompt loop is not needed, else loop continues.","lastModifiedDate":"2021-10-22"},{"lineNumber":217,"author":{"gitId":"praj-bellakka"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"praj-bellakka"},"content":"     * @param mealType        Type of meal.","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"praj-bellakka"},"content":"     * @param foodName        String name of food.","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"praj-bellakka"},"content":"     * @param tempFoodDb      An arraylist containing Food items matching user entry.","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"praj-bellakka"},"content":"     * @param newUi           Ui element responsible for receiving user input through CLI.","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"praj-bellakka"},"content":"     * @param multipleEntries Boolean variable to run custom food entry. If true, function uses existing food items.","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"praj-bellakka"},"content":"     * @return AddFoodEntryCommand Command object containing relevant details.","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"praj-bellakka"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"brendanlsz"},"content":"    private AddFoodEntryCommand returnUserInput(MealType mealType, String foodName, ArrayList\u003cFood\u003e tempFoodDb,","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"brendanlsz"},"content":"                                                Ui newUi, boolean multipleEntries) {","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"praj-bellakka"},"content":"        int userInput \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"praj-bellakka"},"content":"        if (multipleEntries) {","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"praj-bellakka"},"content":"            do {","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"praj-bellakka"},"content":"                userInput \u003d parseInteger(newUi.readInput(), tempFoodDb.size());","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"praj-bellakka"},"content":"            } while (isLoopFlagOn);","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"praj-bellakka"},"content":"        /**","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"praj-bellakka"},"content":"         * If user input is 0, the user specified his input to a be a custom food.","lastModifiedDate":"2021-10-20"},{"lineNumber":236,"author":{"gitId":"praj-bellakka"},"content":"         * Thus the new loop below will prompt the user to input the calories.","lastModifiedDate":"2021-10-20"},{"lineNumber":237,"author":{"gitId":"praj-bellakka"},"content":"         */","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"praj-bellakka"},"content":"        if (userInput \u003d\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"praj-bellakka"},"content":"            System.out.println(\"Adding new custom food. Enter the calories of the food\");","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"praj-bellakka"},"content":"            isLoopFlagOn \u003d false;","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"praj-bellakka"},"content":"            do {","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"praj-bellakka"},"content":"                userInput \u003d parseInteger(newUi.readInput()); //getting calories","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"praj-bellakka"},"content":"            } while (isLoopFlagOn);","lastModifiedDate":"2021-10-22"},{"lineNumber":244,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"brendanlsz"},"content":"            Food.FoodType type \u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":246,"author":{"gitId":"brendanlsz"},"content":"            do {","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"brendanlsz"},"content":"                System.out.println(\"Enter food category (meal, snack, beverage, others):\");","lastModifiedDate":"2021-10-23"},{"lineNumber":248,"author":{"gitId":"brendanlsz"},"content":"                type \u003d parseFoodType(newUi.readInput());","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"brendanlsz"},"content":"            } while (type \u003d\u003d null);","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"brendanlsz"},"content":"            return new AddFoodEntryCommand(mealType, foodName, userInput, type);","lastModifiedDate":"2021-10-22"},{"lineNumber":252,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"praj-bellakka"},"content":"        return new AddFoodEntryCommand(mealType, tempFoodDb.get(userInput - 1));","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"kengjit"},"content":"    private EditFoodEntryCommand returnUserInput(int index, String foodName, ArrayList\u003cFood\u003e tempFoodDb,","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"kengjit"},"content":"                                                Ui newUi, boolean multipleEntries) {","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"kengjit"},"content":"        int userInput \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"kengjit"},"content":"        if (multipleEntries) {","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"kengjit"},"content":"            do {","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"kengjit"},"content":"                userInput \u003d parseInteger(newUi.readInput(), tempFoodDb.size());","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"kengjit"},"content":"            } while (isLoopFlagOn);","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"kengjit"},"content":"        /**","lastModifiedDate":"2021-10-24"},{"lineNumber":266,"author":{"gitId":"kengjit"},"content":"         * If user input is 0, the user specified his input to be a custom food.","lastModifiedDate":"2021-10-24"},{"lineNumber":267,"author":{"gitId":"kengjit"},"content":"         * Thus the new loop below will prompt the user to input the calories.","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"kengjit"},"content":"         */","lastModifiedDate":"2021-10-24"},{"lineNumber":269,"author":{"gitId":"kengjit"},"content":"        if (userInput \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":270,"author":{"gitId":"kengjit"},"content":"            System.out.println(\"Adding new custom food. Enter the calories of the food\");","lastModifiedDate":"2021-10-24"},{"lineNumber":271,"author":{"gitId":"kengjit"},"content":"            isLoopFlagOn \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"kengjit"},"content":"            do {","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"kengjit"},"content":"                userInput \u003d parseInteger(newUi.readInput()); //getting calories","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"kengjit"},"content":"            } while (isLoopFlagOn);","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":276,"author":{"gitId":"kengjit"},"content":"            Food.FoodType type \u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":277,"author":{"gitId":"kengjit"},"content":"            do {","lastModifiedDate":"2021-10-24"},{"lineNumber":278,"author":{"gitId":"kengjit"},"content":"                System.out.println(\"Enter food category (meal, snack, beverage, others):\");","lastModifiedDate":"2021-10-24"},{"lineNumber":279,"author":{"gitId":"kengjit"},"content":"                type \u003d parseFoodType(newUi.readInput());","lastModifiedDate":"2021-10-24"},{"lineNumber":280,"author":{"gitId":"kengjit"},"content":"            } while (type \u003d\u003d null);","lastModifiedDate":"2021-10-24"},{"lineNumber":281,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":282,"author":{"gitId":"kengjit"},"content":"            return new EditFoodEntryCommand(index, foodName, userInput, type);","lastModifiedDate":"2021-10-24"},{"lineNumber":283,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"kengjit"},"content":"        return new EditFoodEntryCommand(index, tempFoodDb.get(userInput - 1));","lastModifiedDate":"2021-10-24"},{"lineNumber":285,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":286,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":287,"author":{"gitId":"brendanlsz"},"content":"    public static Food.FoodType parseFoodType(String type) {","lastModifiedDate":"2021-10-22"},{"lineNumber":288,"author":{"gitId":"brendanlsz"},"content":"        String typeString \u003d type.toLowerCase(Locale.ROOT);","lastModifiedDate":"2021-10-22"},{"lineNumber":289,"author":{"gitId":"brendanlsz"},"content":"        switch (typeString) {","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"brendanlsz"},"content":"        case \"snack\":","lastModifiedDate":"2021-10-22"},{"lineNumber":291,"author":{"gitId":"brendanlsz"},"content":"            return Food.FoodType.SNACK;","lastModifiedDate":"2021-10-22"},{"lineNumber":292,"author":{"gitId":"brendanlsz"},"content":"        case \"beverage\":","lastModifiedDate":"2021-10-22"},{"lineNumber":293,"author":{"gitId":"brendanlsz"},"content":"            return Food.FoodType.BEVERAGE;","lastModifiedDate":"2021-10-22"},{"lineNumber":294,"author":{"gitId":"brendanlsz"},"content":"        case \"meal\":","lastModifiedDate":"2021-10-22"},{"lineNumber":295,"author":{"gitId":"brendanlsz"},"content":"            return Food.FoodType.MEAL;","lastModifiedDate":"2021-10-22"},{"lineNumber":296,"author":{"gitId":"brendanlsz"},"content":"        case \"others\":","lastModifiedDate":"2021-10-23"},{"lineNumber":297,"author":{"gitId":"brendanlsz"},"content":"            return Food.FoodType.OTHERS;","lastModifiedDate":"2021-10-22"},{"lineNumber":298,"author":{"gitId":"brendanlsz"},"content":"        default:","lastModifiedDate":"2021-10-23"},{"lineNumber":299,"author":{"gitId":"brendanlsz"},"content":"            return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":300,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":301,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"praj-bellakka"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"praj-bellakka"},"content":"     * Function takes in an input that may contain the meal type and a boolean databaseRequest.","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"praj-bellakka"},"content":"     * If the meal type matches the predefined MealType enum, the matching MealType is returned.","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"praj-bellakka"},"content":"     * Otherwise, UNDEFINED is returned.","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"praj-bellakka"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"praj-bellakka"},"content":"     * @param input           Input that may contain the meal type.","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"praj-bellakka"},"content":"     * @param databaseRequest Boolean representing if method is being called for the database.","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"praj-bellakka"},"content":"     * @return MealType if a match is found; UNDEFINED MealType otherwise.","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"praj-bellakka"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"praj-bellakka"},"content":"    public static MealType parseMealType(String input, boolean databaseRequest) {","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"praj-bellakka"},"content":"        if (databaseRequest) {","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"praj-bellakka"},"content":"            switch (input) {","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"praj-bellakka"},"content":"            case \"Breakfast\":","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"praj-bellakka"},"content":"                return MealType.BREAKFAST;","lastModifiedDate":"2021-10-21"},{"lineNumber":317,"author":{"gitId":"praj-bellakka"},"content":"            case \"Lunch\":","lastModifiedDate":"2021-10-21"},{"lineNumber":318,"author":{"gitId":"praj-bellakka"},"content":"                return MealType.LUNCH;","lastModifiedDate":"2021-10-21"},{"lineNumber":319,"author":{"gitId":"praj-bellakka"},"content":"            case \"Dinner\":","lastModifiedDate":"2021-10-21"},{"lineNumber":320,"author":{"gitId":"praj-bellakka"},"content":"                return MealType.DINNER;","lastModifiedDate":"2021-10-21"},{"lineNumber":321,"author":{"gitId":"praj-bellakka"},"content":"            case \"Snack\":","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"praj-bellakka"},"content":"                return MealType.SNACK;","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"praj-bellakka"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":324,"author":{"gitId":"praj-bellakka"},"content":"                return MealType.UNDEFINED;","lastModifiedDate":"2021-10-21"},{"lineNumber":325,"author":{"gitId":"praj-bellakka"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":326,"author":{"gitId":"praj-bellakka"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":327,"author":{"gitId":"praj-bellakka"},"content":"            switch (input) {","lastModifiedDate":"2021-10-21"},{"lineNumber":328,"author":{"gitId":"praj-bellakka"},"content":"            case \"/bfast\":","lastModifiedDate":"2021-10-21"},{"lineNumber":329,"author":{"gitId":"praj-bellakka"},"content":"                return MealType.BREAKFAST;","lastModifiedDate":"2021-10-21"},{"lineNumber":330,"author":{"gitId":"praj-bellakka"},"content":"            case \"/lunch\":","lastModifiedDate":"2021-10-21"},{"lineNumber":331,"author":{"gitId":"praj-bellakka"},"content":"                return MealType.LUNCH;","lastModifiedDate":"2021-10-21"},{"lineNumber":332,"author":{"gitId":"praj-bellakka"},"content":"            case \"/dinner\":","lastModifiedDate":"2021-10-21"},{"lineNumber":333,"author":{"gitId":"praj-bellakka"},"content":"                return MealType.DINNER;","lastModifiedDate":"2021-10-21"},{"lineNumber":334,"author":{"gitId":"praj-bellakka"},"content":"            case \"/snack\":","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"praj-bellakka"},"content":"                return MealType.SNACK;","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"praj-bellakka"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"praj-bellakka"},"content":"                return MealType.UNDEFINED;","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"praj-bellakka"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"praj-bellakka"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":343,"author":{"gitId":"praj-bellakka"},"content":"     * Function parses integers from user input when the while loop inside","lastModifiedDate":"2021-10-20"},{"lineNumber":344,"author":{"gitId":"praj-bellakka"},"content":"     * {@link #parseAddTypeCommand(String, FoodDatabase)} parseAddTypeCommand} is running.","lastModifiedDate":"2021-10-20"},{"lineNumber":345,"author":{"gitId":"praj-bellakka"},"content":"     * Returns integer if found within range, else -1.","lastModifiedDate":"2021-10-20"},{"lineNumber":346,"author":{"gitId":"praj-bellakka"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":347,"author":{"gitId":"praj-bellakka"},"content":"     * @param input User input.","lastModifiedDate":"2021-10-20"},{"lineNumber":348,"author":{"gitId":"praj-bellakka"},"content":"     * @param size  Size of temporary database.","lastModifiedDate":"2021-10-20"},{"lineNumber":349,"author":{"gitId":"praj-bellakka"},"content":"     * @return Integer input by the user. If invalid integer or out of range, -1 is returned.","lastModifiedDate":"2021-10-20"},{"lineNumber":350,"author":{"gitId":"praj-bellakka"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":351,"author":{"gitId":"praj-bellakka"},"content":"    private int parseInteger(String input, int size) {","lastModifiedDate":"2021-10-20"},{"lineNumber":352,"author":{"gitId":"praj-bellakka"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":353,"author":{"gitId":"praj-bellakka"},"content":"            int val \u003d Integer.parseInt(input.strip());","lastModifiedDate":"2021-10-20"},{"lineNumber":354,"author":{"gitId":"praj-bellakka"},"content":"            if (val \u003e\u003d 0 \u0026\u0026 val \u003c\u003d size) {","lastModifiedDate":"2021-10-20"},{"lineNumber":355,"author":{"gitId":"praj-bellakka"},"content":"                isLoopFlagOn \u003d false;","lastModifiedDate":"2021-10-22"},{"lineNumber":356,"author":{"gitId":"praj-bellakka"},"content":"                return val;","lastModifiedDate":"2021-10-20"},{"lineNumber":357,"author":{"gitId":"praj-bellakka"},"content":"            } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":358,"author":{"gitId":"praj-bellakka"},"content":"                System.out.println(\"The input is outside the range of the database!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":359,"author":{"gitId":"praj-bellakka"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":360,"author":{"gitId":"praj-bellakka"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":361,"author":{"gitId":"praj-bellakka"},"content":"            //TODO: add proper Ui print message;","lastModifiedDate":"2021-10-20"},{"lineNumber":362,"author":{"gitId":"praj-bellakka"},"content":"            System.out.println(\"Please enter an integer value!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":363,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":364,"author":{"gitId":"praj-bellakka"},"content":"        isLoopFlagOn \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":365,"author":{"gitId":"praj-bellakka"},"content":"        return -1;","lastModifiedDate":"2021-10-20"},{"lineNumber":366,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":367,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":368,"author":{"gitId":"praj-bellakka"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":369,"author":{"gitId":"praj-bellakka"},"content":"     * Function parses integers from user input when the while loop","lastModifiedDate":"2021-10-20"},{"lineNumber":370,"author":{"gitId":"praj-bellakka"},"content":"     * inside {@link #parseAddTypeCommand(String, FoodDatabase)} parseAddTypeCommand} is running.","lastModifiedDate":"2021-10-20"},{"lineNumber":371,"author":{"gitId":"praj-bellakka"},"content":"     * Returns calories of food if input is valid, else returns -1.","lastModifiedDate":"2021-10-21"},{"lineNumber":372,"author":{"gitId":"praj-bellakka"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":373,"author":{"gitId":"praj-bellakka"},"content":"     * @param input Input containing the calories.","lastModifiedDate":"2021-10-20"},{"lineNumber":374,"author":{"gitId":"praj-bellakka"},"content":"     * @return Integer value of the calories.","lastModifiedDate":"2021-10-20"},{"lineNumber":375,"author":{"gitId":"praj-bellakka"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":376,"author":{"gitId":"praj-bellakka"},"content":"    private int parseInteger(String input) {","lastModifiedDate":"2021-10-20"},{"lineNumber":377,"author":{"gitId":"praj-bellakka"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":378,"author":{"gitId":"praj-bellakka"},"content":"            int val \u003d Integer.parseInt(input.strip());","lastModifiedDate":"2021-10-20"},{"lineNumber":379,"author":{"gitId":"praj-bellakka"},"content":"            if (val \u003e 0 \u0026\u0026 val \u003c\u003d CALORIE_LIMIT) {","lastModifiedDate":"2021-10-21"},{"lineNumber":380,"author":{"gitId":"praj-bellakka"},"content":"                isLoopFlagOn \u003d false;","lastModifiedDate":"2021-10-22"},{"lineNumber":381,"author":{"gitId":"praj-bellakka"},"content":"                return val;","lastModifiedDate":"2021-10-20"},{"lineNumber":382,"author":{"gitId":"praj-bellakka"},"content":"            } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":383,"author":{"gitId":"praj-bellakka"},"content":"                System.out.println(\"Calories can only be between 0 and 5000!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":384,"author":{"gitId":"praj-bellakka"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":385,"author":{"gitId":"praj-bellakka"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":386,"author":{"gitId":"praj-bellakka"},"content":"            //TODO: add proper Ui print message;","lastModifiedDate":"2021-10-20"},{"lineNumber":387,"author":{"gitId":"praj-bellakka"},"content":"            System.out.println(\"Please enter an integer value!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":388,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":389,"author":{"gitId":"praj-bellakka"},"content":"        isLoopFlagOn \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":390,"author":{"gitId":"praj-bellakka"},"content":"        return -1;","lastModifiedDate":"2021-10-20"},{"lineNumber":391,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":392,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":393,"author":{"gitId":"praj-bellakka"},"content":"    private Command parseRemoveTypeCommand(String input) throws FitNusException {","lastModifiedDate":"2021-10-21"},{"lineNumber":394,"author":{"gitId":"praj-bellakka"},"content":"        int typeDescriptorIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2021-10-21"},{"lineNumber":395,"author":{"gitId":"praj-bellakka"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":396,"author":{"gitId":"praj-bellakka"},"content":"            return new DeleteFoodEntryCommand(Integer.parseInt(input","lastModifiedDate":"2021-10-21"},{"lineNumber":397,"author":{"gitId":"praj-bellakka"},"content":"                    .substring(typeDescriptorIndex).trim()));","lastModifiedDate":"2021-10-21"},{"lineNumber":398,"author":{"gitId":"praj-bellakka"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":399,"author":{"gitId":"praj-bellakka"},"content":"            throw new FitNusException(\"Input value is not an integer!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":400,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":401,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":402,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":403,"author":{"gitId":"praj-bellakka"},"content":"    private Command parseListTypeCommand(String input) throws FitNusException {","lastModifiedDate":"2021-10-21"},{"lineNumber":404,"author":{"gitId":"praj-bellakka"},"content":"        int typeDescriptorIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2021-10-21"},{"lineNumber":405,"author":{"gitId":"praj-bellakka"},"content":"        if (typeDescriptorIndex \u003d\u003d -1) {","lastModifiedDate":"2021-10-21"},{"lineNumber":406,"author":{"gitId":"praj-bellakka"},"content":"            if (input.equals(DESCRIPTOR_FOOD)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":407,"author":{"gitId":"praj-bellakka"},"content":"                return new ListFoodDatabaseCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":408,"author":{"gitId":"kengjit"},"content":"            } else if (input.equals(DESCRIPTOR_INTAKE)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":409,"author":{"gitId":"kengjit"},"content":"                return new ListFoodEntryAllCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":410,"author":{"gitId":"kengjit"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":411,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":412,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":413,"author":{"gitId":"kengjit"},"content":"        if (input.contains(DESCRIPTOR_INTAKE)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":414,"author":{"gitId":"kengjit"},"content":"            String timeFrame \u003d input.substring(typeDescriptorIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":415,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":416,"author":{"gitId":"kengjit"},"content":"            switch (timeFrame) {","lastModifiedDate":"2021-10-24"},{"lineNumber":417,"author":{"gitId":"kengjit"},"content":"            case \" /day\":","lastModifiedDate":"2021-10-24"},{"lineNumber":418,"author":{"gitId":"kengjit"},"content":"                return new ListFoodEntryDayCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":419,"author":{"gitId":"kengjit"},"content":"            case \" /week\":","lastModifiedDate":"2021-10-24"},{"lineNumber":420,"author":{"gitId":"kengjit"},"content":"                return new ListFoodEntryWeekCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":421,"author":{"gitId":"kengjit"},"content":"            default:","lastModifiedDate":"2021-10-24"},{"lineNumber":422,"author":{"gitId":"kengjit"},"content":"                throw new FitNusException(\"Invalid timeframe! (/day, /week)\");","lastModifiedDate":"2021-10-24"},{"lineNumber":423,"author":{"gitId":"praj-bellakka"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":424,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":425,"author":{"gitId":"praj-bellakka"},"content":"        throw new FitNusException(INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-21"},{"lineNumber":426,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":427,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":428,"author":{"gitId":"siyuancheng178"},"content":"    private Command parseCalorieTypeCommand(String input) throws FitNusException {","lastModifiedDate":"2021-10-12"},{"lineNumber":429,"author":{"gitId":"siyuancheng178"},"content":"        int typeDescriptorIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2021-10-12"},{"lineNumber":430,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":431,"author":{"gitId":"siyuancheng178"},"content":"        if (typeDescriptorIndex \u003d\u003d -1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":432,"author":{"gitId":"siyuancheng178"},"content":"            if (input.equals(DESCRIPTOR_REMAIN)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":433,"author":{"gitId":"siyuancheng178"},"content":"                return new ViewRemainingCalorieCommand();","lastModifiedDate":"2021-10-09"},{"lineNumber":434,"author":{"gitId":"siyuancheng178"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":435,"author":{"gitId":"siyuancheng178"},"content":"            throw new FitNusException(INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":436,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":437,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":438,"author":{"gitId":"siyuancheng178"},"content":"        String typeDescriptor \u003d input.substring(0, typeDescriptorIndex).trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":439,"author":{"gitId":"brendanlsz"},"content":"        if (DESCRIPTOR_SET.equals(typeDescriptor)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":440,"author":{"gitId":"siyuancheng178"},"content":"            int calorieGoal \u003d Integer.parseInt(input.substring(typeDescriptorIndex).trim());","lastModifiedDate":"2021-10-12"},{"lineNumber":441,"author":{"gitId":"siyuancheng178"},"content":"            return new SetCalorieGoalCommand(calorieGoal);","lastModifiedDate":"2021-10-12"},{"lineNumber":442,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":443,"author":{"gitId":"brendanlsz"},"content":"        throw new FitNusException(INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":444,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":445,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":446,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":447,"author":{"gitId":"siyuancheng178"},"content":"    private Command parseGenderTypeCommand(String input) throws FitNusException {","lastModifiedDate":"2021-10-12"},{"lineNumber":448,"author":{"gitId":"siyuancheng178"},"content":"        int typeDescriptorIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2021-10-12"},{"lineNumber":449,"author":{"gitId":"siyuancheng178"},"content":"        String typeDescriptor \u003d input.substring(0, typeDescriptorIndex).trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":450,"author":{"gitId":"siyuancheng178"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":451,"author":{"gitId":"siyuancheng178"},"content":"            if (typeDescriptor.equals(DESCRIPTOR_SET)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":452,"author":{"gitId":"siyuancheng178"},"content":"                String gender \u003d input.substring(typeDescriptorIndex).trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":453,"author":{"gitId":"siyuancheng178"},"content":"                if (gender.toLowerCase().equals(\"m\") || gender.toLowerCase().equals(\"f\")) {","lastModifiedDate":"2021-10-23"},{"lineNumber":454,"author":{"gitId":"siyuancheng178"},"content":"                    return new SetGenderCommand(gender);","lastModifiedDate":"2021-10-23"},{"lineNumber":455,"author":{"gitId":"siyuancheng178"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":456,"author":{"gitId":"siyuancheng178"},"content":"                throw new FitNusException(\"Invalid input! Please input m for male or \"","lastModifiedDate":"2021-10-23"},{"lineNumber":457,"author":{"gitId":"siyuancheng178"},"content":"                        + \"f for female when setting your gender.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":458,"author":{"gitId":"siyuancheng178"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":459,"author":{"gitId":"siyuancheng178"},"content":"        } catch (FitNusException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":460,"author":{"gitId":"siyuancheng178"},"content":"            throw e;","lastModifiedDate":"2021-10-23"},{"lineNumber":461,"author":{"gitId":"siyuancheng178"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":462,"author":{"gitId":"siyuancheng178"},"content":"            throw new FitNusException(INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":463,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":464,"author":{"gitId":"kengjit"},"content":"        throw new FitNusException(INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":465,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":466,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":467,"author":{"gitId":"brendanlsz"},"content":"    private Command parseFindCommand(String input) throws FitNusException {","lastModifiedDate":"2021-10-19"},{"lineNumber":468,"author":{"gitId":"brendanlsz"},"content":"        if (input.contains(\"/food\")) {","lastModifiedDate":"2021-10-19"},{"lineNumber":469,"author":{"gitId":"brendanlsz"},"content":"            int typeDescriptorIndex \u003d input.indexOf(\"/food\");","lastModifiedDate":"2021-10-19"},{"lineNumber":470,"author":{"gitId":"brendanlsz"},"content":"            String keyword \u003d input.substring(typeDescriptorIndex + 6);","lastModifiedDate":"2021-10-19"},{"lineNumber":471,"author":{"gitId":"brendanlsz"},"content":"            return new FindFoodCommand(keyword);","lastModifiedDate":"2021-10-19"},{"lineNumber":472,"author":{"gitId":"brendanlsz"},"content":"        } else if (input.contains(\"/entry\")) {","lastModifiedDate":"2021-10-19"},{"lineNumber":473,"author":{"gitId":"brendanlsz"},"content":"            int typeDescriptorIndex \u003d input.indexOf(\"/entry\");","lastModifiedDate":"2021-10-19"},{"lineNumber":474,"author":{"gitId":"brendanlsz"},"content":"            String keyword \u003d input.substring(typeDescriptorIndex + 7);","lastModifiedDate":"2021-10-19"},{"lineNumber":475,"author":{"gitId":"brendanlsz"},"content":"            return new FindEntryCommand(keyword);","lastModifiedDate":"2021-10-19"},{"lineNumber":476,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":477,"author":{"gitId":"brendanlsz"},"content":"        throw new FitNusException(\"parse find error\");","lastModifiedDate":"2021-10-19"},{"lineNumber":478,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":479,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":480,"author":{"gitId":"brendanlsz"},"content":"    private Command parseSuggestCommand(String input) throws FitNusException {","lastModifiedDate":"2021-10-23"},{"lineNumber":481,"author":{"gitId":"brendanlsz"},"content":"        boolean isSort \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":482,"author":{"gitId":"brendanlsz"},"content":"        if (input.contains(\"/sort\")) {","lastModifiedDate":"2021-10-23"},{"lineNumber":483,"author":{"gitId":"brendanlsz"},"content":"            isSort \u003d true;","lastModifiedDate":"2021-10-23"},{"lineNumber":484,"author":{"gitId":"brendanlsz"},"content":"            int spaceIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":485,"author":{"gitId":"brendanlsz"},"content":"            input \u003d input.substring(0, spaceIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":486,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":487,"author":{"gitId":"brendanlsz"},"content":"        switch (input) {","lastModifiedDate":"2021-10-23"},{"lineNumber":488,"author":{"gitId":"brendanlsz"},"content":"        case MEAL:","lastModifiedDate":"2021-10-23"},{"lineNumber":489,"author":{"gitId":"brendanlsz"},"content":"            return new ViewSuggestionsCommand(Food.FoodType.MEAL, isSort);","lastModifiedDate":"2021-10-23"},{"lineNumber":490,"author":{"gitId":"brendanlsz"},"content":"        case SNACK:","lastModifiedDate":"2021-10-23"},{"lineNumber":491,"author":{"gitId":"brendanlsz"},"content":"            return new ViewSuggestionsCommand(Food.FoodType.SNACK, isSort);","lastModifiedDate":"2021-10-23"},{"lineNumber":492,"author":{"gitId":"brendanlsz"},"content":"        case BEVERAGE:","lastModifiedDate":"2021-10-23"},{"lineNumber":493,"author":{"gitId":"brendanlsz"},"content":"            return new ViewSuggestionsCommand(Food.FoodType.BEVERAGE, isSort);","lastModifiedDate":"2021-10-23"},{"lineNumber":494,"author":{"gitId":"brendanlsz"},"content":"        case OTHERS:","lastModifiedDate":"2021-10-23"},{"lineNumber":495,"author":{"gitId":"brendanlsz"},"content":"            return new ViewSuggestionsCommand(Food.FoodType.OTHERS, isSort);","lastModifiedDate":"2021-10-23"},{"lineNumber":496,"author":{"gitId":"brendanlsz"},"content":"        default:","lastModifiedDate":"2021-10-23"},{"lineNumber":497,"author":{"gitId":"brendanlsz"},"content":"            throw new FitNusException(\"Parse suggest error\");","lastModifiedDate":"2021-10-23"},{"lineNumber":498,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":499,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":500,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":501,"author":{"gitId":"kengjit"},"content":"    private Command parseSummaryCommand(String input) throws FitNusException {","lastModifiedDate":"2021-10-24"},{"lineNumber":502,"author":{"gitId":"kengjit"},"content":"        if (input.equals(WEEK)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":503,"author":{"gitId":"kengjit"},"content":"            return new ViewWeekSummaryCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":504,"author":{"gitId":"kengjit"},"content":"        } else if (input.equals(MONTH)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":505,"author":{"gitId":"kengjit"},"content":"            return new ViewMonthSummaryCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":506,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":507,"author":{"gitId":"kengjit"},"content":"        throw new FitNusException(\"That is an invalid summary timeframe (/week or /month)\");","lastModifiedDate":"2021-10-24"},{"lineNumber":508,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":509,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":510,"author":{"gitId":"kengjit"},"content":"    private Command parseEditTypeCommand(String input, FoodDatabase fd) throws FitNusException {","lastModifiedDate":"2021-10-24"},{"lineNumber":511,"author":{"gitId":"kengjit"},"content":"        int typeDescriptorIndex \u003d input.indexOf(SPACE_CHARACTER);","lastModifiedDate":"2021-10-24"},{"lineNumber":512,"author":{"gitId":"kengjit"},"content":"        int entryIndex \u003d Integer.parseInt(input.substring(0, typeDescriptorIndex));","lastModifiedDate":"2021-10-24"},{"lineNumber":513,"author":{"gitId":"kengjit"},"content":"        String foodName \u003d input.substring(input.indexOf(SPACE_CHARACTER)).strip();","lastModifiedDate":"2021-10-24"},{"lineNumber":514,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":515,"author":{"gitId":"kengjit"},"content":"        //step 2: search database if food exists","lastModifiedDate":"2021-10-24"},{"lineNumber":516,"author":{"gitId":"kengjit"},"content":"        ArrayList\u003cFood\u003e tempFoodDb \u003d fd.findFood(foodName);","lastModifiedDate":"2021-10-24"},{"lineNumber":517,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":518,"author":{"gitId":"kengjit"},"content":"        Ui newUi \u003d new Ui();","lastModifiedDate":"2021-10-24"},{"lineNumber":519,"author":{"gitId":"kengjit"},"content":"        Ui.printMatchingFoods(tempFoodDb); //search database for match","lastModifiedDate":"2021-10-24"},{"lineNumber":520,"author":{"gitId":"kengjit"},"content":"        int userInputLoop;","lastModifiedDate":"2021-10-24"},{"lineNumber":521,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":522,"author":{"gitId":"kengjit"},"content":"        //step 3a: prompt the user the suggestions if matches are found","lastModifiedDate":"2021-10-24"},{"lineNumber":523,"author":{"gitId":"kengjit"},"content":"        if (tempFoodDb.size() \u003e 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":524,"author":{"gitId":"kengjit"},"content":"            //TODO: Beautify the print statement","lastModifiedDate":"2021-10-24"},{"lineNumber":525,"author":{"gitId":"kengjit"},"content":"            System.out.println(\"Select the food you want by entering the number below. \"","lastModifiedDate":"2021-10-24"},{"lineNumber":526,"author":{"gitId":"kengjit"},"content":"                    + \"If the food doesn\u0027t exist, enter 0 to create a new custom food!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":527,"author":{"gitId":"kengjit"},"content":"            return returnUserInput(entryIndex, foodName, tempFoodDb, newUi, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":528,"author":{"gitId":"kengjit"},"content":"        } else if (tempFoodDb.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":529,"author":{"gitId":"kengjit"},"content":"            //step 3b: prompt the user to input calorie if not match","lastModifiedDate":"2021-10-24"},{"lineNumber":530,"author":{"gitId":"kengjit"},"content":"            System.out.println(\"The food you specified does not exist in the database!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":531,"author":{"gitId":"kengjit"},"content":"            return returnUserInput(entryIndex, foodName, tempFoodDb, newUi, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":532,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":533,"author":{"gitId":"kengjit"},"content":"        throw new FitNusException(\"Edit Parser Error\");","lastModifiedDate":"2021-10-24"},{"lineNumber":534,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":535,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":536,"author":{"gitId":"brendanlsz"},"content":"    private static LocalDate parseDate(String description) {","lastModifiedDate":"2021-10-09"},{"lineNumber":537,"author":{"gitId":"brendanlsz"},"content":"        LocalDate date;","lastModifiedDate":"2021-10-09"},{"lineNumber":538,"author":{"gitId":"brendanlsz"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":539,"author":{"gitId":"brendanlsz"},"content":"            date \u003d LocalDate.parse(description);","lastModifiedDate":"2021-10-09"},{"lineNumber":540,"author":{"gitId":"brendanlsz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-09"},{"lineNumber":541,"author":{"gitId":"brendanlsz"},"content":"            return null;","lastModifiedDate":"2021-10-09"},{"lineNumber":542,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":543,"author":{"gitId":"brendanlsz"},"content":"        return date;","lastModifiedDate":"2021-10-09"},{"lineNumber":544,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":545,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":546,"author":{"gitId":"brendanlsz"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":547,"author":{"gitId":"brendanlsz"},"content":"     * Attempts to parse a given String and returns a","lastModifiedDate":"2021-10-09"},{"lineNumber":548,"author":{"gitId":"brendanlsz"},"content":"     * LocalDate object if successful.","lastModifiedDate":"2021-10-09"},{"lineNumber":549,"author":{"gitId":"brendanlsz"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":550,"author":{"gitId":"brendanlsz"},"content":"     * @param line Description String to be parsed.","lastModifiedDate":"2021-10-09"},{"lineNumber":551,"author":{"gitId":"brendanlsz"},"content":"     * @return A LocalDate object if successful, returns null otherwise.","lastModifiedDate":"2021-10-09"},{"lineNumber":552,"author":{"gitId":"brendanlsz"},"content":"     * @throws FitNusException If unable to parse the input String.","lastModifiedDate":"2021-10-10"},{"lineNumber":553,"author":{"gitId":"brendanlsz"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":554,"author":{"gitId":"brendanlsz"},"content":"    public static LocalDate getDate(String line) throws FitNusException {","lastModifiedDate":"2021-10-10"},{"lineNumber":555,"author":{"gitId":"brendanlsz"},"content":"        assert !line.equals(\"\") : \"String line should not be empty\";","lastModifiedDate":"2021-10-10"},{"lineNumber":556,"author":{"gitId":"brendanlsz"},"content":"        String[] description \u003d line.split(\" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":557,"author":{"gitId":"brendanlsz"},"content":"        LocalDate date;","lastModifiedDate":"2021-10-09"},{"lineNumber":558,"author":{"gitId":"brendanlsz"},"content":"        for (String s : description) {","lastModifiedDate":"2021-10-09"},{"lineNumber":559,"author":{"gitId":"brendanlsz"},"content":"            date \u003d parseDate(s);","lastModifiedDate":"2021-10-09"},{"lineNumber":560,"author":{"gitId":"brendanlsz"},"content":"            if (date !\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":561,"author":{"gitId":"brendanlsz"},"content":"                return date;","lastModifiedDate":"2021-10-09"},{"lineNumber":562,"author":{"gitId":"brendanlsz"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":563,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":564,"author":{"gitId":"brendanlsz"},"content":"        logger.log(Level.INFO, \"Could not parse date\");","lastModifiedDate":"2021-10-12"},{"lineNumber":565,"author":{"gitId":"brendanlsz"},"content":"        throw new FitNusException(\"Error parsing date!!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":566,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":567,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":568,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"kengjit":127,"brendanlsz":119,"siyuancheng178":61,"aaapppsss":7,"praj-bellakka":254}},{"path":"src/main/java/fitnus/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanlsz"},"content":"package fitnus.storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"brendanlsz"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"brendanlsz"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"brendanlsz"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"brendanlsz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"brendanlsz"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"brendanlsz"},"content":"import java.io.File;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"brendanlsz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"brendanlsz"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"brendanlsz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"brendanlsz"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"public class Storage {","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"brendanlsz"},"content":"    private static final String ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"brendanlsz"},"content":"    private static final Path DIRECTORY_PATH \u003d Paths.get(ROOT, \"data\");","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"brendanlsz"},"content":"    private static final Path FILE_PATH_FOOD_DATA \u003d Paths.get(ROOT, \"data\", \"food.txt\");","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"brendanlsz"},"content":"    private static final Path FILE_PATH_USER_DATA \u003d Paths.get(ROOT, \"data\", \"user.txt\");","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"brendanlsz"},"content":"    private static final Path FILE_PATH_ENTRY_DATA \u003d Paths.get(ROOT, \"data\", \"entry.txt\");","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"    private static final Path FILE_PATH_WEIGHT_DATA \u003d Paths.get(ROOT, \"data\", \"weight.txt\");","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"brendanlsz"},"content":"    public static void createDirectoryAndFiles() throws IOException {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"brendanlsz"},"content":"        createDirectory(DIRECTORY_PATH.toString());","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"brendanlsz"},"content":"        createFile(FILE_PATH_FOOD_DATA.toString());","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"brendanlsz"},"content":"        createFile(FILE_PATH_USER_DATA.toString());","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"brendanlsz"},"content":"        createFile(FILE_PATH_ENTRY_DATA.toString());","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"brendanlsz"},"content":"        assert Files.exists(DIRECTORY_PATH);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"brendanlsz"},"content":"        assert Files.exists(FILE_PATH_FOOD_DATA);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"brendanlsz"},"content":"        assert Files.exists(FILE_PATH_USER_DATA);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"brendanlsz"},"content":"        assert Files.exists(FILE_PATH_ENTRY_DATA);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"aaapppsss"},"content":"    public static void initialiseFoodDatabase(FoodDatabase database) throws IOException, FitNusException {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"brendanlsz"},"content":"        assert Files.exists(FILE_PATH_FOOD_DATA);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"brendanlsz"},"content":"        FileInputStream stream;","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"brendanlsz"},"content":"        stream \u003d new FileInputStream(FILE_PATH_FOOD_DATA.toString());","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"brendanlsz"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(stream));","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"brendanlsz"},"content":"        database.preLoadDatabase(reader);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"brendanlsz"},"content":"        reader.close();","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"brendanlsz"},"content":"    public static void initialiseEntryDatabase(EntryDatabase database) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"brendanlsz"},"content":"        assert Files.exists(FILE_PATH_ENTRY_DATA);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"brendanlsz"},"content":"        FileInputStream stream;","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"brendanlsz"},"content":"        stream \u003d new FileInputStream(FILE_PATH_ENTRY_DATA.toString());","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"brendanlsz"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(stream));","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"brendanlsz"},"content":"        database.preLoadDatabase(reader);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"brendanlsz"},"content":"        reader.close();","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"aaapppsss"},"content":"    public static int initialiseUser(User user) throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"brendanlsz"},"content":"        assert Files.exists(FILE_PATH_USER_DATA);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"brendanlsz"},"content":"        FileInputStream stream;","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"brendanlsz"},"content":"        stream \u003d new FileInputStream(FILE_PATH_USER_DATA.toString());","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"brendanlsz"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(stream));","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"aaapppsss"},"content":"        int userDataIsValid \u003d user.preloadUserData(reader);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"brendanlsz"},"content":"        reader.close();","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"aaapppsss"},"content":"        if (userDataIsValid \u003d\u003d 1) {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"aaapppsss"},"content":"            return 1; //success","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"aaapppsss"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"aaapppsss"},"content":"            return 0; //failure","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"aaapppsss"},"content":"    public static void initialiseWeightProgress(User user) throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"aaapppsss"},"content":"        assert Files.exists(FILE_PATH_WEIGHT_DATA);","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"aaapppsss"},"content":"        FileInputStream stream;","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"aaapppsss"},"content":"        stream \u003d new FileInputStream(FILE_PATH_WEIGHT_DATA.toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"aaapppsss"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(stream));","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"aaapppsss"},"content":"        user.preloadWeightData(reader);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"aaapppsss"},"content":"        reader.close();","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"brendanlsz"},"content":"    public static void saveFoodDatabase(FoodDatabase database) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"brendanlsz"},"content":"        assert Files.exists(FILE_PATH_FOOD_DATA);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"brendanlsz"},"content":"        String data \u003d database.convertDatabaseToString();","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"brendanlsz"},"content":"        saveData(FILE_PATH_FOOD_DATA.toString(), data);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"brendanlsz"},"content":"    public static void saveEntryDatabase(EntryDatabase database) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"brendanlsz"},"content":"        assert Files.exists(FILE_PATH_ENTRY_DATA);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"brendanlsz"},"content":"        String data \u003d database.convertDatabaseToString();","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"brendanlsz"},"content":"        saveData(FILE_PATH_ENTRY_DATA.toString(), data);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"brendanlsz"},"content":"    public static void saveUserData(User user) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"brendanlsz"},"content":"        assert Files.exists(FILE_PATH_USER_DATA);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"brendanlsz"},"content":"        String userData \u003d user.convertUserDataToString();","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"brendanlsz"},"content":"        saveData(FILE_PATH_USER_DATA.toString(), userData);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"aaapppsss"},"content":"    public static void saveWeightData(User user) throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"aaapppsss"},"content":"        assert Files.exists(FILE_PATH_WEIGHT_DATA);","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"aaapppsss"},"content":"        String weightData \u003d user.convertWeightDataToString();","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"aaapppsss"},"content":"        saveData(FILE_PATH_WEIGHT_DATA.toString(), weightData);","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"brendanlsz"},"content":"    private static void saveData(String filePath, String content) throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"brendanlsz"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"brendanlsz"},"content":"        FileWriter fw;","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"brendanlsz"},"content":"        fw \u003d new FileWriter(file);","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"brendanlsz"},"content":"        fw.write(content);","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"brendanlsz"},"content":"        fw.close();","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    // @@author brendanlsz-reused","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    // Reused from https://www.tutorialspoint.com/java/io/file_createnewfile.htm","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    // with modifications","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private static void createFile(String filePath) throws IOException {","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        boolean hasCreatedFile \u003d file.createNewFile();","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (hasCreatedFile) {","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            System.out.println(\"File created at \" + file.getCanonicalPath());","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    // @@author brendanlsz-reused","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    // Reused from https://www.tutorialspoint.com/java/io/file_mkdir.htm","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    // with modifications","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private static void createDirectory(String directoryPath) {","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        boolean hasCreatedDirectory \u003d directory.mkdir();","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (hasCreatedDirectory) {","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            System.out.println(\"New directory created at \" + directoryPath);","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"brendanlsz":79,"-":23,"aaapppsss":27,"praj-bellakka":4}},{"path":"src/main/java/fitnus/tracker/Entry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praj-bellakka"},"content":"package fitnus.tracker;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"siyuancheng178"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"siyuancheng178"},"content":"public class Entry {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"    private final MealType mealType;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"    private Food food;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    public Entry(MealType mealType, Food food) {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"        this.mealType \u003d mealType;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"siyuancheng178"},"content":"        this.food \u003d food;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"brendanlsz"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"    public Entry(MealType mealType, Food food, LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"        this.mealType \u003d mealType;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"brendanlsz"},"content":"        this.food \u003d food;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"brendanlsz"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"siyuancheng178"},"content":"        assert !date.isAfter(LocalDate.now()) : \"date should not be later than today\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"siyuancheng178"},"content":"    public Food getFood() {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"siyuancheng178"},"content":"        return this.food;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"    public void setFood(Food food) {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"        this.food \u003d food;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"brendanlsz"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"brendanlsz"},"content":"     * Gets the date and converts it to the specified format. Then,","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"brendanlsz"},"content":"     * returns the formatted date as a String.","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"brendanlsz"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"brendanlsz"},"content":"     * @return Formatted date as a String.","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"brendanlsz"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"brendanlsz"},"content":"    public String getDate() {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"brendanlsz"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"brendanlsz"},"content":"        return date.format(formatter);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"siyuancheng178"},"content":"    public LocalDate getRawDate() {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"siyuancheng178"},"content":"        return this.date;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kengjit"},"content":"    public MealType getMealType() {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"kengjit"},"content":"        return this.mealType;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"kengjit"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kengjit"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"brendanlsz"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"brendanlsz"},"content":"        String date \u003d this.date.format(formatter);","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"kengjit"},"content":"        return \"[\" + date + \"] \" + mealType + \": \" + food.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kengjit":20,"brendanlsz":16,"siyuancheng178":21,"praj-bellakka":3}},{"path":"src/main/java/fitnus/tracker/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praj-bellakka"},"content":"package fitnus.tracker;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"aaapppsss"},"content":"public class Food {","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"brendanlsz"},"content":"    private final String name;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"brendanlsz"},"content":"    private final Integer calories;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"brendanlsz"},"content":"    private final FoodType type;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"brendanlsz"},"content":"    public enum FoodType {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"brendanlsz"},"content":"        SNACK,","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"brendanlsz"},"content":"        MEAL,","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"brendanlsz"},"content":"        BEVERAGE,","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"brendanlsz"},"content":"        OTHERS","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"brendanlsz"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"brendanlsz"},"content":"     * Constructor.","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"brendanlsz"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"brendanlsz"},"content":"     * @param name     Name of food.","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"brendanlsz"},"content":"     * @param calories Calorie value of food.","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"brendanlsz"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"brendanlsz"},"content":"    public Food(String name, Integer calories, FoodType type) {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"siyuancheng178"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"siyuancheng178"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"brendanlsz"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"brendanlsz"},"content":"    public String getName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"brendanlsz"},"content":"        return this.name;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"brendanlsz"},"content":"    public Integer getCalories() {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"brendanlsz"},"content":"        return this.calories;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"brendanlsz"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"brendanlsz"},"content":"     * Returns a String representation of the food object","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"brendanlsz"},"content":"     * including its name and calorie value.","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"brendanlsz"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"brendanlsz"},"content":"     * @return String representation of food object.","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"brendanlsz"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"brendanlsz"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"brendanlsz"},"content":"    public String toString() {","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"siyuancheng178"},"content":"        assert calories \u003e 0 : \"calorie of food should not be less than or equal to 0\";","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"brendanlsz"},"content":"        return this.name + \" (\" + this.calories + \" Kcal)\" + \" Category: \" + type.toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"brendanlsz"},"content":"    public FoodType getType() {","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"brendanlsz"},"content":"        return this.type;","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"siyuancheng178"},"content":"    public String convertToStringForStorage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"siyuancheng178"},"content":"        assert calories \u003e 0 : \"calorie of food should not be less than or equal to 0\";","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"siyuancheng178"},"content":"        return String.format(\"%s | %s\", this.name, this.calories);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"brendanlsz":40,"siyuancheng178":11,"aaapppsss":3,"praj-bellakka":1}},{"path":"src/main/java/fitnus/tracker/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"siyuancheng178"},"content":"package fitnus.tracker;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"siyuancheng178"},"content":"public enum Gender {","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"siyuancheng178"},"content":"    MALE {","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"siyuancheng178"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"siyuancheng178"},"content":"        public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"siyuancheng178"},"content":"            return \"m\";","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"siyuancheng178"},"content":"    },","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"siyuancheng178"},"content":"    FEMALE {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"siyuancheng178"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"siyuancheng178"},"content":"        public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"siyuancheng178"},"content":"            return \"f\";","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"siyuancheng178"},"content":"    };","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"siyuancheng178"},"content":"    public static Gender findGender(String gender) {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"siyuancheng178"},"content":"        if (gender.toLowerCase().equals(\"m\")) {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"siyuancheng178"},"content":"            return Gender.MALE;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"siyuancheng178"},"content":"        } else if (gender.toLowerCase().equals(\"f\")) {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"siyuancheng178"},"content":"            return Gender.FEMALE;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"siyuancheng178"},"content":"        return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"siyuancheng178":28}},{"path":"src/main/java/fitnus/tracker/MealType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package fitnus.tracker;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"public enum MealType {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"    BREAKFAST {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"        public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"            return \"Breakfast\";","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"    },","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    LUNCH {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"        public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"            return \"Lunch\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"    },","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"    DINNER {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"        public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"            return \"Dinner\";","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"    },","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"    SNACK {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"        public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"            return \"Snack\";","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"praj-bellakka"},"content":"    },","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"praj-bellakka"},"content":"    UNDEFINED {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"praj-bellakka"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"praj-bellakka"},"content":"        public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"praj-bellakka"},"content":"            return \"Undefined\";","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"praj-bellakka"},"content":"    };","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"praj-bellakka"},"content":"    //predefined breakfast, lunch and dinner timings (in 24hrs)","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"praj-bellakka"},"content":"    private static final int BREAKFAST_HOUR_LOWER \u003d 6; //6am","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"praj-bellakka"},"content":"    private static final int BREAKFAST_HOUR_UPPER \u003d 10; //10am","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"praj-bellakka"},"content":"    private static final int LUNCH_HOUR_LOWER \u003d 11; //11am","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"praj-bellakka"},"content":"    private static final int LUNCH_HOUR_UPPER \u003d 14; //2pm","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"praj-bellakka"},"content":"    private static final int DINNER_HOUR_LOWER \u003d 18; //6pm","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"praj-bellakka"},"content":"    private static final int DINNER_HOUR_UPPER \u003d 21; //9pm","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"praj-bellakka"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"praj-bellakka"},"content":"     * Finds the current hour (in 24hrs) using system LocalDateTime object.","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"praj-bellakka"},"content":"     * The relevant MealType is returned based on the hourOfDay.","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"praj-bellakka"},"content":"     * 6am to 10am: Breakfast.","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"praj-bellakka"},"content":"     * 11am to 2pm: Lunch.","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"praj-bellakka"},"content":"     * 6pm to 9pm: Dinner.","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"praj-bellakka"},"content":"     * Otherwise: Snack.","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"praj-bellakka"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"praj-bellakka"},"content":"     * @return MealType based on hourOfDay.","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"praj-bellakka"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"praj-bellakka"},"content":"    public MealType findMealTypeTiming() {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"praj-bellakka"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"praj-bellakka"},"content":"        int hourOfDay \u003d currentTime.getHour();","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"praj-bellakka"},"content":"        if (hourOfDay \u003e\u003d BREAKFAST_HOUR_LOWER \u0026\u0026 hourOfDay \u003c BREAKFAST_HOUR_UPPER) {","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"praj-bellakka"},"content":"            return MealType.BREAKFAST;","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"praj-bellakka"},"content":"        } else if (hourOfDay \u003e\u003d LUNCH_HOUR_LOWER \u0026\u0026 hourOfDay \u003c LUNCH_HOUR_UPPER) {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"praj-bellakka"},"content":"            return MealType.LUNCH;","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"praj-bellakka"},"content":"        } else if (hourOfDay \u003e\u003d DINNER_HOUR_LOWER \u0026\u0026 hourOfDay \u003c DINNER_HOUR_UPPER) {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"praj-bellakka"},"content":"            return MealType.DINNER;","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"praj-bellakka"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"praj-bellakka"},"content":"            return MealType.SNACK; //if current time is outside of these hours, the person is assumed to eat snack.","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"praj-bellakka"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kengjit":28,"praj-bellakka":41}},{"path":"src/main/java/fitnus/tracker/Summary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package fitnus.tracker;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"siyuancheng178"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"siyuancheng178"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"siyuancheng178"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"public class Summary {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"siyuancheng178"},"content":"    private static final int UNIT_PER_SQUARE \u003d 100;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"siyuancheng178"},"content":"    private static final String SQUARE \u003d \"■\";","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"brendanlsz"},"content":"    private final ArrayList\u003cEntry\u003e entries;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"brendanlsz"},"content":"    private final int days;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"siyuancheng178"},"content":"    public Summary(EntryDatabase ed, int days) {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"siyuancheng178"},"content":"        ed.sortDatabase();","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"siyuancheng178"},"content":"        this.days \u003d days;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"siyuancheng178"},"content":"        this.entries \u003d ed.getEntries();","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"siyuancheng178"},"content":"    private String getMostAndLeastEatenFood() {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"siyuancheng178"},"content":"        HashMap\u003cString, Integer\u003e occurrence \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"siyuancheng178"},"content":"        for (Entry i : entries) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"            String foodName \u003d i.getFood().getName();","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"            occurrence.compute(foodName, (key, val) -\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"                if (val \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"siyuancheng178"},"content":"                    return 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"siyuancheng178"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"                return val + 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"siyuancheng178"},"content":"            });","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"        ArrayList\u003cString\u003e mostFrequentFoods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"        ArrayList\u003cString\u003e leastFrequentFoods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"siyuancheng178"},"content":"        int maxOccurrence \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"siyuancheng178"},"content":"        int minOccurrence \u003d entries.size();","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"        // Iterates through hashmap entries to find most frequent food","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"        for (Map.Entry\u003cString, Integer\u003e e : occurrence.entrySet()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"            if (e.getValue() \u003e maxOccurrence) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"                // Update max val and most freq foods","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"                maxOccurrence \u003d e.getValue();","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"                mostFrequentFoods.clear();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kengjit"},"content":"                mostFrequentFoods.add(e.getKey());","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"            } else if (e.getValue() \u003d\u003d maxOccurrence) {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kengjit"},"content":"                // Add food to most freq foods","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kengjit"},"content":"                mostFrequentFoods.add(e.getKey());","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kengjit"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kengjit"},"content":"        // Iterates through hashmap entries to find least frequent food","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kengjit"},"content":"        for (Map.Entry\u003cString, Integer\u003e e : occurrence.entrySet()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kengjit"},"content":"            if (e.getValue() \u003c minOccurrence) {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kengjit"},"content":"                // Update min val and least freq foods","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kengjit"},"content":"                minOccurrence \u003d e.getValue();","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kengjit"},"content":"                leastFrequentFoods.clear();","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kengjit"},"content":"                leastFrequentFoods.add(e.getKey());","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kengjit"},"content":"            } else if (e.getValue() \u003d\u003d minOccurrence) {","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kengjit"},"content":"                // Add food to least freq foods","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kengjit"},"content":"                leastFrequentFoods.add(e.getKey());","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kengjit"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kengjit"},"content":"        return String.format(\"Food eaten most: %s [%d time(s)]\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kengjit"},"content":"                        + \"Food eaten least: %s [%d time(s)]\",","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kengjit"},"content":"                mostFrequentFoods, maxOccurrence,","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kengjit"},"content":"                leastFrequentFoods, minOccurrence);","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kengjit"},"content":"    private int getAverageCalories() {","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kengjit"},"content":"        int totalCalories \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kengjit"},"content":"        int totalNumEntries \u003d entries.size();","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"kengjit"},"content":"        for (Entry e : entries) {","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kengjit"},"content":"            totalCalories +\u003d e.getFood().getCalories();","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"siyuancheng178"},"content":"        return totalCalories / days;","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"siyuancheng178"},"content":"    private static String drawGraphSquares(int calorie, int unit) {","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"brendanlsz"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"siyuancheng178"},"content":"        for (int i \u003d 0; i \u003c calorie / unit; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"siyuancheng178"},"content":"            builder.append(SQUARE);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"siyuancheng178"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"siyuancheng178"},"content":"    private String getWeekCalorieTrendGraph() {","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"brendanlsz"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"siyuancheng178"},"content":"        LocalDate date \u003d LocalDate.now().minusDays(6);","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"siyuancheng178"},"content":"        int calories \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"siyuancheng178"},"content":"        int j \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"siyuancheng178"},"content":"        for (int i \u003d 0; i \u003c entries.size(); i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"siyuancheng178"},"content":"            if (!entries.get(i).getRawDate().isBefore(date)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"siyuancheng178"},"content":"                j \u003d i;","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"siyuancheng178"},"content":"                break;","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"siyuancheng178"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"siyuancheng178"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"siyuancheng178"},"content":"        do {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"siyuancheng178"},"content":"            if (j \u003c entries.size() \u0026\u0026 entries.get(j).getRawDate().equals(date)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"siyuancheng178"},"content":"                calories +\u003d entries.get(j).getFood().getCalories();","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"siyuancheng178"},"content":"                j++;","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"siyuancheng178"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"siyuancheng178"},"content":"                output.append(String.format(\"%s: %s %d\\n\", date,","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"siyuancheng178"},"content":"                        drawGraphSquares(calories, UNIT_PER_SQUARE), calories));","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"siyuancheng178"},"content":"                date \u003d date.plusDays(1);","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"siyuancheng178"},"content":"                calories \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"siyuancheng178"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"siyuancheng178"},"content":"        } while (!date.isAfter(LocalDate.now()));","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"siyuancheng178"},"content":"        return output.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"kengjit"},"content":"    public String generateWeekSummaryReport() {","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"siyuancheng178"},"content":"        if (entries.size() \u003c 1) {","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"kengjit"},"content":"            return \"No entries found!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"siyuancheng178"},"content":"        int averageCalories \u003d getAverageCalories();","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"siyuancheng178"},"content":"        String output \u003d String.format(getWeekCalorieTrendGraph()","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"siyuancheng178"},"content":"                + \"Average Daily Calorie Intake: %s %d\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"siyuancheng178"},"content":"                + getMostAndLeastEatenFood(), drawGraphSquares(averageCalories, UNIT_PER_SQUARE), averageCalories","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"siyuancheng178"},"content":"        );","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"kengjit"},"content":"        return output;","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"kengjit"},"content":"    public String generateMonthSummaryReport() {","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"kengjit"},"content":"        if (entries.size() \u003c 1) {","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"kengjit"},"content":"            return \"No entries found!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"kengjit"},"content":"        String output \u003d String.format(\"Average Daily Calorie Intake: %d\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"kengjit"},"content":"                        + getMostAndLeastEatenFood(),","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"kengjit"},"content":"                getAverageCalories());","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"kengjit"},"content":"        return output;","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kengjit":64,"brendanlsz":5,"siyuancheng178":72}},{"path":"src/main/java/fitnus/tracker/WeightProgressEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aaapppsss"},"content":"package fitnus.tracker;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aaapppsss"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aaapppsss"},"content":"public class WeightProgressEntry {","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aaapppsss"},"content":"    private float weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"    private LocalDate date;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"    public WeightProgressEntry(float weight, LocalDate date) {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"    public void setWeight(float weight) {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"    public float getWeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"        return weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aaapppsss"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"aaapppsss"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"aaapppsss"},"content":"        return date;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aaapppsss":30}},{"path":"src/main/java/fitnus/utility/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praj-bellakka"},"content":"package fitnus.utility;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"brendanlsz"},"content":"import fitnus.command.FindFoodCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"brendanlsz"},"content":"import fitnus.tracker.Entry;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"brendanlsz"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"brendanlsz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"siyuancheng178"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"public class Ui {","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"brendanlsz"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    public static final String WELCOME_MESSAGE \u003d \"------------------ \\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"            + \"Welcome to FitNUS Tracker!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"brendanlsz"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"        println(WELCOME_MESSAGE);","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"brendanlsz"},"content":"    public static void println(String message) {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"brendanlsz"},"content":"    public static void print(String message) {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"        System.out.print(message);","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"brendanlsz"},"content":"    public static void printPreloadDatabaseError() {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"brendanlsz"},"content":"        System.out.println(\"Error encountered while preloading database :(\"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"brendanlsz"},"content":"                + \" some data may have been lost\");","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"brendanlsz"},"content":"    public static void printPreloadUserError() {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"brendanlsz"},"content":"        System.out.println(\"Error encountered while preloading user data :(\");","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"siyuancheng178"},"content":"    public String readInput() {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"siyuancheng178"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"siyuancheng178"},"content":"        do {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"siyuancheng178"},"content":"            userInput \u003d sc.nextLine().toLowerCase().trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"siyuancheng178"},"content":"            if (userInput.equals(\"\")) {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"brendanlsz"},"content":"                println(\"Input cannot be empty! Please try again\");","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"siyuancheng178"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"siyuancheng178"},"content":"        } while (userInput.equals(\"\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"siyuancheng178"},"content":"        assert !userInput.trim().equals(\"\") : \"input cannot be empty\";","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"siyuancheng178"},"content":"        return userInput;","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"brendanlsz"},"content":"    private static void printNoMatchingResults() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"brendanlsz"},"content":"        String message \u003d \" Sorry, no matching results found!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"brendanlsz"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"brendanlsz"},"content":"    public static void printMatchingFoods(ArrayList\u003cFood\u003e matchingFoods) {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"brendanlsz"},"content":"        if (matchingFoods.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"brendanlsz"},"content":"            printNoMatchingResults();","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"brendanlsz"},"content":"            return;","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"brendanlsz"},"content":"        System.out.println(\" Here are the matching foods in your database:\");","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"brendanlsz"},"content":"        for (int i \u003d 1; i \u003c\u003d matchingFoods.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"brendanlsz"},"content":"            System.out.println(\" \" + i + \".\"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"brendanlsz"},"content":"                    + matchingFoods.get(i - 1).toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"brendanlsz"},"content":"    public static void printMatchingEntries(ArrayList\u003cEntry\u003e matchingEntries) {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"brendanlsz"},"content":"        if (matchingEntries.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"brendanlsz"},"content":"            printNoMatchingResults();","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"brendanlsz"},"content":"            return;","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"brendanlsz"},"content":"        System.out.println(\" Here are the matching entries in your database:\");","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"brendanlsz"},"content":"        for (int i \u003d 1; i \u003c\u003d matchingEntries.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"brendanlsz"},"content":"            System.out.println(\" \" + i + \".\"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"brendanlsz"},"content":"                    + matchingEntries.get(i - 1).toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"brendanlsz"},"content":"    public static void printMatchingSuggestions(ArrayList\u003cFood\u003e matchingFoods) {","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"brendanlsz"},"content":"        if (matchingFoods.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"brendanlsz"},"content":"            printNoMatchingResults();","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"brendanlsz"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"brendanlsz"},"content":"        System.out.println(\" Here are some suggestions:\");","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"brendanlsz"},"content":"        for (int i \u003d 1; i \u003c\u003d matchingFoods.size(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"brendanlsz"},"content":"            System.out.println(\" \" + i + \".\"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"brendanlsz"},"content":"                    + matchingFoods.get(i - 1).toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"kengjit":6,"brendanlsz":60,"siyuancheng178":11,"aaapppsss":11,"praj-bellakka":1}},{"path":"src/main/java/fitnus/utility/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praj-bellakka"},"content":"package fitnus.utility;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.tracker.Gender;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"import fitnus.tracker.WeightProgressEntry;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"brendanlsz"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"brendanlsz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"public class User {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"siyuancheng178"},"content":"    private int calorieGoal;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"siyuancheng178"},"content":"    private Gender gender;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"    private int age;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"    private int height;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"    private float weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"    private final ArrayList\u003cWeightProgressEntry\u003e weightProgressEntries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"    private static final int MALE \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"    private static final int FEMALE \u003d 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"    private static final String DELIMITER \u003d \" | \";","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"aaapppsss"},"content":"    private static final String GAIN_STRING \u003d \"gain\";","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"    private static final String LOSE_STRING \u003d \"lose\";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"siyuancheng178"},"content":"    public User(Gender gender, int calorieGoal) {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"siyuancheng178"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"siyuancheng178"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"aaapppsss"},"content":"    public int getCalorieGoal() {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"aaapppsss"},"content":"        return calorieGoal;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"    public void setCalorieGoal(int newGoal) throws FitNusException {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"        if (newGoal \u003c 0) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"kengjit"},"content":"            throw new FitNusException(\"Calorie Goal cannot be negative! Please try again!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"kengjit"},"content":"        } else if (newGoal \u003d\u003d this.calorieGoal) {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"            throw new FitNusException(\"Calorie Goal cannot be the same as before! Please try again!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"siyuancheng178"},"content":"        assert newGoal \u003e\u003d 0 : \"calorie goal cannot be negative\";","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"aaapppsss"},"content":"        this.calorieGoal \u003d newGoal;","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"siyuancheng178"},"content":"    public Gender getGender() {","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"siyuancheng178"},"content":"        assert gender.equals(Gender.FEMALE) || gender.equals(Gender.MALE) : \"invalid gender setting\";","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"aaapppsss"},"content":"        return gender;","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"siyuancheng178"},"content":"    public void setGender(Gender gender) {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"aaapppsss"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"aaapppsss"},"content":"    public float getWeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"aaapppsss"},"content":"        return weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"aaapppsss"},"content":"    public void setWeight(float weight) {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"aaapppsss"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"aaapppsss"},"content":"    public int getHeight() {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"aaapppsss"},"content":"        return height;","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"aaapppsss"},"content":"    public void setHeight(int height) {","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"aaapppsss"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"aaapppsss"},"content":"    public int getAge() {","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"aaapppsss"},"content":"        return age;","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"aaapppsss"},"content":"    public void setAge(int age) {","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"aaapppsss"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"aaapppsss"},"content":"    public ArrayList\u003cWeightProgressEntry\u003e getWeightProgressEntries() {","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"aaapppsss"},"content":"        return weightProgressEntries;","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"aaapppsss"},"content":"    public String updateWeightAndWeightTracker(float newWeight) {","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"aaapppsss"},"content":"        this.setWeight(newWeight);","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"aaapppsss"},"content":"        LocalDate currDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"aaapppsss"},"content":"        if (weightProgressEntries.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"aaapppsss"},"content":"            weightProgressEntries.add(new WeightProgressEntry(newWeight, currDate));","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"aaapppsss"},"content":"            return \"You have updated your weight for today to \" + newWeight + \" kg!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"aaapppsss"},"content":"        WeightProgressEntry latestEntry \u003d weightProgressEntries.get(weightProgressEntries.size() - 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"aaapppsss"},"content":"        if (latestEntry.getDate().toString().equals(currDate.toString())) { //Update today\u0027s weight progress entry","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"aaapppsss"},"content":"            latestEntry.setWeight(newWeight);","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"aaapppsss"},"content":"            weightProgressEntries.set(weightProgressEntries.size() - 1, latestEntry);","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"aaapppsss"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"aaapppsss"},"content":"            weightProgressEntries.add(new WeightProgressEntry(newWeight, currDate));","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"aaapppsss"},"content":"        WeightProgressEntry previousEntry \u003d weightProgressEntries.get(weightProgressEntries.size() - 2);","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"aaapppsss"},"content":"        float weightDifference \u003d previousEntry.getWeight() - newWeight;","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"aaapppsss"},"content":"        weightDifference \u003d (float) (Math.round(weightDifference * 10.0) / 10.0);","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"aaapppsss"},"content":"        String weightChange \u003d weightDifference \u003c 0 ? \"gained\" : \"lost\";","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"aaapppsss"},"content":"        if (weightDifference \u003c 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"aaapppsss"},"content":"            weightDifference \u003d Math.abs(weightDifference);","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"aaapppsss"},"content":"        return \"You have updated your weight for today to \" + newWeight","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"aaapppsss"},"content":"                + \"! You have \" + weightChange + \" \" + weightDifference + \" kg from the previous weight entry of \"","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"aaapppsss"},"content":"                + previousEntry.getWeight() + \" kg on \" + previousEntry.getDate().toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"aaapppsss"},"content":"    public String convertWeightRecordsToStringForUi() {","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"aaapppsss"},"content":"        StringBuilder lines \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"aaapppsss"},"content":"        for (WeightProgressEntry e : weightProgressEntries) {","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"aaapppsss"},"content":"            assert e !\u003d null : \"e should not be null\";","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"aaapppsss"},"content":"            float weight \u003d e.getWeight();","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"aaapppsss"},"content":"            String date \u003d e.getDate().toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"aaapppsss"},"content":"            lines.append(date).append(\": \").append(weight).append(\"kg\").append(System.lineSeparator());","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"aaapppsss"},"content":"        return lines.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"siyuancheng178"},"content":"    public int showCaloriesRemaining(EntryDatabase entryDB) {","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"aaapppsss"},"content":"        int caloriesConsumed \u003d entryDB.getTotalDailyCalorie();","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"siyuancheng178"},"content":"        return this.calorieGoal - caloriesConsumed;","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"aaapppsss"},"content":"    public int generateCalorieGoal(float weeklyChange, String changeType) {","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"aaapppsss"},"content":"        int calDeficitFor1KgWeekly \u003d 1000;","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"aaapppsss"},"content":"        int bmr; //basal metabolic rate","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"aaapppsss"},"content":"        int calDiff \u003d Math.round(weeklyChange * calDeficitFor1KgWeekly);","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"aaapppsss"},"content":"        int newGoal \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"aaapppsss"},"content":"        if (this.gender \u003d\u003d Gender.MALE) {","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"aaapppsss"},"content":"            bmr \u003d (int) Math.round(((655.1 + (9.563 * this.weight)","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"aaapppsss"},"content":"                    + (1.850 * this.height)","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"aaapppsss"},"content":"                    - (4.676 * this.age)) * 1.55));","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"aaapppsss"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"aaapppsss"},"content":"            bmr \u003d (int) Math.round(((66.47 + (13.75 * this.weight)","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"aaapppsss"},"content":"                    + (5.003 * this.height)","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"aaapppsss"},"content":"                    - (6.755 * this.age)) * 1.55) - weeklyChange * calDeficitFor1KgWeekly);","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"aaapppsss"},"content":"        if (changeType \u003d\u003d GAIN_STRING) {","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"aaapppsss"},"content":"            newGoal \u003d bmr + calDiff;","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"aaapppsss"},"content":"        } else if (changeType \u003d\u003d LOSE_STRING) {","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"aaapppsss"},"content":"            newGoal \u003d bmr - calDiff;","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"aaapppsss"},"content":"        return newGoal;","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"aaapppsss"},"content":"    public int preloadUserData(BufferedReader reader) throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"brendanlsz"},"content":"        String line;","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"aaapppsss"},"content":"        boolean successfullyPreloadedData \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"aaapppsss"},"content":"        if ((line \u003d reader.readLine()) !\u003d null) { //user data file not empty","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"brendanlsz"},"content":"            String[] description \u003d line.trim().split(\"\\\\s*[|]\\\\s*\");","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"brendanlsz"},"content":"            try {","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"brendanlsz"},"content":"                this.calorieGoal \u003d Integer.parseInt(description[0]);","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"aaapppsss"},"content":"                this.gender \u003d Gender.findGender(description[1]);","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"aaapppsss"},"content":"                this.age \u003d Integer.parseInt(description[2]);","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"aaapppsss"},"content":"                this.height \u003d Integer.parseInt(description[3]);","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"aaapppsss"},"content":"                this.weight \u003d Float.parseFloat(description[4]);","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"brendanlsz"},"content":"                System.out.println(\"Successfully preloaded user data\");","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"aaapppsss"},"content":"                successfullyPreloadedData \u003d true;","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"brendanlsz"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"aaapppsss"},"content":"                successfullyPreloadedData \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"brendanlsz"},"content":"                Ui.printPreloadDatabaseError();","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"brendanlsz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"aaapppsss"},"content":"                successfullyPreloadedData \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"brendanlsz"},"content":"                Ui.printPreloadUserError();","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"brendanlsz"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"aaapppsss"},"content":"        if (successfullyPreloadedData \u003d\u003d false) {","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"aaapppsss"},"content":"            return 0; //failure","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"aaapppsss"},"content":"        return 1; //success","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"aaapppsss"},"content":"    public void preloadWeightData(BufferedReader reader) throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"aaapppsss"},"content":"        String line;","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"aaapppsss"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"aaapppsss"},"content":"            String[] description \u003d line.trim().split(\"\\\\s*[|]\\\\s*\");","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"aaapppsss"},"content":"            try {","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"aaapppsss"},"content":"                float weight \u003d Float.parseFloat(description[0]);","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"aaapppsss"},"content":"                LocalDate date \u003d LocalDate.parse(description[1]);","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"aaapppsss"},"content":"                weightProgressEntries.add(new WeightProgressEntry(weight, date));","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"aaapppsss"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"aaapppsss"},"content":"                //Ui.printPreloadDatabaseError();","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"aaapppsss"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"aaapppsss"},"content":"                //Ui.printPreloadUserError();","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"aaapppsss"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"aaapppsss"},"content":"        System.out.println(\"Successfully preloaded weight data\");","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"brendanlsz"},"content":"    public String listUserData() {","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"brendanlsz"},"content":"        return \"Calorie goal: \" + this.calorieGoal + \" \" + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"siyuancheng178"},"content":"                + \"Gender: \" + this.gender.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"brendanlsz"},"content":"    public String convertUserDataToString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"aaapppsss"},"content":"        return this.calorieGoal + DELIMITER","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"aaapppsss"},"content":"                + this.gender + DELIMITER","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"aaapppsss"},"content":"                + this.age + DELIMITER","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"aaapppsss"},"content":"                + this.height + DELIMITER","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"aaapppsss"},"content":"                + this.weight;","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"aaapppsss"},"content":"    public String convertWeightDataToString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"aaapppsss"},"content":"        StringBuilder lines \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"aaapppsss"},"content":"        for (WeightProgressEntry e : weightProgressEntries) {","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"aaapppsss"},"content":"            assert e !\u003d null : \"e should not be null\";","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"aaapppsss"},"content":"            float weight \u003d e.getWeight();","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"aaapppsss"},"content":"            String date \u003d e.getDate().toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"aaapppsss"},"content":"            lines.append(weight).append(DELIMITER).append(date).append(System.lineSeparator());","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"aaapppsss"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"aaapppsss"},"content":"        return lines.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"kengjit":7,"brendanlsz":23,"siyuancheng178":15,"aaapppsss":177,"praj-bellakka":3}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello \" + in.nextLine());","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":21,"praj-bellakka":3}},{"path":"src/test/java/fitnus/EntryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aaapppsss"},"content":"package fitnus;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Entry;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import fitnus.tracker.MealType;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"class EntryTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"    void convertToStringForStorage_() {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"        //todo","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"    void testToString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"        MealType mealType \u003d MealType.BREAKFAST;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"brendanlsz"},"content":"        Food food \u003d new Food(\"Bread\", 50, Food.FoodType.SNACK);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"        Entry entry \u003d new Entry(mealType, food, LocalDate.parse(\"2021-01-01\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"brendanlsz"},"content":"        assertEquals(\"[2021-01-01] Breakfast: Bread (50 Kcal) Category: SNACK\", entry.toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kengjit":3,"brendanlsz":2,"aaapppsss":19,"praj-bellakka":2}},{"path":"src/test/java/fitnus/FoodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aaapppsss"},"content":"package fitnus;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"aaapppsss"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"class FoodTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"    void testToString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"brendanlsz"},"content":"        Food food \u003d new Food(\"Bread\", 50, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"brendanlsz"},"content":"        assertEquals(\"Bread (50 Kcal) Category: MEAL\", food.toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"    void convertToStringForStorage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"        //todo","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"brendanlsz":2,"aaapppsss":17,"praj-bellakka":1}},{"path":"src/test/java/fitnus/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"praj-bellakka"},"content":"package fitnus;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.parser.Parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"praj-bellakka"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"praj-bellakka"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"praj-bellakka"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"praj-bellakka"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"praj-bellakka"},"content":"public class ParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"praj-bellakka"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"    public static final String INVALID_COMMAND_MESSAGE \u003d \"That was an invalid command! PLease try again!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"praj-bellakka"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"    void parseCommandType_correctInput_parsedCorrectly() throws FitNusException {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"praj-bellakka"},"content":"    //        assertTrue(parser.parseCommandType(\"add /cust food1 | 21\") instanceof AddCustomFoodEntryCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"praj-bellakka"},"content":"    //        assertTrue(parser.parseCommandType(\"add /def 10\") instanceof AddDefaultFoodEntryCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"praj-bellakka"},"content":"    //        assertTrue(parser.parseCommandType(\"list /food\") instanceof ListFoodDatabaseCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"praj-bellakka"},"content":"    //        assertTrue(parser.parseCommandType(\"list /intake /DAY\") instanceof ListFoodIntakeCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"praj-bellakka"},"content":"    //        assertTrue(parser.parseCommandType(\"gender /set M/F\") instanceof SetGenderCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"praj-bellakka"},"content":"    //        assertTrue(parser.parseCommandType(\"remove /food 2\") instanceof DeleteFoodEntryCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"praj-bellakka"},"content":"    //        assertTrue(parser.parseCommandType(\"calorie /set 300\") instanceof SetCalorieGoalCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"praj-bellakka"},"content":"    //        assertTrue(parser.parseCommandType(\"calorie /remain\") instanceof ViewRemainingCalorieCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"praj-bellakka"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"praj-bellakka"},"content":"    void parseCommandType_wrongInput_invalidCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"praj-bellakka"},"content":"    //    Exception exception1 \u003d assertThrows(FitNusException.class, () -\u003e parser.parseCommandType(\"add food1 | 21\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"praj-bellakka"},"content":"    //    assertEquals(INVALID_COMMAND_MESSAGE, exception1.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"praj-bellakka"},"content":"    //","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"praj-bellakka"},"content":"    //    Exception exception2 \u003d assertThrows(FitNusException.class, () -\u003e parser.parseCommandType(\"genderr /set M/F\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"praj-bellakka"},"content":"    //    assertEquals(INVALID_COMMAND_MESSAGE, exception2.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"praj-bellakka"},"content":"    //","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"praj-bellakka"},"content":"    //    Exception exception3 \u003d assertThrows(FitNusException.class, () -\u003e parser.parseCommandType(\"remove/food 2\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"praj-bellakka"},"content":"    //    assertEquals(INVALID_COMMAND_MESSAGE, exception3.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"praj-bellakka"},"content":"    //","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"praj-bellakka"},"content":"    //    Exception exception4 \u003d assertThrows(FitNusException.class, () -\u003e parser.parseCommandType(\"calorie/set GOAL\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"praj-bellakka"},"content":"    //    assertEquals(INVALID_COMMAND_MESSAGE, exception4.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"praj-bellakka"},"content":"    //","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"praj-bellakka"},"content":"    //    Exception exception5 \u003d assertThrows(FitNusException.class, () -\u003e parser.parseCommandType(\"calories /remain\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"praj-bellakka"},"content":"    //    assertEquals(INVALID_COMMAND_MESSAGE, exception5.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"praj-bellakka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"praj-bellakka"},"content":"    void getDate_invalidInput_getException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"praj-bellakka"},"content":"        String localDateInput1 \u003d \"2021-10\"; //no day specified","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"praj-bellakka"},"content":"        Exception exception1 \u003d assertThrows(FitNusException.class, () -\u003e Parser.getDate(localDateInput1));","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(\"Error parsing date!!\", exception1.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"praj-bellakka"},"content":"        String localDateInput2 \u003d \"2021-101-20\"; //invalid month","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"praj-bellakka"},"content":"        Exception exception2 \u003d assertThrows(FitNusException.class, () -\u003e Parser.getDate(localDateInput2));","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(\"Error parsing date!!\", exception2.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"praj-bellakka"},"content":"        String localDateInput3 \u003d \"2021-03-50\"; //invalid day","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"praj-bellakka"},"content":"        Exception exception3 \u003d assertThrows(FitNusException.class, () -\u003e Parser.getDate(localDateInput3));","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(\"Error parsing date!!\", exception3.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"praj-bellakka"},"content":"        String localDateInput4 \u003d \"123-10-10\"; //invalid year","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"praj-bellakka"},"content":"        Exception exception4 \u003d assertThrows(FitNusException.class, () -\u003e Parser.getDate(localDateInput4));","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(\"Error parsing date!!\", exception4.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"praj-bellakka"},"content":"        String localDateInput5 \u003d \"dkfjvghkjdfs\"; //nonsense values","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"praj-bellakka"},"content":"        Exception exception5 \u003d assertThrows(FitNusException.class, () -\u003e Parser.getDate(localDateInput5));","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(\"Error parsing date!!\", exception5.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"praj-bellakka"},"content":"        String localDateInput6 \u003d \"\"; //empty string","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"praj-bellakka"},"content":"        AssertionError exception6 \u003d assertThrows(AssertionError.class, () -\u003e Parser.getDate(localDateInput6));","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(\"String line should not be empty\", exception6.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"praj-bellakka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"praj-bellakka"},"content":"    void getDate_validInput_returnDate() throws FitNusException {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"praj-bellakka"},"content":"        String input1 \u003d \"2020-03-03\"; //correct format","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(LocalDate.class, parser.getDate(input1).getClass());","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"praj-bellakka"},"content":"        String line \u003d \"2021-12-23\";","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"praj-bellakka"},"content":"        LocalDate date \u003d Parser.getDate(line);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(LocalDate.of(2021, 12, 23), date);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"praj-bellakka"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"praj-bellakka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"kengjit"},"content":"    void parseCommandType_validGenderInput_returnCommand() throws FitNusException {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"praj-bellakka"},"content":"    //        String input \u003d \"gender /set M\";","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"praj-bellakka"},"content":"    //        Command returnCommand \u003d parser.parseCommandType(input);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"praj-bellakka"},"content":"    //","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"praj-bellakka"},"content":"    //        assertEquals(SetGenderCommand.class, returnCommand.getClass());","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"praj-bellakka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"praj-bellakka"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kengjit":4,"praj-bellakka":92}},{"path":"src/test/java/fitnus/UserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aaapppsss"},"content":"package fitnus;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.tracker.Gender;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"class UserTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"    void setCalorieGoal_validGoal_goalSetSuccessfully() throws FitNusException {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"siyuancheng178"},"content":"        User user \u003d new User(Gender.FEMALE, 1000);","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"        user.setCalorieGoal(2000);","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(2000, user.getCalorieGoal());","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"    void setCalorieGoal_negativeIntegerGoal_exceptionThrown() {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"siyuancheng178"},"content":"        User user \u003d new User(Gender.FEMALE, 1000);","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"        Exception exception \u003d assertThrows(FitNusException.class, () -\u003e user.setCalorieGoal(-1000));","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(\"Calorie Goal cannot be negative! Please try again!\", exception.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"aaapppsss"},"content":"    void setCalorieGoal_sameGoal_exceptionThrown() {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"siyuancheng178"},"content":"        User user \u003d new User(Gender.FEMALE, 1000);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"aaapppsss"},"content":"        Exception exception \u003d assertThrows(FitNusException.class, () -\u003e user.setCalorieGoal(1000));","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(\"Calorie Goal cannot be the same as before! Please try again!\", exception.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"aaapppsss"},"content":"    void setGender_validGenderIntegerRepresentation_genderSetSuccessfully() {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"siyuancheng178"},"content":"        User user \u003d new User(Gender.MALE, 1000);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"siyuancheng178"},"content":"        user.setGender(Gender.FEMALE);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"siyuancheng178"},"content":"        assertEquals(Gender.FEMALE, user.getGender());","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"siyuancheng178":7,"aaapppsss":31,"praj-bellakka":2}},{"path":"src/test/java/fitnus/command/ListFoodEntryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aaapppsss"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.tracker.Gender;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"import fitnus.tracker.MealType;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"class ListFoodEntryCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"    void executeTest_validInputDay() {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"        EntryDatabase ed \u003d new EntryDatabase();","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"        FoodDatabase fd \u003d new FoodDatabase();","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"siyuancheng178"},"content":"        User us \u003d new User(Gender.MALE, 1000);","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"        ListFoodEntryAllCommand c \u003d new ListFoodEntryAllCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"brendanlsz"},"content":"        ed.addEntry(MealType.DINNER, new Food(\"food1\", 100, Food.FoodType.MEAL));","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"brendanlsz"},"content":"        ed.addEntry(MealType.DINNER, new Food(\"food2\", 200, Food.FoodType.SNACK));","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"        //todo","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kengjit":3,"brendanlsz":2,"siyuancheng178":2,"aaapppsss":15,"praj-bellakka":4}},{"path":"src/test/java/fitnus/command/SetGenderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aaapppsss"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"aaapppsss"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.tracker.Gender;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"aaapppsss"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"class SetGenderCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"    void executeTest_validInputMale() throws FitNusException {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"        EntryDatabase ed \u003d new EntryDatabase();","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"        FoodDatabase fd \u003d new FoodDatabase();","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"siyuancheng178"},"content":"        User us \u003d new User(Gender.MALE, 1000);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"brendanlsz"},"content":"        SetGenderCommand c \u003d new SetGenderCommand(\"m\");","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(\"You have set your gender to Male\", c.execute(ed, fd, us));","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"    void executeTest_validInputFemale() throws FitNusException {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"aaapppsss"},"content":"        EntryDatabase ed \u003d new EntryDatabase();","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"aaapppsss"},"content":"        FoodDatabase fd \u003d new FoodDatabase();","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"siyuancheng178"},"content":"        User us \u003d new User(Gender.MALE, 1000);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"brendanlsz"},"content":"        SetGenderCommand c \u003d new SetGenderCommand(\"f\");","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(\"You have set your gender to Female\", c.execute(ed, fd, us));","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"aaapppsss"},"content":"    void executeTest_invalidInput() {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"aaapppsss"},"content":"        EntryDatabase ed \u003d new EntryDatabase();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"aaapppsss"},"content":"        FoodDatabase fd \u003d new FoodDatabase();","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"siyuancheng178"},"content":"        User us \u003d new User(Gender.MALE, 1000);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"aaapppsss"},"content":"        SetGenderCommand c \u003d new SetGenderCommand(\"invalidInput\");","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"aaapppsss"},"content":"        Exception exception \u003d assertThrows(FitNusException.class, () -\u003e c.execute(ed, fd, us));","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(\"Invalid input! Please input m for male or \"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"aaapppsss"},"content":"                + \"f for female when setting your gender.\", exception.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"brendanlsz":2,"siyuancheng178":4,"aaapppsss":36,"praj-bellakka":3}},{"path":"src/test/java/fitnus/command/ViewRemainingCalorieCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aaapppsss"},"content":"package fitnus.command;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.EntryDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"siyuancheng178"},"content":"import fitnus.tracker.Gender;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"import fitnus.tracker.MealType;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.utility.User;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"aaapppsss"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"aaapppsss"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"aaapppsss"},"content":"class ViewRemainingCalorieCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"    void executeTest() {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"        EntryDatabase ed \u003d new EntryDatabase();","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"brendanlsz"},"content":"        ed.addEntry(MealType.DINNER, new Food(\"food1\", 100, Food.FoodType.MEAL));","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"brendanlsz"},"content":"        ed.addEntry(MealType.DINNER, new Food(\"food2\", 200, Food.FoodType.BEVERAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"brendanlsz"},"content":"        ed.addEntry(MealType.DINNER, new Food(\"food3\", 300, Food.FoodType.MEAL));","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"        FoodDatabase fd \u003d new FoodDatabase();","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"siyuancheng178"},"content":"        User us \u003d new User(Gender.MALE, 1000);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"        ViewRemainingCalorieCommand c \u003d new ViewRemainingCalorieCommand();","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(\"The remaining calories before reaching the daily goal is 400\",","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"aaapppsss"},"content":"                c.execute(ed, fd, us));","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kengjit":1,"brendanlsz":3,"siyuancheng178":2,"aaapppsss":19,"praj-bellakka":4}},{"path":"src/test/java/fitnus/database/EntryDatabaseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanlsz"},"content":"package fitnus.database;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Entry;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"brendanlsz"},"content":"import fitnus.parser.Parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"import fitnus.tracker.MealType;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"siyuancheng178"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"brendanlsz"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"brendanlsz"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"brendanlsz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"brendanlsz"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"brendanlsz"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"siyuancheng178"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"siyuancheng178"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"brendanlsz"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"siyuancheng178"},"content":"class EntryDatabaseTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"siyuancheng178"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"siyuancheng178"},"content":"    public void convertDatabaseToStringTest_emptyList_emptyString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"siyuancheng178"},"content":"        EntryDatabase edb \u003d new EntryDatabase();","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"siyuancheng178"},"content":"        assertEquals(\"\", edb.convertDatabaseToString());","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"siyuancheng178"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"siyuancheng178"},"content":"    public void convertDatabaseToStringTest_list_stringRepresentation() {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"siyuancheng178"},"content":"        EntryDatabase edb \u003d new EntryDatabase();","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"brendanlsz"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"brendanlsz"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"brendanlsz"},"content":"            date \u003d Parser.getDate(\"2021-10-11\");","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"brendanlsz"},"content":"        } catch (FitNusException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"brendanlsz"},"content":"            fail(\"Parser getDate error\");","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"brendanlsz"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"brendanlsz"},"content":"        Entry entry1 \u003d new Entry(MealType.DINNER,","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"brendanlsz"},"content":"                new Food(\"chicken rice\", 200, Food.FoodType.MEAL), date);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"brendanlsz"},"content":"        Entry entry2 \u003d new Entry(MealType.LUNCH,","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"brendanlsz"},"content":"                new Food(\"steak\", 900, Food.FoodType.MEAL), date);","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"brendanlsz"},"content":"        Entry entry3 \u003d new Entry(MealType.BREAKFAST,","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"brendanlsz"},"content":"                new Food(\"laksa\", 400, Food.FoodType.MEAL), date);","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"brendanlsz"},"content":"        Entry entry4 \u003d new Entry(MealType.SNACK,","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"brendanlsz"},"content":"                new Food(\"hotpot\", 1100, Food.FoodType.MEAL), date);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"brendanlsz"},"content":"        edb.addEntry(entry1);","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"brendanlsz"},"content":"        edb.addEntry(entry2);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"brendanlsz"},"content":"        edb.addEntry(entry3);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"brendanlsz"},"content":"        edb.addEntry(entry4);","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"brendanlsz"},"content":"        String expectedOutput \u003d String.format(\"Dinner | chicken rice | 200 | %s | MEAL\" + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"brendanlsz"},"content":"                + \"Lunch | steak | 900 | %s | MEAL\" + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"brendanlsz"},"content":"                + \"Breakfast | laksa | 400 | %s | MEAL\" + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"brendanlsz"},"content":"                + \"Snack | hotpot | 1100 | %s | MEAL\" + System.lineSeparator(), date, date, date, date);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"siyuancheng178"},"content":"        assertEquals(expectedOutput, edb.convertDatabaseToString());","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"siyuancheng178"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"siyuancheng178"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kengjit"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"kengjit"},"content":"    void addEntry_validEntry_entryAddedSuccessfully() throws FitNusException {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"kengjit"},"content":"        // Instantiate objects","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"kengjit"},"content":"        EntryDatabase edb \u003d new EntryDatabase();","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"brendanlsz"},"content":"        Food prata \u003d new Food(\"Prata\", 100, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"brendanlsz"},"content":"        Food chickenRice \u003d new Food(\"Chicken Rice\", 325, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"kengjit"},"content":"        Entry chickenRiceEntry \u003d new Entry(MealType.DINNER, chickenRice);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"kengjit"},"content":"        // Add Entries","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"kengjit"},"content":"        edb.addEntry(MealType.DINNER, prata);","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"kengjit"},"content":"        edb.addEntry(chickenRiceEntry);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"kengjit"},"content":"        // Test","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(prata, edb.getEntryAtIndex(1).getFood());","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(chickenRice, edb.getEntryAtIndex(2).getFood());","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"kengjit"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"kengjit"},"content":"    void getTotalCalorie_nonZeroEntries_getTotalCaloriesSuccessfully() {","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"kengjit"},"content":"        // Instantiate objects","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"kengjit"},"content":"        EntryDatabase edb \u003d new EntryDatabase();","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"brendanlsz"},"content":"        Food prata \u003d new Food(\"Prata\", 100, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"brendanlsz"},"content":"        Food chickenRice \u003d new Food(\"Chicken Rice\", 325, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"kengjit"},"content":"        // Add Entries","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"kengjit"},"content":"        edb.addEntry(MealType.DINNER, prata);","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"kengjit"},"content":"        edb.addEntry(MealType.DINNER, chickenRice);","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"kengjit"},"content":"        // Test","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(425, edb.getTotalDailyCalorie());","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"kengjit"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"kengjit"},"content":"    void getTotalCalorie_zeroEntries_getTotalCaloriesSuccessfully() {","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"kengjit"},"content":"        // Instantiate objects","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"kengjit"},"content":"        EntryDatabase edb \u003d new EntryDatabase();","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"kengjit"},"content":"        // Test","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(0, edb.getTotalDailyCalorie());","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"kengjit"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"kengjit"},"content":"    void addDefaultEntry_validIndex_entryAddedSuccessfully() throws FitNusException {","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"kengjit"},"content":"        // Instantiate objects","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"kengjit"},"content":"        FoodDatabase fdb \u003d new FoodDatabase();","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"brendanlsz"},"content":"        Food prata \u003d new Food(\"Prata\", 100, Food.FoodType.SNACK);","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"brendanlsz"},"content":"        Food chickenRice \u003d new Food(\"Chicken Rice\", 325, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"brendanlsz"},"content":"        Food pizza \u003d new Food(\"Pizza\", 260, Food.FoodType.OTHERS);","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"kengjit"},"content":"        // Add Food to database","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"kengjit"},"content":"        fdb.addFood(prata);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"kengjit"},"content":"        fdb.addFood(chickenRice);","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"kengjit"},"content":"        fdb.addFood(pizza);","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"kengjit"},"content":"        // Add Entries","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"kengjit"},"content":"        EntryDatabase edb \u003d new EntryDatabase();","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"kengjit"},"content":"        edb.addDefaultEntry(MealType.DINNER, fdb, 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"kengjit"},"content":"        edb.addDefaultEntry(MealType.DINNER, fdb, 2);","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"kengjit"},"content":"        edb.addDefaultEntry(MealType.DINNER, fdb, 3);","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"kengjit"},"content":"        // Test","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(prata, edb.getEntryAtIndex(1).getFood());","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(chickenRice, edb.getEntryAtIndex(2).getFood());","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(pizza, edb.getEntryAtIndex(3).getFood());","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"kengjit"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"aaapppsss"},"content":"    void addDefaultEntry_invalidIndex_exceptionThrown() throws FitNusException {","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"kengjit"},"content":"        // Instantiate objects","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"kengjit"},"content":"        EntryDatabase edb \u003d new EntryDatabase();","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"kengjit"},"content":"        FoodDatabase fdb \u003d new FoodDatabase();","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"brendanlsz"},"content":"        Food prata \u003d new Food(\"Prata\", 100, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"brendanlsz"},"content":"        Food chickenRice \u003d new Food(\"Chicken Rice\", 325, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"brendanlsz"},"content":"        Food pizza \u003d new Food(\"Pizza\", 260, Food.FoodType.SNACK);","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"kengjit"},"content":"        // Add Food to database","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"kengjit"},"content":"        fdb.addFood(prata);","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"kengjit"},"content":"        fdb.addFood(chickenRice);","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"kengjit"},"content":"        fdb.addFood(pizza);","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"kengjit"},"content":"        // Test","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"kengjit"},"content":"        Exception exception1 \u003d assertThrows(FitNusException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"kengjit"},"content":"            () -\u003e edb.addDefaultEntry(MealType.DINNER, fdb, 0));","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"kengjit"},"content":"        Exception exception2 \u003d assertThrows(FitNusException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"kengjit"},"content":"            () -\u003e edb.addDefaultEntry(MealType.DINNER, fdb, -1));","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"kengjit"},"content":"        Exception exception3 \u003d assertThrows(FitNusException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"kengjit"},"content":"            () -\u003e edb.addDefaultEntry(MealType.DINNER, fdb, 100));","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"kengjit"},"content":"        assertEquals(\"Sorry the index chosen is invalid! Please try again!\", exception1.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"kengjit"},"content":"        assertEquals(\"Sorry the index chosen is invalid! Please try again!\", exception2.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"kengjit"},"content":"        assertEquals(\"Sorry the index chosen is invalid! Please try again!\", exception3.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"kengjit"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"kengjit"},"content":"    void deleteEntry_validIndex_entryDeletedSuccessfully() throws FitNusException {","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"kengjit"},"content":"        // Instantiate objects","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"kengjit"},"content":"        EntryDatabase edb \u003d new EntryDatabase();","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"brendanlsz"},"content":"        Food prata \u003d new Food(\"Prata\", 100, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"brendanlsz"},"content":"        Food chickenRice \u003d new Food(\"Chicken Rice\", 325, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"kengjit"},"content":"        // Add Entries","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"kengjit"},"content":"        edb.addEntry(MealType.DINNER, prata);","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"kengjit"},"content":"        edb.addEntry(MealType.DINNER, chickenRice);","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"kengjit"},"content":"        // Delete Entry","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"kengjit"},"content":"        edb.deleteEntry(2);","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"kengjit"},"content":"        // Test","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"kengjit"},"content":"        Exception exception \u003d assertThrows(FitNusException.class, () -\u003e edb.getEntryAtIndex(2));","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"kengjit"},"content":"        assertEquals(\"Sorry the index chosen is invalid! Please try again!\", exception.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"kengjit"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"kengjit"},"content":"    void deleteEntry_invalidIndex_exceptionThrown() {","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"kengjit"},"content":"        // Instantiate objects","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"kengjit"},"content":"        EntryDatabase edb \u003d new EntryDatabase();","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"brendanlsz"},"content":"        Food prata \u003d new Food(\"Prata\", 100, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"brendanlsz"},"content":"        Food chickenRice \u003d new Food(\"Chicken Rice\", 325, Food.FoodType.BEVERAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"kengjit"},"content":"        // Add Entries","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"kengjit"},"content":"        edb.addEntry(MealType.DINNER, prata);","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"kengjit"},"content":"        edb.addEntry(MealType.DINNER, chickenRice);","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"kengjit"},"content":"        // Test","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"kengjit"},"content":"        Exception exception1 \u003d assertThrows(FitNusException.class, () -\u003e edb.deleteEntry(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"kengjit"},"content":"        Exception exception2 \u003d assertThrows(FitNusException.class, () -\u003e edb.deleteEntry(-1));","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"kengjit"},"content":"        Exception exception3 \u003d assertThrows(FitNusException.class, () -\u003e edb.deleteEntry(100));","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"kengjit"},"content":"        assertEquals(\"Sorry the index chosen is invalid! Please try again!\", exception1.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"kengjit"},"content":"        assertEquals(\"Sorry the index chosen is invalid! Please try again!\", exception2.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"kengjit"},"content":"        assertEquals(\"Sorry the index chosen is invalid! Please try again!\", exception3.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"kengjit"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"kengjit"},"content":"    void getEntryAtIndex_validIndex_getEntrySuccessfully() throws FitNusException {","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"kengjit"},"content":"        // Instantiate objects","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"kengjit"},"content":"        EntryDatabase edb \u003d new EntryDatabase();","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"brendanlsz"},"content":"        Food prata \u003d new Food(\"Prata\", 100, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"brendanlsz"},"content":"        Food chickenRice \u003d new Food(\"Chicken Rice\", 325, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"kengjit"},"content":"        // Add Entries","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"kengjit"},"content":"        edb.addEntry(MealType.DINNER, prata);","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"kengjit"},"content":"        edb.addEntry(MealType.DINNER, chickenRice);","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"kengjit"},"content":"        // Test","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(prata, edb.getEntryAtIndex(1).getFood());","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"praj-bellakka"},"content":"        assertEquals(chickenRice, edb.getEntryAtIndex(2).getFood());","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"kengjit"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"kengjit"},"content":"    void getEntryAtIndex_invalidIndex_getEntrySuccessfully() {","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"kengjit"},"content":"        // Instantiate objects","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"kengjit"},"content":"        EntryDatabase edb \u003d new EntryDatabase();","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"brendanlsz"},"content":"        Food prata \u003d new Food(\"Prata\", 100, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"brendanlsz"},"content":"        Food chickenRice \u003d new Food(\"Chicken Rice\", 325, Food.FoodType.SNACK);","lastModifiedDate":"2021-10-22"},{"lineNumber":214,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"kengjit"},"content":"        // Add Entries","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"kengjit"},"content":"        edb.addEntry(MealType.DINNER, prata);","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"kengjit"},"content":"        edb.addEntry(MealType.DINNER, chickenRice);","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"kengjit"},"content":"        // Test","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"kengjit"},"content":"        Exception exception1 \u003d assertThrows(FitNusException.class, () -\u003e edb.getEntryAtIndex(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"kengjit"},"content":"        Exception exception2 \u003d assertThrows(FitNusException.class, () -\u003e edb.getEntryAtIndex(-1));","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"kengjit"},"content":"        Exception exception3 \u003d assertThrows(FitNusException.class, () -\u003e edb.getEntryAtIndex(100));","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"kengjit"},"content":"        assertEquals(\"Sorry the index chosen is invalid! Please try again!\", exception1.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"kengjit"},"content":"        assertEquals(\"Sorry the index chosen is invalid! Please try again!\", exception2.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"kengjit"},"content":"        assertEquals(\"Sorry the index chosen is invalid! Please try again!\", exception3.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"brendanlsz"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"brendanlsz"},"content":"    void preLoadDatabase_validInput_SuccessfullyPreloadDatabase()","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"brendanlsz"},"content":"            throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"brendanlsz"},"content":"        EntryDatabase ed \u003d new EntryDatabase();","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"brendanlsz"},"content":"        String initialString \u003d \"Breakfast | food1 | 100 | 2021-10-12 | MEAL\" + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"brendanlsz"},"content":"                + \"Lunch | food2 | 200 | 2021-10-12 | MEAL\";","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"brendanlsz"},"content":"        InputStream stream \u003d new ByteArrayInputStream(initialString.getBytes());","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"brendanlsz"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(stream));","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"brendanlsz"},"content":"        ed.preLoadDatabase(reader);","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"brendanlsz"},"content":"        assertEquals(\" 1.[2021-10-12] Breakfast: food1 (100 Kcal) Category: MEAL\"","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"brendanlsz"},"content":"                + System.lineSeparator() + \" 2.[2021-10-12] Lunch: food2 (200 Kcal) Category: MEAL\"","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"brendanlsz"},"content":"                + System.lineSeparator(), ed.listEntries());","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"brendanlsz"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"siyuancheng178"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kengjit":144,"brendanlsz":63,"siyuancheng178":22,"aaapppsss":3,"praj-bellakka":10}},{"path":"src/test/java/fitnus/database/FoodDatabaseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brendanlsz"},"content":"package fitnus.database;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.database.FoodDatabase;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.exception.FitNusException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"praj-bellakka"},"content":"import fitnus.tracker.Food;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"aaapppsss"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"brendanlsz"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"brendanlsz"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"brendanlsz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"brendanlsz"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"brendanlsz"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"brendanlsz"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"aaapppsss"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"aaapppsss"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"aaapppsss"},"content":"class FoodDatabaseTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"aaapppsss"},"content":"    void addFood_validCalorieInt_success() throws FitNusException {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"aaapppsss"},"content":"        FoodDatabase fd \u003d new FoodDatabase();","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"brendanlsz"},"content":"        fd.addFood(new Food(\"food1\", 100, Food.FoodType.OTHERS));","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(100, fd.getFoodAtIndex(1).getCalories());","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(\"food1\", fd.getFoodAtIndex(1).getName());","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"brendanlsz"},"content":"        fd.addFood(\"food2\", 100, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(100, fd.getFoodAtIndex(2).getCalories());","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(\"food2\", fd.getFoodAtIndex(2).getName());","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"aaapppsss"},"content":"    void addFood_lessThanZeroCalorieInt_exceptionThrown() {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"aaapppsss"},"content":"        FoodDatabase fd \u003d new FoodDatabase();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"brendanlsz"},"content":"        Exception exception1 \u003d assertThrows(FitNusException.class, () -\u003e fd.addFood(","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"brendanlsz"},"content":"                new Food(\"food1\", -100, Food.FoodType.SNACK)));","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(\"Food must have more than 0 calories!\", exception1.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"brendanlsz"},"content":"        Exception exception2 \u003d assertThrows(FitNusException.class, () -\u003e fd.addFood(","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"brendanlsz"},"content":"                \"food2\", -100, Food.FoodType.OTHERS));","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(\"Food must have more than 0 calories!\", exception2.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"aaapppsss"},"content":"    void getFoodAtIndex_validIndex_success() throws FitNusException {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"aaapppsss"},"content":"        FoodDatabase fd \u003d new FoodDatabase();","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"brendanlsz"},"content":"        fd.addFood(\"food1\", 100, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(\"food1\", fd.getFoodAtIndex(1).getName());","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"aaapppsss"},"content":"        assertEquals(100, fd.getFoodAtIndex(1).getCalories());","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"aaapppsss"},"content":"    void getFoodAtIndex_outOfBoundsIndex_exceptionThrown() throws FitNusException {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"aaapppsss"},"content":"        FoodDatabase fd \u003d new FoodDatabase();","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"brendanlsz"},"content":"        fd.addFood(\"food1\", 100, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"aaapppsss"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e fd.getFoodAtIndex(2));","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"aaapppsss"},"content":"    void listFoods_databaseWithFoods_listsFoodsSuccessfully() throws FitNusException {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"aaapppsss"},"content":"        FoodDatabase fd \u003d new FoodDatabase();","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"brendanlsz"},"content":"        fd.addFood(\"food1\", 100, Food.FoodType.BEVERAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"brendanlsz"},"content":"        fd.addFood(\"food2\", 200, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"brendanlsz"},"content":"        assertEquals(\" 1.food1 (100 Kcal) Category: BEVERAGE\" + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"brendanlsz"},"content":"                + \" 2.food2 (200 Kcal) Category: MEAL\" + System.lineSeparator(), fd.listFoods());","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"brendanlsz"},"content":"    void convertDatabaseToString_databaseWithFoods_foodsAsString() throws FitNusException {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"brendanlsz"},"content":"        FoodDatabase fd \u003d new FoodDatabase();","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"brendanlsz"},"content":"        fd.addFood(\"food1\", 100, Food.FoodType.MEAL);","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"brendanlsz"},"content":"        fd.addFood(\"food2\", 200, Food.FoodType.SNACK);","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"brendanlsz"},"content":"        assertEquals(\"food1 | 100 | MEAL\" + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"brendanlsz"},"content":"                + \"food2 | 200 | SNACK\" + System.lineSeparator(), fd.convertDatabaseToString());","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"aaapppsss"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"aaapppsss"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"brendanlsz"},"content":"    void preLoadDatabase_validInput_SuccessfullyPreloadDatabase()","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"brendanlsz"},"content":"            throws FitNusException, IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"brendanlsz"},"content":"        FoodDatabase fd \u003d new FoodDatabase();","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"brendanlsz"},"content":"        String initialString \u003d \"food1 | 100 | MEAL\" + System.lineSeparator() + \"food2 | 200 | MEAL\";","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"brendanlsz"},"content":"        InputStream stream \u003d new ByteArrayInputStream(initialString.getBytes());","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"brendanlsz"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(stream));","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"brendanlsz"},"content":"        fd.preLoadDatabase(reader);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"brendanlsz"},"content":"        assertEquals(\" 1.food1 (100 Kcal) Category: MEAL\" + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"brendanlsz"},"content":"                + \" 2.food2 (200 Kcal) Category: MEAL\" + System.lineSeparator(), fd.listFoods());","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"aaapppsss"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"aaapppsss"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"brendanlsz":35,"aaapppsss":53,"praj-bellakka":3}}]
