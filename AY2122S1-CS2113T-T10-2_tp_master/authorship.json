[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"# TermiNUS","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"[![Java CI](https://github.com/AY2122S1-CS2113T-T10-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2113T-T10-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2113T-T10-2/tp/branch/master/graph/badge.svg?token\u003dCLLWHY78LP)](https://codecov.io/gh/AY2122S1-CS2113T-T10-2/tp)","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"## Setting up","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"### Prerequisite","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"Before setting up the project, please do ensure you have the following items installed.","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"- [JDK 11](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html)","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"- [IntelliJ IDEA](https://www.jetbrains.com/idea/download/)","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"`Java Development Kit ver 11 (JDK 11)` is the **environment / programming language** in which","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"TermiNUS is written with and `IntelliJ IDEA` will be the **integrated development environment (","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"IDE)** platform for us to write the programming codes on.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"Go to [link](https://github.com/AY2122S1-CS2113T-T10-2/tp) and retrieve the `TermiNUS project file`.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"You can do so by **forking** the project and **cloning** a copy into your computer.","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"To learn more about github fork-clone feature please follow the guide","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"on [link](https://docs.github.com/en/get-started/quickstart/fork-a-repo).","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"### Setting up in Intellij","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"1. Open the application `IntelliJ IDEA`.","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"2. Inside `IntelliJ IDEA` navigate to `open project` button","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"   1. On the top left of the app, `File`\u0026rarr;`Open...`","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"3. Locate and select the folder containing the files for **Terminus** that you have downloaded","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"   earlier on.","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"4. Change the **Project SDK** that IntelliJ IDEA will be using.","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"   1. On the top left of the app, `File`\u0026rarr;`Project Structure...`","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"   2. Under **Project SDK:** section, find and select JDK version 11.","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"      Eg: `Amazon Corretto version 11.0.12`.","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"   3. Under **Project language level:**, select `SDK default`.","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"5. Verifying the setup","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"   1. After performing the steps above, locate the file `src/main/java/terminus/Terminus.java`,","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"      right-click and select `Run \u0027Terminus.main()\u0027`.","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"   2. If everything is correctly set up, you should see the following terminal.","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"   Welcome to TermiNUS!","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"   Type any of the following to get started:","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"   \u003e exit","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"   \u003e help","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"   \u003e note","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"   \u003e schedule","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"   [] \u003e\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"* We use JUnit testing for this project. ","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"* A CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"kelvneo":47,"-":45}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    implementation \u0027com.google.code.gson:gson:2.8.8\u0027, \u0027com.github.librepdf:openpdf:1.3.26\u0027","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    afterEvaluate {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        })","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    reports {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        html.required \u003d true","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        xml.required \u003d true","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    mainClassName \u003d \"terminus.Terminus\"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"    archiveBaseName \u003d \"TermiNUS\"","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kelvneo":18,"3m0W33D":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/2332196?s\u003d460\u0026v\u003d4\" width\u003d\"100\"/\u003e | Kelvin Neo | [Github](https://github.com/kelvneo) | [Portfolio](team/kelvneo.md)","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/69447277?s\u003d460\u0026v\u003d4\" width\u003d\"100\"/\u003e | Louis | [Github](https://github.com/LouisLouis19) | [Portfolio](team/louislouis19.md)","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/68680740?s\u003d460\u0026v\u003d4\" width\u003d\"100\"/\u003e| Tan Juen Woo | [Github](https://github.com/woolicious98) | [Portfolio](team/woolicious98.md)","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/26686523?s\u003d460\u0026v\u003d4\" width\u003d\"100\"/\u003e | Schuyler Tay | [Github](https://github.com/3m0W33D) | [Portfolio](team/3m0w33d.md)","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"kelvneo":3,"LouisLouis19":1,"3m0W33D":1,"-":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"## Table of Content","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"- [1. Introduction](#1-introduction)","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"    * [1.1 Purpose](#11-purpose)","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"    * [1.2 Acknowledgements](#12-acknowledgements)","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"    * [1.3 Using this Guide](#13-using-this-guide)","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"- [2. Setting up](#2-setting-up)","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"    * [2.1 Setting up the project in your computer](#21-setting-up-the-project-in-your-computer)","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"        + [2.1.1 Prerequisite](#211-prerequisite)","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"        + [2.1.2 Getting the project files](#212-getting-the-project-files)","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"        + [2.1.3 Setting up on IntelliJ IDEA](#213-setting-up-on-intellij-idea)","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"        + [2.1.4 Configuring the Coding Style](#214-configuring-the-coding-style)","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"- [3. Design](#3-design)","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    * [3.1 Architecture](#31-architecture)","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    * [3.2 UI Component](#32-ui-component)","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    * [3.3 Parser Component](#33-parser-component)","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    * [3.4 Command Component](#34-command-component)","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    * [3.5 Module Component](#35-module-component)","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    * [3.6 Content Component](#36-content-component)","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    * [3.7 Active Recall Component](#37-active-recall-component)","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    * [3.8 Storage Component](#38-storage-component)","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"- [4. Implementation](#4-implementation)","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    * [4.1 Timetable Feature](#41-timetable-feature)","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    * [4.2 Active Recall](#42-active-recall-implementation)","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    * [4.3 Workspace](#43-workspace-implementation)","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    * [4.4 Conflict Manager](#44-conflict-manager-implementation)","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    * [4.5 Storage](#45-storage-implementation)","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        + [4.5.1 Initialize Storage](#451-initialize-storage-implementation)","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        + [4.5.2 Loading Storage](#452-loading-storage-implementation)","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        + [4.5.3 Execute CommandResult with Storage](#453-execute-commandresult-with-storage-implementation)","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    * [4.6 Adding Content](#46-adding-content-implementation)","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    * [4.7 Deleting Content](#47-deleting-content-implementation)","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"- [5. Documentation, Logging, Testing and DevOps](#5-documentation-logging-testing-and-devops)","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    * [5.1 Documentation](#51-documentation)","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    * [5.2 Logging](#52-logging)","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    * [5.3 Testing](#53-testing)","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    * [5.4 DevOps](#54-devops)","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"- [Appendix A: Product Scope](#appendix-a-product-scope)","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"- [Appendix B: User Stories](#appendix-b-user-stories)","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"- [Appendix C: Non Functional Requirements](#appendix-c-non-functional-requirements)","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"- [Appendix D: Instructions for Manual Testing](#appendix-d-instructions-for-manual-testing)","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"## 1. Introduction","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"**Welcome to TermiNUS!**","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"**TermiNUS** is a CLI (command line interface) program for NUS students who wish to consolidate their NUS academic needs such as schedules, questions and notes for the modules that they are taking. With TermiNUS, it aims to aid students and improve their learning experiences while studying in NUS.","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"**TermiNUS** is written in **Java 11** and uses the Object-Oriented Programming (OOP) paradigm which","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"provides us with means to structure a software program into organized and reusable pieces of codes,","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"making it more efficient for future improvements and revisions.","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"### 1.1 Purpose","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"This developer guide is for any developers who wish to contribute to **TermiNUS**. It contains the","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"overall architecture design of **TermiNUS** and it displays our main features implementation details","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"with the rationale and consideration for each. As of now, the guide is written for the current","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"release version of `TermiNUS of v2.1`.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"### 1.2 Acknowledgements","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"We would like to thank the following projects and repositories for assisting in the development of ","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"TermiNUS.","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"- [**GSON:** Providing the JSON parsing capabilities for the main file.](https://github.com/google/gson)","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"- [**OpenPDF:** Providing PDF exporting capabilities for notes.](https://github.com/LibrePDF/OpenPDF)","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"- [**AddressBook-3:** Providing a guide on writing the guides you are reading now.](https://se-education.org/addressbook-level3/)","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"### 1.3 Using this Guide","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"Along the way you might encounter several icons. These icons will provide you with different types of information that you may find useful.","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"\u003e 💡 Take note when you see this icon, as it might tell you something important.","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"\u003e 📝 **Note:** This icon represents additional information that might be useful when using our application.","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"For UML Sequence Diagram, do take note that there is a limitation in `puml` hence the lifeline will still continue even after the `X` has already taken place.","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"Lastly, text that is blue like this [example](#test), are clickable links that will bring you to the relevant part of this developer guide.","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"## 2. Setting up","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"### 2.1 Setting up the project in your computer","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"#### 2.1.1 Prerequisite","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"Before setting up the project, please do ensure you have the following items installed.","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"- [JDK 11](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html)","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"- [IntelliJ IDEA](https://www.jetbrains.com/idea/download/)","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"`Java Development Kit ver 11 (JDK 11)` is the **environment / programming language** in which","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"TermiNUS is written with and `IntelliJ IDEA` will be the **integrated development environment (","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"IDE)** platform for us to write the programming codes on.","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"#### 2.1.2 Getting the project files","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"Go to [link](https://github.com/AY2122S1-CS2113T-T10-2/tp) and retrieve the `TermiNUS project file`.","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"You can do so by **forking** the project and **cloning** a copy into your computer.","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"To learn more about github fork-clone feature please follow the guide","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"on [link](https://docs.github.com/en/get-started/quickstart/fork-a-repo).","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"#### 2.1.3 Setting up on IntelliJ IDEA","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"1. Open the application `IntelliJ IDEA`.","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"2. Inside `IntelliJ IDEA` navigate to `open project` button","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"    1. On the top left of the app, `File`\u0026rarr;`Open...`","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"3. Locate and select the folder containing the files for **Terminus** that you have downloaded","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"   earlier on.","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"4. Change the **Project SDK** that IntelliJ IDEA will be using.","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"    1. On the top left of the app, `File`\u0026rarr;`Project Structure...`","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"    2. Under **Project SDK:** section, find and select JDK version 11.","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"       Eg: `Amazon Corretto version 11.0.12`.","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"    3. Under **Project language level:**, select `SDK default`.","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"5. Verifying the setup","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"    1. After performing the steps above, locate the file `src/main/java/terminus/Terminus.java`,","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"       right-click and select `Run \u0027Terminus.main()\u0027`.","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"    2. If everything is correctly set up, you should see the following terminal.","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"3m0W33D"},"content":"   ","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"   ```","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"    Welcome to TermiNUS!","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"kelvneo"},"content":"    You have no schedule for today.","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"    ","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"    Type any of the following to get started:","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"    \u003e exit","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"    \u003e help","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"kelvneo"},"content":"    \u003e module","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"kelvneo"},"content":"    \u003e go","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"kelvneo"},"content":"    \u003e timetable","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"    ","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"    [] \u003e\u003e\u003e  ","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"   ```","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"#### 2.1.4 Configuring the Coding Style","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"Import the coding style xml file into your IntelliJ IDEA.","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"You can download the `xml` file [here](https://github.com/google/styleguide/blob/gh-pages/intellij-java-google-style.xml).","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"1. Go to IntelliJ IDEA settings page.","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"    1. Located at the **top-right** of the app, click on the gear icon and select `Settings...`.","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"2. Under the settings page, locate the `Code Style` tab.","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"    1. `Editor`\u0026rarr;`Code Style`","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"3. Once you are at the `Code Style` tab, you will need to import the `xml` file.","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"    1. At the `Scheme` section, select the gear icon and select `Import Scheme`","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"       \u0026rarr;`IntelliJ IDEA code style XML`.","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"    2. Locate and select the `xml` file that you have downloaded earlier.","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"    3. Once done, select `Apply` then `OK`.","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"4. Now your IntelliJ IDEA should follow our Coding Style.","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"3m0W33D"},"content":"\u003e 💡 IntelliJ IDEA have certain shortcut key to aid in auto-formatting of code.","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"\u003e Once you are done with a piece of code, highlight the section you have just written and press the","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"\u003e key `CTRL + SHIFT + L`.","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"3m0W33D"},"content":"## 3. Design","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"3m0W33D"},"content":"### 3.1 Architecture","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"3m0W33D"},"content":"This section will provide insight to the general overview of **TermiNUS**\u0027s architecture.","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"3m0W33D"},"content":"![](attachments/ArchitectureDiagram.png)  ","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"3m0W33D"},"content":"\u003e 💡 The **dotted arrow** represent a dependency between different components.","lastModifiedDate":"2021-11-07"},{"lineNumber":166,"author":{"gitId":"3m0W33D"},"content":"\u003e The **solid arrow** represents an interaction between the component and the external system or user.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":167,"author":{"gitId":"3m0W33D"},"content":"\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":168,"author":{"gitId":"3m0W33D"},"content":"The Architecture Diagram above describes the high-level design of **TermiNUS** and ","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"3m0W33D"},"content":"how the different components interact with each other. Below we will provide a quick overview of ","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"3m0W33D"},"content":"each component involved.  ","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"3m0W33D"},"content":"The `Terminus` class is the main entry point of the application and contains the `main` method used ","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"3m0W33D"},"content":"by Java as the starting function.","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"3m0W33D"},"content":"The `Terminus` class main responsibilities include:","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"3m0W33D"},"content":"- Initializing various components required for the program to run.","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"3m0W33D"},"content":"- Requesting the specific modules to load data from file into the program.","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"3m0W33D"},"content":"- Performing any data entry saving and clean up when the program is going to terminate.","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"3m0W33D"},"content":"The rest of **TermiNUS** consists of 7 other components:","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"3m0W33D"},"content":"- `UI`: Manages the input and output of **TermiNUS**.","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"3m0W33D"},"content":"- `Parser`: Parses the user inputs and their arguments.","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"3m0W33D"},"content":"- `Command`: Execute the required commands and store the output.","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"3m0W33D"},"content":"- `Module`: Manage the multiple different types of `Content`","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"3m0W33D"},"content":"- `Content`: Stores and Provides user information.","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"3m0W33D"},"content":"- `Storage`: Reads the data, and writes data back to the hard disk.","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"3m0W33D"},"content":"Below contains some example sequence diagram to help illustrate the general program flow and ","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"3m0W33D"},"content":"how the many object interact with one another in `TermiNUS`.  ","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"3m0W33D"},"content":"The first diagram shows the constructor of `Terminus` class running to initialize essential Modules ","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"3m0W33D"},"content":"such as `UI` and `Parser`.  ","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"3m0W33D"},"content":"![](attachments/Terminus.png)  ","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"3m0W33D"},"content":"The next sequence diagram shows the loading of user data into `Terminus`.  ","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"3m0W33D"},"content":"![](attachments/MainInit.png)  ","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"3m0W33D"},"content":"The next sequence diagram shows an instance the main logic loop.","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"3m0W33D"},"content":"![](attachments/MainLogic.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"3m0W33D"},"content":"\u003e 📝 **Note:** The cross on each lifeline represents the end of objects lifeline. ","lastModifiedDate":"2021-11-07"},{"lineNumber":204,"author":{"gitId":"3m0W33D"},"content":"\u003e Due to the limitation of PlantUML the line continues to extend. ","lastModifiedDate":"2021-11-07"},{"lineNumber":205,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"3m0W33D"},"content":"The next sequence diagram shows an instance of command execution.","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"3m0W33D"},"content":"![](attachments/loopLogic.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"3m0W33D"},"content":"The next sequence diagram show the termination of `Terminus`  ","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"3m0W33D"},"content":"![](attachments/MainExit.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"3m0W33D"},"content":"### 3.2 UI Component","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"kelvneo"},"content":"![](attachments/UIClassDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"kelvneo"},"content":"The Ui Component consists of the `Ui` class which handles all input and output operations within ","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"kelvneo"},"content":"TermiNUS application. To reduce coupling, we have used `Ui` on only the main runner `Terminus`, and ","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"kelvneo"},"content":"the Active Recall `GameEnvironment`. If future features require the extended use of `Ui`, they may ","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"kelvneo"},"content":"call `getInstance()` from `Ui` to get the same singleton class as both `GameEnvironment` and ","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"kelvneo"},"content":"`Terminus`.","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"kelvneo"},"content":"The `Ui` implements the following functionality:","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"kelvneo"},"content":"- Printing large custom banners with moving to new workspaces.","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"kelvneo"},"content":"- Getting of user input through `getUserInput()` and `requestCommand()`.","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"kelvneo"},"content":"- Printing string arrays to the output through `printSection()`.","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":232,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"3m0W33D"},"content":"### 3.3 Parser Component","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"3m0W33D"},"content":"![](attachments/ParserClassDiagram.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"kelvneo"},"content":"The CommandParser Component consist of the `CommandParser` and multiple `XYZCommandParser`, ","lastModifiedDate":"2021-10-26"},{"lineNumber":237,"author":{"gitId":"3m0W33D"},"content":"each representing a specific type command parser. The `CommandParser` will receive a command in ","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"3m0W33D"},"content":"`parseCommand` function and check the according `HashMap\u003cString, Command\u003e` before ","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"3m0W33D"},"content":"returning the according `Command` object back. ","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"3m0W33D"},"content":"The `CommandParser` implements the following functionality:","lastModifiedDate":"2021-10-22"},{"lineNumber":242,"author":{"gitId":"3m0W33D"},"content":"- Parsing the command string and giving the respective `Command` object. ","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"3m0W33D"},"content":"- Keeps track of the workspace.","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"3m0W33D"},"content":"- Provides functionality to list all commands for the help `Command`.","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":246,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":247,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"3m0W33D"},"content":"### 3.4 Command Component","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"3m0W33D"},"content":"![](attachments/CommandClassDiagram.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":250,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":251,"author":{"gitId":"3m0W33D"},"content":"The Command Component `Command` class, `CommandResult` class and multiple `XYZCommand` ","lastModifiedDate":"2021-10-22"},{"lineNumber":252,"author":{"gitId":"3m0W33D"},"content":"each representing a specific type of command. Each `Command` will `parseArguments` and set them ","lastModifiedDate":"2021-10-22"},{"lineNumber":253,"author":{"gitId":"3m0W33D"},"content":"to private variables, and then `execute` would run specific operation specified by `XYZCommand`.","lastModifiedDate":"2021-10-22"},{"lineNumber":254,"author":{"gitId":"3m0W33D"},"content":"The `Command` would then store the required changes needed to be made in the `Storage` component and the resulting output message in `CommandResult`.   ","lastModifiedDate":"2021-11-07"},{"lineNumber":255,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":256,"author":{"gitId":"3m0W33D"},"content":"The `CommandResult` will contains certain attributes that will indicate certain operations:","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"3m0W33D"},"content":"- Contains a `message` to be printed as the output for the `Command`.","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"3m0W33D"},"content":"- Contains the `newCommandParser` required to switch workspaces.","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"3m0W33D"},"content":"- Indicate the if file operations are required and the corresponding actions.","lastModifiedDate":"2021-11-04"},{"lineNumber":260,"author":{"gitId":"3m0W33D"},"content":"- Tracks if the program should terminate.","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":262,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":263,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"3m0W33D"},"content":"### 3.5 Module Component","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"3m0W33D"},"content":"![](attachments/Module.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"3m0W33D"},"content":"The Module Components consists of the `ModuleManager` which contains a collection of `NusModule` and","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"3m0W33D"},"content":"maps a module name to a specific `NusModule`.","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"3m0W33D"},"content":"The `NusModule` consist of `ContentManager` which help to manage `Content`.","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"3m0W33D"},"content":"The `ContentManager` accepts a `Content` type generic which is from the Content Component","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"3m0W33D"},"content":"The `ModuleManager` implements the below functionality:","lastModifiedDate":"2021-10-22"},{"lineNumber":274,"author":{"gitId":"3m0W33D"},"content":"- Add, delete or retrieve a specific `NusModule`.","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"3m0W33D"},"content":"- List all module names.","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"3m0W33D"},"content":"- Grants access to the different types of content stored by `NusModule`.","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":279,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":280,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":281,"author":{"gitId":"3m0W33D"},"content":"### 3.6 Content Component","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"3m0W33D"},"content":"![](attachments/Content.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"3m0W33D"},"content":"The Content Component consist of objects such as `Link`, `Question` and `Note`","lastModifiedDate":"2021-10-22"},{"lineNumber":285,"author":{"gitId":"3m0W33D"},"content":"which inherit from the abstract `Content` class. The `ContentManager` allows a generic ","lastModifiedDate":"2021-10-21"},{"lineNumber":286,"author":{"gitId":"3m0W33D"},"content":"`\u003cT extends Content\u003e` which must belong to the `Content` type or its children. The ","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"3m0W33D"},"content":"`ContentManager` manages an `ArrayList` of Content type and provide the following functionality:","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"3m0W33D"},"content":"- Adding of any Content type.","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"3m0W33D"},"content":"- Removing any Content.","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"3m0W33D"},"content":"- Accessing the Content and the inner data attribute.","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"3m0W33D"},"content":"- Getting the total number of content.","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"3m0W33D"},"content":"- Listing all contents.","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"3m0W33D"},"content":"- Accessing the arraylist of contents.","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":296,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":297,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"3m0W33D"},"content":"### 3.7 Active Recall Component","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"kelvneo"},"content":"![Active Recall Class Diagram](attachments/ActiveRecallClassDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"kelvneo"},"content":"The Active Recall Component consists of the `GameEnvironment` as the centre of the design.","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"kelvneo"},"content":"The `GameEnvironment` consists of a `QuestionGenerator` which will only exist if there is a ","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"kelvneo"},"content":"`GameEnvironment`, and a `Ui` instance to handle user input and printing of information. The ","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"kelvneo"},"content":"decision to re-use the `Ui` is to allow easier upgrades to the `Ui` if there is a need in the ","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"kelvneo"},"content":"future.","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":307,"author":{"gitId":"kelvneo"},"content":"The `QuestionGenerator` takes in a list of `Question` and a maximum question count to randomly","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"kelvneo"},"content":"generate questions based on `Random`. If `Random` is not provided, a new `Random` with a random seed","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"kelvneo"},"content":"will be created to generate the `Question` order.","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":311,"author":{"gitId":"kelvneo"},"content":"The `DifficultyModifier` is a utility class used to calculate and tweak the weights of `Question`","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"kelvneo"},"content":"after the user has provided feedback on the difficulty of the question. It uses a ","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"kelvneo"},"content":"[logistic curve](https://en.wikipedia.org/wiki/Logistic_function) to calculate the change in weight.","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"kelvneo"},"content":"For further details on the implementation, head to ","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"kelvneo"},"content":"[4.2 Active Recall Implementation](#42-active-recall-implementation).","lastModifiedDate":"2021-10-21"},{"lineNumber":317,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":318,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":319,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":320,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":321,"author":{"gitId":"3m0W33D"},"content":"### 3.8 Storage Component","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":324,"author":{"gitId":"Woolicious98"},"content":"![](attachments/StorageComponent.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":325,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":326,"author":{"gitId":"Woolicious98"},"content":"The StorageManager handles any file I/O operations of TermiNUS.","lastModifiedDate":"2021-11-03"},{"lineNumber":327,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":328,"author":{"gitId":"Woolicious98"},"content":"The `StorageManager` component:","lastModifiedDate":"2021-11-03"},{"lineNumber":329,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":330,"author":{"gitId":"Woolicious98"},"content":"- can create folder for each module provided by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":331,"author":{"gitId":"Woolicious98"},"content":"- can save / load modules, schedules and links data in / from a `.json` file.","lastModifiedDate":"2021-11-03"},{"lineNumber":332,"author":{"gitId":"Woolicious98"},"content":"- can save / load notes into / from multiple `.txt` files.","lastModifiedDate":"2021-11-03"},{"lineNumber":333,"author":{"gitId":"Woolicious98"},"content":"- can filters invalid data loaded from a `.json` file.","lastModifiedDate":"2021-11-03"},{"lineNumber":334,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"Woolicious98"},"content":"`TermiNUS` saved these data as either a `.json` or `.txt` file so users will be able to edit saved","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"Woolicious98"},"content":"data easily with any available text editor.","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":339,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":340,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":341,"author":{"gitId":"LouisLouis19"},"content":"## 4. Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"Woolicious98"},"content":"This section introduces the specific implementation details and design consideration of some features in TermiNUS.","lastModifiedDate":"2021-11-04"},{"lineNumber":344,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":345,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":346,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":347,"author":{"gitId":"LouisLouis19"},"content":"### 4.1 Timetable Feature","lastModifiedDate":"2021-10-23"},{"lineNumber":348,"author":{"gitId":"LouisLouis19"},"content":"The timetable feature aims to provide users a single command to access all the schedules they store in different modules within TermiNUS.","lastModifiedDate":"2021-10-23"},{"lineNumber":349,"author":{"gitId":"LouisLouis19"},"content":"This feature would ease users in accessing a compilation of all their schedule, instead of having to access all the individual module workspaces.","lastModifiedDate":"2021-10-23"},{"lineNumber":350,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":351,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":352,"author":{"gitId":"LouisLouis19"},"content":"#### 4.1.1 Current Implementation","lastModifiedDate":"2021-10-23"},{"lineNumber":353,"author":{"gitId":"LouisLouis19"},"content":"The following sequence diagram shows how the timetable feature works:","lastModifiedDate":"2021-10-24"},{"lineNumber":354,"author":{"gitId":"LouisLouis19"},"content":"![](attachments/TimetableSequenceDiagram.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":355,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":356,"author":{"gitId":"LouisLouis19"},"content":"The timetable feature is one of TermiNUS\u0027 features which can be accessed from the main workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":357,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":358,"author":{"gitId":"LouisLouis19"},"content":"The `timetable` feature has 2 variations:","lastModifiedDate":"2021-10-21"},{"lineNumber":359,"author":{"gitId":"LouisLouis19"},"content":"- **Daily** Timetable","lastModifiedDate":"2021-10-21"},{"lineNumber":360,"author":{"gitId":"LouisLouis19"},"content":"- **Weekly** timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":361,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":362,"author":{"gitId":"LouisLouis19"},"content":"The timetable feature is facilitated by the `TimetableCommand`.","lastModifiedDate":"2021-10-23"},{"lineNumber":363,"author":{"gitId":"LouisLouis19"},"content":"By running the command `timetable` with the relevant parameter, the `MainCommandParser` will construct a new `TimetableCommand`.","lastModifiedDate":"2021-10-23"},{"lineNumber":364,"author":{"gitId":"LouisLouis19"},"content":"This `TimetableCommand` will be used to execute the user\u0027s timetable instruction.","lastModifiedDate":"2021-10-23"},{"lineNumber":365,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":366,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":367,"author":{"gitId":"LouisLouis19"},"content":"Given below is an example usage scenario showing how the `TimetableCommand` behaves at each step.","lastModifiedDate":"2021-10-23"},{"lineNumber":368,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":369,"author":{"gitId":"LouisLouis19"},"content":"**Step 1:** User executes the command `timetable` from the main workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":370,"author":{"gitId":"LouisLouis19"},"content":"A new `TimetableCommand` will be generated by the `MainCommandParser`","lastModifiedDate":"2021-10-23"},{"lineNumber":371,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":372,"author":{"gitId":"LouisLouis19"},"content":"**Step 2:** The application invokes `TimetableCommand#execute()` to execute the user\u0027s instruction","lastModifiedDate":"2021-10-23"},{"lineNumber":373,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":374,"author":{"gitId":"LouisLouis19"},"content":"![](attachments/TimetableGetDailySchedule.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":375,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":376,"author":{"gitId":"LouisLouis19"},"content":"**Step 3:** During the execution, `TimetableCommand#execute()` will generate a new `Timetable`.","lastModifiedDate":"2021-10-23"},{"lineNumber":377,"author":{"gitId":"LouisLouis19"},"content":"`TimetableCommand#parseArguments()` will also be invoked to acquire the user arguments, if any.","lastModifiedDate":"2021-10-23"},{"lineNumber":378,"author":{"gitId":"LouisLouis19"},"content":"If user argument exists, then `TimetableCommand#execute()` will invoke `Timetable#getDailySchedule()`, as it is a Daily Timetable Instruction. ","lastModifiedDate":"2021-10-23"},{"lineNumber":379,"author":{"gitId":"LouisLouis19"},"content":"Otherwise, `Timetable#getWeeklySchedule()` will be invoked instead to facilitate the Weekly TimetableInstruction.","lastModifiedDate":"2021-10-23"},{"lineNumber":380,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":381,"author":{"gitId":"LouisLouis19"},"content":"**Step 4:** Once the relevant `Timetable` method has been invoked, it will first construct a `ModuleManager` and invokes `ModuleManager#getAllModules()` to get all the user\u0027s modules.","lastModifiedDate":"2021-10-23"},{"lineNumber":382,"author":{"gitId":"LouisLouis19"},"content":"The application will iterate through all the user\u0027s modules and invoke `ModuleManager#getContentManager()` for each of the user\u0027s modules.","lastModifiedDate":"2021-10-23"},{"lineNumber":383,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":384,"author":{"gitId":"LouisLouis19"},"content":"**Step 5:** Once the `ContentManager` has been acquired, the application will invoke `ContentManager#getContents()` to acquire all the `Link` objects stored by the user.","lastModifiedDate":"2021-10-23"},{"lineNumber":385,"author":{"gitId":"LouisLouis19"},"content":"For each `Link`, the application will invoke `Link#getDay()` to allow the filtering out of `Link` objects which has a different `day` attribute from the user request.","lastModifiedDate":"2021-10-23"},{"lineNumber":386,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":387,"author":{"gitId":"LouisLouis19"},"content":"Note: If the instruction type is a Daily Timetable Instruction, then Step 5 will only be executed once for a specific day. ","lastModifiedDate":"2021-11-04"},{"lineNumber":388,"author":{"gitId":"LouisLouis19"},"content":"Otherwise, for a Weekly Timetable Instruction, the process in Step 5 will be repeated for each day in the `DaysOfWeekEnum`.","lastModifiedDate":"2021-10-23"},{"lineNumber":389,"author":{"gitId":"LouisLouis19"},"content":"Once all the relevant `Link` objects have been collected, the application will sort all the user `Link` according to its `startTime` to allow a more convenient viewing.","lastModifiedDate":"2021-10-23"},{"lineNumber":390,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":391,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":392,"author":{"gitId":"LouisLouis19"},"content":"#### 4.1.2 Design Consideration","lastModifiedDate":"2021-11-04"},{"lineNumber":393,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":394,"author":{"gitId":"LouisLouis19"},"content":"This section shows the design considerations that were taken into account when implementing the Timetable feature.","lastModifiedDate":"2021-11-04"},{"lineNumber":395,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":396,"author":{"gitId":"LouisLouis19"},"content":"**Aspect: Accessibility of Timetable**","lastModifiedDate":"2021-11-04"},{"lineNumber":397,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":398,"author":{"gitId":"LouisLouis19"},"content":"| Approach | Pros | Cons |","lastModifiedDate":"2021-11-04"},{"lineNumber":399,"author":{"gitId":"LouisLouis19"},"content":"|----------|------|------|","lastModifiedDate":"2021-11-04"},{"lineNumber":400,"author":{"gitId":"LouisLouis19"},"content":"| Accessed in the main workspace | Generates a compiled timetable of all user schedules | Requires to gather links from all content managers |","lastModifiedDate":"2021-11-04"},{"lineNumber":401,"author":{"gitId":"LouisLouis19"},"content":"| Accessed under each module | Easier to implement, as links are gathered from one content manager | Functionality might not be as useful for users |","lastModifiedDate":"2021-11-04"},{"lineNumber":402,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":403,"author":{"gitId":"LouisLouis19"},"content":"**Chosen Solution:** Accessed in the main workspace, as we decided that organizing and creating a compiled timetable of all the available user schedules will be better for user experience.","lastModifiedDate":"2021-11-04"},{"lineNumber":404,"author":{"gitId":"LouisLouis19"},"content":"Moreover, implementing a timetable for each module might be slightly redundant as a view schedule command could offer a similar functionality albeit not sorted out.","lastModifiedDate":"2021-11-04"},{"lineNumber":405,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":406,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":407,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":408,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":409,"author":{"gitId":"kelvneo"},"content":"### 4.2 Active Recall Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":410,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":411,"author":{"gitId":"kelvneo"},"content":"This section details the technical implementation of Active Recall.","lastModifiedDate":"2021-10-26"},{"lineNumber":412,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":413,"author":{"gitId":"kelvneo"},"content":"To view the high-level diagram, head to ","lastModifiedDate":"2021-10-21"},{"lineNumber":414,"author":{"gitId":"kelvneo"},"content":"[3.7 Active Recall Component](#37-active-recall-component).","lastModifiedDate":"2021-10-21"},{"lineNumber":415,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":416,"author":{"gitId":"kelvneo"},"content":"#### 4.2.1 Current Implementation","lastModifiedDate":"2021-10-26"},{"lineNumber":417,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":418,"author":{"gitId":"kelvneo"},"content":"![Active Recall Sequence Diagram](attachments/ActiveRecallSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":419,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":420,"author":{"gitId":"kelvneo"},"content":"The overall sequence flow is shown above.","lastModifiedDate":"2021-11-01"},{"lineNumber":421,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":422,"author":{"gitId":"kelvneo"},"content":"![](attachments/ActiveRecallCreateEnvironmentSequenceDiagram.png)","lastModifiedDate":"2021-11-01"},{"lineNumber":423,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":424,"author":{"gitId":"kelvneo"},"content":"**Step 1:** When the user executes the `TestCommand`, the `GameEnvironment` will be created with the","lastModifiedDate":"2021-10-26"},{"lineNumber":425,"author":{"gitId":"kelvneo"},"content":"static method `GameEnvironment.createNewEnvironment()`, where it will handle the creation of","lastModifiedDate":"2021-10-26"},{"lineNumber":426,"author":{"gitId":"kelvneo"},"content":"`QuestionGenerator` as well. ","lastModifiedDate":"2021-10-26"},{"lineNumber":427,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":428,"author":{"gitId":"kelvneo"},"content":"**Step 2:** The `QuestionGenerator` creates a `NavigableMap\u003cDouble, Question\u003e` to store all the ","lastModifiedDate":"2021-10-26"},{"lineNumber":429,"author":{"gitId":"kelvneo"},"content":"questions, where the `Double` is the `question.getWeight() + total`, where total is the current sum ","lastModifiedDate":"2021-10-26"},{"lineNumber":430,"author":{"gitId":"kelvneo"},"content":"of all the weights currently in the bank. The rationale for the `NavigableMap` and key value will be","lastModifiedDate":"2021-10-26"},{"lineNumber":431,"author":{"gitId":"kelvneo"},"content":"explained at `promptQuestion()` below.","lastModifiedDate":"2021-10-26"},{"lineNumber":432,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":433,"author":{"gitId":"kelvneo"},"content":"**Step 3:** The newly created `GameEnvironment` will be returned to `TestCommand` where it would ","lastModifiedDate":"2021-10-26"},{"lineNumber":434,"author":{"gitId":"kelvneo"},"content":"call the `run` method within the object.","lastModifiedDate":"2021-10-26"},{"lineNumber":435,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":436,"author":{"gitId":"kelvneo"},"content":"**Step 4:** The `showPreGameInformation()` method will print the information once on the current Active Recall ","lastModifiedDate":"2021-10-26"},{"lineNumber":437,"author":{"gitId":"kelvneo"},"content":"session, such as the actual question pool size, and may include more information and statistics in ","lastModifiedDate":"2021-10-21"},{"lineNumber":438,"author":{"gitId":"kelvneo"},"content":"the future.","lastModifiedDate":"2021-10-21"},{"lineNumber":439,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":440,"author":{"gitId":"kelvneo"},"content":"![](attachments/ActiveRecallShowQuestionSequence.png)","lastModifiedDate":"2021-11-01"},{"lineNumber":441,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":442,"author":{"gitId":"kelvneo"},"content":"**Step 5:** Next, the `run()` method will start a loop and check if there are questions in the local ","lastModifiedDate":"2021-10-26"},{"lineNumber":443,"author":{"gitId":"kelvneo"},"content":"`questionGenerator` to ensure that the session can continue. After which, the `promptQuestion()` is ","lastModifiedDate":"2021-10-21"},{"lineNumber":444,"author":{"gitId":"kelvneo"},"content":"called, where the next question is pulled from `questionGenerator.next()` and displayed to the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":445,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":446,"author":{"gitId":"kelvneo"},"content":"**Step 6:** Within the `next()` method in the `QuestionGenerator`, it will find a random `double` ","lastModifiedDate":"2021-10-26"},{"lineNumber":447,"author":{"gitId":"kelvneo"},"content":"number from `0` to `total`, and look up a `Question` that is closest to the value. When the ","lastModifiedDate":"2021-10-26"},{"lineNumber":448,"author":{"gitId":"kelvneo"},"content":"\u003ckbd\u003eEnter\u003c/kbd\u003e key is pressed by the user, the answer is then displayed and the `promptQuestion()` ","lastModifiedDate":"2021-10-26"},{"lineNumber":449,"author":{"gitId":"kelvneo"},"content":"passes the `Question` object back to the `run()` method.","lastModifiedDate":"2021-10-26"},{"lineNumber":450,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":451,"author":{"gitId":"kelvneo"},"content":"![](attachments/ActiveRecallGetFeedbackSequence.png)","lastModifiedDate":"2021-11-01"},{"lineNumber":452,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":453,"author":{"gitId":"kelvneo"},"content":"**Step 7:** The program now runs `getUserFeedback()` to collect user feedback, and return","lastModifiedDate":"2021-10-26"},{"lineNumber":454,"author":{"gitId":"kelvneo"},"content":"the difficulty back to `run()` after cleaning the input. This is also when the user can decide if ","lastModifiedDate":"2021-10-21"},{"lineNumber":455,"author":{"gitId":"kelvneo"},"content":"they wish to quit the session, and if they do, the difficulty value will be set to `EXIT_CODE \u003d -1`.","lastModifiedDate":"2021-10-21"},{"lineNumber":456,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":457,"author":{"gitId":"kelvneo"},"content":"![](attachments/ActiveRecallUpdateQuestionDifficultySequence.png)","lastModifiedDate":"2021-11-01"},{"lineNumber":458,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":459,"author":{"gitId":"kelvneo"},"content":"**Step 8:** If the `difficulty` is checked to be the `EXIT_CODE`, the loop will break and return. Otherwise, the","lastModifiedDate":"2021-10-26"},{"lineNumber":460,"author":{"gitId":"kelvneo"},"content":"`Question`\u0027s difficulty will now be changed in the `updateQuestionDifficulty(question, difficulty)` ","lastModifiedDate":"2021-10-21"},{"lineNumber":461,"author":{"gitId":"kelvneo"},"content":"method, where we use the difference between the extremes and the current difficulty to apply into ","lastModifiedDate":"2021-10-21"},{"lineNumber":462,"author":{"gitId":"kelvneo"},"content":"the logistic curve to determine the amount to increase or decrease the weight of the randomness by.","lastModifiedDate":"2021-10-21"},{"lineNumber":463,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":464,"author":{"gitId":"kelvneo"},"content":"**Step 9:** Once the adjustment of weights of the question is done, **Step 5 to 9** is repeated if ","lastModifiedDate":"2021-10-26"},{"lineNumber":465,"author":{"gitId":"kelvneo"},"content":"there are questions left inside `QuestionGenerator`. Otherwise, the Active Recall session will be terminated, ","lastModifiedDate":"2021-10-26"},{"lineNumber":466,"author":{"gitId":"kelvneo"},"content":"and the input will be passed back to the `CommandParser`.","lastModifiedDate":"2021-10-26"},{"lineNumber":467,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":468,"author":{"gitId":"kelvneo"},"content":"#### 4.2.2 Design Consideration","lastModifiedDate":"2021-10-26"},{"lineNumber":469,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":470,"author":{"gitId":"kelvneo"},"content":"The reason for using `NavigableMap` to generate questions was because it provides a method called ","lastModifiedDate":"2021-10-26"},{"lineNumber":471,"author":{"gitId":"kelvneo"},"content":"`.higherEntry(key)`, which guarantees a `Question` is returned provided the value never exceeds ","lastModifiedDate":"2021-10-26"},{"lineNumber":472,"author":{"gitId":"kelvneo"},"content":"the total weight of the question pool (which should never happen as the random number generator can ","lastModifiedDate":"2021-10-26"},{"lineNumber":473,"author":{"gitId":"kelvneo"},"content":"only generate between `0` and `total`).","lastModifiedDate":"2021-10-26"},{"lineNumber":474,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":475,"author":{"gitId":"kelvneo"},"content":"**Aspect: Hiding the answer from the user**","lastModifiedDate":"2021-11-01"},{"lineNumber":476,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":477,"author":{"gitId":"kelvneo"},"content":"| Approach | Pros | Cons |","lastModifiedDate":"2021-11-01"},{"lineNumber":478,"author":{"gitId":"kelvneo"},"content":"|----------|------|------|","lastModifiedDate":"2021-11-01"},{"lineNumber":479,"author":{"gitId":"kelvneo"},"content":"| Enter Key | Allows user to reveal the answer at their own pace | Requires user input |","lastModifiedDate":"2021-11-01"},{"lineNumber":480,"author":{"gitId":"kelvneo"},"content":"| Timer | No user input | Might reveal answers too early or late |","lastModifiedDate":"2021-11-01"},{"lineNumber":481,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":482,"author":{"gitId":"kelvneo"},"content":"**Chosen Solution:** Enter Key, as it is the most effective way to ensure the answer does not get ","lastModifiedDate":"2021-11-01"},{"lineNumber":483,"author":{"gitId":"kelvneo"},"content":"revealed unless the user intents to view it.","lastModifiedDate":"2021-11-01"},{"lineNumber":484,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":485,"author":{"gitId":"kelvneo"},"content":"**Aspect: Questions randomness needs to be re-weighed.**","lastModifiedDate":"2021-11-01"},{"lineNumber":486,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":487,"author":{"gitId":"kelvneo"},"content":"| Approach | Pros | Cons |","lastModifiedDate":"2021-11-01"},{"lineNumber":488,"author":{"gitId":"kelvneo"},"content":"|----------|------|------|","lastModifiedDate":"2021-11-01"},{"lineNumber":489,"author":{"gitId":"kelvneo"},"content":"| Change weights by a fixed amount | Simple to implement | Easy questions might never ever appear again. |","lastModifiedDate":"2021-11-01"},{"lineNumber":490,"author":{"gitId":"kelvneo"},"content":"| Change weights with logistics curve | Weights don\u0027t increase/decrease out of control | Requires curve calibration |","lastModifiedDate":"2021-11-01"},{"lineNumber":491,"author":{"gitId":"kelvneo"},"content":"| Use ELO/Glicko | Questions have fair share | Requires questions to \"compete\" against each other |","lastModifiedDate":"2021-11-01"},{"lineNumber":492,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":493,"author":{"gitId":"kelvneo"},"content":"**Chosen Solution:** Logistic curve, as it ensures once the user finds a hard question easy, it ","lastModifiedDate":"2021-11-01"},{"lineNumber":494,"author":{"gitId":"kelvneo"},"content":"would quickly move down a difficulty and vice versa. We will continue to seek user feedback and ","lastModifiedDate":"2021-11-01"},{"lineNumber":495,"author":{"gitId":"kelvneo"},"content":"tweak the curve parameters if needed.","lastModifiedDate":"2021-11-01"},{"lineNumber":496,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":497,"author":{"gitId":"kelvneo"},"content":"![](attachments/desmos-graph.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":498,"author":{"gitId":"kelvneo"},"content":"The parameters of the logistic curve can be viewed here:","lastModifiedDate":"2021-10-26"},{"lineNumber":499,"author":{"gitId":"kelvneo"},"content":"[https://www.desmos.com/calculator/qefovvnuhx](https://www.desmos.com/calculator/qefovvnuhx).","lastModifiedDate":"2021-10-26"},{"lineNumber":500,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":501,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":502,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":503,"author":{"gitId":"3m0W33D"},"content":"### 4.3 Workspace Implementation","lastModifiedDate":"2021-10-23"},{"lineNumber":504,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":505,"author":{"gitId":"3m0W33D"},"content":"This workspace feature aims to provide users with a better experience in navigating the different","lastModifiedDate":"2021-10-23"},{"lineNumber":506,"author":{"gitId":"3m0W33D"},"content":"features TermiNUS has to offer, and caters for both users which enjoy using a particular feature or","lastModifiedDate":"2021-10-23"},{"lineNumber":507,"author":{"gitId":"3m0W33D"},"content":"prefer typing commands in a single step.","lastModifiedDate":"2021-10-23"},{"lineNumber":508,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":509,"author":{"gitId":"3m0W33D"},"content":"#### 4.3.1 Current Implementation","lastModifiedDate":"2021-10-23"},{"lineNumber":510,"author":{"gitId":"3m0W33D"},"content":"The workspace feature was implemented with the idea of a single command input as well as a multiple ","lastModifiedDate":"2021-10-23"},{"lineNumber":511,"author":{"gitId":"3m0W33D"},"content":"step input. For example, running 3 separate commands `go Module` -\u003e `note` -\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":512,"author":{"gitId":"3m0W33D"},"content":"`add \"Content Name\" \"Content\"` would perform the same functionality as a single command ","lastModifiedDate":"2021-10-23"},{"lineNumber":513,"author":{"gitId":"3m0W33D"},"content":"`go Module note add \"Content Name\" \"Content\"`. This workspace feature implemented in the Command and ","lastModifiedDate":"2021-10-23"},{"lineNumber":514,"author":{"gitId":"3m0W33D"},"content":"CommandParser component.","lastModifiedDate":"2021-10-23"},{"lineNumber":515,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":516,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":517,"author":{"gitId":"3m0W33D"},"content":"![](attachments/CommandDetailedClassDiagram.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":518,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":519,"author":{"gitId":"3m0W33D"},"content":"The `Command` class in fact has an abstract child `WorkspaceCommand` and grandchild ","lastModifiedDate":"2021-10-23"},{"lineNumber":520,"author":{"gitId":"3m0W33D"},"content":"`InnerModuleCommand` that inherit from it. In general, aside from the `Command` classes in the ","lastModifiedDate":"2021-10-23"},{"lineNumber":521,"author":{"gitId":"3m0W33D"},"content":"diagram, all other `XYZCommand` children simply inherit from `Command` itself. Each `Command` child ","lastModifiedDate":"2021-10-23"},{"lineNumber":522,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":523,"author":{"gitId":"3m0W33D"},"content":"The `WorkspaceCommand` class which inherits from `Command` and requires a `CommandParser` in its ","lastModifiedDate":"2021-10-23"},{"lineNumber":524,"author":{"gitId":"3m0W33D"},"content":"constructor as this command helps with the workspace implementation. When the command is executed,","lastModifiedDate":"2021-10-23"},{"lineNumber":525,"author":{"gitId":"3m0W33D"},"content":"it will check if there are any arguments to the command. If there are arguments, it will pass the ","lastModifiedDate":"2021-10-23"},{"lineNumber":526,"author":{"gitId":"3m0W33D"},"content":"remaining arguments the initialised `commandMap` and attempt to parse and execute the command. ","lastModifiedDate":"2021-10-23"},{"lineNumber":527,"author":{"gitId":"3m0W33D"},"content":"In the case of error, an exception will be thrown and caught in the `Terminus` class. ","lastModifiedDate":"2021-10-23"},{"lineNumber":528,"author":{"gitId":"3m0W33D"},"content":"In the case where there is no arguments, the program will store the `commandMap` in the ","lastModifiedDate":"2021-10-23"},{"lineNumber":529,"author":{"gitId":"3m0W33D"},"content":"`CommandResult` `additionalData` attribute and returns that `CommandResult` to the `Terminus` class.","lastModifiedDate":"2021-10-23"},{"lineNumber":530,"author":{"gitId":"3m0W33D"},"content":"The `Terminus` class checks if the `CommandResult` contains a `additionData` and replaces its own ","lastModifiedDate":"2021-10-23"},{"lineNumber":531,"author":{"gitId":"3m0W33D"},"content":"`CommandParser` with the `CommandParser` stored in `additionalData`. This command helps `Terminus` ","lastModifiedDate":"2021-10-23"},{"lineNumber":532,"author":{"gitId":"3m0W33D"},"content":"to change and beware of workspace changes","lastModifiedDate":"2021-10-23"},{"lineNumber":533,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":534,"author":{"gitId":"3m0W33D"},"content":"The `InnerModuleCommand` class inherits from the `WorkspaceCommand`. ","lastModifiedDate":"2021-10-23"},{"lineNumber":535,"author":{"gitId":"3m0W33D"},"content":"It functions identical the `WorkspaceCommand` but has some subtle differences such as requiring a ","lastModifiedDate":"2021-10-23"},{"lineNumber":536,"author":{"gitId":"3m0W33D"},"content":"`InnerModuleCommandParser` which inherits from a `CommandParser` but can store another ","lastModifiedDate":"2021-10-23"},{"lineNumber":537,"author":{"gitId":"3m0W33D"},"content":"attribute called `moduleName`. The `InnerModuleCommand` `execute` function will set the initialized ","lastModifiedDate":"2021-10-23"},{"lineNumber":538,"author":{"gitId":"3m0W33D"},"content":"`InnerModuleCommandParser`\u0027s`moduleName` attribute using its own stored `moduleName` attribute.","lastModifiedDate":"2021-10-23"},{"lineNumber":539,"author":{"gitId":"3m0W33D"},"content":"This `InnerModuleCommand` purpose to enable any `InnerModuleCommandParser` to be aware of which ","lastModifiedDate":"2021-10-23"},{"lineNumber":540,"author":{"gitId":"3m0W33D"},"content":"module and pass this module to any of the subsequent commands it may parse.","lastModifiedDate":"2021-10-23"},{"lineNumber":541,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":542,"author":{"gitId":"3m0W33D"},"content":"The `GoCommand` in particular is a special `WorkspaceCommand` which has a unique feature that sets ","lastModifiedDate":"2021-10-23"},{"lineNumber":543,"author":{"gitId":"3m0W33D"},"content":"the `ModuleWorkspaceCommandParser` class `workspace` attribute to a specific module name and after","lastModifiedDate":"2021-10-23"},{"lineNumber":544,"author":{"gitId":"3m0W33D"},"content":"validating that the module exists. This command starts the storing of the module name that the ","lastModifiedDate":"2021-10-23"},{"lineNumber":545,"author":{"gitId":"3m0W33D"},"content":"subsequent commands may use identify the module data to retrieve.","lastModifiedDate":"2021-10-23"},{"lineNumber":546,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":547,"author":{"gitId":"3m0W33D"},"content":"![](attachments/ParserDetailedClassDiagram.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":548,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":549,"author":{"gitId":"3m0W33D"},"content":"The `CommandParser` class has an abstract child `InnerModuleCommandParser` class that inherit from ","lastModifiedDate":"2021-10-23"},{"lineNumber":550,"author":{"gitId":"3m0W33D"},"content":"it. Other than the `CommandParser` classes mentioned in the diagram above, all other ","lastModifiedDate":"2021-10-23"},{"lineNumber":551,"author":{"gitId":"3m0W33D"},"content":"`XYZCommandParser` inherit from the `CommandParser` class directly. Each `CommandParser` class ","lastModifiedDate":"2021-10-23"},{"lineNumber":552,"author":{"gitId":"3m0W33D"},"content":"contains a `HashMap\u003cString, Command\u003e` which helps in parsing and return the specific `Command` ","lastModifiedDate":"2021-10-23"},{"lineNumber":553,"author":{"gitId":"3m0W33D"},"content":"object back.","lastModifiedDate":"2021-10-23"},{"lineNumber":554,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":555,"author":{"gitId":"3m0W33D"},"content":"The `InnerModuleCommandParser` functions similar to a regular `CommandParser` but stores and ","lastModifiedDate":"2021-10-23"},{"lineNumber":556,"author":{"gitId":"3m0W33D"},"content":"extra attribute called `moduleName`. This attribute will be set in all `Commands` that are parsed ","lastModifiedDate":"2021-10-23"},{"lineNumber":557,"author":{"gitId":"3m0W33D"},"content":"with the `parseCommand` function. The `moduleName` allows all it\u0027s `Commands` to be aware of which ","lastModifiedDate":"2021-10-23"},{"lineNumber":558,"author":{"gitId":"3m0W33D"},"content":"module they need to retrieve the stored data.","lastModifiedDate":"2021-10-23"},{"lineNumber":559,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":560,"author":{"gitId":"3m0W33D"},"content":"The `ModuleWorkspaceCommandParser` is a special `CommandParser` that sets the `moduleName` ","lastModifiedDate":"2021-10-23"},{"lineNumber":561,"author":{"gitId":"3m0W33D"},"content":"attribute for all the subsequent commands, so that they become aware of what module they are ","lastModifiedDate":"2021-10-23"},{"lineNumber":562,"author":{"gitId":"3m0W33D"},"content":"modifying.","lastModifiedDate":"2021-10-23"},{"lineNumber":563,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":564,"author":{"gitId":"3m0W33D"},"content":"To explain the concept, more clearly we will be explaining how the input from the user","lastModifiedDate":"2021-10-23"},{"lineNumber":565,"author":{"gitId":"3m0W33D"},"content":"`go Module note add \"Content Name\" \"Content\"` will be executed.","lastModifiedDate":"2021-10-23"},{"lineNumber":566,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":567,"author":{"gitId":"3m0W33D"},"content":"![](attachments/CommandExecution.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":568,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":569,"author":{"gitId":"3m0W33D"},"content":"**Step 1:** After receiving the user input in `Terminus`, `MainCommandParser` is called to parse the input ","lastModifiedDate":"2021-10-23"},{"lineNumber":570,"author":{"gitId":"3m0W33D"},"content":"with the `parseCommand` function which return the specific `Command` class. In this case `GoCommand` ","lastModifiedDate":"2021-10-23"},{"lineNumber":571,"author":{"gitId":"3m0W33D"},"content":"is returned. The Command Parsers function by stripping commands down layer by layer. Note the ","lastModifiedDate":"2021-11-04"},{"lineNumber":572,"author":{"gitId":"3m0W33D"},"content":"remaining arguments is `Module note add \"Content Name\" \"Content\"`. The `GoCommand` will execution ","lastModifiedDate":"2021-11-04"},{"lineNumber":573,"author":{"gitId":"3m0W33D"},"content":"will be shown in `Go Execution` below.","lastModifiedDate":"2021-11-04"},{"lineNumber":574,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":575,"author":{"gitId":"3m0W33D"},"content":"![](attachments/GoCommandExecution.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":576,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":577,"author":{"gitId":"3m0W33D"},"content":"**Step 2:** The `GoCommand` executes and validates the module name stored as the `moduleName` attribute of ","lastModifiedDate":"2021-11-04"},{"lineNumber":578,"author":{"gitId":"3m0W33D"},"content":"the `GoCommand` and sets the workspace of the stored `commandMap` with the value of the module name.","lastModifiedDate":"2021-10-23"},{"lineNumber":579,"author":{"gitId":"3m0W33D"},"content":"This is done so via the `setWorkspace` function, and for this scenario the workspace for","lastModifiedDate":"2021-10-23"},{"lineNumber":580,"author":{"gitId":"3m0W33D"},"content":"`ModuleWorkspaceCommandParser` is set. Note the remaining arguments is ","lastModifiedDate":"2021-11-04"},{"lineNumber":581,"author":{"gitId":"3m0W33D"},"content":"`note add \"Content Name\" \"Content\"` and the module name is `Module`.","lastModifiedDate":"2021-11-04"},{"lineNumber":582,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":583,"author":{"gitId":"3m0W33D"},"content":"**Step 3:** Similar to step 1 but with a different `CommandParser`, the ","lastModifiedDate":"2021-10-23"},{"lineNumber":584,"author":{"gitId":"3m0W33D"},"content":"`ModuleWorkspaceCommandParser` parses the remaining arguments from `GoCommand` as a command ","lastModifiedDate":"2021-10-23"},{"lineNumber":585,"author":{"gitId":"3m0W33D"},"content":"and sets the `NoteCommand`\u0027s `moduleName` attribute to the value of the module name stored in its ","lastModifiedDate":"2021-10-23"},{"lineNumber":586,"author":{"gitId":"3m0W33D"},"content":"workspace. It then runs the `NoteCommand` `execute` function. ","lastModifiedDate":"2021-11-04"},{"lineNumber":587,"author":{"gitId":"3m0W33D"},"content":"Note the remaining arguments is `add \"Content Name\" \"Content\"` and the module name is `Module`","lastModifiedDate":"2021-10-23"},{"lineNumber":588,"author":{"gitId":"3m0W33D"},"content":"\u003e 📝 **Note:** If the remaining arguments is empty, `ModuleWorkspaceCommandParser` will be stored ","lastModifiedDate":"2021-10-23"},{"lineNumber":589,"author":{"gitId":"3m0W33D"},"content":"\u003e inside of `CommandResult` and returned to `Terminus`. `Terminus` will then replace its ","lastModifiedDate":"2021-10-23"},{"lineNumber":590,"author":{"gitId":"3m0W33D"},"content":"\u003e `commandParser` with `ModuleWorkspaceCommandParser`, changing the workspace. This would be the ","lastModifiedDate":"2021-11-04"},{"lineNumber":591,"author":{"gitId":"3m0W33D"},"content":"\u003e same as running the command `go Module` without any further arguments.","lastModifiedDate":"2021-11-04"},{"lineNumber":592,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":593,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":594,"author":{"gitId":"3m0W33D"},"content":"![](attachments/NoteCommandExecution.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":595,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":596,"author":{"gitId":"3m0W33D"},"content":"**Step 4:** Similar to step 1, the `NoteCommand` `setsModule` for the `NoteCommandParser` that is ","lastModifiedDate":"2021-10-23"},{"lineNumber":597,"author":{"gitId":"3m0W33D"},"content":"stored in the `commandMap` attribute and parses the remaining arguments ","lastModifiedDate":"2021-10-23"},{"lineNumber":598,"author":{"gitId":"3m0W33D"},"content":"`add \"Content Name\" \"Content\"` which results in a `AddNoteCommand`. The `execute` function of ","lastModifiedDate":"2021-10-23"},{"lineNumber":599,"author":{"gitId":"3m0W33D"},"content":"`AddNoteCommand` performs the needed modification to the `NusModule` for the module with the name ","lastModifiedDate":"2021-10-23"},{"lineNumber":600,"author":{"gitId":"3m0W33D"},"content":"`Module`(This is not shown to prevent confusion). The `execute` function then returns ","lastModifiedDate":"2021-11-04"},{"lineNumber":601,"author":{"gitId":"3m0W33D"},"content":"a `CommandResult` that is propagated to `Terminus`.","lastModifiedDate":"2021-11-04"},{"lineNumber":602,"author":{"gitId":"3m0W33D"},"content":"\u003e 📝 **Note:** If the remaining arguments is empty, `NoteCommandParser` will be stored","lastModifiedDate":"2021-10-23"},{"lineNumber":603,"author":{"gitId":"3m0W33D"},"content":"\u003e inside of `CommandResult` and returned to `Terminus`. `Terminus` will then replace its","lastModifiedDate":"2021-10-23"},{"lineNumber":604,"author":{"gitId":"3m0W33D"},"content":"\u003e `commandParser` with `NoteCommandParser`, changing the workspace. This would be the","lastModifiedDate":"2021-11-04"},{"lineNumber":605,"author":{"gitId":"3m0W33D"},"content":"\u003e same as running the command `go Module note` without any further arguments.","lastModifiedDate":"2021-11-04"},{"lineNumber":606,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":607,"author":{"gitId":"3m0W33D"},"content":"#### 4.3.2 Design considerations","lastModifiedDate":"2021-10-23"},{"lineNumber":608,"author":{"gitId":"3m0W33D"},"content":"This section shows the design considerations that were taken into account when implementing ","lastModifiedDate":"2021-10-23"},{"lineNumber":609,"author":{"gitId":"3m0W33D"},"content":"the command parsing.  ","lastModifiedDate":"2021-10-23"},{"lineNumber":610,"author":{"gitId":"3m0W33D"},"content":"Aspect: **Usability for other fellow developers**","lastModifiedDate":"2021-10-23"},{"lineNumber":611,"author":{"gitId":"3m0W33D"},"content":"Since a `Command` class is required for almost all functionalities in TermiNUS ensuring that the ","lastModifiedDate":"2021-10-23"},{"lineNumber":612,"author":{"gitId":"3m0W33D"},"content":"Custom commands and Command Parsers should be easy for others to implement.  ","lastModifiedDate":"2021-10-23"},{"lineNumber":613,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":614,"author":{"gitId":"3m0W33D"},"content":"| Approach | Pros | Cons|","lastModifiedDate":"2021-10-23"},{"lineNumber":615,"author":{"gitId":"3m0W33D"},"content":"| ---  |---|---|","lastModifiedDate":"2021-10-23"},{"lineNumber":616,"author":{"gitId":"3m0W33D"},"content":"| Single Command Parser with all Commands inherit from a single `Command` Class, a large switch statement to separate commands.| Easy to implement and `execute` function for each class has higher flexibility as they can have different arguments| When extending to multilevel workspace can be tedious to implement.|","lastModifiedDate":"2021-10-23"},{"lineNumber":617,"author":{"gitId":"3m0W33D"},"content":"| Multiple Command Parsers each with its own set of commands, require separate managing. | Easy to create new workspace and add command specific the to workspace.| Implementation can be tedious and difficult to upgrade and manage. |  ","lastModifiedDate":"2021-10-27"},{"lineNumber":618,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":619,"author":{"gitId":"3m0W33D"},"content":"Eventually the team decide to go with the second implementation, as we require multi-level ","lastModifiedDate":"2021-10-23"},{"lineNumber":620,"author":{"gitId":"3m0W33D"},"content":"workspaces and would like to create our own workspace for each feature. Aside from that the ","lastModifiedDate":"2021-10-23"},{"lineNumber":621,"author":{"gitId":"3m0W33D"},"content":"`Command` provides common functionality that many commands need hence reducing repetition of code.","lastModifiedDate":"2021-11-04"},{"lineNumber":622,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":623,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":624,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":625,"author":{"gitId":"LouisLouis19"},"content":"### 4.4 Conflict Manager Implementation","lastModifiedDate":"2021-10-24"},{"lineNumber":626,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":627,"author":{"gitId":"LouisLouis19"},"content":"The following sequence diagram illustrates how the conflict manager feature works:","lastModifiedDate":"2021-10-24"},{"lineNumber":628,"author":{"gitId":"LouisLouis19"},"content":"![](attachments/ConflictManagerSequenceDiagram.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":629,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":630,"author":{"gitId":"LouisLouis19"},"content":"Conflict Manager is a default TermiNUS feature which complements the basic add Link feature.","lastModifiedDate":"2021-10-24"},{"lineNumber":631,"author":{"gitId":"LouisLouis19"},"content":"This feature will automatically list out all the conflicting `Link` objects with the newly added `Link` when user executes `addLinkCommand`","lastModifiedDate":"2021-10-24"},{"lineNumber":632,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":633,"author":{"gitId":"LouisLouis19"},"content":"The conflict feature is facilitated by the `ConflictManager`.","lastModifiedDate":"2021-10-24"},{"lineNumber":634,"author":{"gitId":"LouisLouis19"},"content":"There is no need for users to run a specific command to execute the Conflict Manager as the application will implement the Conflict Manager by default","lastModifiedDate":"2021-10-24"},{"lineNumber":635,"author":{"gitId":"LouisLouis19"},"content":"when users try to add a new Link within their modules.","lastModifiedDate":"2021-10-24"},{"lineNumber":636,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":637,"author":{"gitId":"LouisLouis19"},"content":"Given below is an example usage scenario showing how the `ConflictManager` behaves at each step.","lastModifiedDate":"2021-10-24"},{"lineNumber":638,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":639,"author":{"gitId":"LouisLouis19"},"content":"**Step 1:** When user executes `addLinkCommand` from  workspace.","lastModifiedDate":"2021-10-24"},{"lineNumber":640,"author":{"gitId":"LouisLouis19"},"content":"A new `ConflictManager` will be generated by the `addLinkComand`","lastModifiedDate":"2021-10-24"},{"lineNumber":641,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":642,"author":{"gitId":"LouisLouis19"},"content":"**Step 2:** The application invokes `ConflictManager#getConflictingSchedule()` to get all the conflicting Link with the newly added Link","lastModifiedDate":"2021-10-24"},{"lineNumber":643,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":644,"author":{"gitId":"LouisLouis19"},"content":"**Step 3:** During the current invocation, the `ConflictManager` will self-invoke `getAllLinks` to store all the possible conflicting links in an `Arraylist`.","lastModifiedDate":"2021-10-24"},{"lineNumber":645,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":646,"author":{"gitId":"LouisLouis19"},"content":"**Step 4:** Once `ConflictManager#getAllLinks` has been invoked, it will first construct a `ModuleManager` and invokes `ModuleManager#getAllModules()` to get all the user\u0027s modules.","lastModifiedDate":"2021-10-24"},{"lineNumber":647,"author":{"gitId":"LouisLouis19"},"content":"The application will iterate through all the user\u0027s modules and invoke `ModuleManager#getContentManager()` for each of the user\u0027s modules.","lastModifiedDate":"2021-10-24"},{"lineNumber":648,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":649,"author":{"gitId":"LouisLouis19"},"content":"**Step 5:** Once the `ContentManager` has been acquired, the application will invoke `ContentManager#getContents()` to acquire all the `Link` objects stored by the user.","lastModifiedDate":"2021-10-24"},{"lineNumber":650,"author":{"gitId":"LouisLouis19"},"content":"All the `Link` objects will be stored in the `ArrayList` created in Step 3.","lastModifiedDate":"2021-10-24"},{"lineNumber":651,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":652,"author":{"gitId":"LouisLouis19"},"content":"**Step 6:** The `ArrayList` of `Link` objects will be iterated through and filtered. ","lastModifiedDate":"2021-10-24"},{"lineNumber":653,"author":{"gitId":"LouisLouis19"},"content":"If the newly added `Link` object has the same `day` attribute and overlapping `startTime` and `endTime` as the current `Link` being filtered, then the `Link` description will be appended to a `StringBuilder`.","lastModifiedDate":"2021-10-24"},{"lineNumber":654,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":655,"author":{"gitId":"LouisLouis19"},"content":"**Step 7:** The `StringBuilder` object will be converted to a `String` object before being returned to `ConflictManager` and `AddLinkCommand`.","lastModifiedDate":"2021-10-24"},{"lineNumber":656,"author":{"gitId":"LouisLouis19"},"content":"Then the `AddLinkCommand` will display all the conflicting schedule during its execution","lastModifiedDate":"2021-10-24"},{"lineNumber":657,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":658,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":659,"author":{"gitId":"LouisLouis19"},"content":"#### 4.4.2 Design Consideration","lastModifiedDate":"2021-11-04"},{"lineNumber":660,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":661,"author":{"gitId":"LouisLouis19"},"content":"This section shows the design considerations that were taken into account when implementing the Conflict Manager feature.","lastModifiedDate":"2021-11-04"},{"lineNumber":662,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":663,"author":{"gitId":"LouisLouis19"},"content":"**Aspect: Accessibility of Conflict Manager**","lastModifiedDate":"2021-11-04"},{"lineNumber":664,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":665,"author":{"gitId":"LouisLouis19"},"content":"| Approach | Pros | Cons |","lastModifiedDate":"2021-11-04"},{"lineNumber":666,"author":{"gitId":"LouisLouis19"},"content":"|----------|------|------|","lastModifiedDate":"2021-11-04"},{"lineNumber":667,"author":{"gitId":"LouisLouis19"},"content":"| Accessed like other commands | Allows users to view conflicts anytime | Users might not be aware of conflicting schedules upon adding |","lastModifiedDate":"2021-11-04"},{"lineNumber":668,"author":{"gitId":"LouisLouis19"},"content":"| Integrated to Add Schedule | Users will be aware of conflicting schedules upon adding | Slightly challenging for users to identify conflicts at any given time |","lastModifiedDate":"2021-11-04"},{"lineNumber":669,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":670,"author":{"gitId":"LouisLouis19"},"content":"**Chosen Solution:** Integrated to Add Schedule, as we would like to notify users immediately when a conflict occurs.","lastModifiedDate":"2021-11-04"},{"lineNumber":671,"author":{"gitId":"LouisLouis19"},"content":"We hope that all users are aware of the conflicts as soon as possible, so that conflicts can be resolved quickly. ","lastModifiedDate":"2021-11-04"},{"lineNumber":672,"author":{"gitId":"LouisLouis19"},"content":"Although it is slightly challenging to identify conflicts when not adding a new schedule,","lastModifiedDate":"2021-11-04"},{"lineNumber":673,"author":{"gitId":"LouisLouis19"},"content":"we think that the timetable feature can help in identifying conflicts manually.","lastModifiedDate":"2021-11-04"},{"lineNumber":674,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":675,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":676,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":677,"author":{"gitId":"Woolicious98"},"content":"### 4.5 Storage Implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":678,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":679,"author":{"gitId":"Woolicious98"},"content":"To view the high-level diagram, head to [3.8 Storage](#38-storage-component).","lastModifiedDate":"2021-10-25"},{"lineNumber":680,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":681,"author":{"gitId":"Woolicious98"},"content":"#### 4.5.1 Initialize Storage Implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":682,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":683,"author":{"gitId":"Woolicious98"},"content":"This section details the technical information of `StorageManager` when `Terminus` create the `StorageManager`.","lastModifiedDate":"2021-11-04"},{"lineNumber":684,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":685,"author":{"gitId":"Woolicious98"},"content":"##### 4.5.1.1 Current Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":686,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":687,"author":{"gitId":"Woolicious98"},"content":"![](attachments/StorageInitializeSequenceDiagram.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":688,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":689,"author":{"gitId":"Woolicious98"},"content":"**Step 1:** When TermiNUS gets executes, it will need to initialise a `StorageManager` that handles","lastModifiedDate":"2021-11-03"},{"lineNumber":690,"author":{"gitId":"Woolicious98"},"content":"any file I/O operations.","lastModifiedDate":"2021-11-03"},{"lineNumber":691,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":692,"author":{"gitId":"Woolicious98"},"content":"**Step 2:** `Terminus` will need to provide a path for the **main directory** where all data are stored","lastModifiedDate":"2021-11-03"},{"lineNumber":693,"author":{"gitId":"Woolicious98"},"content":"and the **main json file** where the `module`,`question` and `schedule` are stored.","lastModifiedDate":"2021-11-03"},{"lineNumber":694,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":695,"author":{"gitId":"Woolicious98"},"content":"\u003e 📝 **Note:** The **main directory** is **hardcoded** within TermiNUS that has the filepath of the directory","lastModifiedDate":"2021-11-03"},{"lineNumber":696,"author":{"gitId":"Woolicious98"},"content":"\u003e where TermiNUS was executed from. The main directory will be named **data** and the **main json**","lastModifiedDate":"2021-11-03"},{"lineNumber":697,"author":{"gitId":"Woolicious98"},"content":"\u003e file will be located within the **data** folder and it is named as **main.json**.","lastModifiedDate":"2021-11-03"},{"lineNumber":698,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":699,"author":{"gitId":"Woolicious98"},"content":"**Step 3:** When calling the construct of `StorageManager`, it will create different storage type objects","lastModifiedDate":"2021-11-03"},{"lineNumber":700,"author":{"gitId":"Woolicious98"},"content":"to handle different storage type file I/O operations. They are `NoteStorage`, `JsonStorage`, `PdfStorage` and","lastModifiedDate":"2021-11-03"},{"lineNumber":701,"author":{"gitId":"Woolicious98"},"content":"`FolderStorage`.","lastModifiedDate":"2021-11-03"},{"lineNumber":702,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":703,"author":{"gitId":"Woolicious98"},"content":"| Storage Type  | Explanation                                                                                                                |","lastModifiedDate":"2021-11-03"},{"lineNumber":704,"author":{"gitId":"Woolicious98"},"content":"|---------------|----------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-11-03"},{"lineNumber":705,"author":{"gitId":"Woolicious98"},"content":"| NoteStorage   | Handles any `Note` related file I/O operations.                                                                            |","lastModifiedDate":"2021-11-03"},{"lineNumber":706,"author":{"gitId":"Woolicious98"},"content":"| JsonStorage   | Handles any main `.json` file related I/O operations.                                                                      |","lastModifiedDate":"2021-11-03"},{"lineNumber":707,"author":{"gitId":"Woolicious98"},"content":"| FolderStorage | Handles any `Module` related file I/O operations. As `Module` in TermiNUS is stored as a folder in the **data** directory. |","lastModifiedDate":"2021-11-03"},{"lineNumber":708,"author":{"gitId":"Woolicious98"},"content":"| PdfStorage    | Handles any `.pdf` file related I/O operations. Mainly the `export` command within the `note` workspace.                   |","lastModifiedDate":"2021-11-03"},{"lineNumber":709,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":710,"author":{"gitId":"Woolicious98"},"content":"##### 4.5.1.2 Design Consideration","lastModifiedDate":"2021-11-03"},{"lineNumber":711,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":712,"author":{"gitId":"Woolicious98"},"content":"**Aspect: Different types of storage.**","lastModifiedDate":"2021-11-03"},{"lineNumber":713,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":714,"author":{"gitId":"Woolicious98"},"content":"| Approach                                                                                | Pros                                                                          | Cons                                                                                                     |","lastModifiedDate":"2021-11-03"},{"lineNumber":715,"author":{"gitId":"Woolicious98"},"content":"|-----------------------------------------------------------------------------------------|-------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-11-03"},{"lineNumber":716,"author":{"gitId":"Woolicious98"},"content":"| 2 Types of Storage that handles either file or folder only                              | More consolidated classes.                                                    | Mix handling of third party operations such as `gson` and `pdfWriter` with the base file I/O operations. |","lastModifiedDate":"2021-11-03"},{"lineNumber":717,"author":{"gitId":"Woolicious98"},"content":"| Current implementation of 4 different types of Storage differs by its files operations. | More catered operations that allows the base file I/O to be in another class. | Multiple Storage to be referenced in StorageManager, higher probability of failed initialization.        |","lastModifiedDate":"2021-11-03"},{"lineNumber":718,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":719,"author":{"gitId":"Woolicious98"},"content":"**Chosen Solution:** Current approach with the 4 different types of storage. Allowing all base functionality","lastModifiedDate":"2021-11-03"},{"lineNumber":720,"author":{"gitId":"Woolicious98"},"content":"of file I/O operations using `NIO2` to be in its own class which is in the `Storage` class. As for the rest","lastModifiedDate":"2021-11-03"},{"lineNumber":721,"author":{"gitId":"Woolicious98"},"content":"of the storage type class to inherit the functionality of the `Storage` class while adding their own","lastModifiedDate":"2021-11-03"},{"lineNumber":722,"author":{"gitId":"Woolicious98"},"content":"checks and third party imports on top of it.","lastModifiedDate":"2021-11-03"},{"lineNumber":723,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":724,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":725,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":726,"author":{"gitId":"Woolicious98"},"content":"#### 4.5.2 Loading Storage Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":727,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":728,"author":{"gitId":"Woolicious98"},"content":"This section details the technical information of `StorageManager` when `Terminus` loads data in the `data` directory.","lastModifiedDate":"2021-11-04"},{"lineNumber":729,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":730,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":731,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":732,"author":{"gitId":"Woolicious98"},"content":"##### 4.5.2.1 Current Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":733,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":734,"author":{"gitId":"Woolicious98"},"content":"![](attachments/StorageLoadSequenceDiagram_part1.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":735,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":736,"author":{"gitId":"Woolicious98"},"content":"**Step 1:** TermiNUS will call the method `initialise()` for `StorageManager` that will proceed to load","lastModifiedDate":"2021-11-03"},{"lineNumber":737,"author":{"gitId":"Woolicious98"},"content":"any data from the main `data` directory.","lastModifiedDate":"2021-11-03"},{"lineNumber":738,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":739,"author":{"gitId":"Woolicious98"},"content":"**Step 2:** Firstly, `StorageManager` will attempt to create the main `data` directory follow by the `main.json` file","lastModifiedDate":"2021-11-03"},{"lineNumber":740,"author":{"gitId":"Woolicious98"},"content":", only if they have not been created yet. This is to ensure that on the **first** time execution of TermiNUS, ","lastModifiedDate":"2021-11-03"},{"lineNumber":741,"author":{"gitId":"Woolicious98"},"content":"all necessary file and folder are created.","lastModifiedDate":"2021-11-03"},{"lineNumber":742,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":743,"author":{"gitId":"Woolicious98"},"content":"\u003e 📝 **Note:** The `createFolder()` and `createFile()` uses checks from `Files.notExists(:Path)` before","lastModifiedDate":"2021-11-03"},{"lineNumber":744,"author":{"gitId":"Woolicious98"},"content":"\u003e creating the folder and file using `Files.createDirectories(:Path)` and `Files.createFile(:Path)` respectively.","lastModifiedDate":"2021-11-03"},{"lineNumber":745,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":746,"author":{"gitId":"Woolicious98"},"content":"![](attachments/StorageLoadSequenceDiagram_part2.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":747,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":748,"author":{"gitId":"Woolicious98"},"content":"**Step 3:** After, ensuring that all required folder and file are created, it will proceed to load any data","lastModifiedDate":"2021-11-03"},{"lineNumber":749,"author":{"gitId":"Woolicious98"},"content":"from the `main.json` file into a `ModuleManager` object using `gson` libraries.","lastModifiedDate":"2021-11-03"},{"lineNumber":750,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":751,"author":{"gitId":"Woolicious98"},"content":"**Step 4:** However, if the `main.json` file does not contain any data due to the `main.json` file being","lastModifiedDate":"2021-11-03"},{"lineNumber":752,"author":{"gitId":"Woolicious98"},"content":"created in **step 2**, it will create a new `ModuleManager` object and return it back to TermiNUS.","lastModifiedDate":"2021-11-03"},{"lineNumber":753,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":754,"author":{"gitId":"Woolicious98"},"content":"**Step 5:** After loading the data into `ModuleManager` from the `main.json` file, it will proceed to filter any ","lastModifiedDate":"2021-11-03"},{"lineNumber":755,"author":{"gitId":"Woolicious98"},"content":"invalid data using a `FilterManager`. The `FilterManager` will iterate through each data in `ModuleManager`","lastModifiedDate":"2021-11-03"},{"lineNumber":756,"author":{"gitId":"Woolicious98"},"content":"and removes the invalid ones.","lastModifiedDate":"2021-11-03"},{"lineNumber":757,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":758,"author":{"gitId":"Woolicious98"},"content":"\u003e 📝 **Note:** From this point onwards, the ModuleManager will only contain valid data that matches the","lastModifiedDate":"2021-11-03"},{"lineNumber":759,"author":{"gitId":"Woolicious98"},"content":"\u003e criteria set by TermiNUS. One example of the filter done by `FilterManager` is **module code** of `NusModule` cannot have spaces.","lastModifiedDate":"2021-11-03"},{"lineNumber":760,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":761,"author":{"gitId":"Woolicious98"},"content":"**Step 6:** With the validated `ModuleManager`, it will load any `Note` data for each `NusModule` in `ModuleManager` from its respective **module** folder.","lastModifiedDate":"2021-11-03"},{"lineNumber":762,"author":{"gitId":"Woolicious98"},"content":"The **nus module** mentioned here are the ones currently in the `ModuleManager` and the folder containing the `Note` file","lastModifiedDate":"2021-11-03"},{"lineNumber":763,"author":{"gitId":"Woolicious98"},"content":"has the name of the **nus module**.","lastModifiedDate":"2021-11-03"},{"lineNumber":764,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":765,"author":{"gitId":"Woolicious98"},"content":"\u003e 📝 **Note:** The nus modules in the `main.json` file represents the `NusModule` that should be in TermiNUS when","lastModifiedDate":"2021-11-03"},{"lineNumber":766,"author":{"gitId":"Woolicious98"},"content":"\u003e TermiNUS gets executed. Any other folder within the main `data` directory with its name not","lastModifiedDate":"2021-11-03"},{"lineNumber":767,"author":{"gitId":"Woolicious98"},"content":"\u003e in `ModuleManager` will be ignored.","lastModifiedDate":"2021-11-03"},{"lineNumber":768,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":769,"author":{"gitId":"Woolicious98"},"content":"\u003e 📝 **Note:** Any `Note` file that causes an error while performing file I/O operations, that `Note` file","lastModifiedDate":"2021-11-03"},{"lineNumber":770,"author":{"gitId":"Woolicious98"},"content":"\u003e will be ignored and the program will proceed to load the next `Note` file if any.","lastModifiedDate":"2021-11-03"},{"lineNumber":771,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":772,"author":{"gitId":"Woolicious98"},"content":"**Step 7:** Once the `Note` has been loaded into `ModuleManager` under each of its respective `NusModule`, ","lastModifiedDate":"2021-11-03"},{"lineNumber":773,"author":{"gitId":"Woolicious98"},"content":"it will return this `ModuleManager`.","lastModifiedDate":"2021-11-03"},{"lineNumber":774,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":775,"author":{"gitId":"Woolicious98"},"content":"**Step 8:** And finally, `StorageManager` will return this `ModuleManager` back to `Terminus`.","lastModifiedDate":"2021-11-04"},{"lineNumber":776,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":777,"author":{"gitId":"Woolicious98"},"content":"##### 4.5.2.2 Design Consideration","lastModifiedDate":"2021-11-03"},{"lineNumber":778,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":779,"author":{"gitId":"Woolicious98"},"content":"**Aspect: Creates missing folder of existing NusModule.**","lastModifiedDate":"2021-11-03"},{"lineNumber":780,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":781,"author":{"gitId":"Woolicious98"},"content":"| Approach                                                                    | Pros                                                                | Cons                                                                                  |","lastModifiedDate":"2021-11-03"},{"lineNumber":782,"author":{"gitId":"Woolicious98"},"content":"|-----------------------------------------------------------------------------|---------------------------------------------------------------------|---------------------------------------------------------------------------------------|","lastModifiedDate":"2021-11-03"},{"lineNumber":783,"author":{"gitId":"Woolicious98"},"content":"| Create a folder for the `NusModule` if its folder does not exists.          | Synchronize folder data with current `ModuleManager` data.          | Extra file I/O operations needed.                                                     |","lastModifiedDate":"2021-11-03"},{"lineNumber":784,"author":{"gitId":"Woolicious98"},"content":"| Do nothing and proceed to check for the next `NusModule` in `ModuleManager` | No need to perform additional file I/O operation to create folders. | Current `NusModule` in `ModuleManager` does not reflect in the main `data` directory. |","lastModifiedDate":"2021-11-03"},{"lineNumber":785,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":786,"author":{"gitId":"Woolicious98"},"content":"**Chosen Solution:** Do not create the missing folders of existing `NusModule` in `ModuleManager`. By performing ","lastModifiedDate":"2021-11-03"},{"lineNumber":787,"author":{"gitId":"Woolicious98"},"content":"the additional filo I/O operation to create a folder may result in an IO Exception due to not being able to","lastModifiedDate":"2021-11-03"},{"lineNumber":788,"author":{"gitId":"Woolicious98"},"content":"create the specified folder. Due to this, it may abort loading of any notes for any other `NusModule` in","lastModifiedDate":"2021-11-03"},{"lineNumber":789,"author":{"gitId":"Woolicious98"},"content":"ModuleManager. Secondly, this method is meant to load existing data and not to create any data that is not","lastModifiedDate":"2021-11-03"},{"lineNumber":790,"author":{"gitId":"Woolicious98"},"content":"the main `data` directory or the `main.json` file.","lastModifiedDate":"2021-11-03"},{"lineNumber":791,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":792,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":793,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":794,"author":{"gitId":"Woolicious98"},"content":"#### 4.5.3 Execute CommandResult with Storage Implementation","lastModifiedDate":"2021-11-04"},{"lineNumber":795,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":796,"author":{"gitId":"Woolicious98"},"content":"This section details the technical information of `StorageManager` when `Terminus` performs required file I/O operations stated in `CommandResult` after an execution of a `Command`.","lastModifiedDate":"2021-11-04"},{"lineNumber":797,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":798,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":799,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":800,"author":{"gitId":"Woolicious98"},"content":"##### 4.5.3.1 Current Implementation","lastModifiedDate":"2021-11-04"},{"lineNumber":801,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":802,"author":{"gitId":"Woolicious98"},"content":"![](attachments/StorageCommandResultSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":803,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":804,"author":{"gitId":"Woolicious98"},"content":"**Step 1:** When `Terminus` executes a `Command`, a `CommandResult` will be returned. The `CommandResult` contains","lastModifiedDate":"2021-11-04"},{"lineNumber":805,"author":{"gitId":"Woolicious98"},"content":"information of the `Command` execution and this includes any additional file I/O operations needed. If `CommandResult.hasChanges()` returns","lastModifiedDate":"2021-11-04"},{"lineNumber":806,"author":{"gitId":"Woolicious98"},"content":"a **True**, it determines a file I/O operation is needed.","lastModifiedDate":"2021-11-04"},{"lineNumber":807,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":808,"author":{"gitId":"Woolicious98"},"content":"**Step 2:** If a file I/O operation is needed, `Terminus` will call the method `executeCommandResult()` in `StorageManager` that","lastModifiedDate":"2021-11-04"},{"lineNumber":809,"author":{"gitId":"Woolicious98"},"content":"handles the extraction of information in `CommandResult` and parses the information to its respective Storage types for further","lastModifiedDate":"2021-11-04"},{"lineNumber":810,"author":{"gitId":"Woolicious98"},"content":"processing.","lastModifiedDate":"2021-11-04"},{"lineNumber":811,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":812,"author":{"gitId":"Woolicious98"},"content":"**Step 3:** Once done, `StorageManager` will return to `Terminus` and this concludes the file I/O ","lastModifiedDate":"2021-11-04"},{"lineNumber":813,"author":{"gitId":"Woolicious98"},"content":"requirements from the execution of a `Command`.","lastModifiedDate":"2021-11-04"},{"lineNumber":814,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":815,"author":{"gitId":"Woolicious98"},"content":"##### 4.5.3.2 Design Consideration","lastModifiedDate":"2021-11-04"},{"lineNumber":816,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":817,"author":{"gitId":"Woolicious98"},"content":"**Aspect: Split by StorageAction or StorageType first.**","lastModifiedDate":"2021-11-04"},{"lineNumber":818,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":819,"author":{"gitId":"Woolicious98"},"content":"| Approach             | Pros                                                                                        | Cons                                                                                                              |","lastModifiedDate":"2021-11-04"},{"lineNumber":820,"author":{"gitId":"Woolicious98"},"content":"|----------------------|---------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-11-04"},{"lineNumber":821,"author":{"gitId":"Woolicious98"},"content":"| StorageAction first. | File I/O grouped by similar changes performed.                                              | Need to handle different types of file. For example, folder and file creation are both different calls in `NIO2`. |","lastModifiedDate":"2021-11-04"},{"lineNumber":822,"author":{"gitId":"Woolicious98"},"content":"| StorageType first.   | Group by the objects requirements in Terminus. Decoupling of file I/O operations is easier. | In the future, many different file types may result in multiple Storage class needed.                             |","lastModifiedDate":"2021-11-04"},{"lineNumber":823,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":824,"author":{"gitId":"Woolicious98"},"content":"**Chosen Solution:** Separate file I/O operation by the type of file involved first which is the solution of","lastModifiedDate":"2021-11-04"},{"lineNumber":825,"author":{"gitId":"Woolicious98"},"content":"StorageType first. This means that each Storage type have a higher decoupling from one another.","lastModifiedDate":"2021-11-04"},{"lineNumber":826,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":827,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":828,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":829,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":830,"author":{"gitId":"Woolicious98"},"content":"### 4.6 Adding Content Implementation","lastModifiedDate":"2021-11-04"},{"lineNumber":831,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":832,"author":{"gitId":"Woolicious98"},"content":"This section details the technical information of adding a `Content` into `ContentManager`.","lastModifiedDate":"2021-11-04"},{"lineNumber":833,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":834,"author":{"gitId":"Woolicious98"},"content":"#### 4.6.1 Current Implementation","lastModifiedDate":"2021-11-04"},{"lineNumber":835,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":836,"author":{"gitId":"Woolicious98"},"content":"![](attachments/AddingContentSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":837,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":838,"author":{"gitId":"Woolicious98"},"content":"\u003e 📝 **Note:** For the other `Content` type such as `Question` and `Schedule`, they follow the same logic","lastModifiedDate":"2021-11-04"},{"lineNumber":839,"author":{"gitId":"Woolicious98"},"content":"\u003e flow as the diagram shown above. Simply replace the `AddNoteCommand` and `Note` to their respective ","lastModifiedDate":"2021-11-04"},{"lineNumber":840,"author":{"gitId":"Woolicious98"},"content":"\u003e `Content` type.","lastModifiedDate":"2021-11-04"},{"lineNumber":841,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":842,"author":{"gitId":"Woolicious98"},"content":"**Step 1:** When the `AddNoteCommand` receives the call to `execute()` from the `CommandParser`, it will","lastModifiedDate":"2021-11-04"},{"lineNumber":843,"author":{"gitId":"Woolicious98"},"content":"proceed to add the new `Note` into its `ContentManager`.","lastModifiedDate":"2021-11-04"},{"lineNumber":844,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":845,"author":{"gitId":"Woolicious98"},"content":"**Step 2:** Firstly, it will create a new `Note` object with the specified arguments for it.","lastModifiedDate":"2021-11-04"},{"lineNumber":846,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":847,"author":{"gitId":"Woolicious98"},"content":"**Step 3** Next, `AddNoteCommand` will pass the newly created `Note` object into `ContentManager` for it to ","lastModifiedDate":"2021-11-04"},{"lineNumber":848,"author":{"gitId":"Woolicious98"},"content":"store in its arraylist of `Note`.","lastModifiedDate":"2021-11-04"},{"lineNumber":849,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":850,"author":{"gitId":"Woolicious98"},"content":"**Step 4** Upon, the successful execution of adding the new `Note` into `ContentManager`, it will return a `CommandResult` with","lastModifiedDate":"2021-11-04"},{"lineNumber":851,"author":{"gitId":"Woolicious98"},"content":"its respective message for user `Ui` response purposes.","lastModifiedDate":"2021-11-04"},{"lineNumber":852,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":853,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":854,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":855,"author":{"gitId":"Woolicious98"},"content":"#### 4.6.2 Design Consideration","lastModifiedDate":"2021-11-04"},{"lineNumber":856,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":857,"author":{"gitId":"Woolicious98"},"content":"**Aspect: Checks arguments in ContentManager or the AddCommand.**","lastModifiedDate":"2021-11-04"},{"lineNumber":858,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":859,"author":{"gitId":"Woolicious98"},"content":"| Approach                           | Pros                                                                      | Cons                                                                      |","lastModifiedDate":"2021-11-04"},{"lineNumber":860,"author":{"gitId":"Woolicious98"},"content":"|------------------------------------|---------------------------------------------------------------------------|---------------------------------------------------------------------------|","lastModifiedDate":"2021-11-04"},{"lineNumber":861,"author":{"gitId":"Woolicious98"},"content":"| Checks argument in AddCommand.     | Ease the workload on ContentManager.                                      | Add command can no longer be a generic command used by all Content types. |","lastModifiedDate":"2021-11-04"},{"lineNumber":862,"author":{"gitId":"Woolicious98"},"content":"| Checks argument in ContentManager. | Command do not need to understand the criteria of a valid Content object. | Introduces a lengthy if-else for each Content type in Terminus.           |","lastModifiedDate":"2021-11-04"},{"lineNumber":863,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":864,"author":{"gitId":"Woolicious98"},"content":"**Chosen Solution:** To validate arguments in the AddCommand instead. This is due to the generic type of","lastModifiedDate":"2021-11-04"},{"lineNumber":865,"author":{"gitId":"Woolicious98"},"content":"`ContentManager` that may lead to nested conditions if the arguments are checked within the `ContentManager`.","lastModifiedDate":"2021-11-04"},{"lineNumber":866,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":867,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":868,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":869,"author":{"gitId":"Woolicious98"},"content":"### 4.7 Deleting Content Implementation","lastModifiedDate":"2021-11-04"},{"lineNumber":870,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":871,"author":{"gitId":"Woolicious98"},"content":"This section details the technical information of deleting a `Content` from `ContentManager`.","lastModifiedDate":"2021-11-04"},{"lineNumber":872,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":873,"author":{"gitId":"Woolicious98"},"content":"#### 4.7.1 Current Implementation","lastModifiedDate":"2021-11-04"},{"lineNumber":874,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":875,"author":{"gitId":"Woolicious98"},"content":"![](attachments/DeletingContentSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":876,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":877,"author":{"gitId":"Woolicious98"},"content":"**Step 1:** When the `DeleteCommand` receives the call to `execute()` it will proceed to remove the","lastModifiedDate":"2021-11-04"},{"lineNumber":878,"author":{"gitId":"Woolicious98"},"content":"specified `Content` by its **content number** from the `ContentManager`.","lastModifiedDate":"2021-11-04"},{"lineNumber":879,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":880,"author":{"gitId":"Woolicious98"},"content":"**Step 2:** Within `ContentManager`, it will check if the provided **content number** is within range","lastModifiedDate":"2021-11-04"},{"lineNumber":881,"author":{"gitId":"Woolicious98"},"content":"of the arraylist.","lastModifiedDate":"2021-11-04"},{"lineNumber":882,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":883,"author":{"gitId":"Woolicious98"},"content":"**Step 3:** Once the `Content` has been removed from the arraylist, it will return the removed `Content` name","lastModifiedDate":"2021-11-04"},{"lineNumber":884,"author":{"gitId":"Woolicious98"},"content":"for user `Ui` response purposes.","lastModifiedDate":"2021-11-04"},{"lineNumber":885,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":886,"author":{"gitId":"Woolicious98"},"content":"#### 4.7.2 Design Consideration","lastModifiedDate":"2021-11-04"},{"lineNumber":887,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":888,"author":{"gitId":"Woolicious98"},"content":"**Aspect: To pass the content number as the exact index in the arraylist or the index viewed from the view command.**","lastModifiedDate":"2021-11-04"},{"lineNumber":889,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":890,"author":{"gitId":"Woolicious98"},"content":"| Approach                          | Pros                                                                                                                                                                | Cons                                                                                                                            |","lastModifiedDate":"2021-11-04"},{"lineNumber":891,"author":{"gitId":"Woolicious98"},"content":"|-----------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-11-04"},{"lineNumber":892,"author":{"gitId":"Woolicious98"},"content":"| Pass by array index.              | Generic use of `deleteContent()` could be possible for any other `Command` that requires a removal of a certain `Content`.                                          | Could be confusing as the arraylist is not known only to the `DeleteCommand`.                                                   |","lastModifiedDate":"2021-11-04"},{"lineNumber":893,"author":{"gitId":"Woolicious98"},"content":"| Pass by content number from view. | All indexes used in Terminus will be retrieved from the view command, hence the content number is the only number involved in any `Command` that requires an index. | Internal usage to remove an element in the arraylist could not use the `deleteContent()` unless it adds a 1 to the given index. |","lastModifiedDate":"2021-11-04"},{"lineNumber":894,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":895,"author":{"gitId":"Woolicious98"},"content":"**Chosen Solution:** To avoid the mixing up of content number and array index, we decided to pass the content number","lastModifiedDate":"2021-11-04"},{"lineNumber":896,"author":{"gitId":"Woolicious98"},"content":"into `ContentManager` where it will subtract the given number by 1 to get the index number for the arraylist.","lastModifiedDate":"2021-11-04"},{"lineNumber":897,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":898,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":899,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":900,"author":{"gitId":"kelvneo"},"content":"## 5. Documentation, Logging, Testing and DevOps","lastModifiedDate":"2021-11-01"},{"lineNumber":901,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":902,"author":{"gitId":"kelvneo"},"content":"This section details how we document, log, test and perform development operations.","lastModifiedDate":"2021-11-01"},{"lineNumber":903,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":904,"author":{"gitId":"kelvneo"},"content":"### 5.1 Documentation","lastModifiedDate":"2021-11-01"},{"lineNumber":905,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":906,"author":{"gitId":"kelvneo"},"content":"Our User Guide and Developer Guide are written in Markdown, and are rendered by GitHub Pages.","lastModifiedDate":"2021-11-01"},{"lineNumber":907,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":908,"author":{"gitId":"kelvneo"},"content":"All diagrams in this Developer Guide are generated with PlantUML.","lastModifiedDate":"2021-11-01"},{"lineNumber":909,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":910,"author":{"gitId":"kelvneo"},"content":"### 5.2 Logging","lastModifiedDate":"2021-11-01"},{"lineNumber":911,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":912,"author":{"gitId":"kelvneo"},"content":"We wrap the default `java.util.logging.Logger` in Java in `terminus.common.TerminusLogger`, ","lastModifiedDate":"2021-11-01"},{"lineNumber":913,"author":{"gitId":"kelvneo"},"content":"providing us easier access to logging information for debugging and error message displaying. By","lastModifiedDate":"2021-11-01"},{"lineNumber":914,"author":{"gitId":"kelvneo"},"content":"default, TermiNUS will not print any logging information to the terminal, and will log anything ","lastModifiedDate":"2021-11-01"},{"lineNumber":915,"author":{"gitId":"kelvneo"},"content":"equal to or above `Level.INFO` into the file `terminus.log` in the same directory the user ran the ","lastModifiedDate":"2021-11-01"},{"lineNumber":916,"author":{"gitId":"kelvneo"},"content":"application.","lastModifiedDate":"2021-11-01"},{"lineNumber":917,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":918,"author":{"gitId":"kelvneo"},"content":"### 5.3 Testing","lastModifiedDate":"2021-11-01"},{"lineNumber":919,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":920,"author":{"gitId":"kelvneo"},"content":"Testing is done with JUnit testing, and we have added Jacoco as a Gradle plugin to monitor test code","lastModifiedDate":"2021-11-01"},{"lineNumber":921,"author":{"gitId":"kelvneo"},"content":"coverage.","lastModifiedDate":"2021-11-01"},{"lineNumber":922,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":923,"author":{"gitId":"kelvneo"},"content":"Before pushing and creating a pull request, please ensure no existing JUnit tests fail, as well as ","lastModifiedDate":"2021-11-01"},{"lineNumber":924,"author":{"gitId":"kelvneo"},"content":"ensure new test cases are written to maintain a high code coverage.","lastModifiedDate":"2021-11-01"},{"lineNumber":925,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":926,"author":{"gitId":"kelvneo"},"content":"### 5.4 DevOps","lastModifiedDate":"2021-11-01"},{"lineNumber":927,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":928,"author":{"gitId":"kelvneo"},"content":"Building and testing can be done with Gradle, and all integration testing is done with GitHub ","lastModifiedDate":"2021-11-01"},{"lineNumber":929,"author":{"gitId":"kelvneo"},"content":"Actions in the GitHub repository.","lastModifiedDate":"2021-11-01"},{"lineNumber":930,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":931,"author":{"gitId":"kelvneo"},"content":"All pull requests are also checked with Codecov to ensure that overall code coverage does not drop.","lastModifiedDate":"2021-11-01"},{"lineNumber":932,"author":{"gitId":"kelvneo"},"content":"You may monitor your Codecov progress in your pull request if you successfully passed all the tests.","lastModifiedDate":"2021-11-01"},{"lineNumber":933,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":934,"author":{"gitId":"kelvneo"},"content":"## Appendix A: Product Scope","lastModifiedDate":"2021-11-01"},{"lineNumber":935,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":936,"author":{"gitId":"Woolicious98"},"content":"### A.1 Target User Profile","lastModifiedDate":"2021-11-04"},{"lineNumber":937,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":938,"author":{"gitId":"Woolicious98"},"content":"- Students in NUS.","lastModifiedDate":"2021-11-04"},{"lineNumber":939,"author":{"gitId":"Woolicious98"},"content":"- Wants to enhance their learning experience.","lastModifiedDate":"2021-11-04"},{"lineNumber":940,"author":{"gitId":"Woolicious98"},"content":"- Has difficulty managing academic materials in NUS.","lastModifiedDate":"2021-11-04"},{"lineNumber":941,"author":{"gitId":"Woolicious98"},"content":"- Prefers command-line desktop applications.","lastModifiedDate":"2021-11-04"},{"lineNumber":942,"author":{"gitId":"Woolicious98"},"content":"- Able to type fast.","lastModifiedDate":"2021-11-04"},{"lineNumber":943,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":944,"author":{"gitId":"Woolicious98"},"content":"### A.2 Value Proposition","lastModifiedDate":"2021-11-04"},{"lineNumber":945,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":946,"author":{"gitId":"Woolicious98"},"content":"- Helps the target user organise their academic materials.","lastModifiedDate":"2021-11-04"},{"lineNumber":947,"author":{"gitId":"Woolicious98"},"content":"- Find any conflicts in the schedules from the target user.","lastModifiedDate":"2021-11-04"},{"lineNumber":948,"author":{"gitId":"Woolicious98"},"content":"- Aids in learning better using Active Recall.","lastModifiedDate":"2021-11-04"},{"lineNumber":949,"author":{"gitId":"Woolicious98"},"content":"- Consolidate all notes into a PDF for referencing purposes while studying.","lastModifiedDate":"2021-11-04"},{"lineNumber":950,"author":{"gitId":"Woolicious98"},"content":"- Organise academic materials for different modules.","lastModifiedDate":"2021-11-04"},{"lineNumber":951,"author":{"gitId":"Woolicious98"},"content":"- Portable and works offline.","lastModifiedDate":"2021-11-04"},{"lineNumber":952,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":953,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":954,"author":{"gitId":"kelvneo"},"content":"## Appendix B: User Stories  ","lastModifiedDate":"2021-11-01"},{"lineNumber":955,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":956,"author":{"gitId":"3m0W33D"},"content":"| Version | As a ... | I want to ... | So that I ... |","lastModifiedDate":"2021-11-04"},{"lineNumber":957,"author":{"gitId":"3m0W33D"},"content":"|---------|----------|---------------|---------------|","lastModifiedDate":"2021-11-04"},{"lineNumber":958,"author":{"gitId":"3m0W33D"},"content":"| 1.0 | disorganized student | be able to store my zoom links somewhere|  can easily view my links when required.|","lastModifiedDate":"2021-11-04"},{"lineNumber":959,"author":{"gitId":"3m0W33D"},"content":"| 1.0 | student |  be able to retrieve my zoom links easily| can easily find them when required.|","lastModifiedDate":"2021-11-04"},{"lineNumber":960,"author":{"gitId":"3m0W33D"},"content":"| 1.0 | student | be able to remove zoom links from my regular schedule | can fix any finished lessons. |","lastModifiedDate":"2021-11-04"},{"lineNumber":961,"author":{"gitId":"3m0W33D"},"content":"| 1.0 | student |  be able to add notes taken during lecture| do no need to manage it physically myself.|","lastModifiedDate":"2021-11-04"},{"lineNumber":962,"author":{"gitId":"3m0W33D"},"content":"| 1.0 | student | be able to delete my notes | can re-organize information taken down by me.|","lastModifiedDate":"2021-11-04"},{"lineNumber":963,"author":{"gitId":"3m0W33D"},"content":"| 1.0 | student | be able to view the notes taken during lecture | can refer to them easily.|","lastModifiedDate":"2021-11-04"},{"lineNumber":964,"author":{"gitId":"3m0W33D"},"content":"| 1.0 | student | be able to exit the app properly | can shut down my computer. |","lastModifiedDate":"2021-11-04"},{"lineNumber":965,"author":{"gitId":"3m0W33D"},"content":"| 1.0 | student |  view all available commands in the app | know what commands are there in the application.|","lastModifiedDate":"2021-11-04"},{"lineNumber":966,"author":{"gitId":"3m0W33D"},"content":"| 1.0 | student |  store my data persistently | can use the application properly. |","lastModifiedDate":"2021-11-04"},{"lineNumber":967,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | organised student |  categorize my notes to specific modules | can extract information only from that module I specified.|","lastModifiedDate":"2021-11-04"},{"lineNumber":968,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | learned student | add questions and answers | can view them later.|","lastModifiedDate":"2021-11-04"},{"lineNumber":969,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | student | be able to view my lessons for the day | can check my schedule for that day.|","lastModifiedDate":"2021-11-04"},{"lineNumber":970,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | student |  be reminded when my next class is |  would not miss any class accidentally.|","lastModifiedDate":"2021-11-04"},{"lineNumber":971,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | student | be able to extract the notes into a pdf format | can view on my phone outside of the app.|","lastModifiedDate":"2021-11-04"},{"lineNumber":972,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | student | be able to view my questions and answers | can revise on my module. |","lastModifiedDate":"2021-11-04"},{"lineNumber":973,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | student |  be able to organize my questions and answers into different topics | can find what I want easily.|","lastModifiedDate":"2021-11-04"},{"lineNumber":974,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | student | be able to delete my questions and answers | can delete the ones that are irrelevant. |","lastModifiedDate":"2021-11-04"},{"lineNumber":975,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | student | be able to extract information from one computer to the other | am able to sync information between multiple devices. |","lastModifiedDate":"2021-11-04"},{"lineNumber":976,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | student |  be able to create categories for my notes | can organize my notes better. |","lastModifiedDate":"2021-11-04"},{"lineNumber":977,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | student |  ensure that my timetables have no clashes | can have exams are on different timings / days.|","lastModifiedDate":"2021-11-04"},{"lineNumber":978,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | student |  edit a text file instead of within a terminal for lengthy texts | can use my favourite text editor to edit instead. |","lastModifiedDate":"2021-11-04"},{"lineNumber":979,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | student | view changes edited in the saved text file on the terminal | don\u0027t have to restart the program. |","lastModifiedDate":"2021-11-04"},{"lineNumber":980,"author":{"gitId":"3m0W33D"},"content":"| 2.0 | student | be able to view my lessons for the week | can check my schedule for that week. |","lastModifiedDate":"2021-11-04"},{"lineNumber":981,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":982,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":983,"author":{"gitId":"kelvneo"},"content":"## Appendix C: Non Functional Requirements  ","lastModifiedDate":"2021-11-01"},{"lineNumber":984,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":985,"author":{"gitId":"3m0W33D"},"content":"1. The application should work on any _major operating systems_ (OS) such as Windows,Linux and macOS that have `Java 11` installed.","lastModifiedDate":"2021-11-04"},{"lineNumber":986,"author":{"gitId":"3m0W33D"},"content":"2. Users with fast typing speed should be able to add and remove content more easily and faster as compared to using mouse.","lastModifiedDate":"2021-11-04"},{"lineNumber":987,"author":{"gitId":"3m0W33D"},"content":"3. The application should be easy to learn and use with the User Guide and/or Developer Guide.","lastModifiedDate":"2021-11-04"},{"lineNumber":988,"author":{"gitId":"3m0W33D"},"content":"4. The application should be responsive to user input.","lastModifiedDate":"2021-11-04"},{"lineNumber":989,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":990,"author":{"gitId":"Woolicious98"},"content":"## Appendix D: Instructions for Manual Testing","lastModifiedDate":"2021-11-04"},{"lineNumber":991,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":992,"author":{"gitId":"LouisLouis19"},"content":"### D.1: Launch and Shutdown","lastModifiedDate":"2021-11-04"},{"lineNumber":993,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":994,"author":{"gitId":"LouisLouis19"},"content":"#### Initial Launch","lastModifiedDate":"2021-11-04"},{"lineNumber":995,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":996,"author":{"gitId":"LouisLouis19"},"content":"1.  Download the jar file and copy it into an empty folder.","lastModifiedDate":"2021-11-04"},{"lineNumber":997,"author":{"gitId":"LouisLouis19"},"content":"2.  Open a new terminal and navigate to the directory containing `TermiNUS.jar`.","lastModifiedDate":"2021-11-04"},{"lineNumber":998,"author":{"gitId":"LouisLouis19"},"content":"3.  Enter the command `java -jar TermiNUS.jar` to launch **TermiNUS**.","lastModifiedDate":"2021-11-04"},{"lineNumber":999,"author":{"gitId":"LouisLouis19"},"content":"4.  The program will display a welcome message and **TermiNUS** will be ready for use.","lastModifiedDate":"2021-11-04"},{"lineNumber":1000,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1001,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1002,"author":{"gitId":"LouisLouis19"},"content":"#### Shutdown","lastModifiedDate":"2021-11-04"},{"lineNumber":1003,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1004,"author":{"gitId":"LouisLouis19"},"content":"1.  To exit **TermiNUS**, enter the `exit` command.","lastModifiedDate":"2021-11-04"},{"lineNumber":1005,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1006,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1007,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1008,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1009,"author":{"gitId":"LouisLouis19"},"content":"### D.2: Workspace Navigation","lastModifiedDate":"2021-11-04"},{"lineNumber":1010,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1011,"author":{"gitId":"LouisLouis19"},"content":"1. When users run a program or enter a new workspace, a welcome instruction indicating the navigable workspaces will be displayed.","lastModifiedDate":"2021-11-04"},{"lineNumber":1012,"author":{"gitId":"LouisLouis19"},"content":"2. Users can also use the `help` command to check the navigable workspace(s).","lastModifiedDate":"2021-11-04"},{"lineNumber":1013,"author":{"gitId":"LouisLouis19"},"content":"3. It is important to take note that workspaces such as `question`, `note`, and `schedule` can only be accessed from the `go` workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1014,"author":{"gitId":"LouisLouis19"},"content":"4. Test case performed in the `main` workspace: `go cs2113T`","lastModifiedDate":"2021-11-04"},{"lineNumber":1015,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1016,"author":{"gitId":"LouisLouis19"},"content":"    Expected: Users will be navigated to the `go` workspace, where they can now access the `question`, `note`, or `schedule` workspaces.","lastModifiedDate":"2021-11-04"},{"lineNumber":1017,"author":{"gitId":"LouisLouis19"},"content":"5. Test case performed in the `go` workspace: `schedule`","lastModifiedDate":"2021-11-04"},{"lineNumber":1018,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1019,"author":{"gitId":"LouisLouis19"},"content":"    Expected: Users will be navigated to the `schedule` workspace, where they can now use the `schedule` functionalities.","lastModifiedDate":"2021-11-04"},{"lineNumber":1020,"author":{"gitId":"LouisLouis19"},"content":"6. Incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1021,"author":{"gitId":"LouisLouis19"},"content":"   ","lastModifiedDate":"2021-11-04"},{"lineNumber":1022,"author":{"gitId":"LouisLouis19"},"content":"    a. `go` (No module is specified)","lastModifiedDate":"2021-11-04"},{"lineNumber":1023,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1024,"author":{"gitId":"LouisLouis19"},"content":"    b. `go X` (Where X is not an existing user module)","lastModifiedDate":"2021-11-04"},{"lineNumber":1025,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1026,"author":{"gitId":"LouisLouis19"},"content":"\u003e 💡 Advanced users can navigate to sub-workspaces using a single command. E.g. `go cs2113T schedule`","lastModifiedDate":"2021-11-04"},{"lineNumber":1027,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1028,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1029,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1030,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1031,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1032,"author":{"gitId":"LouisLouis19"},"content":"### D.3: Timetable Feature","lastModifiedDate":"2021-11-04"},{"lineNumber":1033,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1034,"author":{"gitId":"LouisLouis19"},"content":"1. The `timetable` features can only be used from the main workspace.","lastModifiedDate":"2021-11-04"},{"lineNumber":1035,"author":{"gitId":"LouisLouis19"},"content":"2. Test case: `timetable`","lastModifiedDate":"2021-11-04"},{"lineNumber":1036,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1037,"author":{"gitId":"LouisLouis19"},"content":"   Expected: User\u0027s schedule for the week will be displayed.","lastModifiedDate":"2021-11-04"},{"lineNumber":1038,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `timetable Tuesday`","lastModifiedDate":"2021-11-04"},{"lineNumber":1039,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1040,"author":{"gitId":"LouisLouis19"},"content":"   Expected: User\u0027s schedule for Tuesday will be displayed.","lastModifiedDate":"2021-11-04"},{"lineNumber":1041,"author":{"gitId":"LouisLouis19"},"content":"4. Incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1042,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1043,"author":{"gitId":"LouisLouis19"},"content":"   a. `timetable today` (Today is not a valid day)","lastModifiedDate":"2021-11-04"},{"lineNumber":1044,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1045,"author":{"gitId":"LouisLouis19"},"content":"   b. `timetable 1` (1 is not a valid day)","lastModifiedDate":"2021-11-04"},{"lineNumber":1046,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1047,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1048,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1049,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1050,"author":{"gitId":"LouisLouis19"},"content":"### D.4: Module Workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1051,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1052,"author":{"gitId":"LouisLouis19"},"content":"1. Navigate to the `module` workspace from the main workspace.","lastModifiedDate":"2021-11-04"},{"lineNumber":1053,"author":{"gitId":"LouisLouis19"},"content":"2. Users can now `add`, `view`, `delete` or `update` their modules.","lastModifiedDate":"2021-11-04"},{"lineNumber":1054,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `add cs2106`","lastModifiedDate":"2021-11-04"},{"lineNumber":1055,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1056,"author":{"gitId":"LouisLouis19"},"content":"    Expected: Users will have a new module, cs2106.","lastModifiedDate":"2021-11-04"},{"lineNumber":1057,"author":{"gitId":"LouisLouis19"},"content":"4. Test case: `view`","lastModifiedDate":"2021-11-04"},{"lineNumber":1058,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1059,"author":{"gitId":"LouisLouis19"},"content":"    Expected: All the user\u0027s modules will be displayed.","lastModifiedDate":"2021-11-04"},{"lineNumber":1060,"author":{"gitId":"LouisLouis19"},"content":"5. Test case: `delete 1`","lastModifiedDate":"2021-11-04"},{"lineNumber":1061,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1062,"author":{"gitId":"LouisLouis19"},"content":"    Expected: The user module at index 1 will be deleted.","lastModifiedDate":"2021-11-04"},{"lineNumber":1063,"author":{"gitId":"LouisLouis19"},"content":"6. Test case: `update 1 \"cs2105\"`","lastModifiedDate":"2021-11-04"},{"lineNumber":1064,"author":{"gitId":"LouisLouis19"},"content":"   ","lastModifiedDate":"2021-11-04"},{"lineNumber":1065,"author":{"gitId":"LouisLouis19"},"content":"    Expected: The user module at index 1 will be updated to cs2105.","lastModifiedDate":"2021-11-04"},{"lineNumber":1066,"author":{"gitId":"LouisLouis19"},"content":"7. Incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1067,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1068,"author":{"gitId":"LouisLouis19"},"content":"    a. `add` (No new module is created)","lastModifiedDate":"2021-11-04"},{"lineNumber":1069,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1070,"author":{"gitId":"LouisLouis19"},"content":"    b. `delete 0` (Invalid index for deletion)","lastModifiedDate":"2021-11-04"},{"lineNumber":1071,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1072,"author":{"gitId":"LouisLouis19"},"content":"    c. `update 0 \"cs2101\"` (Invalid module index to be updated)","lastModifiedDate":"2021-11-04"},{"lineNumber":1073,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1074,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1075,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1076,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1077,"author":{"gitId":"LouisLouis19"},"content":"### D.5: Accessing a Specific Module","lastModifiedDate":"2021-11-04"},{"lineNumber":1078,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1079,"author":{"gitId":"LouisLouis19"},"content":"1. From the main workspace, use `go` to access a specific module.","lastModifiedDate":"2021-11-04"},{"lineNumber":1080,"author":{"gitId":"LouisLouis19"},"content":"2. A specific module will be accessed when users enter the `go` workspace.","lastModifiedDate":"2021-11-04"},{"lineNumber":1081,"author":{"gitId":"LouisLouis19"},"content":"3. Workspaces such as `question`, `note`, and `schedule` can now be accessed.","lastModifiedDate":"2021-11-04"},{"lineNumber":1082,"author":{"gitId":"LouisLouis19"},"content":"4. Test case: `go cs2105`","lastModifiedDate":"2021-11-04"},{"lineNumber":1083,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1084,"author":{"gitId":"LouisLouis19"},"content":"    Expected: User will now access the cs2105 module","lastModifiedDate":"2021-11-04"},{"lineNumber":1085,"author":{"gitId":"LouisLouis19"},"content":"5. Incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1086,"author":{"gitId":"LouisLouis19"},"content":"   ","lastModifiedDate":"2021-11-04"},{"lineNumber":1087,"author":{"gitId":"LouisLouis19"},"content":"    a. `go` (No module is specified)","lastModifiedDate":"2021-11-04"},{"lineNumber":1088,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1089,"author":{"gitId":"LouisLouis19"},"content":"    b. `go X` (Where X is not an existing user module)","lastModifiedDate":"2021-11-04"},{"lineNumber":1090,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1091,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1092,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1093,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1094,"author":{"gitId":"LouisLouis19"},"content":"### D.6: Accessing the Question Workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1095,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1096,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to access a module and operate in the `go` workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1097,"author":{"gitId":"LouisLouis19"},"content":"2. User can access the question workspace using the `question` command","lastModifiedDate":"2021-11-04"},{"lineNumber":1098,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `question`","lastModifiedDate":"2021-11-04"},{"lineNumber":1099,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1100,"author":{"gitId":"LouisLouis19"},"content":"    Expected: Navigate to the `question` workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1101,"author":{"gitId":"LouisLouis19"},"content":"4. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1102,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1103,"author":{"gitId":"LouisLouis19"},"content":"    a. `question A` (Trailing \"A\" is not a valid command)","lastModifiedDate":"2021-11-04"},{"lineNumber":1104,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1105,"author":{"gitId":"LouisLouis19"},"content":"    b. `question 1` (Trailing \"1\" is not a valid command)","lastModifiedDate":"2021-11-04"},{"lineNumber":1106,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1107,"author":{"gitId":"LouisLouis19"},"content":"    c. `question` from the main workspace (Question workspace can not be accessed from the main workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1108,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1109,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1110,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1111,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1112,"author":{"gitId":"LouisLouis19"},"content":"### D.7: Add Question","lastModifiedDate":"2021-11-04"},{"lineNumber":1113,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1114,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to be in the question workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1115,"author":{"gitId":"LouisLouis19"},"content":"2. User can add a new question using the `add` command","lastModifiedDate":"2021-11-04"},{"lineNumber":1116,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `add \"What is 1+1 ?\" \"2\"`","lastModifiedDate":"2021-11-04"},{"lineNumber":1117,"author":{"gitId":"LouisLouis19"},"content":"    ","lastModifiedDate":"2021-11-04"},{"lineNumber":1118,"author":{"gitId":"LouisLouis19"},"content":"    Expected: A new question \"What is 1+1 ?\" is added to the list of questions.","lastModifiedDate":"2021-11-04"},{"lineNumber":1119,"author":{"gitId":"LouisLouis19"},"content":"4. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1120,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1121,"author":{"gitId":"LouisLouis19"},"content":"   a. `add What is 1+1 ? 2` (The use of quotes for questions and answers is mandatory)","lastModifiedDate":"2021-11-04"},{"lineNumber":1122,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1123,"author":{"gitId":"LouisLouis19"},"content":"   b. `add \"What is 1+1 ?\"` (An answer must be present for the new question)","lastModifiedDate":"2021-11-04"},{"lineNumber":1124,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1125,"author":{"gitId":"LouisLouis19"},"content":"   c. `add` (A pair of question and answer must be present for an add command)","lastModifiedDate":"2021-11-04"},{"lineNumber":1126,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1127,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1128,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1129,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1130,"author":{"gitId":"LouisLouis19"},"content":"### D.8: View Questions","lastModifiedDate":"2021-11-04"},{"lineNumber":1131,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1132,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to be in the question workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1133,"author":{"gitId":"LouisLouis19"},"content":"2. User can view all the available questions using the `view` command","lastModifiedDate":"2021-11-04"},{"lineNumber":1134,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `view`","lastModifiedDate":"2021-11-04"},{"lineNumber":1135,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1136,"author":{"gitId":"LouisLouis19"},"content":"   Expected: All the questions for the module will be displayed.","lastModifiedDate":"2021-11-04"},{"lineNumber":1137,"author":{"gitId":"LouisLouis19"},"content":"4. Test case: `view 1`","lastModifiedDate":"2021-11-04"},{"lineNumber":1138,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1139,"author":{"gitId":"LouisLouis19"},"content":"   Expected: The question at index 1 for the module will be displayed.","lastModifiedDate":"2021-11-04"},{"lineNumber":1140,"author":{"gitId":"LouisLouis19"},"content":"5. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1141,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1142,"author":{"gitId":"LouisLouis19"},"content":"   a. `view 0` (The index 0 is invalid)","lastModifiedDate":"2021-11-04"},{"lineNumber":1143,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1144,"author":{"gitId":"LouisLouis19"},"content":"   b. `view X` (Where X is a negative number, a word, or a number exceeding the number of questions in the workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1145,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1146,"author":{"gitId":"LouisLouis19"},"content":"   c. `view` from the main workspace (To view questions, execute `view` from the question workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1147,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1148,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1149,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1150,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1151,"author":{"gitId":"LouisLouis19"},"content":"### D.9: Delete Question","lastModifiedDate":"2021-11-04"},{"lineNumber":1152,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1153,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to be in the question workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1154,"author":{"gitId":"LouisLouis19"},"content":"2. User can delete selected question(s) using the `delete` command","lastModifiedDate":"2021-11-04"},{"lineNumber":1155,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `delete 1`","lastModifiedDate":"2021-11-04"},{"lineNumber":1156,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1157,"author":{"gitId":"LouisLouis19"},"content":"   Expected: Delete the question at index 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":1158,"author":{"gitId":"LouisLouis19"},"content":"4. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1159,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1160,"author":{"gitId":"LouisLouis19"},"content":"   a. `delete 0` (The index 0 is invalid)","lastModifiedDate":"2021-11-04"},{"lineNumber":1161,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1162,"author":{"gitId":"LouisLouis19"},"content":"   b. `delete X` (Where X is a negative number, a word, or a number exceeding the number of questions in the workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1163,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1164,"author":{"gitId":"LouisLouis19"},"content":"   c. `delete` (The delete command has to be followed by a valid index)","lastModifiedDate":"2021-11-04"},{"lineNumber":1165,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1166,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1167,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1168,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1169,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1170,"author":{"gitId":"LouisLouis19"},"content":"### D.10: Test Feature","lastModifiedDate":"2021-11-04"},{"lineNumber":1171,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1172,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to be in the question workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1173,"author":{"gitId":"LouisLouis19"},"content":"2. User can ask themselves questions using the `test` feature","lastModifiedDate":"2021-11-04"},{"lineNumber":1174,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `test`","lastModifiedDate":"2021-11-04"},{"lineNumber":1175,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1176,"author":{"gitId":"LouisLouis19"},"content":"   Expected: Users will be prompted with the available questions.","lastModifiedDate":"2021-11-04"},{"lineNumber":1177,"author":{"gitId":"LouisLouis19"},"content":"4. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1178,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1179,"author":{"gitId":"LouisLouis19"},"content":"   a. `test` from the main workspace (The test feature can only be accessed from the question workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1180,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1181,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1182,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1183,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1184,"author":{"gitId":"LouisLouis19"},"content":"### D.11: Accessing the Note Workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1185,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1186,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to access a module and operate in the `go` workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1187,"author":{"gitId":"LouisLouis19"},"content":"2. User can access the note workspace using the `note` command","lastModifiedDate":"2021-11-04"},{"lineNumber":1188,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `note`","lastModifiedDate":"2021-11-04"},{"lineNumber":1189,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1190,"author":{"gitId":"LouisLouis19"},"content":"   Expected: Navigate to the `note` workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1191,"author":{"gitId":"LouisLouis19"},"content":"4. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1192,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1193,"author":{"gitId":"LouisLouis19"},"content":"   a. `note A` (Trailing \"A\" is not a valid command)","lastModifiedDate":"2021-11-04"},{"lineNumber":1194,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1195,"author":{"gitId":"LouisLouis19"},"content":"   b. `note 1` (Trailing \"1\" is not a valid command)","lastModifiedDate":"2021-11-04"},{"lineNumber":1196,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1197,"author":{"gitId":"LouisLouis19"},"content":"   c. `note` from the main workspace (Note workspace can not be accessed from the main workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1198,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1199,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1200,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1201,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1202,"author":{"gitId":"LouisLouis19"},"content":"### D.12: Add Note","lastModifiedDate":"2021-11-04"},{"lineNumber":1203,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1204,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to be in the note workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1205,"author":{"gitId":"LouisLouis19"},"content":"2. User can add a new note using the `add` command","lastModifiedDate":"2021-11-04"},{"lineNumber":1206,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `add \"cs2113 tutorial\" \"SLAP your code\"`","lastModifiedDate":"2021-11-04"},{"lineNumber":1207,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1208,"author":{"gitId":"LouisLouis19"},"content":"   Expected: A new note titled \"cs2113 tutorial\", with \"SLAP your code\" as its content is added to the list of notes.","lastModifiedDate":"2021-11-04"},{"lineNumber":1209,"author":{"gitId":"LouisLouis19"},"content":"4. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1210,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1211,"author":{"gitId":"LouisLouis19"},"content":"   a. `add cs2113 tutorial SLAP your code` (The use of quotes for note title and content is mandatory)","lastModifiedDate":"2021-11-04"},{"lineNumber":1212,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1213,"author":{"gitId":"LouisLouis19"},"content":"   b. `add \"cs2113 tutorial\"` (Content must be present for the new note)","lastModifiedDate":"2021-11-04"},{"lineNumber":1214,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1215,"author":{"gitId":"LouisLouis19"},"content":"   c. `add` (A pair of note title and content must be present for an add command)","lastModifiedDate":"2021-11-04"},{"lineNumber":1216,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1217,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1218,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1219,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1220,"author":{"gitId":"LouisLouis19"},"content":"### D.13: View Notes","lastModifiedDate":"2021-11-04"},{"lineNumber":1221,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1222,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to be in the note workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1223,"author":{"gitId":"LouisLouis19"},"content":"2. User can view all the available notes using the `view` command","lastModifiedDate":"2021-11-04"},{"lineNumber":1224,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `view`","lastModifiedDate":"2021-11-04"},{"lineNumber":1225,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1226,"author":{"gitId":"LouisLouis19"},"content":"   Expected: All the notes for the module will be displayed.","lastModifiedDate":"2021-11-04"},{"lineNumber":1227,"author":{"gitId":"LouisLouis19"},"content":"4. Test case: `view 1`","lastModifiedDate":"2021-11-04"},{"lineNumber":1228,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1229,"author":{"gitId":"LouisLouis19"},"content":"   Expected: The note at index 1 for the module will be displayed.","lastModifiedDate":"2021-11-04"},{"lineNumber":1230,"author":{"gitId":"LouisLouis19"},"content":"5. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1231,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1232,"author":{"gitId":"LouisLouis19"},"content":"   a. `view 0` (The index 0 is invalid)","lastModifiedDate":"2021-11-04"},{"lineNumber":1233,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1234,"author":{"gitId":"LouisLouis19"},"content":"   b. `view X` (Where X is a negative number, a word, or a number exceeding the number of notes in the workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1235,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1236,"author":{"gitId":"LouisLouis19"},"content":"   c. `view` from the main workspace (To view notes, execute `view` from the note workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1237,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1238,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1239,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1240,"author":{"gitId":"LouisLouis19"},"content":"### D.14: Delete Note","lastModifiedDate":"2021-11-04"},{"lineNumber":1241,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1242,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to be in the note workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1243,"author":{"gitId":"LouisLouis19"},"content":"2. User can delete selected note(s) using the `delete` command","lastModifiedDate":"2021-11-04"},{"lineNumber":1244,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `delete 1`","lastModifiedDate":"2021-11-04"},{"lineNumber":1245,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1246,"author":{"gitId":"LouisLouis19"},"content":"   Expected: Delete the note at index 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":1247,"author":{"gitId":"LouisLouis19"},"content":"4. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1248,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1249,"author":{"gitId":"LouisLouis19"},"content":"   a. `delete 0` (The index 0 is invalid)","lastModifiedDate":"2021-11-04"},{"lineNumber":1250,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1251,"author":{"gitId":"LouisLouis19"},"content":"   b. `delete X` (Where X is a negative number, a word, or a number exceeding the number of notes in the workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1252,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1253,"author":{"gitId":"LouisLouis19"},"content":"   c. `delete` (The delete command has to be followed by a valid index)","lastModifiedDate":"2021-11-04"},{"lineNumber":1254,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1255,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1256,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1257,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1258,"author":{"gitId":"LouisLouis19"},"content":"### D.15: Export Notes","lastModifiedDate":"2021-11-04"},{"lineNumber":1259,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1260,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to be in the note workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1261,"author":{"gitId":"LouisLouis19"},"content":"2. User can export all the notes in a pdf format using the `export` command","lastModifiedDate":"2021-11-04"},{"lineNumber":1262,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `export`","lastModifiedDate":"2021-11-04"},{"lineNumber":1263,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1264,"author":{"gitId":"LouisLouis19"},"content":"    Expected: All the notes will be exported in a pdf format.","lastModifiedDate":"2021-11-04"},{"lineNumber":1265,"author":{"gitId":"LouisLouis19"},"content":"4. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1266,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1267,"author":{"gitId":"LouisLouis19"},"content":"   a. `export X` (Where X is any trailing number or word)","lastModifiedDate":"2021-11-04"},{"lineNumber":1268,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1269,"author":{"gitId":"LouisLouis19"},"content":"   b. `export` from the main workspace (The export command must be executed in the note workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1270,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1271,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1272,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1273,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1274,"author":{"gitId":"LouisLouis19"},"content":"### D.16: Accessing the Schedule Workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1275,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1276,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to access a module and operate in the `go` workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1277,"author":{"gitId":"LouisLouis19"},"content":"2. User can access the schedule workspace using the `schedule` command","lastModifiedDate":"2021-11-04"},{"lineNumber":1278,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `schedule`","lastModifiedDate":"2021-11-04"},{"lineNumber":1279,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1280,"author":{"gitId":"LouisLouis19"},"content":"   Expected: Navigate to the `schedule` workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1281,"author":{"gitId":"LouisLouis19"},"content":"4. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1282,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1283,"author":{"gitId":"LouisLouis19"},"content":"   a. `schedule A` (Trailing \"A\" is not a valid command)","lastModifiedDate":"2021-11-04"},{"lineNumber":1284,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1285,"author":{"gitId":"LouisLouis19"},"content":"   b. `schedule 1` (Trailing \"1\" is not a valid command)","lastModifiedDate":"2021-11-04"},{"lineNumber":1286,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1287,"author":{"gitId":"LouisLouis19"},"content":"   c. `schedule` from the main workspace (Schedule workspace can not be accessed from the main workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1288,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1289,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1290,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1291,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1292,"author":{"gitId":"LouisLouis19"},"content":"### D.17: Add Schedule","lastModifiedDate":"2021-11-04"},{"lineNumber":1293,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1294,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to be in the schedule workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1295,"author":{"gitId":"LouisLouis19"},"content":"2. User can add a new schedule using the `add` command","lastModifiedDate":"2021-11-04"},{"lineNumber":1296,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `add \"CS2113T Lecture\" \"Friday\" \"16:00\" \"2\" \"https://zoom.us/test\"`","lastModifiedDate":"2021-11-04"},{"lineNumber":1297,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1298,"author":{"gitId":"LouisLouis19"},"content":"   Expected: A new schedule for CS2113T Lecture on Friday from 16.00 for 2 hours with \"https://zoom.us/test\" link is added to the list of schedules.","lastModifiedDate":"2021-11-04"},{"lineNumber":1299,"author":{"gitId":"LouisLouis19"},"content":"4. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1300,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1301,"author":{"gitId":"LouisLouis19"},"content":"   a. `add \"Friday\" \"16:00\" \"2\" \"https://zoom.us/test\"` (Any missing arguments will result in an invalid command)","lastModifiedDate":"2021-11-04"},{"lineNumber":1302,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1303,"author":{"gitId":"LouisLouis19"},"content":"   b. `add CS2113T Lecture Friday 16:00 2 https://zoom.us/test` (Any missing quotes will result in an invalid command)","lastModifiedDate":"2021-11-04"},{"lineNumber":1304,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1305,"author":{"gitId":"LouisLouis19"},"content":"   c. `add` (All arguments must be present for a valid add command)","lastModifiedDate":"2021-11-04"},{"lineNumber":1306,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1307,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1308,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1309,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1310,"author":{"gitId":"LouisLouis19"},"content":"### D.18: View Schedules","lastModifiedDate":"2021-11-04"},{"lineNumber":1311,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1312,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to be in the schedule workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1313,"author":{"gitId":"LouisLouis19"},"content":"2. User can view all the schedules using the `view` command","lastModifiedDate":"2021-11-04"},{"lineNumber":1314,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `view`","lastModifiedDate":"2021-11-04"},{"lineNumber":1315,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1316,"author":{"gitId":"LouisLouis19"},"content":"   Expected: All the schedules for the module will be displayed.","lastModifiedDate":"2021-11-04"},{"lineNumber":1317,"author":{"gitId":"LouisLouis19"},"content":"4. Test case: `view 1`","lastModifiedDate":"2021-11-04"},{"lineNumber":1318,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1319,"author":{"gitId":"LouisLouis19"},"content":"   Expected: The schedule at index 1 for the module will be displayed.","lastModifiedDate":"2021-11-04"},{"lineNumber":1320,"author":{"gitId":"LouisLouis19"},"content":"5. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1321,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1322,"author":{"gitId":"LouisLouis19"},"content":"   a. `view 0` (The index 0 is invalid)","lastModifiedDate":"2021-11-04"},{"lineNumber":1323,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1324,"author":{"gitId":"LouisLouis19"},"content":"   b. `view X` (Where X is a negative number, a word, or a number exceeding the number of schedules in the workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1325,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1326,"author":{"gitId":"LouisLouis19"},"content":"   c. `view` from the main workspace (To view schedules, execute `view` from the schedule workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1327,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1328,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1329,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1330,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1331,"author":{"gitId":"LouisLouis19"},"content":"### D.19: Delete Schedule","lastModifiedDate":"2021-11-04"},{"lineNumber":1332,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1333,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User has to be in the schedule workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1334,"author":{"gitId":"LouisLouis19"},"content":"2. User can delete selected schedule(s) using the `delete` command","lastModifiedDate":"2021-11-04"},{"lineNumber":1335,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `delete 1`","lastModifiedDate":"2021-11-04"},{"lineNumber":1336,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1337,"author":{"gitId":"LouisLouis19"},"content":"   Expected: Delete the schedule at index 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":1338,"author":{"gitId":"LouisLouis19"},"content":"4. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1339,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1340,"author":{"gitId":"LouisLouis19"},"content":"   a. `delete 0` (The index 0 is invalid)","lastModifiedDate":"2021-11-04"},{"lineNumber":1341,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1342,"author":{"gitId":"LouisLouis19"},"content":"   b. `delete X` (Where X is a negative number, a word, or a number exceeding the number of schedules in the workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1343,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1344,"author":{"gitId":"LouisLouis19"},"content":"   c. `delete` (The delete command has to be followed by a valid index)","lastModifiedDate":"2021-11-04"},{"lineNumber":1345,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1346,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1347,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1348,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1349,"author":{"gitId":"LouisLouis19"},"content":"### D.20: Help Feature","lastModifiedDate":"2021-11-04"},{"lineNumber":1350,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1351,"author":{"gitId":"LouisLouis19"},"content":"1. Users can use the `help` command to show all the available commands in the workspace.","lastModifiedDate":"2021-11-04"},{"lineNumber":1352,"author":{"gitId":"LouisLouis19"},"content":"2. The `help` messages might differ in different workspaces.","lastModifiedDate":"2021-11-04"},{"lineNumber":1353,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `help`","lastModifiedDate":"2021-11-04"},{"lineNumber":1354,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1355,"author":{"gitId":"LouisLouis19"},"content":"    Expected: All available commands and their format in the workspace will be displayed.","lastModifiedDate":"2021-11-04"},{"lineNumber":1356,"author":{"gitId":"LouisLouis19"},"content":"4. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1357,"author":{"gitId":"LouisLouis19"},"content":"    ","lastModifiedDate":"2021-11-04"},{"lineNumber":1358,"author":{"gitId":"LouisLouis19"},"content":"    a. `help X` (Where X is any trailing number or word)","lastModifiedDate":"2021-11-04"},{"lineNumber":1359,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1360,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1361,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1362,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1363,"author":{"gitId":"LouisLouis19"},"content":"### D.21: Navigate to Previous Workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":1364,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1365,"author":{"gitId":"LouisLouis19"},"content":"1. Prerequisite: User must have accessed any workspaces other than the main workspace.","lastModifiedDate":"2021-11-04"},{"lineNumber":1366,"author":{"gitId":"LouisLouis19"},"content":"2. To return to the previous workspace, user can use the `back` command.","lastModifiedDate":"2021-11-04"},{"lineNumber":1367,"author":{"gitId":"LouisLouis19"},"content":"3. Test case: `back`","lastModifiedDate":"2021-11-04"},{"lineNumber":1368,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1369,"author":{"gitId":"LouisLouis19"},"content":"    Expected: Navigate to the previous workspace.","lastModifiedDate":"2021-11-04"},{"lineNumber":1370,"author":{"gitId":"LouisLouis19"},"content":"4. Other incorrect commands to try:","lastModifiedDate":"2021-11-04"},{"lineNumber":1371,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1372,"author":{"gitId":"LouisLouis19"},"content":"    a. `back X` (Where X is any trailing number or word)","lastModifiedDate":"2021-11-04"},{"lineNumber":1373,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1374,"author":{"gitId":"LouisLouis19"},"content":"    b. `back` from the main workspace (The back command cannot be used in the main workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":1375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":1376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"kelvneo":178,"LouisLouis19":475,"Woolicious98":368,"3m0W33D":330,"-":25}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"# TermiNUS","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"TermiNUS is a CLI (command line interface) program for NUS Students who wish to organize their NUS academic materials through a CLI.  ","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"The product aims to aid student in organizing their academic schedule and enhancing their learning experiences.","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"kelvneo":3,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"# TermiNUS User Guide","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"## Table of Contents","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"  - [Purpose of this Guide](#purpose-of-this-guide)","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"  - [Using this Guide](#using-this-guide)","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"- [Getting Started](#getting-started)","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"  - [Installing TermiNUS](#installing-terminus)","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"  - [Quick Guide of TermiNUS](#quick-guide-of-terminus)","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"- [Command Syntax](#command-syntax)","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"- [Section: Managing all your modules](#section-managing-all-your-modules)","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"    * [Accessing the module management workspace: `module`](#accessing-the-module-management-workspace)","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    * [Adding a module : `add \"\u003cmodule_code\u003e\"`](#adding-a-module)","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    * [Deleting a module : `delete \u003cindex\u003e`](#deleting-a-module)","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    * [Updating a module :`update \u003cindex\u003e \"\u003cnew_module_code\u003e\"`](#updating-a-module)","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    * [Viewing module information `view`](#viewing-module-information)","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"- [Returning to previous workspace : `back`](#returning-to-previous-workspace)","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"- [Section: Specific Module](#section-specific-module)","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    - [Accessing a specific module workspace : `go \u003cmodule_code\u003e`](#accessing-a-specific-module-workspace)","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    - [Section: Note](#section-note)","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"        * [Accessing note workspace : `note`](#accessing-note-workspace)","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"        * [Adding a Note : `add \"\u003cnote_name\u003e\" \"\u003cnote_content\u003e\"`](#adding-a-note)","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"        * [Viewing note information : `view {index}`](#viewing-note-information)","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        * [Deleting a Note : `delete \u003cindex\u003e`](#deleting-a-note)","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        * [Reloading all notes: `reload`](#reloading-all-notes)","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        * [Exporting all notes: `export`](#exporting-all-notes)","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    - [Section: Schedule](#section-schedule)","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        * [Accessing schedule workspace : `schedule`](#accessing-schedule-workspace)","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        * [Adding a Schedule : `add \"\u003clink_description\u003e\" \"\u003cday\u003e\" \"\u003cstart_time\u003e\" \"\u003cduration\u003e\" \"\u003czoom_link\u003e\"`](#adding-a-schedule)","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"        * [Viewing schedule information : `view {index}`](#viewing-schedule-information)","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        * [Deleting a Schedule : `delete \u003cindex\u003e`](#deleting-a-schedule)","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    - [Section: Question](#section-question)","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        * [Accessing question workspace : `question`](#accessing-question-workspace)","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        * [Adding a Question : `add \"\u003cquestion\u003e\" \"\u003canswer\u003e\"` ](#adding-a-question)","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        * [Viewing question information : `view {index}`](#viewing-question-information)","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        * [Deleting a Question : `delete \u003cindex\u003e`](#deleting-a-question)","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        * [Testing Yourself with Active Recall : `test {question_count}`](#testing-yourself-with-active-recall)","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"- [Displaying all schedules across all modules : `timetable {day}`](#displaying-all-schedules-across-all-modules)","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"- [Exiting TermiNUS : `exit`](#exiting-terminus)","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"- [Accessing Help : `help`](#accessing-help)","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"- [Advanced Usage of Commands](#advanced-usage-of-commands)","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"- [FAQ](#faq)","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"- [Workspace Command Summary](#workspace-command-summary)","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"TermiNUS is a CLI (command line interface) program for NUS students who wish to consolidate their","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"NUS academic needs such as schedules, questions and notes for the modules that they are taking.","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"With TermiNUS, it aims to aid students and improve their learning experiences while studying in NUS.","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"### Purpose of this Guide","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"This documents aims to provide you with instruction on how to use `TermiNUS` and tips \u0026 tricks","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"included to improve your experiences while using it. The document is for both beginners and advanced","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"users. The document will bring you through the installation process and guide you on all ","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"the commands available within `TerminNUS`.","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"### Using this Guide","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"Along the way, you might encounter these messages with icons throughout this guide:","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"\u003e ⚠️A caution that you have to keep in mind when using the command.","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"\u003e 💡 Take note when you see this icon, as it might tell you something important.","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"\u003e ❗ Important things you should take note of before using the command.","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"Text that is blue like this example, are clickable [links](#test) that will bring you to the","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"relevant part of this user guide.","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"Terminologies used throughout this guide:","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"| Terminology | Description |","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"| workspace |  A workspace is the environment in which you are currently assessing. For example, when you want to access some files inside a folder, you will need to enter the folder first. As such the folder is a **workspace**.|","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"|workspace indicator|A workspace indicator shows the current workspace you are currently in when using `TermiNUS`. For example, in the expected output for commands, you will be able to see `[] \u003e\u003e\u003e` which means you are in the **default workspace**, `[module] \u003e\u003e\u003e` which means you are in the **module management workspace**. etc.|","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"|default workspace|The very first workspace when executing the `TermiNUS` program. For example, `[] \u003e\u003e\u003e` indicates you are currently in the **default workspace**.|","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"|module|A module refers to a NUS module. For example, `CS2113T` is a module.|","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"## Getting Started","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"This section will detail the `TermiNUS` installation guide, as well a quick guide on how to use ","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"`TermiNUS`.","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"### Installing TermiNUS","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"1. Ensure that you","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"   have [Java 11](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html) or","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"   above installed.","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"2. Download the latest version of `TermiNUS.jar`","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"   [here](https://github.com/AY2122S1-CS2113T-T10-2/tp/releases/).","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"3. Copy the file to the folder you want to use for `TermiNUS`.","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"    1. This is because `TermiNUS` will store all its saved data in the folder it is currently in.","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"4. Open your command prompt and go into the folder containing the `TermiNUS.jar` file.","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    1. You can do so by `win + R` and run `cmd`.","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"    2. Next, a console will appear, type in the following `cd C:/folder` where `folder` is the","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"       folder containing the `TermiNUS.jar` file.","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"5. Next to run `TermiNUS`, in the command prompt type in `java -jar TermiNUS.jar`.","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"6. When you first start the `TermiNUS`, you will be greeted with our banner:","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"LouisLouis19"},"content":"    ```","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"    Welcome to TermiNUS!","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"    You have no schedule for today.","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-24"},{"lineNumber":112,"author":{"gitId":"LouisLouis19"},"content":"    Type any of the following to get started:","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"LouisLouis19"},"content":"    \u003e exit","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"    \u003e help","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"    \u003e module","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"    \u003e go","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"    \u003e timetable","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"    [] \u003e\u003e\u003e  ","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"    ```","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"7. For more information of each command, please refer to the [Features](#section-managing-all-your-modules) below.","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"kelvneo"},"content":"### Quick Guide of TermiNUS","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"1. Before adding any **note**, **schedule** and **question**, we will need to have a **module** first in which these items belong to.","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"kelvneo"},"content":"2. You can do so by adding a module within the **module management workspace**.  ","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"kelvneo"},"content":"   Please refer to: [Section: Managing all your Modules](#section-managing-all-your-modules).","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"3. After adding a module, you can proceed to add items such as **note**, **schedule** and **question** into it.","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"kelvneo"},"content":"4. But firstly you will need to enter the **module workspace** in which you have just created.  ","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"kelvneo"},"content":"   Please refer to: [Section: Specific Module](#section-specific-module).","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"5. Once entering the **module workspace**, you can add the items related to the module here.","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"    1. Please refer to [Section: Note](#section-note) for any related **Note** item.","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"    2. Please refer to [Section: Schedule](#section-schedule) for any related **Schedule** item.","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"    3. Please refer to [Section: Question](#section-question) for any related **Question** item.","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"6. Once you are done, you can exit **TermiNUS** using the `exit` command.","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"Hope you enjoy your experience with TermiNUS!","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"kelvneo"},"content":"## Command Syntax","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"kelvneo"},"content":"\u003e 💡 Commands are **case-insensitive**, but the `value` you provide can be **case-sensitive**.   ","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"kelvneo"},"content":"\u003e Commands may also **ignore unnecessary data** appended behind commands.","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"kelvneo"},"content":"\u003e ","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"kelvneo"},"content":"\u003e Example: \u003ccode\u003eHELP \u0026nbsp;\u0026nbsp;\u0026nbsp;\u003c/code\u003e is a valid command, and the spaces after `HELP` ","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"kelvneo"},"content":"\u003e will be ignored.","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"kelvneo"},"content":"As you use this guide, you will notice commands with specific brackets around some values such as `{}` and `\u003c\u003e`.","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"kelvneo"},"content":"The below table represents what each means.","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"kelvneo"},"content":"| Command options | Description |","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"kelvneo"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"kelvneo"},"content":"| `{value}` |  The value is optional, and including it may provide different results.|","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"kelvneo"},"content":"| `\u003cvalue\u003e` | The value is required for the command to work properly.|","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"kelvneo"},"content":"|`\"\u003cvalue\u003e\"`| Some command have `\"\"` quotes in it, this is required for the command to work properly. For example, `add \"\u003cvalue\u003e\"` would need to be `add \"something\"`.|","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"kelvneo"},"content":"|`index`|A number identifying an item in TermiNUS. This index can only be viewed using the `view` command.|","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"kelvneo"},"content":"|`start_time`|The `start time` must be in a **HH:mm** format which follows the **24-hour notation**. For example, `14:20` is valid which represents `2:20 pm`.|","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"kelvneo"},"content":"|`day`|The `day` must be a day spelled out fully and is case-insensitive. For example, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday` are the only **7** valid days.|","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"kelvneo"},"content":"|`duration`|The `duration` must be a **positive** integer and upon addition with `start_time`, it must not exceed the 24-hour limit of the day. For example, if `start_time` is `21:00`, `2` is a valid `duration` but `-1` and `4` are not.|","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"|`valid_file_name`|Any value that has the tag `valid file name` cannot be empty, cannot have more than **30** characters and can only contains [ASCII](https://www.asciitable.com/) characters **between the dec value of 32 and 126 inclusive** with the **exception** of `/`, `\\n`, `\\r`, `\\t`, `\\0`, `\\f`, `\u0027`, `?`, `*`, `\\ `, `\u003c`, `\u003e`, `\"`, `:`, `.` , \u003ccode\u003e\u0026#124;\u003c/code\u003e |","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"kelvneo"},"content":"## Section: Managing all your modules","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"All commands related to the workspace `Module Management` will be displayed in this section. These","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"commands enable users to create, delete and view `modules` within TermiNUS.","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"### Accessing the module management workspace","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"**Format:** `module`","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"Enters the Module Management workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"Example: `module`","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"[] \u003e\u003e\u003e module","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"Woolicious98"},"content":"You have 0 modules","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"Type any of the following to get started:","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"\u003e add","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"\u003e exit","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"\u003e help","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"Woolicious98"},"content":"\u003e view","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"Woolicious98"},"content":"\u003e back","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"3m0W33D"},"content":"\u003e update","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"\u003e delete","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"[module] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"Woolicious98"},"content":"List of Module Management workspace commands:","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"Woolicious98"},"content":"| Command      | Description |","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"Woolicious98"},"content":"|add|add a module in TermiNUS|","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"kelvneo"},"content":"|view|view modules information currently in TermiNUS|","lastModifiedDate":"2021-11-03"},{"lineNumber":205,"author":{"gitId":"Woolicious98"},"content":"|delete|delete a module in TermiNUS|","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"Woolicious98"},"content":"|update|update a module code currently in TermiNUS|","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"Woolicious98"},"content":"|help|view all commands and their usage within the module management workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"Woolicious98"},"content":"|back|escape and return to the default workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"Woolicious98"},"content":"|exit|exit and closes TermiNUS|","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"Woolicious98"},"content":"### Adding a module","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"Woolicious98"},"content":"**Format:** `add \"\u003cmodule_code\u003e\"`","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"Woolicious98"},"content":"Adds a module when in the module management workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":216,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":217,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️The `\u003cmodule_code\u003e` will be converted to **UPPERCASE** and cannot be more than **30** characters and cannot have any `spaces` in it. It follows the condition of a `valid_file_name`.","lastModifiedDate":"2021-11-07"},{"lineNumber":218,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":219,"author":{"gitId":"kelvneo"},"content":"\u003e 💡 When executing this command, it will add the module into TermiNUS and creates a folder with the","lastModifiedDate":"2021-11-03"},{"lineNumber":220,"author":{"gitId":"kelvneo"},"content":"\u003e module code in **uppercase** (e.g. creating `cs2113t` will create a folder in `data` called `CS2113T`).","lastModifiedDate":"2021-11-03"},{"lineNumber":221,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"kelvneo"},"content":"\u003e ❗ If there exists a folder with the same code of the newly added module, all contents in that ","lastModifiedDate":"2021-11-03"},{"lineNumber":223,"author":{"gitId":"kelvneo"},"content":"\u003e folder will be wiped. [Please see the FAQ for more information.](#faq)","lastModifiedDate":"2021-11-03"},{"lineNumber":224,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"kelvneo"},"content":"Example: `add \"cs2113t\"`","lastModifiedDate":"2021-11-03"},{"lineNumber":226,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"kelvneo"},"content":"[module] \u003e\u003e\u003e add \"cs2113t\"","lastModifiedDate":"2021-11-03"},{"lineNumber":231,"author":{"gitId":"Woolicious98"},"content":"Module CS2113T has been added","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"Woolicious98"},"content":"[module] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"kelvneo"},"content":"### Viewing module information","lastModifiedDate":"2021-11-03"},{"lineNumber":236,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":237,"author":{"gitId":"kelvneo"},"content":"**Format:** `view`","lastModifiedDate":"2021-11-03"},{"lineNumber":238,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":239,"author":{"gitId":"kelvneo"},"content":"Views all modules when in the module management workspace.","lastModifiedDate":"2021-11-03"},{"lineNumber":240,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":241,"author":{"gitId":"kelvneo"},"content":"Example: `view`","lastModifiedDate":"2021-11-03"},{"lineNumber":242,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":243,"author":{"gitId":"kelvneo"},"content":"Expected Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":244,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":245,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":246,"author":{"gitId":"kelvneo"},"content":"[module] \u003e\u003e\u003e view","lastModifiedDate":"2021-11-03"},{"lineNumber":247,"author":{"gitId":"kelvneo"},"content":"1. CS2113T","lastModifiedDate":"2021-11-03"},{"lineNumber":248,"author":{"gitId":"kelvneo"},"content":"2. CS2106","lastModifiedDate":"2021-11-03"},{"lineNumber":249,"author":{"gitId":"kelvneo"},"content":"[module] \u003e\u003e\u003e ","lastModifiedDate":"2021-11-03"},{"lineNumber":250,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":251,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":252,"author":{"gitId":"Woolicious98"},"content":"### Deleting a module","lastModifiedDate":"2021-10-22"},{"lineNumber":253,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":254,"author":{"gitId":"Woolicious98"},"content":"**Format:** `delete \u003cindex\u003e`","lastModifiedDate":"2021-10-22"},{"lineNumber":255,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":256,"author":{"gitId":"kelvneo"},"content":"Deletes the specified module given by its **index** in the `view` command when in the module ","lastModifiedDate":"2021-11-03"},{"lineNumber":257,"author":{"gitId":"kelvneo"},"content":"management workspace.","lastModifiedDate":"2021-11-03"},{"lineNumber":258,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":259,"author":{"gitId":"Woolicious98"},"content":"\u003e ❗ When the specified module is being deleted, all contents in its folder will be wiped.  ","lastModifiedDate":"2021-10-22"},{"lineNumber":260,"author":{"gitId":"kelvneo"},"content":"\u003e [Please see the FAQ for more information.](#faq)","lastModifiedDate":"2021-11-03"},{"lineNumber":261,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":262,"author":{"gitId":"Woolicious98"},"content":"Example: `delete 1`","lastModifiedDate":"2021-10-22"},{"lineNumber":263,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":264,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":265,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":266,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":267,"author":{"gitId":"Woolicious98"},"content":"[module] \u003e\u003e\u003e delete 1","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"Woolicious98"},"content":"Deleted module CS2113T.","lastModifiedDate":"2021-10-22"},{"lineNumber":269,"author":{"gitId":"Woolicious98"},"content":"[module] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"3m0W33D"},"content":"### Updating a module","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"3m0W33D"},"content":"**Format:** `update \u003cindex\u003e \"\u003cnew_module_code\u003e\"`","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":276,"author":{"gitId":"Woolicious98"},"content":"Updates a module code in the module management workspace.","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️The `\u003cnew_module_code\u003e` will have the same restrictions as the [add command](#adding-a-module).  ","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":279,"author":{"gitId":"3m0W33D"},"content":"Example: `update 1 \"CS2113\"`","lastModifiedDate":"2021-10-24"},{"lineNumber":280,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":281,"author":{"gitId":"3m0W33D"},"content":"Expected Output:","lastModifiedDate":"2021-10-24"},{"lineNumber":282,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":283,"author":{"gitId":"3m0W33D"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"3m0W33D"},"content":"[module] \u003e\u003e\u003e update 1 \"CS2113\"","lastModifiedDate":"2021-10-24"},{"lineNumber":285,"author":{"gitId":"3m0W33D"},"content":"Updated CS2113T to CS2113 successfully.","lastModifiedDate":"2021-10-24"},{"lineNumber":286,"author":{"gitId":"3m0W33D"},"content":"[module] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-24"},{"lineNumber":287,"author":{"gitId":"3m0W33D"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":288,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":289,"author":{"gitId":"kelvneo"},"content":"---","lastModifiedDate":"2021-11-03"},{"lineNumber":290,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":291,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":292,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":293,"author":{"gitId":"kelvneo"},"content":"## Returning to previous workspace","lastModifiedDate":"2021-11-03"},{"lineNumber":294,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":295,"author":{"gitId":"kelvneo"},"content":"**Format:** `back`","lastModifiedDate":"2021-11-03"},{"lineNumber":296,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":297,"author":{"gitId":"kelvneo"},"content":"Returns to the previous workspace prior to the current workspace you are in.","lastModifiedDate":"2021-11-03"},{"lineNumber":298,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":299,"author":{"gitId":"kelvneo"},"content":"\u003e 💡 The **default** workspace is the only workspace that has no `back` command. This is because this workspace is the very first workspace of TermiNUS.","lastModifiedDate":"2021-11-03"},{"lineNumber":300,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":301,"author":{"gitId":"kelvneo"},"content":"Example: `back` from module workspace","lastModifiedDate":"2021-11-03"},{"lineNumber":302,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":303,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":304,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":305,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":306,"author":{"gitId":"kelvneo"},"content":"[CS2113T] \u003e\u003e\u003e back","lastModifiedDate":"2021-11-03"},{"lineNumber":307,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":308,"author":{"gitId":"kelvneo"},"content":"Welcome to TermiNUS!","lastModifiedDate":"2021-11-03"},{"lineNumber":309,"author":{"gitId":"kelvneo"},"content":"You have no schedule for today.","lastModifiedDate":"2021-11-03"},{"lineNumber":310,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":311,"author":{"gitId":"kelvneo"},"content":"Type any of the following to get started:","lastModifiedDate":"2021-11-03"},{"lineNumber":312,"author":{"gitId":"kelvneo"},"content":"\u003e exit","lastModifiedDate":"2021-11-03"},{"lineNumber":313,"author":{"gitId":"kelvneo"},"content":"\u003e help","lastModifiedDate":"2021-11-03"},{"lineNumber":314,"author":{"gitId":"kelvneo"},"content":"\u003e module","lastModifiedDate":"2021-11-03"},{"lineNumber":315,"author":{"gitId":"kelvneo"},"content":"\u003e go","lastModifiedDate":"2021-11-03"},{"lineNumber":316,"author":{"gitId":"kelvneo"},"content":"\u003e timetable","lastModifiedDate":"2021-11-03"},{"lineNumber":317,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":318,"author":{"gitId":"kelvneo"},"content":"[] \u003e\u003e\u003e ","lastModifiedDate":"2021-11-03"},{"lineNumber":319,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":320,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":321,"author":{"gitId":"kelvneo"},"content":"\u003e 💡 Notice how the workspace indicator changes from `[CS2113T] \u003e\u003e\u003e` to `[] \u003e\u003e\u003e`.","lastModifiedDate":"2021-11-03"},{"lineNumber":322,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":323,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-22"},{"lineNumber":324,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":325,"author":{"gitId":"kelvneo"},"content":"## Section: Specific Module","lastModifiedDate":"2021-11-03"},{"lineNumber":326,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":327,"author":{"gitId":"Woolicious98"},"content":"All commands related to accessing the existing modules in TermiNUS. These commands enable users to","lastModifiedDate":"2021-10-22"},{"lineNumber":328,"author":{"gitId":"Woolicious98"},"content":"enter the module workspace in Terminus.","lastModifiedDate":"2021-10-22"},{"lineNumber":329,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":330,"author":{"gitId":"kelvneo"},"content":"\u003e 💡 The module mentioned here are the modules created within the **module management workspace**. Please refer to [Section: Module Management](#section-managing-all-your-modules) for more information.","lastModifiedDate":"2021-11-03"},{"lineNumber":331,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":332,"author":{"gitId":"kelvneo"},"content":"### Accessing a specific module workspace","lastModifiedDate":"2021-11-03"},{"lineNumber":333,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":334,"author":{"gitId":"Woolicious98"},"content":"**Format:** `go \u003cmodule_code\u003e`","lastModifiedDate":"2021-10-23"},{"lineNumber":335,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":336,"author":{"gitId":"Woolicious98"},"content":"Enters the module workspace to access data within the module.","lastModifiedDate":"2021-10-22"},{"lineNumber":337,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":338,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️The `module_code` is **case-insensitive** and will be converted to **UPPERCASE** as shown below.","lastModifiedDate":"2021-11-07"},{"lineNumber":339,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":340,"author":{"gitId":"kelvneo"},"content":"Example: `go cs2113t`","lastModifiedDate":"2021-11-03"},{"lineNumber":341,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":342,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":343,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":344,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":345,"author":{"gitId":"kelvneo"},"content":"[] \u003e\u003e\u003e go cs2113t","lastModifiedDate":"2021-11-03"},{"lineNumber":346,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":347,"author":{"gitId":"Woolicious98"},"content":"Entering CS2113T workspace","lastModifiedDate":"2021-10-22"},{"lineNumber":348,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":349,"author":{"gitId":"Woolicious98"},"content":"Type any of the following to get started:","lastModifiedDate":"2021-10-22"},{"lineNumber":350,"author":{"gitId":"Woolicious98"},"content":"\u003e exit","lastModifiedDate":"2021-10-22"},{"lineNumber":351,"author":{"gitId":"Woolicious98"},"content":"\u003e help","lastModifiedDate":"2021-10-22"},{"lineNumber":352,"author":{"gitId":"Woolicious98"},"content":"\u003e note","lastModifiedDate":"2021-10-22"},{"lineNumber":353,"author":{"gitId":"Woolicious98"},"content":"\u003e schedule","lastModifiedDate":"2021-10-22"},{"lineNumber":354,"author":{"gitId":"Woolicious98"},"content":"\u003e question","lastModifiedDate":"2021-10-22"},{"lineNumber":355,"author":{"gitId":"Woolicious98"},"content":"\u003e back","lastModifiedDate":"2021-10-22"},{"lineNumber":356,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":357,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":358,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":359,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":360,"author":{"gitId":"Woolicious98"},"content":"List of Module workspace commands:","lastModifiedDate":"2021-10-22"},{"lineNumber":361,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":362,"author":{"gitId":"Woolicious98"},"content":"| Command      | Description |","lastModifiedDate":"2021-10-22"},{"lineNumber":363,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-10-22"},{"lineNumber":364,"author":{"gitId":"Woolicious98"},"content":"|note|enter the note workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":365,"author":{"gitId":"Woolicious98"},"content":"|schedule|enter the schedule workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":366,"author":{"gitId":"Woolicious98"},"content":"|question|enter the question workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":367,"author":{"gitId":"Woolicious98"},"content":"|help|view all commands and their usage within its module workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":368,"author":{"gitId":"Woolicious98"},"content":"|back|escape and return to the default workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":369,"author":{"gitId":"Woolicious98"},"content":"|exit|exit and closes TermiNUS|","lastModifiedDate":"2021-10-22"},{"lineNumber":370,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":371,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-22"},{"lineNumber":372,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":373,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":374,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":375,"author":{"gitId":"LouisLouis19"},"content":"## Section: Note","lastModifiedDate":"2021-10-09"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":377,"author":{"gitId":"Woolicious98"},"content":"All commands related to the workspace `Note` will be displayed in this section. These commands","lastModifiedDate":"2021-10-23"},{"lineNumber":378,"author":{"gitId":"Woolicious98"},"content":"enable users to create, delete and view `notes` within the module.","lastModifiedDate":"2021-10-22"},{"lineNumber":379,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":380,"author":{"gitId":"Woolicious98"},"content":"### Accessing note workspace","lastModifiedDate":"2021-10-22"},{"lineNumber":381,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":382,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `note`","lastModifiedDate":"2021-10-08"},{"lineNumber":383,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":384,"author":{"gitId":"Woolicious98"},"content":"Enters the Note workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":385,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":386,"author":{"gitId":"Woolicious98"},"content":"Example: `note`","lastModifiedDate":"2021-10-22"},{"lineNumber":387,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":388,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":389,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":390,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":391,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e note","lastModifiedDate":"2021-10-22"},{"lineNumber":392,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":393,"author":{"gitId":"Woolicious98"},"content":"You have 0 note(s) inside this workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":394,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":395,"author":{"gitId":"LouisLouis19"},"content":"Type any of the following to get started:","lastModifiedDate":"2021-10-09"},{"lineNumber":396,"author":{"gitId":"LouisLouis19"},"content":"\u003e add","lastModifiedDate":"2021-10-08"},{"lineNumber":397,"author":{"gitId":"LouisLouis19"},"content":"\u003e exit","lastModifiedDate":"2021-10-09"},{"lineNumber":398,"author":{"gitId":"LouisLouis19"},"content":"\u003e help","lastModifiedDate":"2021-10-09"},{"lineNumber":399,"author":{"gitId":"LouisLouis19"},"content":"\u003e view","lastModifiedDate":"2021-10-08"},{"lineNumber":400,"author":{"gitId":"kelvneo"},"content":"\u003e reload","lastModifiedDate":"2021-11-03"},{"lineNumber":401,"author":{"gitId":"LouisLouis19"},"content":"\u003e back","lastModifiedDate":"2021-10-09"},{"lineNumber":402,"author":{"gitId":"LouisLouis19"},"content":"\u003e delete","lastModifiedDate":"2021-10-09"},{"lineNumber":403,"author":{"gitId":"3m0W33D"},"content":"\u003e export","lastModifiedDate":"2021-10-24"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":405,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":406,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":408,"author":{"gitId":"Woolicious98"},"content":"List of Note workspace commands:","lastModifiedDate":"2021-10-22"},{"lineNumber":409,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":410,"author":{"gitId":"Woolicious98"},"content":"| Command      | Description |","lastModifiedDate":"2021-10-22"},{"lineNumber":411,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-10-22"},{"lineNumber":412,"author":{"gitId":"Woolicious98"},"content":"|add|add a note for the module|","lastModifiedDate":"2021-10-22"},{"lineNumber":413,"author":{"gitId":"Woolicious98"},"content":"|view|view notes information from the module|","lastModifiedDate":"2021-10-22"},{"lineNumber":414,"author":{"gitId":"kelvneo"},"content":"|delete|delete a note from the module|","lastModifiedDate":"2021-11-03"},{"lineNumber":415,"author":{"gitId":"Woolicious98"},"content":"|reload|reload all the notes from the `data/\u003cmodule_code\u003e` folder|","lastModifiedDate":"2021-11-07"},{"lineNumber":416,"author":{"gitId":"3m0W33D"},"content":"|export|export all current notes for the module as a pdf|","lastModifiedDate":"2021-10-24"},{"lineNumber":417,"author":{"gitId":"Woolicious98"},"content":"|help|view all commands and their usage in the note workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":418,"author":{"gitId":"Woolicious98"},"content":"|back|escape and return to the module workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":419,"author":{"gitId":"Woolicious98"},"content":"|exit|exit and closes TermiNUS|","lastModifiedDate":"2021-10-22"},{"lineNumber":420,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":421,"author":{"gitId":"LouisLouis19"},"content":"### Adding a Note","lastModifiedDate":"2021-10-08"},{"lineNumber":422,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":423,"author":{"gitId":"Woolicious98"},"content":"**Format:** `add \"\u003cnote_name\u003e\" \"\u003cnote_content\u003e\"`","lastModifiedDate":"2021-11-07"},{"lineNumber":424,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":425,"author":{"gitId":"Woolicious98"},"content":"Adds a note when in the note workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":426,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":427,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️The `\u003cnote_name\u003e` cannot be more than **30** characters and cannot be a name that already exists in this module. It follows the condition of a `valid_file_name`.","lastModifiedDate":"2021-11-07"},{"lineNumber":428,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":429,"author":{"gitId":"Woolicious98"},"content":"\u003e 💡 When executing this command, it will add the note into its module and creates a `.txt` file inside the module folder. The `.txt` file will be named after the newly added note name.","lastModifiedDate":"2021-10-22"},{"lineNumber":430,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":431,"author":{"gitId":"kelvneo"},"content":"\u003e ❗ If there is a file with the same name as the newly added note and is not registered in TermiNUS, ","lastModifiedDate":"2021-11-03"},{"lineNumber":432,"author":{"gitId":"kelvneo"},"content":"\u003e all contents in that file will be overwritten. ","lastModifiedDate":"2021-11-03"},{"lineNumber":433,"author":{"gitId":"kelvneo"},"content":"\u003e ","lastModifiedDate":"2021-11-03"},{"lineNumber":434,"author":{"gitId":"kelvneo"},"content":"\u003e To add that note, please refer to [Reloading all notes](#reloading-all-notes).","lastModifiedDate":"2021-11-03"},{"lineNumber":435,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":436,"author":{"gitId":"Woolicious98"},"content":"Example: `add \"coding style\" \"switch case identation should be aligned.\"`","lastModifiedDate":"2021-10-22"},{"lineNumber":437,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":438,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":439,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":440,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":441,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e add \"coding style\" \"switch case identation should be aligned.\"","lastModifiedDate":"2021-10-22"},{"lineNumber":442,"author":{"gitId":"Woolicious98"},"content":"Your note on \u0027coding style\u0027 has been added!","lastModifiedDate":"2021-10-22"},{"lineNumber":443,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":444,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":446,"author":{"gitId":"Woolicious98"},"content":"### Viewing note information","lastModifiedDate":"2021-10-22"},{"lineNumber":447,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":448,"author":{"gitId":"Woolicious98"},"content":"**Format:** `view {index}`","lastModifiedDate":"2021-10-22"},{"lineNumber":449,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":450,"author":{"gitId":"Woolicious98"},"content":"Views a list of notes in the module or views all information for that specific note when in the note","lastModifiedDate":"2021-10-23"},{"lineNumber":451,"author":{"gitId":"Woolicious98"},"content":"workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":452,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":453,"author":{"gitId":"Woolicious98"},"content":"Example 1: `view`","lastModifiedDate":"2021-10-22"},{"lineNumber":454,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":455,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":456,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":457,"author":{"gitId":"Woolicious98"},"content":"Expected Output 1:","lastModifiedDate":"2021-10-22"},{"lineNumber":458,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":459,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":460,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e view","lastModifiedDate":"2021-10-22"},{"lineNumber":461,"author":{"gitId":"Woolicious98"},"content":"List of Content","lastModifiedDate":"2021-10-22"},{"lineNumber":462,"author":{"gitId":"Woolicious98"},"content":"---------------","lastModifiedDate":"2021-10-22"},{"lineNumber":463,"author":{"gitId":"Woolicious98"},"content":"1. coding style","lastModifiedDate":"2021-10-22"},{"lineNumber":464,"author":{"gitId":"Woolicious98"},"content":"2. coding comments","lastModifiedDate":"2021-10-22"},{"lineNumber":465,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":466,"author":{"gitId":"Woolicious98"},"content":"Rerun the same command with an index behind to view the content.","lastModifiedDate":"2021-10-22"},{"lineNumber":467,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":468,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":469,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":470,"author":{"gitId":"Woolicious98"},"content":"Example 2: `view 1`","lastModifiedDate":"2021-10-22"},{"lineNumber":471,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":472,"author":{"gitId":"Woolicious98"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-22"},{"lineNumber":473,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":474,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":475,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e view 1","lastModifiedDate":"2021-10-22"},{"lineNumber":476,"author":{"gitId":"Woolicious98"},"content":"Name: coding style","lastModifiedDate":"2021-10-22"},{"lineNumber":477,"author":{"gitId":"Woolicious98"},"content":"Content:","lastModifiedDate":"2021-10-22"},{"lineNumber":478,"author":{"gitId":"Woolicious98"},"content":"switch case identation should be aligned.","lastModifiedDate":"2021-10-22"},{"lineNumber":479,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":480,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":481,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":482,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":483,"author":{"gitId":"kelvneo"},"content":"### Deleting a Note","lastModifiedDate":"2021-11-03"},{"lineNumber":484,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":485,"author":{"gitId":"kelvneo"},"content":"**Format:** `delete \u003cindex\u003e`","lastModifiedDate":"2021-11-03"},{"lineNumber":486,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":487,"author":{"gitId":"kelvneo"},"content":"Deletes the specified note given by its **index** when in the note workspace.","lastModifiedDate":"2021-11-03"},{"lineNumber":488,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":489,"author":{"gitId":"kelvneo"},"content":"\u003e ❗ When the specified note is being deleted, the file that stores the note will be deleted.","lastModifiedDate":"2021-11-03"},{"lineNumber":490,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":491,"author":{"gitId":"kelvneo"},"content":"Example: `delete 1`","lastModifiedDate":"2021-11-03"},{"lineNumber":492,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":493,"author":{"gitId":"kelvneo"},"content":"Expected Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":494,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":495,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":496,"author":{"gitId":"kelvneo"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e delete 1","lastModifiedDate":"2021-11-03"},{"lineNumber":497,"author":{"gitId":"kelvneo"},"content":"Your note on \u0027coding style\u0027 has been deleted!","lastModifiedDate":"2021-11-03"},{"lineNumber":498,"author":{"gitId":"kelvneo"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e ","lastModifiedDate":"2021-11-03"},{"lineNumber":499,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":500,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":501,"author":{"gitId":"kelvneo"},"content":"### Reloading all notes","lastModifiedDate":"2021-11-03"},{"lineNumber":502,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":503,"author":{"gitId":"kelvneo"},"content":"**Format:** `reload`","lastModifiedDate":"2021-11-03"},{"lineNumber":504,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":505,"author":{"gitId":"Woolicious98"},"content":"Reloads all the notes found within your `data/\u003cmodule_code\u003e`.","lastModifiedDate":"2021-11-07"},{"lineNumber":506,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":507,"author":{"gitId":"kelvneo"},"content":"\u003e 💡 This command is useful when you have updated your notes file in another application, and would ","lastModifiedDate":"2021-11-03"},{"lineNumber":508,"author":{"gitId":"kelvneo"},"content":"\u003e wish to update the contents into TermiNUS.","lastModifiedDate":"2021-11-03"},{"lineNumber":509,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":510,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️ Any note file that do not follow the same restriction as mentioned in [Adding a Note](#adding-a-module) will be ignored.","lastModifiedDate":"2021-11-07"},{"lineNumber":511,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":512,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️ If there are any 2 or more note files with the same exact name regardless of case sensitivity, only 1 of them will be loaded.","lastModifiedDate":"2021-11-07"},{"lineNumber":513,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":514,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️ If storage is disabled, this command will not work as intended. For more information, please refer to [FAQ](#faq).","lastModifiedDate":"2021-11-07"},{"lineNumber":515,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":516,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️ Any note file within its `data/\u003cmodule_code\u003e` folder that has an issue while reloading will be ignored.","lastModifiedDate":"2021-11-08"},{"lineNumber":517,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":518,"author":{"gitId":"kelvneo"},"content":"Example: `reload`","lastModifiedDate":"2021-11-03"},{"lineNumber":519,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":520,"author":{"gitId":"kelvneo"},"content":"Expected Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":521,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":522,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":523,"author":{"gitId":"kelvneo"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e reload","lastModifiedDate":"2021-11-03"},{"lineNumber":524,"author":{"gitId":"kelvneo"},"content":"Your Notes for CS2113T is being reloaded.","lastModifiedDate":"2021-11-03"},{"lineNumber":525,"author":{"gitId":"kelvneo"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e ","lastModifiedDate":"2021-11-03"},{"lineNumber":526,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":527,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":528,"author":{"gitId":"3m0W33D"},"content":"### Exporting all notes ","lastModifiedDate":"2021-10-24"},{"lineNumber":529,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":530,"author":{"gitId":"3m0W33D"},"content":"**Format:** `export`","lastModifiedDate":"2021-10-24"},{"lineNumber":531,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":532,"author":{"gitId":"kelvneo"},"content":"For your convenience to print and bring physical notes to exams, you can export all notes within the","lastModifiedDate":"2021-11-03"},{"lineNumber":533,"author":{"gitId":"kelvneo"},"content":"note workspace as a PDF file.","lastModifiedDate":"2021-11-03"},{"lineNumber":534,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":535,"author":{"gitId":"3m0W33D"},"content":"\u003e ⚠️ To export a file, there must be at least 1 note contained within the note workspace.","lastModifiedDate":"2021-10-24"},{"lineNumber":536,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":537,"author":{"gitId":"3m0W33D"},"content":"\u003e ⚠️ The export process can take a while.   ","lastModifiedDate":"2021-10-24"},{"lineNumber":538,"author":{"gitId":"3m0W33D"},"content":"\u003e A very large text can cause the program to take a long time to export.","lastModifiedDate":"2021-10-24"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":540,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️ If storage is disabled, this command will not work as intended. For more information, please refer to [FAQ](#faq).","lastModifiedDate":"2021-11-07"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":542,"author":{"gitId":"3m0W33D"},"content":"Example: `export`","lastModifiedDate":"2021-10-24"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":544,"author":{"gitId":"3m0W33D"},"content":"Expected Output:","lastModifiedDate":"2021-10-24"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":546,"author":{"gitId":"3m0W33D"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":547,"author":{"gitId":"3m0W33D"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e export","lastModifiedDate":"2021-10-24"},{"lineNumber":548,"author":{"gitId":"Woolicious98"},"content":"Exporting notes... Check the data folder.","lastModifiedDate":"2021-11-07"},{"lineNumber":549,"author":{"gitId":"3m0W33D"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-24"},{"lineNumber":550,"author":{"gitId":"3m0W33D"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":552,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-22"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":554,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":556,"author":{"gitId":"LouisLouis19"},"content":"## Section: Schedule","lastModifiedDate":"2021-10-09"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":558,"author":{"gitId":"Woolicious98"},"content":"All commands related to the workspace `Schedule` will be displayed in this section. These commands","lastModifiedDate":"2021-10-23"},{"lineNumber":559,"author":{"gitId":"Woolicious98"},"content":"enable users to create, delete and view `schedule` within the module.","lastModifiedDate":"2021-10-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":561,"author":{"gitId":"Woolicious98"},"content":"### Accessing schedule workspace","lastModifiedDate":"2021-10-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":563,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `schedule`","lastModifiedDate":"2021-10-08"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":565,"author":{"gitId":"Woolicious98"},"content":"Enters the Schedule workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":566,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":567,"author":{"gitId":"Woolicious98"},"content":"Example: `schedule`","lastModifiedDate":"2021-10-23"},{"lineNumber":568,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":569,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-23"},{"lineNumber":570,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":571,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":572,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e schedule","lastModifiedDate":"2021-10-23"},{"lineNumber":573,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":574,"author":{"gitId":"LouisLouis19"},"content":"You have 0 link(s) in this workspace.","lastModifiedDate":"2021-10-09"},{"lineNumber":575,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":576,"author":{"gitId":"LouisLouis19"},"content":"Type any of the following to get started:","lastModifiedDate":"2021-10-09"},{"lineNumber":577,"author":{"gitId":"LouisLouis19"},"content":"\u003e add","lastModifiedDate":"2021-10-08"},{"lineNumber":578,"author":{"gitId":"Woolicious98"},"content":"\u003e exit","lastModifiedDate":"2021-10-23"},{"lineNumber":579,"author":{"gitId":"LouisLouis19"},"content":"\u003e help","lastModifiedDate":"2021-10-09"},{"lineNumber":580,"author":{"gitId":"LouisLouis19"},"content":"\u003e view","lastModifiedDate":"2021-10-08"},{"lineNumber":581,"author":{"gitId":"LouisLouis19"},"content":"\u003e back","lastModifiedDate":"2021-10-09"},{"lineNumber":582,"author":{"gitId":"LouisLouis19"},"content":"\u003e delete","lastModifiedDate":"2021-10-09"},{"lineNumber":583,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":584,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":585,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":586,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":587,"author":{"gitId":"Woolicious98"},"content":"List of Schedule workspace commands:","lastModifiedDate":"2021-10-23"},{"lineNumber":588,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":589,"author":{"gitId":"Woolicious98"},"content":"| Command      | Description |","lastModifiedDate":"2021-10-23"},{"lineNumber":590,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-10-23"},{"lineNumber":591,"author":{"gitId":"Woolicious98"},"content":"|add|add a schedule for the module|","lastModifiedDate":"2021-10-23"},{"lineNumber":592,"author":{"gitId":"Woolicious98"},"content":"|view|view schedule information from the module|","lastModifiedDate":"2021-10-23"},{"lineNumber":593,"author":{"gitId":"kelvneo"},"content":"|delete|delete a schedule from the module|","lastModifiedDate":"2021-11-03"},{"lineNumber":594,"author":{"gitId":"Woolicious98"},"content":"|help|view all commands and their usage in the schedule workspace|","lastModifiedDate":"2021-10-23"},{"lineNumber":595,"author":{"gitId":"Woolicious98"},"content":"|back|escape and return to the module workspace|","lastModifiedDate":"2021-10-23"},{"lineNumber":596,"author":{"gitId":"Woolicious98"},"content":"|exit|exit and closes TermiNUS|","lastModifiedDate":"2021-10-23"},{"lineNumber":597,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":598,"author":{"gitId":"LouisLouis19"},"content":"### Adding a Schedule","lastModifiedDate":"2021-10-08"},{"lineNumber":599,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":600,"author":{"gitId":"Woolicious98"},"content":"**Format:** `add \"\u003clink_description\u003e\" \"\u003cday\u003e\" \"\u003cstart_time\u003e\" \"\u003cduration\u003e\" \"\u003czoom_link\u003e\"`","lastModifiedDate":"2021-11-07"},{"lineNumber":601,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":602,"author":{"gitId":"Woolicious98"},"content":"Adds a schedule when in the schedule workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":603,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":604,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️The `\u003cday\u003e` must be a valid **day spelled fully**. For example, `monday` is a valid day but `mon` is not.","lastModifiedDate":"2021-10-23"},{"lineNumber":605,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":606,"author":{"gitId":"LouisLouis19"},"content":"\u003e 💡 The accepted input for the `\u003cday\u003e` argument includes \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", and \"Sunday\".","lastModifiedDate":"2021-11-01"},{"lineNumber":607,"author":{"gitId":"LouisLouis19"},"content":" ","lastModifiedDate":"2021-11-01"},{"lineNumber":608,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️The `\u003cstart_time\u003e` must be in a **HH:mm** format which follows the **24-hour notation**. For example, `14:20` is valid which represents `2:20 pm`.","lastModifiedDate":"2021-10-23"},{"lineNumber":609,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":610,"author":{"gitId":"kelvneo"},"content":"\u003e ⚠️The `duration` must be a **positive** integer and upon addition with `start_time`, ","lastModifiedDate":"2021-11-03"},{"lineNumber":611,"author":{"gitId":"kelvneo"},"content":"\u003e it must not exceed the 24-hour limit of the day. For example, if `start_time` is `21:00`, `2` is a valid `duration` but `-1` and `4` are not.","lastModifiedDate":"2021-11-03"},{"lineNumber":612,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":613,"author":{"gitId":"kelvneo"},"content":"\u003e ⚠️The `\u003czoom_link\u003e` must begin with a \"http://\" or \"https://\" in order for the link to be valid.","lastModifiedDate":"2021-11-03"},{"lineNumber":614,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":615,"author":{"gitId":"LouisLouis19"},"content":"Example: `add \"CS2113T Tutorial 1\" \"Thursday\" \"10:00\" \"2\" \"https://zoom.us/test\"`","lastModifiedDate":"2021-10-23"},{"lineNumber":616,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":617,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-23"},{"lineNumber":618,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":619,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":620,"author":{"gitId":"LouisLouis19"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e add \"CS2113T Tutorial 1\" \"Thursday\" \"10:00\" \"2\" \"https://zoom.us/test\"","lastModifiedDate":"2021-11-01"},{"lineNumber":621,"author":{"gitId":"Woolicious98"},"content":"Your schedule on \u0027CS2113T Tutorial 1\u0027 has been added!","lastModifiedDate":"2021-10-23"},{"lineNumber":622,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":623,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":624,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":625,"author":{"gitId":"Woolicious98"},"content":"### Viewing schedule information","lastModifiedDate":"2021-10-23"},{"lineNumber":626,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":627,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `view {index}`","lastModifiedDate":"2021-11-01"},{"lineNumber":628,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":629,"author":{"gitId":"Woolicious98"},"content":"Views a list of schedules in the module when in the schedule workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":630,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":631,"author":{"gitId":"LouisLouis19"},"content":"Example 1: `view`","lastModifiedDate":"2021-11-01"},{"lineNumber":632,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":633,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":634,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":635,"author":{"gitId":"LouisLouis19"},"content":"Expected Output 1:","lastModifiedDate":"2021-11-01"},{"lineNumber":636,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":637,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":638,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e view","lastModifiedDate":"2021-10-23"},{"lineNumber":639,"author":{"gitId":"Woolicious98"},"content":"List of Content","lastModifiedDate":"2021-10-23"},{"lineNumber":640,"author":{"gitId":"Woolicious98"},"content":"---------------","lastModifiedDate":"2021-10-23"},{"lineNumber":641,"author":{"gitId":"LouisLouis19"},"content":"1. CS2113T Tutorial 1 (Thursday, 10:00 - 12:00): https://zoom.us/test","lastModifiedDate":"2021-10-23"},{"lineNumber":642,"author":{"gitId":"LouisLouis19"},"content":"2. CS2113T Lab 1 (Friday, 12:30 - 14:30): https://zoom.us/test","lastModifiedDate":"2021-10-23"},{"lineNumber":643,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":644,"author":{"gitId":"Woolicious98"},"content":"Rerun the same command with an index behind to view the content.","lastModifiedDate":"2021-10-23"},{"lineNumber":645,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":646,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":647,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":648,"author":{"gitId":"LouisLouis19"},"content":"Example 2: `view 1`","lastModifiedDate":"2021-11-01"},{"lineNumber":649,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":650,"author":{"gitId":"LouisLouis19"},"content":"Expected Output 2:","lastModifiedDate":"2021-11-01"},{"lineNumber":651,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":652,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-11-01"},{"lineNumber":653,"author":{"gitId":"LouisLouis19"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e view 1","lastModifiedDate":"2021-11-01"},{"lineNumber":654,"author":{"gitId":"LouisLouis19"},"content":"CS2113T Tutorial 1 (Thursday, 10:00 - 12:00): https://zoom.us/test","lastModifiedDate":"2021-11-01"},{"lineNumber":655,"author":{"gitId":"LouisLouis19"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e ","lastModifiedDate":"2021-11-01"},{"lineNumber":656,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-11-01"},{"lineNumber":657,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":658,"author":{"gitId":"kelvneo"},"content":"### Deleting a Schedule","lastModifiedDate":"2021-11-03"},{"lineNumber":659,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":660,"author":{"gitId":"kelvneo"},"content":"**Format:** `delete \u003cindex\u003e`","lastModifiedDate":"2021-11-03"},{"lineNumber":661,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":662,"author":{"gitId":"kelvneo"},"content":"Deletes the specified schedule given by its **index** when in the schedule workspace.","lastModifiedDate":"2021-11-03"},{"lineNumber":663,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":664,"author":{"gitId":"kelvneo"},"content":"Example: `delete 1`","lastModifiedDate":"2021-11-03"},{"lineNumber":665,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":666,"author":{"gitId":"kelvneo"},"content":"Expected Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":667,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":668,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":669,"author":{"gitId":"kelvneo"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e delete 1","lastModifiedDate":"2021-11-03"},{"lineNumber":670,"author":{"gitId":"kelvneo"},"content":"Your link on \u0027CS2113T Tutorial 1\u0027 has been deleted!","lastModifiedDate":"2021-11-03"},{"lineNumber":671,"author":{"gitId":"kelvneo"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e ","lastModifiedDate":"2021-11-03"},{"lineNumber":672,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":673,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":674,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-23"},{"lineNumber":675,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":676,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":677,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":678,"author":{"gitId":"kelvneo"},"content":"## Section: Question","lastModifiedDate":"2021-10-21"},{"lineNumber":679,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":680,"author":{"gitId":"Woolicious98"},"content":"All commands related to the workspace Question will be displayed in this section. These commands","lastModifiedDate":"2021-10-23"},{"lineNumber":681,"author":{"gitId":"Woolicious98"},"content":"enable users to create, delete and view questions within the module.","lastModifiedDate":"2021-10-23"},{"lineNumber":682,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":683,"author":{"gitId":"Woolicious98"},"content":"In addition, users can test themselves with the question added into the module.","lastModifiedDate":"2021-10-23"},{"lineNumber":684,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":685,"author":{"gitId":"kelvneo"},"content":"List of Question workspace commands:","lastModifiedDate":"2021-11-03"},{"lineNumber":686,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":687,"author":{"gitId":"kelvneo"},"content":"| Command      | Description |","lastModifiedDate":"2021-11-03"},{"lineNumber":688,"author":{"gitId":"kelvneo"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-11-03"},{"lineNumber":689,"author":{"gitId":"kelvneo"},"content":"|add|add a question for the module|","lastModifiedDate":"2021-11-03"},{"lineNumber":690,"author":{"gitId":"kelvneo"},"content":"|view|view question(s) from the module|","lastModifiedDate":"2021-11-03"},{"lineNumber":691,"author":{"gitId":"kelvneo"},"content":"|delete|delete a question from the module|","lastModifiedDate":"2021-11-03"},{"lineNumber":692,"author":{"gitId":"kelvneo"},"content":"|test|test yourself with questions from the module|","lastModifiedDate":"2021-11-03"},{"lineNumber":693,"author":{"gitId":"kelvneo"},"content":"|help|view all commands and their usage in the question workspace|","lastModifiedDate":"2021-11-03"},{"lineNumber":694,"author":{"gitId":"kelvneo"},"content":"|back|escape and return to the module workspace|","lastModifiedDate":"2021-11-03"},{"lineNumber":695,"author":{"gitId":"kelvneo"},"content":"|exit|exit and closes TermiNUS|","lastModifiedDate":"2021-11-03"},{"lineNumber":696,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":697,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":698,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":699,"author":{"gitId":"Woolicious98"},"content":"### Accessing question workspace","lastModifiedDate":"2021-10-23"},{"lineNumber":700,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":701,"author":{"gitId":"kelvneo"},"content":"**Format:** `question`","lastModifiedDate":"2021-10-21"},{"lineNumber":702,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":703,"author":{"gitId":"Woolicious98"},"content":"Enters the Question workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":704,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":705,"author":{"gitId":"Woolicious98"},"content":"Example: `question`","lastModifiedDate":"2021-10-23"},{"lineNumber":706,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":707,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-23"},{"lineNumber":708,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":709,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":710,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e question","lastModifiedDate":"2021-10-23"},{"lineNumber":711,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":712,"author":{"gitId":"kelvneo"},"content":"You have 0 question(s) in this workspace.","lastModifiedDate":"2021-10-21"},{"lineNumber":713,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":714,"author":{"gitId":"kelvneo"},"content":"Type any of the following to get started:","lastModifiedDate":"2021-10-21"},{"lineNumber":715,"author":{"gitId":"kelvneo"},"content":"\u003e add","lastModifiedDate":"2021-10-21"},{"lineNumber":716,"author":{"gitId":"kelvneo"},"content":"\u003e exit","lastModifiedDate":"2021-10-21"},{"lineNumber":717,"author":{"gitId":"kelvneo"},"content":"\u003e help","lastModifiedDate":"2021-10-21"},{"lineNumber":718,"author":{"gitId":"kelvneo"},"content":"\u003e view","lastModifiedDate":"2021-10-21"},{"lineNumber":719,"author":{"gitId":"kelvneo"},"content":"\u003e test","lastModifiedDate":"2021-10-21"},{"lineNumber":720,"author":{"gitId":"kelvneo"},"content":"\u003e back","lastModifiedDate":"2021-10-21"},{"lineNumber":721,"author":{"gitId":"kelvneo"},"content":"\u003e delete","lastModifiedDate":"2021-10-21"},{"lineNumber":722,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":723,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":724,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":725,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":726,"author":{"gitId":"kelvneo"},"content":"### Adding a Question","lastModifiedDate":"2021-10-21"},{"lineNumber":727,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":728,"author":{"gitId":"kelvneo"},"content":"**Format:** `add \"\u003cquestion\u003e\" \"\u003canswer\u003e\"`","lastModifiedDate":"2021-10-21"},{"lineNumber":729,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":730,"author":{"gitId":"Woolicious98"},"content":"Adds a question when in the question workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":731,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":732,"author":{"gitId":"Woolicious98"},"content":"Example: `add \"What is 1+1?\" \"2\"`","lastModifiedDate":"2021-10-23"},{"lineNumber":733,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":734,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-23"},{"lineNumber":735,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":736,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":737,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e add \"What is 1+1?\" \"2\"","lastModifiedDate":"2021-10-23"},{"lineNumber":738,"author":{"gitId":"kelvneo"},"content":"Your question on \u0027What is 1+1?\u0027 has been added!","lastModifiedDate":"2021-10-21"},{"lineNumber":739,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":740,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":741,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":742,"author":{"gitId":"Woolicious98"},"content":"### Viewing question information","lastModifiedDate":"2021-10-23"},{"lineNumber":743,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":744,"author":{"gitId":"Woolicious98"},"content":"**Format:** `view {index}`","lastModifiedDate":"2021-10-23"},{"lineNumber":745,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":746,"author":{"gitId":"Woolicious98"},"content":"Views a list of questions in the module or views all information for that specific question when in","lastModifiedDate":"2021-10-23"},{"lineNumber":747,"author":{"gitId":"Woolicious98"},"content":"the question workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":748,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":749,"author":{"gitId":"Woolicious98"},"content":"Example 1: `view`","lastModifiedDate":"2021-10-23"},{"lineNumber":750,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":751,"author":{"gitId":"Woolicious98"},"content":"Expected Output 1:","lastModifiedDate":"2021-10-23"},{"lineNumber":752,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":753,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":754,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e view","lastModifiedDate":"2021-10-23"},{"lineNumber":755,"author":{"gitId":"kelvneo"},"content":"List of Content","lastModifiedDate":"2021-10-21"},{"lineNumber":756,"author":{"gitId":"kelvneo"},"content":"---------------","lastModifiedDate":"2021-10-21"},{"lineNumber":757,"author":{"gitId":"Woolicious98"},"content":"1. What is EP?","lastModifiedDate":"2021-10-23"},{"lineNumber":758,"author":{"gitId":"Woolicious98"},"content":"2. What is UML?","lastModifiedDate":"2021-10-23"},{"lineNumber":759,"author":{"gitId":"Woolicious98"},"content":"3. What is SUT?","lastModifiedDate":"2021-10-23"},{"lineNumber":760,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":761,"author":{"gitId":"kelvneo"},"content":"Rerun the same command with an index behind to view the content.","lastModifiedDate":"2021-10-21"},{"lineNumber":762,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":763,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":764,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":765,"author":{"gitId":"Woolicious98"},"content":"Example 2: `view 1`","lastModifiedDate":"2021-10-23"},{"lineNumber":766,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":767,"author":{"gitId":"Woolicious98"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-23"},{"lineNumber":768,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":769,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":770,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e view 1","lastModifiedDate":"2021-10-23"},{"lineNumber":771,"author":{"gitId":"Woolicious98"},"content":"Name: What is EP?","lastModifiedDate":"2021-10-23"},{"lineNumber":772,"author":{"gitId":"kelvneo"},"content":"Content:","lastModifiedDate":"2021-10-21"},{"lineNumber":773,"author":{"gitId":"Woolicious98"},"content":"Equivalence partitioning","lastModifiedDate":"2021-10-23"},{"lineNumber":774,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":775,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":776,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":777,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":778,"author":{"gitId":"kelvneo"},"content":"### Deleting a Question","lastModifiedDate":"2021-11-03"},{"lineNumber":779,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":780,"author":{"gitId":"kelvneo"},"content":"**Format:** `delete \u003cindex\u003e`","lastModifiedDate":"2021-11-03"},{"lineNumber":781,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":782,"author":{"gitId":"kelvneo"},"content":"Deletes the specified question given by its **index** when in the question workspace.","lastModifiedDate":"2021-11-03"},{"lineNumber":783,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":784,"author":{"gitId":"kelvneo"},"content":"Example: `delete 1`","lastModifiedDate":"2021-11-03"},{"lineNumber":785,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":786,"author":{"gitId":"kelvneo"},"content":"Expected Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":787,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":788,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":789,"author":{"gitId":"kelvneo"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e delete 1","lastModifiedDate":"2021-11-03"},{"lineNumber":790,"author":{"gitId":"kelvneo"},"content":"Your question on \u0027What is 1+1?\u0027 has been deleted!","lastModifiedDate":"2021-11-03"},{"lineNumber":791,"author":{"gitId":"kelvneo"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e ","lastModifiedDate":"2021-11-03"},{"lineNumber":792,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":793,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":794,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":795,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":796,"author":{"gitId":"kelvneo"},"content":"### Testing Yourself with Active Recall","lastModifiedDate":"2021-10-21"},{"lineNumber":797,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":798,"author":{"gitId":"Woolicious98"},"content":"**Format:** `test {question_count}`","lastModifiedDate":"2021-11-07"},{"lineNumber":799,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":800,"author":{"gitId":"kelvneo"},"content":"Starts an Active Recall session.","lastModifiedDate":"2021-11-03"},{"lineNumber":801,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":802,"author":{"gitId":"Woolicious98"},"content":"You may specify the number of questions to be tested by adding a `{question_count}` at the end of the ","lastModifiedDate":"2021-11-07"},{"lineNumber":803,"author":{"gitId":"kelvneo"},"content":"command. ","lastModifiedDate":"2021-11-03"},{"lineNumber":804,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":805,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️To start a session, there must be at least 1 question contained within the question workspace.","lastModifiedDate":"2021-11-07"},{"lineNumber":806,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":807,"author":{"gitId":"Woolicious98"},"content":"\u003e 💡 By default, `{question_count}` will be set to **10** questions if left unspecified. ","lastModifiedDate":"2021-11-07"},{"lineNumber":808,"author":{"gitId":"kelvneo"},"content":"\u003e ","lastModifiedDate":"2021-11-03"},{"lineNumber":809,"author":{"gitId":"kelvneo"},"content":"\u003e If there are not enough questions, it will take the whole pool of questions in the module ","lastModifiedDate":"2021-11-03"},{"lineNumber":810,"author":{"gitId":"kelvneo"},"content":"\u003e (i.e. if you have 7 questions in your current module, you will only receive 7 questions when you ","lastModifiedDate":"2021-11-03"},{"lineNumber":811,"author":{"gitId":"Woolicious98"},"content":"\u003e indicate a `{question_count}` greater than 7 or leave it empty).","lastModifiedDate":"2021-11-07"},{"lineNumber":812,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":813,"author":{"gitId":"kelvneo"},"content":"When you begin, you will be prompted with the following:","lastModifiedDate":"2021-11-03"},{"lineNumber":814,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":815,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":816,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e test 3","lastModifiedDate":"2021-10-23"},{"lineNumber":817,"author":{"gitId":"kelvneo"},"content":"---[Active Recall]---","lastModifiedDate":"2021-10-21"},{"lineNumber":818,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":819,"author":{"gitId":"kelvneo"},"content":"We will be starting your active recall training session.","lastModifiedDate":"2021-10-21"},{"lineNumber":820,"author":{"gitId":"kelvneo"},"content":"This session will consist of 3 questions.","lastModifiedDate":"2021-10-21"},{"lineNumber":821,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":822,"author":{"gitId":"kelvneo"},"content":"When you are ready, press [Enter] to continue.","lastModifiedDate":"2021-10-21"},{"lineNumber":823,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":824,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":825,"author":{"gitId":"kelvneo"},"content":"Press the \u003ckbd\u003eEnter\u003c/kbd\u003e key to start.","lastModifiedDate":"2021-11-03"},{"lineNumber":826,"author":{"gitId":"kelvneo"},"content":"The first question will be displayed, and once you are ready to reveal the answer, press the","lastModifiedDate":"2021-10-21"},{"lineNumber":827,"author":{"gitId":"kelvneo"},"content":"\u003ckbd\u003eEnter\u003c/kbd\u003e key again.","lastModifiedDate":"2021-10-21"},{"lineNumber":828,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":829,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":830,"author":{"gitId":"kelvneo"},"content":"---","lastModifiedDate":"2021-10-21"},{"lineNumber":831,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":832,"author":{"gitId":"kelvneo"},"content":"Question:","lastModifiedDate":"2021-10-21"},{"lineNumber":833,"author":{"gitId":"Woolicious98"},"content":"What is EP?","lastModifiedDate":"2021-10-23"},{"lineNumber":834,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":835,"author":{"gitId":"kelvneo"},"content":"When you are ready, press [Enter] to continue.","lastModifiedDate":"2021-10-21"},{"lineNumber":836,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":837,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":838,"author":{"gitId":"kelvneo"},"content":"After revealing the answer, provide feedback to TermiNUS to allow it to know if the question should","lastModifiedDate":"2021-10-21"},{"lineNumber":839,"author":{"gitId":"kelvneo"},"content":"appear more often in the future.","lastModifiedDate":"2021-10-21"},{"lineNumber":840,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":841,"author":{"gitId":"kelvneo"},"content":"- Key in `1` if you felt it was easy.","lastModifiedDate":"2021-10-21"},{"lineNumber":842,"author":{"gitId":"kelvneo"},"content":"- Key in `2` if you felt it was normal.","lastModifiedDate":"2021-10-21"},{"lineNumber":843,"author":{"gitId":"kelvneo"},"content":"- Key in `3` if you felt it was hard.","lastModifiedDate":"2021-10-21"},{"lineNumber":844,"author":{"gitId":"kelvneo"},"content":"- Key in `E` if you wish to exit the session.","lastModifiedDate":"2021-10-21"},{"lineNumber":845,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":846,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":847,"author":{"gitId":"kelvneo"},"content":"You took 172 seconds to reveal the answer.","lastModifiedDate":"2021-10-21"},{"lineNumber":848,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":849,"author":{"gitId":"kelvneo"},"content":"Answer:","lastModifiedDate":"2021-10-21"},{"lineNumber":850,"author":{"gitId":"Woolicious98"},"content":"Equivalence partitioning","lastModifiedDate":"2021-10-23"},{"lineNumber":851,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":852,"author":{"gitId":"Woolicious98"},"content":"How did you find the question?","lastModifiedDate":"2021-11-07"},{"lineNumber":853,"author":{"gitId":"Woolicious98"},"content":"[1] Easy; [2] Normal; [3] Hard; [E] Exit","lastModifiedDate":"2021-11-07"},{"lineNumber":854,"author":{"gitId":"kelvneo"},"content":"[1/2/3/E] \u003e\u003e ","lastModifiedDate":"2021-10-21"},{"lineNumber":855,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":856,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":857,"author":{"gitId":"Woolicious98"},"content":"\u003e 💡 Notice how the program displays the time taken you took to answer the question. For example, the output above displays `172 seconds`.","lastModifiedDate":"2021-11-08"},{"lineNumber":858,"author":{"gitId":"Woolicious98"},"content":"\u003e ","lastModifiedDate":"2021-11-08"},{"lineNumber":859,"author":{"gitId":"Woolicious98"},"content":"\u003e This is for you to note of how long you took to answer the question and thus giving you an insight of how difficult the question is to you.","lastModifiedDate":"2021-11-08"},{"lineNumber":860,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":861,"author":{"gitId":"kelvneo"},"content":"After choosing your difficulty, you may proceed to reveal the next question by pressing","lastModifiedDate":"2021-10-21"},{"lineNumber":862,"author":{"gitId":"kelvneo"},"content":"\u003ckbd\u003eEnter\u003c/kbd\u003e key again.","lastModifiedDate":"2021-10-21"},{"lineNumber":863,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":864,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":865,"author":{"gitId":"kelvneo"},"content":"[1/2/3/E] \u003e\u003e 2","lastModifiedDate":"2021-10-21"},{"lineNumber":866,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":867,"author":{"gitId":"kelvneo"},"content":"When you are ready, press [Enter] to continue.","lastModifiedDate":"2021-10-21"},{"lineNumber":868,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":869,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":870,"author":{"gitId":"kelvneo"},"content":"Once the question pool is empty, or when you decided to stop, TermiNUS will drop you back into the","lastModifiedDate":"2021-10-21"},{"lineNumber":871,"author":{"gitId":"kelvneo"},"content":"command prompt.","lastModifiedDate":"2021-10-21"},{"lineNumber":872,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":873,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":874,"author":{"gitId":"kelvneo"},"content":"This training session has ended.","lastModifiedDate":"2021-10-21"},{"lineNumber":875,"author":{"gitId":"kelvneo"},"content":"Returning you back to main program.","lastModifiedDate":"2021-10-21"},{"lineNumber":876,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":877,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":878,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":879,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-23"},{"lineNumber":880,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":881,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":882,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":883,"author":{"gitId":"Woolicious98"},"content":"## Displaying all schedules across all modules","lastModifiedDate":"2021-10-23"},{"lineNumber":884,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":885,"author":{"gitId":"Woolicious98"},"content":"**Format:** `timetable {day}`","lastModifiedDate":"2021-10-23"},{"lineNumber":886,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":887,"author":{"gitId":"Woolicious98"},"content":"Displays all schedules from all modules in TermiNUS or displays certain schedules that falls on the","lastModifiedDate":"2021-10-23"},{"lineNumber":888,"author":{"gitId":"Woolicious98"},"content":"specified day.","lastModifiedDate":"2021-10-23"},{"lineNumber":889,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":890,"author":{"gitId":"kelvneo"},"content":"\u003e ⚠️The `\u003cday\u003e` must be a valid **day spelled fully**. For example, `monday` is a valid day but ","lastModifiedDate":"2021-11-03"},{"lineNumber":891,"author":{"gitId":"kelvneo"},"content":"\u003e `mon` is not.","lastModifiedDate":"2021-11-03"},{"lineNumber":892,"author":{"gitId":"kelvneo"},"content":"\u003e ","lastModifiedDate":"2021-11-03"},{"lineNumber":893,"author":{"gitId":"kelvneo"},"content":"\u003e You may view [Adding a Schedule](#adding-a-schedule) for the valid list of days.","lastModifiedDate":"2021-11-03"},{"lineNumber":894,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":895,"author":{"gitId":"LouisLouis19"},"content":"\u003e 💡 The accepted input for the `\u003cday\u003e` argument includes \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", and \"Sunday\".","lastModifiedDate":"2021-11-04"},{"lineNumber":896,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":897,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":898,"author":{"gitId":"Woolicious98"},"content":"Example 1: `timetable`","lastModifiedDate":"2021-10-23"},{"lineNumber":899,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":900,"author":{"gitId":"Woolicious98"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-23"},{"lineNumber":901,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":902,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":903,"author":{"gitId":"Woolicious98"},"content":"[] \u003e\u003e\u003e timetable","lastModifiedDate":"2021-10-23"},{"lineNumber":904,"author":{"gitId":"Woolicious98"},"content":"THURSDAY:","lastModifiedDate":"2021-10-23"},{"lineNumber":905,"author":{"gitId":"LouisLouis19"},"content":"1. CS2113T Tutorial 1 (Thursday, 10:00 - 12:00): https://zoom.us/test","lastModifiedDate":"2021-10-23"},{"lineNumber":906,"author":{"gitId":"Woolicious98"},"content":"FRIDAY:","lastModifiedDate":"2021-10-23"},{"lineNumber":907,"author":{"gitId":"LouisLouis19"},"content":"1. CS2113T Lab 1 (Friday, 12:30 - 14:30): https://zoom.us/test","lastModifiedDate":"2021-10-23"},{"lineNumber":908,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":909,"author":{"gitId":"Woolicious98"},"content":"[] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":910,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":911,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":912,"author":{"gitId":"Woolicious98"},"content":"Example 2: `timetable thursday`","lastModifiedDate":"2021-10-23"},{"lineNumber":913,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":914,"author":{"gitId":"Woolicious98"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-23"},{"lineNumber":915,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":916,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":917,"author":{"gitId":"Woolicious98"},"content":"[] \u003e\u003e\u003e timetable thursday","lastModifiedDate":"2021-10-23"},{"lineNumber":918,"author":{"gitId":"LouisLouis19"},"content":"1. CS2113T Tutorial 1 (Thursday, 10:00 - 12:00): https://zoom.us/test","lastModifiedDate":"2021-10-23"},{"lineNumber":919,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":920,"author":{"gitId":"Woolicious98"},"content":"[] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":921,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":922,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":923,"author":{"gitId":"Woolicious98"},"content":"## Exiting TermiNUS","lastModifiedDate":"2021-10-23"},{"lineNumber":924,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":925,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `exit`","lastModifiedDate":"2021-10-08"},{"lineNumber":926,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":927,"author":{"gitId":"3m0W33D"},"content":"To exit the program, simply run the following command:","lastModifiedDate":"2021-10-10"},{"lineNumber":928,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":929,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":930,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e exit ","lastModifiedDate":"2021-10-08"},{"lineNumber":931,"author":{"gitId":"LouisLouis19"},"content":"Goodbye! ","lastModifiedDate":"2021-10-08"},{"lineNumber":932,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":933,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":934,"author":{"gitId":"LouisLouis19"},"content":"## Accessing Help","lastModifiedDate":"2021-10-08"},{"lineNumber":935,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":936,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `help`","lastModifiedDate":"2021-10-08"},{"lineNumber":937,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":938,"author":{"gitId":"3m0W33D"},"content":"Depending on your current workspace, you may get different help messages.  ","lastModifiedDate":"2021-10-10"},{"lineNumber":939,"author":{"gitId":"Woolicious98"},"content":"The following shows the help message in the default workspace:","lastModifiedDate":"2021-10-23"},{"lineNumber":940,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":941,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":942,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e help","lastModifiedDate":"2021-10-08"},{"lineNumber":943,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":944,"author":{"gitId":"Woolicious98"},"content":"Help Menu","lastModifiedDate":"2021-10-23"},{"lineNumber":945,"author":{"gitId":"Woolicious98"},"content":"---------","lastModifiedDate":"2021-10-23"},{"lineNumber":946,"author":{"gitId":"Woolicious98"},"content":"exit : Exits the program.","lastModifiedDate":"2021-10-23"},{"lineNumber":947,"author":{"gitId":"Woolicious98"},"content":"Format: exit","lastModifiedDate":"2021-10-23"},{"lineNumber":948,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":949,"author":{"gitId":"Woolicious98"},"content":"help : Prints the help page.","lastModifiedDate":"2021-10-23"},{"lineNumber":950,"author":{"gitId":"Woolicious98"},"content":"Format: help","lastModifiedDate":"2021-10-23"},{"lineNumber":951,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":952,"author":{"gitId":"Woolicious98"},"content":"module : Move to the module workspace","lastModifiedDate":"2021-10-23"},{"lineNumber":953,"author":{"gitId":"Woolicious98"},"content":"Format: module","lastModifiedDate":"2021-10-23"},{"lineNumber":954,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":955,"author":{"gitId":"Woolicious98"},"content":"go : Go to a specific module\u0027s workspace","lastModifiedDate":"2021-10-23"},{"lineNumber":956,"author":{"gitId":"Woolicious98"},"content":"Format: go \u003cmodule_code\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":957,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":958,"author":{"gitId":"Woolicious98"},"content":"timetable : Displays all your schedule.","lastModifiedDate":"2021-10-23"},{"lineNumber":959,"author":{"gitId":"Woolicious98"},"content":"Format: timetable {day}","lastModifiedDate":"2021-10-23"},{"lineNumber":960,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":961,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":962,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":963,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":964,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":965,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":966,"author":{"gitId":"LouisLouis19"},"content":"## Advanced Usage of Commands","lastModifiedDate":"2021-10-08"},{"lineNumber":967,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":968,"author":{"gitId":"Woolicious98"},"content":"**Format:** `\u003cworkspace\u003e \u003cavailable workspace command\u003e`","lastModifiedDate":"2021-10-23"},{"lineNumber":969,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":970,"author":{"gitId":"Woolicious98"},"content":"\u003e 💡 Beginner users are not advised to use this advance usage of commands until they are more familiar with the commands provided by TermiNUS. ","lastModifiedDate":"2021-11-08"},{"lineNumber":971,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":972,"author":{"gitId":"Woolicious98"},"content":"Advanced users can access workspace command directly without entering its environment in order to speed up the process of using TermiNUS. Seen below are some","lastModifiedDate":"2021-11-08"},{"lineNumber":973,"author":{"gitId":"Woolicious98"},"content":"command examples.","lastModifiedDate":"2021-10-22"},{"lineNumber":974,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":975,"author":{"gitId":"Woolicious98"},"content":"A workspace command is a command that will bring you to its own workspace. Current workspace command","lastModifiedDate":"2021-10-22"},{"lineNumber":976,"author":{"gitId":"Woolicious98"},"content":"includes note, schedule, question, and module.","lastModifiedDate":"2021-10-23"},{"lineNumber":977,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":978,"author":{"gitId":"kelvneo"},"content":"\u003e 💡 To access the module in TermiNUS, you will need to use the `go` command. For more information, ","lastModifiedDate":"2021-11-03"},{"lineNumber":979,"author":{"gitId":"kelvneo"},"content":"\u003e please refer to [Section: Specific Module](#section-specific-module).","lastModifiedDate":"2021-11-03"},{"lineNumber":980,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":981,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️This advance command do not allow any chaining with the `back` command.","lastModifiedDate":"2021-10-23"},{"lineNumber":982,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":983,"author":{"gitId":"Woolicious98"},"content":"Example:","lastModifiedDate":"2021-10-23"},{"lineNumber":984,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":985,"author":{"gitId":"Woolicious98"},"content":"- Adding a note without entering the note workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":986,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":987,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":988,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e note add \"Advance command\"  \"Advance command is cool\"","lastModifiedDate":"2021-10-23"},{"lineNumber":989,"author":{"gitId":"Woolicious98"},"content":"Your note on \u0027Advance command\u0027 has been added!","lastModifiedDate":"2021-10-23"},{"lineNumber":990,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":991,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":992,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":993,"author":{"gitId":"Woolicious98"},"content":"- Adding a schedule without entering the schedule workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":994,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":995,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":996,"author":{"gitId":"LouisLouis19"},"content":"[CS2113T] \u003e\u003e\u003e schedule add \"Lecture\" \"Friday\" \"16:00\" \"2\" \"https://zoom.us/test\"","lastModifiedDate":"2021-10-23"},{"lineNumber":997,"author":{"gitId":"Woolicious98"},"content":"Your schedule on \u0027Lecture\u0027 has been added!","lastModifiedDate":"2021-10-23"},{"lineNumber":998,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":999,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":1000,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":1001,"author":{"gitId":"Woolicious98"},"content":"- Adding a question without entering the module workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":1002,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":1003,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":1004,"author":{"gitId":"Woolicious98"},"content":"[] \u003e\u003e\u003e go CS2113T question add \"What is Java?\" \"It is a programming language.\"","lastModifiedDate":"2021-10-23"},{"lineNumber":1005,"author":{"gitId":"Woolicious98"},"content":"Your question on \u0027What is Java?\u0027 has been added!","lastModifiedDate":"2021-10-23"},{"lineNumber":1006,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":1007,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":1008,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":1009,"author":{"gitId":"3m0W33D"},"content":"___  ","lastModifiedDate":"2021-10-10"},{"lineNumber":1010,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":1011,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-10-08"},{"lineNumber":1014,"author":{"gitId":"3m0W33D"},"content":"**Q:** Can I edit the information in the`data` directory?  ","lastModifiedDate":"2021-10-24"},{"lineNumber":1015,"author":{"gitId":"Woolicious98"},"content":"**A:** Yes! **TermiNUS** saves and loads your information from the `data` folder. You are able to edit the files","lastModifiedDate":"2021-10-25"},{"lineNumber":1016,"author":{"gitId":"Woolicious98"},"content":"in the `data` folder. We recommend you to update the **contents** of any notes which should be a `.txt` file in the ","lastModifiedDate":"2021-10-25"},{"lineNumber":1017,"author":{"gitId":"Woolicious98"},"content":"`data/module_code` directory. However, we **do not** recommend modifying any configuration file such as `.json` file ","lastModifiedDate":"2021-10-25"},{"lineNumber":1018,"author":{"gitId":"Woolicious98"},"content":"or renaming any folders in the `data` folder including the `data` folder itself. For these, you should use **TermiNUS** instead to edit.","lastModifiedDate":"2021-10-25"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1020,"author":{"gitId":"kelvneo"},"content":"**Q:** (Windows) What will happen if I create a new module when I have an existing folder with the same module code in the `data` directory?  ","lastModifiedDate":"2021-11-03"},{"lineNumber":1021,"author":{"gitId":"kelvneo"},"content":"**A:** Regardless of **case sensitivity** (i.e. `cS2113T` or `CS2113T`), the files within the folder will be deleted.","lastModifiedDate":"2021-11-03"},{"lineNumber":1022,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":1023,"author":{"gitId":"kelvneo"},"content":"**Q:** (MacOS/Linux) What will happen if I create a new module when I have an existing folder with the same module code in the `data` directory?  ","lastModifiedDate":"2021-11-03"},{"lineNumber":1024,"author":{"gitId":"kelvneo"},"content":"**A:** Only the files within the **uppercase** folder (i.e. `CS2113T`) will be deleted. If there are folders with mixed or","lastModifiedDate":"2021-11-03"},{"lineNumber":1025,"author":{"gitId":"kelvneo"},"content":"lowercase (i.e. `cS2113t` or `cs2113t`), the **content within will be ignored** (for loading, saving and deleting).","lastModifiedDate":"2021-11-03"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":1027,"author":{"gitId":"kelvneo"},"content":"**Q:** Why is my module folder in the `data` folder not deleted?  ","lastModifiedDate":"2021-11-03"},{"lineNumber":1028,"author":{"gitId":"kelvneo"},"content":"**A:** There can be 2 reason. Firstly, there are files inside the folder that are locked by the ","lastModifiedDate":"2021-11-03"},{"lineNumber":1029,"author":{"gitId":"kelvneo"},"content":"operating system. This means there might be other applications using the file, which is preventing ","lastModifiedDate":"2021-11-03"},{"lineNumber":1030,"author":{"gitId":"kelvneo"},"content":"TermiNUS from deleting the folder cleanly. Usually restarting the computer and deleting it will ","lastModifiedDate":"2021-11-03"},{"lineNumber":1031,"author":{"gitId":"kelvneo"},"content":"solve the issue. Secondly, if you are running macOS or Linux, we do not delete folders that are ","lastModifiedDate":"2021-11-03"},{"lineNumber":1032,"author":{"gitId":"kelvneo"},"content":"**not uppercase** (e.g. `CS2113T` will be deleted but `CS2113t` will not be).","lastModifiedDate":"2021-11-03"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":1034,"author":{"gitId":"Woolicious98"},"content":"**Q:** What will happen if my data is **not loaded properly** when entering TermiNUS?  ","lastModifiedDate":"2021-11-07"},{"lineNumber":1035,"author":{"gitId":"Woolicious98"},"content":"**A:** Any existing data may be **overwritten** in the `data` folder when you perform any command within this state. If you do encounter this error, please copy the `json` file as soon as possible before exiting TermiNUS to prevent any loss of data.","lastModifiedDate":"2021-11-07"},{"lineNumber":1036,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":1037,"author":{"gitId":"Woolicious98"},"content":"**Q:** Why will storage be disabled?  ","lastModifiedDate":"2021-11-07"},{"lineNumber":1038,"author":{"gitId":"Woolicious98"},"content":"**A:** This is to **avoid a loss of data** when there is an error with loading or saving data into the `data` folder. Hence, if an error occurs, all storage operations will cease to work only until you exit the program where TermiNUS will attempt to save your data one last time.","lastModifiedDate":"2021-11-07"},{"lineNumber":1039,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":1040,"author":{"gitId":"3m0W33D"},"content":"___  ","lastModifiedDate":"2021-10-10"},{"lineNumber":1041,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":1042,"author":{"gitId":"3m0W33D"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1043,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1044,"author":{"gitId":"Woolicious98"},"content":"## Workspace Command Summary","lastModifiedDate":"2021-10-23"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1046,"author":{"gitId":"Woolicious98"},"content":"| Action | Format| Examples |","lastModifiedDate":"2021-10-23"},{"lineNumber":1047,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- |----------- |","lastModifiedDate":"2021-10-23"},{"lineNumber":1048,"author":{"gitId":"Woolicious98"},"content":"|access **module management** workspace|`module`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":1049,"author":{"gitId":"Woolicious98"},"content":"|access **module** workspace|`go \u003cmodule_code\u003e` | `go CS2113T`|","lastModifiedDate":"2021-10-23"},{"lineNumber":1050,"author":{"gitId":"Woolicious98"},"content":"|access **note** workspace|`note`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":1051,"author":{"gitId":"Woolicious98"},"content":"|access **schedule** workspace|`schedule`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":1052,"author":{"gitId":"Woolicious98"},"content":"|access **question** workspace|`question`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":1053,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":1054,"author":{"gitId":"3m0W33D"},"content":"___  ","lastModifiedDate":"2021-10-10"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2021-10-23"},{"lineNumber":1057,"author":{"gitId":"3m0W33D"},"content":"\u003e ⚠️ To understand which command applies to which workspace mentioned below, ","lastModifiedDate":"2021-10-24"},{"lineNumber":1058,"author":{"gitId":"3m0W33D"},"content":"\u003e please refer to [Workspace Command Summary](#workspace-command-summary)","lastModifiedDate":"2021-10-24"},{"lineNumber":1059,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":1060,"author":{"gitId":"Woolicious98"},"content":"| Workspace   | Action | Format| Examples |","lastModifiedDate":"2021-10-23"},{"lineNumber":1061,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- | ----------- |----------- |","lastModifiedDate":"2021-10-23"},{"lineNumber":1062,"author":{"gitId":"Woolicious98"},"content":"|module management|add module|`add \"\u003cmodule_code\u003e\"`|`add \"CS2113T\"`|","lastModifiedDate":"2021-10-23"},{"lineNumber":1063,"author":{"gitId":"3m0W33D"},"content":"|module management|update module |`update \u003cindex\u003e \"\u003cnew_module_code\u003e\"`|`update 1 \"CS2113\"`|","lastModifiedDate":"2021-10-24"},{"lineNumber":1064,"author":{"gitId":"Woolicious98"},"content":"|note|add note|`add \"\u003cnote_name\u003e\" \"\u003cnote_content\u003e\"`|`add \"Note1\" \"Hello world.\"`|","lastModifiedDate":"2021-11-07"},{"lineNumber":1065,"author":{"gitId":"Woolicious98"},"content":"|note|export notes|`export`|`export`|","lastModifiedDate":"2021-11-07"},{"lineNumber":1066,"author":{"gitId":"kelvneo"},"content":"|note|reload notes|`reload`|`reload`|","lastModifiedDate":"2021-11-03"},{"lineNumber":1067,"author":{"gitId":"Woolicious98"},"content":"|schedule|add schedule|`add \"\u003clink_description\u003e\" \"\u003cday\u003e\" \"\u003cstart_time\u003e\" \"\u003cduration\u003e\" \u003czoom_link\u003e\"`|`add \"CS2113T Tutorial 1\" \"Thursday\" \"10:00\" \"1\" \"https://zoom.us/test\"`|","lastModifiedDate":"2021-11-07"},{"lineNumber":1068,"author":{"gitId":"Woolicious98"},"content":"|question|add question|`add \"\u003cquestion\u003e\" \"\u003canswer\u003e\"`|`add \"What is 1+1?\" \"2\"`|","lastModifiedDate":"2021-10-23"},{"lineNumber":1069,"author":{"gitId":"Woolicious98"},"content":"|question|active learning|`test {question_count}`|`test`, `test 3`|","lastModifiedDate":"2021-11-07"},{"lineNumber":1070,"author":{"gitId":"Woolicious98"},"content":"|default|view timetable|`timetable {day}`|`timetable`, `timetable Thursday`|","lastModifiedDate":"2021-10-23"},{"lineNumber":1071,"author":{"gitId":"Woolicious98"},"content":"|**ALL** except module|delete item|`delete \u003cindex\u003e`|`delete 1`|","lastModifiedDate":"2021-10-23"},{"lineNumber":1072,"author":{"gitId":"Woolicious98"},"content":"|**ALL** except module|view item information|`view {index}`|`view`, `view 1`|","lastModifiedDate":"2021-10-23"},{"lineNumber":1073,"author":{"gitId":"Woolicious98"},"content":"|**ALL**|help|`help`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":1074,"author":{"gitId":"Woolicious98"},"content":"|**ALL** except default|go back to previous workspace|`back`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":1075,"author":{"gitId":"Woolicious98"},"content":"|**ALL**|exit the program|`exit`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":1076,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":1077,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-23"},{"lineNumber":1078,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"LouisLouis19":105,"kelvneo":335,"Woolicious98":525,"3m0W33D":79,"-":36}},{"path":"docs/team/3m0w33d.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"# Schuyler Tay - Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"## Overview","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"**TermiNUS** is a CLI (command line interface) program for NUS students who wish to consolidate their NUS academic needs such as schedules, questions and notes for the modules that they are taking. With TermiNUS, it aims to aid students and improve their learning experiences while studying in NUS.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"* **New Feature:** Added the ability to parse user commands to execute the required actions","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"  * What it does: Allows parsing of the user input so that the program knows what action to perform. The feature must also support multi-step commands and oneshot commands simutaneously.  ","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"  * Justification: Being able to parse multi-step commands and oneshot commands allows for catering to advance users as well as new users. The key functionality is that regardless of multi-step or oneshot, the user should be able perform the intended action accurately so that they manage their academic material better.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"  * Highlights: The challenge in this implementation, is ensuring that a single command parser can handle multiple styles of parsing, while ensuring the same functionality. Other addition constraints was that a switch statement would not suffice for a dynamic parsing system as the arguments could always differ. With all of these in consideration, we implmemented the parsing system using a HashMap instead. This however, brought about certain limitations such as having a Common Command class and arguments could not be initalized in the constructor of the specific Command.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    ","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"* **New Feature:** Added the ability to create, view, delete, and update modules.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"  * What it does: Allows the user to create, view, delete, and update  modules.  ","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"  * Justification: This feature provides the user with a way to categorizes all their academic material (Notes, Links, Questions) into different modules so that this helps them be more organized.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"  * Highlights: This features makes changes to the list of modules which are required to correctly access the academic material relating to that module. Careful consideration is required to ensure that any modifications to the list of modules must be kept in sync with the file system.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"* **New Feature:** Added the ability to access each module\u0027s workspace.  ","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"  * What it does: Allows the user to access a specific module workspace, to perform any actions to that module\u0027s academic material.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"  * Justification: This features enable the user to enter a specific module\u0027s workspace so that they are able make the required changes without affecting any other module\u0027s academic material.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"  * Highlights: The challenge with implementing this feature was in passing the module between the Command Parsers and Commands. The Command Parser has to active set the attribute to ensure that the Command it will be execute will know what is the current module\u0027s workspace. This was difficult to pass around as the original implementation of the Command and Command Parser did not cater for this.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"* **New Feature:** Added the ability to export notes as PDF.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"  * What it does: Allows the user to export the notes in a module\u0027s workspace into a PDF format.  ","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"  * Justification: This features provides users the capability to convert their existing notes to a PDF format so that can transfer their notes easily to other devices and view they in a collated manner.","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"  * Highlights: This features performs checks on notes to see if their is at least a single note and use IText PDF to create PDF files containing all the notes within the existing module\u0027s workspace.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"* **Code Contributed:** [RepoSense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d3m0\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026until\u003d2021-10-11\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003d3m0W33D\u0026tabRepo\u003dAY2122S1-CS2113T-T10-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026zFR\u003dfalse).    ","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"* **Documentation**","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"  * User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    * Add document for `update` command for modules: [#121](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/121)","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    * Add document for `export` command for modules: [#121](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/121)","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"  * Developer Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    * Contributed to sections Table of Content: [#103](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/103)","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    * Add details for Module, Content, Parser, Command and Architecture Components: ","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    [#103](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/103), [#104](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/104),","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    [#109](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/109), [#191](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/191)","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    * Add details for implementation workspace: [#115](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/115)","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    * Contributed to sections: User Stories and Non-functional dependencies: [#191](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/191)","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"* **Team-based Tasks**","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"  * Help improve code coverage: [#116](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/116), ","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"  [#118](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/118), [#144](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/144)","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"  * Contributed to Developer Guide UML Styling formatting: [#191](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/191)","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"  * Added OpenPDF as a library for export notes to PDF: [#200](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/200)","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"* **Beyond Project Team Tasks**","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"  * Reported bugs and offered suggestions for a team in PE-D: [PE-D Issues](https://github.com/3m0W33D/ped)","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"  * Reviewed other teams’ User Guide and Developer Guide.","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"3m0W33D":50}},{"path":"docs/team/kelvneo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"# Kelvin Neo - Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"**TermiNUS** is a CLI (command line interface) program for NUS students who wish to consolidate their NUS academic needs such as schedules, questions and notes for the modules that they are taking. With TermiNUS, it aims to aid students and improve their learning experiences while studying in NUS.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"- **New Feature:** Added `question` which is the ability to add, delete, list and test the user ","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"with questions.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"  - What it does: It provides the user a way of storing and managing their questions, as well as ","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"  running an Active Recall session to test themselves on their own knowledge.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"  - Justifications: `question` was built to allow users to test themselves using the techniques of ","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"  Active Recall, which aims to improve their knowledge and memory of the subject.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"  - Highlights: The `test` feature includes a timer that indicates how long the user took to answer ","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"  each question. The Active Recall portion will also tweak the frequency of the questions appearing ","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"  based on the feedback the user gives. For example, if the user deems the question as hard, the ","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"  question would appear more often, and if the user deems the question easy, the question would ","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"  appear less often.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"- **New Feature:** Added `TerminusLogger`","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"  - What it does: `TerminusLogger` wraps around `java.util.logging.Logger` and provides helper ","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"  methods that calls the internal `Logger` methods.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"  - Justifications: To provide a unified and simpler logging experience for the entire application, ","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"  `TerminusLogger` was created to prevent duplicate Logger initialization code. It also disables ","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"  logging to terminal, and logs only to a file by default.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"  - Highlights: It provides a wrapper function that can print the stack trace into the logger for ","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"  `WARNING` and `SEVERE` cases.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"- **New Feature:** Added `help` and `exit` command.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"  - What it does: `help` and `exit` commands are basic commands to enable the user to view the ","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"  commands in the current workspace and exit the program respectively.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"  - Justifications: `help` must print the commands that exist within the specific workspace to ","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"  prevent the user from being confused and running the commands in the wrong places. The `exit` ","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"  command is placed at every workspace to allow the user to quit any time, regardless of which ","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"  workspace they are in.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"- **New Feature:** Added `Terminus` and `Ui`","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"  - What it does: `Terminus` is the main class that runs the main loop of the entire application.","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    `Ui` class handles all input and output from the user.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"- **Code Contributed:** [RepoSense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dkelvneo\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dkelvneo\u0026tabRepo\u003dAY2122S1-CS2113T-T10-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"- **Documentation:**","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"  - README.md:","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    - Included short writeup on how TermiNUS works: [#107](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/107)","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    - Added badges on various DevOps: [#107](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/107)","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"  - User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    - Documented section on Questions: [#107](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/107)","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"    - Reorganized User Guide based on feedback from PE-D and tutor: [#189](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/189)","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"  - Developer Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    - Documented section on Questions: [#107](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/107)","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    - Documented section on Ui: [#133](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/133)","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"    - Documented sections on Documentation, Logging, Testing, and DevOps: [#184](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/184)","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    - Added acknowledgements and necessary headers for Developer Guide: [#184](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/184) ","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"- **Team-based Tasks**:","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"  - Tracked the deadlines and schedules of deliverables","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"  - Maintaining the issues and PR trackers","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"  - Increased code coverage: [#56](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/56), ","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"  [#68](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/68),","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"  [#84](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/84),","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"  [#102](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/102),","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"  [#117](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/117),","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"  [#186](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/186)","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"  - Added GSON as a library for main data storage: [#70](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/70)","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"- **Beyond Project Team Tasks:**","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"  - Reported bugs for another team in PE-D: [PE-D Issues](https://github.com/kelvneo/ped/issues)","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"  - Reviewed other teams\u0027 User Guide and Developer Guide.","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"- **Tools:**","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"  - Integrated [Codecov](https://codecov.io) for code coverage tracking: [#110](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/110)","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"kelvneo":62,"3m0W33D":1,"-":5}},{"path":"docs/team/louislouis19.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"# Louis - Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"## Overview","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"**TermiNUS** is a CLI (command line interface) program for NUS students who wish to consolidate their NUS academic needs such as schedules, questions and notes for the modules that they are taking. With TermiNUS, it aims to aid students and improve their learning experiences while studying in NUS.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"- New Feature: Implemented add, view, and delete functionalities in the Schedule workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"  - What it does: Allows users to add, view, and delete schedules in the schedule workspace.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"  - Justification: Users might want to keep track of their online meeting schedules, ","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"  view all their meeting schedules, and delete the meeting schedules that are no longer used.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"  - Highlights: The `add` feature only allows valid links to be added. ","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"  The add feature will also be integrated with the conflict manager feature by default. ","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"  Moreover, the functionalities in the Schedule workspace are integrated with the Timetable feature.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"- New Feature: Implemented the Timetable feature","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"  - What it does: Allows users to view their compiled and organized schedule in a timetable format.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"  - Justification: Users might want to conveniently organize, compile, and view their daily or weekly schedule.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"  - Highlights: Sorts all the schedules on a chronological order for user\u0027s ease of viewing.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"  Timetable is automatically synced and integrated with the schedule workspace.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"- New Feature: Implemented the Conflict Manager","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"  - What it does: Warns users for any conflicts in their schedules.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"  - Justification: Users might want to be reminded or made aware whenever they have conflicting schedules.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"  - Highlights: Gives rise to a warning message indicating the conflicting schedules whenever user adds a new conflicting schedule.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"  The conflict manager checks for all user\u0027s schedule, and by default is integrated to the Add Link Command.","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"- Code Contributed: [Reposense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dLouisLouis19\u0026tabRepo\u003dAY2122S1-CS2113T-T10-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"- Documentation:","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"  - User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    - Added documentation for CRUD functionalities of `schedule` and `note` workspace","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"    - Added documentation for the `timetable` feature","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    ","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"  - Developer Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    - Added implementation details of `Timetable` command","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    - Added implementation details of `ConflictManager`","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    - Added instructions for manual testing","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"- Team-based Tasks:","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"  - Fix bug on providing better error messages: [#172](https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/172), ","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"  [#175](https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/175)","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"  - Add JUnit Tests to improve coverage: [#65](https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/65)","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"- Beyond Project Team Tasks:","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"  - Conducted review and provide feedback for the User Guide and Developer Guide of the other teams.","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"  - Reported bugs and suggestions for other teams in the PE-D.","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"LouisLouis19":54,"3m0W33D":2}},{"path":"docs/team/woolicious98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"# Tan Juen Woo - Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"## Overview","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"**TermiNUS** is a CLI (command line interface) program for NUS students who wish to consolidate their NUS academic needs such as schedules, questions and notes for the modules that they are taking. With TermiNUS, it aims to aid students and improve their learning experiences while studying in NUS.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"- Enhancement Implemented","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"  - **New Feature:** Added the ability to add, delete, view and reload for Note related content.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"    - What it does: Allow user the user to add, delete, view and reload note.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"    - Justification: This is one of the main feature proposed by Terminus where user can manage their academic notes. Allowing users to manage their notes by using Terminus while studying. ","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"    - Highlights: The challenge in this implementation is to ensure that other content type could also use the same generic code. Due to note being the first content type in Terminus, there is a need to design the entire structure of how a content is being managed within Terminus.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"  - **New Feature:** Added a file storage system in Terminus.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    - What it does: Ensure data from Terminus are saved into their respective files / folders and ensure that they are loaded upon the next execution of Terminus.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    - Justification: User data in Terminus should be handled properly when saving, loading or deleting. ","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    - Highlights: The challenge is to anticipate any corner case in which a filesystem could fail when performing any file I/O operations. Such examples could be due to permission issues or missing file / folder. Further challenges are os dependencies issues where the file system of windows differs from the file system in Linux.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"  - **New Feature** Added the ability to filter data loaded from json.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    - What it does: Ensure that the data loaded from json follow the criteria of its content type.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    - Justification: Ensure Terminus can function as per normal and prevent any errors arose from loading that may crash Terminus.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"- Code Contributed: [RepoSense Link.](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dt10\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dWoolicious98\u0026tabRepo\u003dAY2122S1-CS2113T-T10-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"- Documentation:","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"  - User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    - Improved documentation for Installing Terminus. [#114](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/114)","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    - Added documentation for using this guide. [#114](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/114)","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    - Added documentation for each workspace and their overview. [#114](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/114)","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    - Added documentation for quick guide of TermiNUS. [#114](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/114)","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    - Added workspace command summary. [#114](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/114)","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    - Improved command summary. [#114](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/114)","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    - Contributed to overall structure. [#114](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/114)","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"  - Developer Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    - Added documentation for sections, Setting Up, Purpose and Product Scope. [#190](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/190)","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    - Added implementation details for sections, Storage, Adding Content and Deleting Content. [#190](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/190)","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    - Added component details for Storage Components. [#190](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/190)","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"- Team-based Tasks","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"  - Increased code coverage. [#143](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/143), [#79](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/79), [#82](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/82), [#123](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/123)","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"  - Synchronised languages in JavaDocs. [#89](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/89)","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"  - Overall documentation responsibilities. [#114](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/114), [#190](https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/190)","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"- Beyond Project Team Tasks","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"  - Reported bugs for another team in PE-D. [PE-D Issues](https://github.com/Woolicious98/ped/issues)","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"  - Reviewed other teams’ User Guide and Developer Guide.","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Woolicious98":43}},{"path":"docs/uml/ActiveRecallClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"!include ClassStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"TestCommand ..\u003e GameEnvironment","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"GameEnvironment -\u003e \"1\" Ui : \"ui\"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"Ui \u003c. GameEnvironment","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"GameEnvironment *--\u003e \"1\" QuestionGenerator : \"questionGenerator\"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"DifficultyModifier \u003c. GameEnvironment","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"QuestionGenerator -\u003e \"1..*\" Question : \"questionBank\"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"note top on link ","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"  questionBank is stored as","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"  a Map\u003cDouble, Question\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"  where Double is the weight","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"endnote","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"GameEnvironment ..\u003e  Question","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"class TestCommand COMMAND_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"  + execute(moduleManager: ModuleManager): void","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"class GameEnvironment ACTIVERECALL_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"  GameEnvironment(ui: Ui, generator: QuestionGenerator)","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"  + run(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"  - showPreGameInformation(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"  - promptQuestion(): Question","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"  - getUserFeedback(): int","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"  - updateQuestionDifficulty(question: Question, difficulty: int): void","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"  + {static} createNewEnvironment(questions: List\u003cQuestion\u003e, questionCount: int)","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"class QuestionGenerator ACTIVERECALL_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"  - random: Random","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"  - total: double","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"  - questionCount: int","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"  + QuestionGenerator(questionBank: List\u003cQuestion\u003e, questionCount: int)","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"  + QuestionGenerator(questionBank: List\u003cQuestion\u003e, questionCount: int, random: Random)","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"  + hasNext(): boolean","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"  + next(): Question","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"  + getQuestionPoolSize(): int","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"  - addQuestion(question: Question): void","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"class Question ACTIVERECALL_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"  - name","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"  - data","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"  - weight","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"  + Question(question: String, answer: String)","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"note bottom of Question","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"  The name and data represents","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"  question and answer respectively.","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"endnote","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"class Ui {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"  + printSection(strings: String...): void","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"  + getUserInput(prompt: String): String","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"  + {static} getInstance(): Ui","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"class DifficultyModifier ACTIVERECALL_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"  + {static} tweakEasyQuestionDifficulty(initial: double): double","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"  + {static} tweakHardQuestionDifficulty(initial: double): double","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"  - {static} getCurveValue(x: double): double","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":65,"Woolicious98":6}},{"path":"docs/uml/ActiveRecallSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"!include SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"box \"Commands\" #thistle","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"participant \":TestCommand\" as TestCommand #violet","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"box \"Ui\" #bisque","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"box \"Active Recall\" #lightblue","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"participant \":GameEnvironment\" as GameEnvironment #lightskyblue","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"participant \":QuestionGenerator\" as QuestionGenerator #lightskyblue","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"participant \":DifficultyModifier\" as DifficultyModifier #lightskyblue","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"participant \":Question\" as Question #lightskyblue","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"-\u003e TestCommand : execute(moduleManager)","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"activate TestCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"ref over TestCommand, GameEnvironment, QuestionGenerator : createGameEnvironment","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"TestCommand -\u003e GameEnvironment : run()","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"activate GameEnvironment","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"  GameEnvironment -\u003e GameEnvironment : showPreGameInformation()","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"  activate GameEnvironment ","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"  return","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"  loop questionGenerator.hasNext()","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    ref over Ui, GameEnvironment, QuestionGenerator : showQuestion","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    ref over Ui, GameEnvironment : getUserFeedback","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    break difficulty \u003d\u003d EXIT_CODE","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"      note across: Breaks the loop and returns to TestCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    end","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    ref over GameEnvironment, DifficultyModifier, Question : updateQuestionDifficulty","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    |||","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"  end","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"  destroy QuestionGenerator","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"return","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"return CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"destroy GameEnvironment","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":40,"Woolicious98":2,"3m0W33D":1}},{"path":"docs/uml/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"!include SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"skinparam actorStyle awesome","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"actor User as user","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"package UI UI_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"package Terminus TERMINUS_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"package Parser PARSER_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"package Command COMMAND_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"package Module MODULE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"package Content CONTENT_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"package ActiveRecall ACTIVERECALL_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"package Storage STORAGE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"file data [","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"  \u003csize:100\u003e\u003c\u0026document\u003e\u003c/size\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"]","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"user -\u003e UI","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"Terminus ..\u003e UI","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"Terminus ..\u003e Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"Terminus ..\u003e Command","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"Parser ..\u003e Command","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"Content \u003c.r. Module","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"Command ..\u003e Module","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"ActiveRecall ...\u003e UI","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"Command ..\u003e ActiveRecall","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"Terminus ..\u003e Storage","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"ActiveRecall ..\u003e Module","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"Storage ..\u003e Command","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"Storage ..\u003e Module","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"Storage -\u003e data","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"Terminus ..\u003e Module","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"3m0W33D":33}},{"path":"docs/uml/ClassStyle.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"!define MODULE_COLOR #lightsalmon","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"!define CONTENT_COLOR #gold","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"!define TERMINUS_COLOR #white","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"!define PARSER_COLOR #palegreen","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"!define STORAGE_COLOR #mistyrose","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"!define ACTIVERECALL_COLOR #lightskyblue","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"!define COMMAND_COLOR #violet","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"hide circle","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"3m0W33D":13}},{"path":"docs/uml/CommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"!include ClassStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"!includesub Module.puml!MODULEMANAGER","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"!includesub ParserClassDiagram.puml!COMMANDPARSER","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"!startsub COMMAND","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"abstract class \"{abstract}\\nCommand\" as Command COMMAND_COLOR {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"  # arguments: String","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"  - moduleName: String","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"  + {abstract} getFormat(): String","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"  + {abstract} getHelpMessage(): String","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"  + parseArguments(arguments: String): void","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"  + {abstract} execute(moduleManager: ModuleManager): CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"!endsub","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"class XYZCommand COMMAND_COLOR {","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"  + execute(moduleManager: ModuleManager): CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"  + getHelpMessage(): String","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"  + getFormat(): String","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"class CommandResult COMMAND_COLOR {","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"  # newCommandParser: CommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"  # hasChange: boolean","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"  # isExit: boolean","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"  # message: String[]","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"  # storageAction: StorageActionEnum","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"  # storageType: StorageTypeEnum","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"  # module: String","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"  + isExit(): boolean","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"  + getNewCommandParser(): CommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"  + getMessage(): String[]","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"  + getStorageAction(): StorageActionEnum","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"  + getStorageType(): StorageTypeEnum","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"Command ..\u003e \"1\" CommandResult: returns \u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"Command ..\u003e \"1\" ModuleManager: modifies","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"CommandResult ..\u003e \"0..1\" CommandParser: contains \u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"CommandParser -\u003e \"2..*\" Command: has \u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"XYZCommand --|\u003e Command","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"3m0W33D":46}},{"path":"docs/uml/CommandDetailedClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"!include ClassStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"!includesub CommandClassDiagram.puml!COMMAND","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"abstract class  \"{abstract}\\nWorkspaceCommand\" as WorkspaceCommand COMMAND_COLOR extends Command  {","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"# commandMap: CommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"+ WorkSpaceCommand(commandMap: CommandParser)","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"+ execute(ui: Ui, moduleManager: ModuleManager): CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"abstract class \"{abstract}\\nInnerModuleCommand\" as InnerModuleCommand COMMAND_COLOR extends WorkspaceCommand {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"- commandMap: InnerModuleCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"+ InnerModuleCommand(commandMap: InnerModuleCommandParser)","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"+ execute(ui: Ui, moduleManager: ModuleManager): CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"class GoCommand COMMAND_COLOR extends WorkspaceCommand {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"- moduleName: String","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"+ parseArguments(arguments: String): void","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"+ execute(ui: Ui, moduleManager: ModuleManager): CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"class ModuleCommand COMMAND_COLOR extends WorkspaceCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"class NotesCommand COMMAND_COLOR extends InnerModuleCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"class ScheduleCommand COMMAND_COLOR extends InnerModuleCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"class QuestionCommand COMMAND_COLOR extends InnerModuleCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"class XYZCommand COMMAND_COLOR extends Command","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"3m0W33D":29}},{"path":"docs/uml/CommandExecution.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"!include SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"box \"Main\" TERMINUS_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"participant \":Terminus\" as Terminus TERMINUS_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"box \"Parser\" PARSER_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"participant \":MainCommandParser\" as MainCommandParser PARSER_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"participant \":NoteCommandParser\" as NoteCommandParser PARSER_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"participant \":ModuleWorkspaceCommandParser\" as ModuleWorkspaceCommandParser PARSER_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"box \"Command\" COMMAND_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"participant \":GoCommand\" as GoCommand COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"participant \":NoteCommand\" as NoteCommand COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"participant \":AddNoteCommand\" as AddNoteCommand COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"participant \":CommandResult\" as CommandResult COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"box \"Module\" MODULE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"participant  \":ModuleManager\" as ModuleManger MODULE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"autoactivate on","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"Terminus -\u003e MainCommandParser: parseCommand(command)","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"  MainCommandParser -\u003e GoCommand: parseArguments(arguments)","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"  return","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"return GoCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"Terminus -\u003e GoCommand: execute(moduleManager)","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"ref over NoteCommandParser, ModuleManger:Go Execution","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"return CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"3m0W33D":30}},{"path":"docs/uml/ConflictManagerSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"!include SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"box Command COMMAND_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"participant \":AddLinkCommand\" as AddLinkCommand COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"box Content CONTENT_BOX_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"participant \":ConflictManager\" as ConflictManager CONTENT_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"participant \":ContentManager\" as ContentManager CONTENT_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"participant \":Link\" as Link CONTENT_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"box Module MODULE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"participant \":ModuleManager\" as ModuleManager MODULE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"participant \":NusModule\" as NusModule MODULE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"autoactivate on","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"activate AddLinkCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"create ConflictManager","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"AddLinkCommand -\u003e ConflictManager: ConflictManager(moduleManager, newLink)","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"return","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"AddLinkCommand -\u003e ConflictManager: getConflictingSchedule()","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"  ConflictManager -\u003e ConflictManager: getAllLinks()","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"    ConflictManager -\u003e ModuleManager: getAllModules()","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    return modules","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    loop For each NusModule in modules","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"      ConflictManager -\u003e ModuleManager: getModule(NusModule)","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"      return NusModule","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"     ConflictManager-\u003e NusModule : getContentManager()","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"     return ContentManager","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"      ConflictManager -\u003e ContentManager: getContents()","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"      return Links","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    end","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    return Links","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    loop For each Link in Links","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        opt same day \u0026\u0026 overlapping start-time to end-time","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"          ConflictManager -\u003e Link :getViewDescription()","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"          return description","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"        end","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"    end","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"return conflictingSchedule","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"destroy ConflictManager","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"LouisLouis19":15,"kelvneo":6,"Woolicious98":11,"3m0W33D":20}},{"path":"docs/uml/Content.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"!include ClassStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"Content \u003c|-- Note","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"Content \u003c|-- Link","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"Content \u003c|-- Question","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"ContentManager  --\u003e \"*\" Content : contents","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"ContentManager ..\u003e  Note","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"ContentManager ..\u003e  Link","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"ContentManager ..\u003e Question","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"!startsub CONTENTMANAGER","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"class ContentManager \u003cT extends Content\u003e CONTENT_COLOR {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"  + add(content: T): void","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"  + deleteContent(contentNumber: int): String","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"  + getContentData(contentNumber: int): String","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"  + getContents(contents: ArrayList\u003cT\u003e ): String","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"  + getTotalContents() : int","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"  + listAllContents(): String","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"  + setContent(contents: ArrayList\u003cT\u003e ): void","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"!endsub","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"class \"{abstract}\\nContent\" as Content CONTENT_COLOR {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"  # name: String","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"  # data: String","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"class Link CONTENT_COLOR {","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"  - day: String","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"  - startTime: LocalTime","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"  - link: String","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"  + Link(name: String, day: String, startTime: LocalTime, link: String)","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"class Note CONTENT_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"class Question CONTENT_COLOR {","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"   - weight: double","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"   + Question(question: String, answer: String)","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"3m0W33D":44}},{"path":"docs/uml/GoCommandExecution.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"!include SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"box \"Command\" COMMAND_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"participant \":GoCommand\" as GoCommand COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"participant \":NoteCommand\" as NoteCommand COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"participant \":AddNoteCommand\" as AddNoteCommand COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"participant \":CommandResult\" as CommandResult COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"box \"Parser\" PARSER_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"participant \":NoteCommandParser\" as NoteCommandParser PARSER_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"participant \":ModuleWorkspaceCommandParser\" as ModuleWorkspaceCommandParser PARSER_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"box \"Module\" MODULE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"participant  \":ModuleManager\" as ModuleManger MODULE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"autoactivate on","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"mainframe sd Go Execution","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"-\u003e GoCommand:execute(moduleManager)","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"  GoCommand -\u003e ModuleManger: getModule(moduleName)","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"  return NusModule","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"  GoCommand -\u003e ModuleWorkspaceCommandParser: setWorkspace(workspace)","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"  return","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"  alt if arguments !\u003d null","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"      GoCommand -\u003e ModuleWorkspaceCommandParser:parseCommand(command)","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"      return NoteCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"      GoCommand -\u003e NoteCommand : execute(moduleManager)","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"      ref over NoteCommand, NoteCommandParser: Note Execution","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"      return CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"      else else","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        Create CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        GoCommand -\u003e CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        return CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"      end","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"return CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"3m0W33D":39}},{"path":"docs/uml/MainExit.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"!include SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"box \"Main\" TERMINUS_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"participant \":Terminus\" as Terminus TERMINUS_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"box \"Storage\" STORAGE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"participant \":StorageManager\" as StorageManager STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"autoactivate on","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"mainframe sd Exit","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":" -\u003e Terminus: exit()","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"  Terminus -\u003e StorageManager:setDisabled(false)","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"  return","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"  Terminus -\u003e StorageManager:save(moduleManager);","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"  return","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":" return","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"3m0W33D":23}},{"path":"docs/uml/MainInit.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"!include SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"box \"Main\" TERMINUS_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"participant \":Terminus\" as Terminus TERMINUS_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"box \"Storage\" STORAGE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"participant \":StorageManager\" as StorageManager STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"box \"Module\" MODULE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"participant \":ModuleManager\" as ModuleManager MODULE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"autoactivate on","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"mainframe sd Intialization","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":" -\u003e Terminus: initialize()","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    create StorageManager","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    Terminus -\u003e StorageManager : StorageManager(DATA_DIRECTORY, MAIN_JSON)","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    return StorageManager","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    Terminus -\u003e StorageManager: initialize()","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    return ModuleManager","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    opt moduleManager \u003d\u003d null","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"      create ModuleManager","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"      Terminus -\u003e ModuleManager: ModuleManager()","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"      return ModuleManager","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    end","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"  return","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"3m0W33D":32}},{"path":"docs/uml/MainLogic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"!include SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"box \"Main\" TERMINUS_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"participant \":Terminus\" as Terminus TERMINUS_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"box \"UI\" UI_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"box \"Parser\" PARSER_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"participant \":CommandParser\" as CommandParser PARSER_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"box \"Command\" COMMAND_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"participant \":Command\" as Command COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"participant \":CommandResult\" as CommandResult COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"box \"Storage\" STORAGE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"participant \":StorageManager\" as StorageManager STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"autoactivate on","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"-\u003e Terminus: start()","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"Terminus -\u003e Terminus: initialize()","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"ref over Terminus,CommandParser: Initialization","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"return","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"  Terminus -\u003e Terminus : runCommandsUntilExit()","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    loop True","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    ref over Terminus, StorageManager: Loop Logic","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    end","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    return","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        Terminus -\u003e Terminus :exit()","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        ref over Terminus,StorageManager: Exit","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        return","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    return","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"destroy Terminus","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"destroy Ui","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"destroy CommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"destroy Command","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"destroy StorageManager","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"3m0W33D":40}},{"path":"docs/uml/Module.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"!include ClassStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"NusModule -\u003e \"1\" ContentManager: noteManager","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"NusModule -\u003e \"1\" ContentManager: linkManager","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"NusModule -\u003e \"1\" ContentManager: questionManager","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"ModuleManager  --\u003e \"*\" NusModule :  has \u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"!startsub MODULEMANAGER","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"class ModuleManager MODULE_COLOR {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"  + getAllModules(): String []","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"  + getModule(moduleName: String): NusModule","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"  + removeModule(moduleName: String): void","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"  + setModule(moduleName: String): void","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"!endsub","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"class NusModule MODULE_COLOR {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"  + getContentManager (type: Class\u003cT\u003e): ContentManager\u003cT\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":" !includesub Content.puml!CONTENTMANAGER","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"3m0W33D":26}},{"path":"docs/uml/NoteCommandExecution.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"!include SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"box \"Command\" COMMAND_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"participant \":NoteCommand\" as NoteCommand COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"participant \":AddNoteCommand\" as AddNoteCommand COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"participant \":CommandResult\" as CommandResult COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"box \"Parser\" PARSER_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"participant \":NoteCommandParser\" as NoteCommandParser PARSER_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"autoactivate on","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"mainframe sd Note Execution","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"-\u003e NoteCommand:execute(moduleManager)","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"  alt if arguments !\u003d null","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    NoteCommand -\u003e NoteCommandParser: setModule(moduleName)","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    return","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    NoteCommand -\u003e NoteCommandParser: parseCommand(arguments)","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    return AddNoteCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    NoteCommand -\u003e AddNoteCommand: setModule(moduleName)","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    return","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    NoteCommand -\u003e AddNoteCommand: execute(moduleManager)","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"      create CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"      AddNoteCommand -\u003e CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    return CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"  return CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"  else else","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    create CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    NoteCommand -\u003e CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    return CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"  end","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"return CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"3m0W33D":35}},{"path":"docs/uml/ParserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"!include ClassStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"!includesub CommandClassDiagram.puml!COMMAND","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"!startsub COMMANDPARSER","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"abstract class \"{abstract}\\nCommandParser\" as CommandParser PARSER_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":" - workplace: String","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":" + CommandParser(workspace: String)","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":" + {abstract} parseCommand(command: String): Command","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":" + getHelpMenu(): String[]","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"!endsub","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"class XYZCommandParser PARSER_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"- commandParser: XYZCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"+ parseCommand(command: String): Command","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"+ {static} getInstance(): XYZCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"class Terminus TERMINUS_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"CommandParser --\u003e \"2..*\" Command: has \u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"Terminus -\u003e \"0..1\" CommandParser: commandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"XYZCommandParser --|\u003e  CommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"3m0W33D":26}},{"path":"docs/uml/ParserDetailedClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"!include ClassStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"!includesub ParserClassDiagram.puml!COMMANDPARSER","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"abstract class \"{abstract}\\nInnerModuleCommandParser\" as InnerModuleCommandParser PARSER_COLOR extends CommandParser {","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"-moduleName: String","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"+parseCommand(command: String): Command","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":" }","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"class QuestionCommandParser PARSER_COLOR extends InnerModuleCommandParser {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"- {static} parser: QuestionCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"+{static}getInstance(): QuestionCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"class LinkCommandParser PARSER_COLOR extends InnerModuleCommandParser {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"- {static} parser: LinkCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"+{static}getInstance(): LinkCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"class NoteCommandParser PARSER_COLOR extends InnerModuleCommandParser {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"- {static} parser: NoteCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"+{static}getInstance(): NoteCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"class XYZCommandParser PARSER_COLOR extends CommandParser {","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"- {static} parser: XYZCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"+{static}getInstance(): XYZCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"3m0W33D":27}},{"path":"docs/uml/SequenceStyle.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"!define MODULE_COLOR #lightsalmon","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"!define CONTENT_COLOR #gold","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"!define TERMINUS_COLOR #white","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"!define PARSER_COLOR #palegreen","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"!define STORAGE_COLOR #mistyrose","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"!define ACTIVERECALL_COLOR #lightskyblue","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"!define COMMAND_COLOR #violet","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"!define MODULE_BOX_COLOR #coral","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"!define CONTENT_BOX_COLOR #goldenrod","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"!define TERMINUS_BOX_COLOR #whitesmoke","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"!define PARSER_BOX_COLOR #aquamarine","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"!define STORAGE_BOX_COLOR #lightpink","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"!define ACTIVERECALL_BOX_COLOR #lightblue","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"!define UI_BOX_COLOR #bisque","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"!define COMMAND_BOX_COLOR #thistle","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"hide footbox","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"skinparam sequenceMessageAlign center","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"skinparam SequenceGroupBodyBackGroundColor ffffff90","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"3m0W33D":25}},{"path":"docs/uml/Terminus.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"!include SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"box \"Main\" TERMINUS_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"participant \":Terminus\" as Terminus TERMINUS_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"box \"UI\" UI_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"box \"Parser\" PARSER_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"participant \":CommandParser\" as CommandParser PARSER_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"autoactivate on","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"-\u003e Terminus: Terminus()","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"  create Ui","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"  Terminus-\u003e Ui:getInstance()","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"  return Ui;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"  create CommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"  Terminus -\u003e CommandParser:getInstance()","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"  return MainCommandParser;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"return","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"3m0W33D":23}},{"path":"docs/uml/TimetableGetDailySchedule.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"!include SequenceStyle.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"mainframe sd getDailySchedule","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"box Content CONTENT_BOX_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"participant \":Timetable\" as Timetable CONTENT_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"participant \":Link\" as Link CONTENT_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"endbox","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"box Module MODULE_BOX_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"participant \":ModuleManager\" as ModuleManager MODULE_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"participant \":NusModule\" as NusModule MODULE_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"endbox","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"autoactivate on","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":" -\u003e Timetable: getDailySchedule()","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"Timetable -\u003e ModuleManager: getAllModules()","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"return modules","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"loop For each NusModule in modules","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    Timetable -\u003e ModuleManager: getModule(NusModule)","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    return NusModule","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    Timetable -\u003e NusModule : getContentManager()","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    return ContentManager","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    Timetable -\u003e Timetable: listDailySchedule(contentManager, today)","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    return Links","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"loop For each schedule in dailySchedule","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"  Timetable -\u003e Link: getViewDescription()","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"  return description","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"return dailySchedule","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"LouisLouis19":24,"3m0W33D":17}},{"path":"docs/uml/TimetableSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"!include SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"box Command COMMAND_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"participant \":TimetableCommand\" as TimetableCommand COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"box Module MODULE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"participant \":ModuleManager\" as ModuleManager MODULE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"participant \":NusModule\" as NusModule MODULE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"box Content CONTENT_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"participant \":Timetable\" as Timetable  CONTENT_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"participant \":ContentManager\" as ContentManager CONTENT_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"participant \":Link\" as Link CONTENT_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"activate TimetableCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"create Timetable","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"TimetableCommand -\u003e Timetable: Timetable(moduleManager)","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"Activate Timetable","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"Timetable --\u003e TimetableCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"Deactivate Timetable","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"alt isStringNullOrEmpty(day)","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"TimetableCommand -\u003e Timetable: getWeeklySchedule()","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"Activate Timetable","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"loop For each day in DaysOfWeekEnum","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"ref over TimetableCommand, Timetable, ModuleManager, NusModule, ContentManager, Link: getDailySchedule","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"end","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"Timetable --\u003e TimetableCommand: weeklyScehdule","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"Deactivate Timetable","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"else else","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"ref over TimetableCommand, Timetable, ModuleManager, NusModule, ContentManager","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"getDailySchedule","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"end","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"end","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"LouisLouis19":31,"Woolicious98":16,"3m0W33D":2}},{"path":"docs/uml/UIClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"!include ClassStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"class Terminus TERMINUS_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"  - moduleStorage: ModuleStorage","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"  + {static} main(args: String[]): void","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"  + run(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"  - start(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"  - runCommandsUntilExit(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"  - handleIoException(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"  - exit(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"class Ui {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"  - {static} UI: ui","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"  - scanner: Scanner","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"  + {static} getInstance(): Ui","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"  - Ui()","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"  + Ui(in: InputStream)","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"  + printParserBanner(parser: CommandParser, moduleManager: ModuleManager): void","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"  + requestCommand(workspaceName: String): String","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"  + printSection(strings: String[]): void","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"  + printExitMessage(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"  + getUserInput(prompt: String): String","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"class GameEnvironment ACTIVERECALL_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"  - questionGenerator: QuestionGenerator","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"  + {static} createNewEnvironment(questions: List\u003cQuestion\u003e, questionCount: int)","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"  GameEnvironment(ui: Ui, generator: QuestionGenerator)","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"  + run(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"  - showPreGameInformation(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"  - promptQuestion(): Question","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"  - getUserFeedback(): int","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"  - updateQuestionDifficulty(question: Question: difficulty: int): void","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"Terminus -\u003e \"1\" Ui","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"Ui \"1\" \u003c-- GameEnvironment","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kelvneo":40,"Woolicious98":3}},{"path":"docs/uml/activerecall/ActiveRecallCreateEnvironmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"@startuml","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"!include ../SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"mainframe sd createGameEnvironment","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"box \"Commands\" #thistle","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"participant \":TestCommand\" as TestCommand #violet","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"box \"Ui\" #bisque","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"box \"Active Recall\" #lightblue","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"participant \":GameEnvironment\" as GameEnvironment #lightskyblue","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"participant \":QuestionGenerator\" as QuestionGenerator #lightskyblue","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"-\u003e TestCommand : execute(moduleManager)","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"activate TestCommand","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"TestCommand -\u003e GameEnvironment : createNewEnvironment(questions, count)","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"activate GameEnvironment","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"  GameEnvironment -\u003e Ui : getInstance()","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"  activate Ui","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"  return ui","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"  create QuestionGenerator","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"  GameEnvironment -\u003e QuestionGenerator : new QuestionGenerator(questions, count)","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"  activate QuestionGenerator","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"  return QuestionGenerator","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"return GameEnvironment","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"@enduml","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"kelvneo":30,"Woolicious98":2}},{"path":"docs/uml/activerecall/ActiveRecallGetFeedbackSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"@startuml","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"!include ../SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"mainframe sd getUserFeedback","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"box \"Commands\" #thistle","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"box \"Ui\" #bisque","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"box \"Active Recall\" #lightblue","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"participant \":GameEnvironment\" as GameEnvironment #lightskyblue","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"activate GameEnvironment","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"GameEnvironment -\u003e GameEnvironment : getUserFeedback()","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"activate GameEnvironment","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"  loop difficulty \u003d\u003d INVALID_DIFFICULTY","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"  GameEnvironment -\u003e Ui : getUserInput()","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"  activate Ui","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"  return input","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"  end","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"return difficulty","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"@enduml","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"kelvneo":23,"Woolicious98":2}},{"path":"docs/uml/activerecall/ActiveRecallShowQuestionSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"@startuml","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"!include ../SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"mainframe sd showQuestion","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"box \"Commands\" #thistle","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"box \"Ui\" #bisque","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"box \"Active Recall\" #lightblue","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"participant \":GameEnvironment\" as GameEnvironment #lightskyblue","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"participant \":QuestionGenerator\" as QuestionGenerator #lightskyblue","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"activate GameEnvironment","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"GameEnvironment -\u003e GameEnvironment : promptQuestion()","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    activate GameEnvironment","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"      GameEnvironment -\u003e QuestionGenerator : next()","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"      activate QuestionGenerator ","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"      return question","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"      GameEnvironment -\u003e Ui : printSection(question.getQuestion())","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"      activate Ui","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"      return","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"      GameEnvironment -\u003e Ui : getUserInput()","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"      note right: Wait for user to press Enter key to reveal answer.","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"      activate Ui","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"      return","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"      GameEnvironment -\u003e Ui : printSection(question.getAnswer())","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"      activate Ui","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"      return","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    return question","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"@enduml","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"kelvneo":32,"Woolicious98":2}},{"path":"docs/uml/activerecall/ActiveRecallUpdateQuestionDifficultySequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"@startuml","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"!include ../SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"mainframe sd updateQuestionDifficulty","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"box \"Commands\" #thistle","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"box \"Active Recall\" #lightblue","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"participant \":GameEnvironment\" as GameEnvironment #lightskyblue","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"participant \":DifficultyModifier\" as DifficultyModifier #lightskyblue","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"participant \":Question\" as Question #lightskyblue","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"activate GameEnvironment","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"GameEnvironment -\u003e GameEnvironment : updateQuestionDifficulty(question, difficulty)","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"activate GameEnvironment ","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"  alt difficulty \u003d\u003d EASY_DIFFICULTY","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    GameEnvironment -\u003e DifficultyModifier : tweakEasyQuestionDifficulty(weight)","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    activate DifficultyModifier ","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    return newWeight","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    GameEnvironment -\u003e Question : setWeight(newWeight)","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    activate Question","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    return","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"  else difficulty \u003d\u003d HARD_DIFFICULTY","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    GameEnvironment -\u003e DifficultyModifier : tweakHardQuestionDifficulty(weight)","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    activate DifficultyModifier ","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    return newWeight","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    GameEnvironment -\u003e Question : setWeight(newWeight)","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    activate Question","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    return","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"  end","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"return","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"@enduml","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"kelvneo":35,"Woolicious98":1}},{"path":"docs/uml/content/AddingContentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"!include ../SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"box Command COMMAND_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"participant \":AddNoteCommand\" as AddNoteCommand COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"box Content CONTENT_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"participant \":ContentManager\" as ContentManager CONTENT_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"participant \":Note\" as Note CONTENT_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"-\u003e AddNoteCommand : execute()","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"activate AddNoteCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"create Note","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"AddNoteCommand -\u003e Note : Note()","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"activate Note","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"AddNoteCommand -\u003e ContentManager : add(note)","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"activate ContentManager","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"note right : Add the new Note into \\nthe arraylist of Note \\nin ContentManager.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"return commandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"kelvneo":2,"Woolicious98":25}},{"path":"docs/uml/content/DeletingContentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"!include ../SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"box Command COMMAND_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"participant \":DeleteCommand\" as DeleteCommand COMMAND_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"box Content CONTENT_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"participant \":ContentManager\" as ContentManager CONTENT_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"participant \":Content\" as Content CONTENT_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"-\u003e DeleteCommand : execute()","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"activate DeleteCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"DeleteCommand -\u003e ContentManager : deleteContent(contentNumber)","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"activate ContentManager","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"ContentManager -\u003e ContentManager : isNotValidNumber(contentNumber)","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"activate ContentManager","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"note left : Invalid contentNumber: \\ncontentNumber \u003c 1 and \\ncontentNumber \u003e the size of arraylist","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"alt contentNumber is not valid","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"ContentManager --\u003e DeleteCommand : InvalidArgumentException()","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"else else","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"ContentManager -\u003e Content : getName()","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"activate Content","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"note left : Remove the Content from \\nthe arraylist of Content \\nin ContentManager.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"destroy Content","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"end","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"return deletedContentName","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"return commandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"kelvneo":4,"Woolicious98":32}},{"path":"docs/uml/loopLogic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"!include SequenceStyle.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"box \"Main\" TERMINUS_BOX_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"participant \":Terminus\" as Terminus TERMINUS_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"box \"UI\" UI_BOX_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"box \"Parser\" PARSER_BOX_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"participant \":CommandParser\" as CommandParser PARSER_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"box \"Command\" COMMAND_BOX_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"participant \":Command\" as Command COMMAND_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"participant \":CommandResult\" as CommandResult COMMAND_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"box \"Storage\" STORAGE_BOX_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"participant \":StorageManager\" as StorageManager STORAGE_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"endbox","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"autoactivate on","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"mainframe sd Loop Logic","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"activate Terminus","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"Terminus -\u003e Ui : requestCommand ()","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"return String","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"Terminus -\u003e Terminus: handleUserInput(input)","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"  Terminus -\u003e CommandParser: parseCommand(input)","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"  return Command","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"  Terminus -\u003e Command : execute(moduleManager)","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"  create CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"  Command -\u003e CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"  return CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"return CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"return CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"break commandResult.isExit() \u003d\u003d true","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"  note over Terminus, CommandResult : Breaks out of loop and Returns runCommandsUntilExit()","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"Terminus -\u003e Terminus: handleCommandResult(commandResult)","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"  alt commandResult.getNewCommandParser() !\u003d null","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    Terminus -\u003e CommandResult: getNewCommandParser()","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    return CommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    Terminus -\u003e Ui:printParserBanner(parser, moduleManager)","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    return","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"  else else","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    Terminus -\u003e Ui:printSection(commandResult.getMessage())","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    return","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"  end","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"return","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"Terminus -\u003e Terminus: handleStorage(commandResult)","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"  opt commandResult.hasChange() \u003d\u003d true","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    Terminus -\u003e StorageManager: executeCommandResult(moduleManager, commandResult)","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    return","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"  end","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"  Terminus -\u003e StorageManager: updateMainJsonFile(moduleManager)","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"  return","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"return","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"destroy CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"3m0W33D":58}},{"path":"docs/uml/storage/Storage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"!include ../ClassStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"\u0027abstract class DGS","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"\u0027abstract AbstractCollection","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"\u0027interface List","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"\u0027interface Collection","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"\u0027","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"\u0027List \u003c|-- AbstractList","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"\u0027Collection -- AbstractCollection","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"\u0027","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"\u0027Collection \u003c|- List","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"\u0027AbstractCollection \u003c|- AbstractList","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"\u0027AbstractList \u003c|-- ArrayList","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"StorageManager --\u003e \"1\" NoteStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"StorageManager --\u003e \"1\" PdfStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"StorageManager --\u003e \"1\" JsonStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"StorageManager --\u003e \"1\" FolderStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"FilterManager \u003c.. StorageManager : \"filters \\n ModuleManager \u003c\"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"NoteStorage --|\u003e Storage","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"PdfStorage --|\u003e Storage","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"JsonStorage --|\u003e Storage","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"FolderStorage --|\u003e Storage","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"class StorageManager STORAGE_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"  - isDisabled : Boolean","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"  - baseDirectory : Path","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"  + StorageManager(baseDirectory: Path, mainJsonFileName: String )","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"  + executeCommandResult(moduleManager: ModuleManager, result: CommandResult) : void","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"  + updateMainJsonFile(moduleManager: ModuleManager) : void","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"  + initialize() : ModuleManager","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"  + save() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"class NoteStorage STORAGE_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"  + execute() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"  # createNoteFile() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"  # loadNoteIntoModuleManager() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"  # saveAllNotes() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"class PdfStorage STORAGE_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"  + execute() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"  # exportModuleNotes() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"class JsonStorage STORAGE_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"  + execute() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"  + loadJson() : ModuleManager","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"  # createJson() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"  # saveJson() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"class FolderStorage STORAGE_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"  + execute() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"  # createModuleFolder() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"  # deleteModuleFolder() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"  # renameModuleFolder() : void","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"class Storage STORAGE_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":" + createFolder(folderPath: Path) : void","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":" + createFile(filePath: Path) : void","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":" + readFile(filePath: Path) : String","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":" + writeFile(filePath: Path, data: String): void","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":" + delete(filePath: Path) : void","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":" + getListOfFiles(folderPath: Path) : File[]","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":" + renameFolder(oldPath: Path, newPath: Path) : void","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":" + getBufferedReader(filePath: Path) : void","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":" + getFileType(file: File) : String","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":" + getAppendPath(corePath: Path, path: String) : Path","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":" # cleanAllFilesInclusive(filePath: Path) : void","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"class FilterManager STORAGE_COLOR{","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"  + filter(moduleManager: ModuleManager) : void","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"  # filterLink(linkContentManager: ContentManager\u003cLink\u003e) : void","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"  # filterQuestion(questionContentManager: ContentManager\u003cQuestion\u003e) : void","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"  + {static} isQuestionValid(question: Question) : Boolean","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"  + {static} isScheduleValid(link: Link) : Boolean","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"  + {static} isModuleValid(module: String) : Boolean","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"note \"The input parameters in all functions \\nfor \u003cType\u003eStorage has been left out \\nto make this diagram more compact.\" as note1","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":20,"Woolicious98":74}},{"path":"docs/uml/storage/StorageCommandResultSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"!include ../SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"box Main TERMINUS_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"participant \":Terminus\" as Terminus TERMINUS_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"box Storage STORAGE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"participant \":StorageManager\" as StorageManager STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"participant \":JsonStorage\" as JsonStorage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"participant \":PdfStorage\" as PdfStorage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"participant \":FolderStorage\" as FolderStorage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"participant \":NoteStorage\" as NoteStorage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"activate Terminus","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"opt CommandResult has data change","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"Terminus -\u003e StorageManager : executeCommandResult(moduleManager, commandResult)","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"activate StorageManager","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"StorageManager -\u003e StorageManager : execute()","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"activate StorageManager","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"note right : execute() takes in the following arguments \\n\\nmoduleManager : ModuleManager \\naffectedModule : String \\ndeletedItemName : String \\nstorageAction : StorageActionEnum \\nstorageType : StorageTypeEnum","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"alt StorageTypeEnum \u003d\u003d JSON","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"StorageManager -\u003e JsonStorage : execute(moduleManager, storageAction)","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"activate JsonStorage","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"else PDF","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"StorageManager -\u003e PdfStorage : execute(affectedModule, deletedItemName, storageAction)","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"activate PdfStorage","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"else FOLDER","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"StorageManager -\u003e FolderStorage : execute(affectedModule, deletedItemName, storageAction)","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"activate FolderStorage","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"else NOTE","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"StorageManager -\u003e NoteStorage : execute(moduleManager, affectedModule, deletedItemName, storageAction)","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"activate NoteStorage","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"end","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"end","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"kelvneo":1,"Woolicious98":49}},{"path":"docs/uml/storage/StorageInitializeSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"!include ../SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"box Main TERMINUS_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"participant \":Terminus\" as Terminus TERMINUS_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"box Storage STORAGE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"participant \":StorageManager\" as StorageManager STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"participant \":JsonStorage\" as JsonStorage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"participant \":NoteStorage\" as NoteStorage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"participant \":PdfStorage\" as PdfStorage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"participant \":FolderStorage\" as FolderStorage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"-\u003e Terminus : initialize()","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"activate Terminus","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"create StorageManager","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"  Terminus -\u003e StorageManager : StorageManager(baseDir, jsonPath)","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"  activate StorageManager","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    create JsonStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"      StorageManager -\u003e JsonStorage : JsonStorage(baseDir, jsonPath)","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"      activate JsonStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    return jsonStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    create NoteStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"      StorageManager -\u003e NoteStorage : NoteStorage(baseDir)","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"      activate NoteStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    return noteStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    create PdfStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"      StorageManager -\u003e PdfStorage : PdfStorage(baseDir)","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"      activate PdfStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    return pdfStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    create FolderStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"      StorageManager -\u003e FolderStorage : FolderStorage(baseDir)","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"      activate FolderStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    return folderStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"  return storageManager","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"|||","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"kelvneo":5,"Woolicious98":38}},{"path":"docs/uml/storage/StorageInitializeSequenceDiagram_old.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"@startuml","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"participant \":Terminus\" as Terminus","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"participant \":ModuleStorage\" as ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"ref over Terminus","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"Refer to main program flow.","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"end","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"activate Terminus","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"|||","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"Terminus -\u003e Terminus : start()","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"activate Terminus","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"|||","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"Terminus -\u003e ModuleStorage : getInstance()","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"activate ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"  opt ModuleStorage has not been created yet","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    ModuleStorage -\u003e ModuleStorage : ModuleStorage()","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    activate ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    return moduleStorage: ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"  end","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"  return moduleStorage: ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"Terminus -\u003e ModuleStorage : init(:Path)","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"note left: passes the filepath of the main json file","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"activate ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"Deactivate ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"Terminus -\u003e ModuleStorage : loadFile()","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"activate ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"ModuleStorage -\u003e ModuleStorage : initializeFile();","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"  activate ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    note right: create files accordingly for first time run","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"  return","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"  alt json file is not readable","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    |||","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    ref over ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"      Fatal error, return null","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    end","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"  else else","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    ref over ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"      load json data into ModuleManager using GsonBuilder","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    end","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    ModuleStorage -\u003e ModuleStorage : loadAllNotes(moduleManager:ModuleManager)","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"    activate ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"      loop each module item in moduleManager","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        ref over ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"          Refer to valid Module Name Section","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        end","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        note right: filter module from json file","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        |||","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        alt module name is not valid","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"          ModuleStorage -\u003e ModuleManager : removeMod(mod:String)","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        else else","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"          alt module folder does not exists","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"            ModuleStorage -\u003e : Files.createDirectories(modDirPath: Path);","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"          else else","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"            ModuleStorage -\u003e ModuleStorage : loadNotesFromModule(moduleManager:ModuleManager, mod:String)","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"            activate ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"            ref over ModuleStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"              Refer to Reload Notes Command Section.","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"            end","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"            return","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"          end","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"          return","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        end","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        return : ModuleManager","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"      end","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"  end","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"@enduml","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"Woolicious98":73}},{"path":"docs/uml/storage/StorageLoadSequenceDiagram_part1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"@startuml","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"!include ../SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"box Main TERMINUS_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"participant \":Terminus\" as Terminus TERMINUS_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"box Storage STORAGE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"participant \":StorageManager\" as StorageManager STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"participant \":Storage\" as Storage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"participant \":JsonStorage\" as JsonStorage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"activate Terminus","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"Terminus -\u003e StorageManager : initialise()","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"activate StorageManager","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"Create Storage","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"  StorageManager -\u003e Storage : Storage()","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"  activate Storage","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"return storage","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"StorageManager -\u003e Storage : createFolder(baseDir)","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"activate Storage","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"|||","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"StorageManager -\u003e JsonStorage : execute(null, StorageActionEnum.CREATE)","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"activate JsonStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"note left: Create data folder and \\nmain json file \\nif they do not exists","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"  JsonStorage -\u003e JsonStorage : createJson()","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"  activate JsonStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"  JsonStorage -\u003e JsonStorage : createFolder(baseDir)","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"  activate JsonStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"  return","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"  JsonStorage -\u003e JsonStorage : createFile(jsonPath)","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"  activate JsonStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"  return","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"ref over StorageManager","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"  load","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"end","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"return moduleManager","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"destroy Storage","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"@enduml","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"kelvneo":4,"Woolicious98":43}},{"path":"docs/uml/storage/StorageLoadSequenceDiagram_part2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"@startuml","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"!include ../SequenceStyle.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"mainframe sd load","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"box Storage STORAGE_BOX_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"participant \":StorageManager\" as StorageManager STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"participant \":JsonStorage\" as JsonStorage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"participant \":FilterManager\" as FilterManager STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"participant \":NoteStorage\" as NoteStorage STORAGE_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"endbox","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"activate StorageManager","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"StorageManager -\u003e StorageManager : load()","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"activate StorageManager","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"StorageManager -\u003e JsonStorage : loadJson()","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"activate JsonStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"return moduleManager","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"opt moduleManager is null","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"\u003c-- StorageManager : ModuleManager()","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"end","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"create FilterManager","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"StorageManager -\u003e FilterManager : FilterManager()","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"activate FilterManager","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"return filterManager","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"StorageManager -\u003e FilterManager : filter(moduleStorage)","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"note left : Remove any \\ninvalid data \\nin ModuleManager \\nloaded from json","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"activate FilterManager","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"return","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"loop each module in ModuleManager","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"  StorageManager -\u003e NoteStorage : execute(moduleManager, moduleCode, null, StorageActionEnum.RELOAD)","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"  activate NoteStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"  note left : ignore the file \\nif exception \\nis caught","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"  |||","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"  note right: Load Note data \\ninto ModuleManager","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"  return","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"end","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"return moduleManager","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"destroy FilterManager","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"@enduml","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"kelvneo":2,"Woolicious98":45}},{"path":"src/main/java/terminus/Terminus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageManager;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"public class Terminus {","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private final Ui ui;","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private CommandParser parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private String workspace;","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    private Path dataDirectory;","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    private static final Path DATA_DIRECTORY \u003d Path.of(System.getProperty(\"user.dir\"), \"data\");","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    private static final String MAIN_JSON \u003d \"main.json\";","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     * Enters the main entry-point for the terminus.Terminus application.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        new Terminus().start();","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    Terminus() {","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        this(Ui.getInstance(), MainCommandParser.getInstance(), DATA_DIRECTORY);","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    Terminus(Ui ui, CommandParser parser, Path dataDirectory) {","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        this.dataDirectory \u003d dataDirectory;","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"     * Starts the program.","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"    public void start() {","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        initialize();","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        runCommandsUntilExit();","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        exit();","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"     * Initializes all the file-related information for TermiNUS.","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    void initialize() {","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.initializeLogger();","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            ui.printSection(","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"                String.format(Messages.ERROR_MESSAGE_FILE, e.getMessage()),","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"                \"TermiNUS is unable to interact with the logging file.\",","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"                \"Any logs generated in this session will not be saved.\"","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"            );","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Starting Terminus...\");","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"            this.workspace \u003d \"\";","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"            this.storageManager \u003d new StorageManager(dataDirectory, MAIN_JSON);","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"            this.moduleManager \u003d this.storageManager.initialize();","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        } catch (InvalidFileException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(\"Data file loading has failed.\", e.fillInStackTrace());","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"            ui.printSection(e.getMessage(),","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"                \"TermiNUS may still run, but your data may not have loaded properly.\",","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"                \"Check \u0027terminus.log\u0027 for more information.\"","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"            );","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        if (this.moduleManager \u003d\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"File not found.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"Creating new NusModule instance...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"            this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.info(\"File loaded.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        this.ui.printParserBanner(this.parser, this.moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Terminus has started.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"    CommandResult handleUserInput(String input) {","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"            Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"            return command.execute(moduleManager);","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(e.getMessage(), e.fillInStackTrace());","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"            ui.printSection(e.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(e.getMessage(), e.fillInStackTrace());","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"            if (e.getFormat() !\u003d null) {","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"                // Print the format of the command along with the error message to the user, if specified.","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"                ui.printSection(e.getMessage(), String.format(Messages.INVALID_ARGUMENT_FORMAT_MESSAGE, e.getFormat()));","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"kelvneo"},"content":"            } else {","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"                ui.printSection(e.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"        return null;","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"    ","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"    void handleCommandResult(CommandResult commandResult) {","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"kelvneo"},"content":"        boolean isWorkspaceCommand \u003d commandResult.getNewCommandParser() !\u003d null;","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"        if (isWorkspaceCommand) {","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"            parser \u003d commandResult.getNewCommandParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"kelvneo"},"content":"            assert parser !\u003d null : \"parser should not be null\";","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"3m0W33D"},"content":"            workspace \u003d parser.getWorkspace();","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"            ui.printParserBanner(parser, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"kelvneo"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"kelvneo"},"content":"            ui.printSection(commandResult.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"kelvneo"},"content":"    void handleStorage(CommandResult commandResult) {","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"kelvneo"},"content":"            // Pass to Storage to handle the request if there are any changes to file.","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"kelvneo"},"content":"            if (commandResult.hasChange()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"kelvneo"},"content":"                storageManager.executeCommandResult(moduleManager, commandResult);","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"            // Update JSON File","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.info(\"Saving data into file...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"            this.storageManager.updateMainJsonFile(moduleManager);","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"kelvneo"},"content":"        } catch (InvalidFileException ex) {","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"            this.storageManager.setDisabled(true);","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"kelvneo"},"content":"            ui.printSection(ex.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"kelvneo"},"content":"            ui.printSection(Messages.ERROR_STORAGE_DISABLE_RESPONSE);","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"kelvneo"},"content":"    void runCommandsUntilExit() {","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"kelvneo"},"content":"        while (true) {","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"kelvneo"},"content":"            try {","lastModifiedDate":"2021-11-01"},{"lineNumber":148,"author":{"gitId":"kelvneo"},"content":"                assert workspace !\u003d null : \"Workspace should always have a value\";","lastModifiedDate":"2021-11-01"},{"lineNumber":149,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"kelvneo"},"content":"                String input \u003d ui.requestCommand(workspace);","lastModifiedDate":"2021-11-01"},{"lineNumber":151,"author":{"gitId":"kelvneo"},"content":"                CommandResult commandResult \u003d handleUserInput(input);","lastModifiedDate":"2021-11-01"},{"lineNumber":152,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":153,"author":{"gitId":"kelvneo"},"content":"                // Error occurred, just continue to next command.","lastModifiedDate":"2021-11-01"},{"lineNumber":154,"author":{"gitId":"kelvneo"},"content":"                if (commandResult \u003d\u003d null) {","lastModifiedDate":"2021-11-01"},{"lineNumber":155,"author":{"gitId":"kelvneo"},"content":"                    continue;","lastModifiedDate":"2021-11-01"},{"lineNumber":156,"author":{"gitId":"kelvneo"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"kelvneo"},"content":"                // Stop the program if it is exit.","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"kelvneo"},"content":"                if (commandResult.isExit()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":159,"author":{"gitId":"kelvneo"},"content":"                    break;","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"kelvneo"},"content":"                }","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"kelvneo"},"content":"                handleCommandResult(commandResult);","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"kelvneo"},"content":"                handleStorage(commandResult);","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"kelvneo"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"kelvneo"},"content":"                if (e.getMessage().equals(\"No line found\")) {","lastModifiedDate":"2021-11-01"},{"lineNumber":166,"author":{"gitId":"kelvneo"},"content":"                    ui.printSection(\"\", \"Force-quitting detected.\", \"TermiNUS will attempt to quit.\");","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"kelvneo"},"content":"                    return;","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"kelvneo"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"kelvneo"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"kelvneo"},"content":"                ui.printSection(\"An unexpected error has occurred: \", e.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":171,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.severe(e.getMessage(), e.fillInStackTrace());","lastModifiedDate":"2021-11-01"},{"lineNumber":172,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"kelvneo"},"content":"    void exit() {","lastModifiedDate":"2021-11-01"},{"lineNumber":177,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Saving data into file...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"            storageManager.setDisabled(false);","lastModifiedDate":"2021-10-30"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"            this.storageManager.save(moduleManager);","lastModifiedDate":"2021-10-30"},{"lineNumber":181,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.info(\"Save completed.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"        } catch (InvalidFileException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":183,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"File saving has failed.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"            ui.printSection(e.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":185,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"kelvneo"},"content":"        this.ui.printExitMessage();","lastModifiedDate":"2021-10-02"},{"lineNumber":187,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kelvneo":140,"LouisLouis19":1,"3m0W33D":12,"Woolicious98":27,"-":8}},{"path":"src/main/java/terminus/activerecall/DifficultyModifier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"public class DifficultyModifier {","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"    public static final double MIN_VALUE \u003d 0.2;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"    public static final double MAX_VALUE \u003d 0.9;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"    private static final double MAX_INCREASE \u003d 0.45;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    private static final double GROWTH_RATE \u003d 8;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    private static final double LOG_CURVE_MIDPOINT \u003d 0.4;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"     * Get the value to increment or decrement by based on the logistic curve.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"     * @param x The difficulty difference","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"     * @return The increment or decrement to apply to the question randomness weight.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private static double getCurveValue(double x) {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"        double exponentValue \u003d -1 * DifficultyModifier.GROWTH_RATE * (x - DifficultyModifier.LOG_CURVE_MIDPOINT);","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"        double denominator \u003d (1 + Math.exp(exponentValue));","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        return DifficultyModifier.MAX_INCREASE / denominator;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"     * Get the new randomness weightage of the question if the question is deemed easy.","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"     * @param initial The current randomness weightage of the question","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"     * @return The new randomness weightage of the question","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    public static double tweakEasyQuestionDifficulty(double initial) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        if (initial \u003c\u003d MIN_VALUE) {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"            return MIN_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        double difference \u003d initial - MIN_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        return Math.max(MIN_VALUE, initial - getCurveValue(difference));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"     * Get the new randomness weightage of the question if the question is deemed hard.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"     * @param initial The current randomness weightage of the question","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"     * @return The new randomness weightage of the question","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    public static double tweakHardQuestionDifficulty(double initial) {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        if (initial \u003e\u003d MAX_VALUE) {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            return MAX_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        double difference \u003d MAX_VALUE - initial;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        return Math.min(MAX_VALUE, initial + getCurveValue(difference));","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kelvneo":51}},{"path":"src/main/java/terminus/activerecall/GameEnvironment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.time.Duration;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.time.Instant;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"public class GameEnvironment {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    private static final int INVALID_DIFFICULTY \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    public static final int EASY_DIFFICULTY \u003d 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    public static final int NORMAL_DIFFICULTY \u003d 2;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    public static final int HARD_DIFFICULTY \u003d 3;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    public static final int EXIT_CODE \u003d -1;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    public static final String EXIT_STRING \u003d \"e\";","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private final Ui ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    private final QuestionGenerator questionGenerator;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    GameEnvironment(Ui ui, QuestionGenerator generator) {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        this.questionGenerator \u003d generator;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"     * Starts the active recall session.","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    public void run() {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        showPreGameInformation();","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        while (questionGenerator.hasNext()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"            Question question \u003d promptQuestion();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"            int difficulty \u003d getUserFeedback();","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"            if (difficulty \u003d\u003d EXIT_CODE) {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            updateQuestionDifficulty(question, difficulty);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(Messages.ACTIVE_RECALL_SESSION_END_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    private void showPreGameInformation() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        int questions \u003d questionGenerator.getQuestionPoolSize();","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"            \"---[Active Recall]---\",","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            \"We will be starting your active recall training session.\",","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            String.format(\"This session will consist of %d questions.\", questions),","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"            \"\"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        ui.getUserInput(Messages.ACTIVE_RECALL_ENTER_TO_CONTINUE_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    private Question promptQuestion() {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        Question question \u003d questionGenerator.next();","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        Instant start \u003d Instant.now(); ","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"            \"---\",","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"            \"Question:\",","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            question.getQuestion(),","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"            \"\"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        ui.getUserInput(Messages.ACTIVE_RECALL_ENTER_TO_CONTINUE_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        long duration \u003d Duration.between(start, Instant.now()).getSeconds();","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"            String.format(\"You took %d seconds to reveal the answer.\", duration),","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"            \"Answer:\", ","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"            question.getAnswer()","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"        return question;","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"    private int getUserFeedback() {","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"        int difficulty \u003d INVALID_DIFFICULTY;","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"        do {","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"            ui.printSection(Messages.ACTIVE_RECALL_ASK_QUESTION_DIFFICULTY_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"            String input \u003d ui.getUserInput(Messages.MESSAGE_QUESTION_PROMPT).trim().toLowerCase();","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"            Pattern inputPattern \u003d Pattern.compile(CommonFormat.QUESTION_FORMAT_CHECK);","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"            Matcher matcher \u003d inputPattern.matcher(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"            if (!matcher.matches()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"                ui.printSection(Messages.ERROR_MESSAGE_INVALID_INPUT);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"                continue;","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"            } else if (input.equalsIgnoreCase(EXIT_STRING)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"                difficulty \u003d EXIT_CODE;","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"            difficulty \u003d Integer.parseInt(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"            ","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"        } while (difficulty \u003d\u003d INVALID_DIFFICULTY);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"        assert difficulty \u003c\u003d HARD_DIFFICULTY \u0026\u0026 difficulty \u003e\u003d EXIT_CODE;","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"        return difficulty;","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"    private void updateQuestionDifficulty(Question question, int difficulty) {","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"        assert difficulty \u003e\u003d EASY_DIFFICULTY \u0026\u0026 difficulty \u003c\u003d HARD_DIFFICULTY;","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"        double weight \u003d question.getWeight();","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"        if (difficulty \u003d\u003d EASY_DIFFICULTY) {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"            double newWeight \u003d DifficultyModifier.tweakEasyQuestionDifficulty(weight);","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"            question.setWeight(newWeight);","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"        } else if (difficulty \u003d\u003d HARD_DIFFICULTY) {","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"            double newWeight \u003d DifficultyModifier.tweakHardQuestionDifficulty(weight);","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"kelvneo"},"content":"            question.setWeight(newWeight);","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(\"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"        if (questionGenerator.hasNext()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"            ui.getUserInput(Messages.ACTIVE_RECALL_ENTER_TO_CONTINUE_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"     * Create a new GameEnvironment instance using the singleton instance of Ui.","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"kelvneo"},"content":"     * @param questions The list of questions to ask from.","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"kelvneo"},"content":"     * @param questionCount The maximum number of questions.","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"kelvneo"},"content":"     * @return The new GameEnvironment to start the Active Recall.","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"kelvneo"},"content":"    public static GameEnvironment createNewEnvironment(List\u003cQuestion\u003e questions, int questionCount) {","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"kelvneo"},"content":"        return new GameEnvironment(Ui.getInstance(), new QuestionGenerator(questions, questionCount));","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kelvneo":123,"3m0W33D":5}},{"path":"src/main/java/terminus/activerecall/QuestionGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.util.Map.Entry;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.util.Random;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"public class QuestionGenerator {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    private final NavigableMap\u003cDouble, Question\u003e questionBank \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    private final Random random;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    private double total \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    private int questionCount;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"     * Instantiates a QuestionGenerator.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"     * @param questionBank The list of questions to pick from.","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"     * @param questionCount The maximum number of questions to pull.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    public QuestionGenerator(List\u003cQuestion\u003e questionBank, int questionCount) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        this(questionBank, questionCount, new Random());","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"     * Instantiates a QuestionGenerator with a specific Random generator.","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"     * @param questionBank The list of questions to pick from.","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"     * @param questionCount The maximum number of questions to pull.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"     * @param random The random generator to determine the order of questions.","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    public QuestionGenerator(List\u003cQuestion\u003e questionBank, int questionCount, Random random) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        this.questionCount \u003d questionCount;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        this.random \u003d random;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        questionBank.forEach(this::addQuestion);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    private void addQuestion(Question question) {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        assert question.getWeight() \u003e 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        total +\u003d question.getWeight();","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        questionBank.put(total, question);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"     * Gets the size of the question pool.","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"     * @return The size of the question pool.","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    public int getQuestionPoolSize() {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        return Math.min(questionBank.size(), questionCount);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"     * Checks if there are still questions left in the pool,","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"     * or if the maximum number of questions have been asked.","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"     * @return Return false if there are no questions left, or if the maximum number of questions have been asked. ","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    public boolean hasNext() {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        return questionCount \u003e 0 \u0026\u0026 !(total \u003c\u003d 0) \u0026\u0026 !questionBank.isEmpty();","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"     * Gets the next question from the question pool randomly.","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"     * @return The next question from the question pool.","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"     * @throws NullPointerException When there are no questions left.","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    public Question next() {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        if (!hasNext()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"            throw new NullPointerException(\"There are no questions left.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        double key \u003d random.nextDouble() * total;","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        Entry\u003cDouble, Question\u003e keyValuePair \u003d questionBank.higherEntry(key);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"        Question question \u003d keyValuePair.getValue();","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"        questionBank.remove(keyValuePair.getKey(), question);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        total -\u003d question.getWeight();","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"        questionCount -\u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"        return question;","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kelvneo":85}},{"path":"src/main/java/terminus/command/BackCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"public class BackCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_BACK;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_BACK;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     * Returns a command result containing the CommandParser object.","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     * @return CommandResult contains a CommandParser","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidCommandException Throws if the command is invalid","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidCommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Back Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        if (isModuleNameNullOrEmpty()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"            MainCommandParser mainParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.info(\"Changing Workspace to:\" + mainParser.getWorkspace());","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"            return new CommandResult(mainParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"            ModuleWorkspaceCommandParser moduleParser \u003d ModuleWorkspaceCommandParser.getInstance();","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"            moduleParser.setWorkspace(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.info(\"Changing Workspace to:\" + moduleParser.getWorkspace());","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"            return new CommandResult(moduleParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    private boolean isModuleNameNullOrEmpty() {","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        String moduleName \u003d getModuleName();","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        return moduleName \u003d\u003d null || moduleName.isBlank();","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":3,"3m0W33D":42,"Woolicious98":4}},{"path":"src/main/java/terminus/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    protected String arguments;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    public abstract String getFormat();","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    public abstract String getHelpMessage();","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"     * Parses remaining arguments for the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    public void parseArguments(String arguments)","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"        throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        if (!CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_INPUT);","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidCommandException  when the command could not be found.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    public abstract CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException;","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"     * Returns the module name.","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"     * @return The String containing the module name","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    public String getModuleName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        return moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"     * Sets the module name.","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The String containing the module name to set","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"    public void setModuleName(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":8,"kelvneo":5,"3m0W33D":53,"Woolicious98":3}},{"path":"src/main/java/terminus/command/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageActionEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageTypeEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"public class CommandResult {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    protected boolean hasChange;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"    protected CommandParser newCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    protected String[] message;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"    protected boolean isExit;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    protected StorageActionEnum storageAction;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    protected StorageTypeEnum storageType;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    protected String module;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    protected String deletedItemName;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    public CommandResult(String... message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        this(false, null, message);","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    public CommandResult(CommandParser parser) {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        this(false, parser);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    public CommandResult(boolean isExit) {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        this(isExit, null);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    public CommandResult(boolean isExit, CommandParser newCommandParser, String... message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        this.newCommandParser \u003d newCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        this.hasChange \u003d false;","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    public CommandResult(String module, StorageActionEnum action, StorageTypeEnum type, String... message) {","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        this(message);","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        this.storageAction \u003d action;","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        this.storageType \u003d type;","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        this.hasChange \u003d true;","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"     * Returns the CommandParser that is required to switch workspaces.","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"     * If additionalData will be null.","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"     * @return The CommandParser object for the workspace or else null.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    public CommandParser getNewCommandParser() {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        return newCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"     * Returns the message that the command wishes to output.","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"     * @return The message that the command wishes to output.","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    public String[] getMessage() {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        return message;","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"     * Returns the result of the command execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"     * @return True if successful or else false.","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    @Deprecated","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"    public boolean isOk() {","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"     * Returns the result to exit or not.","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"     * @return True if \u0027exit\u0027 command is sent.","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"        return isExit;","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"     * Returns the information to alter data in file storage.","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"     * @return True if it requires file storage or else false.","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"    public boolean hasChange() {","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        return hasChange;","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"    public StorageActionEnum getStorageAction() {","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"        return storageAction;","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"    public StorageTypeEnum getStorageType() {","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"        return storageType;","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    public String getModule() {","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        return module;","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    public String getDeletedItemName() {","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        return deletedItemName;","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"    public void setDeletedItemName(String deletedItemName) {","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        this.deletedItemName \u003d deletedItemName;","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":25,"3m0W33D":39,"Woolicious98":49}},{"path":"src/main/java/terminus/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_EXIT;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_EXIT;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidCommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Exit Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(true);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":18,"Woolicious98":4,"3m0W33D":4}},{"path":"src/main/java/terminus/command/GoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"public class GoCommand extends WorkspaceCommand {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    public GoCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"        super(ModuleWorkspaceCommandParser.getInstance());","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_GO_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_GO;","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        String[] args \u003d arguments.strip().split(CommonFormat.SPACE_DELIMITER, 2);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        moduleName \u003d args[0].toUpperCase();","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        if (args.length \u003e 1) {","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"            super.parseArguments(args[1]);","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"            super.parseArguments(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(moduleName);","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        if (module \u003d\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MODULE_NOT_FOUND);","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        commandMap.setWorkspace(moduleName);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        return super.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":2,"3m0W33D":60,"Woolicious98":2}},{"path":"src/main/java/terminus/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    private final CommandParser commandMap;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    public HelpCommand(CommandParser commandMap) {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"        this.commandMap \u003d commandMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_HELP;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_HELP;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidCommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Help Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(Messages.HELP_MENU_MESSAGE);","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        String helpMessage \u003d Arrays.stream(commandMap.getHelpMenu())","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"            .reduce((x, y) -\u003e x + \"\\n\" + y)","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"            .orElse(\"There are no commands in this workspace.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        stringBuilder.append(helpMessage);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(stringBuilder.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":8,"3m0W33D":27,"Woolicious98":4}},{"path":"src/main/java/terminus/command/TimetableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static terminus.common.CommonUtils.isStringNullOrEmpty;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static terminus.common.CommonUtils.isValidDay;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.timetable.Timetable;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"public class TimetableCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"    private String day;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the format of the command.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"     * @return The string object holding the appropriate format for the timetable command.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"        return CommonFormat.COMMAND_TIMETABLE_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"     * @return The String object containing the description for the timetable command.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MESSAGE_COMMAND_TIMETABLE;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"     * Parses remaining arguments for the timetable command.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"     * @throws InvalidArgumentException when arguments are invalid.","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"        day \u003d arguments;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        if (!isStringNullOrEmpty(day) \u0026\u0026 !isValidDay(day)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Day: %s\", day));","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(String.format(Messages.ERROR_MESSAGE_INVALID_DAY, day));","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"        TerminusLogger.info(String.format(\"Parsed arguments (day \u003d %s) to Timetable Command\", day));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"     * Executes the timetable command. Prints the relevant response to the Ui.","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        String schedule;","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        if (isStringNullOrEmpty(day)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"            schedule \u003d timetable.getWeeklySchedule();","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"            assert day !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"            schedule \u003d timetable.getDailySchedule(day);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"        result.append(timetable.checkEmptySchedule(schedule, day));","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(result.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"LouisLouis19":69,"kelvneo":5}},{"path":"src/main/java/terminus/command/WorkspaceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"public abstract class WorkspaceCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"    protected CommandParser commandMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    public WorkspaceCommand(CommandParser commandMap) {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"        this.commandMap \u003d commandMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     * Returns the Command Result after execution. If no other arguments, returns the workspace.","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the list of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"     * @return The CommandResult containing success or failure of command and CommandParser Object.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidCommandException when the command could not be found.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        assert commandMap !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Workspace Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        if (isNotNullOrBlank()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.info(\"Parsing workspace command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"            return commandMap.parseCommand(arguments).execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.info(\"Switching workspace to: \" + commandMap.getWorkspace());","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            return new CommandResult(commandMap);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    private boolean isNotNullOrBlank() {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        return arguments !\u003d null \u0026\u0026 !arguments.isBlank();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":1,"kelvneo":3,"3m0W33D":41,"Woolicious98":2}},{"path":"src/main/java/terminus/command/content/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Content;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":" * DeleteCommand generic class which will manage the deletion of Content specified by user command.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":" *","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":" * @param \u003cT\u003e Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"public class DeleteCommand\u003cT extends Content\u003e extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private final Class\u003cT\u003e type;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    protected int itemNumber;","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    protected String deletedContentName;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"     * Creates a DeleteCommand object with referenced to the provided class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"     * @param type Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    public DeleteCommand(Class\u003cT\u003e type) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        return CommonFormat.COMMAND_DELETE_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MESSAGE_COMMAND_DELETE;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"     * Parses the arguments to the DeleteCommand object. The arguments are attributes to identify a Content object in an","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"     * ArrayList.","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when argument provided is empty, non-numeric or less than 1.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing delete arguments\");","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"            itemNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Failed to parse delete itemNumber : %s\", arguments));","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        if (itemNumber \u003c\u003d 0) {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Invalid itemNumber : %d\", itemNumber));","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"     * Executes the delete command. Prints the relevant response to the Ui and the specified Content object will be","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"     * removed from the arraylist.","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The ModuleManager that contains the NusModules.","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when argument provided is index out of bounds of the ArrayList.","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidArgumentException {","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cT\u003e contentManager \u003d module.getContentManager(type);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"        assert contentManager !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Delete Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"        this.deletedContentName \u003d contentManager.deleteContent(itemNumber);","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"        assert deletedContentName !\u003d null \u0026\u0026 !deletedContentName.isBlank();","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"                String.format(\"%s(%s) has been deleted\", CommonUtils.getClassName(type), deletedContentName));","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"        String message \u003d (String.format(Messages.MESSAGE_RESPONSE_DELETE,","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"                CommonUtils.getClassName(type).toLowerCase(), deletedContentName));","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":37,"kelvneo":6,"3m0W33D":24,"Woolicious98":30}},{"path":"src/main/java/terminus/command/content/InnerModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.WorkspaceCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.InnerModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"public abstract class InnerModuleCommand extends WorkspaceCommand {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    private InnerModuleCommandParser commandMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    public InnerModuleCommand(InnerModuleCommandParser commandMap) {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"        super(commandMap);","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"        this.commandMap \u003d commandMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"        commandMap.setModuleName(getModuleName());","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"            return super.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"            if (e.getFormat() \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"                throw e;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(\"Failed to parse command.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(commandMap.getWorkspace() + \" : \" + e.getFormat());","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"                    String.format(Messages.INVALID_ARGUMENT_FORMAT_MESSAGE_EXCEPTION, ","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"                        commandMap.getWorkspace(true), e.getFormat()),","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"                e.getMessage()","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"            );","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kelvneo":4,"3m0W33D":36,"Woolicious98":1}},{"path":"src/main/java/terminus/command/content/NotesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"public class NotesCommand extends InnerModuleCommand {","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    public NotesCommand() {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"        super(NoteCommandParser.getInstance());","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_NOTE;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_NOTE;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":1,"3m0W33D":18,"Woolicious98":4}},{"path":"src/main/java/terminus/command/content/QuestionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"public class QuestionCommand extends InnerModuleCommand {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    public QuestionCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"        super(QuestionCommandParser.getInstance());","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"        return CommonFormat.COMMAND_QUESTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        return Messages.MESSAGE_COMMAND_QUESTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":22}},{"path":"src/main/java/terminus/command/content/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":" * ScheduleCommand class to manage commands inside the Schedule workspace.","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"public class ScheduleCommand extends InnerModuleCommand {","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"    public ScheduleCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"        super(LinkCommandParser.getInstance());","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the keyword for schedule-related commands.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"     * @return The string containing the keyword for schedule-related commands.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"        return CommonFormat.COMMAND_SCHEDULE;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     * @return The string containing the description for this command.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MESSAGE_COMMAND_SCHEDULE;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":31,"kelvneo":1,"3m0W33D":2,"Woolicious98":2}},{"path":"src/main/java/terminus/command/content/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Content;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":" * ViewModuleCommand generic class which will manage the viewing of Content information specified by user command.","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":" *","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":" * @param \u003cT\u003e Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"public class ViewCommand\u003cT extends Content\u003e extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private final Class\u003cT\u003e type;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private int itemNumber;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"     * Determines whether to print the list of all Content objects or just the specified one.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    private boolean displayAll;","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     * Creates a ViewModuleCommand object with referenced to the provided class type.","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"     * @param type Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    public ViewCommand(Class\u003cT\u003e type) {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        this.displayAll \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_VIEW_FORMAT;","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_VIEW;","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"     * Parses the arguments to the ViewModuleCommand object. The arguments are attributes to identify a Content object","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"     * in an ArrayList. The arguments can be empty which refers to viewing a list all Content object in an ArrayList","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"     * instead.","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when a non-empty argument provided is non-numeric or less than 1.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"            displayAll \u003d true;","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing view arguments\");","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"            itemNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"            displayAll \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Failed to parse view itemNumber : %s\", arguments));","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        if (itemNumber \u003c\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Invalid itemNumber : %d\", itemNumber));","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"     * Executes the view command. Prints the relevant response to the Ui.","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when argument provided is index out of bounds of the ArrayList.","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidArgumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cT\u003e contentManager \u003d module.getContentManager(type);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        if (displayAll) {","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"            String fullList \u003d contentManager.listAllContents();","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"            assert fullList !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"            if (fullList.isBlank()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"                result.append(Messages.EMPTY_CONTENT_LIST_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"            } else {","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"                result.append(Messages.CONTENT_MESSAGE_HEADER);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"                result.append(contentManager.listAllContents());","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"                result.append(Messages.CONTENT_MESSAGE_FOOTER);","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"            result.append(contentManager.getContentData(itemNumber));","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(result.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"kelvneo":13,"3m0W33D":24,"Woolicious98":70}},{"path":"src/main/java/terminus/command/content/link/AddLinkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static terminus.common.CommonUtils.hasDurationOverflow;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static terminus.common.CommonUtils.isValidDay;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static terminus.common.CommonUtils.isValidDuration;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import static terminus.common.CommonUtils.isValidUrl;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"import terminus.timetable.ConflictManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":" * AddLinkCommand class which will manage the adding of new Links from user command.","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"public class AddLinkCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    private String description;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    private String day;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    private int duration;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    private String link;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    private static final int ADD_SCHEDULE_ARGUMENTS \u003d 5;","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_ADD_SCHEDULE_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MESSAGE_COMMAND_ADD;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"     * Parses the arguments to the AddLinkCommand object. The arguments are attributes for a new Link object.","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments are empty or missing.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e argArray \u003d CommonUtils.findArguments(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"        if (hasMissingScheduleArguments(argArray)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        this.description \u003d argArray.get(0).trim();","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        this.day \u003d argArray.get(1).trim();","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        String userStartTime \u003d argArray.get(2).trim();","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"        this.startTime \u003d CommonUtils.convertToLocalTime(userStartTime);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"            this.duration \u003d Integer.parseInt(argArray.get(3).trim());","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Duration\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(String.format(Messages.ERROR_MESSAGE_INVALID_DURATION_FORMAT));","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"        this.link \u003d argArray.get(4).trim();","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"        checkValidArguments();","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"        TerminusLogger.info(String.format(\"Parsed arguments (description \u003d %s, day \u003d %s, startTime \u003d %s, link \u003d %s)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"            + \" to Add Link Command\", description, day, startTime, link));","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"     * Executes the add link command. Prints the relevant response to the Ui.","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the list of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"        ContentManager\u003cLink\u003e contentManager \u003d module.getContentManager(Link.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"        assert contentManager !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"        Link newLink \u003d new Link(description, day, startTime, duration, link);","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"        ConflictManager scheduleConflict \u003d new ConflictManager(moduleManager, newLink);","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"        if (!CommonUtils.isStringNullOrEmpty(scheduleConflict.getConflictingSchedule())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"            String conflicts \u003d scheduleConflict.getConflictingSchedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"            stringBuilder.append(Messages.MESSAGE_CONFLICTING_SCHEDULE + \"\\n\").append(conflicts).append(\"\\n\");","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"LouisLouis19"},"content":"        contentManager.add(newLink);","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"        stringBuilder.append(String.format(Messages.MESSAGE_RESPONSE_ADD, CommonFormat.COMMAND_SCHEDULE, description));","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(stringBuilder.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"LouisLouis19"},"content":"     * Checks if the proper amount of arguments exists and each are non-empty.","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"     * @param argArray The command arguments in an array list.","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"LouisLouis19"},"content":"     * @return True if the appropriate number of arguments are present, false otherwise.","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"    private boolean hasMissingScheduleArguments(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"        boolean hasMissing \u003d false;","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"        if (argArray.size() !\u003d ADD_SCHEDULE_ARGUMENTS) {","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Failed to find %d arguments, %d arguments found\",","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"LouisLouis19"},"content":"                ADD_SCHEDULE_ARGUMENTS, argArray.size()));","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"            hasMissing \u003d true;","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"        } else if (CommonUtils.hasEmptyString(argArray)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(\"Failed to parse arguments, some arguments found is empty\");","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"LouisLouis19"},"content":"            hasMissing \u003d true;","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"LouisLouis19"},"content":"        return hasMissing;","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"LouisLouis19"},"content":"     * Checks the validity of the arguments for a new Link object.","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"LouisLouis19"},"content":"     * @throws InvalidArgumentException when arguments are invalid","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"LouisLouis19"},"content":"    private void checkValidArguments() throws InvalidArgumentException {","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"LouisLouis19"},"content":"        if (!isValidDay(this.day)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Day: %s\", this.day));","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(String.format(Messages.ERROR_MESSAGE_INVALID_DAY, this.day));","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"LouisLouis19"},"content":"        } else if (!isValidDuration(this.duration)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Duration: %d\", this.duration));","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(String.format(Messages.ERROR_MESSAGE_INVALID_DURATION, this.duration));","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"LouisLouis19"},"content":"        } else if (hasDurationOverflow(startTime, this.duration)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Duration: %d\", this.duration));","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_SCHEDULE_OVERFLOW);","lastModifiedDate":"2021-11-01"},{"lineNumber":145,"author":{"gitId":"LouisLouis19"},"content":"        } else if (!isValidUrl(this.link)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Link: %s\", this.link));","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(String.format(Messages.ERROR_MESSAGE_INVALID_LINK, this.link));","lastModifiedDate":"2021-11-01"},{"lineNumber":148,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":113,"kelvneo":13,"3m0W33D":16,"Woolicious98":8}},{"path":"src/main/java/terminus/command/content/note/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageActionEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageTypeEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":" * AddNoteCommand class which will manage the adding of new Notes from user command.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private String name;","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private String data;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    private static final int ADD_NOTE_ARGUMENTS \u003d 2;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_ADD_NOTE_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_ADD;","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"     * Parses the arguments to the AddNoteCommand object.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"     * The arguments are attributes for a new Note object.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments are empty or missing.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Parsing add note arguments\");","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: arguments is empty\");","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        // Regex to find arguments","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e argArray \u003d CommonUtils.findArguments(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"        if (!isValidNoteArguments(argArray)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        } else if (!CommonUtils.isValidFileName(argArray.get(0))) {","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NOTE_NAME);","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        this.name \u003d argArray.get(0);","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        this.data \u003d argArray.get(1);","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(String.format(\"Parsed argument (name \u003d %s, data \u003d %s) to Add Note Command\", name, data));","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"     * Executes the add Note command.","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"     * Prints the relevant response to the Ui and a new Note will be added into the arraylist of Notes.","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidArgumentException {","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Executing Add Note Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        ContentManager\u003cNote\u003e contentManager \u003d module.getContentManager(Note.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"        assert contentManager !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        if (contentManager.isDuplicateName(name)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_DUPLICATE_NAME);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        Note newNote \u003d new Note(name, data);","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"        contentManager.add(newNote);","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(String.format(\"Note(\\\"%s\\\",\\\"%s\\\") has been added\", name, data));","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"        String message \u003d String.format(Messages.MESSAGE_RESPONSE_ADD, CommonFormat.COMMAND_NOTE, name);","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"        return new CommandResult(getModuleName(), StorageActionEnum.CREATE, StorageTypeEnum.TEXT, message);","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"     * Checks if arguments are non-empty and valid.","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"     * @param argArray The command arguments in an array list.","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"     * @return True if the appropriate number of arguments are present, false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"    private boolean isValidNoteArguments(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"        if (argArray.size() !\u003d ADD_NOTE_ARGUMENTS) {","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(String.format(\"Failed to find %d arguments: %d arguments found\",","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"                    ADD_NOTE_ARGUMENTS, argArray.size()));","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"        } else if (CommonUtils.hasEmptyString(argArray)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: some arguments found is empty\");","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"        }  else if (argArray.get(1).length() \u003e CommonFormat.MAX_FILE_SIZE) {","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: given note data is too long\");","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"        return isValid;","lastModifiedDate":"2021-10-03"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"LouisLouis19":5,"kelvneo":5,"3m0W33D":11,"Woolicious98":89}},{"path":"src/main/java/terminus/command/content/note/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageActionEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageTypeEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"public class DeleteNoteCommand extends DeleteCommand\u003cNote\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    public DeleteNoteCommand(Class\u003cNote\u003e type) {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"        super(type);","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidArgumentException {","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"        CommandResult result \u003d super.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        CommandResult newResult \u003d new CommandResult(getModuleName(), StorageActionEnum.DELETE, StorageTypeEnum.TEXT,","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"                result.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"        newResult.setDeletedItemName(super.deletedContentName);","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"        return newResult;","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":4,"Woolicious98":21}},{"path":"src/main/java/terminus/command/content/note/ExportNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageActionEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageTypeEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"public class ExportNoteCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_EXPORT;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_EXPORT;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"     * Executes the command. Prints the required result to the Ui.","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidArgumentException {","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Export Note Command\");","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        ContentManager noteContentManager \u003d moduleManager.getModule(getModuleName()).getContentManager(Note.class);","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        if (noteContentManager.getTotalContents() \u003c 1) {","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidArgumentException(Messages.ERROR_EXPORT_MISSING_NOTE);","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        String message \u003d Messages.RESPONSE_EXPORT;","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        return new CommandResult(getModuleName(), StorageActionEnum.EXPORT, StorageTypeEnum.PDF, message);","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"3m0W33D":47,"Woolicious98":9}},{"path":"src/main/java/terminus/command/content/note/ReloadNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageActionEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageTypeEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"public class ReloadNoteCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_RELOAD;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_RELOAD;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"     * Executes Reload Note command.","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"     * Replace existing note data in the specified module with the ones in the file directory.","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"     * @return The CommandResult object indicating the success including additional options.","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    public CommandResult execute(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        result.append(String.format(Messages.MESSAGE_RESPONSE_RELOAD_NOTE, getModuleName()));","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        return new CommandResult(getModuleName(), StorageActionEnum.RELOAD, StorageTypeEnum.TEXT, result.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Woolicious98":46}},{"path":"src/main/java/terminus/command/content/question/AddQuestionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"public class AddQuestionCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    private String question;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    private String answer;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private static final int ADD_NOTE_ARGUMENTS \u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        return CommonFormat.COMMAND_ADD_QUESTION_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        return Messages.MESSAGE_COMMAND_ADD;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"     * Parses the arguments to the AddQuestionCommand object.","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"     * The arguments are attributes for a new Question object.","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"     * @throws InvalidArgumentException when arguments are empty or missing.","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Parsing add question arguments\");","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: arguments is empty\");","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        // Regex to find arguments","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        ArrayList\u003cString\u003e argArray \u003d CommonUtils.findArguments(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        if (!isValidQuestionsArgument(argArray)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        this.question \u003d argArray.get(0);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        this.answer \u003d argArray.get(1);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(String.format(\"Parsed argument (question \u003d %s, answer \u003d %s) to Add Question Command\", ","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            question, answer));","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"     * Executes the add Question command.","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"     * Prints the relevant response to the Ui and a new Note will be added into the arraylist of Notes.","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Executing Add Question Command\");","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        ContentManager\u003cQuestion\u003e contentManager \u003d module.getContentManager(Question.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        assert contentManager !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        contentManager.add(new Question(question, answer));","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(String.format(\"Question (\\\"%s\\\",\\\"%s\\\") has been added\", question, answer));","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        String message \u003d String.format(Messages.MESSAGE_RESPONSE_ADD, CommonFormat.COMMAND_QUESTION, question);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"     * Checks if arguments are non-empty and valid.","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"     * @param argArray The command arguments in an array list.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"     * @return True if the appropriate number of arguments are present, false otherwise.","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"    private boolean isValidQuestionsArgument(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"        if (argArray.size() !\u003d ADD_NOTE_ARGUMENTS) {","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(String.format(\"Failed to find %d arguments: %d arguments found\",","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"                ADD_NOTE_ARGUMENTS, argArray.size()));","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"        } else if (CommonUtils.hasEmptyString(argArray)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: some arguments found is empty\");","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"        return isValid;","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":96}},{"path":"src/main/java/terminus/command/content/question/TestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import terminus.activerecall.GameEnvironment;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"public class TestCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    private int questionCount;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        return CommonFormat.COMMAND_TEST_QUESTION_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        return Messages.MESSAGE_COMMAND_TEST_QUESTION;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"            this.questionCount \u003d 10;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"            return;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Parsing question test arguments\");","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            questionCount \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(String.format(\"Failed to parse number of questions : %s\", arguments));","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        if (questionCount \u003c\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(String.format(\"Invalid number of questions : %d\", questionCount));","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        assert questionCount \u003e 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        ContentManager\u003cQuestion\u003e contentManager \u003d module.getContentManager(Question.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        ArrayList\u003cQuestion\u003e questions \u003d contentManager.getContents();","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        if (questions.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidCommandException(Messages.ERROR_MESSAGE_NO_QUESTIONS);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment.createNewEnvironment(questions, questionCount).run(); ","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult();","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kelvneo":68}},{"path":"src/main/java/terminus/command/module/AddModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageActionEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageTypeEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"public class AddModuleCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    private static final int MODULE_ARGS_COUNT \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_ADD_MODULE_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_ADD_MODULE;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: arguments is empty\");","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e argArray \u003d CommonUtils.findArguments(arguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        if (!isValidModuleArguments(argArray)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        } else if (!CommonUtils.isValidFileName(argArray.get(0))) {","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_MODULE_NAME);","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        } else if (!argArray.get(0).matches(CommonFormat.SPACE_NEGATED_DELIMITER)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MODULE_WHITESPACE);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"        moduleName \u003d argArray.get(0).toUpperCase();","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"     * Executes the command. Prints the required result to the Ui.","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidCommandException  when the command could not be found.","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"        if (moduleManager.getModule(moduleName) !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MODULE_EXIST);","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(moduleName);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        String message \u003d String.format(Messages.MESSAGE_RESPONSE_MODULE_ADD, moduleName);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        return new CommandResult(moduleName, StorageActionEnum.CREATE, StorageTypeEnum.FOLDER, message);","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"    private boolean isValidModuleArguments(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"        if (argArray.size() !\u003d MODULE_ARGS_COUNT) {","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"            return false;","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"            return !CommonUtils.hasEmptyString(argArray);","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":3,"3m0W33D":77,"Woolicious98":7}},{"path":"src/main/java/terminus/command/module/DeleteModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageActionEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageTypeEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"public class DeleteModuleCommand extends DeleteCommand {","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    public DeleteModuleCommand() {","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"        super(null);","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"     * Executes the command. Prints the required result to the Ui.","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidArgumentException {","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        String[] listOfModule \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        if (!CommonUtils.isValidIndex(itemNumber, listOfModule)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        assert itemNumber \u003e 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.removeModule(listOfModule[itemNumber - 1]);","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        String message \u003d String.format(Messages.MESSAGE_RESPONSE_MODULE_DELETE, listOfModule[itemNumber - 1]);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        CommandResult result \u003d new CommandResult(null, StorageActionEnum.DELETE,","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"                StorageTypeEnum.FOLDER, message);","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        result.setDeletedItemName(listOfModule[itemNumber - 1]);","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        return result;","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":1,"3m0W33D":32,"Woolicious98":9}},{"path":"src/main/java/terminus/command/module/ModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.WorkspaceCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"public class ModuleCommand extends WorkspaceCommand {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"    public ModuleCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"        super(ModuleCommandParser.getInstance());","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_MODULE_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_MODULE;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":33}},{"path":"src/main/java/terminus/command/module/UpdateModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageActionEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageTypeEnum;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"public class UpdateModuleCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    public static final String REGEX_GROUP_NEWNAME \u003d \"newName\";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    public static final String REGEX_GROUP_INDEX \u003d \"index\";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private int index;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private String newName;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        return CommonFormat.COMMAND_UPDATE_MODULE_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        return Messages.MESSAGE_COMMAND_UPDATE_MODULE;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        Pattern p \u003d Pattern.compile(CommonFormat.UPDATE_MODULE_REGEX_FORMAT);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        Matcher m \u003d p.matcher(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        if (!m.matches()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"            index \u003d Integer.parseInt(m.group(REGEX_GROUP_INDEX));","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Failed to parse index : %s\", arguments));","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        newName \u003d m.group(REGEX_GROUP_NEWNAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        if (!newName.matches(CommonFormat.SPACE_NEGATED_DELIMITER)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MODULE_WHITESPACE);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        } else if (!CommonUtils.isValidFileName(newName)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_MODULE_NAME);","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        newName \u003d newName.toUpperCase();","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        String[] listOfModule \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        if (!CommonUtils.isValidIndex(index, listOfModule)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"        if (moduleManager.getModule(newName) !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MODULE_EXIST);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"        assert index \u003e 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        NusModule current \u003d moduleManager.getModule(listOfModule[index - 1]);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.removeModule(listOfModule[index - 1]);","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.setModule(newName, current);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        String message \u003d String.format(Messages.UPDATE_MODULE_RESPONSE_MESSAGE, listOfModule[index - 1], newName);","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"        CommandResult result \u003d new CommandResult(newName, StorageActionEnum.UPDATE, StorageTypeEnum.FOLDER, message);","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"        result.setDeletedItemName(listOfModule[index - 1]);","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        return result;","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kelvneo":3,"3m0W33D":68,"Woolicious98":11}},{"path":"src/main/java/terminus/command/module/ViewModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"public class ViewModuleCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_VIEW_MODULE_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_MODULE_VIEW;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     * Executes the command. Prints the required result to the Ui.","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidCommandException  when the command could not be found.","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        String[] modules \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        String[] listOfModules \u003d IntStream.range(0, modules.length)","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"                .mapToObj(i -\u003e String.format(Messages.MESSAGE_RESPONSE_MODULE_FORMAT, i + 1, modules[i]))","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        if (listOfModules.length \u003d\u003d 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            return new CommandResult(Messages.MESSAGE_RESPONSE_NO_MODULES);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"            return new CommandResult(listOfModules);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":4,"3m0W33D":52}},{"path":"src/main/java/terminus/common/CommonFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.common;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":" * CommonFormat class that contains formats that are used across different packages.","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"public class CommonFormat {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"     * Command names ","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_NOTE \u003d \"note\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_VIEW \u003d \"view\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_BACK \u003d \"back\";","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_SCHEDULE \u003d \"schedule\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_QUESTION \u003d \"question\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_TEST \u003d \"test\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_TIMETABLE \u003d \"timetable\";","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_MODULE \u003d \"module\";","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_GO \u003d \"go\";","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_EXPORT \u003d \"export\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_UPDATE \u003d \"update\";","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_RELOAD \u003d \"reload\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    public static final String LOCAL_TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"     * Command Formats ","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_DELETE_FORMAT \u003d COMMAND_DELETE + \" \u003cindex\u003e\";","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_VIEW_FORMAT \u003d COMMAND_VIEW + \" {index}\";","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_ADD_SCHEDULE_FORMAT \u003d COMMAND_ADD + \" \\\"\u003clink_description\u003e\\\" \"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"            + \"\\\"\u003cday\u003e\\\" \\\"\u003cstart_time\u003e\\\" \\\"\u003cduration\u003e\\\" \\\"\u003czoom_link\u003e\\\"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_ADD_NOTE_FORMAT \u003d COMMAND_ADD + \" \\\"\u003cnote_name\u003e\\\" \\\"\u003cnote_content\u003e\\\"\";","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_ADD_QUESTION_FORMAT \u003d COMMAND_ADD + \" \\\"\u003cquestion\u003e\\\" \\\"\u003canswer\u003e\\\"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_TEST_QUESTION_FORMAT \u003d COMMAND_TEST + \" {question_count}\";","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_TIMETABLE_FORMAT \u003d COMMAND_TIMETABLE + \" {day}\";","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    public static final String","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"            COMMAND_UPDATE_MODULE_FORMAT \u003d COMMAND_UPDATE + \" \u003cindex\u003e \\\"\u003cnew_module_code\u003e\\\"\";","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    public static final String COMMAND_ADD_MODULE_FORMAT \u003d \"add \\\"\u003cmodule_code\u003e\\\"\";","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_MODULE_FORMAT \u003d COMMAND_MODULE;","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_VIEW_MODULE_FORMAT \u003d COMMAND_VIEW;","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_GO_FORMAT \u003d \"go \u003cmodule_code\u003e\";","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    public static final String SPACE_DELIMITER \u003d \"\\\\s+\";","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    public static final String SPACE_NEGATED_DELIMITER \u003d \"\\\\S+\";","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"     * Notes storage setting ","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"    public static final String EXTENSION_TEXT_FILE \u003d \".txt\";","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"    public static final String CONTENT_TYPE_TEXT_FILE \u003d \"text/plain\";","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"    public static final ArrayList\u003cCharacter\u003e ILLEGAL_CHARACTERS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"            Arrays.asList(\u0027/\u0027, \u0027\\n\u0027, \u0027\\r\u0027, \u0027\\t\u0027, \u0027\\0\u0027, \u0027\\f\u0027, \u0027`\u0027, \u0027?\u0027, \u0027*\u0027, \u0027\\\\\u0027, \u0027\u003c\u0027, \u0027\u003e\u0027, \u0027|\u0027, \u0027\\\"\u0027, \u0027:\u0027, \u0027.\u0027));","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"    public static final int MAX_FILENAME_LENGTH \u003d 30;","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    public static final int STARTING_ASCII \u003d 32;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"    public static final int ENDING_ASCII \u003d 126;","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"    public static final long MAX_FILE_SIZE \u003d 1000000;","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"     * PDF settings","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"    public static final String PDF_FORMAT \u003d \".pdf\";","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"    public static final String FONT_NAME \u003d \"Arial\";","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"    public static final int FONT_HEADER_SIZE \u003d 14;","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"    public static final int FONT_SIZE \u003d 11;","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"    public static final String UPDATE_MODULE_REGEX_FORMAT \u003d \"(?\u003cindex\u003e\\\\d+)\\\\s+\\\"(?\u003cnewName\u003e.*?)\\\"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"    public static final String QUESTION_FORMAT_CHECK \u003d \"^[123e]$\";","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"    public static final String QUOTE_REGEX_DELIMITER \u003d \"\\\"(.*?)\\\"\";","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"    public static final String STRICT_WHITE_REGEX \u003d \"^(?:(?:\\\"([^\\\"]+?)\\\")\\\\s+?)*?(?:\\\"([^\\\"]+?)\\\")$\";","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":13,"kelvneo":19,"Woolicious98":35,"3m0W33D":13}},{"path":"src/main/java/terminus/common/CommonUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.net.URL;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":" * CommonUtils class to manage methods that are used across different packages.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"public class CommonUtils {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"     * Returns an ArrayList of String containing elements found based on regex.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"     * Matches any strings that is within a pair of double quotes.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"     * @param arg String containing the arguments from inputs.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"     * @return An array list containing strings that is within a pair of double quotes from arg.","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    public static ArrayList\u003cString\u003e findArguments(String arg) {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        assert arg !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e argsArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        if (!arg.matches(CommonFormat.STRICT_WHITE_REGEX)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"            return argsArray;","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        Pattern p \u003d Pattern.compile(CommonFormat.QUOTE_REGEX_DELIMITER);","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        Matcher m \u003d p.matcher(arg);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        while (m.find()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"            argsArray.add(m.group(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        return argsArray;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"     * Checks if any elements in the ArrayList of String is empty.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"     * @param argArray The ArrayList to be checked.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"     * @return True if array list is empty, false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    public static boolean hasEmptyString(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        assert argArray !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        if (argArray.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        return argArray.stream().anyMatch(x -\u003e x \u003d\u003d null || x.isBlank());","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"     * Returns a LocalTime object from a given string.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     * @param startTime The string to be converted to a LocalTime object.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"     * @return A LocalTime object of the converted string.","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when string does not follow the proper time format.","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"    public static LocalTime convertToLocalTime(String startTime) throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"        assert startTime !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(CommonFormat.LOCAL_TIME_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"            return LocalTime.parse(startTime, format);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"                    String.format(Messages.ERROR_MESSAGE_INVALID_TIME_FORMAT, CommonFormat.LOCAL_TIME_FORMAT));","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"     * Returns the class name without its packages.","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"     * @param type Content class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"     * @param \u003cT\u003e  Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"     * @return A string of the class name from the class type without its packages.","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"    public static \u003cT\u003e String getClassName(T type) {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"        assert type !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"        String result \u003d type.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"        String[] string \u003d result.split(\"\\\\.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"        if (string.length \u003e 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"            result \u003d string[string.length - 1];","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"        return result;","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"     * Checks if the given string is a valid url.","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"     * @param url The string to be checked.","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"     * @return True if url is valid, false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when given string is not a valid url.","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"    public static boolean isValidUrl(String url) throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"            new URL(url).toURI();","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"     * Checks if the given string is a valid DaysOfWeekEnum type.","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"     * @param day The string to be checked.","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"     * @return True if day is a valid DaysOfWeekEnum type, false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"    public static boolean isValidDay(String day) {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"        for (DaysOfWeekEnum dayOfWeek : DaysOfWeekEnum.values()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"3m0W33D"},"content":"            if (dayOfWeek.name().equalsIgnoreCase(day)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"3m0W33D"},"content":"                return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"3m0W33D"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"3m0W33D"},"content":"        return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"LouisLouis19"},"content":"     * Checks if the given integer is a valid duration.","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"LouisLouis19"},"content":"     * @param duration The integer to be checked","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"LouisLouis19"},"content":"     * @return True if the integer between 0 and 24 inclusive, false otherwise","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"LouisLouis19"},"content":"    public static boolean isValidDuration(int duration) {","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"LouisLouis19"},"content":"        if (duration \u003c 0 || duration \u003e 24) {","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"LouisLouis19"},"content":"        return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"LouisLouis19"},"content":"     * Checks if the given LocalTime and integer has an overflow.","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"LouisLouis19"},"content":"     * @param startTime The startTime attribute of the Link object","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"LouisLouis19"},"content":"     * @param duration  The duration attribute of the Link object","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"LouisLouis19"},"content":"     * @return True if there is no overflow in time, false otherwise","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"LouisLouis19"},"content":"    public static boolean hasDurationOverflow(LocalTime startTime, int duration) {","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"LouisLouis19"},"content":"        LocalTime endTime \u003d startTime.plusHours(duration);","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"LouisLouis19"},"content":"        LocalTime midnight \u003d LocalTime.of(00, 00);","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"LouisLouis19"},"content":"        if (!endTime.equals(midnight) \u0026\u0026 startTime.getHour() \u003e endTime.getHour()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"LouisLouis19"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"LouisLouis19"},"content":"        } else if (!startTime.equals(midnight) \u0026\u0026 duration \u003d\u003d 24) {","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"LouisLouis19"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"LouisLouis19"},"content":"        return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"LouisLouis19"},"content":"     * Checks if the given String is null or empty.","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"LouisLouis19"},"content":"     * @param string The string to be checked","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"LouisLouis19"},"content":"     * @return True if String is null or empty, false otherwise","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"3m0W33D"},"content":"    public static boolean isStringNullOrEmpty(String string) {","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"3m0W33D"},"content":"        return string \u003d\u003d null || string.isBlank();","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"     * Checks if the given name is a valid file name.","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"     * @param name The string to be checked.","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"     * @return True if name is a valid file name, false otherwise.","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"    public static boolean isValidFileName(String name) {","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"        if (name \u003d\u003d null || name.isBlank() || name.length() \u003e CommonFormat.MAX_FILENAME_LENGTH) {","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"        boolean isOnlyAscii \u003d name.chars()","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"                .allMatch(c -\u003e CommonFormat.STARTING_ASCII \u003c\u003d c \u0026\u0026 c \u003c\u003d CommonFormat.ENDING_ASCII);","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"        boolean hasIllegalChar \u003d name.chars().anyMatch(x -\u003e CommonFormat.ILLEGAL_CHARACTERS.contains((char) x));","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"        if (!isOnlyAscii || hasIllegalChar) {","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"            Paths.get(name.trim());","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"        } catch (InvalidPathException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"     * Returns the filename without its file extension of a given full filename.","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"     * @param filename The filename string to be extracted.","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"Woolicious98"},"content":"     * @return A string of the file name without its file extension.","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"Woolicious98"},"content":"    public static String getFileNameOnly(String filename) {","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"        assert filename !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"        String[] string \u003d filename.split(\"\\\\.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"        if (string !\u003d null \u0026\u0026 string.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"Woolicious98"},"content":"            return string[0];","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"Woolicious98"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"LouisLouis19"},"content":"     * Function to get today\u0027s day of the week.","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"LouisLouis19"},"content":"     * @return A string indicating today\u0027s day","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"LouisLouis19"},"content":"    public static String getCurrentDay() {","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"LouisLouis19"},"content":"        String currentDay \u003d LocalDate.now().getDayOfWeek().toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"LouisLouis19"},"content":"        return currentDay;","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"3m0W33D"},"content":"     * Returns a boolean if the index give is valid.","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"3m0W33D"},"content":"     * @param index The index to check","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"3m0W33D"},"content":"     * @param listOfModule The full list of modules","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"3m0W33D"},"content":"     * @return True if the index is valid or else it is false","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":219,"author":{"gitId":"3m0W33D"},"content":"    public static boolean isValidIndex(int index, String[] listOfModule) {","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"3m0W33D"},"content":"        return listOfModule.length \u003e\u003d index \u0026\u0026 index \u003e 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":48,"3m0W33D":97,"Woolicious98":77}},{"path":"src/main/java/terminus/common/DaysOfWeekEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"public enum DaysOfWeekEnum {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"    MONDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"    TUESDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"    WEDNESDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"    THURSDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"    FRIDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"    SATURDAY,","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"    SUNDAY","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":11}},{"path":"src/main/java/terminus/common/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.common;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public class Messages {","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"     * Help Command Messages","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    public static final String HELP_MENU_MESSAGE \u003d \"\\nHelp Menu\\n---------\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_ADD \u003d \"Add an item into your list.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_DELETE \u003d \"Delete an item from your list.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_VIEW \u003d \"View all items or view an individual items\";","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_BACK \u003d \"Returns to the parent workspace.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_EXIT \u003d \"Exits the program.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_HELP \u003d \"Prints the help page.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_NOTE \u003d \"Move to notes workspace.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    public static final String MESSAGE_COMMAND_SCHEDULE \u003d \"Move to schedules workspace.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_QUESTION \u003d \"Move to questions workspace.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_TEST_QUESTION \u003d \"Test yourself with Active Recall.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    public static final String MESSAGE_COMMAND_TIMETABLE \u003d \"Displays all your schedule.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_MODULE \u003d \"Move to the module workspace\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_ADD_MODULE \u003d \"Adds a module\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_MODULE_DELETE \u003d \"Deletes a module\";","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_MODULE_VIEW \u003d \"View all modules available\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_EXPORT \u003d \"Export all existing notes into a pdf file.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_UPDATE_MODULE \u003d \"Updates the module name\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_RELOAD \u003d \"Reload the contents of notes for this module.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    public static final String CONTENT_MESSAGE_HEADER \u003d \"List of Content\\n---------------\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    public static final String CONTENT_MESSAGE_FOOTER \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"            \"\\nRerun the same command with an index behind to view the content.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_RESPONSE_DELETE \u003d \"Your %s on \u0027%s\u0027 has been deleted!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_RESPONSE_ADD \u003d \"Your %s on \u0027%s\u0027 has been added!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_RESPONSE_MODULE_ADD \u003d \"Module %s has been added\";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_RESPONSE_MODULE_FORMAT \u003d \"%d. %s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_RESPONSE_NO_MODULES \u003d \"You do not have any modules.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_RESPONSE_MODULE_DELETE \u003d \"Deleted module %s.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_RESPONSE_RELOAD_NOTE \u003d \"Your Notes for %s is being reloaded.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"     * Error Messages","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_TAG \u003d \"Error: \";","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    public static final String INVALID_ARGUMENT_FORMAT_MESSAGE_EXCEPTION \u003d \"%s %s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    public static final String INVALID_ARGUMENT_FORMAT_MESSAGE \u003d \"Format: %s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    public static final String ERROR_MESSAGE_INVALID_INPUT \u003d ERROR_MESSAGE_TAG + \"Invalid input provided.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    public static final String ERROR_MESSAGE_MISSING_ARGUMENTS \u003d ERROR_MESSAGE_TAG + \"Missing arguments or Invalid \"","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        + \"arguments.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_EMPTY_CONTENTS \u003d ERROR_MESSAGE_TAG + \"Content not found.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"    public static final String ERROR_MESSAGE_INVALID_NUMBER \u003d ERROR_MESSAGE_TAG + \"Invalid numerical value provided \"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        + \"or content could not be found.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_INVALID_TIME_FORMAT \u003d ERROR_MESSAGE_TAG + \"Invalid time format %s.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    public static final String ERROR_MESSAGE_INVALID_LINK \u003d ERROR_MESSAGE_TAG + \"Invalid link %s.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"    public static final String ERROR_MESSAGE_INVALID_DAY \u003d ERROR_MESSAGE_TAG + \"Invalid day %s.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"    public static final String ERROR_MESSAGE_INVALID_DURATION \u003d ERROR_MESSAGE_TAG + \"Invalid duration %d.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"    public static final String ERROR_MESSAGE_SCHEDULE_OVERFLOW \u003d ERROR_MESSAGE_TAG","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"        + \"Please set schedules on separate days.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_DUPLICATE_NAME \u003d ERROR_MESSAGE_TAG + \"Duplicate name found.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    public static final String ERROR_MESSAGE_NO_QUESTIONS \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"            \"There are no questions to be tested on. Type \u0027questions add\u0027 to get started\";","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"    public static final String ERROR_MESSAGE_INVALID_DURATION_FORMAT \u003d \"Invalid duration format.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_FILES_NOT_DELETED \u003d \"Unable to delete some file.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_FILE \u003d \"Unable to save/load file: %s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_FOLDER \u003d \"Unable to save/load folder: %s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    public static final String EMPTY_CONTENT_LIST_MESSAGE \u003d \"You do not have any content in this workspace.\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"    public static final String ERROR_MESSAGE_MODULE_WHITESPACE \u003d \"Module name cannot contain any whitespaces!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    public static final String ERROR_MESSAGE_MODULE_EXIST \u003d \"Module already exist!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_CHANGE_FILE_NAME \u003d \"Unable to change file name\";","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_STORAGE_INVALID_ACTION \u003d \"Invalid storage operation detected\";","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_STORAGE_INVALID_TYPE \u003d \"Invalid storage type detected\";","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_STORAGE_CREATE_FOLDER \u003d \"Unable to create folder : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_STORAGE_CREATE_FILE \u003d \"Unable to create file : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_STORAGE_READ_FILE \u003d \"Unable to read file : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_STORAGE_FILE_TOO_LARGE \u003d \"File too large detected : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_STORAGE_FILE_EXIST \u003d \"Unable to create file/folder, name already exists : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_STORAGE_FILE_NOT_DELETED \u003d \"Unable to delete the file/folder : %s.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_STORAGE_CLEAN_FILE \u003d \"Unable to remove some files in folder : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_STORAGE_WRITE_FILE \u003d \"Unable to write contents into file : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_STORAGE_WRITE_DATA_NULL \u003d \"Data to be written is empty into file : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MISSING_MODULE_MANAGER \u003d \"Error: Module Manager cannot be null.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_FILE_FOLDER_MISMATCH \u003d \"Error file was detected as folder : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MISSING_FOLDER \u003d \"Unable to find folder : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MISSING_FILE \u003d \"Unable to find file : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_GET_FILES \u003d \"Unable to get files from folder : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_GET_FILE_CONTENT \u003d \"Unable to get file content type : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_STORAGE_DISABLE_RESPONSE \u003d \"We have detect an issue with storage, we will be \"","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"            + \"disabling the storage temporary until the TermiNUS exit where we will attempt to save your data 1 last\"","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"            + \" time.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_FILE_BUFFERED_READER \u003d \"Unable to collect file contents : %s\";","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_EXPORT_MISSING_NOTE \u003d \"There are no notes to export.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_INVALID_FILE_PATH \u003d \"Invalid file/folder path : %s\";","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_JSON_FILTER \u003d \"Invalid main json file : contained invalid data\";","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"     * Banners","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"    public static final String MAIN_BANNER \u003d \"Welcome to TermiNUS!\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"LouisLouis19"},"content":"    public static final String MAIN_REMINDER \u003d \"This is your schedule today:\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"    public static final String NOTE_BANNER \u003d \"You have %d note(s) inside this workspace.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"    public static final String SCHEDULE_BANNER \u003d \"You have %d link(s) in this workspace.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"    public static final String QUESTION_BANNER \u003d \"You have %d question(s) in this workspace.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"     * Schedules and Timetables","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_EMPTY_DAILY_SCHEDULE \u003d \"You have no schedule for today.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_CONFLICTING_SCHEDULE \u003d \"Your new schedule has conflicts with:\";","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"    public static final String EMPTY_SCHEDULE_FOR_THE_DAY \u003d \"You have no schedule for %s.\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"    public static final String EMPTY_SCHEDULE_FOR_THE_WEEK \u003d \"You have no schedule for the week.\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"     * Active Recall","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"    public static final String ACTIVE_RECALL_ENTER_TO_CONTINUE_MESSAGE \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"kelvneo"},"content":"        \"When you are ready, press [Enter] to continue.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"    public static final String[] ACTIVE_RECALL_SESSION_END_MESSAGE \u003d {\"This training session has ended.\",","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"        \"Returning you back to main program.\"};","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"kelvneo"},"content":"    public static final String[] ACTIVE_RECALL_ASK_QUESTION_DIFFICULTY_MESSAGE \u003d {\"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"kelvneo"},"content":"        \"How did you find the question?\",","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"kelvneo"},"content":"        \"[1] Easy; [2] Normal; [3] Hard; [E] Exit\"};","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"kelvneo"},"content":"     * Notes Export","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"    public static final String RESPONSE_EXPORT \u003d \"Exporting notes... Check the data folder.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"3m0W33D"},"content":"    public static final String FAIL_TO_EXPORT \u003d ERROR_MESSAGE_TAG + \"Unable to export file to pdf.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"3m0W33D"},"content":"    public static final String UPDATE_MODULE_RESPONSE_MESSAGE \u003d \"Updated %s to %s successfully.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_COMMAND_GO \u003d \"Go to a specific module\u0027s workspace\";","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"3m0W33D"},"content":"    public static final String ERROR_MESSAGE_MODULE_NOT_FOUND \u003d ERROR_MESSAGE_TAG + \"Module not found! Type \u0027module \"","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"3m0W33D"},"content":"        + \"view\u0027 for the list of modules.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"3m0W33D"},"content":"    public static final String ERROR_MESSAGE_INVALID_MODULE_NAME \u003d ERROR_MESSAGE_TAG + \"Invalid module name. Module \"","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"3m0W33D"},"content":"        + \"name cannot contain \"","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"3m0W33D"},"content":"        + \"special characters and must be within 30 characters\";","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_QUESTION_PROMPT \u003d \"[1/2/3/E] \u003e\u003e \";","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"3m0W33D"},"content":"    public static final String ERROR_MESSAGE_INVALID_NOTE_NAME \u003d ERROR_MESSAGE_TAG + \"Invalid Note name. Note name \"","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"3m0W33D"},"content":"        + \"cannot contain special\"","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"3m0W33D"},"content":"        + \" characters and be longer than 30 characters\";","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"kelvneo":64,"LouisLouis19":10,"Woolicious98":51,"3m0W33D":17}},{"path":"src/main/java/terminus/common/TerminusLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"public class TerminusLogger {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(\"TermiNUS\");","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"     * Initializes TerminusLogger.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"     * @throws IOException When \u0027terminus.log\u0027 is unable to be written to.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    public static void initializeLogger() throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        consoleHandler.setLevel(Level.OFF);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"        LOGGER.addHandler(consoleHandler);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        FileHandler fileHandler \u003d new FileHandler(\"terminus.log\");","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        fileHandler.setLevel(Level.INFO);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        LOGGER.addHandler(fileHandler);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"     * Initializes TerminusLogger that prints only warnings and above.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    public static void initializeLoggerWarnings() {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        consoleHandler.setLevel(Level.WARNING);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        LOGGER.addHandler(consoleHandler);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"     * Writes a debug message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"     * Equivalent to Level.FINE.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    public static void debug(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        LOGGER.fine(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"     * Writes a verbose debug message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"     * Equivalent to Level.FINER.","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    public static void verboseDebug(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        LOGGER.finer(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"     * Writes a very verbose debug message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"     * Mainly used for printing stack traces and non-important strings.","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"     * Equivalent to Level.FINEST.","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    public static void veryVerboseDebug(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        LOGGER.finest(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"     * Writes an information message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"    public static void info(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        LOGGER.info(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"     * Writes a warning message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"    public static void warning(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"        LOGGER.warning(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"     * Writes a warning message with a Throwable to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"     * @param throwable The Throwable to tag to the log message.","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"    public static void warning(String message, Throwable throwable) {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"        LOGGER.log(Level.WARNING, message, throwable);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"     * Writes a severe message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"    public static void severe(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"        LOGGER.severe(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"     * Writes a warning message with a Throwable to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"     * @param throwable The Throwable to tag to the log message.","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"    public static void severe(String message, Throwable throwable) {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"        LOGGER.log(Level.SEVERE, message, throwable);","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kelvneo":119}},{"path":"src/main/java/terminus/content/Content.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.content;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":" * Content class to represent any data related object.","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"public class Content {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"    protected String name;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"    protected String data;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"    public static final String TYPE \u003d \"\";","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    private static final String DISPLAY_MESSAGE \u003d \"Name: %s\\nContent:\\n%s\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    public Content(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"     * Initializes a Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"     * @param name The name attribute of the Content.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"     * @param data The data attribute of the Content.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    public Content(String name, String data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"        this.data \u003d data;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    public String getName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"        return name;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    public String getData() {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        return data;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    public void setData(String data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        this.data \u003d data;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"     * Returns all the attributes of the Content object formatted by its display message.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"     * @return A string containing all the attributes of the Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"    public String getDisplayInfo() {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"        return String.format(DISPLAY_MESSAGE, name, data);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"     * Returns attributes of the Content object to be listed by the view command.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"     * @return A string containing attributes of the Content object based on the view command.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"    public String getViewDescription() {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"        return this.name;","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":45,"kelvneo":1,"Woolicious98":16}},{"path":"src/main/java/terminus/content/ContentManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.content;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":" * ContentManager class to manage any Content related object.","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":" *","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":" * @param \u003cT\u003e Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"public class ContentManager\u003cT extends Content\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    private ArrayList\u003cT\u003e contents;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"     * Creates a ContentManager object.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"     * It will initialize a new ArrayList for its contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    public ContentManager() {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    public void setContent(ArrayList\u003cT\u003e contents) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"        this.contents \u003d contents;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    public ArrayList\u003cT\u003e getContents() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        return contents;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     * Returns the total size of the ArrayList of type Content.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"     * @return The total size of ArrayList of type Content.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    public int getTotalContents() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        return contents.size();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"     * Returns a string containing a list of all Content information from ArrayList contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"     * @return String of a list of all Content information in ArrayList contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    public String listAllContents() {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        for (T n : contents) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            result.append(String.format(\"%d. %s\\n\", i, n.getViewDescription()));","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"            i++;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        return result.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"     * Returns string of all information of a Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"     * @param contentNumber Number to identify a element in the ArrayList.","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"     * @return A String of all information of the specified Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when given number is ArrayOutOfBounds.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"    public String getContentData(int contentNumber) throws InvalidArgumentException {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        if (isNotValidNumber(contentNumber)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        return contents.get(contentNumber - 1).getDisplayInfo();","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"     * Return deleted Content object name.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"     * @param contentNumber Number to identify a element in the ArrayList.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"     * @return The string name of the deleted Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when given contentNumber is ArrayOurOfBounds.","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"    public String deleteContent(int contentNumber) throws InvalidArgumentException {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"        if (isNotValidNumber(contentNumber)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"        String deletedContentName \u003d contents.get(contentNumber - 1).getName();","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"        contents.remove(contentNumber - 1);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"        return deletedContentName;","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"     * Adds a Content object into the ArrayList contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"     * @param content The Content object to be added into the ArrayList contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"    public void add(T content) {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        contents.add(content);","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"    private boolean isNotValidNumber(int number) {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"        return number \u003c 1 || number \u003e contents.size();","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"     * Replaces the current ArrayList for a new empty ArrayList.","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    public void purgeData() {","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        this.contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"     * Checks if name is unique in the Arraylist contents.","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"     * @param name The new content name to be added.","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"     * @return True if there is a similar name, false otherwise.","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"    public boolean isDuplicateName(String name) {","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"        if (contents.size() \u003c 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"        return contents.stream().anyMatch(x -\u003e x.getName().toLowerCase().equals(name.toLowerCase()));","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":37,"kelvneo":3,"Woolicious98":72,"3m0W33D":6}},{"path":"src/main/java/terminus/content/Link.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.content;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":" * Link class to represent a content of type link.","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"public class Link extends Content {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"    private String day;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"    private int duration;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"    private String link;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    public static final String TYPE \u003d \"Z\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    private static final String DISPLAY_LINK_MESSAGE \u003d \"%s (%s, %s - %s): %s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    public Link(String name, String day, LocalTime startTime, int duration, String link) {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"        super(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    public String getDay() {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"        return day;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    public void setDay(String day) {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        return startTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    public void setStartTime(LocalTime startTime) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    public int getDuration() {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        return duration;","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"    public void setDuration(int duration) {","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"    public String getLink() {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"        return link;","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"    public void setLink(String link) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the end time from the start time and duration of the Link object.","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"     * @return A LocalTime object containing the end time of the Link","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        LocalTime endTime \u003d startTime.plusHours(duration);","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        LocalTime midnight \u003d LocalTime.of(00, 00);","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        if (endTime.equals(midnight)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"            endTime \u003d LocalTime.of(23, 59);","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"        return endTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"     * Returns all the attributes of the Link object.","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"     * @return A string containing all the attributes of the Link object.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"    public String getDisplayInfo() {","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"        return String.format(DISPLAY_LINK_MESSAGE, this.name, day, startTime, getEndTime(), link);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"     * Returns all the attributes\u0027 information of the Link object.","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"     * @return A method to display all the attributes of the Link object.","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"    public String getViewDescription() {","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"        return getDisplayInfo();","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":89,"Woolicious98":3}},{"path":"src/main/java/terminus/content/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.content;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public class Note extends Content {","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"    public static final String TYPE \u003d \"N\";","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    public Note(String name, String data) {","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"        super(name, data);","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"Woolicious98":10}},{"path":"src/main/java/terminus/content/Question.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.content;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import terminus.activerecall.DifficultyModifier;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"public class Question extends Content {","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"    private double weight;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    public Question(String question, String answer) {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"        super(question, answer);","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"        this.weight \u003d 0.5;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"     * Gets the question data.","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"     * Equivalent to getName()","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"     * @return The question data.","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    public String getQuestion() {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        return this.name;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"     * Gets the answer data.","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"     * Equivalent to getData()","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"     * @return The answer data.","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    public String getAnswer() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        return this.data;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    private void setWeightSafely() {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        if (weight \u003c DifficultyModifier.MIN_VALUE) {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"            this.weight \u003d DifficultyModifier.MIN_VALUE;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        } else if (weight \u003e DifficultyModifier.MAX_VALUE) {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"            this.weight \u003d DifficultyModifier.MAX_VALUE;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"     * Get the randomness weight of the question.","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"     * @return The randomness weight of the question.","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    public double getWeight() {","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        setWeightSafely();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        return weight;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"     * Set the randomness weight of the question.","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"     * The values are restricted to between DifficultyModifier.MIN_VALUE and DifficultyModifier.MAX_VALUE.","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"     * @param weight The randomness weight of the question.","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    public void setWeight(double weight) {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        setWeightSafely();","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":62}},{"path":"src/main/java/terminus/exception/InvalidArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.exception;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":" * Invalid Argument Exception class which handles exception when argument from user command is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"public class InvalidArgumentException extends Exception {","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    private final String format;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"        this(null, message);","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    public InvalidArgumentException(String format, String message) {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"        super(message);","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"        this.format \u003d format;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        return format;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":3,"kelvneo":11,"3m0W33D":8}},{"path":"src/main/java/terminus/exception/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.exception;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":" * Invalid Command Exception class which handles exception when user command is not found.","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"        super(message);","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":8,"LouisLouis19":3}},{"path":"src/main/java/terminus/exception/InvalidFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.exception;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public class InvalidFileException extends Exception {","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"    public InvalidFileException(String message) {","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"        super(message);","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"Woolicious98":8}},{"path":"src/main/java/terminus/module/ModuleManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"public class ModuleManager {","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"    private HashMap\u003cString, NusModule\u003e moduleMap;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    public ModuleManager() {","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"        moduleMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"     * Returns a NusModule Object given a module name.","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     * @return The NusModule Object for the given module name","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public NusModule getModule(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"        return moduleMap.get(moduleName.toUpperCase());","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     * Adds a new module to the moduleMap.","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name of the new module","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    public void addModule(String moduleName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        moduleMap.put(moduleName.toUpperCase(), new NusModule());","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     * Adds a module and also set the specific NusModule.","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name of the new module","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"     * @param module The NusModule object to set","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    public void setModule(String moduleName, NusModule module) {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        moduleMap.put(moduleName.toUpperCase(), module);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"     * Returns a String array contains the list of module names.","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"     * @return String array with the list of module names","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    public String[] getAllModules() {","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        return moduleMap.keySet().toArray(new String[0]);","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"     * Deletes the specified module.","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name of the module to remove","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    public void removeModule(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        if (moduleMap.remove(moduleName.toUpperCase()) \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"            moduleMap.remove(moduleName);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":58,"Woolicious98":3}},{"path":"src/main/java/terminus/module/NusModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.module;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Content;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":" * NusModule class to represent a Module object.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class NusModule {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    private final transient ContentManager\u003cNote\u003e noteManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    private final ContentManager\u003cLink\u003e linkManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private final ContentManager\u003cQuestion\u003e questionManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"     * Creates a NusModule object.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public NusModule() {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"        noteManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"        linkManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        questionManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     * Returns a ContentManager object based on the provided class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"     * @param type Content class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"     * @param \u003cT\u003e  Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     * @return The ContentManager object based on the provided class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    public \u003cT extends Content\u003e ContentManager\u003cT\u003e getContentManager(Class\u003cT\u003e type) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(String.format(\"Get ContentManager from NusModule with provided class type: %s\", type));","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cT\u003e result \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        if (type \u003d\u003d Note.class) {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"            result \u003d (ContentManager\u003cT\u003e) this.noteManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        } else if (type \u003d\u003d Link.class) {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"            result \u003d (ContentManager\u003cT\u003e) this.linkManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        } else if (type \u003d\u003d Question.class) {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            result \u003d (ContentManager\u003cT\u003e) this.questionManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"            // Fatal error encountered","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.severe(String.format(\"Class type provided not found: %s\", type));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"            assert false;","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"            return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"ContentManager found\");","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        return result;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":14,"kelvneo":5,"3m0W33D":6,"Woolicious98":28}},{"path":"src/main/java/terminus/parser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"public abstract class CommandParser {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    private static final String SPACE_DELIMITER \u003d \"\\\\s+\";","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    protected String workspace;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    protected final HashMap\u003cString, Command\u003e commandMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     * Initializes the commandMap. Adds some default commands to it.","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"     * @param workspace The name of the workspace.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    public CommandParser(String workspace) {","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        this.commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        this.workspace \u003d workspace;","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        addCommand(\"exit\", new ExitCommand());","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        addCommand(\"help\", new HelpCommand(this));","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     * Parses the command and its arguments.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"     * @param command The user input command.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"     * @return The Command object to be executed.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidCommandException  when there is no command or empty command.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments could not be parsed.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    public Command parseCommand(String command)","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        String[] commandLine \u003d command.strip().split(SPACE_DELIMITER, 2);","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing Command: \" + command);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        assert commandLine.length \u003c\u003d 2 \u0026\u0026 commandLine.length \u003e 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        String cmdName \u003d commandLine[0];","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        Command currentCommand \u003d commandMap.get(cmdName.strip().toLowerCase(Locale.ROOT));","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        if (currentCommand \u003d\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidCommandException(\"Command not found! Type \u0027help\u0027 for a list of commands.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        String cmdData \u003d null;","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        if (commandLine.length \u003e 1) {","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"            cmdData \u003d commandLine[1];","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing arguments.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        currentCommand.parseArguments(cmdData);","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        return currentCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    public Set\u003cString\u003e getCommandList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        return commandMap.keySet();","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"    public abstract String getWorkspaceBanner(ModuleManager moduleManager);","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"     * Returns the list of items in the help menu.","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"     * @return Array of strings contain the help messages.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"    public String[] getHelpMenu() {","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        return commandMap.entrySet()","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"                .stream()","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"                .map((i) -\u003e String.format(\"%s : %s\\nFormat: %s\\n\",","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"                        i.getKey(),","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"                        i.getValue().getHelpMessage(),","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"                        i.getValue().getFormat()))","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"     * Adds a command to the commandMap.","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"     * @param cmdName The name of the command.","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"     * @param command The actual command object.","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"    protected void addCommand(String cmdName, Command command) {","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"        commandMap.put(cmdName, command);","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"     * Returns the name of the current workspace.","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"     * @return The name of the workspace.","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspace() {","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"        return workspace;","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"     * Sets the existing workspace for the module.","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"     * @param workspace The name of the workspace","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"    public void setWorkspace(String workspace) {","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"3m0W33D"},"content":"        this.workspace \u003d workspace;","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":23,"LouisLouis19":4,"3m0W33D":73,"Woolicious98":10}},{"path":"src/main/java/terminus/parser/InnerModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"public abstract class InnerModuleCommandParser extends CommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"     * Initializes the commandMap. Adds some default commands to it.","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"     * @param workspace The name of the workspace.","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    public InnerModuleCommandParser(String workspace) {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"        super(workspace);","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     * Returns the module name for the current workspace.","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     * @return The string containing the module name","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    public String getModuleName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        return moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"     * Sets the module name for the current workspace.","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name to set","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    public void setModuleName(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    public Command parseCommand(String command) throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d super.parseCommand(command);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        cmd.setModuleName(moduleName);","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        return cmd;","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"     * Returns a workspace that contains the moduleName and the current work space.","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"     * @return The consolidated workspace name","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspace() {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        return getWorkspace(false);","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspace(boolean isOriginal) {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        if (isOriginal) {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"            return super.getWorkspace();","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        return moduleName + \" \u003e \" + super.getWorkspace();","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":57,"Woolicious98":4}},{"path":"src/main/java/terminus/parser/LinkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.link.AddLinkCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":" * LinkCommandParser class to manage schedule-related commands.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"public class LinkCommandParser extends InnerModuleCommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    private static LinkCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private LinkCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"        super(CommonFormat.COMMAND_SCHEDULE);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the command map for the schedule workspace.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"     * @return A LinkCommandParser object which contains the command map for the schedule workspace.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"    public static LinkCommandParser getInstance() {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new LinkCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"            parser.addCommand(CommonFormat.COMMAND_ADD, new AddLinkCommand());","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_VIEW, new ViewCommand(Link.class));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_DELETE, new DeleteCommand(Link.class));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        return parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the opening description of the workspace.","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The current module containing the array list of all the links.","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     * @return The string containing a description of the number of links in the workspace.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        return String.format(Messages.SCHEDULE_BANNER,","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"                moduleManager.getModule(getModuleName()).getContentManager(Link.class).getContents().size());","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":27,"kelvneo":4,"3m0W33D":12,"Woolicious98":7}},{"path":"src/main/java/terminus/parser/MainCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static terminus.common.CommonUtils.getCurrentDay;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.GoCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.TimetableCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.ModuleCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.timetable.Timetable;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class MainCommandParser extends CommandParser {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    private static MainCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    private MainCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"        super(\"\");","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    public static MainCommandParser getInstance() {","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new MainCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_MODULE, new ModuleCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_GO, new GoCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"            parser.addCommand(CommonFormat.COMMAND_TIMETABLE, new TimetableCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        return parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        String mainReminder \u003d getMainReminder(moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MAIN_BANNER + mainReminder;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    public String getMainReminder(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"        String currentDay \u003d getCurrentDay();","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"        String dailySchedule \u003d timetable.getDailySchedule(currentDay);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        if (dailySchedule !\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"            result.append(Messages.MAIN_REMINDER);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"            result.append(dailySchedule);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"            result.append(Messages.MESSAGE_EMPTY_DAILY_SCHEDULE);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"        return result.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":20,"kelvneo":4,"3m0W33D":25,"Woolicious98":2}},{"path":"src/main/java/terminus/parser/ModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.AddModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.DeleteModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.UpdateModuleCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.ViewModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"public class ModuleCommandParser extends CommandParser {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    private static ModuleCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     * Initializes the commandMap. Adds some default commands to it.","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    private ModuleCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"        super(CommonFormat.COMMAND_MODULE);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    public static ModuleCommandParser getInstance() {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new ModuleCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_ADD, new AddModuleCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_VIEW, new ViewModuleCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_DELETE, new DeleteModuleCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_UPDATE,new UpdateModuleCommand());","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        return parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        return String.format(\"You have %d modules\", moduleManager.getAllModules().length);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":36,"Woolicious98":2}},{"path":"src/main/java/terminus/parser/ModuleWorkspaceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.NotesCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.QuestionCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ScheduleCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class ModuleWorkspaceCommandParser extends CommandParser {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    private static ModuleWorkspaceCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     * Initializes the commandMap. Adds some default commands to it.","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private ModuleWorkspaceCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"        super(\"\");","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    public static ModuleWorkspaceCommandParser getInstance() {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new ModuleWorkspaceCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_NOTE, new NotesCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_SCHEDULE, new ScheduleCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_QUESTION, new QuestionCommand());","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        return parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    public Command parseCommand(String command) throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d super.parseCommand(command);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        if (!(cmd instanceof BackCommand)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"            cmd.setModuleName(getWorkspace());","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        return cmd;","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        return \"Entering \" + getWorkspace() + \" workspace\";","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":2,"3m0W33D":44,"Woolicious98":2}},{"path":"src/main/java/terminus/parser/NoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.note.AddNoteCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.content.note.DeleteNoteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.note.ExportNoteCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.content.note.ReloadNoteCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"public class NoteCommandParser extends InnerModuleCommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    private static NoteCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private NoteCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        super(CommonFormat.COMMAND_NOTE);","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    public static NoteCommandParser getInstance() {","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new NoteCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_ADD, new AddNoteCommand());","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_VIEW, new ViewCommand(Note.class));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_DELETE, new DeleteNoteCommand(Note.class));","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_EXPORT, new ExportNoteCommand());","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_RELOAD, new ReloadNoteCommand());","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        return parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        return String.format(Messages.NOTE_BANNER,","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"                moduleManager.getModule(getModuleName()).getContentManager(Note.class).getContents().size());","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":4,"3m0W33D":23,"Woolicious98":14}},{"path":"src/main/java/terminus/parser/QuestionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.question.AddQuestionCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.question.TestCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"public class QuestionCommandParser extends InnerModuleCommandParser {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    private static QuestionCommandParser parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser() {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"        super(CommonFormat.COMMAND_QUESTION);","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    public static QuestionCommandParser getInstance() {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"            parser \u003d new QuestionCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_ADD, new AddQuestionCommand());","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_VIEW, new ViewCommand\u003c\u003e(Question.class));","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_DELETE, new DeleteCommand\u003c\u003e(Question.class));","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_TEST, new TestCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        return parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        return String.format(Messages.QUESTION_BANNER,","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"            moduleManager.getModule(getModuleName()).getContentManager(Question.class).getContents().size());","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":38}},{"path":"src/main/java/terminus/storage/FilterManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":" * FilterManager class handles the filtration of the ModuleManager from json file.","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"public class FilterManager {","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"     * Filters the data in ModuleManager.","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The data from the main json used throughout TermiNUS.","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    public void filter(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"        assert moduleManager !\u003d null;","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"        String[] listOfModules \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"        if (listOfModules \u003d\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        for (String module : listOfModules) {","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"            if (!isModuleValid(module)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"                moduleManager.removeModule(module);","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"            } else {","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"                NusModule moduleObject \u003d moduleManager.getModule(module);","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"                if (moduleObject \u003d\u003d null) {","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"                    moduleManager.removeModule(module);","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"                    continue;","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"                }","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"                ContentManager\u003cLink\u003e linkContentManager \u003d moduleObject.getContentManager(Link.class);","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"                filterLink(linkContentManager);","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"                ContentManager\u003cQuestion\u003e questionContentManager \u003d moduleObject.getContentManager(Question.class);","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"                filterQuestion(questionContentManager);","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"     * Filters the link in link content manager.","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"     * @param linkContentManager The link content manager storing the list of links from a module.","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"    protected void filterLink(ContentManager\u003cLink\u003e linkContentManager) {","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        if (linkContentManager \u003d\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        ArrayList\u003cLink\u003e linkArrayList \u003d linkContentManager.getContents();","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        ArrayList\u003cLink\u003e validArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        for (Link link : linkArrayList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"            if (isScheduleValid(link)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"                validArrayList.add(link);","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.setContent(validArrayList);","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"     * Filters the question in question content manager.","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"     * @param questionContentManager The question content manager storing the list of questions from a module.","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"    protected void filterQuestion(ContentManager\u003cQuestion\u003e questionContentManager) {","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        if (questionContentManager \u003d\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"        ArrayList\u003cQuestion\u003e questionArrayList \u003d questionContentManager.getContents();","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        ArrayList\u003cQuestion\u003e validQuestionArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        for (Question question : questionArrayList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"            if (isQuestionValid(question)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"                validQuestionArrayList.add(question);","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        questionContentManager.setContent(validQuestionArrayList);","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"     * Checks if given Module name is valid for TermiNUS.","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"     * @param module The module name to be tested on.","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"     * @return True if given module name is valid, false otherwise.","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"    public static boolean isModuleValid(String module) {","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        if (CommonUtils.isStringNullOrEmpty(module)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"        } else if (!CommonUtils.isValidFileName(module)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"        } else if (!module.matches(CommonFormat.SPACE_NEGATED_DELIMITER)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"        } else if (!module.equals(module.toUpperCase())) {","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"        return isValid;","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"     * Checks if given Question object is valid for TermiNUS.","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"     * @param question The given question to be tested on.","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"     * @return True if given question object is valid, false otherwise.","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"    public static boolean isQuestionValid(Question question) {","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        if (question \u003d\u003d null) {","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"            return isValid;","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"        if (CommonUtils.isStringNullOrEmpty(question.getAnswer())) {","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"        } else if (CommonUtils.isStringNullOrEmpty(question.getQuestion())) {","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"        } else if (Double.isNaN(question.getWeight())) {","lastModifiedDate":"2021-11-06"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"        return isValid;","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"     * Checks if given Schedule object is valid for TermiNUS.","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"     * @param link The given Schedule to be tested on.","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"     * @return True if given schedule object is valid, false otherwise.","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"    public static boolean isScheduleValid(Link link) {","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"        if (link \u003d\u003d null) {","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-11-06"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"            return isValid;","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"        if (!CommonUtils.isValidDay(link.getDay())) {","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"        } else if (!CommonUtils.isValidDuration(link.getDuration())) {","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"        } else if (CommonUtils.isStringNullOrEmpty(link.getName())) {","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"            if (!CommonUtils.isValidUrl(link.getLink())) {","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"                isValid \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"            CommonUtils.convertToLocalTime(link.getStartTime().toString());","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"            if (CommonUtils.hasDurationOverflow(link.getStartTime(), link.getDuration())) {","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"                isValid \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"        return isValid;","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"Woolicious98":159}},{"path":"src/main/java/terminus/storage/FolderStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":" * FolderStorage class to handle Module folder storage operations.","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"public class FolderStorage extends Storage {","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"    private Path baseDirectory;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    public FolderStorage(Path baseDirectory) {","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"        this.baseDirectory \u003d baseDirectory;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"     * Executes the specified operation with the given arguments.","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"     * @param module The new module name.","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"     * @param deletedModule The old module or old module name.","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"     * @param action The operation type to determine which operation to execute.","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    public void execute(String module, String deletedModule, StorageActionEnum action) throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        switch (action) {","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        case CREATE:","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(String.format(\"Creating a folder for module %s\", module));","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"            createModuleFolder(module);","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        case DELETE:","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(String.format(\"Deleting the folder : %s\", deletedModule));","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"            deleteModuleFolder(deletedModule);","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        case UPDATE:","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(String.format(\"Renaming the folder %s to %s\", deletedModule, module));","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"            renameModuleFolder(module, deletedModule);","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        default:","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(Messages.ERROR_STORAGE_INVALID_TYPE);","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"     * Creates a folder with the given module name.","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"     * @param module The name of the folder to be created.","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"    protected void createModuleFolder(String module) throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"            Path moduleFolder \u003d getAppendPath(baseDirectory, module);","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"            delete(moduleFolder);","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"            createFolder(moduleFolder);","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        } catch (InvalidFileException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_STORAGE_CREATE_FOLDER, module));","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"     * Deletes a folder with the given name.","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"     * @param deletedModule The name of the folder to be deleted.","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"    protected void deleteModuleFolder(String deletedModule) throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        Path moduleFolder \u003d getAppendPath(baseDirectory, deletedModule);","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        delete(moduleFolder);","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"     * Rename an existing folder to the given new name.","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"     * @param module The new name for the folder.","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"     * @param deletedModule The name of the folder to be renamed.","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"    protected void renameModuleFolder(String module, String deletedModule) throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"        Path newModuleFolder \u003d getAppendPath(baseDirectory, module);","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        Path moduleFolder \u003d getAppendPath(baseDirectory, deletedModule);","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        renameFolder(moduleFolder, newModuleFolder);","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"Woolicious98":85}},{"path":"src/main/java/terminus/storage/JsonStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":" * JsonStorage class to handle any Json file related operations.","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"public class JsonStorage extends Storage {","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    private Path baseDirectory;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private String jsonFileName;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private Path jsonFilePath;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private Gson gson;","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"     * Initialise a JsonStorage object that creates a GsonBuilder for Json loading and saving operation.","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"     * @param baseDirectory The base directory in which all items is stored in.","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"     * @param jsonFileName The name of the main json file used by TermiNUS.","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    public JsonStorage(Path baseDirectory, String jsonFileName) {","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        this.baseDirectory \u003d baseDirectory;","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        this.jsonFileName \u003d jsonFileName;","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        this.gson \u003d new GsonBuilder().setPrettyPrinting().create();","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        this.jsonFilePath \u003d getAppendPath(baseDirectory, jsonFileName);","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"     * Executes the specified operation with the given arguments.","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The Module Manager containing all item information used in TermiNUS.","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"     * @param action The operation type to determine which operation to execute.","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"    public void execute(ModuleManager moduleManager, StorageActionEnum action) throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        switch (action) {","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        case UPDATE:","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(String.format(\"Updating JSON file : %s\", jsonFileName));","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"            saveJson(moduleManager);","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        case CREATE:","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(String.format(\"Creating the main JSON file : %s\", jsonFileName));","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"            createJson();","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        default:","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(Messages.ERROR_STORAGE_INVALID_TYPE);","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"     * Creates the json file.","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"    protected void createJson() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        createFolder(baseDirectory);","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        createFile(jsonFilePath);","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"     * Loads the content from the json file into Module Manager.","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"     * @return The ModuleManager objects containing the contents from the json file.","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"    public ModuleManager loadJson() throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        BufferedReader reader \u003d getBufferedReader(jsonFilePath);","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"            ModuleManager moduleManager \u003d gson.fromJson(reader, ModuleManager.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"            reader.close();","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"            return moduleManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"            try {","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"                reader.close();","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"                throw new InvalidFileException(e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_FILE_BUFFERED_READER, jsonFilePath));","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"     * Saves the contents from ModuleManager back into the json file.","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The Module Manager containing all item information used in TermiNUS.","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"    protected void saveJson(ModuleManager moduleManager) throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"        assert moduleManager !\u003d null;","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        String jsonString \u003d gson.toJson(moduleManager);","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"        writeFile(jsonFilePath, jsonString);","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"     * Sets a new filename for the json file.","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"     * @param newName The new name of the json file.","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"    protected void setJsonFileName(String newName) {","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"        this.jsonFileName \u003d newName;","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"        this.jsonFilePath \u003d getAppendPath(baseDirectory, jsonFileName);","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"Woolicious98":111}},{"path":"src/main/java/terminus/storage/NoteStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":" * NoteStorage class to handle any note related file operations.","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"public class NoteStorage extends Storage {","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private Path baseDirectory;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private static final String FILE_EXTENSION \u003d \".txt\";","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    public static final String CONTENT_TYPE \u003d \"text/plain\";","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    public NoteStorage(Path baseDirectory) {","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"        this.baseDirectory \u003d baseDirectory;","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     * Executes the specified operation with the given arguments.","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The Module Manager containing all item information used in TermiNUS.","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"     * @param module The related module name for the note.","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     * @param deletedNote The deleted note name.","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"     * @param action The operation type to determine which operation to execute.","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    public void execute(ModuleManager moduleManager, String module, String deletedNote, StorageActionEnum action)","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        switch (action) {","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        case CREATE:","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(String.format(\"Adding note file into module folder : %s\", module));","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"            createNoteFile(moduleManager, module);","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        case RELOAD:","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(String.format(\"Refreshing content of notes in module folder : %s\", module));","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"            loadNoteIntoModuleManager(moduleManager, module);","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        case DELETE:","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(String.format(\"Removing note with the name : %s\", deletedNote));","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"            removeNoteFile(module, deletedNote);","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        default:","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(Messages.ERROR_STORAGE_INVALID_TYPE);","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     * Creates a note file.","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The Module Manager containing all item information used in TermiNUS.","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"     * @param module The folder name where the note file should be stored in.","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    protected void createNoteFile(ModuleManager moduleManager, String module) throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        createFolder(baseDirectory);","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        Path moduleFolder \u003d getAppendPath(baseDirectory, module);","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"        createFolder(moduleFolder);","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        ArrayList\u003cNote\u003e noteArrayList \u003d moduleManager.getModule(module).getContentManager(Note.class).getContents();","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d noteArrayList.get(noteArrayList.size() - 1);","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        Path noteFilePath \u003d getAppendPath(moduleFolder, appendFileExtension(note.getName()));","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"        writeFile(noteFilePath, note.getData());","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"     * Deletes the note file given by its name.","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"     * @param module The folder name where the note file should be deleted from.","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"     * @param deletedNoteName The name of the file to be deleted.","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"    protected void removeNoteFile(String module, String deletedNoteName) throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        Path moduleFolder \u003d getAppendPath(baseDirectory, module);","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        Path noteFilePath \u003d getAppendPath(moduleFolder, appendFileExtension(deletedNoteName));","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"        if (Files.isDirectory(noteFilePath)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_FILE_FOLDER_MISMATCH, noteFilePath));","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"        delete(noteFilePath);","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"     * Loads all note contents from the given module folder into ModuleManager.","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The Module Manager containing all item information used in TermiNUS.","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"     * @param module The folder name where the all note files in it should be loaded from.","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"    protected void loadNoteIntoModuleManager(ModuleManager moduleManager, String module) throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        Path moduleFolder \u003d getAppendPath(baseDirectory, module);","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"        File[] listOfNoteFiles \u003d getListOfFiles(moduleFolder);","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e contentManager \u003d moduleManager.getModule(module).getContentManager(Note.class);","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"        contentManager.purgeData();","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"        for (File file : listOfNoteFiles) {","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"            if (isValidNote(file, contentManager)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"                addAndFilterNote(file, contentManager);","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"     * Filters the given file before adding to ContentManager.","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"     * @param file The given file to be checked and added to ContentManager.","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"     * @param contentManager The content manager of Note.","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"    private void addAndFilterNote(File file, ContentManager\u003cNote\u003e contentManager) {","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"            String data \u003d readFile(file.toPath());","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"            if (data !\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"                String noteName \u003d CommonUtils.getFileNameOnly(file.getName());","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"                Note newNote \u003d new Note(noteName, data);","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"                contentManager.add(newNote);","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"            // Ignore all exception and skip the file","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"     * Checks the validity of the given file.","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"     * @param file The file to be checked.","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"     * @param noteContentManager The content manager of Note.","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"     * @return True if the file is a valid note data, otherwise false.","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"    private boolean isValidNote(File file, ContentManager\u003cNote\u003e noteContentManager) {","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"        String fileName \u003d CommonUtils.getFileNameOnly(file.getName());","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"        if (!isValidTextFile(file)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"        } else if (!CommonUtils.isValidFileName(fileName)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"        } else if (noteContentManager.isDuplicateName(fileName)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"        return isValid;","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"     * Saves all notes from the ModuleManager into their respective module folder.","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The Module Manager containing all item information used in TermiNUS.","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"    protected void saveAllNotes(ModuleManager moduleManager) throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"        for (String module : moduleManager.getAllModules()) {","lastModifiedDate":"2021-10-30"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"            Path moduleFolder \u003d getAppendPath(baseDirectory, module);","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"            createFolder(moduleFolder);","lastModifiedDate":"2021-10-30"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"            ContentManager\u003cNote\u003e contentManager \u003d moduleManager.getModule(module).getContentManager(Note.class);","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"            ArrayList\u003cNote\u003e noteArrayList \u003d contentManager.getContents();","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"            for (Note note : noteArrayList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"                String noteFileName \u003d appendFileExtension(note.getName());","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"                writeFile(getAppendPath(moduleFolder, noteFileName), note.getData());","lastModifiedDate":"2021-10-30"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"     * Appends the text file extension to the given string.","lastModifiedDate":"2021-10-30"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"     * @param name The filename without the extension.","lastModifiedDate":"2021-10-30"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"     * @return The complete filename with the extension of a text file.","lastModifiedDate":"2021-10-30"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"    private String appendFileExtension(String name) {","lastModifiedDate":"2021-10-30"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"        return name + FILE_EXTENSION;","lastModifiedDate":"2021-10-30"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"     * Checks if the file is a text file.","lastModifiedDate":"2021-10-30"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"     * @param file The given file to be tested on.","lastModifiedDate":"2021-10-30"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"     * @return True if the given file is a text file, false otherwise.","lastModifiedDate":"2021-10-30"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"    protected boolean isValidTextFile(File file) {","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":185,"author":{"gitId":"Woolicious98"},"content":"            String contentType \u003d getFileType(file);","lastModifiedDate":"2021-10-30"},{"lineNumber":186,"author":{"gitId":"Woolicious98"},"content":"            return CONTENT_TYPE.equals(contentType);","lastModifiedDate":"2021-10-30"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"        } catch (InvalidFileException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-30"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":191,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"Woolicious98":191}},{"path":"src/main/java/terminus/storage/PdfStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import com.lowagie.text.Document;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import com.lowagie.text.Font;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import com.lowagie.text.FontFactory;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import com.lowagie.text.Paragraph;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import com.lowagie.text.pdf.PdfWriter;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import java.awt.Color;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"/**","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":" * PdfStorage to handles any pdf related operations.","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":" */","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"public class PdfStorage extends Storage {","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    private Path baseDirectory;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    private static final String FILE_EXTENSION \u003d \".pdf\";","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    public PdfStorage(Path baseDirectory) {","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        this.baseDirectory \u003d baseDirectory;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     * Executes the specified operation with the given arguments.","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The Module Manager containing all item information used in TermiNUS.","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"     * @param module        The related module name for the pdf.","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"     * @param action        The operation type to determine which operation to execute.","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    public void execute(ModuleManager moduleManager, String module, StorageActionEnum action)","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        switch (action) {","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        case EXPORT:","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.info(String.format(\"Exporting notes into a pdf file from module folder : %s\", module));","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"            exportModuleNotes(moduleManager, module);","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"            break;","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        default:","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidFileException(Messages.ERROR_STORAGE_INVALID_TYPE);","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"     * Exports the notes in the module folder into a pdf file.","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The Module Manager containing all item information used in TermiNUS.","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"     * @param module        The folder name where all notes in it should be written into the pdf file.","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    protected void exportModuleNotes(ModuleManager moduleManager, String module) throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        assert moduleManager.getModule(module) !\u003d null;","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        Path pdfFile \u003d getAppendPath(baseDirectory, appendFileExtension(module));","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        ContentManager\u003cNote\u003e contentManager \u003d moduleManager.getModule(module).getContentManager(Note.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cNote\u003e noteArrayList \u003d contentManager.getContents();","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        writeToPdf(pdfFile, noteArrayList);","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"     * Writes data into a newly created pdf file.","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"     * @param pdfFile       The filepath of the pdf file.","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"     * @param noteArrayList The listr of notes contents to be written into the pdf file.","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"    private void writeToPdf(Path pdfFile, ArrayList\u003cNote\u003e noteArrayList)","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"            if (noteArrayList.isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"                throw new Exception();","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"            Document tempDocument \u003d new Document();","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"            final PdfWriter writer \u003d PdfWriter.getInstance(tempDocument, new FileOutputStream(pdfFile.toString()));","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"            Font header \u003d FontFactory","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"                .getFont(CommonFormat.FONT_NAME, CommonFormat.FONT_HEADER_SIZE, Font.BOLD, Color.BLACK);","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"            Font text \u003d FontFactory.getFont(CommonFormat.FONT_NAME, CommonFormat.FONT_SIZE, Color.BLACK);","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"            tempDocument.open();","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"            for (Note note : noteArrayList) {","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"                Paragraph title \u003d new Paragraph(note.getName(), header);","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"                Paragraph content \u003d new Paragraph(note.getData(), text);","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"                tempDocument.add(title);","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"                tempDocument.add(content);","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"            tempDocument.close();","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"            writer.close();","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidFileException(Messages.FAIL_TO_EXPORT);","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"     * Appends the pdf file extension to the given string.","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"     * @param name The filename without the extension.","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"     * @return The complete filename with the extension of a pdf file.","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"    private String appendFileExtension(String name) {","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"        return name + FILE_EXTENSION;","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"3m0W33D":108}},{"path":"src/main/java/terminus/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.DirectoryNotEmptyException;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":" * Storage class to handle any filo I/O operations.","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"public class Storage {","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"     * Creates a folder given by its folder path.","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"     * @param folderPath The full path of the folder to be created.","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    public void createFolder(Path folderPath) throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"            if (Files.notExists(folderPath)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"                Files.createDirectories(folderPath);","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_STORAGE_CREATE_FOLDER, folderPath));","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(e.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"     * Creates a file given by its file path.","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     * @param filePath The full path of the file to be created.","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    public void createFile(Path filePath) throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"            if (Files.notExists(filePath)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_STORAGE_CREATE_FILE, filePath));","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(e.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"     * Reads the contents of the given file by its file path.","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"     * @param filePath The full path of the file to be read.","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"     * @return The string contents of the file to be read.","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"    public String readFile(Path filePath) throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"            return Files.readString(filePath);","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_STORAGE_READ_FILE, filePath));","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        } catch (OutOfMemoryError e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_STORAGE_FILE_TOO_LARGE, filePath));","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(e.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"     * Writes content into the given file by its file path.","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"     * @param filePath The full path of the file to be written.","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"     * @param data The content to be written into the given file.","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"    public void writeFile(Path filePath, String data) throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        if (data \u003d\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_STORAGE_WRITE_DATA_NULL, filePath));","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"            Files.writeString(filePath, data);","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_STORAGE_WRITE_FILE, filePath));","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(e.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"     * Delete a file or folder given by their file path.","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"     * @param filePath The full path of the file / folder to be deleted.","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"    public void delete(Path filePath) throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"            Files.deleteIfExists(filePath);","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"        } catch (DirectoryNotEmptyException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"            cleanAllFilesInclusive(filePath);","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_STORAGE_FILE_NOT_DELETED, filePath));","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(e.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"     * Cleans all files and folders within the given file path and deletes itself after.","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"     * @param filePath The full path of the folder to be cleaned.","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"    protected void cleanAllFilesInclusive(Path filePath) throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"        assert filePath !\u003d null;","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"        File file \u003d new File(filePath.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"            Files.walk(Paths.get(file.getAbsolutePath()))","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"                    .sorted(Comparator.reverseOrder())","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"                    .map(Path::toFile)","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"                    .forEach(File::delete);","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_STORAGE_CLEAN_FILE, filePath));","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(e.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"        if (Files.exists(filePath)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_STORAGE_CLEAN_FILE, filePath));","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"     * Appends the path of the folder the item is in to itself.","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"     * @param corePath The base folder in which the item is in.","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"     * @param path The file name of the item.","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"     * @return The full path of the given path.","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"    public Path getAppendPath(Path corePath, String path) {","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"            return Paths.get(corePath.toString(), path);","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"        } catch (InvalidPathException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.severe(String.format(Messages.ERROR_INVALID_FILE_PATH, corePath + path));","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.severe(String.format(Messages.ERROR_INVALID_FILE_PATH, \"null\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"        return null;","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"     * Gets a list of files within a folder by its folder path.","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"     * @param folderPath The full path of the folder where all files within it is retrieved.","lastModifiedDate":"2021-10-30"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"     * @return A list of all files within the given folder.","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"    public File[] getListOfFiles(Path folderPath) throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"        if (folderPath \u003d\u003d null) {","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_MISSING_FOLDER, \"null\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"        File folder \u003d new File(folderPath.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"        File[] result \u003d folder.listFiles();","lastModifiedDate":"2021-10-30"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_GET_FILES, folderPath));","lastModifiedDate":"2021-10-30"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"        return result;","lastModifiedDate":"2021-10-30"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"     * Gets the file type of the given file.","lastModifiedDate":"2021-10-30"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"     * @param file The given file to be checked on.","lastModifiedDate":"2021-10-30"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"     * @return The file type of the given file.","lastModifiedDate":"2021-10-30"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"    public String getFileType(File file) throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":185,"author":{"gitId":"Woolicious98"},"content":"            return Files.probeContentType(Paths.get(file.getAbsolutePath()));","lastModifiedDate":"2021-10-30"},{"lineNumber":186,"author":{"gitId":"Woolicious98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_GET_FILE_CONTENT, file.getAbsolutePath()));","lastModifiedDate":"2021-10-30"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_GET_FILE_CONTENT, \"null\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":191,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":192,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":193,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"     * Renames the a folder given by its old name and new name to be renamed to.","lastModifiedDate":"2021-10-30"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"     * @param oldPath The full path of the folder.","lastModifiedDate":"2021-10-30"},{"lineNumber":197,"author":{"gitId":"Woolicious98"},"content":"     * @param newPath The full path of the newly renamed folder.","lastModifiedDate":"2021-10-30"},{"lineNumber":198,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":199,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":200,"author":{"gitId":"Woolicious98"},"content":"    public void renameFolder(Path oldPath, Path newPath) throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":201,"author":{"gitId":"Woolicious98"},"content":"        assert oldPath !\u003d null;","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"Woolicious98"},"content":"        assert newPath !\u003d null;","lastModifiedDate":"2021-10-31"},{"lineNumber":203,"author":{"gitId":"Woolicious98"},"content":"        if (Files.notExists(newPath) \u0026\u0026 Files.notExists(oldPath)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":204,"author":{"gitId":"Woolicious98"},"content":"            createFolder(newPath);","lastModifiedDate":"2021-10-30"},{"lineNumber":205,"author":{"gitId":"Woolicious98"},"content":"        } else if (Files.exists(oldPath) \u0026\u0026 Files.notExists(newPath)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":206,"author":{"gitId":"Woolicious98"},"content":"            File oldFile \u003d new File(oldPath.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":207,"author":{"gitId":"Woolicious98"},"content":"            File newFile \u003d new File(newPath.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":208,"author":{"gitId":"Woolicious98"},"content":"            if (!oldFile.renameTo(newFile)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":209,"author":{"gitId":"Woolicious98"},"content":"                throw new InvalidFileException(Messages.ERROR_CHANGE_FILE_NAME);","lastModifiedDate":"2021-10-30"},{"lineNumber":210,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":211,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":212,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":213,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":214,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":215,"author":{"gitId":"Woolicious98"},"content":"     * Returns a buffer reader for a file.","lastModifiedDate":"2021-10-30"},{"lineNumber":216,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":217,"author":{"gitId":"Woolicious98"},"content":"     * @param filePath The file name to be read on.","lastModifiedDate":"2021-10-30"},{"lineNumber":218,"author":{"gitId":"Woolicious98"},"content":"     * @return The buffer reader for the given file.","lastModifiedDate":"2021-10-30"},{"lineNumber":219,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":220,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":221,"author":{"gitId":"Woolicious98"},"content":"    public BufferedReader getBufferedReader(Path filePath) throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":222,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":223,"author":{"gitId":"Woolicious98"},"content":"            return Files.newBufferedReader(filePath);","lastModifiedDate":"2021-10-30"},{"lineNumber":224,"author":{"gitId":"Woolicious98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":225,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(String.format(Messages.ERROR_FILE_BUFFERED_READER, filePath));","lastModifiedDate":"2021-10-30"},{"lineNumber":226,"author":{"gitId":"Woolicious98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":227,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(e.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":228,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":229,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":230,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"Woolicious98":230}},{"path":"src/main/java/terminus/storage/StorageActionEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public enum StorageActionEnum {","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"    UPDATE,","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"    CREATE,","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"    DELETE,","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    LOAD,","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"    RELOAD,","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    EXPORT","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"Woolicious98":10}},{"path":"src/main/java/terminus/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":" * StorageManager class to handle all file I/O related operations in TermiNUS.","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"public class StorageManager {","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    private Path baseDirectory;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"     * Determine if the file storage for TermiNUS is disabled or not.","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private boolean isDisabled;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private NoteStorage noteStorage;","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private FolderStorage folderStorage;","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private JsonStorage jsonStorage;","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private PdfStorage pdfStorage;","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"     * Initialises all related storage type that handles different file I/O operations.","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"     * @param baseDirectory The base directory in which all data is stored in.","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"     * @param mainJsonFileName The main json file where the main data for TermiNUS is stored in.","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    public StorageManager(Path baseDirectory, String mainJsonFileName) {","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        this.baseDirectory \u003d baseDirectory;","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        this.noteStorage \u003d new NoteStorage(baseDirectory);","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        this.folderStorage \u003d new FolderStorage(baseDirectory);","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        this.jsonStorage \u003d new JsonStorage(baseDirectory, mainJsonFileName);","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        this.pdfStorage \u003d new PdfStorage(baseDirectory);","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        this.isDisabled \u003d false;","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     * Executes the file I/O operations in the given CommandResult.","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The Module Manager containing all item information used in TermiNUS.","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"     * @param result The command result from a successful command execution.","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"    public void executeCommandResult(ModuleManager moduleManager, CommandResult result) throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        String affectedModule \u003d result.getModule();","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        StorageActionEnum storageAction \u003d result.getStorageAction();","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        StorageTypeEnum storageType \u003d result.getStorageType();","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        String deletedItemName \u003d result.getDeletedItemName();","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        execute(moduleManager, affectedModule, deletedItemName, storageAction, storageType);","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     * Updates the main json file with the current ModuleManager contents.","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The Module Manager containing all item information used in TermiNUS.","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"    public void updateMainJsonFile(ModuleManager moduleManager) throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        execute(moduleManager, null, null, StorageActionEnum.UPDATE, StorageTypeEnum.JSON);","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Save completed.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"     * Executes the file operation with their respective storage type.","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The Module Manager containing all item information used in TermiNUS.","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"     * @param module The related module name for the operation.","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"     * @param deletedItem The related deleted item name fo the operation.","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"     * @param action The action determining the next step to take for the operation.","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"     * @param type The storage typeof the operation.","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"    private void execute(ModuleManager moduleManager, String module, String deletedItem, StorageActionEnum action,","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"            StorageTypeEnum type)","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"        if (isDisabled) {","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Storage has been disabled.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        if (moduleManager \u003d\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(Messages.ERROR_MISSING_MODULE_MANAGER);","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"        switch (type) {","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"        case JSON:","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"            jsonStorage.execute(moduleManager, action);","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        case FOLDER:","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"            folderStorage.execute(module, deletedItem, action);","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"        case TEXT:","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"            noteStorage.execute(moduleManager, module, deletedItem, action);","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        case PDF:","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"            pdfStorage.execute(moduleManager, module, action);","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"            break;","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"        default:","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(Messages.ERROR_STORAGE_INVALID_TYPE);","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"     * Initializes the base directory and main json file and loads any data if any.","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"     * @return The ModuleManager objects containing the contents from the json file and its respective note file data.","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"    public ModuleManager initialize() throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(baseDirectory);","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"        jsonStorage.execute(null, StorageActionEnum.CREATE);","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"        return load();","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"     * Loads the data from the json file and all its respective note data for each module.","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"     * @return The ModuleManager objects containing the contents from the json file and its respective note file data.","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager load() throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"        ModuleManager moduleManager \u003d jsonStorage.loadJson();","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"        if (moduleManager \u003d\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"            return new ModuleManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"        // Filter","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"            FilterManager filterManager \u003d new FilterManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"            filterManager.filter(moduleManager);","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(Messages.ERROR_JSON_FILTER);","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"        // Load Notes","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"        for (String module : moduleManager.getAllModules()) {","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"            try {","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"                noteStorage.execute(moduleManager, module, null, StorageActionEnum.RELOAD);","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"                TerminusLogger.warning(String.format(\"Some notes in module %s cannot be loaded.\", module));","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"        return moduleManager;","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"     * Saves all data in the given ModuleManager.","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The Module Manager containing all item information used in TermiNUS.","lastModifiedDate":"2021-10-30"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidFileException when any file I/O operations has error.","lastModifiedDate":"2021-10-30"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"    public void save(ModuleManager moduleManager) throws InvalidFileException {","lastModifiedDate":"2021-10-30"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"        if (isDisabled) {","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"        if (moduleManager \u003d\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidFileException(Messages.ERROR_MISSING_MODULE_MANAGER);","lastModifiedDate":"2021-10-30"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"        jsonStorage.execute(moduleManager, StorageActionEnum.UPDATE);","lastModifiedDate":"2021-10-30"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.saveAllNotes(moduleManager);","lastModifiedDate":"2021-10-30"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"     * Sets the disabled status of the storage manager.","lastModifiedDate":"2021-10-30"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"     * @param disabled The value for the disabled status. Either True or False.","lastModifiedDate":"2021-10-30"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"    public void setDisabled(boolean disabled) {","lastModifiedDate":"2021-10-30"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"        isDisabled \u003d disabled;","lastModifiedDate":"2021-10-30"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"Woolicious98":176}},{"path":"src/main/java/terminus/storage/StorageTypeEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public enum StorageTypeEnum {","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"    JSON,","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"    TEXT,","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"    FOLDER,","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    PDF,","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"    TEST","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"Woolicious98":9}},{"path":"src/main/java/terminus/timetable/ConflictManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.timetable;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"public class ConflictManager {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    private Link newLink;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    public ConflictManager(ModuleManager moduleManager, Link newLink) {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"        this.moduleManager \u003d moduleManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"        this.newLink \u003d newLink;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"     * Retrieve all the Link from all the user Modules.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"     * @return An ArrayList of all the user Links.","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    public ArrayList\u003cLink\u003e getAllLinks() {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"        ArrayList\u003cLink\u003e currentLinks \u003d new ArrayList\u003cLink\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"        String[] modules \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"        Stream\u003cString\u003e stream \u003d Arrays.stream(modules);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"        stream.forEach(x -\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"            NusModule module \u003d moduleManager.getModule(x);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"            ContentManager\u003cLink\u003e contentManager \u003d module.getContentManager(Link.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"            assert contentManager !\u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"            currentLinks.addAll(contentManager.getContents());","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        });","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        return currentLinks;","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"     * Retrieve all the conflicting Links with the newly added Link.","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"     * @return A string object of all the conflicting Link details.","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    public String getConflictingSchedule() {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"        ArrayList\u003cLink\u003e currentLinks \u003d getAllLinks();","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder conflictList \u003d new StringBuilder();","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"        currentLinks.stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"                .filter(x -\u003e newLink.getDay().equalsIgnoreCase(x.getDay()))","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"                .filter(x -\u003e newLink.getEndTime().compareTo(x.getStartTime()) \u003e 0)","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"                .filter(x -\u003e newLink.getStartTime().compareTo(x.getEndTime()) \u003c 0)","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"                .forEach(x -\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"                    conflictList.append(String.format(\"%s\\n\", x.getViewDescription()));","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"                });","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"        return conflictList.toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"LouisLouis19":56,"kelvneo":3}},{"path":"src/main/java/terminus/timetable/Timetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.timetable;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static terminus.common.CommonUtils.isStringNullOrEmpty;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.DaysOfWeekEnum;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"public class Timetable {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    private int index \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public Timetable(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"        this.moduleManager \u003d moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"     * Lists all the schedule for a particular day.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"     * @param contentManager ContentManager object containing all user\u0027s links.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"     * @param currentDay     The particular day at which the schedules are selected from.","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"     * @return String String object containing all the schedules for the particular day.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    private ArrayList\u003cLink\u003e listDailySchedule(ContentManager\u003cLink\u003e contentManager, String currentDay) {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        ArrayList\u003cLink\u003e dailySchedule \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        contentManager.getContents()","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"                .stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"                .filter(x -\u003e x.getDay().equalsIgnoreCase(currentDay))","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"                .sorted(Comparator.comparing(Link::getStartTime))","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"                .forEach(x -\u003e dailySchedule.add(x));","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        return dailySchedule;","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"     * Retrieve and format all the user\u0027s schedule for the particular day.","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"     * @param today The particular day at which the schedules are selected from.","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"     * @return String String object containing all the schedules for the day","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"    public String getDailySchedule(String today) {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder schedule \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"        String[] modules \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"        ArrayList\u003cLink\u003e dailySchedule \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"        Stream\u003cString\u003e stream \u003d Arrays.stream(modules);","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"        stream.forEach(x -\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"            NusModule module \u003d moduleManager.getModule(x);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"            ContentManager\u003cLink\u003e contentManager \u003d module.getContentManager(Link.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"            assert contentManager !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"            dailySchedule.addAll(listDailySchedule(contentManager, today));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.info(String.format(\"Successfully acquire %s\u0027s schedule for %s\", x, today));","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        });","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        dailySchedule.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"                .sorted(Comparator.comparing(Link::getStartTime))","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"                .forEach(x -\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"                    index++;","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"                    schedule.append(String.format(\"%d. %s\\n\", index, x.getViewDescription()));","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"                });","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"        index \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"        if (isStringNullOrEmpty(schedule.toString())) {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"            return null;","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"        return schedule.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"     * Retrieve and format all the user\u0027s schedule for the week.","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"     * @return String string object containing all the user\u0027s schedule for the week","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"    public String getWeeklySchedule() {","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder dailyResult \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"        for (DaysOfWeekEnum currentDay : DaysOfWeekEnum.values()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"            String today \u003d currentDay.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"            String dailySchedule \u003d getDailySchedule(today);","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"            if (!isStringNullOrEmpty(dailySchedule)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"                assert dailySchedule !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"                String header \u003d String.format(\"%s:\\n\", today);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"                dailyResult.append(header.toUpperCase());","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"                dailyResult.append(dailySchedule);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"                assert dailyResult !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"                TerminusLogger.info(String.format(\"Successfully acquire %s\u0027s schedule\", today));","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"            index \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"        if (isStringNullOrEmpty(dailyResult.toString())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"            return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"LouisLouis19"},"content":"        return dailyResult.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"LouisLouis19"},"content":"     * Print empty message for empty user schedule.","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"LouisLouis19"},"content":"     * @param schedule The string containing the retrieved user schedule.","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"LouisLouis19"},"content":"     * @param day      The day corresponding to the retrieved schedule","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"LouisLouis19"},"content":"    public String checkEmptySchedule(String schedule, String day) {","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"LouisLouis19"},"content":"        if (schedule \u003d\u003d null \u0026\u0026 day !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.info(\"There is no schedule in the user\u0027s timetable\");","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"LouisLouis19"},"content":"            schedule \u003d String.format(Messages.EMPTY_SCHEDULE_FOR_THE_DAY, day);","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"        } else if (schedule \u003d\u003d null \u0026\u0026 day \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.info(\"There is no schedule in the user\u0027s timetable\");","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"            schedule \u003d Messages.EMPTY_SCHEDULE_FOR_THE_WEEK;","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"LouisLouis19"},"content":"        return schedule;","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"LouisLouis19":119,"3m0W33D":2,"Woolicious98":2}},{"path":"src/main/java/terminus/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"public class Ui {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    private static final String PROMPT \u003d \"[%s] \u003e\u003e\u003e \";","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    private static final Ui UI \u003d new Ui();","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    private final Scanner scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    private Ui() {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"        this(System.in);","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    public Ui(InputStream in) {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        this.scanner \u003d new Scanner(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"     * Prints the banner for a workspace, which includes all the commands in the parser.","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    public void printParserBanner(CommandParser parser, ModuleManager moduleManager) {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        printSection(","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"            parser.getWorkspaceBanner(moduleManager),","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"            parser.getCommandList()","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"                .stream()","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"                .reduce(\"\\nType any of the following to get started:\\n\",","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"                    (x, y) -\u003e String.format(\"%s\u003e %s\\n\", x, y))","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        );","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"     * Prints a prompt and requests a command from the user.","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"     * @param workspaceName The string to place within the brackets.","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"     * @return The command the user inputted.","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    public String requestCommand(String workspaceName) {","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        String validatedWorkspaceName \u003d workspaceName;","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        if (validatedWorkspaceName \u003d\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"            validatedWorkspaceName \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        return getUserInput(String.format(PROMPT, validatedWorkspaceName));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"     * Prints multiple strings at once, separated by a new line.","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"     * @param strings The strings to print.","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    public void printSection(String... strings) {","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        Arrays.stream(strings).forEach(System.out::println);","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"     * Prints the exit message.","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"    public void printExitMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        System.out.println(\"Goodbye!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"     * Get the input of the user through the Scanner.","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"     * @return The user input from the Scanner.","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"    public String getUserInput(String prompt) {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        System.out.print(prompt);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"    public static Ui getInstance() {","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"        return UI;","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":74,"Woolicious98":3,"3m0W33D":4}},{"path":"src/test/java/terminus/TerminusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.File;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"class TerminusTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    private static InputStream oldInput;","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    @BeforeAll","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    static void beforeAll() {","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        oldInput \u003d System.in;","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    @AfterAll","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    static void afterAll() {","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        System.setIn(oldInput);","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        TestFilePath.RESOURCE_DATA_FOLDER.toFile().mkdir();","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    @AfterEach","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    void tearDown() throws IOException {","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        try (Stream\u003cPath\u003e walk \u003d Files.walk(TestFilePath.RESOURCE_DATA_FOLDER)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            walk.sorted(Comparator.reverseOrder())","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"                .map(Path::toFile)","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"                .forEach(File::delete);","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"    void run_exit_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"exit%s\", LS);","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        System.setIn(in);","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        Terminus.main(null);","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    void run_invalidCommand_exit_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"exita%shelp%sexit%s\", LS, LS, LS);","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        Terminus terminus \u003d new Terminus(new Ui(in), MainCommandParser.getInstance(), ","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"            TestFilePath.RESOURCE_DATA_FOLDER);","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        terminus.start();","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"    void safety_test() {","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        Terminus terminus \u003d new Terminus();","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        terminus.initialize();","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        terminus.exit();","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"    void handleUserInput_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"        Terminus terminus \u003d new Terminus(new Ui(System.in), MainCommandParser.getInstance(),","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"            TestFilePath.RESOURCE_DATA_FOLDER);","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"        terminus.initialize();","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        assertTrue(terminus.handleUserInput(\"exit\").isExit());","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"    void handleUserInput_exceptionThrown_returnNull() {","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"        Terminus terminus \u003d new Terminus(new Ui(System.in), MainCommandParser.getInstance(), ","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"            TestFilePath.RESOURCE_DATA_FOLDER);","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"        terminus.initialize();","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        assertNull(terminus.handleUserInput(\"exita\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"        assertNull(terminus.handleUserInput(\"module add\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"        assertNull(terminus.handleUserInput(\"module delete \" + Integer.MAX_VALUE));","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"    void handleCommandResult_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"        Terminus terminus \u003d new Terminus(new Ui(System.in), MainCommandParser.getInstance(),","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"            TestFilePath.RESOURCE_DATA_FOLDER);","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"        terminus.initialize();","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"        terminus.handleCommandResult(terminus.handleUserInput(\"module add \\\"test\\\"\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"        terminus.handleCommandResult(terminus.handleUserInput(\"go test\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"        terminus.handleCommandResult(terminus.handleUserInput(\"note\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"        terminus.handleCommandResult(terminus.handleUserInput(\"back\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"        terminus.handleCommandResult(terminus.handleUserInput(\"schedule\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"        terminus.handleCommandResult(terminus.handleUserInput(\"back\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"        terminus.handleCommandResult(terminus.handleUserInput(\"question\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"        terminus.handleCommandResult(terminus.handleUserInput(\"back\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"        terminus.handleCommandResult(terminus.handleUserInput(\"back\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"        terminus.handleCommandResult(terminus.handleUserInput(\"module delete 1\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"    void handleStorage_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"        Terminus terminus \u003d new Terminus(new Ui(System.in), MainCommandParser.getInstance(),","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"            TestFilePath.RESOURCE_DATA_FOLDER);","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"        terminus.initialize();","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"        terminus.handleStorage(terminus.handleUserInput(\"module add \\\"test\\\"\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"        terminus.handleStorage(terminus.handleUserInput(\"module delete 1\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"kelvneo":109,"3m0W33D":1,"-":8}},{"path":"src/test/java/terminus/TestFilePath.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"public class TestFilePath {","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    public static final Path RESOURCE_FOLDER \u003d Path.of(\"src\", \"test\", \"resources\");","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    public static final Path RESOURCE_DATA_FOLDER \u003d RESOURCE_FOLDER.resolve(\"data\");","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    public static final String FAULTY_FOLDER \u003d \"faulty\";","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"    public static final String SAVE_FILE \u003d \"saveFile.json\";","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"    public static final String MALFORMED_FILE \u003d \"malformedFile.json\";","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"    public static final String VALID_FILE \u003d \"validFile.json\";","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":1,"Woolicious98":11,"3m0W33D":1}},{"path":"src/test/java/terminus/activerecall/DifficultyModifierTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"public class DifficultyModifierTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"    void tweakEasyQuestionDifficulty_lowerThanMinValue_returnMinValue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.2, DifficultyModifier.tweakEasyQuestionDifficulty(0.1));","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.2, DifficultyModifier.tweakEasyQuestionDifficulty(0.2));","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.2, DifficultyModifier.tweakEasyQuestionDifficulty(0));","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.2, DifficultyModifier.tweakEasyQuestionDifficulty(Double.MIN_VALUE));","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    void tweakHardQuestionDifficulty_higherThanMaxValue_returnMaxValue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.9, DifficultyModifier.tweakHardQuestionDifficulty(1));","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.9, DifficultyModifier.tweakHardQuestionDifficulty(0.9));","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.9, DifficultyModifier.tweakHardQuestionDifficulty(100000));","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.9, DifficultyModifier.tweakHardQuestionDifficulty(Double.MAX_VALUE));","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":26}},{"path":"src/test/java/terminus/activerecall/GameEnvironmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import java.util.Random;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"public class GameEnvironmentTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    private Random random;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        random \u003d new Random();","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"        random.setSeed(1L);","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    void run_exit_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"%s%s2%s%s%se%s\", LS, LS, LS, LS, LS, LS);","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        Ui ui \u003d new Ui(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        List\u003cQuestion\u003e questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(questions, 3, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment gameEnvironment \u003d new GameEnvironment(ui, questionGenerator);","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        gameEnvironment.run();","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"            assertEquals(0.5, questions.get(i).getWeight());","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    void run_ignoreGarbageInput_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"%s%sasdf%s2%s%s%sasdf%se%s\", LS, LS, LS, LS, LS, LS, LS, LS);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        Ui ui \u003d new Ui(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        List\u003cQuestion\u003e questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(questions, 3, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment gameEnvironment \u003d new GameEnvironment(ui, questionGenerator);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        gameEnvironment.run();","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"            assertEquals(0.5, questions.get(i).getWeight());","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    void run_reweigh_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"%s%s3%s%s%s2%s%s%s1%s%s%s2%s%s%s2%s\", LS, LS, LS, LS, LS, LS, LS, LS, LS, LS,","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"                LS, LS, LS, LS, LS);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"        Ui ui \u003d new Ui(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        List\u003cQuestion\u003e questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(questions, 10, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment gameEnvironment \u003d new GameEnvironment(ui, questionGenerator);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        gameEnvironment.run();","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        double highNewWeight \u003d DifficultyModifier.tweakHardQuestionDifficulty(0.5);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        double lowNewWeight \u003d DifficultyModifier.tweakEasyQuestionDifficulty(0.5);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        int high \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"        int same \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        int low \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"            if (questions.get(i).getWeight() \u003d\u003d highNewWeight) {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"                high++;","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"            } else if (questions.get(i).getWeight() \u003d\u003d 0.5) {","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"                same++;","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"            } else if (questions.get(i).getWeight() \u003d\u003d lowNewWeight) {","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"                low++;","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        assertEquals(1, high);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"        assertEquals(1, low);","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"        assertEquals(3, same);","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":91,"3m0W33D":1}},{"path":"src/test/java/terminus/activerecall/QuestionGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import java.util.Random;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"public class QuestionGeneratorTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private Random random;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        random \u003d new Random();","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        random.setSeed(1L);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    void hasNext_noQuestions_returnsFalse() {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(new ArrayList\u003c\u003e(), 10);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        assertFalse(questionGenerator.hasNext());","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    void next_noQuestions_throwsException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(new ArrayList\u003c\u003e(), 10);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        assertThrows(NullPointerException.class, questionGenerator::next);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    void next_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        List\u003cQuestion\u003e questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(questions, 10, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            Question question \u003d questionGenerator.next();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            questions.remove(question);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        assertTrue(questions.isEmpty());","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        questionGenerator \u003d new QuestionGenerator(questions, 100, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            questions.remove(questionGenerator.next());","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        assertTrue(questions.isEmpty());","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        assertFalse(questionGenerator.hasNext());","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        questionGenerator \u003d new QuestionGenerator(questions, 5, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            questions.remove(questionGenerator.next());","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, questions.size());","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        assertFalse(questionGenerator.hasNext());","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":70}},{"path":"src/test/java/terminus/command/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"public class ExitCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        Command exitCommand \u003d commandParser.parseCommand(CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        CommandResult mainResult \u003d exitCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        assertTrue(mainResult.isOk() \u0026\u0026 mainResult.isExit());","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        Command noteExitCommand \u003d commandParser","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"            .parseCommand(\"go \" + tempModule + \" \" + CommonFormat.COMMAND_NOTE + \" \" + CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        CommandResult noteResult \u003d noteExitCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        assertTrue(noteResult.isOk() \u0026\u0026 noteResult.isExit());","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        Command scheduleExitCommand \u003d commandParser","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"                .parseCommand(","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"                        \"go \" + tempModule + \" \" + CommonFormat.COMMAND_SCHEDULE + \" \" + CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        CommandResult scheduleExitResult \u003d scheduleExitCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        assertTrue(scheduleExitResult.isOk() \u0026\u0026 scheduleExitResult.isExit());","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        Command goCommandExitCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" \" + CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        CommandResult goCommandExitCommandResult \u003d goCommandExitCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(goCommandExitCommandResult.isOk() \u0026\u0026 goCommandExitCommandResult.isExit());","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        Command moduleCommandExitCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"                commandParser.parseCommand(\"module \" + CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        CommandResult moduleCommandExitCommandResult \u003d moduleCommandExitCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(moduleCommandExitCommandResult.isOk() \u0026\u0026 moduleCommandExitCommandResult.isExit());","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kelvneo":34,"LouisLouis19":1,"Woolicious98":15,"3m0W33D":4}},{"path":"src/test/java/terminus/command/GoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"public class GoCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    void execute_go_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"go \" + tempModule);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        assertTrue(cmdResult.getNewCommandParser() instanceof ModuleWorkspaceCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    void execute_go_throwsException() throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"go not_a_test\");","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e cmd.execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"    void execute_goAdvance_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" note\");","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        assertTrue(cmdResult.getNewCommandParser() instanceof NoteCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" note add \\\"test\\\" \\\"test1\\\"\");","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" note view\");","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" note delete 1\");","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(0, moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule\");","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        assertTrue(cmdResult.getNewCommandParser() instanceof LinkCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \"","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"                + \"\\\"2\\\" \\\"https://zoom.us\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Link.class).getTotalContents());","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule view\");","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule delete 1\");","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(0, moduleManager.getModule(tempModule).getContentManager(Link.class).getTotalContents());","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"    void execute_goAdvance_throwException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note abcbd\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" schedule abcbd\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" schedule delete -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note delete -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note view 100\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kelvneo":19,"LouisLouis19":1,"3m0W33D":73,"Woolicious98":5}},{"path":"src/test/java/terminus/command/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"public class HelpCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    private MainCommandParser mainCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser noteCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private ModuleCommandParser moduleCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        mainCommandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        noteCommandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        noteCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        moduleCommandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    void execute_helpCommand_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        CommandResult result \u003d mainCommandParser.parseCommand(\"help\").execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.isOk());","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        result \u003d noteCommandParser.parseCommand(\"help\").execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(result.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        result \u003d linkCommandParser.parseCommand(\"help\").execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(result.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        result \u003d moduleCommandParser.parseCommand(\"help\").execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(result.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kelvneo":4,"3m0W33D":32,"Woolicious98":13}},{"path":"src/test/java/terminus/command/ModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"public class ModuleCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    void execute_module_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"module\");","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        assertTrue(cmdResult.getNewCommandParser() instanceof ModuleCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"module add \\\"test\\\"\");","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(1, moduleManager.getAllModules().length);","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    void execute_module_throwsException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"module add\")","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            .execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"module delete asd\")","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"            .execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"module asdsasd\")","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            .execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kelvneo":10,"3m0W33D":40,"Woolicious98":2}},{"path":"src/test/java/terminus/command/NoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.command;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"public class NoteCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    void execute_noteAdvance_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        Command mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" note\");","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        CommandResult changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.getNewCommandParser() instanceof NoteCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" note add \\\"username\\\" \\\"password\\\"\");","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" note view\");","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"    void execute_noteAdvance_throwsException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note view 100\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note delete -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":8,"Woolicious98":46,"3m0W33D":3}},{"path":"src/test/java/terminus/command/QuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"public class QuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        Command mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" question\");","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        CommandResult changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.getNewCommandParser() instanceof QuestionCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" question add \\\"username\\\" \\\"password\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Question.class).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" question view\");","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"    void execute_throwsException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" question -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" question view 100\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" question delete\").execute(moduleManager));","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" question delete -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":57,"3m0W33D":1}},{"path":"src/test/java/terminus/command/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    void execute_linkAdvance_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        Command mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule\");","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        CommandResult changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.getNewCommandParser() instanceof LinkCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"                + \"\\\"3\\\" \\\"https://zoom.us\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Link.class).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule view\");","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    void execute_linkAdvance_throwsException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" schedule -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"                            \"go \" + tempModule + \" schedule add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"2\\\" \\\"test.com\\\"\")","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"                    .execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" schedule delete -1\")","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"                    .execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kelvneo":8,"LouisLouis19":2,"3m0W33D":36,"Woolicious98":15}},{"path":"src/test/java/terminus/command/TimetableCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"public class TimetableCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    private MainCommandParser mainCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private final String tempModule1 \u003d \"test1\";","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        this.mainCommandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser.setModuleName(tempModule1);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule1);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    void execute_viewWeekly_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand \u003d mainCommandParser.parseCommand(\"timetable\");","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult \u003d timetableCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Friday\\\" \\\"00:00\\\" \\\"3\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand1 \u003d mainCommandParser.parseCommand(\"timetable\");","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult1 \u003d timetableCommand1.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult1.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Sunday\\\" \\\"00:00\\\" \\\"5\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand2 \u003d mainCommandParser.parseCommand(\"timetable\");","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult2 \u003d timetableCommand2.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult2.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"    void execute_viewDaily_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Tuesday\\\" \\\"00:00\\\" \\\"4\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Wednesday\\\" \\\"00:00\\\" \\\"3\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand \u003d mainCommandParser.parseCommand(\"timetable Saturday\");","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult \u003d timetableCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand1 \u003d mainCommandParser.parseCommand(\"timetable Saturday\");","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult1 \u003d timetableCommand1.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult1.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand2 \u003d mainCommandParser.parseCommand(\"timetable Saturday\");","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult2 \u003d timetableCommand2.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult2.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand3 \u003d mainCommandParser.parseCommand(\"timetable Saturday\");","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult3 \u003d timetableCommand3.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult3.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"    void execute_viewDaily_exceptionThrown()","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"4\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable -1\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable .\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable today\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable mondayyy\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable yesterday\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"LouisLouis19":101,"kelvneo":19,"Woolicious98":1,"3m0W33D":7}},{"path":"src/test/java/terminus/command/content/link/AddLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"import terminus.timetable.ConflictManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"public class AddLinkCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cLink\u003e type \u003d Link.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    void parseArguments_addLinkCommand_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        String addLinkInput \u003d \"\\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\";","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e parsedArguments \u003d CommonUtils.findArguments(addLinkInput);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"test\", parsedArguments.get(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"Thursday\", parsedArguments.get(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"00:00\", parsedArguments.get(2));","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"2\", parsedArguments.get(3));","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"https://zoom.us/test\", parsedArguments.get(4));","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"    void execute_addLinkCommand_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Monday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        CommandResult addResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        String link \u003d moduleManager.getModule(tempModule).getContentManager(type).getContentData(1);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        assertTrue(link.contains(\"test\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        assertTrue(link.contains(\"Monday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        assertTrue(link.contains(\"00:00\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        assertTrue(link.contains(\"2\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        assertTrue(link.contains(\"https://zoom.us/test\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"        Link newLink \u003d new Link(\"test conflict\", \"Saturday\", LocalTime.of(9, 00), 3, \"https://zoom.us/test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        ConflictManager conflictManager \u003d new ConflictManager(moduleManager, newLink);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"            addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"10:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"            addResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"            assertNotNull(conflictManager.getConflictingSchedule());","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(6, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"    void execute_addLinkCommand_fail() {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"23:00\\\" \\\"12\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"23:00\\\" \\\"12\\\" \\\"zoom.test\\\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"00:00\\\" \\\"25\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"00:00\\\" \\\"2.5\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"00:00\\\" \\\"a\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\" \\\" \\\" \\\" \\\" \\\" \\\" \\\" \\\" \\\"\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LouisLouis19":58,"kelvneo":10,"3m0W33D":13,"Woolicious98":12}},{"path":"src/test/java/terminus/command/content/link/BackLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"public class BackLinkCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        Command backCommand \u003d linkCommandParser.parseCommand(\"back\");","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        CommandResult backResult \u003d backCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(backResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        assertTrue(backResult.getNewCommandParser() instanceof ModuleWorkspaceCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":27,"kelvneo":2,"3m0W33D":2,"Woolicious98":9}},{"path":"src/test/java/terminus/command/content/link/DeleteLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"public class DeleteLinkCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cLink\u003e type \u003d Link.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    void execute_deleteLink_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"                \"add \\\"test_desc\\\" \\\"Monday\\\" \\\"12:00\\\" \\\"1\\\" \\\"https://zoom.us/test\\\"\"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"            );","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(3, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        Command deleteLinkCommand \u003d linkCommandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        CommandResult deleteResult \u003d deleteLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"        for (int j \u003d 0; j \u003c 2; j++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"            deleteLinkCommand \u003d linkCommandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"            deleteResult \u003d deleteLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    void execute_deleteLink_throwsException()","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"        Command deleteLinkCommand \u003d linkCommandParser.parseCommand(\"delete 20\");","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e deleteLinkCommand.execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":37,"kelvneo":7,"3m0W33D":11,"Woolicious98":10}},{"path":"src/test/java/terminus/command/content/link/ViewLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TestUtils;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"public class ViewLinkCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    Class\u003cLink\u003e type \u003d Link.class;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    void execute_viewNone_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d linkCommandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        assertEquals(TestUtils.generateCommandOutputString(viewResult.getMessage()),","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"            Messages.EMPTY_CONTENT_LIST_MESSAGE.trim());","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewAll_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"                \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"1\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        String stringBuilder \u003d Messages.CONTENT_MESSAGE_HEADER","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"            + moduleManager.getModule(tempModule).getContentManager(type).listAllContents()","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            + Messages.CONTENT_MESSAGE_FOOTER;","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d linkCommandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        assertEquals(stringBuilder, TestUtils.generateCommandOutputString(viewResult.getMessage()));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"    void execute_viewLink_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"                \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"3\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"        Command viewLinkCommand \u003d linkCommandParser.parseCommand(\"view 1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewLinkResult \u003d viewLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(viewLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"        viewLinkCommand \u003d linkCommandParser.parseCommand(\"view 5\");","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        viewLinkResult \u003d viewLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(viewLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"    void execute_viewLink_exceptionThrown() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"                \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"view -1\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"view X\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"viewwwww\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":55,"kelvneo":21,"3m0W33D":8,"Woolicious98":12}},{"path":"src/test/java/terminus/command/content/note/AddNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"public class AddNoteCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cNote\u003e type \u003d Note.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(addResult.hasChange());","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1)","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"            .contains(\"test\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1)","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            .contains(\"test1\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    void execute_success_multipleNotes() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"    void execute_duplicateNoteName_exceptionThrown() throws InvalidArgumentException, InvalidCommandException,","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 1; i \u003c 5; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"            assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"                () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"    void execute_illegalNoteName_exceptionThrown() {","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"\\\\uD83D\\\\uDC76 \\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\".......\\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"\\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        String s \u003d \"a\".repeat(31);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"\" + s + \"\\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"    void execute_invalidArguments_exceptionThrown() {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"t\\\" \\\"\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"\\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test\\\"\\\"\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\" \\\" \\\" \\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"    void execute_longNoteData_exceptionThrown() {","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.initializeLoggerWarnings();","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        String s \u003d \"a\".repeat(1000001);","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"\" + s + \"\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kelvneo":21,"LouisLouis19":1,"3m0W33D":30,"Woolicious98":50}},{"path":"src/test/java/terminus/command/content/note/BackNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"public class BackNoteCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        Command backCommand \u003d commandParser.parseCommand(\"back\");","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        CommandResult backResult \u003d backCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(backResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        assertTrue(backResult.getNewCommandParser() instanceof ModuleWorkspaceCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LouisLouis19":1,"kelvneo":4,"3m0W33D":24,"Woolicious98":9}},{"path":"src/test/java/terminus/command/content/note/DeleteNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"public class DeleteNoteCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cNote\u003e type \u003d Note.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    void setUp() {","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        Command deleteCommand \u003d commandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        CommandResult deleteResult \u003d deleteCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(4, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        for (int i \u003d 2; i \u003c 4; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"            deleteCommand \u003d commandParser.parseCommand(\"delete \" + i);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"            deleteResult \u003d deleteCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"    void execute_throwsException() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        Command deleteCommand \u003d commandParser.parseCommand(\"delete 100\");","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e deleteCommand.execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LouisLouis19":2,"kelvneo":6,"3m0W33D":38,"Woolicious98":14}},{"path":"src/test/java/terminus/command/content/note/ExportNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import java.io.File;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"public class ExportNoteCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cNote\u003e type \u003d Note.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    void setUp() {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        this.storageManager \u003d new StorageManager(TestFilePath.RESOURCE_FOLDER, TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"            assertTrue(addResult.hasChange());","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"            assertFalse(addResult.isExit());","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        Command exportCommand \u003d commandParser.parseCommand(\"export\");","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        CommandResult exportResult \u003d exportCommand.execute(moduleManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        storageManager.executeCommandResult(moduleManager,exportResult);","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(exportResult.hasChange());","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(exportResult.isExit());","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        File pdf \u003d new File(Paths.get(TestFilePath.RESOURCE_FOLDER.toString(), tempModule + CommonFormat.PDF_FORMAT)","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"                .toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(pdf.exists());","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        pdf.delete();","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kelvneo":2,"3m0W33D":49,"Woolicious98":13}},{"path":"src/test/java/terminus/command/content/note/ReloadNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageActionEnum;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.StorageTypeEnum;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"public class ReloadNoteCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    Class\u003cNote\u003e type \u003d Note.class;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        this.storageManager \u003d new StorageManager(TestFilePath.RESOURCE_FOLDER, TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidArgumentException, InvalidCommandException, InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        ContentManager noteContentManager \u003d moduleManager.getModule(tempModule).getContentManager(type);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 1; i \u003c\u003d 3; i++) {","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"            String fileName \u003d \"test\" + String.valueOf(i);","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"            String data \u003d \"test\" + String.valueOf(i);","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"\" + fileName + \"\\\" \\\"\" + data + \"\\\"\");","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"            CommandResult result \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"            storageManager.executeCommandResult(moduleManager, result);","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(3, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        CommandResult deleteResult \u003d new CommandResult(tempModule, StorageActionEnum.DELETE,","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"                StorageTypeEnum.TEXT, \"\");","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        deleteResult.setDeletedItemName(\"test1\");","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        storageManager.executeCommandResult(moduleManager, deleteResult);","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(3, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        Command reloadCommand \u003d commandParser.parseCommand(\"reload\");","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        CommandResult result \u003d reloadCommand.execute(moduleManager);","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        storageManager.executeCommandResult(moduleManager, result);","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        CommandResult deleteModuleResult \u003d new CommandResult(tempModule, StorageActionEnum.DELETE,","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"                StorageTypeEnum.FOLDER, \"\");","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        deleteModuleResult.setDeletedItemName(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        storageManager.executeCommandResult(moduleManager, deleteModuleResult);","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Woolicious98":69}},{"path":"src/test/java/terminus/command/content/note/ViewNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TestUtils;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"public class ViewNoteCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cNote\u003e type \u003d Note.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    void execute_viewNone_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        assertEquals(TestUtils.generateCommandOutputString(viewResult.getMessage()),","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            Messages.EMPTY_CONTENT_LIST_MESSAGE.trim());","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewAll_success()","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        ","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        String stringBuilder \u003d Messages.CONTENT_MESSAGE_HEADER","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"            + moduleManager.getModule(tempModule).getContentManager(type).listAllContents()","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            + Messages.CONTENT_MESSAGE_FOOTER;","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        assertEquals(stringBuilder, TestUtils.generateCommandOutputString(viewResult.getMessage()));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewOne_success()","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        int testId \u003d 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view \" + testId);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        assertEquals(moduleManager.getModule(tempModule).getContentManager(type).getContentData(testId).trim(),","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"            TestUtils.generateCommandOutputString(viewResult.getMessage()));","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewOne_exceptionThrown()","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"        throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"view a\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"view -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"view 6\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kelvneo":26,"3m0W33D":3,"Woolicious98":66}},{"path":"src/test/java/terminus/command/content/question/AddQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"public class AddQuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    private final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    Class\u003cQuestion\u003e type \u003d Question.class;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1).contains(\"test\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1).contains(\"test1\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"            addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        assertEquals(6, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    void execute_invalidArguments_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"t\\\" \\\"\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"\\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test\\\"\\\"\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\" \\\" \\\" \\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":46,"3m0W33D":16}},{"path":"src/test/java/terminus/command/content/question/BackQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"public class BackQuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        Command backCommand \u003d commandParser.parseCommand(\"back\");","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        CommandResult backResult \u003d backCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        assertTrue(backResult.getNewCommandParser() instanceof ModuleWorkspaceCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":36,"3m0W33D":1}},{"path":"src/test/java/terminus/command/content/question/DeleteQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"public class DeleteQuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    private final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    Class\u003cQuestion\u003e type \u003d Question.class;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        Command deleteCommand \u003d commandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        CommandResult deleteResult \u003d deleteCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        assertEquals(4, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 2; i \u003c 4; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"            deleteCommand \u003d commandParser.parseCommand(\"delete \" + i);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"            deleteResult \u003d deleteCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        assertEquals(2, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"    void execute_throwsException() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        Command deleteCommand \u003d commandParser.parseCommand(\"delete 100\");","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e deleteCommand.execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":59,"3m0W33D":1}},{"path":"src/test/java/terminus/command/content/question/TestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"public class TestCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    @BeforeAll","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    static void beforeAll() {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"%s%s2%s%s%se%s\", System.lineSeparator(), System.lineSeparator(),","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"            System.lineSeparator(), System.lineSeparator(), System.lineSeparator(), System.lineSeparator());","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        System.setIn(in);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    void execute_noQuestions_exceptionThrown() throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        Command command \u003d commandParser.parseCommand(\"test\");","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e command.execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        Command command \u003d commandParser.parseCommand(\"test\");","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            CommandResult commandResult \u003d command.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"            assertTrue(commandResult.isOk());","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        } catch (NoSuchElementException exception) {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"            assertTrue(true);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":61,"3m0W33D":2}},{"path":"src/test/java/terminus/command/content/question/ViewQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TestUtils;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"public class ViewQuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cQuestion\u003e type \u003d Question.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    void execute_viewNone_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        assertEquals(TestUtils.generateCommandOutputString(viewResult.getMessage()),","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            Messages.EMPTY_CONTENT_LIST_MESSAGE.trim());","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    void execute_viewAll_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        String stringBuilder \u003d Messages.CONTENT_MESSAGE_HEADER","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"            + moduleManager.getModule(tempModule).getContentManager(type).listAllContents()","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"            + Messages.CONTENT_MESSAGE_FOOTER;","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        assertEquals(stringBuilder, TestUtils.generateCommandOutputString(viewResult.getMessage()));","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    void execute_viewOne_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        int testId \u003d 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view \" + testId);","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        assertEquals(moduleManager.getModule(tempModule).getContentManager(type).getContentData(testId).trim(),","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"            TestUtils.generateCommandOutputString(viewResult.getMessage()));","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"    void execute_viewOne_exceptionThrown()","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"view a\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"view -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"view 6\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":92,"3m0W33D":2}},{"path":"src/test/java/terminus/command/module/AddModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"public class AddModuleCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    void execute_addModule_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"add \\\"test\\\"\");","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        assertNotNull(moduleManager.getModule(\"test\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    void execute_addModule_throwsException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test2\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add   \").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add   \\\"??**??** \\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kelvneo":4,"3m0W33D":41,"Woolicious98":1}},{"path":"src/test/java/terminus/command/module/DeleteModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"public class DeleteModuleCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private static final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    void execute_deleteModule_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        assertNull(moduleManager.getModule(tempModule));","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    void execute_deleteModule_throwsException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"delete -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"delete\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"delete 100\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kelvneo":5,"3m0W33D":39,"Woolicious98":4}},{"path":"src/test/java/terminus/command/module/UpdateModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"public class UpdateModuleCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    void execute_updateModule_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"update 1 \\\"test2\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        assertNull(moduleManager.getModule(tempModule));","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        assertNotNull(moduleManager.getModule(\"test2\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        Command cmd2 \u003d commandParser.parseCommand(\"update 1 \\\"CS2106\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        CommandResult cmdResult2 \u003d cmd2.execute(moduleManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        assertNull(moduleManager.getModule(\"test2\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        assertNotNull(moduleManager.getModule(\"CS2106\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    void execute_updateModule_throwException() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"update 100 \\\"asdasd\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(\"test2\");","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"update 1 \\\"test2\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"update 1 \\\"???\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kelvneo":3,"3m0W33D":46,"Woolicious98":4}},{"path":"src/test/java/terminus/command/module/ViewModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TestUtils;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"public class ViewModuleCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private static final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    void execute_viewModule_noModules_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        Command cmd \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        assertEquals(Messages.MESSAGE_RESPONSE_NO_MODULES,","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"            TestUtils.generateCommandOutputString(cmdResult.getMessage()));","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewModule_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kelvneo":13,"3m0W33D":30,"Woolicious98":2}},{"path":"src/test/java/terminus/common/CommonUtilsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"public class CommonUtilsTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private ArrayList\u003cString\u003e resultExpected;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    void reset() {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"        resultExpected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    void setup() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        resultExpected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        String input \u003d \"\\\"test1\\\" \\\"test2\\\"\";","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_missingDoubleQuotes() {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        String input \u003d \"\\\"test1\\\" \\\"test2\";","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(0, result.size());","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        input \u003d \"\\\"test1 test2\";","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        input \u003d \"test1 test2\";","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_extraDoubleQuotes() {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        String input \u003d \"\\\"test1\\\" \\\"\\\"test2\\\"\";","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(0, result.size());","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"        input \u003d \"\\\"test1\\\" \\\"test2\\\"\\\"\";","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(0, result.size());","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"        input \u003d \"\\\"test1\\\" \\\" \\\" \\\" \\\"\";","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\" \");","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"        resultExpected.add(\" \");","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(3, result.size());","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_missingArgument() {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_nullArgument_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        String input \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.findArguments(input));","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"    void isArrayEmpty_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.hasEmptyString(resultExpected));","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"    void isArrayEmpty_emptyElements() {","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.hasEmptyString(resultExpected));","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(resultExpected);","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.hasEmptyString(resultExpected));","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"    void isArrayEmpty_nullElements_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.hasEmptyString(resultExpected));","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"    void isArrayEmpty_nullArraylist_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.hasEmptyString(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"    void getClassName_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"3m0W33D"},"content":"        String result \u003d CommonUtils.getClassName(Note.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"Note\", result);","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.getClassName(Link.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"Link\", result);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"    void getClassName_invalidInput() {","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"3m0W33D"},"content":"        String result \u003d CommonUtils.getClassName(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"test1\", result);","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.getClassName(\"test1.2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"2\", result);","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"    void getClassName_nullInput_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.getClassName(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"    void convertToLocalTime_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.convertToLocalTime(\"11:56\") instanceof LocalTime);","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.convertToLocalTime(\"22:56\") instanceof LocalTime);","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"    void convertToLocalTime_invalidInput_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e CommonUtils.convertToLocalTime(\"test\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e CommonUtils.convertToLocalTime(\"25:10\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e CommonUtils.convertToLocalTime(\"11-10\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.convertToLocalTime(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"    void isValidDay_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"monday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"MoNdAy\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"tuesday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"wednesday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"thursday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"friday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"saturday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"sunday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"    void isValidDay_invalidInput() {","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(\"mon\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(\"test1\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(\"wednesdey\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(\"\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"    void isValidUrl_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidUrl(\"https://www.test.com\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidUrl(\"http://www.test.org\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidUrl(\"https://nus-sg.zoom.us/j/88433650229?pwd\u003dNFg3WSl0UEQ5ZG05ZW1MZz09\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"LouisLouis19"},"content":"    void isValidUrl_invalidInput_exceptionThrown() throws InvalidArgumentException {","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.isValidUrl(\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.isValidUrl(\"..\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"Woolicious98"},"content":"    void isStringNullOrEmpty_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.isStringNullOrEmpty(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.isStringNullOrEmpty(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isStringNullOrEmpty(\"test\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"Woolicious98"},"content":"    void isValidFileName_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.isValidFileName(\"test\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.isValidFileName(\"CS2113T\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"Woolicious98"},"content":"    void isValidFileName_invalidFileName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isValidFileName(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isValidFileName(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isValidFileName(\"\\\\uD83D\\\\uDE00\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"Woolicious98"},"content":"        String s \u003d \"a\".repeat(31);","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isValidFileName(s));","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"Woolicious98"},"content":"    void getFileNameOnly_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"test\", CommonUtils.getFileNameOnly(\"test.txt\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"Woolicious98"},"content":"    void getFileNameOnly_invalidFileName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(null, CommonUtils.getFileNameOnly(\"test.txt.txt\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(null, CommonUtils.getFileNameOnly(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"Woolicious98"},"content":"    void getFileNameOnly_nullInput_exceptionThrown() {","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.getFileNameOnly(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"LouisLouis19"},"content":"    void isValidDuration_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.isValidDuration(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.isValidDuration(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.isValidDuration(2));","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.isValidDuration(-3));","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.isValidDuration(34));","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.isValidDuration(-1));","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.isValidDuration(25));","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":246,"author":{"gitId":"LouisLouis19"},"content":"    void hasDurationOverflow_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.hasDurationOverflow(LocalTime.of(22,22), 2));","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.hasDurationOverflow(LocalTime.of(22,00), 3));","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.hasDurationOverflow(LocalTime.of(23,00), 2));","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.hasDurationOverflow(LocalTime.of(00,22), 24));","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.hasDurationOverflow(LocalTime.of(02,22), 23));","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.hasDurationOverflow(LocalTime.of(22,22), 1));","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.hasDurationOverflow(LocalTime.of(23,59), 0));","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.hasDurationOverflow(LocalTime.of(00,00), 0));","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.hasDurationOverflow(LocalTime.of(23,00), 0));","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":258,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":259,"author":{"gitId":"3m0W33D"},"content":"    void isValidIndex() {","lastModifiedDate":"2021-10-23"},{"lineNumber":260,"author":{"gitId":"3m0W33D"},"content":"        String[] list \u003d new String[50];","lastModifiedDate":"2021-10-23"},{"lineNumber":261,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidIndex(5, list));","lastModifiedDate":"2021-10-23"},{"lineNumber":262,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidIndex(50, list));","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidIndex(1, list));","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidIndex(0, list));","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidIndex(51, list));","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidIndex(100, list));","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"LouisLouis19"},"content":"    void getCurrentDay_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(CommonUtils.getCurrentDay());","lastModifiedDate":"2021-10-23"},{"lineNumber":272,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":273,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":31,"Woolicious98":182,"3m0W33D":60}},{"path":"src/test/java/terminus/common/TestUtils.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.common;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"public class TestUtils {","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"    public static String generateCommandOutputString(String[] messages) {","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"        for (String message: messages) {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"            stringBuilder.append(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"            stringBuilder.append(\"\\n\");","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"        return stringBuilder.toString().trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kelvneo":14}},{"path":"src/test/java/terminus/content/ContentManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.content;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"public class ContentManagerTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    private ContentManager\u003cNote\u003e noteContentManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    private ContentManager\u003cLink\u003e linkContentManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        this.noteContentManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        this.linkContentManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    void addContent_note_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(note.getDisplayInfo(), noteContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    void addContent_link_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        Link link \u003d new Link(\"test\", \"monday\", LocalTime.now(), 1, \"test.com\");","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(link.getDisplayInfo(), linkContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    void deleteContent_link_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        Link link \u003d new Link(\"test\", \"monday\", LocalTime.now(), 1, \"test.com\");","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, linkContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        assertSame(link.getName(), linkContentManager.deleteContent(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, linkContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    void deleteContent_note_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        assertSame(note.getName(), noteContentManager.deleteContent(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"    void deleteContent_exceptionThrown() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"        Link link \u003d new Link(\"test\", \"monday\", LocalTime.now(), 2, \"test.com\");","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkContentManager.deleteContent(-1));","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkContentManager.deleteContent(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkContentManager.deleteContent(99));","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"    void getContent_note_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(note.getDisplayInfo(), noteContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"    void getContent_link_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"        Link link \u003d new Link(\"test\", \"monday\", LocalTime.of(23, 00), 1,\"test.com\");","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(link.getDisplayInfo(), linkContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"    void getContent_exceptionThrown() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e noteContentManager.getContentData(-1));","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e noteContentManager.getContentData(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e noteContentManager.getContentData(99));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"    void getContentSize_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test1\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"        note \u003d new Note(\"test2\", \"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"        note \u003d new Note(\"test3\", \"test3\");","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(3, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    void listContent_note_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        Note note1 \u003d new Note(\"test1\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"        Note note2 \u003d new Note(\"test2\", \"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"        Note note3 \u003d new Note(\"test3\", \"test3\");","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note1);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note2);","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note3);","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"        String result \u003d noteContentManager.listAllContents();","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(note1.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(note2.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(note3.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"    void listContent_link_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"        Link link1 \u003d new Link(\"test1\", \"monday\", LocalTime.now(), 1, \"test.com\");","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"        Link link2 \u003d new Link(\"test2\", \"monday\", LocalTime.now(), 2, \"test.com\");","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"        Link link3 \u003d new Link(\"test3\", \"monday\", LocalTime.now(), 3, \"test.com\");","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link1);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link2);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link3);","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"        String result \u003d linkContentManager.listAllContents();","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(link1.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(link2.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(link3.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":7,"Woolicious98":122}},{"path":"src/test/java/terminus/module/ModuleManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.module;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class ModuleManagerTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    public static final String TEMP_MODULE \u003d \"Test\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    void getModule_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(TEMP_MODULE);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        assertNotNull(moduleManager.getModule(TEMP_MODULE));","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.removeModule(TEMP_MODULE);","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        assertNull(moduleManager.getModule(TEMP_MODULE));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    void getAllModules_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        IntStream.range(0, 5).forEach(i -\u003e moduleManager.addModule(TEMP_MODULE + i));","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        String[] listOfModules \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(5, listOfModules.length);","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(Arrays.asList(listOfModules).contains(TEMP_MODULE.toUpperCase() + 3));","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    void updateModule_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(TEMP_MODULE);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        NusModule tempMod \u003d moduleManager.getModule(TEMP_MODULE);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.removeModule(TEMP_MODULE);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.setModule(\"newName\", tempMod);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        assertNotNull(moduleManager.getModule(\"newName\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.removeModule(\"newName\");","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        assertNull(moduleManager.getModule(\"newName\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"3m0W33D":49}},{"path":"src/test/java/terminus/module/NusModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.module;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"public class NusModuleTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    private NusModule module;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        this.module \u003d new NusModule();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    void getContent_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e noteContentManager \u003d module.getContentManager(Note.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cLink\u003e linkContentManager \u003d module.getContentManager(Link.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test1\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"        Link link \u003d new Link(\"test1\", \"test1\", LocalTime.now(), 2, \"test1\");","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(note.getDisplayInfo(), noteContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(link.getDisplayInfo(), linkContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    void getContent_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e module.getContentManager(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":1,"Woolicious98":39}},{"path":"src/test/java/terminus/parser/LinkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.link.AddLinkCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"public class LinkCommandParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"exitt\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"helpp\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"aadddd\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"vieww\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"dellett\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"eXiT tt\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"HeLp pppp\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveExitCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"eXiT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"   ExIt   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveHelpCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"HeLp\") instanceof HelpCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"   hElP   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveAddCommand_InvalidArgumentExceptionThrown()","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"add\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\"test day\\\"\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"test day\\\" \\\"00:00\\\"\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"today\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"monday\\\" \\\"x:30\\\" \\\"3\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"10:00\\\" \\\"1\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"Monday\\\" \\\"10:00\\\" \\\"1\\\" \\\"empty\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"10:00\\\" \\\"1\\\" \\\"zoom\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"10:00\\\" \\\"-1\\\" \\\"zoom.test\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"23:00\\\" \\\"25\\\" \\\"zoom.test\\\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"23:00\\\" \\\"12\\\" \\\"zoom.test\\\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"23:00\\\" \\\"12\\\" \\\"zoom.test\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveAddCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"                \"add \\\"test desc\\\" \\\"Tuesday\\\" \\\"10:00\\\" \\\"1\\\" \\\"https://zoom.us/test\\\"\") instanceof AddLinkCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"                \"add \\\"    test     \\\" \\\"Wednesday\\\" \\\"10:00\\\" \\\"2\\\" \\\"    https://zoom.us/test    \\\"\") instanceof AddLinkCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"                \"add \\\"CS2113T Lecture\\\" \\\"Friday\\\" \\\"16:00\\\" \\\"3\\\" \\\"https://zoom.us/test\\\"\") instanceof AddLinkCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveDeleteCommand_exceptionThrown()","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"delete\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"delete abcd\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"delete -1\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveDeleteCommand_success()","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"delete 1\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"delete 2\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveViewCommand_exceptionThrown() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"view abcd\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveViewCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"view\") instanceof ViewCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"view 1\") instanceof ViewCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"LouisLouis19"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"add\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"back\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"delete\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"view\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"LouisLouis19"},"content":"    void getWorkspace_isSchedule() {","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(tempModule + \" \u003e schedule\", linkCommandParser.getWorkspace());","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"LouisLouis19"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LouisLouis19":125,"3m0W33D":10,"Woolicious98":4}},{"path":"src/test/java/terminus/parser/MainCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.GoCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"public class MainCommandParserTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"eXiT a\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"HeLp    a\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveExitCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveHelpCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveNoteCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \" note\") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \" NOTE\") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \"    note   \") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \" note    help\") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \" note    exit\") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"    void getWorkspace_isEmptyString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getWorkspace().isEmpty());","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kelvneo":57,"LouisLouis19":4,"Woolicious98":12,"3m0W33D":4}},{"path":"src/test/java/terminus/parser/ModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.AddModuleCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.DeleteModuleCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.UpdateModuleCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.ViewModuleCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"public class ModuleCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"        commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"adda\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"vie wer\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"deleterr\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"eXiT a\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"HeLp    a\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveExitCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveHelpCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveAddCommand_exceptionThrown()","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\" \"));","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add \\\"    test     \\\" \"));","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveAddCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"test\\\" \") instanceof AddModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"username\\\"\") instanceof AddModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveDeleteCommand_exceptionThrown() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete abcd\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete -5\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add \\\"test1\\\"test2\\\"\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add \\\"test1\\\" \\\"test2\\\"\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveDeleteCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"delete 1\") instanceof DeleteModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"delete 2\") instanceof DeleteModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveViewCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"view\") instanceof ViewModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveUpdateCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"update 1 \\\"test\\\"\") instanceof UpdateModuleCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"update 99 \\\"CS2106\\\"\") instanceof UpdateModuleCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveUpdateCommand_thrownException() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update abcd \\\"test\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update -1 \\\"test\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update 1 \\\"    test    \\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update 1 \\\"\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update -1 \\\"     \\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update -1 \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update \\\"test\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update \"","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"            +","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"3m0W33D"},"content":"            \"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\"","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"            + \"1111111111111 \\\"test\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"add\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"back\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"delete\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"view\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"update\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"3m0W33D"},"content":"    void getWorkspace_isModule() {","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(\"module\", commandParser.getWorkspace());","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"3m0W33D"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"3m0W33D":135}},{"path":"src/test/java/terminus/parser/ModuleWorkspaceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.NotesCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ScheduleCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"public class ModuleWorkspaceCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    private ModuleWorkspaceCommandParser commandParser;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"        commandParser \u003d ModuleWorkspaceCommandParser.getInstance();","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"        commandParser.setWorkspace(\"2106\");","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"adda\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"vie wer\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"deleterr\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"eXiT a\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"HeLp    a\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveExitCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveHelpCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveNoteCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"note\") instanceof NotesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"note add \\\"test\\\" \\\"test\\\"\") instanceof NotesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"note view\") instanceof NotesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"note delete 1\") instanceof NotesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveScheduleCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"schedule\") instanceof ScheduleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"                \"schedule add \\\"test desc\\\" \\\"Tuesday\\\" \\\"10:00\\\" \\\"https://zoom.us/test\\\"\")","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"                instanceof ScheduleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"schedule view\") instanceof ScheduleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"schedule delete 1\") instanceof ScheduleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"3m0W33D":72}},{"path":"src/test/java/terminus/parser/NoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.note.AddNoteCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.note.ExportNoteCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.content.note.ReloadNoteCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"public class NoteCommandParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"adda\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"vie wer\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"deleterr\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"eXiT a\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"HeLp    a\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveExitCommand_success()","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveHelpCommand_success()","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveAddCommand_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add \\\"test1\\\"test2\\\"\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\" \\\"test2\\\"\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveAddCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\"\") instanceof AddNoteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"username\\\" \\\"password\\\"\") instanceof AddNoteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveDeleteCommand_exceptionThrown() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete abcd\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete -5\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveDeleteCommand_success()","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"delete 1\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(commandParser.parseCommand(\"delete 2\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveViewCommand_exceptionThrown()","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"view abcd\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveViewCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"view\") instanceof ViewCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"view 1\") instanceof ViewCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveExportCommand_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"export\") instanceof ExportNoteCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    void parseCommand_resolveReloadCommand_success()","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"reload\") instanceof ReloadNoteCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"add\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"back\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"delete\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"view\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.getCommandList().contains(\"export\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.getCommandList().contains(\"reload\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"3m0W33D"},"content":"    void getWorkspace_isNote() {","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(tempModule + \" \u003e note\", commandParser.getWorkspace());","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"3m0W33D"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LouisLouis19":14,"3m0W33D":103,"Woolicious98":15}},{"path":"src/test/java/terminus/parser/QuestionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.question.AddQuestionCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.question.TestCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"public class QuestionCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    private final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"adda\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"vie wer\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"deleterr\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"eXiT a\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"HeLp    a\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveExitCommand_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveHelpCommand_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveAddCommand_exceptionThrown() {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add \\\"test1\\\"test2\\\"\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\" \\\"test2\\\"\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveAddCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\"\") instanceof AddQuestionCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"    test     \\\" \\\"    test1   \\\"\") instanceof AddQuestionCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"username\\\" \\\"password\\\"\") instanceof AddQuestionCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveDeleteCommand_exceptionThrown() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete abcd\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete -5\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveDeleteCommand_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"delete 1\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"delete 2\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveViewCommand_exceptionThrown() {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"view abcd\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveViewCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"view\") instanceof ViewCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"view 1\") instanceof ViewCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveTestCommand_exceptionThrown() {","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"test abcd\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"test -1\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"test \" + ((long) Integer.MAX_VALUE) + 1));","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveTestCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"test\") instanceof TestCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"test 1\") instanceof TestCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"add\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"back\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"delete\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"view\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"test\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"kelvneo"},"content":"    void getWorkspace_isNote() {","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"kelvneo"},"content":"        assertEquals(tempModule + \" \u003e question\", commandParser.getWorkspace());","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"kelvneo"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":129,"3m0W33D":3}},{"path":"src/test/java/terminus/storage/FilterManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"public class FilterManagerTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private FilterManager filterManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    private Gson gson;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    public static final Path RESOURCE_FOLDER \u003d TestFilePath.RESOURCE_FOLDER;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    public static final String SAVE_FILE \u003d TestFilePath.SAVE_FILE;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    public static final String MALFORMED_FILE \u003d TestFilePath.MALFORMED_FILE;","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    public static final String VALID_FILE \u003d TestFilePath.VALID_FILE;","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    public static final String FAULTY_FOLDER \u003d TestFilePath.FAULTY_FOLDER;","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    public static final String INCORRECT_FILE \u003d \"incorrectFile.json\";","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    private Path incorrectFilePath;","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    void setup() {","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        filterManager \u003d new FilterManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        this.gson \u003d new GsonBuilder().setPrettyPrinting().create();","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        incorrectFilePath \u003d Paths.get(RESOURCE_FOLDER.toString(), INCORRECT_FILE);","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    void filterModule_success() throws InvalidFileException {","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        JsonStorage jsonStorage \u003d new JsonStorage(RESOURCE_FOLDER, INCORRECT_FILE);","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        ModuleManager moduleManager \u003d jsonStorage.loadJson();","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        filterManager.filter(moduleManager);","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getAllModules().length);","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        NusModule module \u003d moduleManager.getModule(\"TEST\");","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cQuestion\u003e questionContentManager \u003d module.getContentManager(Question.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cLink\u003e linkContentManager \u003d module.getContentManager(Link.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, questionContentManager.getTotalContents());","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, linkContentManager.getTotalContents());","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Woolicious98":58}},{"path":"src/test/java/terminus/storage/FolderStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"public class FolderStorageTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    private FolderStorage folderStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\".toUpperCase();","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    void setup() {","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"        this.folderStorage \u003d new FolderStorage(TestFilePath.RESOURCE_FOLDER);","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    @AfterEach","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    void reset() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d folderStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        folderStorage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    void createModuleFolder_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d folderStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        folderStorage.createModuleFolder(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    void createModuleFolder_invalidInput_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e folderStorage.createModuleFolder(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    void deleteModuleFolder_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d folderStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        folderStorage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        folderStorage.deleteModuleFolder(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    void deleteModuleFolder_nullInput_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e folderStorage.deleteModuleFolder(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"    void renameModuleFolder_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d folderStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        Path newFolderPath \u003d folderStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, \"NEWTEST\");","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        folderStorage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(newFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        folderStorage.renameModuleFolder(\"NEWTEST\", tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(newFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        folderStorage.delete(newFolderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"        folderStorage.execute(tempModule, null, StorageActionEnum.CREATE);","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        folderStorage.execute(tempModule, tempModule, StorageActionEnum.UPDATE);","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        folderStorage.execute(null, tempModule, StorageActionEnum.DELETE);","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"    void execute_invalidAction_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e folderStorage.execute(tempModule, null,","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"                StorageActionEnum.EXPORT));","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Woolicious98":84}},{"path":"src/test/java/terminus/storage/JsonStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"public class JsonStorageTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private JsonStorage jsonStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    public static final Path RESOURCE_FOLDER \u003d TestFilePath.RESOURCE_FOLDER;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    public static final String SAVE_FILE \u003d TestFilePath.SAVE_FILE;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    public static final String MALFORMED_FILE \u003d TestFilePath.MALFORMED_FILE;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    public static final String VALID_FILE \u003d TestFilePath.VALID_FILE;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    public static final String FAULTY_FOLDER \u003d TestFilePath.FAULTY_FOLDER;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    void setup() {","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        this.jsonStorage \u003d new JsonStorage(RESOURCE_FOLDER, VALID_FILE);","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    void createJson_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d jsonStorage.getAppendPath(RESOURCE_FOLDER, \"test.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        jsonStorage.setJsonFileName(\"test.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        jsonStorage.createJson();","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        jsonStorage.delete(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"    void createJson_invalidFile_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        jsonStorage.setJsonFileName(null);","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e jsonStorage.createJson());","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"    void loadJson_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        ModuleManager moduleManager \u003d jsonStorage.loadJson();","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        assertNotEquals(null, moduleManager);","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"    void loadJson_malformedJson_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        jsonStorage.setJsonFileName(MALFORMED_FILE);","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e jsonStorage.loadJson());","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"    void saveJson_success() throws InvalidFileException, IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        String tempModule \u003d \"test\".toUpperCase();","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.getModule(tempModule).getContentManager(Link.class).add(new Link(\"test\", \"tuesday\",","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"                LocalTime.of(11, 11), 2, \"https://zoom.us/\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        jsonStorage.setJsonFileName(SAVE_FILE);","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"        jsonStorage.saveJson(moduleManager);","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        assertTextFilesEqual(RESOURCE_FOLDER.resolve(SAVE_FILE), RESOURCE_FOLDER.resolve(VALID_FILE));","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"    void saveJson_nullInput_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e jsonStorage.saveJson(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"        String tempModule \u003d \"test\".toUpperCase();","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.getModule(tempModule).getContentManager(Link.class).add(new Link(\"test\", \"tuesday\",","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"                LocalTime.of(11, 11), 2, \"https://zoom.us/\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"        jsonStorage.setJsonFileName(SAVE_FILE);","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"        jsonStorage.execute(moduleManager, StorageActionEnum.CREATE);","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"        jsonStorage.execute(moduleManager, StorageActionEnum.UPDATE);","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"    void execute_invalidAction_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e jsonStorage.execute(moduleManager, StorageActionEnum.DELETE));","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"     * Asserts whether the text in the two given files are the same. Ignores any differences in line endings. Taken","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"     * from: https://github.com/se-edu/addressbook-level2/blob/master/test/java/seedu/addressbook/util/TestUtil.java#L128","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    public static void assertTextFilesEqual(Path path1, Path path2) throws IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        List\u003cString\u003e list1 \u003d Files.readAllLines(path1);","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"        List\u003cString\u003e list2 \u003d Files.readAllLines(path2);","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(String.join(\"\\n\", list1), String.join(\"\\n\", list2));","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Woolicious98":107}},{"path":"src/test/java/terminus/storage/NoteStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.condition.EnabledOnOs;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.condition.OS;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"public class NoteStorageTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private NoteStorage noteStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\".toUpperCase();","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    void setup() {","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        this.noteStorage \u003d new NoteStorage(TestFilePath.RESOURCE_FOLDER);","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        NusModule module \u003d moduleManager.getModule(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e noteContentManager \u003d module.getContentManager(Note.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(new Note(\"a\", \"this is a test\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    @AfterEach","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    void reset() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d noteStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    void createNoteFile_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d noteStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d noteStorage.getAppendPath(folderPath, \"a.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.createNoteFile(moduleManager, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"    void removeNoteFile_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d noteStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d noteStorage.getAppendPath(folderPath, \"a.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.writeFile(filePath, \"this is a test\");","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.removeNoteFile(tempModule, \"a\");","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"    void removeNoteFile_directoryGiven_exceptionThrown() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d noteStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        Path secondFolderPath \u003d noteStorage.getAppendPath(folderPath, \"TEST2.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.createFolder(secondFolderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(secondFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e noteStorage.removeNoteFile(tempModule, \"TEST2\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"    void saveAllNotes_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d noteStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d noteStorage.getAppendPath(folderPath, \"a.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.saveAllNotes(moduleManager);","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"    void loadNoteIntoModuleManager_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"        NusModule module \u003d moduleManager.getModule(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e noteContentManager \u003d module.getContentManager(Note.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d noteStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 1; i \u003c\u003d 5; i++) {","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"            String filename \u003d String.format(\"a%s.txt\", String.valueOf(i));","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"            Path filepath \u003d noteStorage.getAppendPath(folderPath, filename);","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"            noteStorage.createFile(filepath);","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.loadNoteIntoModuleManager(moduleManager, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"    void loadNoteIntoModuleManager_invalidFile() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        NusModule module \u003d moduleManager.getModule(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e noteContentManager \u003d module.getContentManager(Note.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d noteStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 1; i \u003c\u003d 5; i++) {","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"            String filename \u003d String.format(\"a%s.txt\", String.valueOf(i));","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"            Path filepath \u003d noteStorage.getAppendPath(folderPath, filename);","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"            noteStorage.createFile(filepath);","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"        Path invalidFilepath \u003d noteStorage.getAppendPath(folderPath, \"a.ser\");","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.createFile(invalidFilepath);","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.loadNoteIntoModuleManager(moduleManager, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"        String longName \u003d \"a\".repeat(31);","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"        invalidFilepath \u003d noteStorage.getAppendPath(folderPath, longName + \".txt\");","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.createFile(invalidFilepath);","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.loadNoteIntoModuleManager(moduleManager, tempModule);","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, noteContentManager.getTotalContents());","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"    @EnabledOnOs({OS.LINUX})","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"    void loadNoteIntoModuleManager_sameFileName() throws InvalidFileException {","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"        NusModule module \u003d moduleManager.getModule(tempModule);","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e noteContentManager \u003d module.getContentManager(Note.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, noteContentManager.getTotalContents());","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d noteStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.createFolder(folderPath);","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 1; i \u003c\u003d 5; i++) {","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"            String filename \u003d String.format(\"a%s.txt\", String.valueOf(i));","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"            Path filepath \u003d noteStorage.getAppendPath(folderPath, filename);","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"            noteStorage.createFile(filepath);","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, noteContentManager.getTotalContents());","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"        Path invalidFilepath \u003d noteStorage.getAppendPath(folderPath, \"A1.txt\");","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.createFile(invalidFilepath);","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.loadNoteIntoModuleManager(moduleManager, tempModule);","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, noteContentManager.getTotalContents());","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"    void isValidTextFile_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d noteStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d noteStorage.getAppendPath(folderPath, \"a.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"        File file1 \u003d new File(filePath.toString());","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(noteStorage.isValidTextFile(file1));","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"        filePath \u003d noteStorage.getAppendPath(folderPath, \"a.ser\");","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"        File file2 \u003d new File(filePath.toString());","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(noteStorage.isValidTextFile(file2));","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"    void isValidTextFile_nullInput_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(noteStorage.isValidTextFile(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.execute(moduleManager, tempModule, null, StorageActionEnum.CREATE);","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.execute(moduleManager, tempModule, null, StorageActionEnum.RELOAD);","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"        noteStorage.execute(moduleManager, tempModule, \"a\", StorageActionEnum.DELETE);","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"    void execute_invalidAction_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e noteStorage.execute(moduleManager, tempModule, null,","lastModifiedDate":"2021-10-31"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"                StorageActionEnum.EXPORT));","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Woolicious98":181}},{"path":"src/test/java/terminus/storage/PdfStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"public class PdfStorageTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private PdfStorage pdfStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\".toUpperCase();","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    void setup() {","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        this.pdfStorage \u003d new PdfStorage(TestFilePath.RESOURCE_FOLDER);","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    @AfterEach","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    void reset() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        Path filepath \u003d pdfStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, \"TEST.pdf\");","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        pdfStorage.delete(filepath);","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        NusModule module \u003d moduleManager.getModule(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e noteContentManager \u003d module.getContentManager(Note.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(new Note(\"a\", \"this is a test\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        pdfStorage.execute(moduleManager, tempModule, StorageActionEnum.EXPORT);","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    void execute_invalidAction_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e pdfStorage.execute(moduleManager, tempModule,","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"                StorageActionEnum.CREATE));","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    void exportModuleNotes_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        Path filepath \u003d pdfStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, \"TEST.pdf\");","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(filepath));","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        NusModule module \u003d moduleManager.getModule(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e noteContentManager \u003d module.getContentManager(Note.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(new Note(\"a\", \"this is a test\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        pdfStorage.exportModuleNotes(moduleManager, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(filepath));","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"    void exportModuleNotes_invalidInputs_exceptionThrown() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        Path filepath \u003d pdfStorage.getAppendPath(TestFilePath.RESOURCE_FOLDER, \"TEST.pdf\");","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(filepath));","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e pdfStorage.exportModuleNotes(moduleManager, tempModule));","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e pdfStorage.exportModuleNotes(moduleManager, \"a\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Woolicious98":71}},{"path":"src/test/java/terminus/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"public class StorageManagerTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"TEST\";","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    public static final Path RESOURCE_FOLDER \u003d TestFilePath.RESOURCE_FOLDER;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    public static final String SAVE_FILE \u003d TestFilePath.SAVE_FILE;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    public static final String MALFORMED_FILE \u003d TestFilePath.MALFORMED_FILE;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    public static final String VALID_FILE \u003d TestFilePath.VALID_FILE;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    public static final String FAULTY_FOLDER \u003d TestFilePath.FAULTY_FOLDER;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    void setup() {","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        this.storageManager \u003d new StorageManager(RESOURCE_FOLDER, VALID_FILE);","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    void executeCommandResult_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        storageManager.setDisabled(true);","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        CommandResult result \u003d new CommandResult();","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        storageManager.executeCommandResult(moduleManager, result);","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    void executeCommandResult_folder_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        CommandResult result \u003d new CommandResult(null, StorageActionEnum.DELETE, StorageTypeEnum.FOLDER, \"\");","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        result.setDeletedItemName(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        storageManager.executeCommandResult(moduleManager, result);","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"    void executeCommandResult_text_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        CommandResult result \u003d new CommandResult(tempModule, StorageActionEnum.DELETE, StorageTypeEnum.TEXT, \"\");","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        result.setDeletedItemName(\"a\");","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        storageManager.executeCommandResult(moduleManager, result);","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"    void executeCommandResult_pdf_success() throws InvalidFileException, IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        CommandResult result \u003d new CommandResult(tempModule, StorageActionEnum.EXPORT, StorageTypeEnum.PDF, \"\");","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e noteContentManager \u003d moduleManager.getModule(tempModule).getContentManager(Note.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(new Note(\"a\", \"a\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        storageManager.executeCommandResult(moduleManager, result);","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        Path filepath \u003d RESOURCE_FOLDER.resolve(tempModule + \".pdf\");","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(filepath));","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        Files.delete(filepath);","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    void executeCommandResult_invalidType() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"        CommandResult result \u003d new CommandResult(\"\", StorageActionEnum.RELOAD, StorageTypeEnum.TEST, \"\");","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storageManager.executeCommandResult(moduleManager, result));","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"    void executeCommandResult_nullModuleManager_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"        CommandResult result \u003d new CommandResult();","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storageManager.executeCommandResult(null, result));","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"    void updateMainJsonFile_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        this.storageManager \u003d new StorageManager(RESOURCE_FOLDER, SAVE_FILE);","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"        storageManager.updateMainJsonFile(moduleManager);","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"    void initialize_success() throws InvalidFileException, IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d RESOURCE_FOLDER.resolve(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        Path filepath \u003d folderPath.resolve(\"test.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"        this.storageManager \u003d new StorageManager(folderPath, \"test.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(filepath));","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"        storageManager.initialize();","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(filepath));","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"        Files.deleteIfExists(filepath);","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"        Files.deleteIfExists(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"    void initialize_load_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e noteContentManager \u003d moduleManager.getModule(tempModule).getContentManager(Note.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(new Note(\"a\", \"a\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d RESOURCE_FOLDER.resolve(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"        Path filepath \u003d folderPath.resolve(\"test.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"        storage.createFile(filepath);","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"        this.storageManager \u003d new StorageManager(folderPath, \"test.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"        JsonStorage jsonStorage \u003d new JsonStorage(folderPath,\"test.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"        jsonStorage.saveJson(moduleManager);","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"        storageManager.initialize();","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(filepath);","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"    void save_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"        this.storageManager \u003d new StorageManager(RESOURCE_FOLDER, SAVE_FILE);","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"        this.storageManager.save(moduleManager);","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"    void save_nullInput_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e this.storageManager.save(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Woolicious98":134}},{"path":"src/test/java/terminus/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.condition.EnabledOnOs;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.condition.OS;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidFileException;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"public class StorageTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    public static final Path RESOURCE_FOLDER \u003d TestFilePath.RESOURCE_FOLDER;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    public static final String SAVE_FILE \u003d TestFilePath.SAVE_FILE;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    public static final String MALFORMED_FILE \u003d TestFilePath.MALFORMED_FILE;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    public static final String VALID_FILE \u003d TestFilePath.VALID_FILE;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    public static final String FAULTY_FOLDER \u003d TestFilePath.FAULTY_FOLDER;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\".toUpperCase();","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    private Storage storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    void setup() {","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    @AfterEach","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    void reset() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    void createFolder_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    void createFolder_folderExists() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"    void createFolder_missingParentFolder() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        Path secondFolderPath \u003d storage.getAppendPath(folderPath, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(secondFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(secondFolderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(secondFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"    void createFolder_invalidFolderName_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.createFolder(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"    void createFile_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d storage.getAppendPath(folderPath, \"test1.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"        storage.createFile(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"    void createFile_duplicateFile() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d storage.getAppendPath(folderPath, \"test1.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"        storage.createFile(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"        storage.createFile(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"    void createFile_missingFolder_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d storage.getAppendPath(folderPath, \"test1.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.createFile(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"    void createFile_invalidPath_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.createFile(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"    void readFile_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d storage.getAppendPath(folderPath, \"test1.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"        storage.createFile(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"        String s \u003d storage.readFile(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"\", s);","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"    void readFile_invalidContent_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, FAULTY_FOLDER);","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d storage.getAppendPath(folderPath, \"100.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.readFile(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"    void readFile_nullPath_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.readFile(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"    void writeFile_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d storage.getAppendPath(folderPath, \"test1.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"        storage.writeFile(filePath, \"hello\");","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"        String s \u003d storage.readFile(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"hello\", s);","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"    void writeFile_nullInputs_exceptionThrown() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d storage.getAppendPath(folderPath, \"test1.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.writeFile(null, \"hello\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.writeFile(filePath, null));","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"    void writeFile_missingDirectory_exceptionThrown() throws InvalidFileException, IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d storage.getAppendPath(folderPath, \"test1.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.writeFile(filePath, \"test1\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"    void delete_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"    void delete_nestedFolder() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":185,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"Woolicious98"},"content":"        Path secondFolderPath \u003d storage.getAppendPath(folderPath, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"        Path thirdFolderPath \u003d storage.getAppendPath(secondFolderPath, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(secondFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(thirdFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":191,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(thirdFolderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":192,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":193,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(secondFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(thirdFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":197,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(secondFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(thirdFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":199,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":200,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":201,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"Woolicious98"},"content":"    void delete_nullPath_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":203,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.delete(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":204,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":205,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":206,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":207,"author":{"gitId":"Woolicious98"},"content":"    void delete_pathDoesNotExists() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":208,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":209,"author":{"gitId":"Woolicious98"},"content":"        Path secondFolderPath \u003d storage.getAppendPath(folderPath, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":210,"author":{"gitId":"Woolicious98"},"content":"        Path thirdFolderPath \u003d storage.getAppendPath(secondFolderPath, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":211,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(thirdFolderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":212,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":213,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":215,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":216,"author":{"gitId":"Woolicious98"},"content":"    @EnabledOnOs({OS.WINDOWS})","lastModifiedDate":"2021-10-31"},{"lineNumber":217,"author":{"gitId":"Woolicious98"},"content":"    void delete_fileInUsed_exceptionThrown() throws IOException, InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":219,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d storage.getAppendPath(folderPath, \"test1.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":220,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"Woolicious98"},"content":"        storage.createFile(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"Woolicious98"},"content":"        File file \u003d new File(filePath.toString());","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"Woolicious98"},"content":"        FileOutputStream output \u003d new FileOutputStream(file);","lastModifiedDate":"2021-10-31"},{"lineNumber":224,"author":{"gitId":"Woolicious98"},"content":"        ObjectOutputStream objectOutput \u003d new ObjectOutputStream(output);","lastModifiedDate":"2021-10-31"},{"lineNumber":225,"author":{"gitId":"Woolicious98"},"content":"        objectOutput.writeObject(\"save\");","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.delete(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":227,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.delete(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":228,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.delete(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":229,"author":{"gitId":"Woolicious98"},"content":"        objectOutput.flush();","lastModifiedDate":"2021-10-31"},{"lineNumber":230,"author":{"gitId":"Woolicious98"},"content":"        objectOutput.close();","lastModifiedDate":"2021-10-31"},{"lineNumber":231,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":232,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":233,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":234,"author":{"gitId":"Woolicious98"},"content":"    void getAppendPath_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":235,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":236,"author":{"gitId":"Woolicious98"},"content":"        Path path \u003d RESOURCE_FOLDER.resolve(tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":237,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(path, folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":238,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":239,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":240,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":241,"author":{"gitId":"Woolicious98"},"content":"    void getAppendPath_nullInput() {","lastModifiedDate":"2021-10-31"},{"lineNumber":242,"author":{"gitId":"Woolicious98"},"content":"        Path resultPath \u003d storage.getAppendPath(RESOURCE_FOLDER, null);","lastModifiedDate":"2021-10-31"},{"lineNumber":243,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(null, resultPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":244,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":245,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":246,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":247,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":248,"author":{"gitId":"Woolicious98"},"content":"    @EnabledOnOs({OS.WINDOWS})","lastModifiedDate":"2021-10-31"},{"lineNumber":249,"author":{"gitId":"Woolicious98"},"content":"    void getAppendPath_invalidPath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":250,"author":{"gitId":"Woolicious98"},"content":"        Path resultPath \u003d storage.getAppendPath(RESOURCE_FOLDER, \"*\");","lastModifiedDate":"2021-10-31"},{"lineNumber":251,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(null, resultPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":252,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":253,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":254,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":255,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":256,"author":{"gitId":"Woolicious98"},"content":"    void getListOfFiles_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":257,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":258,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":259,"author":{"gitId":"Woolicious98"},"content":"        Path filePath1 \u003d storage.getAppendPath(folderPath, \"test1.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":260,"author":{"gitId":"Woolicious98"},"content":"        storage.createFile(filePath1);","lastModifiedDate":"2021-10-31"},{"lineNumber":261,"author":{"gitId":"Woolicious98"},"content":"        Path filePath2 \u003d storage.getAppendPath(folderPath, \"test2.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":262,"author":{"gitId":"Woolicious98"},"content":"        storage.createFile(filePath2);","lastModifiedDate":"2021-10-31"},{"lineNumber":263,"author":{"gitId":"Woolicious98"},"content":"        Path filePath3 \u003d storage.getAppendPath(folderPath, \"test3.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":264,"author":{"gitId":"Woolicious98"},"content":"        storage.createFile(filePath3);","lastModifiedDate":"2021-10-31"},{"lineNumber":265,"author":{"gitId":"Woolicious98"},"content":"        File[] resultList \u003d storage.getListOfFiles(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":266,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(3, resultList.length);","lastModifiedDate":"2021-10-31"},{"lineNumber":267,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":268,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":269,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":270,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":271,"author":{"gitId":"Woolicious98"},"content":"    void getListOfFiles_nullPath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":272,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.getListOfFiles(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":273,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":274,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":275,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":276,"author":{"gitId":"Woolicious98"},"content":"    void getListOfFiles_missingPath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":277,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":278,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.getListOfFiles(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":279,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":280,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":281,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":282,"author":{"gitId":"Woolicious98"},"content":"    void getListOfFiles_noFiles() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":283,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":284,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":285,"author":{"gitId":"Woolicious98"},"content":"        File[] resultList \u003d storage.getListOfFiles(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":286,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, resultList.length);","lastModifiedDate":"2021-10-31"},{"lineNumber":287,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":288,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":289,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":290,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":291,"author":{"gitId":"Woolicious98"},"content":"    void getFileType_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":292,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":293,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d storage.getAppendPath(folderPath, \"test1.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":294,"author":{"gitId":"Woolicious98"},"content":"        File file \u003d new File(filePath.toString());","lastModifiedDate":"2021-10-31"},{"lineNumber":295,"author":{"gitId":"Woolicious98"},"content":"        String result \u003d storage.getFileType(file);","lastModifiedDate":"2021-10-31"},{"lineNumber":296,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"text/plain\", result);","lastModifiedDate":"2021-10-31"},{"lineNumber":297,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":298,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":299,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":300,"author":{"gitId":"Woolicious98"},"content":"    void getFileType_nullInput_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":301,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.getFileType(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":302,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":303,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":304,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":305,"author":{"gitId":"Woolicious98"},"content":"    void renameFolder_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":306,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":307,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":308,"author":{"gitId":"Woolicious98"},"content":"        Path newFolderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, \"test1\");","lastModifiedDate":"2021-10-31"},{"lineNumber":309,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":310,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(newFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":311,"author":{"gitId":"Woolicious98"},"content":"        storage.renameFolder(folderPath, newFolderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":312,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(newFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":313,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":314,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(newFolderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":315,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":316,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":317,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":318,"author":{"gitId":"Woolicious98"},"content":"    void renameFolder_oldPathNotExist() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":319,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":320,"author":{"gitId":"Woolicious98"},"content":"        Path newFolderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, \"test1\");","lastModifiedDate":"2021-10-31"},{"lineNumber":321,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":322,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(newFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":323,"author":{"gitId":"Woolicious98"},"content":"        storage.renameFolder(folderPath, newFolderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":324,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(newFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":325,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":326,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(newFolderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":327,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":328,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":329,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":330,"author":{"gitId":"Woolicious98"},"content":"    void renameFolder_newPathExist() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":331,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":332,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":333,"author":{"gitId":"Woolicious98"},"content":"        Path newFolderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, \"test1\");","lastModifiedDate":"2021-10-31"},{"lineNumber":334,"author":{"gitId":"Woolicious98"},"content":"        storage.createFolder(newFolderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":335,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":336,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(newFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":337,"author":{"gitId":"Woolicious98"},"content":"        storage.renameFolder(folderPath, newFolderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":338,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(newFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":339,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(folderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":340,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(newFolderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":341,"author":{"gitId":"Woolicious98"},"content":"        storage.delete(folderPath);","lastModifiedDate":"2021-10-31"},{"lineNumber":342,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":343,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":344,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":345,"author":{"gitId":"Woolicious98"},"content":"    void renameFolder_nullInputs_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":346,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":347,"author":{"gitId":"Woolicious98"},"content":"        Path newFolderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, \"test1\");","lastModifiedDate":"2021-10-31"},{"lineNumber":348,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e storage.renameFolder(null, newFolderPath));","lastModifiedDate":"2021-10-31"},{"lineNumber":349,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e storage.renameFolder(folderPath, null));","lastModifiedDate":"2021-10-31"},{"lineNumber":350,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":351,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":352,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":353,"author":{"gitId":"Woolicious98"},"content":"    void getBufferedReader_success() throws InvalidFileException {","lastModifiedDate":"2021-10-31"},{"lineNumber":354,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d storage.getAppendPath(RESOURCE_FOLDER, VALID_FILE);","lastModifiedDate":"2021-10-31"},{"lineNumber":355,"author":{"gitId":"Woolicious98"},"content":"        BufferedReader reader \u003d storage.getBufferedReader(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":356,"author":{"gitId":"Woolicious98"},"content":"        assertNotEquals(null, reader);","lastModifiedDate":"2021-10-31"},{"lineNumber":357,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":358,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":359,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":360,"author":{"gitId":"Woolicious98"},"content":"    void getBufferedReader_nullPath_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":361,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.getBufferedReader(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":362,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":363,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":364,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":365,"author":{"gitId":"Woolicious98"},"content":"    void getBufferedReader_missingFile_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":366,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":367,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d storage.getAppendPath(folderPath, \"test1.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":368,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.getBufferedReader(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":369,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":370,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":371,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":372,"author":{"gitId":"Woolicious98"},"content":"    void cleanAllFilesInclusive_nullInput_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":373,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e storage.cleanAllFilesInclusive(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":374,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":375,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":376,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":377,"author":{"gitId":"Woolicious98"},"content":"    void cleanAllFilesInclusive_missingPath_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":378,"author":{"gitId":"Woolicious98"},"content":"        Path folderPath \u003d storage.getAppendPath(RESOURCE_FOLDER, tempModule);","lastModifiedDate":"2021-10-31"},{"lineNumber":379,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d storage.getAppendPath(folderPath, \"test1.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":380,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidFileException.class, () -\u003e storage.cleanAllFilesInclusive(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":381,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":382,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":383,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":384,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":385,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Woolicious98":385}},{"path":"src/test/java/terminus/timetable/ConflictManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.timetable;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"class ConflictManagerTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"    private ConflictManager conflictManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    private Link newLink;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"    private ArrayList\u003cLink\u003e currentLinks;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"        this.newLink \u003d new Link(\"test conflict\", \"Saturday\", LocalTime.of(9, 00), 3, \"https://zoom.us/test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"        this.currentLinks \u003d new ArrayList\u003cLink\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    void execute_getAllLinks_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"        conflictManager \u003d new ConflictManager(moduleManager, newLink);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"            currentLinks.add(new Link(\"test conflict\", \"Friday\", LocalTime.of(7, 00), 2, \"https://zoom.us/test\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"            assertNotNull(conflictManager.getAllLinks());","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    void execute_getConflictingSchedule_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        conflictManager \u003d new ConflictManager(moduleManager, newLink);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"            currentLinks.add(new Link(\"test conflict\", \"Saturday\", LocalTime.of(8, 00), 2, \"https://zoom.us/test\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"            assertNotNull(conflictManager.getConflictingSchedule());","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"LouisLouis19":41,"kelvneo":4}},{"path":"src/test/java/terminus/timetable/TimetableTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.timetable;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"class TimetableTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    void execute_getDailySchedule_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"        LinkCommandParser linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Monday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.getDailySchedule(\"Monday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand1 \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand1.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.getDailySchedule(\"Thursday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand2 \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Friday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand2.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.getDailySchedule(\"Friday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"    void execute_getDailySchedule_fail() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"        LinkCommandParser linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"        linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Monday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand1 \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand1.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand2 \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Friday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand2.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        assertNull(timetable.getDailySchedule(\"Tuesday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"        assertNull(timetable.getDailySchedule(\"Sunday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        assertNull(timetable.getDailySchedule(\"Saturday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"    void execute_getWeeklySchedule_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"        LinkCommandParser linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"        linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"        assertNull(timetable.getWeeklySchedule());","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Monday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.getWeeklySchedule());","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand1 \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand1.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.getWeeklySchedule());","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand2 \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Friday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand2.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.getWeeklySchedule());","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"    void execute_checkEmptySchedule_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"        String schedule \u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"        String day1 \u003d \"Friday\";","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"        String day2 \u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.checkEmptySchedule(schedule, day1));","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.checkEmptySchedule(schedule, day2));","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"LouisLouis19":85,"kelvneo":13,"3m0W33D":1}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"if exist .\\data rmdir /Q /S .\\data","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"if exist .\\data rmdir /Q /S .\\data","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kelvneo":4,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"if [ -d \"./data\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"then","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    rm -rf ./data","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"fi","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"if [ -d \"./data\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"then","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    rm -rf ./data","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"fi","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kelvneo":10,"-":23}}]
