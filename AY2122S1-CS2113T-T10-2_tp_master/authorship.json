[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"# TermiNUS","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"[![Java CI](https://github.com/AY2122S1-CS2113T-T10-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2113T-T10-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2113T-T10-2/tp/branch/master/graph/badge.svg?token\u003dCLLWHY78LP)](https://codecov.io/gh/AY2122S1-CS2113T-T10-2/tp)","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"## Setting up","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"### Prerequisite","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"Before setting up the project, please do ensure you have the following items installed.","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"- [JDK 11](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html)","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"- [IntelliJ IDEA](https://www.jetbrains.com/idea/download/)","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"`Java Development Kit ver 11 (JDK 11)` is the **environment / programming language** in which","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"TermiNUS is written with and `IntelliJ IDEA` will be the **integrated development environment (","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"IDE)** platform for us to write the programming codes on.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"Go to [link](https://github.com/AY2122S1-CS2113T-T10-2/tp) and retrieve the `TermiNUS project file`.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"You can do so by **forking** the project and **cloning** a copy into your computer.","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"To learn more about github fork-clone feature please follow the guide","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"on [link](https://docs.github.com/en/get-started/quickstart/fork-a-repo).","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"### Setting up in Intellij","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"1. Open the application `IntelliJ IDEA`.","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"2. Inside `IntelliJ IDEA` navigate to `open project` button","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"   1. On the top left of the app, `File`\u0026rarr;`Open...`","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"3. Locate and select the folder containing the files for **Terminus** that you have downloaded","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"   earlier on.","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"4. Change the **Project SDK** that IntelliJ IDEA will be using.","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"   1. On the top left of the app, `File`\u0026rarr;`Project Structure...`","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"   2. Under **Project SDK:** section, find and select JDK version 11.","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"      Eg: `Amazon Corretto version 11.0.12`.","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"   3. Under **Project language level:**, select `SDK default`.","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"5. Verifying the setup","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"   1. After performing the steps above, locate the file `src/main/java/terminus/Terminus.java`,","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"      right-click and select `Run \u0027Terminus.main()\u0027`.","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"   2. If everything is correctly set up, you should see the following terminal.","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"   Welcome to TermiNUS!","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"   Type any of the following to get started:","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"   \u003e exit","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"   \u003e help","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"   \u003e note","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"   \u003e schedule","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"   [] \u003e\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"* We use JUnit testing for this project. ","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"* A CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"kelvneo":47,"-":45}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    implementation \u0027com.google.code.gson:gson:2.8.8\u0027, \u0027com.itextpdf:itextpdf:5.5.13.2\u0027","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    afterEvaluate {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        })","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    reports {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        html.required \u003d true","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        xml.required \u003d true","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    mainClassName \u003d \"terminus.Terminus\"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"    archiveBaseName \u003d \"TermiNUS\"","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kelvneo":18,"3m0W33D":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/2332196?s\u003d460\u0026v\u003d4\" width\u003d\"100\"/\u003e | Kelvin Neo | [Github](https://github.com/kelvneo) | [Portfolio](docs/team/kelvneo.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/69447277?s\u003d460\u0026v\u003d4\" width\u003d\"100\"/\u003e | Louis | [Github](https://github.com/LouisLouis19) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/68680740?s\u003d460\u0026v\u003d4\" width\u003d\"100\"/\u003e| Tan Juen Woo | [Github](https://github.com/woolicious98) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/26686523?s\u003d460\u0026v\u003d4\" width\u003d\"100\"/\u003e | Schuyler Tay | [Github](https://github.com/3m0W33D) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"kelvneo":4,"LouisLouis19":1,"-":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"## Table of Content","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"- [1. Introduction](#1-introduction)","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"    * [1.1 Purpose](#11-purpose)","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    * [1.2 Using this Guide](#12-using-this-guide)","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"- [2. Setting up](#2-setting-up)","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    * [2.1 Setting up the project in your computer](#21-setting-up-the-project-in-your-computer)","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"        + [2.1.1 Prerequisite](#211-prerequisite)","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"        + [2.1.2 Getting the project files](#212-getting-the-project-files)","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"        + [2.1.3 Setting up on IntelliJ IDEA](#213-setting-up-on-intellij-idea)","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"        + [2.1.4 Configuring the Coding Style](#214-configuring-the-coding-style)","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"- [3. Design](#3-design)","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"  * [3.1 Architecture](#31-architecture)","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"  * [3.2 UI](#32-ui-component)","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"  * [3.3 Parser](#33-parser-component)","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"  * [3.4 Command](#34-command-component)","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"  * [3.5 Module](#35-module-component)","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"  * [3.6 Content](#36-content-component)","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"  * [3.7 Active Recall](#37-active-recall-component)","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"  * [3.8 Storage](#38-storage-component)","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"- [4. Implementation](#4-implementation)","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"  * [4.1 Timetable](#41-timetable-feature)","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"  * [4.2 Active Recall](#42-active-recall-implementation)","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"  * [4.3 Workspace]()","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"  * [4.4 Adding and Deleting Content]()","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"  * [4.5 Storage](#45-storage-implementation)","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    + [4.5.1 Initialize Storage](#451-initialize-storage-implementation)","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"- [5. Documentation, Logging, Testing and DevOps]()","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"- [Appendix A: Product Scope]()","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"- [Appendix B: User Stories ]()","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"- [Appendix C: Non Functional Requirements]()","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"- [Appendix D: Glossary]()","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"- [Appendix E: Instructions for Manual Testing]()","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"## 1. Introduction","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"**Welcome to TermiNUS!**","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"**TermiNUS** is a CLI (command line interface) program for NUS Students who wish to organize their","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"NUS academic materials through a CLI. The product aims to aid student in organizing their academic","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"schedule and enhancing their learning experiences.","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"**TermiNUS** is written in **Java 11** and uses the Object-Oriented Programming (OOP) paradigm which","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"provides us with means to structure a software program into organized and reusable pieces of codes,","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"making it more efficient for future improvements and revisions.","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"### 1.1 Purpose","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"This developer guide is for any developers who wish to contribute to **TermiNUS**. It contains the","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"overall architecture design of **TermiNUS** and it displays our main features implementation details","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"with the rationale and consideration for each. As of now, the guide is written for the current","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"release version of `TermiNUS of v1.0`.","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"### 1.2 Using this Guide","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"Insert legends / special icons used here to aid in the guide later.","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"## 2. Setting up","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"### 2.1 Setting up the project in your computer","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"#### 2.1.1 Prerequisite","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"Before setting up the project, please do ensure you have the following items installed.","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"- [JDK 11](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html)","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"- [IntelliJ IDEA](https://www.jetbrains.com/idea/download/)","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"`Java Development Kit ver 11 (JDK 11)` is the **environment / programming language** in which","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"TermiNUS is written with and `IntelliJ IDEA` will be the **integrated development environment (","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"IDE)** platform for us to write the programming codes on.","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"#### 2.1.2 Getting the project files","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"Go to [link](https://github.com/AY2122S1-CS2113T-T10-2/tp) and retrieve the `TermiNUS project file`.","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"You can do so by **forking** the project and **cloning** a copy into your computer.","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"To learn more about github fork-clone feature please follow the guide","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"on [link](https://docs.github.com/en/get-started/quickstart/fork-a-repo).","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"#### 2.1.3 Setting up on IntelliJ IDEA","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"1. Open the application `IntelliJ IDEA`.","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"2. Inside `IntelliJ IDEA` navigate to `open project` button","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"    1. On the top left of the app, `File`\u0026rarr;`Open...`","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"3. Locate and select the folder containing the files for **Terminus** that you have downloaded","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"   earlier on.","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"4. Change the **Project SDK** that IntelliJ IDEA will be using.","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"    1. On the top left of the app, `File`\u0026rarr;`Project Structure...`","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"    2. Under **Project SDK:** section, find and select JDK version 11.","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"       Eg: `Amazon Corretto version 11.0.12`.","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"    3. Under **Project language level:**, select `SDK default`.","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"5. Verifying the setup","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"    1. After performing the steps above, locate the file `src/main/java/terminus/Terminus.java`,","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"       right-click and select `Run \u0027Terminus.main()\u0027`.","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"    2. If everything is correctly set up, you should see the following terminal.","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"   ","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"   ```","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"   Welcome to TermiNUS!","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"   ","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"   Type any of the following to get started:","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"   \u003e exit","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"   \u003e help","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"   \u003e note","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"   \u003e schedule","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"   ","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"   [] \u003e\u003e\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"   ```","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"#### 2.1.4 Configuring the Coding Style","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"Import the coding style xml file into your IntelliJ IDEA.","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"1. Go to IntelliJ IDEA settings page.","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"    1. Located at the **top-right** of the app, click on the gear icon and select `Settings...`.","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"2. Under the settings page, locate the `Code Style` tab.","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"    1. `Editor`\u0026rarr;`Code Style`","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"3. Once you are at the `Code Style` tab, you will need to import the file `CS2113TStyle.xml`.","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"    1. At the `Scheme` section, select the gear icon and select `Import Scheme`","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"       \u0026rarr;`IntelliJ IDEA code style XML`.","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"    2. Locate and select the `CS2113TStyle.xml` file which is included in the TermiNUS project.","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"    3. Once done, select `Apply` then `OK`.","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"4. Now your IntelliJ IDEA should follow our Coding Style.","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"3m0W33D"},"content":"\u003e 💡 IntelliJ IDEA have certain shortcut key to aid in auto-formatting of code.","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"\u003e Once you are done with a piece of code, highlight the section you have just written and press the","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"\u003e key `CTRL + SHIFT + L`.","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"3m0W33D"},"content":"## 3. Design","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"3m0W33D"},"content":"### 3.1 Architecture","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"3m0W33D"},"content":"![](attachments/MainInit.png)  ","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"3m0W33D"},"content":"Initialization of all the classes required for Terminus class to run","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"3m0W33D"},"content":"![](attachments/MainLogic.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"3m0W33D"},"content":"Main loop logic of Terminus","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"3m0W33D"},"content":"### 3.2 UI Component","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"kelvneo"},"content":"![](attachments/UIClassDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"kelvneo"},"content":"The Ui Component consists of the `Ui` class which handles all input and output operations within ","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"kelvneo"},"content":"TermiNUS application. To reduce coupling, we have used `Ui` on only the main runner `Terminus`, and ","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"kelvneo"},"content":"the Active Recall `GameEnvironment`. If future features require the extended use of `Ui`, they may ","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"kelvneo"},"content":"call `getInstance()` from `Ui` to get the same singleton class as both `GameEnvironment` and ","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"kelvneo"},"content":"`Terminus`.","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"kelvneo"},"content":"The `Ui` implements the following functionality:","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"kelvneo"},"content":"- Printing large custom banners with moving to new workspaces.","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"kelvneo"},"content":"- Getting of user input through `getUserInput()` and `requestCommand()`.","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"kelvneo"},"content":"- Printing string arrays to the output through `printSection()`.","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"3m0W33D"},"content":"### 3.3 Parser Component","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"3m0W33D"},"content":"![](attachments/ParserClassDiagram.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"kelvneo"},"content":"The CommandParser Component consist of the `CommandParser` and multiple `XYZCommandParser`, ","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"3m0W33D"},"content":"each representing a specific type command parser. The `CommandParser` will receive a command in ","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"3m0W33D"},"content":"`parseCommand` function and check the according `HashMap\u003cString, Command\u003e` before ","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"3m0W33D"},"content":"returning the according `Command` object back. ","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"3m0W33D"},"content":"The `CommandParser` implements the following functionality:","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"kelvneo"},"content":"- Parsing the command string and giving the respective `Command` object ","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"3m0W33D"},"content":"- Keeps track of the workspace","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"3m0W33D"},"content":"- Provides functionality to list all commands for the help `Command`","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"3m0W33D"},"content":"### 3.4 Command Component","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"3m0W33D"},"content":"![](attachments/CommandClassDiagram.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"3m0W33D"},"content":"The Command Component `Command` class, `CommandResult` class and multiple `XYZCommand` ","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"3m0W33D"},"content":"each representing a specific type of command. Each `Command` will `parseArguments` and set them ","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"3m0W33D"},"content":"to private variables, and then `execute` would run specific operation specified by `XYZCommand`.","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"3m0W33D"},"content":"The `Command` would then modify the required changes in `ModuleManager` and ","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"3m0W33D"},"content":"print the required to be output to `Ui` before returning a `CommandResult`.   ","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"3m0W33D"},"content":"The `CommandResult` will contains certain attributes to indicate if the `Terminus` loop should be ","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"3m0W33D"},"content":"terminated or if the `CommandParser` might require changing through the `additionData` attribute.","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"3m0W33D"},"content":"The `CommandParser` maybe used to change workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"3m0W33D"},"content":"### 3.5 Module Component","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"3m0W33D"},"content":"![](attachments/Module.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"3m0W33D"},"content":"The Module Components consists of the `ModuleManager` which contains a collection of `NusModule` and","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"3m0W33D"},"content":"maps a module name to a specific `NusModule`.","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"3m0W33D"},"content":"The `NusModule` consist of `ContentManager` which help to manage `Content`.","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"3m0W33D"},"content":"The `ContentManager` accepts a `Content` type generic which is from the Content Component","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"3m0W33D"},"content":"The `ModuleManager` implements the below functionality:","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"3m0W33D"},"content":"- add, delete or retrieve a specific `NusModule`","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"3m0W33D"},"content":"- list all module names","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"3m0W33D"},"content":"- grants access to the different types of content stored by `NusModule`","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"3m0W33D"},"content":"### 3.6 Content Component","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"3m0W33D"},"content":"![](attachments/Content.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"3m0W33D"},"content":"The Content Component consist of objects such as `Link`, `Question` and `Note`","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"3m0W33D"},"content":"which inherit from the abstract `Content` class. The `ContentManager` allows a generic ","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"3m0W33D"},"content":"`\u003cT extends Content\u003e` which must belong to the `Content` type or its children. The ","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"3m0W33D"},"content":"`ContentManager` manages an `ArrayList` of Content type and provide the following functionality:","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"3m0W33D"},"content":"- adding of any Content type","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"3m0W33D"},"content":"- removing any Content","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"3m0W33D"},"content":"- accessing the Content and the inner data attribute","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"3m0W33D"},"content":"- getting the total number of content","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"3m0W33D"},"content":"- listing all contents","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"3m0W33D"},"content":"- accessing the arraylist of contents","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"3m0W33D"},"content":"### 3.7 Active Recall Component","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"kelvneo"},"content":"![Active Recall Class Diagram](attachments/ActiveRecallClassDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"kelvneo"},"content":"The Active Recall Component consists of the `GameEnvironment` as the centre of the design.","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"kelvneo"},"content":"The `GameEnvironment` consists of a `QuestionGenerator` which will only exist if there is a ","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"kelvneo"},"content":"`GameEnvironment`, and a `Ui` instance to handle user input and printing of information. The ","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"kelvneo"},"content":"decision to re-use the `Ui` is to allow easier upgrades to the `Ui` if there is a need in the ","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"kelvneo"},"content":"future.","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"kelvneo"},"content":"The `QuestionGenerator` takes in a list of `Question` and a maximum question count to randomly","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"kelvneo"},"content":"generate questions based on `Random`. If `Random` is not provided, a new `Random` with a random seed","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"kelvneo"},"content":"will be created to generate the `Question` order.  ","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"kelvneo"},"content":"The `DifficultyModifier` is a utility class used to calculate and tweak the weights of `Question`","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"kelvneo"},"content":"after the user has provided feedback on the difficulty of the question. It uses a ","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"kelvneo"},"content":"[logistic curve](https://en.wikipedia.org/wiki/Logistic_function) to calculate the change in weight.","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"kelvneo"},"content":"For further details on the implementation, head to ","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"kelvneo"},"content":"[4.2 Active Recall Implementation](#42-active-recall-implementation).","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":234,"author":{"gitId":"3m0W33D"},"content":"### 3.8 Storage Component","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"Woolicious98"},"content":"![](attachments/StorageComponent.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"Woolicious98"},"content":"The Module Storage handles any file I/O operations of TermiNUS.","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"Woolicious98"},"content":"The `ModuleStorage` component:","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"Woolicious98"},"content":"- can create folder for each module provided by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"Woolicious98"},"content":"- can save modules, schedules and links data in a `.json` file.","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"Woolicious98"},"content":"- can save notes into multiple `.txt` files.","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"Woolicious98"},"content":"`TermiNUS` saved these data as either a `.json` or `.txt` file so users will be able to edit saved","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"Woolicious98"},"content":"data easily with any available text editor.","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":251,"author":{"gitId":"LouisLouis19"},"content":"## 4. Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"LouisLouis19"},"content":"### 4.1 Timetable Feature","lastModifiedDate":"2021-10-23"},{"lineNumber":254,"author":{"gitId":"LouisLouis19"},"content":"The timetable feature aims to provide users a single command to access all the schedules they store in different modules within TermiNUS.","lastModifiedDate":"2021-10-23"},{"lineNumber":255,"author":{"gitId":"LouisLouis19"},"content":"This feature would ease users in accessing a compilation of all their schedule, instead of having to access all the individual module workspaces.","lastModifiedDate":"2021-10-23"},{"lineNumber":256,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":258,"author":{"gitId":"LouisLouis19"},"content":"#### 4.1.1 Current Implementation","lastModifiedDate":"2021-10-23"},{"lineNumber":259,"author":{"gitId":"LouisLouis19"},"content":"The following sequence diagram shows how the timetable feature works:","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"LouisLouis19"},"content":"![](attachments/TimetableSequenceDiagram.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"LouisLouis19"},"content":"The timetable feature is one of TermiNUS\u0027 features which can be accessed from the main workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"LouisLouis19"},"content":"The `timetable` feature has 2 variations:","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"LouisLouis19"},"content":"- **Daily** Timetable","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"LouisLouis19"},"content":"- **Weekly** timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"LouisLouis19"},"content":"The timetable feature is facilitated by the `TimetableCommand`.","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"LouisLouis19"},"content":"By running the command `timetable` with the relevant parameter, the `MainCommandParser` will construct a new `TimetableCommand`.","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"LouisLouis19"},"content":"This `TimetableCommand` will be used to execute the user\u0027s timetable instruction.","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":272,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":273,"author":{"gitId":"LouisLouis19"},"content":"Given below is an example usage scenario showing how the `TimetableCommand` behaves at each step.","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":275,"author":{"gitId":"LouisLouis19"},"content":"**Step 1:** User executes the command `timetable` from the main workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":276,"author":{"gitId":"LouisLouis19"},"content":"A new `TimetableCommand` will be generated by the `MainCommandParser`","lastModifiedDate":"2021-10-23"},{"lineNumber":277,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"LouisLouis19"},"content":"**Step 2:** The application invokes `TimetableCommand#execute()` to execute the user\u0027s instruction","lastModifiedDate":"2021-10-23"},{"lineNumber":279,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"LouisLouis19"},"content":"**Step 3:** During the execution, `TimetableCommand#execute()` will generate a new `Timetable`.","lastModifiedDate":"2021-10-23"},{"lineNumber":281,"author":{"gitId":"LouisLouis19"},"content":"`TimetableCommand#parseArguments()` will also be invoked to acquire the user arguments, if any.","lastModifiedDate":"2021-10-23"},{"lineNumber":282,"author":{"gitId":"LouisLouis19"},"content":"If user argument exists, then `TimetableCommand#execute()` will invoke `Timetable#getDailySchedule()`, as it is a Daily Timetable Instruction. ","lastModifiedDate":"2021-10-23"},{"lineNumber":283,"author":{"gitId":"LouisLouis19"},"content":"Otherwise, `Timetable#getWeeklySchedule()` will be invoked instead to facilitate the Weekly TimetableInstruction.","lastModifiedDate":"2021-10-23"},{"lineNumber":284,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":285,"author":{"gitId":"LouisLouis19"},"content":"**Step 4:** Once the relevant `Timetable` method has been invoked, it will first construct a `ModuleManager` and invokes `ModuleManager#getAllModules()` to get all the user\u0027s modules.","lastModifiedDate":"2021-10-23"},{"lineNumber":286,"author":{"gitId":"LouisLouis19"},"content":"The application will iterate through all the user\u0027s modules and invoke `ModuleManager#getContentManager()` for each of the user\u0027s modules.","lastModifiedDate":"2021-10-23"},{"lineNumber":287,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"LouisLouis19"},"content":"**Step 5:** Once the `ContentManager` has been acquired, the application will invoke `ContentManager#getContents()` to acquire all the `Link` objects stored by the user.","lastModifiedDate":"2021-10-23"},{"lineNumber":289,"author":{"gitId":"LouisLouis19"},"content":"For each `Link`, the application will invoke `Link#getDay()` to allow the filtering out of `Link` objects which has a different `day` attribute from the user request.","lastModifiedDate":"2021-10-23"},{"lineNumber":290,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":291,"author":{"gitId":"LouisLouis19"},"content":"**Step 6:** If the instruction type is a Daily Timetable Instruction, then Step 5 will only be executed once for a specific day. ","lastModifiedDate":"2021-10-23"},{"lineNumber":292,"author":{"gitId":"LouisLouis19"},"content":"Otherwise, for a Weekly Timetable Instruction, the process in Step 5 will be repeated for each day in the `DaysOfWeekEnum`.","lastModifiedDate":"2021-10-23"},{"lineNumber":293,"author":{"gitId":"LouisLouis19"},"content":"Once all the relevant `Link` objects have been collected, the application will sort all the user `Link` according to its `startTime` to allow a more convenient viewing.","lastModifiedDate":"2021-10-23"},{"lineNumber":294,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":296,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":297,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":298,"author":{"gitId":"kelvneo"},"content":"### 4.2 Active Recall Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":300,"author":{"gitId":"kelvneo"},"content":"This section details the technical implementation of Active Recall.","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"kelvneo"},"content":"To view the high-level diagram, head to ","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"kelvneo"},"content":"[3.7 Active Recall Component](#37-active-recall-component).","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"kelvneo"},"content":"#### 4.2.1 Current Implementation","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"kelvneo"},"content":"![Active Recall Sequence Diagram](attachments/ActiveRecallSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"kelvneo"},"content":"**Step 1:** When the user executes the `TestCommand`, the `GameEnvironment` will be created with the","lastModifiedDate":"2021-10-26"},{"lineNumber":310,"author":{"gitId":"kelvneo"},"content":"static method `GameEnvironment.createNewEnvironment()`, where it will handle the creation of","lastModifiedDate":"2021-10-26"},{"lineNumber":311,"author":{"gitId":"kelvneo"},"content":"`QuestionGenerator` as well. ","lastModifiedDate":"2021-10-26"},{"lineNumber":312,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"kelvneo"},"content":"**Step 2:** The `QuestionGenerator` creates a `NavigableMap\u003cDouble, Question\u003e` to store all the ","lastModifiedDate":"2021-10-26"},{"lineNumber":314,"author":{"gitId":"kelvneo"},"content":"questions, where the `Double` is the `question.getWeight() + total`, where total is the current sum ","lastModifiedDate":"2021-10-26"},{"lineNumber":315,"author":{"gitId":"kelvneo"},"content":"of all the weights currently in the bank. The rationale for the `NavigableMap` and key value will be","lastModifiedDate":"2021-10-26"},{"lineNumber":316,"author":{"gitId":"kelvneo"},"content":"explained at `promptQuestion()` below.","lastModifiedDate":"2021-10-26"},{"lineNumber":317,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":318,"author":{"gitId":"kelvneo"},"content":"**Step 3:** The newly created `GameEnvironment` will be returned to `TestCommand` where it would ","lastModifiedDate":"2021-10-26"},{"lineNumber":319,"author":{"gitId":"kelvneo"},"content":"call the `run` method within the object.","lastModifiedDate":"2021-10-26"},{"lineNumber":320,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":321,"author":{"gitId":"kelvneo"},"content":"**Step 4:** The `showPreGameInformation()` method will print the information once on the current Active Recall ","lastModifiedDate":"2021-10-26"},{"lineNumber":322,"author":{"gitId":"kelvneo"},"content":"session, such as the actual question pool size, and may include more information and statistics in ","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"kelvneo"},"content":"the future.","lastModifiedDate":"2021-10-21"},{"lineNumber":324,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":325,"author":{"gitId":"kelvneo"},"content":"**Step 5:** Next, the `run()` method will start a loop and check if there are questions in the local ","lastModifiedDate":"2021-10-26"},{"lineNumber":326,"author":{"gitId":"kelvneo"},"content":"`questionGenerator` to ensure that the session can continue. After which, the `promptQuestion()` is ","lastModifiedDate":"2021-10-21"},{"lineNumber":327,"author":{"gitId":"kelvneo"},"content":"called, where the next question is pulled from `questionGenerator.next()` and displayed to the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":328,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":329,"author":{"gitId":"kelvneo"},"content":"**Step 6:** Within the `next()` method in the `QuestionGenerator`, it will find a random `double` ","lastModifiedDate":"2021-10-26"},{"lineNumber":330,"author":{"gitId":"kelvneo"},"content":"number from `0` to `total`, and look up a `Question` that is closest to the value. When the ","lastModifiedDate":"2021-10-26"},{"lineNumber":331,"author":{"gitId":"kelvneo"},"content":"\u003ckbd\u003eEnter\u003c/kbd\u003e key is pressed by the user, the answer is then displayed and the `promptQuestion()` ","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"kelvneo"},"content":"passes the `Question` object back to the `run()` method.","lastModifiedDate":"2021-10-26"},{"lineNumber":333,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":334,"author":{"gitId":"kelvneo"},"content":"**Step 7:** The program now runs `getUserFeedback()` to collect user feedback, and return","lastModifiedDate":"2021-10-26"},{"lineNumber":335,"author":{"gitId":"kelvneo"},"content":"the difficulty back to `run()` after cleaning the input. This is also when the user can decide if ","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"kelvneo"},"content":"they wish to quit the session, and if they do, the difficulty value will be set to `EXIT_CODE \u003d -1`.","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"kelvneo"},"content":"**Step 8:** If the `difficulty` is checked to be the `EXIT_CODE`, the loop will break and return. Otherwise, the","lastModifiedDate":"2021-10-26"},{"lineNumber":339,"author":{"gitId":"kelvneo"},"content":"`Question`\u0027s difficulty will now be changed in the `updateQuestionDifficulty(question, difficulty)` ","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"kelvneo"},"content":"method, where we use the difference between the extremes and the current difficulty to apply into ","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"kelvneo"},"content":"the logistic curve to determine the amount to increase or decrease the weight of the randomness by.","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"kelvneo"},"content":"**Step 9:** Once the adjustment of weights of the question is done, **Step 5 to 9** is repeated if ","lastModifiedDate":"2021-10-26"},{"lineNumber":344,"author":{"gitId":"kelvneo"},"content":"there are questions left inside `QuestionGenerator`. Otherwise, the Active Recall session will be terminated, ","lastModifiedDate":"2021-10-26"},{"lineNumber":345,"author":{"gitId":"kelvneo"},"content":"and the input will be passed back to the `CommandParser`.","lastModifiedDate":"2021-10-26"},{"lineNumber":346,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":347,"author":{"gitId":"kelvneo"},"content":"#### 4.2.2 Design Consideration","lastModifiedDate":"2021-10-26"},{"lineNumber":348,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":349,"author":{"gitId":"kelvneo"},"content":"The reason for using `NavigableMap` to generate questions was because it provides a method called ","lastModifiedDate":"2021-10-26"},{"lineNumber":350,"author":{"gitId":"kelvneo"},"content":"`.higherEntry(key)`, which guarantees a `Question` is returned provided the value never exceeds ","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"kelvneo"},"content":"the total weight of the question pool (which should never happen as the random number generator can ","lastModifiedDate":"2021-10-26"},{"lineNumber":352,"author":{"gitId":"kelvneo"},"content":"only generate between `0` and `total`).","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":354,"author":{"gitId":"kelvneo"},"content":"To prevent the user from viewing the answers before they are ready, we have decided to require the","lastModifiedDate":"2021-10-26"},{"lineNumber":355,"author":{"gitId":"kelvneo"},"content":"user to press Enter to display the answer as a method of confirmation, as it is the most effective","lastModifiedDate":"2021-10-26"},{"lineNumber":356,"author":{"gitId":"kelvneo"},"content":"way to ensure the answer does not get revealed unless the user intents to view it.","lastModifiedDate":"2021-10-26"},{"lineNumber":357,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":358,"author":{"gitId":"kelvneo"},"content":"The rationale behind using the logistic curve is to ensure that as harder questions appear more","lastModifiedDate":"2021-10-21"},{"lineNumber":359,"author":{"gitId":"kelvneo"},"content":"often and easier questions appear less. We also want to ensure once the user finds a hard question","lastModifiedDate":"2021-10-21"},{"lineNumber":360,"author":{"gitId":"kelvneo"},"content":"easy, it should quickly move down a difficulty and vice versa. The application of the logistic curve","lastModifiedDate":"2021-10-21"},{"lineNumber":361,"author":{"gitId":"kelvneo"},"content":"also prevents the values from increasing too rapidly, and dominating the question pools. It also","lastModifiedDate":"2021-10-21"},{"lineNumber":362,"author":{"gitId":"kelvneo"},"content":"prevents the case where easy questions disappear entirely from the question pool due to low weights.","lastModifiedDate":"2021-10-21"},{"lineNumber":363,"author":{"gitId":"kelvneo"},"content":"We will continue to seek user feedback and tweak the curve parameters if needed if there are any","lastModifiedDate":"2021-10-21"},{"lineNumber":364,"author":{"gitId":"kelvneo"},"content":"issues.","lastModifiedDate":"2021-10-21"},{"lineNumber":365,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":366,"author":{"gitId":"kelvneo"},"content":"![](attachments/desmos-graph.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":367,"author":{"gitId":"kelvneo"},"content":"The parameters of the logistic curve can be viewed here:","lastModifiedDate":"2021-10-26"},{"lineNumber":368,"author":{"gitId":"kelvneo"},"content":"[https://www.desmos.com/calculator/qefovvnuhx](https://www.desmos.com/calculator/qefovvnuhx).","lastModifiedDate":"2021-10-26"},{"lineNumber":369,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":370,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":371,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":372,"author":{"gitId":"3m0W33D"},"content":"### 4.3 Workspace Implementation","lastModifiedDate":"2021-10-23"},{"lineNumber":373,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":374,"author":{"gitId":"3m0W33D"},"content":"This workspace feature aims to provide users with a better experience in navigating the different","lastModifiedDate":"2021-10-23"},{"lineNumber":375,"author":{"gitId":"3m0W33D"},"content":"features TermiNUS has to offer, and caters for both users which enjoy using a particular feature or","lastModifiedDate":"2021-10-23"},{"lineNumber":376,"author":{"gitId":"3m0W33D"},"content":"prefer typing commands in a single step.","lastModifiedDate":"2021-10-23"},{"lineNumber":377,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":378,"author":{"gitId":"3m0W33D"},"content":"#### 4.3.1 Current Implementation","lastModifiedDate":"2021-10-23"},{"lineNumber":379,"author":{"gitId":"3m0W33D"},"content":"The workspace feature was implemented with the idea of a single command input as well as a multiple ","lastModifiedDate":"2021-10-23"},{"lineNumber":380,"author":{"gitId":"3m0W33D"},"content":"step input. For example, running 3 separate commands `go Module` -\u003e `note` -\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":381,"author":{"gitId":"3m0W33D"},"content":"`add \"Content Name\" \"Content\"` would perform the same functionality as a single command ","lastModifiedDate":"2021-10-23"},{"lineNumber":382,"author":{"gitId":"3m0W33D"},"content":"`go Module note add \"Content Name\" \"Content\"`. This workspace feature implemented in the Command and ","lastModifiedDate":"2021-10-23"},{"lineNumber":383,"author":{"gitId":"3m0W33D"},"content":"CommandParser component.","lastModifiedDate":"2021-10-23"},{"lineNumber":384,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":385,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":386,"author":{"gitId":"3m0W33D"},"content":"![](attachments/CommandDetailedClassDiagram.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":387,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":388,"author":{"gitId":"3m0W33D"},"content":"The `Command` class in fact has an abstract child `WorkspaceCommand` and grandchild ","lastModifiedDate":"2021-10-23"},{"lineNumber":389,"author":{"gitId":"3m0W33D"},"content":"`InnerModuleCommand` that inherit from it. In general, aside from the `Command` classes in the ","lastModifiedDate":"2021-10-23"},{"lineNumber":390,"author":{"gitId":"3m0W33D"},"content":"diagram, all other `XYZCommand` children simply inherit from `Command` itself. Each `Command` child ","lastModifiedDate":"2021-10-23"},{"lineNumber":391,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":392,"author":{"gitId":"3m0W33D"},"content":"The `WorkspaceCommand` class which inherits from `Command` and requires a `CommandParser` in its ","lastModifiedDate":"2021-10-23"},{"lineNumber":393,"author":{"gitId":"3m0W33D"},"content":"constructor as this command helps with the workspace implementation. When the command is executed,","lastModifiedDate":"2021-10-23"},{"lineNumber":394,"author":{"gitId":"3m0W33D"},"content":"it will check if there are any arguments to the command. If there are arguments, it will pass the ","lastModifiedDate":"2021-10-23"},{"lineNumber":395,"author":{"gitId":"3m0W33D"},"content":"remaining arguments the initialised `commandMap` and attempt to parse and execute the command. ","lastModifiedDate":"2021-10-23"},{"lineNumber":396,"author":{"gitId":"3m0W33D"},"content":"In the case of error, an exception will be thrown and caught in the `Terminus` class. ","lastModifiedDate":"2021-10-23"},{"lineNumber":397,"author":{"gitId":"3m0W33D"},"content":"In the case where there is no arguments, the program will store the `commandMap` in the ","lastModifiedDate":"2021-10-23"},{"lineNumber":398,"author":{"gitId":"3m0W33D"},"content":"`CommandResult` `additionalData` attribute and returns that `CommandResult` to the `Terminus` class.","lastModifiedDate":"2021-10-23"},{"lineNumber":399,"author":{"gitId":"3m0W33D"},"content":"The `Terminus` class checks if the `CommandResult` contains a `additionData` and replaces its own ","lastModifiedDate":"2021-10-23"},{"lineNumber":400,"author":{"gitId":"3m0W33D"},"content":"`CommandParser` with the `CommandParser` stored in `additionalData`. This command helps `Terminus` ","lastModifiedDate":"2021-10-23"},{"lineNumber":401,"author":{"gitId":"3m0W33D"},"content":"to change and beware of workspace changes","lastModifiedDate":"2021-10-23"},{"lineNumber":402,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":403,"author":{"gitId":"3m0W33D"},"content":"The `InnerModuleCommand` class inherits from the `WorkspaceCommand`. ","lastModifiedDate":"2021-10-23"},{"lineNumber":404,"author":{"gitId":"3m0W33D"},"content":"It functions identical the `WorkspaceCommand` but has some subtle differences such as requiring a ","lastModifiedDate":"2021-10-23"},{"lineNumber":405,"author":{"gitId":"3m0W33D"},"content":"`InnerModuleCommandParser` which inherits from a `CommandParser` but can store another ","lastModifiedDate":"2021-10-23"},{"lineNumber":406,"author":{"gitId":"3m0W33D"},"content":"attribute called `moduleName`. The `InnerModuleCommand` `execute` function will set the initialized ","lastModifiedDate":"2021-10-23"},{"lineNumber":407,"author":{"gitId":"3m0W33D"},"content":"`InnerModuleCommandParser`\u0027s`moduleName` attribute using its own stored `moduleName` attribute.","lastModifiedDate":"2021-10-23"},{"lineNumber":408,"author":{"gitId":"3m0W33D"},"content":"This `InnerModuleCommand` purpose to enable any `InnerModuleCommandParser` to be aware of which ","lastModifiedDate":"2021-10-23"},{"lineNumber":409,"author":{"gitId":"3m0W33D"},"content":"module and pass this module to any of the subsequent commands it may parse.","lastModifiedDate":"2021-10-23"},{"lineNumber":410,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":411,"author":{"gitId":"3m0W33D"},"content":"The `GoCommand` in particular is a special `WorkspaceCommand` which has a unique feature that sets ","lastModifiedDate":"2021-10-23"},{"lineNumber":412,"author":{"gitId":"3m0W33D"},"content":"the `ModuleWorkspaceCommandParser` class `workspace` attribute to a specific module name and after","lastModifiedDate":"2021-10-23"},{"lineNumber":413,"author":{"gitId":"3m0W33D"},"content":"validating that the module exists. This command starts the storing of the module name that the ","lastModifiedDate":"2021-10-23"},{"lineNumber":414,"author":{"gitId":"3m0W33D"},"content":"subsequent commands may use identify the module data to retrieve.","lastModifiedDate":"2021-10-23"},{"lineNumber":415,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":416,"author":{"gitId":"3m0W33D"},"content":"![](attachments/ParserDetailedClassDiagram.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":417,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":418,"author":{"gitId":"3m0W33D"},"content":"The `CommandParser` class has an abstract child `InnerModuleCommandParser` class that inherit from ","lastModifiedDate":"2021-10-23"},{"lineNumber":419,"author":{"gitId":"3m0W33D"},"content":"it. Other than the `CommandParser` classes mentioned in the diagram above, all other ","lastModifiedDate":"2021-10-23"},{"lineNumber":420,"author":{"gitId":"3m0W33D"},"content":"`XYZCommandParser` inherit from the `CommandParser` class directly. Each `CommandParser` class ","lastModifiedDate":"2021-10-23"},{"lineNumber":421,"author":{"gitId":"3m0W33D"},"content":"contains a `HashMap\u003cString, Command\u003e` which helps in parsing and return the specific `Command` ","lastModifiedDate":"2021-10-23"},{"lineNumber":422,"author":{"gitId":"3m0W33D"},"content":"object back.","lastModifiedDate":"2021-10-23"},{"lineNumber":423,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":424,"author":{"gitId":"3m0W33D"},"content":"The `InnerModuleCommandParser` functions similar to a regular `CommandParser` but stores and ","lastModifiedDate":"2021-10-23"},{"lineNumber":425,"author":{"gitId":"3m0W33D"},"content":"extra attribute called `moduleName`. This attribute will be set in all `Commands` that are parsed ","lastModifiedDate":"2021-10-23"},{"lineNumber":426,"author":{"gitId":"3m0W33D"},"content":"with the `parseCommand` function. The `moduleName` allows all it\u0027s `Commands` to be aware of which ","lastModifiedDate":"2021-10-23"},{"lineNumber":427,"author":{"gitId":"3m0W33D"},"content":"module they need to retrieve the stored data.","lastModifiedDate":"2021-10-23"},{"lineNumber":428,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":429,"author":{"gitId":"3m0W33D"},"content":"The `ModuleWorkspaceCommandParser` is a special `CommandParser` that sets the `moduleName` ","lastModifiedDate":"2021-10-23"},{"lineNumber":430,"author":{"gitId":"3m0W33D"},"content":"attribute for all the subsequent commands, so that they become aware of what module they are ","lastModifiedDate":"2021-10-23"},{"lineNumber":431,"author":{"gitId":"3m0W33D"},"content":"modifying.","lastModifiedDate":"2021-10-23"},{"lineNumber":432,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":433,"author":{"gitId":"3m0W33D"},"content":"To explain the concept, more clearly we will be explaining how the  input from the user","lastModifiedDate":"2021-10-23"},{"lineNumber":434,"author":{"gitId":"3m0W33D"},"content":"`go Module note add \"Content Name\" \"Content\"` will be executed.","lastModifiedDate":"2021-10-23"},{"lineNumber":435,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":436,"author":{"gitId":"3m0W33D"},"content":"![](attachments/CommandExecution.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":437,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":438,"author":{"gitId":"3m0W33D"},"content":"**Step 1:** After receiving the user input in `Terminus`, `MainCommandParser` is called to parse the input ","lastModifiedDate":"2021-10-23"},{"lineNumber":439,"author":{"gitId":"3m0W33D"},"content":"with the `parseCommand` function which return the specific `Command` class. In this case `GoCommand` ","lastModifiedDate":"2021-10-23"},{"lineNumber":440,"author":{"gitId":"3m0W33D"},"content":"is returned. It will then call the `GoCommand`\u0027s `execute` function to run the command. ","lastModifiedDate":"2021-10-23"},{"lineNumber":441,"author":{"gitId":"3m0W33D"},"content":"Note the remaining arguments is `Module note add \"Content Name\" \"Content\"`","lastModifiedDate":"2021-10-23"},{"lineNumber":442,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":443,"author":{"gitId":"3m0W33D"},"content":"**Step 2:** The `GoCommand` validates the Module name stored as the `arguments` attribute of ","lastModifiedDate":"2021-10-23"},{"lineNumber":444,"author":{"gitId":"3m0W33D"},"content":"the `GoCommand` and sets the workspace of the stored `commandMap` with the value of the module name.","lastModifiedDate":"2021-10-23"},{"lineNumber":445,"author":{"gitId":"3m0W33D"},"content":"This is done so via the `setWorkspace` function, and for this scenario the workspace for","lastModifiedDate":"2021-10-23"},{"lineNumber":446,"author":{"gitId":"3m0W33D"},"content":"`ModuleWorkspaceCommandParser` is set. ","lastModifiedDate":"2021-10-23"},{"lineNumber":447,"author":{"gitId":"3m0W33D"},"content":"Note the remaining arguments is `note add \"Content Name\" \"Content\"` and the module name is `Module`","lastModifiedDate":"2021-10-23"},{"lineNumber":448,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":449,"author":{"gitId":"3m0W33D"},"content":"**Step 3:** Similar to step 1 but with a different `CommandParser`, the ","lastModifiedDate":"2021-10-23"},{"lineNumber":450,"author":{"gitId":"3m0W33D"},"content":"`ModuleWorkspaceCommandParser` parses the remaining arguments from `GoCommand` as a command ","lastModifiedDate":"2021-10-23"},{"lineNumber":451,"author":{"gitId":"3m0W33D"},"content":"and sets the `NoteCommand`\u0027s `moduleName` attribute to the value of the module name stored in its ","lastModifiedDate":"2021-10-23"},{"lineNumber":452,"author":{"gitId":"3m0W33D"},"content":"workspace. It then executes the `NoteCommand` `execute` function. ","lastModifiedDate":"2021-10-23"},{"lineNumber":453,"author":{"gitId":"3m0W33D"},"content":"Note the remaining arguments is `add \"Content Name\" \"Content\"` and the module name is `Module`","lastModifiedDate":"2021-10-23"},{"lineNumber":454,"author":{"gitId":"3m0W33D"},"content":"\u003e 📝 **Note:** If the remaining arguments is empty, `ModuleWorkspaceCommandParser` will be stored ","lastModifiedDate":"2021-10-23"},{"lineNumber":455,"author":{"gitId":"3m0W33D"},"content":"\u003e inside of `CommandResult` and returned to `Terminus`. `Terminus` will then replace its ","lastModifiedDate":"2021-10-23"},{"lineNumber":456,"author":{"gitId":"3m0W33D"},"content":"\u003e `commandParser` with `ModuleWorkspaceCommandParser`, changing the workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":457,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":458,"author":{"gitId":"3m0W33D"},"content":"**Step 4:** Similar to step 1, the `NoteCommand` `setsModule` for the `NoteCommandParser` that is ","lastModifiedDate":"2021-10-23"},{"lineNumber":459,"author":{"gitId":"3m0W33D"},"content":"stored in the `commandMap` attribute and parses the remaining arguments ","lastModifiedDate":"2021-10-23"},{"lineNumber":460,"author":{"gitId":"3m0W33D"},"content":"`add \"Content Name\" \"Content\"` which results in a `AddNoteCommand`. The `execute` function of ","lastModifiedDate":"2021-10-23"},{"lineNumber":461,"author":{"gitId":"3m0W33D"},"content":"`AddNoteCommand` performs the needed modification to the `NusModule` for the module with the name ","lastModifiedDate":"2021-10-23"},{"lineNumber":462,"author":{"gitId":"3m0W33D"},"content":"`Module`. The `execute` function then returns a `CommandResult` that is propagated to `Terminus`.","lastModifiedDate":"2021-10-23"},{"lineNumber":463,"author":{"gitId":"3m0W33D"},"content":"\u003e 📝 **Note:** If the remaining arguments is empty, `NoteCommandParser` will be stored","lastModifiedDate":"2021-10-23"},{"lineNumber":464,"author":{"gitId":"3m0W33D"},"content":"\u003e inside of `CommandResult` and returned to `Terminus`. `Terminus` will then replace its","lastModifiedDate":"2021-10-23"},{"lineNumber":465,"author":{"gitId":"3m0W33D"},"content":"\u003e `commandParser` with `NoteCommandParser`, changing the workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":466,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":467,"author":{"gitId":"3m0W33D"},"content":"#### 4.3.2 Design considerations","lastModifiedDate":"2021-10-23"},{"lineNumber":468,"author":{"gitId":"3m0W33D"},"content":"This section shows the design considerations that were taken into account when implementing ","lastModifiedDate":"2021-10-23"},{"lineNumber":469,"author":{"gitId":"3m0W33D"},"content":"the command parsing.  ","lastModifiedDate":"2021-10-23"},{"lineNumber":470,"author":{"gitId":"3m0W33D"},"content":"Aspect: **Usability for other fellow developers**","lastModifiedDate":"2021-10-23"},{"lineNumber":471,"author":{"gitId":"3m0W33D"},"content":"Since a `Command` class is required for almost all functionalities in TermiNUS ensuring that the ","lastModifiedDate":"2021-10-23"},{"lineNumber":472,"author":{"gitId":"3m0W33D"},"content":"Custom commands and Command Parsers should be easy for others to implement.  ","lastModifiedDate":"2021-10-23"},{"lineNumber":473,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":474,"author":{"gitId":"3m0W33D"},"content":"| Approach | Pros | Cons|","lastModifiedDate":"2021-10-23"},{"lineNumber":475,"author":{"gitId":"3m0W33D"},"content":"| ---  |---|---|","lastModifiedDate":"2021-10-23"},{"lineNumber":476,"author":{"gitId":"3m0W33D"},"content":"| Single Command Parser with all Commands inherit from a single `Command` Class, a large switch statement to separate commands.| Easy to implement and `execute` function for each class has higher flexibility as they can have different arguments| When extending to multilevel workspace can be tedious to implement.|","lastModifiedDate":"2021-10-23"},{"lineNumber":477,"author":{"gitId":"3m0W33D"},"content":"| Multiple Command Parsers each with its own set of commands, require separate managing. | Easy to create new workspace and add command specific the to workspace.| Implementation can be tedious and difficult to upgrade and manage. |  ","lastModifiedDate":"2021-10-27"},{"lineNumber":478,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":479,"author":{"gitId":"3m0W33D"},"content":"Eventually the team decide to go with the second implementation, as we require multi-level ","lastModifiedDate":"2021-10-23"},{"lineNumber":480,"author":{"gitId":"3m0W33D"},"content":"workspaces and would like to create our own workspace for each feature. Aside from that the ","lastModifiedDate":"2021-10-23"},{"lineNumber":481,"author":{"gitId":"3m0W33D"},"content":"`Command` provide common functionality that many commands need hence reducing repetition of code.","lastModifiedDate":"2021-10-23"},{"lineNumber":482,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":483,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":484,"author":{"gitId":"LouisLouis19"},"content":"### 4.4 Conflict Manager Implementation","lastModifiedDate":"2021-10-24"},{"lineNumber":485,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":486,"author":{"gitId":"LouisLouis19"},"content":"The following sequence diagram illustrates how the conflict manager feature works:","lastModifiedDate":"2021-10-24"},{"lineNumber":487,"author":{"gitId":"LouisLouis19"},"content":"![](attachments/ConflictManagerSequenceDiagram.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":488,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":489,"author":{"gitId":"LouisLouis19"},"content":"Conflict Manager is a default TermiNUS feature which complements the basic add Link feature.","lastModifiedDate":"2021-10-24"},{"lineNumber":490,"author":{"gitId":"LouisLouis19"},"content":"This feature will automatically list out all the conflicting `Link` objects with the newly added `Link` when user executes `addLinkCommand`","lastModifiedDate":"2021-10-24"},{"lineNumber":491,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":492,"author":{"gitId":"LouisLouis19"},"content":"The conflict feature is facilitated by the `ConflictManager`.","lastModifiedDate":"2021-10-24"},{"lineNumber":493,"author":{"gitId":"LouisLouis19"},"content":"There is no need for users to run a specific command to execute the Conflict Manager as the application will implement the Conflict Manager by default","lastModifiedDate":"2021-10-24"},{"lineNumber":494,"author":{"gitId":"LouisLouis19"},"content":"when users try to add a new Link within their modules.","lastModifiedDate":"2021-10-24"},{"lineNumber":495,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":496,"author":{"gitId":"LouisLouis19"},"content":"Given below is an example usage scenario showing how the `ConflictManager` behaves at each step.","lastModifiedDate":"2021-10-24"},{"lineNumber":497,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":498,"author":{"gitId":"LouisLouis19"},"content":"**Step 1:** When user executes `addLinkCommand` from  workspace.","lastModifiedDate":"2021-10-24"},{"lineNumber":499,"author":{"gitId":"LouisLouis19"},"content":"A new `ConflictManager` will be generated by the `addLinkComand`","lastModifiedDate":"2021-10-24"},{"lineNumber":500,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":501,"author":{"gitId":"LouisLouis19"},"content":"**Step 2:** The application invokes `ConflictManager#getConflictingSchedule()` to get all the conflicting Link with the newly added Link","lastModifiedDate":"2021-10-24"},{"lineNumber":502,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":503,"author":{"gitId":"LouisLouis19"},"content":"**Step 3:** During the current invocation, the `ConflictManager` will self-invoke `getAllLinks` to store all the possible conflicting links in an `Arraylist`.","lastModifiedDate":"2021-10-24"},{"lineNumber":504,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":505,"author":{"gitId":"LouisLouis19"},"content":"**Step 4:** Once `ConflictManager#getAllLinks` has been invoked, it will first construct a `ModuleManager` and invokes `ModuleManager#getAllModules()` to get all the user\u0027s modules.","lastModifiedDate":"2021-10-24"},{"lineNumber":506,"author":{"gitId":"LouisLouis19"},"content":"The application will iterate through all the user\u0027s modules and invoke `ModuleManager#getContentManager()` for each of the user\u0027s modules.","lastModifiedDate":"2021-10-24"},{"lineNumber":507,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":508,"author":{"gitId":"LouisLouis19"},"content":"**Step 5:** Once the `ContentManager` has been acquired, the application will invoke `ContentManager#getContents()` to acquire all the `Link` objects stored by the user.","lastModifiedDate":"2021-10-24"},{"lineNumber":509,"author":{"gitId":"LouisLouis19"},"content":"All the `Link` objects will be stored in the `ArrayList` created in Step 3.","lastModifiedDate":"2021-10-24"},{"lineNumber":510,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":511,"author":{"gitId":"LouisLouis19"},"content":"**Step 6:** The `ArrayList` of `Link` objects will be iterated through and filtered. ","lastModifiedDate":"2021-10-24"},{"lineNumber":512,"author":{"gitId":"LouisLouis19"},"content":"If the newly added `Link` object has the same `day` attribute and overlapping `startTime` and `endTime` as the current `Link` being filtered, then the `Link` description will be appended to a `StringBuilder`.","lastModifiedDate":"2021-10-24"},{"lineNumber":513,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":514,"author":{"gitId":"LouisLouis19"},"content":"**Step 7:** The `StringBuilder` object will be converted to a `String` object before being returned to `ConflictManager` and `AddLinkCommand`.","lastModifiedDate":"2021-10-24"},{"lineNumber":515,"author":{"gitId":"LouisLouis19"},"content":"Then the `AddLinkCommand` will display all the conflicting schedule during its execution","lastModifiedDate":"2021-10-24"},{"lineNumber":516,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":517,"author":{"gitId":"Woolicious98"},"content":"### 4.5 Storage Implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":518,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":519,"author":{"gitId":"Woolicious98"},"content":"To view the high-level diagram, head to [3.8 Storage](#38-storage-component).","lastModifiedDate":"2021-10-25"},{"lineNumber":520,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":521,"author":{"gitId":"Woolicious98"},"content":"#### 4.5.1 Initialize Storage Implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":522,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":523,"author":{"gitId":"Woolicious98"},"content":"![](attachments/StorageInitializeSequenceDiagram.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":524,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":525,"author":{"gitId":"Woolicious98"},"content":"**Step 1:** When `Terminus` just started, it will initialize a `ModuleStorage` object and loads any","lastModifiedDate":"2021-10-27"},{"lineNumber":526,"author":{"gitId":"Woolicious98"},"content":"related data from the `data` directory into it.","lastModifiedDate":"2021-10-27"},{"lineNumber":527,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":528,"author":{"gitId":"Woolicious98"},"content":"**Step 2:** Next, `Terminus` will create an instance of `ModuleStorage` which is a **singleton class**","lastModifiedDate":"2021-10-27"},{"lineNumber":529,"author":{"gitId":"Woolicious98"},"content":"object. Subsequently, `Terminus` calls the `init()` function provided by ModuleStorage to set the filepath of the ModuleStorage with the main `.json` file","lastModifiedDate":"2021-10-27"},{"lineNumber":530,"author":{"gitId":"Woolicious98"},"content":"filepath which contains data such as `module`, `questions` and `schedules`.","lastModifiedDate":"2021-10-27"},{"lineNumber":531,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":532,"author":{"gitId":"Woolicious98"},"content":"**Step 3:** Next, `Terminus` will proceed to load any data from the `data` directory by calling `loadFile()`","lastModifiedDate":"2021-10-27"},{"lineNumber":533,"author":{"gitId":"Woolicious98"},"content":"which is provided by `ModuleStorage`. ","lastModifiedDate":"2021-10-27"},{"lineNumber":534,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":535,"author":{"gitId":"Woolicious98"},"content":"**Step 4:** Within the `ModuleStorage` of `loadFile()`, it will first check if","lastModifiedDate":"2021-10-27"},{"lineNumber":536,"author":{"gitId":"Woolicious98"},"content":"the main directory of `data` exists. This is needed for the first time execution of `Terminus` as there","lastModifiedDate":"2021-10-27"},{"lineNumber":537,"author":{"gitId":"Woolicious98"},"content":"should not be any `data` folder within the same folder in which `Terminus` was executed from. Hence,","lastModifiedDate":"2021-10-22"},{"lineNumber":538,"author":{"gitId":"Woolicious98"},"content":"if no `data` directory was found, it will create a `data` directory and create the main `.json`","lastModifiedDate":"2021-10-22"},{"lineNumber":539,"author":{"gitId":"Woolicious98"},"content":"file. However, if `data` directory exists, it will locate the main `.json` file within","lastModifiedDate":"2021-10-27"},{"lineNumber":540,"author":{"gitId":"Woolicious98"},"content":"the `data` directory. This main `.json` will tell `Terminus` what `modules`","lastModifiedDate":"2021-10-27"},{"lineNumber":541,"author":{"gitId":"Woolicious98"},"content":"does it have prior this current session of `Terminus`.","lastModifiedDate":"2021-10-27"},{"lineNumber":542,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":543,"author":{"gitId":"Woolicious98"},"content":"**Step 5:** Once the main `.json` has been loaded, a plugin `GsonBuilder` will proceed to load the `.json` ","lastModifiedDate":"2021-10-27"},{"lineNumber":544,"author":{"gitId":"Woolicious98"},"content":"data into a `ModuleManager` object. This `ModuleManager` will then be used throughout the execution of `Terminus`.","lastModifiedDate":"2021-10-27"},{"lineNumber":545,"author":{"gitId":"Woolicious98"},"content":"For more information, please refer to [Module Component](#35-module-component).","lastModifiedDate":"2021-10-27"},{"lineNumber":546,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":547,"author":{"gitId":"Woolicious98"},"content":"**Step 6:** Next, `ModuleStorage` will proceed to load any note data from the `modules` in the `ModuleManager` ","lastModifiedDate":"2021-10-27"},{"lineNumber":548,"author":{"gitId":"Woolicious98"},"content":"object. Due to the restriction of **TermiNUS**, it will filter any `module` whose name does not fit the criteria of a valid `module` name. ","lastModifiedDate":"2021-10-27"},{"lineNumber":549,"author":{"gitId":"Woolicious98"},"content":"Subsequently, it will check for module that has a folder in the `data` directory in order to retrieve its note data.","lastModifiedDate":"2021-10-27"},{"lineNumber":550,"author":{"gitId":"Woolicious98"},"content":"If no folder was found it will simply create one for itself and proceed to check on other `module` in the `ModuleManager`. ","lastModifiedDate":"2021-10-27"},{"lineNumber":551,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":552,"author":{"gitId":"Woolicious98"},"content":"**Step 7:** Finally, after `ModuleStorage` has loaded all contents for the validated `modules` in the ModuleManager, it","lastModifiedDate":"2021-10-27"},{"lineNumber":553,"author":{"gitId":"Woolicious98"},"content":"will return the `ModuleManager` back to `Terminus` for further operations.","lastModifiedDate":"2021-10-22"},{"lineNumber":554,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":555,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":556,"author":{"gitId":"Woolicious98"},"content":"Notes in TermiNUS is stored as a **text** file where the **name** of the file is the **name** of the note ","lastModifiedDate":"2021-10-27"},{"lineNumber":557,"author":{"gitId":"Woolicious98"},"content":"and the **contents** of the file will be the **content** for that Note. For example, if a module has **5 Notes** object in TermiNUS, it should have **5 text files** within its module folder.","lastModifiedDate":"2021-10-27"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"LouisLouis19":83,"kelvneo":105,"Woolicious98":151,"3m0W33D":199,"-":23}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"# TermiNUS","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"TermiNUS is a CLI (command line interface) program for NUS Students who wish to organize their NUS academic materials through a CLI.  ","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"The product aims to aid student in organizing their academic schedule and enhancing their learning experiences.","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"kelvneo":3,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"# TermiNUS User Guide","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"## Table of Contents","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"- [Purpose](#purpose)","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"- [Using this Guide](#using-this-guide)","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"- [Getting Started](#getting-started)","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"- [Quick guide to using TermiNUS](#quick-guide-to-using-terminus)","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"- [Section: Module Management](#section-module-management)","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"    * [Accessing the module management workspace : `module`](#accessing-the-module-management-workspace)","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"    * [Adding a module : `add \"\u003cmodule_code\u003e\"`](#adding-a-module)","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"    * [Deleting a module : `delete \u003cindex\u003e`](#deleting-a-module)","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    * [Updating a module :`update \u003cindex\u003e \"\u003cnew_module_code\u003e\"`](#updating-a-module)","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    * [Viewing module information `view`](#viewing-module-information)","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"- [Section: Module](#section-module)","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    * [Accessing module workspace : `go \u003cmodule_code\u003e`](#accessing-module-workspace)","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"- [Section: Note](#section-note)","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    * [Accessing note workspace : `note`](#accessing-note-workspace)","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    * [Adding a Note : `add \"\u003cname\u003e\" \"\u003ccontent\u003e\"`](#adding-a-note)","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    * [Deleting a Note : `delete \u003cindex\u003e`](#deleting-a-note)","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    * [Viewing note information : `view {index}`](#viewing-note-information)","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    * [Exporting all notes: `export`](#exporting-all-notes)","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"- [Section: Schedule](#section-schedule)","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    * [Accessing schedule workspace : `schedule`](#accessing-schedule-workspace)","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    * [Adding a Schedule : `add \"\u003cdescription\u003e\" \"\u003cday\u003e\" \"\u003cstart_time\u003e\" \"\u003cduration\u003e\" \"\u003czoom_link\u003e\"`](#adding-a-schedule)","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    * [Deleting a Schedule : `delete \u003cindex\u003e`](#deleting-a-schedule)","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    * [Viewing schedule information : `view`](#viewing-schedule-information)","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"- [Section: Question](#section-question)","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    * [Accessing question workspace : `question`](#accessing-question-workspace)","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    * [Adding a Question : `add \"\u003cquestion\u003e\" \"\u003canswer\u003e\"` ](#adding-a-question)","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    * [Deleting a Question : `delete \u003cindex\u003e`](#deleting-a-question)","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    * [Viewing question information : `view {index}`](#viewing-question-information)","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    * [Testing Yourself with Active Recall : `test {count}`](#testing-yourself-with-active-recall)","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"- [Displaying all schedules across all modules : `timetable {day}`](#displaying-all-schedules-across-all-modules)","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"- [Returning to previous workspace : `back`](#returning-to-previous-workspace)","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"- [Exiting TermiNUS : `exit`](#exiting-terminus)","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"- [Accessing Help : `help`](#accessing-help)","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"- [Advanced Usage of Commands](#advanced-usage-of-commands)","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"- [FAQ](#faq)","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"- [Workspace Command Summary](#workspace-command-summary)","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"TermiNUS is a CLI (command line interface) program for NUS Students who wish to consolidate their","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"NUS academic materials such as zoom links, questions and notes for the modules that they are taking.","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"With TermiNUS, it aims to aid Students and improve their learning experiences while studying in NUS.","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"## Purpose","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"This documents aims to provide you with instruction on how to use `TermiNUS` and tips \u0026 tricks","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"included to improve your experiences while using it. The document will bring you through a detailed","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"guide on all existing commands as well as aiding you in installing `TerminNUS`.","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"## Using this Guide","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"Along the way, you might encounter commands with specific brackets around some values such as `{}`","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"and `\u003c\u003e`.","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"The below table represents what each means.","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"| Command options | Description |","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"| `{value}` |  The value is optional, and including it may provide different results.|","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"| `\u003cvalue\u003e` | The value is required for the command to work properly.|","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"|`\"\u003cvalue\u003e\"`| Some command have `\"\"` quotes in it, this is required for the command to work properly. For example, `add \"\u003cvalue\u003e\"` would need to be `add \"something\"`.|","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"|`index`|A number identifying an item in TermiNUS. This index can only be viewed using the `view` command.|","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"|`start_time`|The `start time` must be in a **HH:mm** format which follows the **24-hour notation**. For example, `14:20` is valid which represents `2:20 pm`.|","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"|`day`|The `day` must be a day spelled out fully. For example, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday` are the only **7** valid days.|","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"|`duration`|The `duration` must be a **positive** number and upon addition with `start_time`, it must not exceed the 24-hour limit of the day. For example, if `start_time` is `21:00`, `2` is a valid `duration` but `-1` and `4` are not.|","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"Terminologies used throughout this guide:","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"| Terminology | Description |","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"| workspace |  A workspace is the environment in which you are currently assessing. For example, when you want to access some files inside a folder, you will need to enter the folder first. As such the folder is a **workspace**.|","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"|workspace indicator|A workspace indicator shows the current workspace you are currently in when using `TermiNUS`. For example, in the expected output for commands, you will be able to see `[] \u003e\u003e\u003e` which means you are in the **default workspace**, `[module] \u003e\u003e\u003e` which means you are in the **module management workspace**. etc.|","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"|default workspace|The very first workspace when executing the `TermiNUS` program. For example, `[] \u003e\u003e\u003e` indicates you are currently in the **default workspace**.|","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"|module|A module refers to a NUS module. For example, `CS2113T` is a module.|","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"Icons used throughout this guide:","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️A caution that you have to keep in mind when using the command.","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"\u003e 💡 Take note when you see this icon, as it might tell you something important.","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"\u003e ❗ Important things you should take note of before using the command.","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"Lastly, text that is blue like this example, are clickable [links](#test) that will bring you to the ","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"relevant part of this user guide.","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"## Getting Started","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"1. Ensure that you","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"   have [Java 11](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html) or","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"   above installed.","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"2. Download the latest version of `TermiNUS.jar`","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"   from [here](https://github.com/AY2122S1-CS2113T-T10-2/tp/releases/).","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"3. Copy the file to the folder you want to use for `TermiNUS`.","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"    1. This is because `TermiNUS` will store all its saved data in the folder it is currently in.","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"4. Open your command prompt and go into the folder containing the `TermiNUS.jar` file.","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"    1. You can do so by `win + R` and run `cmd`.","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"    2. Next, a console will appear, type in the following `cd C:/folder` where `folder` is the","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"       folder containing the `TermiNUS.jar` file.","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"5. Next to run `TermiNUS`, in the command prompt type in `java -jar TermiNUS.jar`.","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"6. When you first start the `TermiNUS`, you will be greeted with our banner:","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"LouisLouis19"},"content":"    ```","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"LouisLouis19"},"content":"    Welcome to TermiNUS!","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"    You have no schedule for today.","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-24"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"    Type any of the following to get started:","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"    \u003e exit","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"    \u003e help","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"    \u003e module","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"    \u003e go","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"    \u003e timetable","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"LouisLouis19"},"content":"    [] \u003e\u003e\u003e  ","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"LouisLouis19"},"content":"    ```","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"7. To get started, you can run the following commands:","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"    - module","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"    - go","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"    - timetable","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"LouisLouis19"},"content":"    - help","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"LouisLouis19"},"content":"    - exit","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"8. For more information of each command, please refer to the [Features](#section-note) below.","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":136,"author":{"gitId":"3m0W33D"},"content":"___","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"## Quick guide to using TermiNUS","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"1. Before adding any **note**, **schedule** and **question**, we will need to have a **module** first in which these items belong to.","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"2. You can do so by adding a module within the **module management workspace**. Please refer to: [Section: Module Management](#section-module-management).","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"3. After adding a module, you can proceed to add items such as **note**, **schedule** and **question** into it.","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"4. But firstly you will need to enter the **module workspace** in which you have just created. Please refer to: [Section: Module](#section-module).","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"5. Once entering the **module workspace**, you can add the items related to the module here.","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"    1. Please refer to [Section: Note](#section-note) for any related **Note** item.","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"    2. Please refer to [Section: Schedule](#section-schedule) for any related **Schedule** item.","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"    3. Please refer to [Section: Question](#section-question) for any related **Question** item.","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"6. Once you are done, you can exit **TermiNUS** using the `exit` command.","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"Hope you enjoy your experience with TermiNUS!","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"## Section: Module Management","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"All commands related to the workspace `Module Management` will be displayed in this section. These","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"commands enable users to create, delete and view `modules` within TermiNUS.","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"### Accessing the module management workspace","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"**Format:** `module`","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"Enters the Module Management workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"Example: `module`","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"[] \u003e\u003e\u003e module","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"You have 0 modules","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"Type any of the following to get started:","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"\u003e add","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"\u003e exit","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"\u003e help","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"\u003e view","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"\u003e back","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"3m0W33D"},"content":"\u003e update","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"\u003e delete","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"[module] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"Woolicious98"},"content":"List of Module Management workspace commands:","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"| Command      | Description |","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"|add|add a module in TermiNUS|","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"Woolicious98"},"content":"|delete|delete a module in TermiNUS|","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"Woolicious98"},"content":"|update|update a module code currently in TermiNUS|","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"Woolicious98"},"content":"|view|view modules information currently in TermiNUS|","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"|help|view all commands and their usage within the module management workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"|back|escape and return to the default workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"|exit|exit and closes TermiNUS|","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"Woolicious98"},"content":"### Adding a module","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"Woolicious98"},"content":"**Format:** `add \"\u003cmodule_code\u003e\"`","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"Woolicious98"},"content":"Adds a module when in the module management workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️The `\u003cmodule code\u003e` cannot be more than **30** characters and cannot have any `spaces` in it.","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"Woolicious98"},"content":"\u003e 💡 When executing this command, it will add the module into TermiNUS and creates a folder with the module code.","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"Woolicious98"},"content":"\u003e ❗ If there exists a folder with the same code of the newly added module, all contents in that folder will be wiped.","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"Woolicious98"},"content":"Example: `add \"CS2113T\"`","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":212,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":214,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"Woolicious98"},"content":"[module] \u003e\u003e\u003e add \"CS2113T\"","lastModifiedDate":"2021-10-22"},{"lineNumber":216,"author":{"gitId":"Woolicious98"},"content":"Module CS2113T has been added","lastModifiedDate":"2021-10-22"},{"lineNumber":217,"author":{"gitId":"Woolicious98"},"content":"[module] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":218,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":219,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":220,"author":{"gitId":"Woolicious98"},"content":"### Deleting a module","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"Woolicious98"},"content":"**Format:** `delete \u003cindex\u003e`","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"Woolicious98"},"content":"Deletes the specified module given by its **index** when in the module management workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"Woolicious98"},"content":"\u003e ❗ When the specified module is being deleted, all contents in its folder will be wiped.","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"Woolicious98"},"content":"Example: `delete 1`","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"Woolicious98"},"content":"[module] \u003e\u003e\u003e delete 1","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"Woolicious98"},"content":"Deleted module CS2113T.","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"Woolicious98"},"content":"[module] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":237,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"3m0W33D"},"content":"### Updating a module","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"3m0W33D"},"content":"**Format:** `update \u003cindex\u003e \"\u003cnew_module_code\u003e\"`","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"Woolicious98"},"content":"Updates a module code in the module management workspace.","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️The `\u003cnew_module_code\u003e` will have the same restrictions as the [add command](#adding-a-module).  ","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"3m0W33D"},"content":"Example: `update 1 \"CS2113\"`","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"3m0W33D"},"content":"Expected Output:","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"3m0W33D"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"3m0W33D"},"content":"[module] \u003e\u003e\u003e update 1 \"CS2113\"","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"3m0W33D"},"content":"Updated CS2113T to CS2113 successfully.","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"3m0W33D"},"content":"[module] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"3m0W33D"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"Woolicious98"},"content":"### Viewing module information","lastModifiedDate":"2021-10-22"},{"lineNumber":256,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":257,"author":{"gitId":"Woolicious98"},"content":"**Format:** `view`","lastModifiedDate":"2021-10-22"},{"lineNumber":258,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":259,"author":{"gitId":"Woolicious98"},"content":"Views all modules when in the module management workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":260,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":261,"author":{"gitId":"Woolicious98"},"content":"Example: `view`","lastModifiedDate":"2021-10-22"},{"lineNumber":262,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":263,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":264,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":265,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":266,"author":{"gitId":"Woolicious98"},"content":"[module] \u003e\u003e\u003e view","lastModifiedDate":"2021-10-22"},{"lineNumber":267,"author":{"gitId":"Woolicious98"},"content":"1. CS2113T","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"Woolicious98"},"content":"2. CS2106","lastModifiedDate":"2021-10-22"},{"lineNumber":269,"author":{"gitId":"Woolicious98"},"content":"[module] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-22"},{"lineNumber":273,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":274,"author":{"gitId":"Woolicious98"},"content":"## Section: Module","lastModifiedDate":"2021-10-22"},{"lineNumber":275,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":276,"author":{"gitId":"Woolicious98"},"content":"All commands related to accessing the existing modules in TermiNUS. These commands enable users to","lastModifiedDate":"2021-10-22"},{"lineNumber":277,"author":{"gitId":"Woolicious98"},"content":"enter the module workspace in Terminus.","lastModifiedDate":"2021-10-22"},{"lineNumber":278,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":279,"author":{"gitId":"Woolicious98"},"content":"\u003e 💡 The module mentioned here are the modules created within the **module management workspace**. Please refer to [Section: Module Management](#section-module-management) for more information.","lastModifiedDate":"2021-10-22"},{"lineNumber":280,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":281,"author":{"gitId":"Woolicious98"},"content":"### Accessing module workspace","lastModifiedDate":"2021-10-22"},{"lineNumber":282,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":283,"author":{"gitId":"Woolicious98"},"content":"**Format:** `go \u003cmodule_code\u003e`","lastModifiedDate":"2021-10-23"},{"lineNumber":284,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":285,"author":{"gitId":"Woolicious98"},"content":"Enters the module workspace to access data within the module.","lastModifiedDate":"2021-10-22"},{"lineNumber":286,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":287,"author":{"gitId":"Woolicious98"},"content":"Example: `go CS2113T`","lastModifiedDate":"2021-10-22"},{"lineNumber":288,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":289,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":291,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":292,"author":{"gitId":"Woolicious98"},"content":"[] \u003e\u003e\u003e go CS2113T","lastModifiedDate":"2021-10-22"},{"lineNumber":293,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":294,"author":{"gitId":"Woolicious98"},"content":"Entering CS2113T workspace","lastModifiedDate":"2021-10-22"},{"lineNumber":295,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":296,"author":{"gitId":"Woolicious98"},"content":"Type any of the following to get started:","lastModifiedDate":"2021-10-22"},{"lineNumber":297,"author":{"gitId":"Woolicious98"},"content":"\u003e exit","lastModifiedDate":"2021-10-22"},{"lineNumber":298,"author":{"gitId":"Woolicious98"},"content":"\u003e help","lastModifiedDate":"2021-10-22"},{"lineNumber":299,"author":{"gitId":"Woolicious98"},"content":"\u003e note","lastModifiedDate":"2021-10-22"},{"lineNumber":300,"author":{"gitId":"Woolicious98"},"content":"\u003e schedule","lastModifiedDate":"2021-10-22"},{"lineNumber":301,"author":{"gitId":"Woolicious98"},"content":"\u003e question","lastModifiedDate":"2021-10-22"},{"lineNumber":302,"author":{"gitId":"Woolicious98"},"content":"\u003e back","lastModifiedDate":"2021-10-22"},{"lineNumber":303,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":304,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":305,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":306,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":307,"author":{"gitId":"Woolicious98"},"content":"List of Module workspace commands:","lastModifiedDate":"2021-10-22"},{"lineNumber":308,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":309,"author":{"gitId":"Woolicious98"},"content":"| Command      | Description |","lastModifiedDate":"2021-10-22"},{"lineNumber":310,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-10-22"},{"lineNumber":311,"author":{"gitId":"Woolicious98"},"content":"|note|enter the note workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":312,"author":{"gitId":"Woolicious98"},"content":"|schedule|enter the schedule workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":313,"author":{"gitId":"Woolicious98"},"content":"|question|enter the question workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":314,"author":{"gitId":"Woolicious98"},"content":"|help|view all commands and their usage within its module workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":315,"author":{"gitId":"Woolicious98"},"content":"|back|escape and return to the default workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":316,"author":{"gitId":"Woolicious98"},"content":"|exit|exit and closes TermiNUS|","lastModifiedDate":"2021-10-22"},{"lineNumber":317,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":318,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-22"},{"lineNumber":319,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":320,"author":{"gitId":"LouisLouis19"},"content":"## Section: Note","lastModifiedDate":"2021-10-09"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":322,"author":{"gitId":"Woolicious98"},"content":"All commands related to the workspace `Note` will be displayed in this section. These commands","lastModifiedDate":"2021-10-23"},{"lineNumber":323,"author":{"gitId":"Woolicious98"},"content":"enable users to create, delete and view `notes` within the module.","lastModifiedDate":"2021-10-22"},{"lineNumber":324,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":325,"author":{"gitId":"Woolicious98"},"content":"### Accessing note workspace","lastModifiedDate":"2021-10-22"},{"lineNumber":326,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":327,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `note`","lastModifiedDate":"2021-10-08"},{"lineNumber":328,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":329,"author":{"gitId":"Woolicious98"},"content":"Enters the Note workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":330,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":331,"author":{"gitId":"Woolicious98"},"content":"Example: `note`","lastModifiedDate":"2021-10-22"},{"lineNumber":332,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":333,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":334,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":335,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":336,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e note","lastModifiedDate":"2021-10-22"},{"lineNumber":337,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":338,"author":{"gitId":"Woolicious98"},"content":"You have 0 note(s) inside this workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":339,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":340,"author":{"gitId":"LouisLouis19"},"content":"Type any of the following to get started:","lastModifiedDate":"2021-10-09"},{"lineNumber":341,"author":{"gitId":"LouisLouis19"},"content":"\u003e add","lastModifiedDate":"2021-10-08"},{"lineNumber":342,"author":{"gitId":"LouisLouis19"},"content":"\u003e exit","lastModifiedDate":"2021-10-09"},{"lineNumber":343,"author":{"gitId":"LouisLouis19"},"content":"\u003e help","lastModifiedDate":"2021-10-09"},{"lineNumber":344,"author":{"gitId":"LouisLouis19"},"content":"\u003e view","lastModifiedDate":"2021-10-08"},{"lineNumber":345,"author":{"gitId":"LouisLouis19"},"content":"\u003e back","lastModifiedDate":"2021-10-09"},{"lineNumber":346,"author":{"gitId":"LouisLouis19"},"content":"\u003e delete","lastModifiedDate":"2021-10-09"},{"lineNumber":347,"author":{"gitId":"3m0W33D"},"content":"\u003e export","lastModifiedDate":"2021-10-24"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":349,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":350,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":352,"author":{"gitId":"Woolicious98"},"content":"List of Note workspace commands:","lastModifiedDate":"2021-10-22"},{"lineNumber":353,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":354,"author":{"gitId":"Woolicious98"},"content":"| Command      | Description |","lastModifiedDate":"2021-10-22"},{"lineNumber":355,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-10-22"},{"lineNumber":356,"author":{"gitId":"Woolicious98"},"content":"|add|add a note for the module|","lastModifiedDate":"2021-10-22"},{"lineNumber":357,"author":{"gitId":"Woolicious98"},"content":"|delete|delete a note from the module|","lastModifiedDate":"2021-10-22"},{"lineNumber":358,"author":{"gitId":"Woolicious98"},"content":"|view|view notes information from the module|","lastModifiedDate":"2021-10-22"},{"lineNumber":359,"author":{"gitId":"3m0W33D"},"content":"|export|export all current notes for the module as a pdf|","lastModifiedDate":"2021-10-24"},{"lineNumber":360,"author":{"gitId":"Woolicious98"},"content":"|help|view all commands and their usage in the note workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":361,"author":{"gitId":"Woolicious98"},"content":"|back|escape and return to the module workspace|","lastModifiedDate":"2021-10-22"},{"lineNumber":362,"author":{"gitId":"Woolicious98"},"content":"|exit|exit and closes TermiNUS|","lastModifiedDate":"2021-10-22"},{"lineNumber":363,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":364,"author":{"gitId":"LouisLouis19"},"content":"### Adding a Note","lastModifiedDate":"2021-10-08"},{"lineNumber":365,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":366,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `add \"\u003cname\u003e\" \"\u003ccontent\u003e\"`","lastModifiedDate":"2021-10-09"},{"lineNumber":367,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":368,"author":{"gitId":"Woolicious98"},"content":"Adds a note when in the note workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":369,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":370,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️The `\u003cname\u003e` cannot be more than **30** characters.","lastModifiedDate":"2021-10-23"},{"lineNumber":371,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":372,"author":{"gitId":"Woolicious98"},"content":"\u003e 💡 When executing this command, it will add the note into its module and creates a `.txt` file inside the module folder. The `.txt` file will be named after the newly added note name.","lastModifiedDate":"2021-10-22"},{"lineNumber":373,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":374,"author":{"gitId":"Woolicious98"},"content":"\u003e ❗ If there exists a file with the same name of the newly added note, all contents in that file will be overwritten.","lastModifiedDate":"2021-10-22"},{"lineNumber":375,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":376,"author":{"gitId":"Woolicious98"},"content":"Example: `add \"coding style\" \"switch case identation should be aligned.\"`","lastModifiedDate":"2021-10-22"},{"lineNumber":377,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":378,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":379,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":380,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":381,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e add \"coding style\" \"switch case identation should be aligned.\"","lastModifiedDate":"2021-10-22"},{"lineNumber":382,"author":{"gitId":"Woolicious98"},"content":"Your note on \u0027coding style\u0027 has been added!","lastModifiedDate":"2021-10-22"},{"lineNumber":383,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":384,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":386,"author":{"gitId":"Woolicious98"},"content":"### Deleting a Note","lastModifiedDate":"2021-10-22"},{"lineNumber":387,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":388,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `delete \u003cindex\u003e`","lastModifiedDate":"2021-10-09"},{"lineNumber":389,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":390,"author":{"gitId":"Woolicious98"},"content":"Deletes the specified note given by its **index** when in the note workspace.","lastModifiedDate":"2021-10-22"},{"lineNumber":391,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":392,"author":{"gitId":"Woolicious98"},"content":"\u003e ❗ When the specified note is being deleted, the file that stores the note will be deleted.","lastModifiedDate":"2021-10-22"},{"lineNumber":393,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":394,"author":{"gitId":"Woolicious98"},"content":"Example: `delete 1`","lastModifiedDate":"2021-10-22"},{"lineNumber":395,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":396,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-22"},{"lineNumber":397,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":398,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":399,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e delete 1","lastModifiedDate":"2021-10-22"},{"lineNumber":400,"author":{"gitId":"Woolicious98"},"content":"Your note on \u0027coding style\u0027 has been deleted!","lastModifiedDate":"2021-10-22"},{"lineNumber":401,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":402,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":403,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":404,"author":{"gitId":"Woolicious98"},"content":"### Viewing note information","lastModifiedDate":"2021-10-22"},{"lineNumber":405,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":406,"author":{"gitId":"Woolicious98"},"content":"**Format:** `view {index}`","lastModifiedDate":"2021-10-22"},{"lineNumber":407,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":408,"author":{"gitId":"Woolicious98"},"content":"Views a list of notes in the module or views all information for that specific note when in the note","lastModifiedDate":"2021-10-23"},{"lineNumber":409,"author":{"gitId":"Woolicious98"},"content":"workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":410,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":411,"author":{"gitId":"Woolicious98"},"content":"Example 1: `view`","lastModifiedDate":"2021-10-22"},{"lineNumber":412,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":413,"author":{"gitId":"Woolicious98"},"content":"Expected Output 1:","lastModifiedDate":"2021-10-22"},{"lineNumber":414,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":415,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-22"},{"lineNumber":416,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e view","lastModifiedDate":"2021-10-22"},{"lineNumber":417,"author":{"gitId":"Woolicious98"},"content":"List of Content","lastModifiedDate":"2021-10-22"},{"lineNumber":418,"author":{"gitId":"Woolicious98"},"content":"---------------","lastModifiedDate":"2021-10-22"},{"lineNumber":419,"author":{"gitId":"Woolicious98"},"content":"1. coding style","lastModifiedDate":"2021-10-22"},{"lineNumber":420,"author":{"gitId":"Woolicious98"},"content":"2. coding comments","lastModifiedDate":"2021-10-22"},{"lineNumber":421,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":422,"author":{"gitId":"Woolicious98"},"content":"Rerun the same command with an index behind to view the content.","lastModifiedDate":"2021-10-22"},{"lineNumber":423,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":424,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":425,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":426,"author":{"gitId":"Woolicious98"},"content":"Example 2: `view 1`","lastModifiedDate":"2021-10-22"},{"lineNumber":427,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":428,"author":{"gitId":"Woolicious98"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-22"},{"lineNumber":429,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":430,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":431,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e view 1","lastModifiedDate":"2021-10-22"},{"lineNumber":432,"author":{"gitId":"Woolicious98"},"content":"Name: coding style","lastModifiedDate":"2021-10-22"},{"lineNumber":433,"author":{"gitId":"Woolicious98"},"content":"Content:","lastModifiedDate":"2021-10-22"},{"lineNumber":434,"author":{"gitId":"Woolicious98"},"content":"switch case identation should be aligned.","lastModifiedDate":"2021-10-22"},{"lineNumber":435,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":436,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-22"},{"lineNumber":437,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":438,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":439,"author":{"gitId":"3m0W33D"},"content":"### Exporting all notes ","lastModifiedDate":"2021-10-24"},{"lineNumber":440,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":441,"author":{"gitId":"3m0W33D"},"content":"**Format:** `export`","lastModifiedDate":"2021-10-24"},{"lineNumber":442,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":443,"author":{"gitId":"3m0W33D"},"content":"Exports all notes within the note workspace as a PDF file.","lastModifiedDate":"2021-10-24"},{"lineNumber":444,"author":{"gitId":"3m0W33D"},"content":"\u003e ⚠️ To export a file, there must be at least 1 note contained within the note workspace.","lastModifiedDate":"2021-10-24"},{"lineNumber":445,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":446,"author":{"gitId":"3m0W33D"},"content":"\u003e ⚠️ The export process can take a while.   ","lastModifiedDate":"2021-10-24"},{"lineNumber":447,"author":{"gitId":"3m0W33D"},"content":"\u003e A very large text can cause the program to take a long time to export.","lastModifiedDate":"2021-10-24"},{"lineNumber":448,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":449,"author":{"gitId":"3m0W33D"},"content":"Example: `export`","lastModifiedDate":"2021-10-24"},{"lineNumber":450,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":451,"author":{"gitId":"3m0W33D"},"content":"Expected Output:","lastModifiedDate":"2021-10-24"},{"lineNumber":452,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":453,"author":{"gitId":"3m0W33D"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":454,"author":{"gitId":"3m0W33D"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e export","lastModifiedDate":"2021-10-24"},{"lineNumber":455,"author":{"gitId":"3m0W33D"},"content":"Exported notes! Check the data folder.","lastModifiedDate":"2021-10-24"},{"lineNumber":456,"author":{"gitId":"3m0W33D"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-24"},{"lineNumber":457,"author":{"gitId":"3m0W33D"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":458,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":459,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-22"},{"lineNumber":460,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":461,"author":{"gitId":"LouisLouis19"},"content":"## Section: Schedule","lastModifiedDate":"2021-10-09"},{"lineNumber":462,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":463,"author":{"gitId":"Woolicious98"},"content":"All commands related to the workspace `Schedule` will be displayed in this section. These commands","lastModifiedDate":"2021-10-23"},{"lineNumber":464,"author":{"gitId":"Woolicious98"},"content":"enable users to create, delete and view `schedule` within the module.","lastModifiedDate":"2021-10-23"},{"lineNumber":465,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":466,"author":{"gitId":"Woolicious98"},"content":"### Accessing schedule workspace","lastModifiedDate":"2021-10-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":468,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `schedule`","lastModifiedDate":"2021-10-08"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":470,"author":{"gitId":"Woolicious98"},"content":"Enters the Schedule workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":472,"author":{"gitId":"Woolicious98"},"content":"Example: `schedule`","lastModifiedDate":"2021-10-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":474,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":476,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":477,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e schedule","lastModifiedDate":"2021-10-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":479,"author":{"gitId":"LouisLouis19"},"content":"You have 0 link(s) in this workspace.","lastModifiedDate":"2021-10-09"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":481,"author":{"gitId":"LouisLouis19"},"content":"Type any of the following to get started:","lastModifiedDate":"2021-10-09"},{"lineNumber":482,"author":{"gitId":"LouisLouis19"},"content":"\u003e add","lastModifiedDate":"2021-10-08"},{"lineNumber":483,"author":{"gitId":"Woolicious98"},"content":"\u003e exit","lastModifiedDate":"2021-10-23"},{"lineNumber":484,"author":{"gitId":"LouisLouis19"},"content":"\u003e help","lastModifiedDate":"2021-10-09"},{"lineNumber":485,"author":{"gitId":"LouisLouis19"},"content":"\u003e view","lastModifiedDate":"2021-10-08"},{"lineNumber":486,"author":{"gitId":"LouisLouis19"},"content":"\u003e back","lastModifiedDate":"2021-10-09"},{"lineNumber":487,"author":{"gitId":"LouisLouis19"},"content":"\u003e delete","lastModifiedDate":"2021-10-09"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":489,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":490,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":492,"author":{"gitId":"Woolicious98"},"content":"List of Schedule workspace commands:","lastModifiedDate":"2021-10-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":494,"author":{"gitId":"Woolicious98"},"content":"| Command      | Description |","lastModifiedDate":"2021-10-23"},{"lineNumber":495,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- |","lastModifiedDate":"2021-10-23"},{"lineNumber":496,"author":{"gitId":"Woolicious98"},"content":"|add|add a schedule for the module|","lastModifiedDate":"2021-10-23"},{"lineNumber":497,"author":{"gitId":"Woolicious98"},"content":"|delete|delete a schedule from the module|","lastModifiedDate":"2021-10-23"},{"lineNumber":498,"author":{"gitId":"Woolicious98"},"content":"|view|view schedule information from the module|","lastModifiedDate":"2021-10-23"},{"lineNumber":499,"author":{"gitId":"Woolicious98"},"content":"|help|view all commands and their usage in the schedule workspace|","lastModifiedDate":"2021-10-23"},{"lineNumber":500,"author":{"gitId":"Woolicious98"},"content":"|back|escape and return to the module workspace|","lastModifiedDate":"2021-10-23"},{"lineNumber":501,"author":{"gitId":"Woolicious98"},"content":"|exit|exit and closes TermiNUS|","lastModifiedDate":"2021-10-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":503,"author":{"gitId":"LouisLouis19"},"content":"### Adding a Schedule","lastModifiedDate":"2021-10-08"},{"lineNumber":504,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":505,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `add \"\u003cdescription\u003e\" \"\u003cday\u003e\" \"\u003cstart_time\u003e\" \"\u003cduration\u003e\" \"\u003czoom_link\u003e\"`","lastModifiedDate":"2021-10-23"},{"lineNumber":506,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":507,"author":{"gitId":"Woolicious98"},"content":"Adds a schedule when in the schedule workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":508,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":509,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️The `\u003cday\u003e` must be a valid **day spelled fully**. For example, `monday` is a valid day but `mon` is not.","lastModifiedDate":"2021-10-23"},{"lineNumber":510,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":511,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️The `\u003cstart_time\u003e` must be in a **HH:mm** format which follows the **24-hour notation**. For example, `14:20` is valid which represents `2:20 pm`.","lastModifiedDate":"2021-10-23"},{"lineNumber":512,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":513,"author":{"gitId":"LouisLouis19"},"content":"\u003e ⚠️The `\u003cduration\u003e` must be a **positive** number. For example, `2` is a valid duration but `-1` is not.","lastModifiedDate":"2021-10-23"},{"lineNumber":514,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":515,"author":{"gitId":"LouisLouis19"},"content":"Example: `add \"CS2113T Tutorial 1\" \"Thursday\" \"10:00\" \"2\" \"https://zoom.us/test\"`","lastModifiedDate":"2021-10-23"},{"lineNumber":516,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":517,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-23"},{"lineNumber":518,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":519,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":520,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e add \"CS2113T Tutorial 1\" \"Thursday\" \"10:00\" \"https://zoom.us/test\"","lastModifiedDate":"2021-10-23"},{"lineNumber":521,"author":{"gitId":"Woolicious98"},"content":"Your schedule on \u0027CS2113T Tutorial 1\u0027 has been added!","lastModifiedDate":"2021-10-23"},{"lineNumber":522,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":523,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":524,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":525,"author":{"gitId":"Woolicious98"},"content":"### Deleting a Schedule","lastModifiedDate":"2021-10-23"},{"lineNumber":526,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":527,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `delete \u003cindex\u003e`","lastModifiedDate":"2021-10-09"},{"lineNumber":528,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":529,"author":{"gitId":"Woolicious98"},"content":"Deletes the specified schedule given by its **index** when in the schedule workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":530,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":531,"author":{"gitId":"Woolicious98"},"content":"Example: `delete 1`","lastModifiedDate":"2021-10-23"},{"lineNumber":532,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":533,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-23"},{"lineNumber":534,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":535,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":536,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e delete 1","lastModifiedDate":"2021-10-23"},{"lineNumber":537,"author":{"gitId":"Woolicious98"},"content":"Your link on \u0027CS2113T Tutorial 1\u0027 has been deleted!","lastModifiedDate":"2021-10-23"},{"lineNumber":538,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":539,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":540,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":541,"author":{"gitId":"Woolicious98"},"content":"### Viewing schedule information","lastModifiedDate":"2021-10-23"},{"lineNumber":542,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":543,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `view`","lastModifiedDate":"2021-10-08"},{"lineNumber":544,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":545,"author":{"gitId":"Woolicious98"},"content":"Views a list of schedules in the module when in the schedule workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":546,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":547,"author":{"gitId":"Woolicious98"},"content":"Example: `view`","lastModifiedDate":"2021-10-23"},{"lineNumber":548,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":549,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-23"},{"lineNumber":550,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":551,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":552,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e view","lastModifiedDate":"2021-10-23"},{"lineNumber":553,"author":{"gitId":"Woolicious98"},"content":"List of Content","lastModifiedDate":"2021-10-23"},{"lineNumber":554,"author":{"gitId":"Woolicious98"},"content":"---------------","lastModifiedDate":"2021-10-23"},{"lineNumber":555,"author":{"gitId":"LouisLouis19"},"content":"1. CS2113T Tutorial 1 (Thursday, 10:00 - 12:00): https://zoom.us/test","lastModifiedDate":"2021-10-23"},{"lineNumber":556,"author":{"gitId":"LouisLouis19"},"content":"2. CS2113T Lab 1 (Friday, 12:30 - 14:30): https://zoom.us/test","lastModifiedDate":"2021-10-23"},{"lineNumber":557,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":558,"author":{"gitId":"Woolicious98"},"content":"Rerun the same command with an index behind to view the content.","lastModifiedDate":"2021-10-23"},{"lineNumber":559,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e schedule] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":560,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":561,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":562,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-23"},{"lineNumber":563,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":564,"author":{"gitId":"kelvneo"},"content":"## Section: Question","lastModifiedDate":"2021-10-21"},{"lineNumber":565,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":566,"author":{"gitId":"Woolicious98"},"content":"All commands related to the workspace Question will be displayed in this section. These commands","lastModifiedDate":"2021-10-23"},{"lineNumber":567,"author":{"gitId":"Woolicious98"},"content":"enable users to create, delete and view questions within the module.","lastModifiedDate":"2021-10-23"},{"lineNumber":568,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":569,"author":{"gitId":"Woolicious98"},"content":"In addition, users can test themselves with the question added into the module.","lastModifiedDate":"2021-10-23"},{"lineNumber":570,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":571,"author":{"gitId":"Woolicious98"},"content":"### Accessing question workspace","lastModifiedDate":"2021-10-23"},{"lineNumber":572,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":573,"author":{"gitId":"kelvneo"},"content":"**Format:** `question`","lastModifiedDate":"2021-10-21"},{"lineNumber":574,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":575,"author":{"gitId":"Woolicious98"},"content":"Enters the Question workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":576,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":577,"author":{"gitId":"Woolicious98"},"content":"Example: `question`","lastModifiedDate":"2021-10-23"},{"lineNumber":578,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":579,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-23"},{"lineNumber":580,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":581,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":582,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e question","lastModifiedDate":"2021-10-23"},{"lineNumber":583,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":584,"author":{"gitId":"kelvneo"},"content":"You have 0 question(s) in this workspace.","lastModifiedDate":"2021-10-21"},{"lineNumber":585,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":586,"author":{"gitId":"kelvneo"},"content":"Type any of the following to get started:","lastModifiedDate":"2021-10-21"},{"lineNumber":587,"author":{"gitId":"kelvneo"},"content":"\u003e add","lastModifiedDate":"2021-10-21"},{"lineNumber":588,"author":{"gitId":"kelvneo"},"content":"\u003e exit","lastModifiedDate":"2021-10-21"},{"lineNumber":589,"author":{"gitId":"kelvneo"},"content":"\u003e help","lastModifiedDate":"2021-10-21"},{"lineNumber":590,"author":{"gitId":"kelvneo"},"content":"\u003e view","lastModifiedDate":"2021-10-21"},{"lineNumber":591,"author":{"gitId":"kelvneo"},"content":"\u003e test","lastModifiedDate":"2021-10-21"},{"lineNumber":592,"author":{"gitId":"kelvneo"},"content":"\u003e back","lastModifiedDate":"2021-10-21"},{"lineNumber":593,"author":{"gitId":"kelvneo"},"content":"\u003e delete","lastModifiedDate":"2021-10-21"},{"lineNumber":594,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":595,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":596,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":597,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":598,"author":{"gitId":"kelvneo"},"content":"### Adding a Question","lastModifiedDate":"2021-10-21"},{"lineNumber":599,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":600,"author":{"gitId":"kelvneo"},"content":"**Format:** `add \"\u003cquestion\u003e\" \"\u003canswer\u003e\"`","lastModifiedDate":"2021-10-21"},{"lineNumber":601,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":602,"author":{"gitId":"Woolicious98"},"content":"Adds a question when in the question workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":603,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":604,"author":{"gitId":"Woolicious98"},"content":"Example: `add \"What is 1+1?\" \"2\"`","lastModifiedDate":"2021-10-23"},{"lineNumber":605,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":606,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-23"},{"lineNumber":607,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":608,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":609,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e add \"What is 1+1?\" \"2\"","lastModifiedDate":"2021-10-23"},{"lineNumber":610,"author":{"gitId":"kelvneo"},"content":"Your question on \u0027What is 1+1?\u0027 has been added!","lastModifiedDate":"2021-10-21"},{"lineNumber":611,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":612,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":613,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":614,"author":{"gitId":"Woolicious98"},"content":"### Deleting a Question","lastModifiedDate":"2021-10-23"},{"lineNumber":615,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":616,"author":{"gitId":"kelvneo"},"content":"**Format:** `delete \u003cindex\u003e`","lastModifiedDate":"2021-10-21"},{"lineNumber":617,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":618,"author":{"gitId":"Woolicious98"},"content":"Deletes the specified question given by its **index** when in the question workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":619,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":620,"author":{"gitId":"Woolicious98"},"content":"Example: `delete 1`","lastModifiedDate":"2021-10-23"},{"lineNumber":621,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":622,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-23"},{"lineNumber":623,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":624,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":625,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e delete 1","lastModifiedDate":"2021-10-23"},{"lineNumber":626,"author":{"gitId":"kelvneo"},"content":"Your question on \u0027What is 1+1?\u0027 has been deleted!","lastModifiedDate":"2021-10-21"},{"lineNumber":627,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":628,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":629,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":630,"author":{"gitId":"Woolicious98"},"content":"### Viewing question information","lastModifiedDate":"2021-10-23"},{"lineNumber":631,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":632,"author":{"gitId":"Woolicious98"},"content":"**Format:** `view {index}`","lastModifiedDate":"2021-10-23"},{"lineNumber":633,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":634,"author":{"gitId":"Woolicious98"},"content":"Views a list of questions in the module or views all information for that specific question when in","lastModifiedDate":"2021-10-23"},{"lineNumber":635,"author":{"gitId":"Woolicious98"},"content":"the question workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":636,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":637,"author":{"gitId":"Woolicious98"},"content":"Example 1: `view`","lastModifiedDate":"2021-10-23"},{"lineNumber":638,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":639,"author":{"gitId":"Woolicious98"},"content":"Expected Output 1:","lastModifiedDate":"2021-10-23"},{"lineNumber":640,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":641,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":642,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e view","lastModifiedDate":"2021-10-23"},{"lineNumber":643,"author":{"gitId":"kelvneo"},"content":"List of Content","lastModifiedDate":"2021-10-21"},{"lineNumber":644,"author":{"gitId":"kelvneo"},"content":"---------------","lastModifiedDate":"2021-10-21"},{"lineNumber":645,"author":{"gitId":"Woolicious98"},"content":"1. What is EP?","lastModifiedDate":"2021-10-23"},{"lineNumber":646,"author":{"gitId":"Woolicious98"},"content":"2. What is UML?","lastModifiedDate":"2021-10-23"},{"lineNumber":647,"author":{"gitId":"Woolicious98"},"content":"3. What is SUT?","lastModifiedDate":"2021-10-23"},{"lineNumber":648,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":649,"author":{"gitId":"kelvneo"},"content":"Rerun the same command with an index behind to view the content.","lastModifiedDate":"2021-10-21"},{"lineNumber":650,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":651,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":652,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":653,"author":{"gitId":"Woolicious98"},"content":"Example 2: `view 1`","lastModifiedDate":"2021-10-23"},{"lineNumber":654,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":655,"author":{"gitId":"Woolicious98"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-23"},{"lineNumber":656,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":657,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":658,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e view 1","lastModifiedDate":"2021-10-23"},{"lineNumber":659,"author":{"gitId":"Woolicious98"},"content":"Name: What is EP?","lastModifiedDate":"2021-10-23"},{"lineNumber":660,"author":{"gitId":"kelvneo"},"content":"Content:","lastModifiedDate":"2021-10-21"},{"lineNumber":661,"author":{"gitId":"Woolicious98"},"content":"Equivalence partitioning","lastModifiedDate":"2021-10-23"},{"lineNumber":662,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":663,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":664,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":665,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":666,"author":{"gitId":"kelvneo"},"content":"### Testing Yourself with Active Recall","lastModifiedDate":"2021-10-21"},{"lineNumber":667,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":668,"author":{"gitId":"Woolicious98"},"content":"**Format:** `test {count}`  ","lastModifiedDate":"2021-10-23"},{"lineNumber":669,"author":{"gitId":"kelvneo"},"content":"You can start an Active Recall session by running the `test` command.","lastModifiedDate":"2021-10-21"},{"lineNumber":670,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":671,"author":{"gitId":"kelvneo"},"content":"By default, it will test 10 questions (or less if there are not enough questions). You may specify","lastModifiedDate":"2021-10-21"},{"lineNumber":672,"author":{"gitId":"kelvneo"},"content":"how many questions you wish to run in that session by keying in the number of questions after the","lastModifiedDate":"2021-10-21"},{"lineNumber":673,"author":{"gitId":"kelvneo"},"content":"`test` command.","lastModifiedDate":"2021-10-21"},{"lineNumber":674,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":675,"author":{"gitId":"kelvneo"},"content":"When you begin, you will be prompted with the following (do note that the question pool may be","lastModifiedDate":"2021-10-21"},{"lineNumber":676,"author":{"gitId":"kelvneo"},"content":"smaller if there are not enough questions in the workspace). Press the \u003ckbd\u003eEnter\u003c/kbd\u003e key to","lastModifiedDate":"2021-10-21"},{"lineNumber":677,"author":{"gitId":"kelvneo"},"content":"start.","lastModifiedDate":"2021-10-21"},{"lineNumber":678,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":679,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":680,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e test 3","lastModifiedDate":"2021-10-23"},{"lineNumber":681,"author":{"gitId":"kelvneo"},"content":"---[Active Recall]---","lastModifiedDate":"2021-10-21"},{"lineNumber":682,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":683,"author":{"gitId":"kelvneo"},"content":"We will be starting your active recall training session.","lastModifiedDate":"2021-10-21"},{"lineNumber":684,"author":{"gitId":"kelvneo"},"content":"This session will consist of 3 questions.","lastModifiedDate":"2021-10-21"},{"lineNumber":685,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":686,"author":{"gitId":"kelvneo"},"content":"When you are ready, press [Enter] to continue.","lastModifiedDate":"2021-10-21"},{"lineNumber":687,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":688,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":689,"author":{"gitId":"kelvneo"},"content":"The first question will be displayed, and once you are ready to reveal the answer, press the","lastModifiedDate":"2021-10-21"},{"lineNumber":690,"author":{"gitId":"kelvneo"},"content":"\u003ckbd\u003eEnter\u003c/kbd\u003e key again.","lastModifiedDate":"2021-10-21"},{"lineNumber":691,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":692,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":693,"author":{"gitId":"kelvneo"},"content":"---","lastModifiedDate":"2021-10-21"},{"lineNumber":694,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":695,"author":{"gitId":"kelvneo"},"content":"Question:","lastModifiedDate":"2021-10-21"},{"lineNumber":696,"author":{"gitId":"Woolicious98"},"content":"What is EP?","lastModifiedDate":"2021-10-23"},{"lineNumber":697,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":698,"author":{"gitId":"kelvneo"},"content":"When you are ready, press [Enter] to continue.","lastModifiedDate":"2021-10-21"},{"lineNumber":699,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":700,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":701,"author":{"gitId":"kelvneo"},"content":"After revealing the answer, provide feedback to TermiNUS to allow it to know if the question should","lastModifiedDate":"2021-10-21"},{"lineNumber":702,"author":{"gitId":"kelvneo"},"content":"appear more often in the future.","lastModifiedDate":"2021-10-21"},{"lineNumber":703,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":704,"author":{"gitId":"kelvneo"},"content":"- Key in `1` if you felt it was easy.","lastModifiedDate":"2021-10-21"},{"lineNumber":705,"author":{"gitId":"kelvneo"},"content":"- Key in `2` if you felt it was normal.","lastModifiedDate":"2021-10-21"},{"lineNumber":706,"author":{"gitId":"kelvneo"},"content":"- Key in `3` if you felt it was hard.","lastModifiedDate":"2021-10-21"},{"lineNumber":707,"author":{"gitId":"kelvneo"},"content":"- Key in `E` if you wish to exit the session.","lastModifiedDate":"2021-10-21"},{"lineNumber":708,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":709,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":710,"author":{"gitId":"kelvneo"},"content":"You took 172 seconds to reveal the answer.","lastModifiedDate":"2021-10-21"},{"lineNumber":711,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":712,"author":{"gitId":"kelvneo"},"content":"Answer:","lastModifiedDate":"2021-10-21"},{"lineNumber":713,"author":{"gitId":"Woolicious98"},"content":"Equivalence partitioning","lastModifiedDate":"2021-10-23"},{"lineNumber":714,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":715,"author":{"gitId":"kelvneo"},"content":"How did you find the question? (Compare against past attempts if any)","lastModifiedDate":"2021-10-21"},{"lineNumber":716,"author":{"gitId":"kelvneo"},"content":"[1] Easy; [2] Normal / Same; [3] Hard; [E] Exit","lastModifiedDate":"2021-10-21"},{"lineNumber":717,"author":{"gitId":"kelvneo"},"content":"[1/2/3/E] \u003e\u003e ","lastModifiedDate":"2021-10-21"},{"lineNumber":718,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":719,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":720,"author":{"gitId":"kelvneo"},"content":"After choosing your difficulty, you may proceed to reveal the next question by pressing","lastModifiedDate":"2021-10-21"},{"lineNumber":721,"author":{"gitId":"kelvneo"},"content":"\u003ckbd\u003eEnter\u003c/kbd\u003e key again.","lastModifiedDate":"2021-10-21"},{"lineNumber":722,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":723,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":724,"author":{"gitId":"kelvneo"},"content":"[1/2/3/E] \u003e\u003e 2","lastModifiedDate":"2021-10-21"},{"lineNumber":725,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":726,"author":{"gitId":"kelvneo"},"content":"When you are ready, press [Enter] to continue.","lastModifiedDate":"2021-10-21"},{"lineNumber":727,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":728,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":729,"author":{"gitId":"kelvneo"},"content":"Once the question pool is empty, or when you decided to stop, TermiNUS will drop you back into the","lastModifiedDate":"2021-10-21"},{"lineNumber":730,"author":{"gitId":"kelvneo"},"content":"command prompt.","lastModifiedDate":"2021-10-21"},{"lineNumber":731,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":732,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":733,"author":{"gitId":"kelvneo"},"content":"This training session has ended.","lastModifiedDate":"2021-10-21"},{"lineNumber":734,"author":{"gitId":"kelvneo"},"content":"Returning you back to main program.","lastModifiedDate":"2021-10-21"},{"lineNumber":735,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e question] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":736,"author":{"gitId":"kelvneo"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":737,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":738,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-23"},{"lineNumber":739,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":740,"author":{"gitId":"Woolicious98"},"content":"## Displaying all schedules across all modules","lastModifiedDate":"2021-10-23"},{"lineNumber":741,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":742,"author":{"gitId":"Woolicious98"},"content":"**Format:** `timetable {day}`","lastModifiedDate":"2021-10-23"},{"lineNumber":743,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":744,"author":{"gitId":"Woolicious98"},"content":"Displays all schedules from all modules in TermiNUS or displays certain schedules that falls on the","lastModifiedDate":"2021-10-23"},{"lineNumber":745,"author":{"gitId":"Woolicious98"},"content":"specified day.","lastModifiedDate":"2021-10-23"},{"lineNumber":746,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":747,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️The `\u003cday\u003e` must be a valid **day spelled fully**. For example, `monday` is a valid day but `mon` is not.","lastModifiedDate":"2021-10-23"},{"lineNumber":748,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":749,"author":{"gitId":"Woolicious98"},"content":"Example 1: `timetable`","lastModifiedDate":"2021-10-23"},{"lineNumber":750,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":751,"author":{"gitId":"Woolicious98"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-23"},{"lineNumber":752,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":753,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":754,"author":{"gitId":"Woolicious98"},"content":"[] \u003e\u003e\u003e timetable","lastModifiedDate":"2021-10-23"},{"lineNumber":755,"author":{"gitId":"Woolicious98"},"content":"THURSDAY:","lastModifiedDate":"2021-10-23"},{"lineNumber":756,"author":{"gitId":"LouisLouis19"},"content":"1. CS2113T Tutorial 1 (Thursday, 10:00 - 12:00): https://zoom.us/test","lastModifiedDate":"2021-10-23"},{"lineNumber":757,"author":{"gitId":"Woolicious98"},"content":"FRIDAY:","lastModifiedDate":"2021-10-23"},{"lineNumber":758,"author":{"gitId":"LouisLouis19"},"content":"1. CS2113T Lab 1 (Friday, 12:30 - 14:30): https://zoom.us/test","lastModifiedDate":"2021-10-23"},{"lineNumber":759,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":760,"author":{"gitId":"Woolicious98"},"content":"[] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":761,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":762,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":763,"author":{"gitId":"Woolicious98"},"content":"Example 2: `timetable thursday`","lastModifiedDate":"2021-10-23"},{"lineNumber":764,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":765,"author":{"gitId":"Woolicious98"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-23"},{"lineNumber":766,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":767,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":768,"author":{"gitId":"Woolicious98"},"content":"[] \u003e\u003e\u003e timetable thursday","lastModifiedDate":"2021-10-23"},{"lineNumber":769,"author":{"gitId":"LouisLouis19"},"content":"1. CS2113T Tutorial 1 (Thursday, 10:00 - 12:00): https://zoom.us/test","lastModifiedDate":"2021-10-23"},{"lineNumber":770,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":771,"author":{"gitId":"Woolicious98"},"content":"[] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":772,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":773,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":774,"author":{"gitId":"Woolicious98"},"content":"## Returning to previous workspace","lastModifiedDate":"2021-10-23"},{"lineNumber":775,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":776,"author":{"gitId":"Woolicious98"},"content":"**Format:** `back`","lastModifiedDate":"2021-10-23"},{"lineNumber":777,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":778,"author":{"gitId":"Woolicious98"},"content":"Returns to the previous workspace prior to the current workspace you are in.","lastModifiedDate":"2021-10-23"},{"lineNumber":779,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":780,"author":{"gitId":"Woolicious98"},"content":"\u003e 💡 The **default** workspace is the only workspace that has no `back` command. This is because this workspace is the very first workspace of TermiNUS.","lastModifiedDate":"2021-10-23"},{"lineNumber":781,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":782,"author":{"gitId":"Woolicious98"},"content":"Example: `back` from note workspace","lastModifiedDate":"2021-10-23"},{"lineNumber":783,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":784,"author":{"gitId":"Woolicious98"},"content":"Expected Output:","lastModifiedDate":"2021-10-23"},{"lineNumber":785,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":786,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":787,"author":{"gitId":"Woolicious98"},"content":"[CS2113T \u003e note] \u003e\u003e\u003e back","lastModifiedDate":"2021-10-23"},{"lineNumber":788,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":789,"author":{"gitId":"Woolicious98"},"content":"Entering CS2113T workspace","lastModifiedDate":"2021-10-23"},{"lineNumber":790,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":791,"author":{"gitId":"Woolicious98"},"content":"Type any of the following to get started:","lastModifiedDate":"2021-10-23"},{"lineNumber":792,"author":{"gitId":"Woolicious98"},"content":"\u003e exit","lastModifiedDate":"2021-10-23"},{"lineNumber":793,"author":{"gitId":"Woolicious98"},"content":"\u003e help","lastModifiedDate":"2021-10-23"},{"lineNumber":794,"author":{"gitId":"Woolicious98"},"content":"\u003e note","lastModifiedDate":"2021-10-23"},{"lineNumber":795,"author":{"gitId":"Woolicious98"},"content":"\u003e schedule","lastModifiedDate":"2021-10-23"},{"lineNumber":796,"author":{"gitId":"Woolicious98"},"content":"\u003e question","lastModifiedDate":"2021-10-23"},{"lineNumber":797,"author":{"gitId":"Woolicious98"},"content":"\u003e back","lastModifiedDate":"2021-10-23"},{"lineNumber":798,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":799,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":800,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":801,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":802,"author":{"gitId":"Woolicious98"},"content":"\u003e 💡 Notice how the workspace indicator changes from `[CS2113T \u003e note]` to `[CS2113T]`.","lastModifiedDate":"2021-10-23"},{"lineNumber":803,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":804,"author":{"gitId":"Woolicious98"},"content":"## Exiting TermiNUS","lastModifiedDate":"2021-10-23"},{"lineNumber":805,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":806,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `exit`","lastModifiedDate":"2021-10-08"},{"lineNumber":807,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":808,"author":{"gitId":"3m0W33D"},"content":"To exit the program, simply run the following command:","lastModifiedDate":"2021-10-10"},{"lineNumber":809,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":810,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":811,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e exit ","lastModifiedDate":"2021-10-08"},{"lineNumber":812,"author":{"gitId":"LouisLouis19"},"content":"Goodbye! ","lastModifiedDate":"2021-10-08"},{"lineNumber":813,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":814,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":815,"author":{"gitId":"LouisLouis19"},"content":"## Accessing Help","lastModifiedDate":"2021-10-08"},{"lineNumber":816,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":817,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `help`","lastModifiedDate":"2021-10-08"},{"lineNumber":818,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":819,"author":{"gitId":"3m0W33D"},"content":"Depending on your current workspace, you may get different help messages.  ","lastModifiedDate":"2021-10-10"},{"lineNumber":820,"author":{"gitId":"Woolicious98"},"content":"The following shows the help message in the default workspace:","lastModifiedDate":"2021-10-23"},{"lineNumber":821,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":822,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":823,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e help","lastModifiedDate":"2021-10-08"},{"lineNumber":824,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":825,"author":{"gitId":"Woolicious98"},"content":"Help Menu","lastModifiedDate":"2021-10-23"},{"lineNumber":826,"author":{"gitId":"Woolicious98"},"content":"---------","lastModifiedDate":"2021-10-23"},{"lineNumber":827,"author":{"gitId":"Woolicious98"},"content":"exit : Exits the program.","lastModifiedDate":"2021-10-23"},{"lineNumber":828,"author":{"gitId":"Woolicious98"},"content":"Format: exit","lastModifiedDate":"2021-10-23"},{"lineNumber":829,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":830,"author":{"gitId":"Woolicious98"},"content":"help : Prints the help page.","lastModifiedDate":"2021-10-23"},{"lineNumber":831,"author":{"gitId":"Woolicious98"},"content":"Format: help","lastModifiedDate":"2021-10-23"},{"lineNumber":832,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":833,"author":{"gitId":"Woolicious98"},"content":"module : Move to the module workspace","lastModifiedDate":"2021-10-23"},{"lineNumber":834,"author":{"gitId":"Woolicious98"},"content":"Format: module","lastModifiedDate":"2021-10-23"},{"lineNumber":835,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":836,"author":{"gitId":"Woolicious98"},"content":"go : Go to a specific module\u0027s workspace","lastModifiedDate":"2021-10-23"},{"lineNumber":837,"author":{"gitId":"Woolicious98"},"content":"Format: go \u003cmodule name\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":838,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":839,"author":{"gitId":"Woolicious98"},"content":"timetable : Displays all your schedule.","lastModifiedDate":"2021-10-23"},{"lineNumber":840,"author":{"gitId":"Woolicious98"},"content":"Format: timetable {day}","lastModifiedDate":"2021-10-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":842,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":843,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":844,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":845,"author":{"gitId":"LouisLouis19"},"content":"## Advanced Usage of Commands","lastModifiedDate":"2021-10-08"},{"lineNumber":846,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":847,"author":{"gitId":"Woolicious98"},"content":"**Format:** `\u003cworkspace\u003e \u003cavailable workspace command\u003e`","lastModifiedDate":"2021-10-23"},{"lineNumber":848,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":849,"author":{"gitId":"Woolicious98"},"content":"Users can access workspace command directly without entering its environment. Seen below are some","lastModifiedDate":"2021-10-23"},{"lineNumber":850,"author":{"gitId":"Woolicious98"},"content":"command examples.","lastModifiedDate":"2021-10-22"},{"lineNumber":851,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":852,"author":{"gitId":"Woolicious98"},"content":"A workspace command is a command that will bring you to its own workspace. Current workspace command","lastModifiedDate":"2021-10-22"},{"lineNumber":853,"author":{"gitId":"Woolicious98"},"content":"includes note, schedule, question, and module.","lastModifiedDate":"2021-10-23"},{"lineNumber":854,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":855,"author":{"gitId":"Woolicious98"},"content":"\u003e 💡 To access the module in TermiNUS, you will need to use the `go` command. For more information, please refer to [Section: Module](#section-module).","lastModifiedDate":"2021-10-23"},{"lineNumber":856,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":857,"author":{"gitId":"Woolicious98"},"content":"\u003e ⚠️This advance command do not allow any chaining with the `back` command.","lastModifiedDate":"2021-10-23"},{"lineNumber":858,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":859,"author":{"gitId":"Woolicious98"},"content":"Example:","lastModifiedDate":"2021-10-23"},{"lineNumber":860,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":861,"author":{"gitId":"Woolicious98"},"content":"- Adding a note without entering the note workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":862,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":863,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":864,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e note add \"Advance command\"  \"Advance command is cool\"","lastModifiedDate":"2021-10-23"},{"lineNumber":865,"author":{"gitId":"Woolicious98"},"content":"Your note on \u0027Advance command\u0027 has been added!","lastModifiedDate":"2021-10-23"},{"lineNumber":866,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":867,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":868,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":869,"author":{"gitId":"Woolicious98"},"content":"- Adding a schedule without entering the schedule workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":870,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":871,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":872,"author":{"gitId":"LouisLouis19"},"content":"[CS2113T] \u003e\u003e\u003e schedule add \"Lecture\" \"Friday\" \"16:00\" \"2\" \"https://zoom.us/test\"","lastModifiedDate":"2021-10-23"},{"lineNumber":873,"author":{"gitId":"Woolicious98"},"content":"Your schedule on \u0027Lecture\u0027 has been added!","lastModifiedDate":"2021-10-23"},{"lineNumber":874,"author":{"gitId":"Woolicious98"},"content":"[CS2113T] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-23"},{"lineNumber":875,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":876,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":877,"author":{"gitId":"Woolicious98"},"content":"- Adding a question without entering the module workspace.","lastModifiedDate":"2021-10-23"},{"lineNumber":878,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":879,"author":{"gitId":"Woolicious98"},"content":"```","lastModifiedDate":"2021-10-23"},{"lineNumber":880,"author":{"gitId":"Woolicious98"},"content":"[] \u003e\u003e\u003e go CS2113T question add \"What is Java?\" \"It is a programming language.\"","lastModifiedDate":"2021-10-23"},{"lineNumber":881,"author":{"gitId":"Woolicious98"},"content":"Your question on \u0027What is Java?\u0027 has been added!","lastModifiedDate":"2021-10-23"},{"lineNumber":882,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":883,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":884,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":885,"author":{"gitId":"3m0W33D"},"content":"___  ","lastModifiedDate":"2021-10-10"},{"lineNumber":886,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":887,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-10-08"},{"lineNumber":888,"author":{"gitId":"3m0W33D"},"content":"**Q:** Can I edit the information in the`data` directory?  ","lastModifiedDate":"2021-10-24"},{"lineNumber":889,"author":{"gitId":"Woolicious98"},"content":"**A:** Yes! **TermiNUS** saves and loads your information from the `data` folder. You are able to edit the files","lastModifiedDate":"2021-10-25"},{"lineNumber":890,"author":{"gitId":"Woolicious98"},"content":"in the `data` folder. We recommend you to update the **contents** of any notes which should be a `.txt` file in the ","lastModifiedDate":"2021-10-25"},{"lineNumber":891,"author":{"gitId":"Woolicious98"},"content":"`data/module_code` directory. However, we **do not** recommend modifying any configuration file such as `.json` file ","lastModifiedDate":"2021-10-25"},{"lineNumber":892,"author":{"gitId":"Woolicious98"},"content":"or renaming any folders in the `data` folder including the `data` folder itself. For these, you should use **TermiNUS** instead to edit.","lastModifiedDate":"2021-10-25"},{"lineNumber":893,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":894,"author":{"gitId":"3m0W33D"},"content":"___  ","lastModifiedDate":"2021-10-10"},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":896,"author":{"gitId":"Woolicious98"},"content":"## Workspace Command Summary","lastModifiedDate":"2021-10-23"},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":898,"author":{"gitId":"Woolicious98"},"content":"| Action | Format| Examples |","lastModifiedDate":"2021-10-23"},{"lineNumber":899,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- |----------- |","lastModifiedDate":"2021-10-23"},{"lineNumber":900,"author":{"gitId":"Woolicious98"},"content":"|access **module management** workspace|`module`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":901,"author":{"gitId":"Woolicious98"},"content":"|access **module** workspace|`go \u003cmodule_code\u003e` | `go CS2113T`|","lastModifiedDate":"2021-10-23"},{"lineNumber":902,"author":{"gitId":"Woolicious98"},"content":"|access **note** workspace|`note`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":903,"author":{"gitId":"Woolicious98"},"content":"|access **schedule** workspace|`schedule`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":904,"author":{"gitId":"Woolicious98"},"content":"|access **question** workspace|`question`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":905,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":906,"author":{"gitId":"3m0W33D"},"content":"___  ","lastModifiedDate":"2021-10-10"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":908,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2021-10-23"},{"lineNumber":909,"author":{"gitId":"3m0W33D"},"content":"\u003e ⚠️ To understand which command applies to which workspace mentioned below, ","lastModifiedDate":"2021-10-24"},{"lineNumber":910,"author":{"gitId":"3m0W33D"},"content":"\u003e please refer to [Workspace Command Summary](#workspace-command-summary)","lastModifiedDate":"2021-10-24"},{"lineNumber":911,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":912,"author":{"gitId":"Woolicious98"},"content":"| Workspace   | Action | Format| Examples |","lastModifiedDate":"2021-10-23"},{"lineNumber":913,"author":{"gitId":"Woolicious98"},"content":"| ----------- | ----------- | ----------- |----------- |","lastModifiedDate":"2021-10-23"},{"lineNumber":914,"author":{"gitId":"Woolicious98"},"content":"|module management|add module|`add \"\u003cmodule_code\u003e\"`|`add \"CS2113T\"`|","lastModifiedDate":"2021-10-23"},{"lineNumber":915,"author":{"gitId":"3m0W33D"},"content":"|module management|update module |`update \u003cindex\u003e \"\u003cnew_module_code\u003e\"`|`update 1 \"CS2113\"`|","lastModifiedDate":"2021-10-24"},{"lineNumber":916,"author":{"gitId":"Woolicious98"},"content":"|note|add note|`add \"\u003cname\u003e\" \"\u003ccontent\u003e\"`|`add \"Note1\" \"Hello world.\"`|","lastModifiedDate":"2021-10-23"},{"lineNumber":917,"author":{"gitId":"3m0W33D"},"content":"|note|export note|`export`|`export`|","lastModifiedDate":"2021-10-24"},{"lineNumber":918,"author":{"gitId":"LouisLouis19"},"content":"|schedule|add schedule|`add \"\u003cdescription\u003e\" \"\u003cday\u003e\" \"\u003cstart_time\u003e\" \"\u003cduration\u003e\" \u003czoom_link\u003e\"`|`add \"CS2113T Tutorial 1\" \"Thursday\" \"10:00\" \"1\" \"https://zoom.us/test\"`|","lastModifiedDate":"2021-10-23"},{"lineNumber":919,"author":{"gitId":"Woolicious98"},"content":"|question|add question|`add \"\u003cquestion\u003e\" \"\u003canswer\u003e\"`|`add \"What is 1+1?\" \"2\"`|","lastModifiedDate":"2021-10-23"},{"lineNumber":920,"author":{"gitId":"Woolicious98"},"content":"|question|active learning|`test {count}`|`test`, `test 3`|","lastModifiedDate":"2021-10-23"},{"lineNumber":921,"author":{"gitId":"Woolicious98"},"content":"|default|view timetable|`timetable {day}`|`timetable`, `timetable Thursday`|","lastModifiedDate":"2021-10-23"},{"lineNumber":922,"author":{"gitId":"Woolicious98"},"content":"|**ALL** except module|delete item|`delete \u003cindex\u003e`|`delete 1`|","lastModifiedDate":"2021-10-23"},{"lineNumber":923,"author":{"gitId":"Woolicious98"},"content":"|**ALL** except module|view item information|`view {index}`|`view`, `view 1`|","lastModifiedDate":"2021-10-23"},{"lineNumber":924,"author":{"gitId":"Woolicious98"},"content":"|**ALL**|help|`help`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":925,"author":{"gitId":"Woolicious98"},"content":"|**ALL** except default|go back to previous workspace|`back`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":926,"author":{"gitId":"Woolicious98"},"content":"|**ALL**|exit the program|`exit`|-|","lastModifiedDate":"2021-10-23"},{"lineNumber":927,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":928,"author":{"gitId":"Woolicious98"},"content":"---","lastModifiedDate":"2021-10-23"},{"lineNumber":929,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":931,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"LouisLouis19":99,"kelvneo":109,"Woolicious98":630,"3m0W33D":57,"-":36}},{"path":"docs/uml/ActiveRecallClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"hide circle","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"TestCommand ..\u003e GameEnvironment","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"GameEnvironment -\u003e \"1\" Ui : \"ui\"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"Ui \u003c. GameEnvironment","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"GameEnvironment *--\u003e \"1\" QuestionGenerator : \"questionGenerator\"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"DifficultyModifier \u003c. GameEnvironment","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"QuestionGenerator -\u003e \"1..*\" Question : \"questionBank\"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"note top on link ","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"  questionBank is stored as","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"  a Map\u003cDouble, Question\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"  where Double is the weight","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"endnote","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"GameEnvironment ..\u003e  Question","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"class TestCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"  + execute(ModuleManager moduleManager): void","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"class GameEnvironment {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"  GameEnvironment(Ui ui, QuestionGenerator generator)","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"  + run(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"  - showPreGameInformation(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"  - promptQuestion(): Question","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"  - getUserFeedback(): int","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"  - updateQuestionDifficulty(Question question, int difficulty): void","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"  + {static} createNewEnvironment(List\u003cQuestion\u003e questions, int questionCount)","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"class QuestionGenerator {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"  - random: Random","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"  - total: double","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"  - questionCount: int","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"  + QuestionGenerator(List\u003cQuestion\u003e questionBank, int questionCount)","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"  + QuestionGenerator(List\u003cQuestion\u003e questionBank, int questionCount, Random random)","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"  + hasNext(): boolean","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"  + next(): Question","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"  + getQuestionPoolSize(): int","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"  - addQuestion(Question question): void","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"class Question {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"  - name","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"  - data","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"  - weight","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"  + Question(String question, String answer)","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"note bottom of Question","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"  The name and data represents","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"  question and answer respectively.","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"endnote","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"class Ui {","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"  + printSection(String... strings): void","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"  + getUserInput(String prompt): String","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"  + {static} getInstance(): Ui","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"class DifficultyModifier {","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"  + {static} tweakEasyQuestionDifficulty(double initial): double","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"  + {static} tweakHardQuestionDifficulty(double initial): double","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"  - {static} getCurveValue(double x): double","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":72}},{"path":"docs/uml/ActiveRecallSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"skinparam sequenceMessageAlign center","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"box \"Commands\" #thistle","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"participant \":TestCommand\" as TestCommand #violet","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"box \"Main\" #bisque","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"box \"Active Recall\" #lightblue","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"participant \":GameEnvironment\" as GameEnvironment #lightskyblue","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"participant \":QuestionGenerator\" as QuestionGenerator #lightskyblue","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"participant \":DifficultyModifier\" as DifficultyModifier #lightskyblue","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"participant \":Question\" as Question #lightskyblue","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"endbox","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"-\u003e TestCommand : execute(moduleManager)","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"activate TestCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"TestCommand -\u003e GameEnvironment : createNewEnvironment(questions, count)","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"activate GameEnvironment","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"  GameEnvironment -\u003e Ui : getInstance()","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"  activate Ui","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"  return ui","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"  create QuestionGenerator","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"  GameEnvironment -\u003e QuestionGenerator : new QuestionGenerator(questions, count)","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"  activate QuestionGenerator","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"  return QuestionGenerator","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"return GameEnvironment","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"TestCommand -\u003e GameEnvironment : run()","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"activate GameEnvironment","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"  GameEnvironment -\u003e GameEnvironment : showPreGameInformation()","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"  activate GameEnvironment ","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"  return","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"  loop questionGenerator.hasNext()","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    GameEnvironment -\u003e GameEnvironment : promptQuestion()","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    activate GameEnvironment","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"      GameEnvironment -\u003e QuestionGenerator : next()","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"      activate QuestionGenerator ","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"      return question","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"      GameEnvironment -\u003e Ui : printSection(question.getQuestion())","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"      activate Ui","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"      return","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"      GameEnvironment -\u003e Ui : getUserInput()","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"      note right: Wait for user to press Enter key to reveal answer.","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"      activate Ui","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"      return","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"      GameEnvironment -\u003e Ui : printSection(question.getAnswer())","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"      activate Ui","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"      return","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    return question","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"    |||","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    GameEnvironment -\u003e GameEnvironment : getUserFeedback()","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"    activate GameEnvironment","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"      loop difficulty \u003d\u003d INVALID_DIFFICULTY","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"      GameEnvironment -\u003e Ui : getUserInput()","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"      activate Ui","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"      return input","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"      end","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    return difficulty","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"    |||","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"    break difficulty \u003d\u003d EXIT_CODE","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"      note across: Breaks the loop and returns to TestCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    end","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"    |||","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    GameEnvironment -\u003e GameEnvironment : updateQuestionDifficulty(question, difficulty)","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"    activate GameEnvironment ","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"      alt difficulty \u003d\u003d EASY_DIFFICULTY","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment -\u003e DifficultyModifier : tweakEasyQuestionDifficulty(weight)","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        activate DifficultyModifier ","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        return newWeight","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment -\u003e Question : setWeight(newWeight)","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        activate Question","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"        return","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"      else difficulty \u003d\u003d HARD_DIFFICULTY","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment -\u003e DifficultyModifier : tweakHardQuestionDifficulty(weight)","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        activate DifficultyModifier ","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"        return newWeight","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment -\u003e Question : setWeight(newWeight)","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"        activate Question","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"        return","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"      end","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"      |||","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"    return","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"    |||","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"    |||","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"  end","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"  |||","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"  |||","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"return","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"return CommandResult(true)","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":98}},{"path":"docs/uml/CommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"Command ..\u003e \"1\" CommandResult: returns \u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"Command ..\u003e \"1\" ModuleManager: modifies","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"Command ..\u003e \"1\" Ui: uses","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"CommandResult ..\u003e \"0..1\" CommandParser: contains \u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"CommandParser -\u003e \"2..*\" Command: has \u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"!startsub COMMAND","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"abstract class \"{abstract}\\nCommand\" as Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"  # arguments: String","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"  - moduleName: String","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"  + {abstract} getFormat(): String","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"  + {abstract} getHelpMessage(): String","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"  + parseArguments(arguments: String): void","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"  + {abstract} execute(ui: Ui, moduleManager: ModuleManager): CommandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"!endsub","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"class XYZCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"  + execute(ui: Ui, moduleManager: ModuleManager): CommandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"  + getHelpMessage(): String","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"  + getFormat(): String","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"class CommandResult {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"  # additionalData: CommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"  # isOk: boolean","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"  # isExit: boolean","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"  + isExit(): boolean","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"  + getAdditionalData(): CommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"class Ui","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"!includesub Module.puml!MODULEMANAGER","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"!includesub ParserClassDiagram.puml!COMMANDPARSER","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"3m0W33D":38}},{"path":"docs/uml/CommandDetailedClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"hide circle","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"!includesub CommandClassDiagram.puml!COMMAND","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"abstract class  \"{abstract}\\nWorkspaceCommand\" as WorkspaceCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"# commandMap: CommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"+ WorkSpaceCommand(commandMap: CommandParser)","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"+ execute(ui: Ui, moduleManager: ModuleManager): CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"abstract class \"{abstract}\\nInnerModuleCommand\" as InnerModuleCommand extends WorkspaceCommand {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"- commandMap: InnerModuleCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"+ InnerModuleCommand(commandMap: InnerModuleCommandParser)","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"+ execute(ui: Ui, moduleManager: ModuleManager): CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"class GoCommand extends WorkspaceCommand {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"- moduleName: String","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"+ parseArguments(arguments: String): void","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"+ execute(ui: Ui, moduleManager: ModuleManager): CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"class ModuleCommand extends WorkspaceCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"class NotesCommand extends InnerModuleCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"class ScheduleCommand extends InnerModuleCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"class QuestionCommand extends InnerModuleCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"class XYZCommand extends Command","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"3m0W33D":30}},{"path":"docs/uml/CommandExecution.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"participant \":Terminus\" as Terminus","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"participant \":MainCommandParser\" as MainCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"participant \":GoCommand\" as GoCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"participant  \":ModuleManager\" as ModuleManger","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"participant \":ModuleWorkspaceCommandParser\" as ModuleWorkspaceCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"participant \":NoteCommand\" as NoteCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"participant \":NoteCommandParser\" as NoteCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"participant \":AddNoteCommand\" as AddNoteCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"autoactivate on","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"Terminus -\u003e MainCommandParser: parseCommand(command)","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"  MainCommandParser -\u003e GoCommand: parseArguments(arguments)","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"  return","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"return GoCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"Terminus -\u003e GoCommand: execute(ui, moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"   GoCommand -\u003e ModuleManger: getModule(moduleName)","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"   return NusModule","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"   GoCommand -\u003e ModuleWorkspaceCommandParser: setWorkspace(workspace)","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"   return","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"      alt if arguments !\u003d null","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"      GoCommand -\u003e ModuleWorkspaceCommandParser:parseCommand(command)","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"      return NoteCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"      GoCommand -\u003e NoteCommand : execute(ui, moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"        alt if arguments !\u003d null","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"          NoteCommand -\u003e NoteCommandParser: setModule(moduleName)","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"          return","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"          NoteCommand -\u003e NoteCommandParser: parseCommand(arguments)","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"          return AddNoteCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"          NoteCommand -\u003e AddNoteCommand: setModule(moduleName)","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"          return","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"          NoteCommand -\u003e AddNoteCommand: execute()","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"            create CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"            AddNoteCommand -\u003e CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"          return CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        return CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        else else","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"          create CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"          NoteCommand -\u003e CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"          return CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        end","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"      return CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"      else else","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        Create CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        GoCommand -\u003e CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        return CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"      end","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"return CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"3m0W33D":53}},{"path":"docs/uml/ConflictManagerSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"Activate AddLinkCommand #FFBBBB","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"create ConflictManager","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"AddLinkCommand -\u003e ConflictManager: ConflictManager()","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"Activate ConflictManager #FFBBBB","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"ConflictManager -\u003e ConflictManager: getConflictingSchedule()","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"Activate ConflictManager #DarkSalmon","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"ConflictManager -\u003e ConflictManager: getAllLinks()","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"Activate ConflictManager","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"create ArrayList","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"ConflictManager -\u003e ArrayList: ArrayList()","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"Activate ArrayList #FFBBBB","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"ArrayList --\u003e ConflictManager: currentLinks","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"ConflictManager -\u003e ModuleManager: getAllModules()","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"Activate ModuleManager #FFBBBB","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"NusModule --\u003e ModuleManager: modules","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"Activate NusModule #FFBBBB","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"loop For each NusModule in modules","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    ModuleManager -\u003e NusModule: getModule(NusModule)","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    Deactivate ModuleManager","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    NusModule -\u003e ContentManager : getContentManager()","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    Activate ContentManager #FFBBBB","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"    Deactivate NusModule","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    ContentManager -\u003e ContentManager: getContents()","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    Activate ContentManager","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    ContentManager --\u003e ContentManager: contents","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    Deactivate ContentManager","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    ContentManager -\u003e ArrayList: addAll(contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    Deactivate ContentManager","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    ArrayList --\u003e ConflictManager","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"    Deactivate ArrayList","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    ConflictManager --\u003e ConflictManager: AllLinks","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"    Deactivate ConflictManager","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"    create StringBuilder","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    ConflictManager -\u003e StringBuilder: StringBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    Activate StringBuilder #FFBBBB","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    loop For each Link in AllLinks","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"        alt same day \u0026\u0026 overlapping start-time or end-time","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        ConflictManager -\u003e StringBuilder: append(LinkDescription)","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder --\u003e ConflictManager: conflictingSchedule","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        Deactivate StringBuilder","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"    end","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"end","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"ConflictManager --\u003e ConflictManager: conflictingSchedule","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"Deactivate ConflictManager","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"end","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"ConflictManager --\u003e AddLinkCommand: conflictingSchedule","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"LouisLouis19":57}},{"path":"docs/uml/Content.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"hide circle","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"Content \u003c|-- Note","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"Content \u003c|-- Link","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"Content \u003c|-- Question","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"ContentManager  --\u003e \"0..*\" Content : contents","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"ContentManager ..\u003e  Note","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"ContentManager ..\u003e  Link","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"ContentManager ..\u003e Question","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"!startsub CONTENTMANAGER","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"class ContentManager \u003cT extends Content\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"  + add(content: T): void","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"  + deleteContent(contentNumber: int): String","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"  + getContentData(contentNumber: int): String","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"  + getContents(contents: ArrayList\u003cT\u003e ): String","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"  + getTotalContents() : int","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"  + listAllContents(): String","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"  + setContent(contents: ArrayList\u003cT\u003e ): void","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"!endsub","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"abstract class \"{abstract}\\nContent\" as Content{","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"  # name: String","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"  # data: String","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"class Link {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"  - day: String","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"  - startTime: LocalTime","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"  - link: String","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"  + Link(name: String, day: String, startTime: LocalTime, link: String)","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"class Note","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"class Question {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"   - weight: double","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"   + Question(question: String, answer: String)","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"3m0W33D":45}},{"path":"docs/uml/MainInit.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"autoactivate on","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"mainframe sd start","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"  Terminus -\u003e Terminus: start()","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"    create Ui","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"    Terminus -\u003e Ui","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    return","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"    Terminus -\u003e CommandParser : getInstance()","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"      create Command","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"      CommandParser -\u003e Command","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"      return","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    return CommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    Terminus -\u003e ModuleStorage : getInstance ()","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    return ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    Terminus -\u003e ModuleStorage: init (filePath)","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    return","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    Terminus -\u003e ModuleStorage: loadFile()","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    return ModuleManager","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    opt moduleManager \u003d\u003d null","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"      create ModuleManager","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"      Terminus -\u003e ModuleManager","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"      return","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    end","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"  return","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"3m0W33D":27}},{"path":"docs/uml/MainLogic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"participant \":Terminus\" as Terminus","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"participant \":CommandParser\" as CommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"participant \":ModuleStorage\" as ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"participant \":ModuleManager\" as ModuleManager","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"autoactivate on","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"-\u003e Terminus: run()","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"  ref over Terminus, Command: start","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"  Terminus -\u003e Terminus : runCommandsUntilExit()","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    loop True","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"      Terminus -\u003e Ui : requestCommand ()","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"      return String","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"      Terminus -\u003e CommandParser: parseCommand(command)","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"      return Command","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"      Terminus -\u003e Command : execute(ui, moduleManager)","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"        create CommandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"        Command -\u003e CommandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"        return","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     return CommandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"      break isExitCommand \u003d\u003d true","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"      note over Terminus, CommandResult : Breaks out of loop and Returns runCommandsUntilExit()","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"      end","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     opt result.getAdditionalData() !\u003d null","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"      Terminus -\u003e CommandResult: result.getAdditionalData()","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"      return CommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"      Terminus -\u003e CommandParser: getWorkspace()","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"      return String","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     end","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    end","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"  return","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"3m0W33D":35}},{"path":"docs/uml/Module.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"hide circle","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"NusModule -\u003e \"1\" ContentManager: noteManager","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"NusModule -\u003e \"1\" ContentManager: linkManager","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"NusModule -\u003e \"1\" ContentManager: questionManager","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"ModuleManager  --\u003e \"0..*\" NusModule :  has \u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"!startsub MODULEMANAGER","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"class ModuleManager {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"  + getAllModules(): String []","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"  + getModule(moduleName: String): NusModule","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"  + removeModule(moduleName: String): void","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"  + setModule(moduleName: String): void","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"!endsub","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"class NusModule {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"  + getContentManager (type: Class\u003cT\u003e): ContentManager\u003cT\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":" !includesub Content.puml!CONTENTMANAGER","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"3m0W33D":27}},{"path":"docs/uml/ParserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"CommandParser --\u003e \"2..*\" Command: has \u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"Terminus -\u003e \"0..1\" CommandParser: commandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"!startsub COMMANDPARSER","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"abstract class \"{abstract}\\nCommandParser\" as CommandParser {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":" - workplace: String","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":" + CommandParser(workspace: String)","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":" + {abstract} parseCommand(command: String): Command","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":" + getHelpMenu(): String[]","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"!endsub","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"class XYZCommandParser extends CommandParser {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"- commandParser: XYZCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"+ parseCommand(command: String): Command","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"+ {static} getInstance(): XYZCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"class Terminus","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"!includesub CommandClassDiagram.puml!COMMAND","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"3m0W33D":23}},{"path":"docs/uml/ParserDetailedClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"hide circle","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"!includesub ParserClassDiagram.puml!COMMANDPARSER","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"abstract class \"{abstract}\\nInnerModuleCommandParser\" as InnerModuleCommandParser extends CommandParser {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"-moduleName: String","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"+parseCommand(command: String): Command","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":" }","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"class QuestionCommandParser extends InnerModuleCommandParser {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"- {static} parser: QuestionCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"+{static}getInstance(): QuestionCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"class LinkCommandParser extends InnerModuleCommandParser {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"- {static} parser: LinkCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"+{static}getInstance(): LinkCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"class NoteCommandParser extends InnerModuleCommandParser {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"- {static} parser: NoteCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"+{static}getInstance(): NoteCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"class XYZCommandParser extends CommandParser {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"- {static} parser: XYZCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"+{static}getInstance(): XYZCommandParser","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"3m0W33D":29}},{"path":"docs/uml/TimetableSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"Activate TimetableCommand #FFBBBB","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"create StringBuilder","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"TimetableCommand -\u003e StringBuilder: StringBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"Activate StringBuilder #FFBBBB","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"StringBuilder --\u003e TimetableCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"Deactivate StringBuilder","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"create Timetable","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"TimetableCommand -\u003e Timetable: Timetable(moduleManager)","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"Activate Timetable #FFBBBB","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"Timetable --\u003e TimetableCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"Deactivate Timetable","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"alt isStringNullOrEmpty(day)","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"TimetableCommand -\u003e Timetable: getWeeklySchedule()","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"Activate Timetable #FFBBBB","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"Timetable -\u003e StringBuilder: StringBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"Activate StringBuilder #FFBBBB","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"StringBuilder --\u003e Timetable","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"Deactivate StringBuilder","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"loop For each day in DaysOfWeekEnum","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"ref over TimetableCommand, StringBuilder, Timetable, ModuleManager, NusModule, ContentManager, Link: getDailySchedule","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"end","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"Timetable --\u003e TimetableCommand: weeklyScehdule","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"Deactivate Timetable","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"else else","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"TimetableCommand -\u003e Timetable: getDailySchedule()","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"Activate Timetable #FFBBBB","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"Timetable -\u003e StringBuilder: StringBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"Activate StringBuilder #FFBBBB","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"StringBuilder --\u003e Timetable","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"Deactivate StringBuilder","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"Timetable -\u003e ModuleManager: getAllModules()","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"Activate ModuleManager #FFBBBB","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"NusModule --\u003e ModuleManager: modules","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"Activate NusModule #FFBBBB","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"loop For each NusModule in modules","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"    ModuleManager -\u003e NusModule: getModule(NusModule)","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"    Deactivate ModuleManager","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    NusModule -\u003e ContentManager : getContentManager()","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"    Activate ContentManager #FFBBBB","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"    Deactivate NusModule","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"        loop For each Link in ContentManager","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"            ContentManager -\u003e Link: getContents()","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"            Activate Link #FFBBBB","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"            Deactivate ContentManager","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"            Link-\u003eLink: getDay()","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"            Activate Link #DarkSalmon","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"            Link --\u003e Link: currentDay","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"            opt if currentDay equals to user argument Day","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"            Deactivate Link","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"            Link -\u003e Link: getViewDescription()","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"            Activate Link #DarkSalmon","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"            Link --\u003e Link: description","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"            Deactivate Link","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"            Link -\u003e StringBuilder: append(description)","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"            Activate StringBuilder #FFBBBB","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"            Deactivate Link","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"        end","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"end","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"StringBuilder -\u003e StringBuilder: toString()","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"Activate StringBuilder #DarkSalmon","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"StringBuilder --\u003e StringBuilder: dailySchedule","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"Deactivate StringBuilder","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"StringBuilder --\u003e Timetable: dailySchedule","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"Deactivate StringBuilder","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"Timetable --\u003e TimetableCommand: DailyScedule","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"Deactivate Timetable","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"Deactivate TimetableCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"end","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"end","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"LouisLouis19":98}},{"path":"docs/uml/UIClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"hide circle","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"class Terminus {","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"  - moduleStorage: ModuleStorage","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"  + {static} main(args: String[]): void","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"  + run(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"  - start(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"  - runCommandsUntilExit(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"  - handleIoException(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"  - exit(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"class Ui {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"  - {static} UI: ui","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"  - scanner: Scanner","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"  + {static} getInstance(): Ui","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"  - Ui()","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"  + Ui(in: InputStream)","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"  + printParserBanner(parser: CommandParser, moduleManager: ModuleManager): void","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"  + requestCommand(workspaceName: String): String","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"  + printSection(strings: String[]): void","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"  + printExitMessage(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"  + getUserInput(prompt: String): String","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"class GameEnvironment {","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"  - questionGenerator: QuestionGenerator","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"  + {static} createNewEnvironment(questions: List\u003cQuestion\u003e, questionCount: int)","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"  GameEnvironment(ui: Ui, generator: QuestionGenerator)","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"  + run(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"  - showPreGameInformation(): void","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"  - promptQuestion(): Question","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"  - getUserFeedback(): int","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"  - updateQuestionDifficulty(question: Question: difficulty: int): void","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"Terminus -\u003e \"1\" Ui","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"Ui \"1\" \u003c-- GameEnvironment","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kelvneo":44}},{"path":"docs/uml/storage/AddModuleStorage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"participant \":ModuleManager\" as ModuleManager","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"participant \":AddModuleCommand\" as AddModuleCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"participant \":ModuleStorage\" as ModuleStorage","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"-\u003e AddModuleCommand : execute(ui, moduleManager)","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"activate AddModuleCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"  ref over AddModuleCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"    Refer to Add Module Command Section","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"  end","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"    |||","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"  AddModuleCommand -\u003e ModuleStorage : getInstance()","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"  activate ModuleStorage","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    |||","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    return :ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"  AddModuleCommand -\u003e ModuleStorage : createModuleDirectory()","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"  activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    |||","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    alt does file exists","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"      ModuleStorage -\u003e : Files.createDirectories(filepath:Path)","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    else else","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"      ModuleStorage -\u003e ModuleStorage : deleteAllFilesInDirectory(filepath:Path)","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"      activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"      Deactivate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    end","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    return :Boolean","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"  opt [if :Boolean is true]","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    AddModuleCommand -\u003e ModuleManager : setModule(moduleName:String)","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    activate ModuleManager","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    ref over ModuleManager","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"      Refer to Set Module Section","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    end","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    Deactivate ModuleManager","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"  end","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"  ref over AddModuleCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    Refer to Add Module Command Section","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"  end","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"return CommandResult(isOk: Boolean)","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"Deactivate AddModuleCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"|||","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Woolicious98":48}},{"path":"docs/uml/storage/AddNoteCommand_Storage_SequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"participant \":AddNoteCommand\" as AddNoteCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"participant \":ModuleStorage\" as ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"-\u003e AddNoteCommand : execute(ui, moduleManager)","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"activate AddNoteCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"  ref over AddNoteCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"    Refer to Add Note Command Section","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"  end","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"    |||","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"  AddNoteCommand -\u003e ModuleStorage : getInstance()","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"  activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    |||","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    return :ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"  AddNoteCommand -\u003e AddNoteCommand : getModuleName()","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"  activate AddNoteCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"  return moduleName:String","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"  AddNoteCommand -\u003e ModuleStorage : addNoteFromModule(moduleName:String, newNote: Note)","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"  activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    |||","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    opt module folder does not exists","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"      ModuleStorage -\u003e : Files.createDirectories(filepath:Path)","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    end","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    ModuleStorage -\u003e ModuleStorage :createNoteFile(modDirPath:Path, newNote:Note)","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    ModuleStorage -\u003e : Files.writeString(filePath: Path, note.getData():String)","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"  Deactivate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"return CommandResult(isOk: Boolean)","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"Deactivate AddNoteCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"|||","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Woolicious98":34}},{"path":"docs/uml/storage/DeleteModuleCommand_Storage_SequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"participant \":DeleteModuleCommand\" as DeleteModuleCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"participant \":ModuleStorage\" as ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"-\u003e DeleteModuleCommand : execute(ui, moduleManager)","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"activate DeleteModuleCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"  ref over DeleteModuleCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"    Refer to Delete Module Command Section","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"  end","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"    |||","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"  DeleteModuleCommand -\u003e ModuleStorage : getInstance()","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"  activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    |||","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    return :ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"  DeleteModuleCommand -\u003e ModuleStorage : cleanAfterDeleteModule(:String)","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"  activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    |||","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    alt folder does not exists","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"      ref over ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"        Folder is already deleted.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"        Return.","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"      end","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    else else","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"      ModuleStorage -\u003e ModuleStorage : cleanAllFilesInclusive(folder:Path)","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"      activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"      opt folder still exists","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage -\u003e ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        note left: IOException thrown","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"      end","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    end","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"  Deactivate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"  return","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"  ref over DeleteModuleCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    Refer to Delete Module Command Section","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"  end","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"return CommandResult(isOk: Boolean)","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"Deactivate DeleteModuleCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"|||","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Woolicious98":48}},{"path":"docs/uml/storage/Storage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"\u0027abstract class DGS","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"\u0027abstract AbstractCollection","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"\u0027interface List","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"\u0027interface Collection","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"\u0027","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"\u0027List \u003c|-- AbstractList","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"\u0027Collection -- AbstractCollection","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"\u0027","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"\u0027Collection \u003c|- List","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"\u0027AbstractCollection \u003c|- AbstractList","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"\u0027AbstractList \u003c|-- ArrayList","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"Terminus \"1\" --\u003e \"1  \" ModuleStorage: moduleStorage","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"Command \"0..*  \" ..\u003e \"0..1 \" ModuleStorage: uses \u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"class Terminus {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"  + main(): void {static}","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"  + run(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"  - start(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"  - runUntilCommandExit(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"  - handleIoException(e: IOException): void","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"  - exit(): void","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"class ModuleStorage {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"  - filePath: Path","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"  - gson: Gson","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"  - ModuleStorage()","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"  + init(filePath: Path): void","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"  + getInstance(): ModuleStorage {static}","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"  + loadFile(): ModuleManager","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"  + saveFile(moduleManager: ModuleManager): void","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"  + loadNotesFromModule(moduleManager: ModuleManager, mod: String): void","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"  + saveAllNotes(moduleManager: ModuleManager): void","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"  + saveNotesFromModule(moduleManager: ModuleManager, mod: String, toDeleteAll: Boolean): void","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"  + removeNoteFromModule(moduleName: String, noteName, String): void","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"  + addNoteFromModule(moduleName: String, newNote: Note): void","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"  + createModuleDirectory(moduleName: String): boolean","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"  + cleanAfterDeleteModule(mod: String): void","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"abstract Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Woolicious98":52}},{"path":"docs/uml/storage/StorageInitializeSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"participant \":Terminus\" as Terminus","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"participant \":ModuleStorage\" as ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"ref over Terminus","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"Refer to main program flow.","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"end","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"activate Terminus","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"|||","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"Terminus -\u003e Terminus : start()","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"activate Terminus","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"|||","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"Terminus -\u003e ModuleStorage : getInstance()","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"  opt ModuleStorage has not been created yet","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    ModuleStorage -\u003e ModuleStorage : ModuleStorage()","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    return moduleStorage: ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"  end","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"  return moduleStorage: ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"Terminus -\u003e ModuleStorage : init(:Path)","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"note left: passes the filepath of the main json file","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"Deactivate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"Terminus -\u003e ModuleStorage : loadFile()","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"ModuleStorage -\u003e ModuleStorage : initializeFile();","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"  activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    note right: create files accordingly for first time run","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"  return","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"  alt json file is not readable","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    |||","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    ref over ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"      Fatal error, return null","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    end","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"  else else","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    ref over ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"      load json data into ModuleManager using GsonBuilder","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    end","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    ModuleStorage -\u003e ModuleStorage : loadAllNotes(moduleManager:ModuleManager)","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"    activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"      loop each module item in moduleManager","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        ref over ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"          Refer to valid Module Name Section","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        end","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        note right: filter module from json file","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        |||","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        alt module name is not valid","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"          ModuleStorage -\u003e ModuleManager : removeMod(mod:String)","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        else else","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"          alt module folder does not exists","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"            ModuleStorage -\u003e : Files.createDirectories(modDirPath: Path);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"          else else","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"            ModuleStorage -\u003e ModuleStorage : loadNotesFromModule(moduleManager:ModuleManager, mod:String)","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"            activate ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"            ref over ModuleStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"              Refer to Reload Notes Command Section.","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"            end","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"            return","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"          end","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"          return","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        end","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        return : ModuleManager","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"      end","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"  end","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Woolicious98":73}},{"path":"src/main/java/terminus/Terminus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import com.google.gson.JsonIOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import com.google.gson.JsonSyntaxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"public class Terminus {","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    public static final String[] INVALID_JSON_MESSAGE \u003d {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        \"Invalid file data detected.\",","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"        \"TermiNUS will still run, but the file will be overwritten when the next command is ran.\",","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        \"To save your current file, close your terminal (do not run exit).\",","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        \"Otherwise, you can continue using the program :)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    };","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    private CommandParser parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    private String workspace;","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    private static final Path DATA_DIRECTORY \u003d Path.of(System.getProperty(\"user.dir\"), \"data\");","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    private static final String MAIN_JSON \u003d \"main.json\";","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"     * Enters the main entry-point for the terminus.Terminus application.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        new Terminus().run();","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"     * Starts the program.","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    public void run() {","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        start();","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        runCommandsUntilExit();","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        exit();","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    private void start() {","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.initializeLogger();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.info(\"Starting Terminus...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            this.ui \u003d Ui.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"            this.parser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"            this.workspace \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"            this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"            this.moduleStorage.init(DATA_DIRECTORY.resolve(MAIN_JSON));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.info(\"Loading file...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"            this.moduleManager \u003d moduleStorage.loadFile();","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"File loading has failed.\", e.fillInStackTrace());","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"            handleIoException(e);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        } catch (JsonSyntaxException | JsonIOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.severe(\"Invalid file data detected!\", e.fillInStackTrace());","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"            ui.printSection(INVALID_JSON_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        } finally {","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"            if (this.moduleManager \u003d\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.warning(\"File not found.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.warning(\"Creating new NusModule instance...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"                this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.info(\"File loaded.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"            this.ui.printParserBanner(this.parser, this.moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Terminus has started.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"    private void runCommandsUntilExit() {","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"        while (true) {","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"            assert workspace !\u003d null : \"Workspace should always have a value\";","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"            String input \u003d ui.requestCommand(workspace);","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.debug(\"User entered: \" + input);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"            assert input !\u003d null : \"Input should not be null.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"            Command currentCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"            try {","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"                currentCommand \u003d parser.parseCommand(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"                CommandResult result \u003d currentCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"                boolean isExitCommand \u003d result.isExit();","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"                boolean isWorkspaceCommand \u003d result.getNewCommandParser() !\u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"                if (isExitCommand) {","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"                    break;","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"                } else if (isWorkspaceCommand) {","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"                    parser \u003d result.getNewCommandParser();","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"                    assert parser !\u003d null : \"commandParser is not null\";","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"                    workspace \u003d parser.getWorkspace();","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"                    ui.printParserBanner(parser, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"                } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"                    ui.printSection(result.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"                ","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.info(\"Saving data into file...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"                this.moduleStorage.saveFile(moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.info(\"Save completed.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"LouisLouis19"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.warning(\"Invalid input provided: \" + input, e.fillInStackTrace());","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"                ui.printSection(e.getMessage());","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"            } catch (InvalidArgumentException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.warning(\"Invalid input provided: \" + input, e.fillInStackTrace());","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"kelvneo"},"content":"                // Check if the exception specified a correct command format for the user to follow.","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"                if (e.getFormat() !\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"                    // Print the format of the command along with the error message to the user.","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"3m0W33D"},"content":"                    ui.printSection(e.getMessage(),","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"3m0W33D"},"content":"                            String.format(Messages.INVALID_ARGUMENT_FORMAT_MESSAGE, e.getFormat()));","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"kelvneo"},"content":"                } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"                    ui.printSection(e.getMessage());","lastModifiedDate":"2021-10-03"},{"lineNumber":124,"author":{"gitId":"kelvneo"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"kelvneo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.warning(\"File saving has failed.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"kelvneo"},"content":"                handleIoException(e);","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"kelvneo"},"content":"    private void handleIoException(IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.severe(\"Save file is inaccessible.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.severe(e.getMessage(), e.getCause());","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"                String.format(Messages.ERROR_MESSAGE_FILE, e.getMessage()),","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"kelvneo"},"content":"                \"TermiNUS may still run, but your changes may not be saved.\",","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"kelvneo"},"content":"                \"Check \u0027terminus.log\u0027 for more information.\"","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"kelvneo"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"kelvneo"},"content":"    private void exit() {","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Saving data into file...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"3m0W33D"},"content":"            this.moduleStorage.saveFile(moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"            this.moduleStorage.saveAllNotes(moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.info(\"Save completed.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"kelvneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"File saving has failed.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"kelvneo"},"content":"            handleIoException(e);","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"kelvneo"},"content":"        this.ui.printExitMessage();","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kelvneo":109,"LouisLouis19":2,"3m0W33D":22,"Woolicious98":13,"-":8}},{"path":"src/main/java/terminus/activerecall/DifficultyModifier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"public class DifficultyModifier {","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"    public static final double MIN_VALUE \u003d 0.2;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"    public static final double MAX_VALUE \u003d 0.9;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"    private static final double MAX_INCREASE \u003d 0.45;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    private static final double GROWTH_RATE \u003d 8;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    private static final double LOG_CURVE_MIDPOINT \u003d 0.4;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"     * Get the value to increment or decrement by based on the logistic curve.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"     * @param x The difficulty difference","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"     * @return The increment or decrement to apply to the question randomness weight.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private static double getCurveValue(double x) {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"        double exponentValue \u003d -1 * DifficultyModifier.GROWTH_RATE * (x - DifficultyModifier.LOG_CURVE_MIDPOINT);","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"        double denominator \u003d (1 + Math.exp(exponentValue));","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        return DifficultyModifier.MAX_INCREASE / denominator;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"     * Get the new randomness weightage of the question if the question is deemed easy.","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"     * @param initial The current randomness weightage of the question","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"     * @return The new randomness weightage of the question","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    public static double tweakEasyQuestionDifficulty(double initial) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        if (initial \u003c\u003d MIN_VALUE) {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"            return MIN_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        double difference \u003d initial - MIN_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        return Math.max(MIN_VALUE, initial - getCurveValue(difference));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"     * Get the new randomness weightage of the question if the question is deemed hard.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"     * @param initial The current randomness weightage of the question","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"     * @return The new randomness weightage of the question","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    public static double tweakHardQuestionDifficulty(double initial) {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        if (initial \u003e\u003d MAX_VALUE) {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            return MAX_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        double difference \u003d MAX_VALUE - initial;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        return Math.min(MAX_VALUE, initial + getCurveValue(difference));","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kelvneo":51}},{"path":"src/main/java/terminus/activerecall/GameEnvironment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.time.Duration;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.time.Instant;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"public class GameEnvironment {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    private static final int INVALID_DIFFICULTY \u003d 0; ","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    public static final int EASY_DIFFICULTY \u003d 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    public static final int NORMAL_DIFFICULTY \u003d 2;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    public static final int HARD_DIFFICULTY \u003d 3;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    public static final int EXIT_CODE \u003d -1;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    private final Ui ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    private final QuestionGenerator questionGenerator;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    GameEnvironment(Ui ui, QuestionGenerator generator) {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        this.questionGenerator \u003d generator;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"     * Starts the active recall session.","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    public void run() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        showPreGameInformation();","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        while (questionGenerator.hasNext()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"            Question question \u003d promptQuestion();","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"            int difficulty \u003d getUserFeedback();","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"            if (difficulty \u003d\u003d EXIT_CODE) {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"            updateQuestionDifficulty(question, difficulty);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(Messages.ACTIVE_RECALL_SESSION_END_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    private void showPreGameInformation() {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        int questions \u003d questionGenerator.getQuestionPoolSize();","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            \"---[Active Recall]---\",","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"            \"We will be starting your active recall training session.\",","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"            String.format(\"This session will consist of %d questions.\", questions),","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            \"\"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        ui.getUserInput(Messages.ACTIVE_RECALL_ENTER_TO_CONTINUE_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    private Question promptQuestion() {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        Question question \u003d questionGenerator.next();","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        Instant start \u003d Instant.now(); ","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"            \"---\",","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"            \"Question:\",","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"            question.getQuestion(),","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"            \"\"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"        ui.getUserInput(Messages.ACTIVE_RECALL_ENTER_TO_CONTINUE_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        long duration \u003d Duration.between(start, Instant.now()).getSeconds();","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"            String.format(\"You took %d seconds to reveal the answer.\", duration),","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"            \"Answer:\", ","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"            question.getAnswer()","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        return question;","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"    private int getUserFeedback() {","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"        int difficulty \u003d INVALID_DIFFICULTY;","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        do {","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"            ui.printSection(Messages.ACTIVE_RECALL_ASK_QUESTION_DIFFICULTY_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"            String input \u003d ui.getUserInput(\"[1/2/3/E] \u003e\u003e \").trim().toLowerCase();","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"            Pattern inputPattern \u003d Pattern.compile(\"^[123e]$\");","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"            Matcher matcher \u003d inputPattern.matcher(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"            if (!matcher.matches()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"                ui.printSection(Messages.ERROR_MESSAGE_INVALID_INPUT);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"                continue;","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"            } else if (input.equalsIgnoreCase(\"e\")) {","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"                difficulty \u003d EXIT_CODE;","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"            difficulty \u003d Integer.parseInt(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"            ","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"        } while (difficulty \u003d\u003d INVALID_DIFFICULTY);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"        assert difficulty \u003c\u003d HARD_DIFFICULTY \u0026\u0026 difficulty \u003e\u003d -EASY_DIFFICULTY;","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"        return difficulty;","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"    private void updateQuestionDifficulty(Question question, int difficulty) {","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"        assert difficulty \u003e\u003d EASY_DIFFICULTY \u0026\u0026 difficulty \u003c\u003d HARD_DIFFICULTY;","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"        double weight \u003d question.getWeight();","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"        if (difficulty \u003d\u003d EASY_DIFFICULTY) {","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"            double newWeight \u003d DifficultyModifier.tweakEasyQuestionDifficulty(weight);","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"            question.setWeight(newWeight);","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"        } else if (difficulty \u003d\u003d HARD_DIFFICULTY) {","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"            double newWeight \u003d DifficultyModifier.tweakHardQuestionDifficulty(weight);","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"            question.setWeight(newWeight);","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(\"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"        if (questionGenerator.hasNext()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"            ui.getUserInput(Messages.ACTIVE_RECALL_ENTER_TO_CONTINUE_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"     * Create a new GameEnvironment instance using the singleton instance of Ui.","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"     * @param questions The list of questions to ask from.","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"     * @param questionCount The maximum number of questions.","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"kelvneo"},"content":"     * @return The new GameEnvironment to start the Active Recall.","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"kelvneo"},"content":"    public static GameEnvironment createNewEnvironment(List\u003cQuestion\u003e questions, int questionCount) {","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"kelvneo"},"content":"        return new GameEnvironment(Ui.getInstance(), new QuestionGenerator(questions, questionCount));","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kelvneo":126}},{"path":"src/main/java/terminus/activerecall/QuestionGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.util.Map.Entry;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.util.Random;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"public class QuestionGenerator {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    private final NavigableMap\u003cDouble, Question\u003e questionBank \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    private final Random random;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    private double total \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    private int questionCount;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"     * Instantiates a QuestionGenerator.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"     * @param questionBank The list of questions to pick from.","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"     * @param questionCount The maximum number of questions to pull.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    public QuestionGenerator(List\u003cQuestion\u003e questionBank, int questionCount) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        this(questionBank, questionCount, new Random());","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"     * Instantiates a QuestionGenerator with a specific Random generator.","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"     * @param questionBank The list of questions to pick from.","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"     * @param questionCount The maximum number of questions to pull.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"     * @param random The random generator to determine the order of questions.","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    public QuestionGenerator(List\u003cQuestion\u003e questionBank, int questionCount, Random random) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        this.questionCount \u003d questionCount;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        this.random \u003d random;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        questionBank.forEach(this::addQuestion);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    private void addQuestion(Question question) {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        assert question.getWeight() \u003e 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        total +\u003d question.getWeight();","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        questionBank.put(total, question);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"     * Gets the size of the question pool.","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"     * @return The size of the question pool.","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    public int getQuestionPoolSize() {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        return Math.min(questionBank.size(), questionCount);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"     * Checks if there are still questions left in the pool,","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"     * or if the maximum number of questions have been asked.","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"     * @return Return false if there are no questions left, or if the maximum number of questions have been asked. ","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    public boolean hasNext() {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        return questionCount \u003e 0 \u0026\u0026 !(total \u003c\u003d 0) \u0026\u0026 !questionBank.isEmpty();","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"     * Gets the next question from the question pool randomly.","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"     * @return The next question from the question pool.","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"     * @throws NullPointerException When there are no questions left.","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    public Question next() {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        if (!hasNext()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"            throw new NullPointerException(\"There are no questions left.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        double key \u003d random.nextDouble() * total;","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        Entry\u003cDouble, Question\u003e keyValuePair \u003d questionBank.higherEntry(key);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"        Question question \u003d keyValuePair.getValue();","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"        questionBank.remove(keyValuePair.getKey(), question);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        total -\u003d question.getWeight();","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"        questionCount -\u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"        return question;","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kelvneo":85}},{"path":"src/main/java/terminus/command/BackCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"public class BackCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_BACK;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_BACK;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     * Returns a command result containing the CommandParser object.","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     * @return CommandResult contains a CommandParser","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidCommandException Throws if the command is invalid","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidCommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Back Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        if (isModuleNameNullOrEmpty()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"            MainCommandParser mainParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.info(\"Changing Workspace to:\" + mainParser.getWorkspace());","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"            return new CommandResult(mainParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"            ModuleWorkspaceCommandParser moduleParser \u003d ModuleWorkspaceCommandParser.getInstance();","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"            moduleParser.setWorkspace(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            return new CommandResult(moduleParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    private boolean isModuleNameNullOrEmpty() {","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        String moduleName \u003d getModuleName();","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        return moduleName \u003d\u003d null || moduleName.isBlank();","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":3,"3m0W33D":41,"Woolicious98":4}},{"path":"src/main/java/terminus/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"    protected String arguments;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    public abstract String getFormat();","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    public abstract String getHelpMessage();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"     * Parses remaining arguments for the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    public void parseArguments(String arguments)","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"     * Executes the command.","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidCommandException  when the command could not be found.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException              when the file to be saved is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    public abstract CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"     * Returns the module name.","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"     * @return The String containing the module name","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    public String getModuleName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        return moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"     * Sets the module name.","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The String containing the module name to set","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"    public void setModuleName(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":8,"kelvneo":6,"3m0W33D":47,"Woolicious98":6}},{"path":"src/main/java/terminus/command/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"public class CommandResult {","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"    protected CommandParser newCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    protected String[] message;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    protected boolean isExit;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"    ","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    public CommandResult(String... message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"        this(false, null, message);","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    ","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    public CommandResult(CommandParser parser) {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"        this(false, parser);","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    ","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    public CommandResult(boolean isExit) {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        this(isExit, null);","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    public CommandResult(boolean isExit, CommandParser newCommandParser, String... message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        this.newCommandParser \u003d newCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"     * Returns the CommandParser that is required to switch workspaces.","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     * If additionalData will be null.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     * @return The CommandParser object for the workspace or else null.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    public CommandParser getNewCommandParser() {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        return newCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"     * Returns the message that the command wishes to output.","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"     * @return The message that the command wishes to output.","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    public String[] getMessage() {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        return message;","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"     * Returns the result of the command execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"     * @return True if successful or else false.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    @Deprecated","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"    public boolean isOk() {","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"     * Returns the result to exit or not.","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"     * @return True if \u0027exit\u0027 command is sent.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        return isExit;","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":25,"3m0W33D":39,"Woolicious98":3}},{"path":"src/main/java/terminus/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_EXIT;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_EXIT;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidCommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Exit Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(true);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":18,"Woolicious98":4,"3m0W33D":4}},{"path":"src/main/java/terminus/command/GoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class GoCommand extends WorkspaceCommand {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    public GoCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"        super(ModuleWorkspaceCommandParser.getInstance());","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_GO_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_GO;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        String[] args \u003d arguments.strip().split(CommonFormat.SPACE_DELIMITER, 2);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        moduleName \u003d args[0];","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        if (args.length \u003e 1) {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"            super.parseArguments(args[1]);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"            super.parseArguments(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(moduleName);","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        if (module \u003d\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(\"Module not found! Type \u0027module view\u0027 for the list of modules.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        commandMap.setWorkspace(moduleName);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        return super.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":2,"3m0W33D":59,"Woolicious98":4}},{"path":"src/main/java/terminus/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    private final CommandParser commandMap;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    public HelpCommand(CommandParser commandMap) {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"        this.commandMap \u003d commandMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_HELP;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_HELP;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidCommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Help Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(Messages.HELP_MENU_MESSAGE);","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        String helpMessage \u003d Arrays.stream(commandMap.getHelpMenu())","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"            .reduce((x, y) -\u003e x + \"\\n\" + y)","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"            .orElse(\"There are no commands in this workspace.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        stringBuilder.append(helpMessage);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(stringBuilder.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":8,"3m0W33D":27,"Woolicious98":4}},{"path":"src/main/java/terminus/command/TimetableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static terminus.common.CommonUtils.isStringNullOrEmpty;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static terminus.common.CommonUtils.isValidDay;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.timetable.Timetable;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"public class TimetableCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"    private String day;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the format of the command.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"     * @return The string object holding the appropriate format for the timetable command.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"        return CommonFormat.COMMAND_TIMETABLE_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"     * @return The String object containing the description for the timetable command.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MESSAGE_COMMAND_TIMETABLE;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"     * Parses remaining arguments for the timetable command.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"     * @throws InvalidArgumentException when arguments are invalid.","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"        day \u003d arguments;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        if (!isStringNullOrEmpty(day) \u0026\u0026 !isValidDay(day)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Day: %s\", day));","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(String.format(Messages.ERROR_MESSAGE_INVALID_DAY, day));","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"        TerminusLogger.info(String.format(\"Parsed arguments (day \u003d %s) to Timetable Command\", day));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"     * Executes the timetable command. Prints the relevant response to the Ui.","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        String schedule;","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        if (isStringNullOrEmpty(day)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"            schedule \u003d timetable.getWeeklySchedule();","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"            assert day !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"            schedule \u003d timetable.getDailySchedule(day);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"        result.append(timetable.checkEmptySchedule(schedule, day));","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(result.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"LouisLouis19":69,"kelvneo":5}},{"path":"src/main/java/terminus/command/WorkspaceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"public abstract class WorkspaceCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"    protected CommandParser commandMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    public WorkspaceCommand(CommandParser commandMap) {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"        this.commandMap \u003d commandMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     * Returns the Command Result after execution. If no other arguments, returns the workspace.","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the list of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"     * @return The CommandResult containing success or failure of command and CommandParser Object.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidCommandException when the command could not be found.","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException             when the file to be saved is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        assert commandMap !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Workspace Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        if (isNotNullOrBlank()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.info(\"Parsing workspace command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"            return commandMap.parseCommand(arguments).execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.info(\"Switching workspace to: \" + commandMap.getWorkspace());","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"            return new CommandResult(commandMap);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    private boolean isNotNullOrBlank() {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        return arguments !\u003d null \u0026\u0026 !arguments.isBlank();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":1,"kelvneo":3,"3m0W33D":36,"Woolicious98":5}},{"path":"src/main/java/terminus/command/content/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Content;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":" * DeleteCommand generic class which will manage the deletion of Content specified by user command.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":" *","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":" * @param \u003cT\u003e Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"public class DeleteCommand\u003cT extends Content\u003e extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private final Class\u003cT\u003e type;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    private int itemNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    protected String deletedContentName;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     * Creates a DeleteCommand object with referenced to the provided class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"     * @param type Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    public DeleteCommand(Class\u003cT\u003e type) {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"        return CommonFormat.COMMAND_DELETE_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MESSAGE_COMMAND_DELETE;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"     * Parses the arguments to the DeleteCommand object. The arguments are attributes to identify a Content object in an","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"     * ArrayList.","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when argument provided is empty, non-numeric or less than 1.","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing delete arguments\");","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"            itemNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Failed to parse delete itemNumber : %s\", arguments));","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        if (itemNumber \u003c\u003d 0) {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Invalid itemNumber : %d\", itemNumber));","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"     * Executes the delete command. Prints the relevant response to the Ui and the specified Content object will be","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"     * removed from the arraylist.","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The ModuleManager that contains the NusModules.","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when argument provided is index out of bounds of the ArrayList.","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException when file is inaccessible.","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cT\u003e contentManager \u003d module.getContentManager(type);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"        assert contentManager !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Delete Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"        this.deletedContentName \u003d contentManager.deleteContent(itemNumber);","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"        assert deletedContentName !\u003d null \u0026\u0026 !deletedContentName.isBlank();","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"                String.format(\"%s(%s) has been deleted\", CommonUtils.getClassName(type), deletedContentName));","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"        String message \u003d (String.format(Messages.MESSAGE_RESPONSE_DELETE,","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"                CommonUtils.getClassName(type).toLowerCase(), deletedContentName));","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":38,"kelvneo":7,"3m0W33D":23,"Woolicious98":31}},{"path":"src/main/java/terminus/command/content/InnerModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.WorkspaceCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.InnerModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public abstract class InnerModuleCommand extends WorkspaceCommand {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    private InnerModuleCommandParser commandMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    public InnerModuleCommand(InnerModuleCommandParser commandMap) {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"        super(commandMap);","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"        this.commandMap \u003d commandMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        commandMap.setModuleName(getModuleName());","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"            return super.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"            if (e.getFormat() \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"                throw e;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(\"Failed to parse command.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(commandMap.getWorkspace() + \" : \" + e.getFormat());","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"                    String.format(Messages.INVALID_ARGUMENT_FORMAT_MESSAGE_EXCEPTION, ","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"                        commandMap.getWorkspace(true), e.getFormat()),","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"                e.getMessage()","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"            );","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kelvneo":4,"3m0W33D":36,"Woolicious98":2}},{"path":"src/main/java/terminus/command/content/NotesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"public class NotesCommand extends InnerModuleCommand {","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    public NotesCommand() {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"        super(NoteCommandParser.getInstance());","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_NOTE;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_NOTE;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":1,"3m0W33D":18,"Woolicious98":4}},{"path":"src/main/java/terminus/command/content/QuestionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"public class QuestionCommand extends InnerModuleCommand {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    public QuestionCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"        super(QuestionCommandParser.getInstance());","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"        return CommonFormat.COMMAND_QUESTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        return Messages.MESSAGE_COMMAND_QUESTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":22}},{"path":"src/main/java/terminus/command/content/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":" * ScheduleCommand class to manage commands inside the Schedule workspace.","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"public class ScheduleCommand extends InnerModuleCommand {","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"    public ScheduleCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"        super(LinkCommandParser.getInstance());","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the keyword for schedule-related commands.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"     * @return The string containing the keyword for schedule-related commands.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"        return CommonFormat.COMMAND_SCHEDULE;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     * @return The string containing the description for this command.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MESSAGE_COMMAND_SCHEDULE;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":31,"kelvneo":1,"3m0W33D":2,"Woolicious98":2}},{"path":"src/main/java/terminus/command/content/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Content;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":" * ViewModuleCommand generic class which will manage the viewing of Content information specified by user command.","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":" *","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":" * @param \u003cT\u003e Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"public class ViewCommand\u003cT extends Content\u003e extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private final Class\u003cT\u003e type;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private int itemNumber;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"     * Determines whether to print the list of all Content objects or just the specified one.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    private boolean displayAll;","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     * Creates a ViewModuleCommand object with referenced to the provided class type.","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"     * @param type Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    public ViewCommand(Class\u003cT\u003e type) {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        this.displayAll \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_VIEW_FORMAT;","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_VIEW;","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"     * Parses the arguments to the ViewModuleCommand object. The arguments are attributes to identify a Content object","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"     * in an ArrayList. The arguments can be empty which refers to viewing a list all Content object in an ArrayList","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"     * instead.","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when a non-empty argument provided is non-numeric or less than 1.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"            displayAll \u003d true;","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing view arguments\");","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"            itemNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"            displayAll \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Failed to parse view itemNumber : %s\", arguments));","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        if (itemNumber \u003c\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Invalid itemNumber : %d\", itemNumber));","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"     * Executes the view command. Prints the relevant response to the Ui.","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when argument provided is index out of bounds of the ArrayList.","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidArgumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cT\u003e contentManager \u003d module.getContentManager(type);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        if (displayAll) {","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"            String fullList \u003d contentManager.listAllContents();","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"            assert fullList !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"            if (fullList.isBlank()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"                result.append(Messages.EMPTY_CONTENT_LIST_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"            } else {","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"                result.append(Messages.CONTENT_MESSAGE_HEADER);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"                result.append(contentManager.listAllContents());","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"                result.append(Messages.CONTENT_MESSAGE_FOOTER);","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"            result.append(contentManager.getContentData(itemNumber));","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(result.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"kelvneo":13,"3m0W33D":24,"Woolicious98":70}},{"path":"src/main/java/terminus/command/content/link/AddLinkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static terminus.common.CommonUtils.isValidDay;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static terminus.common.CommonUtils.isValidDuration;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static terminus.common.CommonUtils.isValidUrl;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"import terminus.timetable.ConflictManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"import static terminus.common.CommonUtils.hasDurationOverflow;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":" * AddLinkCommand class which will manage the adding of new Links from user command.","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"public class AddLinkCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    private String description;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    private String day;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    private int duration;","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    private String link;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    private static final int ADD_SCHEDULE_ARGUMENTS \u003d 5;","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_ADD_SCHEDULE_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MESSAGE_COMMAND_ADD;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"     * Parses the arguments to the AddLinkCommand object.","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"     * The arguments are attributes for a new Link object.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments are empty or missing.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e argArray \u003d CommonUtils.findArguments(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"        if (!isValidScheduleArguments(argArray)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        String userStartTime \u003d argArray.get(2);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"        this.description \u003d argArray.get(0);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"        this.day \u003d argArray.get(1);","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"        this.startTime \u003d CommonUtils.convertToLocalTime(userStartTime);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"            this.duration \u003d Integer.parseInt(argArray.get(3));","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Duration\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(String.format(Messages.ERROR_MESSAGE_INVALID_DURATION_FORMAT));","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"        this.link \u003d argArray.get(4);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"        if (!isValidDay(this.day)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Day: %s\", this.day));","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(String.format(Messages.ERROR_MESSAGE_INVALID_DAY, this.day));","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"        if (!isValidUrl(this.link)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Link: %s\", this.link));","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(String.format(Messages.ERROR_MESSAGE_INVALID_LINK, this.link));","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"        if (!isValidDuration(this.duration)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Duration: %d\", this.duration));","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(String.format(Messages.ERROR_MESSAGE_INVALID_DURATION, this.duration));","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"        if (hasDurationOverflow(startTime, this.duration)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Duration: %d\", this.duration));","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_SCHEDULE_OVERFLOW);","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"        TerminusLogger.info(String.format(\"Parsed arguments (description \u003d %s, day \u003d %s, startTime \u003d %s, link \u003d %s)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"                + \" to Add Link Command\", description, day, startTime, link));","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"     * Executes the add link command.","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"LouisLouis19"},"content":"     * Prints the relevant response to the Ui.","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the list of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"        ContentManager\u003cLink\u003e contentManager \u003d module.getContentManager(Link.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"LouisLouis19"},"content":"        assert contentManager !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"LouisLouis19"},"content":"        Link newLink \u003d new Link(description, day, startTime, duration, link);","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"        ConflictManager scheduleConflict \u003d new ConflictManager(moduleManager, newLink);","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"LouisLouis19"},"content":"        if (!CommonUtils.isStringNullOrEmpty(scheduleConflict.getConflictingSchedule())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"            String conflicts \u003d scheduleConflict.getConflictingSchedule();","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"kelvneo"},"content":"            stringBuilder.append(Messages.MESSAGE_CONFLICTING_SCHEDULE + \"\\n\").append(conflicts).append(\"\\n\");","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"LouisLouis19"},"content":"        contentManager.add(newLink);","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"kelvneo"},"content":"        stringBuilder.append(String.format(Messages.MESSAGE_RESPONSE_ADD, CommonFormat.COMMAND_SCHEDULE, description));","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(stringBuilder.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"LouisLouis19"},"content":"     * Checks if arguments are non-empty and valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"     * @param argArray The command arguments in an array list.","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"LouisLouis19"},"content":"     * @return True if the appropriate number of arguments are present, false otherwise.","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"LouisLouis19"},"content":"    private boolean isValidScheduleArguments(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"LouisLouis19"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"LouisLouis19"},"content":"        if (argArray.size() !\u003d ADD_SCHEDULE_ARGUMENTS) {","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Failed to find %d arguments, %d arguments found\",","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"LouisLouis19"},"content":"                    ADD_SCHEDULE_ARGUMENTS, argArray.size()));","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"LouisLouis19"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"        } else if (CommonUtils.hasEmptyString(argArray)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(\"Failed to parse arguments, some arguments found is empty\");","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"LouisLouis19"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"LouisLouis19"},"content":"        return isValid;","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":113,"kelvneo":13,"3m0W33D":13,"Woolicious98":10}},{"path":"src/main/java/terminus/command/content/note/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":" * AddNoteCommand class which will manage the adding of new Notes from user command.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private String name;","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private String data;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    private static final int ADD_NOTE_ARGUMENTS \u003d 2;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_ADD_NOTE_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_ADD;","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"     * Parses the arguments to the AddNoteCommand object.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"     * The arguments are attributes for a new Note object.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments are empty or missing.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Parsing add note arguments\");","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: arguments is empty\");","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        // Regex to find arguments","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e argArray \u003d CommonUtils.findArguments(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"        if (!isValidNoteArguments(argArray)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        this.name \u003d argArray.get(0);","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        this.data \u003d argArray.get(1);","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(String.format(\"Parsed argument (name \u003d %s, data \u003d %s) to Add Note Command\", name, data));","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"     * Executes the add Note command.","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"     * Prints the relevant response to the Ui and a new Note will be added into the arraylist of Notes.","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException when the file to be saved is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws IOException, InvalidArgumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Executing Add Note Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        ContentManager\u003cNote\u003e contentManager \u003d module.getContentManager(Note.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"        assert contentManager !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        if (contentManager.isDuplicateName(name)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_DUPLICATE_NAME);","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"        Note newNote \u003d new Note(name, data);","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        contentManager.add(newNote);","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        // Save to file","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.addNoteFromModule(getModuleName(), newNote);","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(String.format(\"Note(\\\"%s\\\",\\\"%s\\\") has been added\", name, data));","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"        String message \u003d String.format(Messages.MESSAGE_RESPONSE_ADD, CommonFormat.COMMAND_NOTE, name);","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"     * Checks if arguments are non-empty and valid.","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"     * @param argArray The command arguments in an array list.","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"     * @return True if the appropriate number of arguments are present, false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"    private boolean isValidNoteArguments(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-03"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"        if (argArray.size() !\u003d ADD_NOTE_ARGUMENTS) {","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(String.format(\"Failed to find %d arguments: %d arguments found\",","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"                    ADD_NOTE_ARGUMENTS, argArray.size()));","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        } else if (CommonUtils.hasEmptyString(argArray)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: some arguments found is empty\");","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"        } else if (!CommonUtils.isValidFileName(argArray.get(0))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: given note name is invalid\");","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"        } else if (argArray.get(1).length() \u003e CommonFormat.MAX_FILE_SIZE) {","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: given note data is too long\");","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"        return isValid;","lastModifiedDate":"2021-10-03"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"LouisLouis19":5,"kelvneo":8,"3m0W33D":9,"Woolicious98":93}},{"path":"src/main/java/terminus/command/content/note/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"public class DeleteNoteCommand extends DeleteCommand\u003cNote\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    public DeleteNoteCommand(Class\u003cNote\u003e type) {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"        super(type);","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) throws InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"        CommandResult result \u003d super.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        // Update file accordingly","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.removeNoteFromModule(getModuleName(), super.deletedContentName);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"        return result;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":5,"Woolicious98":20}},{"path":"src/main/java/terminus/command/content/note/ExportNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"public class ExportNoteCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_EXPORT;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_EXPORT;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"     * Executes the command. Prints the required result to the Ui.","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidCommandException when the command could not be found.","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"     * @throws IOException when the file to be saved is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Export Note Command\");","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        ContentManager\u003cNote\u003e noteManager \u003d moduleManager.getModule(getModuleName()).getContentManager(Note.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cNote\u003e notes \u003d noteManager.getContents();","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        ModuleStorage storage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        storage.exportModuleNotes(getModuleName(), notes);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Exported Notes Successfully\");","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(Messages.SUCCESSFUL_EXPORT);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kelvneo":2,"3m0W33D":59}},{"path":"src/main/java/terminus/command/content/note/ReloadNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"public class ReloadNoteCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_RELOAD;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_RELOAD;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"     * Executes Reload Note command.","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"     * Replace existing note data in the specified module with the ones in the file directory.","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"     * @return The CommandResult object indicating the success including additional options.","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidCommandException when the command could not be found.","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException when the file to be read is null.","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.loadNotesFromModule(moduleManager, getModuleName());","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        result.append(String.format(Messages.MESSAGE_RESPONSE_RELOAD_NOTE, getModuleName()));","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        return new CommandResult(result.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Woolicious98":54}},{"path":"src/main/java/terminus/command/content/question/AddQuestionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"public class AddQuestionCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    private String question;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    private String answer;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private static final int ADD_NOTE_ARGUMENTS \u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        return CommonFormat.COMMAND_ADD_QUESTION_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        return Messages.MESSAGE_COMMAND_ADD;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"     * Parses the arguments to the AddQuestionCommand object.","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"     * The arguments are attributes for a new Question object.","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"     * @throws InvalidArgumentException when arguments are empty or missing.","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Parsing add question arguments\");","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: arguments is empty\");","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        // Regex to find arguments","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        ArrayList\u003cString\u003e argArray \u003d CommonUtils.findArguments(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        if (!isValidQuestionsArgument(argArray)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        this.question \u003d argArray.get(0);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        this.answer \u003d argArray.get(1);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(String.format(\"Parsed argument (question \u003d %s, answer \u003d %s) to Add Question Command\", ","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            question, answer));","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"     * Executes the add Question command.","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"     * Prints the relevant response to the Ui and a new Note will be added into the arraylist of Notes.","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Executing Add Question Command\");","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        ContentManager\u003cQuestion\u003e contentManager \u003d module.getContentManager(Question.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        assert contentManager !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        contentManager.add(new Question(question, answer));","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(String.format(\"Question (\\\"%s\\\",\\\"%s\\\") has been added\", question, answer));","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        String message \u003d String.format(Messages.MESSAGE_RESPONSE_ADD, CommonFormat.COMMAND_QUESTION, question);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"     * Checks if arguments are non-empty and valid.","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"     * @param argArray The command arguments in an array list.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"     * @return True if the appropriate number of arguments are present, false otherwise.","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"    private boolean isValidQuestionsArgument(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"        if (argArray.size() !\u003d ADD_NOTE_ARGUMENTS) {","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(String.format(\"Failed to find %d arguments: %d arguments found\",","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"                ADD_NOTE_ARGUMENTS, argArray.size()));","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"        } else if (CommonUtils.hasEmptyString(argArray)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: some arguments found is empty\");","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"        return isValid;","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":96}},{"path":"src/main/java/terminus/command/content/question/TestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import terminus.activerecall.GameEnvironment;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"public class TestCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    private int questionCount;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        return CommonFormat.COMMAND_TEST_QUESTION_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        return Messages.MESSAGE_COMMAND_TEST_QUESTION;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"            this.questionCount \u003d 10;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"            return;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Parsing question test arguments\");","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            questionCount \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(String.format(\"Failed to parse number of questions : %s\", arguments));","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        if (questionCount \u003c\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(String.format(\"Invalid number of questions : %d\", questionCount));","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        assert questionCount \u003e 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        ContentManager\u003cQuestion\u003e contentManager \u003d module.getContentManager(Question.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        ArrayList\u003cQuestion\u003e questions \u003d contentManager.getContents();","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        if (questions.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidCommandException(Messages.ERROR_MESSAGE_NO_QUESTIONS);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment.createNewEnvironment(questions, questionCount).run(); ","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult();","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kelvneo":68}},{"path":"src/main/java/terminus/command/module/AddModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"public class AddModuleCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    private static final int MODULE_ARGS_COUNT \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_ADD_MODULE_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_ADD_MODULE;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: arguments is empty\");","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e argArray \u003d CommonUtils.findArguments(arguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        if (!isValidModuleArguments(argArray)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        moduleName \u003d argArray.get(0);","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        if (!moduleName.matches(CommonFormat.SPACE_NEGATED_DELIMITER)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MODULE_WHITESPACE);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        moduleName \u003d moduleName.toUpperCase();","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"     * Executes the command. Prints the required result to the Ui.","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidCommandException when the command could not be found.","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException when the module directory is not empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"        if (moduleManager.getModule(moduleName) !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MODULE_EXIST);","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        // Create its directory","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        if (moduleStorage.createModuleDirectory(moduleName)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"            moduleManager.addModule(moduleName);","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"        String message \u003d String.format(Messages.MESSAGE_RESPONSE_MODULE_ADD, moduleName);","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"    private boolean isValidModuleArguments(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"        if (argArray.size() !\u003d MODULE_ARGS_COUNT) {","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"            return false;","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"        } else if (CommonUtils.hasEmptyString(argArray)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"            return CommonUtils.isValidFileName(argArray.get(0));","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":4,"3m0W33D":77,"Woolicious98":14}},{"path":"src/main/java/terminus/command/module/DeleteModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"public class DeleteModuleCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    private int itemNumber;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_DELETE_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_MODULE_DELETE;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing delete arguments\");","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"            itemNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Failed to parse delete itemNumber : %s\", arguments));","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        if (itemNumber \u003c\u003d 0) {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Invalid itemNumber : %d\", itemNumber));","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"     * Executes the command. Prints the required result to the Ui.","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidCommandException when the command could not be found.","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException when files to be deleted is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"        String[] listOfModule \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"        if (!CommonUtils.isValidIndex(itemNumber, listOfModule)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_EMPTY_CONTENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        assert itemNumber \u003e 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.removeModule(listOfModule[itemNumber - 1]);","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        // Delete all files and then its folder","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(listOfModule[itemNumber - 1]);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        String message \u003d String.format(Messages.MESSAGE_RESPONSE_MODULE_DELETE, listOfModule[itemNumber - 1]);","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":3,"3m0W33D":72,"Woolicious98":9}},{"path":"src/main/java/terminus/command/module/ModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.WorkspaceCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"public class ModuleCommand extends WorkspaceCommand {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"    public ModuleCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"        super(ModuleCommandParser.getInstance());","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_MODULE_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_MODULE;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":33}},{"path":"src/main/java/terminus/command/module/UpdateModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"public class UpdateModuleCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    public static final String REGEX_GROUP_NEWNAME \u003d \"newName\";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    public static final String REGEX_GROUP_INDEX \u003d \"index\";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private int index;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private String newName;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        return CommonFormat.COMMAND_UPDATE_MODULE_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        return Messages.MESSAGE_COMMAND_UPDATE_MODULE;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        Pattern p \u003d Pattern.compile(CommonFormat.UPDATE_MODULE_REGEX_FORMAT);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        Matcher m \u003d p.matcher(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        if (!m.matches()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"            index \u003d Integer.parseInt(m.group(REGEX_GROUP_INDEX));","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Failed to parse index : %s\", arguments));","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        newName \u003d m.group(REGEX_GROUP_NEWNAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        if (!newName.matches(CommonFormat.SPACE_NEGATED_DELIMITER)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MODULE_WHITESPACE);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        } else if (!CommonUtils.isValidFileName(newName)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidArgumentException(Messages.ERROR_INVALID_FILE_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        newName \u003d newName.toUpperCase();","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"        throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        String[] listOfModule \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        if (!CommonUtils.isValidIndex(index, listOfModule)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_EMPTY_CONTENTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"        if (moduleManager.getModule(newName) !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MODULE_EXIST);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"        assert index \u003e 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        String oldName \u003d listOfModule[index - 1];","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        NusModule current \u003d moduleManager.getModule(listOfModule[index - 1]);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage.getInstance().updateModuleDirectory(oldName, newName);","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.removeModule(listOfModule[index - 1]);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.setModule(newName, current);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"            String.format(Messages.UPDATE_MODULE_RESPONSE_MESSAGE, listOfModule[index - 1], newName));","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kelvneo":3,"3m0W33D":71,"Woolicious98":6}},{"path":"src/main/java/terminus/command/module/ViewModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"public class ViewModuleCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_VIEW_MODULE_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_MODULE_VIEW;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     * Executes the command. Prints the required result to the Ui.","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidCommandException  when the command could not be found.","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(ModuleManager moduleManager)","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        String[] modules \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        String[] listOfModules \u003d IntStream.range(0, modules.length)","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"                .mapToObj(i -\u003e String.format(Messages.MESSAGE_RESPONSE_MODULE_FORMAT, i + 1, modules[i]))","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        if (listOfModules.length \u003d\u003d 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            return new CommandResult(Messages.MESSAGE_RESPONSE_NO_MODULES);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"            return new CommandResult(listOfModules);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":4,"3m0W33D":52}},{"path":"src/main/java/terminus/common/CommonFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.common;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":" * CommonFormat class that contains formats that are used across different packages.","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"public class CommonFormat {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"     * Command names ","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_NOTE \u003d \"note\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_VIEW \u003d \"view\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_BACK \u003d \"back\";","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_SCHEDULE \u003d \"schedule\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_QUESTION \u003d \"question\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_TEST \u003d \"test\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_TIMETABLE \u003d \"timetable\";","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_MODULE \u003d \"module\";","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_GO \u003d \"go\";","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_EXPORT \u003d \"export\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_UPDATE \u003d \"update\";","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_RELOAD \u003d \"reload\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    public static final String LOCAL_TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"     * Command Formats ","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_DELETE_FORMAT \u003d COMMAND_DELETE + \" \u003citem number\u003e\";","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_VIEW_FORMAT \u003d COMMAND_VIEW + \" {item number}\";","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_ADD_SCHEDULE_FORMAT \u003d COMMAND_ADD + \" \\\"\u003clink description\u003e\\\" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"            + \"\\\"\u003cday\u003e\\\" \\\"\u003cstart_time \" + LOCAL_TIME_FORMAT + \"\u003e\\\" \\\"\u003cduration\u003e\\\" \\\"\u003czoom_link\u003e\\\"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_ADD_NOTE_FORMAT \u003d COMMAND_ADD + \" \\\"\u003cnote name\u003e\\\" \\\"\u003cnote content\u003e\\\"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_ADD_QUESTION_FORMAT \u003d COMMAND_ADD + \" \\\"\u003cquestion\u003e\\\" \\\"\u003canswer\u003e\\\"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_TEST_QUESTION_FORMAT \u003d COMMAND_TEST + \" {question count}\";","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_TIMETABLE_FORMAT \u003d COMMAND_TIMETABLE + \" {day}\";","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_UPDATE_MODULE_FORMAT \u003d COMMAND_UPDATE + \" \u003cindex\u003e \u003cnew module name\u003e\";","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_ADD_MODULE_FORMAT \u003d \"add \\\"\u003cmodule name\u003e\\\"\";","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_MODULE_FORMAT \u003d COMMAND_MODULE;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_VIEW_MODULE_FORMAT \u003d COMMAND_VIEW;","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    public static final String SPACE_DELIMITER \u003d \"\\\\s+\";","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    public static final String SPACE_NEGATED_DELIMITER \u003d \"\\\\S+\";","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"     * Notes storage setting ","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    public static final String EXTENSION_TEXT_FILE \u003d \".txt\";","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"    public static final String CONTENT_TYPE_TEXT_FILE \u003d \"text/plain\";","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"    public static final ArrayList\u003cCharacter\u003e ILLEGAL_CHARACTERS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"            Arrays.asList(\u0027/\u0027, \u0027\\n\u0027, \u0027\\r\u0027, \u0027\\t\u0027, \u0027\\0\u0027, \u0027\\f\u0027, \u0027`\u0027, \u0027?\u0027, \u0027*\u0027, \u0027\\\\\u0027, \u0027\u003c\u0027, \u0027\u003e\u0027, \u0027|\u0027, \u0027\\\"\u0027, \u0027:\u0027, \u0027.\u0027));","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"    public static final int MAX_FILENAME_LENGTH \u003d 30;","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"    public static final int STARTING_ASCII \u003d 32;","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"    public static final int ENDING_ASCII \u003d 126;","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    public static final long MAX_FILE_SIZE \u003d 1000000;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"     * PDF settings","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"    public static final String PDF_FORMAT \u003d \".pdf\";","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"    public static final String FONT_NAME \u003d \"Arial\";","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"    public static final int FONT_HEADER_SIZE \u003d 14;","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"    public static final int FONT_SIZE \u003d 11;","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"    public static final String UPDATE_MODULE_REGEX_FORMAT \u003d \"(?\u003cindex\u003e\\\\d+)\\\\s+\\\"(?\u003cnewName\u003e.*?)\\\"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"    public static final String COMMAND_GO_FORMAT \u003d \"go \u003cmodule name\u003e\";","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":13,"kelvneo":22,"Woolicious98":32,"3m0W33D":8}},{"path":"src/main/java/terminus/common/CommonUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.net.URL;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":" * CommonUtils class to manage methods that are used across different packages.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"public class CommonUtils {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"     * Returns an ArrayList of String containing elements found based on regex.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"     * Matches any strings that is within a pair of double quotes.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"     * @param arg String containing the arguments from inputs.","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"     * @return An array list containing strings that is within a pair of double quotes from arg.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    public static ArrayList\u003cString\u003e findArguments(String arg) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        assert arg !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e argsArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        Pattern p \u003d Pattern.compile(\"\\\"(.*?)\\\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        Matcher m \u003d p.matcher(arg);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        while (m.find()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"            argsArray.add(m.group(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        return argsArray;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"     * Checks if any elements in the ArrayList of String is empty.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"     * @param argArray The ArrayList to be checked.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     * @return True if array list is empty, false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    public static boolean hasEmptyString(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        assert argArray !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        if (argArray.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        return argArray.stream().anyMatch(x -\u003e x \u003d\u003d null || x.isBlank());","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"     * Returns a LocalTime object from a given string.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"     * @param startTime The string to be converted to a LocalTime object.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"     * @return A LocalTime object of the converted string.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when string does not follow the proper time format.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    public static LocalTime convertToLocalTime(String startTime) throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        assert startTime !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(CommonFormat.LOCAL_TIME_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"            return LocalTime.parse(startTime, format);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"                    String.format(Messages.ERROR_MESSAGE_INVALID_TIME_FORMAT, CommonFormat.LOCAL_TIME_FORMAT));","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"     * Returns the class name without its packages.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"     * @param type Content class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"     * @param \u003cT\u003e  Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"     * @return A string of the class name from the class type without its packages.","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"    public static \u003cT\u003e String getClassName(T type) {","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"        assert type !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"        String result \u003d type.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"        String[] string \u003d result.split(\"\\\\.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"        if (string.length \u003e 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"            result \u003d string[string.length - 1];","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"        return result;","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"     * Checks if the given string is a valid url.","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"     * @param url The string to be checked.","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"     * @return True if url is valid, false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when given string is not a valid url.","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"    public static boolean isValidUrl(String url) throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"            new URL(url).toURI();","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"     * Checks if the given string is a valid DaysOfWeekEnum type.","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"     * @param day The string to be checked.","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"     * @return True if day is a valid DaysOfWeekEnum type, false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"3m0W33D"},"content":"    public static boolean isValidDay(String day) {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"        for (DaysOfWeekEnum dayOfWeek : DaysOfWeekEnum.values()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"            if (dayOfWeek.name().equalsIgnoreCase(day)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"                return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"3m0W33D"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"3m0W33D"},"content":"        return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"LouisLouis19"},"content":"     * Checks if the given integer is a valid duration.","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"LouisLouis19"},"content":"     * @param duration The integer to be checked","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"LouisLouis19"},"content":"     * @return True if the integer between 0 and 24 inclusive, false otherwise","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"LouisLouis19"},"content":"    public static boolean isValidDuration(int duration) {","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"LouisLouis19"},"content":"        if (duration \u003c 0 || duration \u003e 24) {","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"LouisLouis19"},"content":"        return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"LouisLouis19"},"content":"     * Checks if the given LocalTime and integer has an overflow.","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"LouisLouis19"},"content":"     * @param startTime The startTime attribute of the Link object","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"LouisLouis19"},"content":"     * @param duration  The duration attribute of the Link object","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"LouisLouis19"},"content":"     * @return True if there is no overflow in time, false otherwise","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"LouisLouis19"},"content":"    public static boolean hasDurationOverflow(LocalTime startTime, int duration) {","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"LouisLouis19"},"content":"        LocalTime endTime \u003d startTime.plusHours(duration);","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"LouisLouis19"},"content":"        LocalTime midnight \u003d LocalTime.of(00, 00);","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"LouisLouis19"},"content":"        if (!endTime.equals(midnight) \u0026\u0026 startTime.getHour() \u003e endTime.getHour()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"LouisLouis19"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"LouisLouis19"},"content":"        } else if (!startTime.equals(midnight) \u0026\u0026 duration \u003d\u003d 24) {","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"LouisLouis19"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"LouisLouis19"},"content":"        return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"LouisLouis19"},"content":"     * Checks if the given String is null or empty.","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"LouisLouis19"},"content":"     * @param string The string to be checked","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"LouisLouis19"},"content":"     * @return True if String is null or empty, false otherwise","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"3m0W33D"},"content":"    public static boolean isStringNullOrEmpty(String string) {","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"3m0W33D"},"content":"        return string \u003d\u003d null || string.isBlank();","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"     * Checks if the given name is a valid file name.","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"     * @param name The string to be checked.","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"     * @return True if name is a valid file name, false otherwise.","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"    public static boolean isValidFileName(String name) {","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"        if (name \u003d\u003d null || name.isBlank() || name.length() \u003e CommonFormat.MAX_FILENAME_LENGTH) {","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"        boolean isOnlyAscii \u003d name.chars()","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"                .allMatch(c -\u003e CommonFormat.STARTING_ASCII \u003c\u003d c \u0026\u0026 c \u003c\u003d CommonFormat.ENDING_ASCII);","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"        boolean hasIllegalChar \u003d name.chars().anyMatch(x -\u003e CommonFormat.ILLEGAL_CHARACTERS.contains((char) x));","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"        if (!isOnlyAscii || hasIllegalChar) {","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"            Paths.get(name.trim());","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"        } catch (InvalidPathException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"Woolicious98"},"content":"     * Returns the filename without its file extension of a given full filename.","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"     * @param filename The filename string to be extracted.","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"     * @return A string of the file name without its file extension.","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"Woolicious98"},"content":"    public static String getFileNameOnly(String filename) {","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"Woolicious98"},"content":"        assert filename !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"Woolicious98"},"content":"        String[] string \u003d filename.split(\"\\\\.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"        if (string !\u003d null \u0026\u0026 string.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"            return string[0];","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"Woolicious98"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"LouisLouis19"},"content":"     * Function to get today\u0027s day of the week.","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"LouisLouis19"},"content":"     * @return A string indicating today\u0027s day","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"LouisLouis19"},"content":"    public static String getCurrentDay() {","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"LouisLouis19"},"content":"        String currentDay \u003d LocalDate.now().getDayOfWeek().toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"LouisLouis19"},"content":"        return currentDay;","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"3m0W33D"},"content":"     * Returns a boolean if the index give is valid.","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"3m0W33D"},"content":"     * @param index The index to check","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"3m0W33D"},"content":"     * @param listOfModule The full list of modules","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"3m0W33D"},"content":"     * @return True if the index is valid or else it is false","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"3m0W33D"},"content":"    public static boolean isValidIndex(int index, String[] listOfModule) {","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"3m0W33D"},"content":"        return listOfModule.length \u003e\u003d index \u0026\u0026 index \u003e 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":219,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":49,"3m0W33D":94,"Woolicious98":77}},{"path":"src/main/java/terminus/common/DaysOfWeekEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"public enum DaysOfWeekEnum {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"    MONDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"    TUESDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"    WEDNESDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"    THURSDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"    FRIDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"    SATURDAY,","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"    SUNDAY","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":11}},{"path":"src/main/java/terminus/common/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.common;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public class Messages {","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"     * Help Command Messages","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    public static final String HELP_MENU_MESSAGE \u003d \"\\nHelp Menu\\n---------\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_ADD \u003d \"Add an item into your list.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_DELETE \u003d \"Delete an item from your list.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_VIEW \u003d \"View all items or view an individual items\";","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_BACK \u003d \"Returns to the parent workspace.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_EXIT \u003d \"Exits the program.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_HELP \u003d \"Prints the help page.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_NOTE \u003d \"Move to notes workspace.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    public static final String MESSAGE_COMMAND_SCHEDULE \u003d \"Move to schedules workspace.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_QUESTION \u003d \"Move to questions workspace.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_TEST_QUESTION \u003d \"Test yourself with Active Recall.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    public static final String MESSAGE_COMMAND_TIMETABLE \u003d \"Displays all your schedule.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_MODULE \u003d \"Move to the module workspace\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_ADD_MODULE \u003d \"Adds a module\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_MODULE_DELETE \u003d \"Deletes a module\";","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_MODULE_VIEW \u003d \"View all modules available\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_EXPORT \u003d \"Export all existing notes into a pdf file.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_UPDATE_MODULE \u003d \"Updates the module name\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_RELOAD \u003d \"Reload the contents of notes for this module.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    public static final String CONTENT_MESSAGE_HEADER \u003d \"List of Content\\n---------------\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    public static final String CONTENT_MESSAGE_FOOTER \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        \"\\nRerun the same command with an index behind to view the content.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_RESPONSE_DELETE \u003d \"Your %s on \u0027%s\u0027 has been deleted!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_RESPONSE_ADD \u003d \"Your %s on \u0027%s\u0027 has been added!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_RESPONSE_MODULE_ADD \u003d \"Module %s has been added\";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_RESPONSE_MODULE_FORMAT \u003d \"%d. %s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_RESPONSE_NO_MODULES \u003d \"You do not have any modules.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_RESPONSE_MODULE_DELETE \u003d \"Deleted module %s.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_RESPONSE_RELOAD_NOTE \u003d \"Your Notes for %s has been reloaded.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"     * Error Messages","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_TAG \u003d \"Error: \";","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    public static final String INVALID_ARGUMENT_FORMAT_MESSAGE_EXCEPTION \u003d \"%s %s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    public static final String INVALID_ARGUMENT_FORMAT_MESSAGE \u003d \"Format: %s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    public static final String ERROR_MESSAGE_INVALID_INPUT \u003d ERROR_MESSAGE_TAG + \"Invalid input provided.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_MISSING_ARGUMENTS \u003d ERROR_MESSAGE_TAG + \"Missing arguments.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_EMPTY_CONTENTS \u003d ERROR_MESSAGE_TAG + \"Content not found.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_INVALID_NUMBER \u003d ERROR_MESSAGE_TAG + \"Invalid numerical value provided.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_INVALID_TIME_FORMAT \u003d ERROR_MESSAGE_TAG + \"Invalid time format %s.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"    public static final String ERROR_MESSAGE_INVALID_LINK \u003d ERROR_MESSAGE_TAG + \"Invalid link %s.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"    public static final String ERROR_MESSAGE_INVALID_DAY \u003d ERROR_MESSAGE_TAG + \"Invalid day %s.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    public static final String ERROR_MESSAGE_INVALID_DURATION \u003d ERROR_MESSAGE_TAG + \"Invalid duration %d.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"    public static final String ERROR_MESSAGE_SCHEDULE_OVERFLOW \u003d ERROR_MESSAGE_TAG","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"            + \"Please set schedules on separate days.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_DUPLICATE_NAME \u003d ERROR_MESSAGE_TAG + \"Duplicate name found.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"    public static final String ERROR_MESSAGE_NO_QUESTIONS \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        \"There are no questions to be tested on. Type \u0027questions add\u0027 to get started\";","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"    public static final String ERROR_MESSAGE_INVALID_DURATION_FORMAT \u003d \"Invalid duration format.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_FILE_TOO_LARGE \u003d \"Unable to read large files.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_FILE_NOT_DELETED \u003d \"Unable to delete the file.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_FILES_NOT_DELETED \u003d \"Unable to delete some file.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_FILE \u003d \"Unable to save/load file: %s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_FOLDER \u003d \"Unable to save/load folder: %s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"    public static final String EMPTY_CONTENT_LIST_MESSAGE \u003d \"You do not have any content in this workspace.\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    public static final String ERROR_MESSAGE_MODULE_WHITESPACE \u003d \"Module name cannot contain any whitespaces!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"    public static final String ERROR_MESSAGE_MODULE_EXIST \u003d \"Module already exist!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_INVALID_FILE_NAME \u003d \"Name provided is invalid.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_CHANGE_FILE_NAME \u003d \"Unable to change file name\";","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"     * Banners","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"    public static final String MAIN_BANNER \u003d \"Welcome to TermiNUS!\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"    public static final String MAIN_REMINDER \u003d \"This is your schedule today:\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"    public static final String NOTE_BANNER \u003d \"You have %d note(s) inside this workspace.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"    public static final String SCHEDULE_BANNER \u003d \"You have %d link(s) in this workspace.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"    public static final String QUESTION_BANNER \u003d \"You have %d question(s) in this workspace.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"     * Schedules and Timetables","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_EMPTY_DAILY_SCHEDULE \u003d \"You have no schedule for today.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_CONFLICTING_SCHEDULE \u003d \"Your new schedule has conflicts with:\";","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"    public static final String EMPTY_SCHEDULE_FOR_THE_DAY \u003d \"You have no schedule for %s.\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"    public static final String EMPTY_SCHEDULE_FOR_THE_WEEK \u003d \"You have no schedule for the week.\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"     * Active Recall","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"    public static final String ACTIVE_RECALL_ENTER_TO_CONTINUE_MESSAGE \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"        \"When you are ready, press [Enter] to continue.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"    public static final String[] ACTIVE_RECALL_SESSION_END_MESSAGE \u003d {\"This training session has ended.\",","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"        \"Returning you back to main program.\"};","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"    public static final String[] ACTIVE_RECALL_ASK_QUESTION_DIFFICULTY_MESSAGE \u003d {\"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"        \"How did you find the question? (Compare against past attempts if any)\",","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"        \"[1] Easy; [2] Normal / Same; [3] Hard; [E] Exit\"};","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"     * Notes Export","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"    public static final String SUCCESSFUL_EXPORT \u003d \"Exported notes! Check the data folder.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"    public static final String FAIL_TO_EXPORT \u003d \"Unable to export file to pdf.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"    public static final String UPDATE_MODULE_RESPONSE_MESSAGE \u003d \"Updated %s to %s successfully.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_COMMAND_GO \u003d \"Go to a specific module\u0027s workspace\";","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"kelvneo":64,"LouisLouis19":10,"Woolicious98":27,"3m0W33D":5}},{"path":"src/main/java/terminus/common/TerminusLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"public class TerminusLogger {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(\"TermiNUS\");","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"     * Initializes TerminusLogger.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"     * @throws IOException When \u0027terminus.log\u0027 is unable to be written to.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    public static void initializeLogger() throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        consoleHandler.setLevel(Level.OFF);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"        LOGGER.addHandler(consoleHandler);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        FileHandler fileHandler \u003d new FileHandler(\"terminus.log\");","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        fileHandler.setLevel(Level.INFO);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        LOGGER.addHandler(fileHandler);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"     * Initializes TerminusLogger that prints only warnings and above.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    public static void initializeLoggerWarnings() {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        consoleHandler.setLevel(Level.WARNING);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        LOGGER.addHandler(consoleHandler);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"     * Writes a debug message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"     * Equivalent to Level.FINE.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    public static void debug(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        LOGGER.fine(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"     * Writes a verbose debug message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"     * Equivalent to Level.FINER.","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    public static void verboseDebug(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        LOGGER.finer(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"     * Writes a very verbose debug message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"     * Mainly used for printing stack traces and non-important strings.","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"     * Equivalent to Level.FINEST.","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    public static void veryVerboseDebug(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        LOGGER.finest(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"     * Writes an information message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"    public static void info(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        LOGGER.info(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"     * Writes a warning message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"    public static void warning(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"        LOGGER.warning(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"     * Writes a warning message with a Throwable to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"     * @param throwable The Throwable to tag to the log message.","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"    public static void warning(String message, Throwable throwable) {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"        LOGGER.log(Level.WARNING, message, throwable);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"     * Writes a severe message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"    public static void severe(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"        LOGGER.severe(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"     * Writes a warning message with a Throwable to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"     * @param throwable The Throwable to tag to the log message.","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"    public static void severe(String message, Throwable throwable) {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"        LOGGER.log(Level.SEVERE, message, throwable);","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kelvneo":119}},{"path":"src/main/java/terminus/content/Content.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.content;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":" * Content class to represent any data related object.","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"public class Content {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"    protected String name;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"    protected String data;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"    public static final String TYPE \u003d \"\";","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    private static final String DISPLAY_MESSAGE \u003d \"Name: %s\\nContent:\\n%s\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    public Content(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"     * Initializes a Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"     * @param name The name attribute of the Content.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"     * @param data The data attribute of the Content.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    public Content(String name, String data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"        this.data \u003d data;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    public String getName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"        return name;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    public String getData() {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        return data;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    public void setData(String data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        this.data \u003d data;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"     * Returns all the attributes of the Content object formatted by its display message.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"     * @return A string containing all the attributes of the Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"    public String getDisplayInfo() {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"        return String.format(DISPLAY_MESSAGE, name, data);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"     * Returns attributes of the Content object to be listed by the view command.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"     * @return A string containing attributes of the Content object based on the view command.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"    public String getViewDescription() {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"        return this.name;","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":45,"kelvneo":1,"Woolicious98":16}},{"path":"src/main/java/terminus/content/ContentManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.content;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":" * ContentManager class to manage any Content related object.","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":" *","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":" * @param \u003cT\u003e Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"public class ContentManager\u003cT extends Content\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    private ArrayList\u003cT\u003e contents;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"     * Creates a ContentManager object.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"     * It will initialize a new ArrayList for its contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    public ContentManager() {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    public void setContent(ArrayList\u003cT\u003e contents) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"        this.contents \u003d contents;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    public ArrayList\u003cT\u003e getContents() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        return contents;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     * Returns the total size of the ArrayList of type Content.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"     * @return The total size of ArrayList of type Content.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    public int getTotalContents() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        return contents.size();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"     * Returns a string containing a list of all Content information from ArrayList contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"     * @return String of a list of all Content information in ArrayList contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    public String listAllContents() {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        for (T n : contents) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            result.append(String.format(\"%d. %s\\n\", i, n.getViewDescription()));","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"            i++;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        return result.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"     * Returns string of all information of a Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"     * @param contentNumber Number to identify a element in the ArrayList.","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"     * @return A String of all information of the specified Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when given number is ArrayOutOfBounds.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"    public String getContentData(int contentNumber) throws InvalidArgumentException {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        if (isNotValidNumber(contentNumber)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_EMPTY_CONTENTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        return contents.get(contentNumber - 1).getDisplayInfo();","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"     * Return deleted Content object name.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"     * @param contentNumber Number to identify a element in the ArrayList.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"     * @return The string name of the deleted Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when given contentNumber is ArrayOurOfBounds.","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"    public String deleteContent(int contentNumber) throws InvalidArgumentException {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"        if (isNotValidNumber(contentNumber)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_EMPTY_CONTENTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"        String deletedContentName \u003d contents.get(contentNumber - 1).getName();","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"        contents.remove(contentNumber - 1);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"        return deletedContentName;","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"     * Adds a Content object into the ArrayList contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"     * @param content The Content object to be added into the ArrayList contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"    public void add(T content) {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        contents.add(content);","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"    private boolean isNotValidNumber(int number) {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"        return number \u003c 1 || number \u003e contents.size();","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"     * Replaces the current ArrayList for a new empty ArrayList.","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    public void purgeData() {","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        this.contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"     * Checks if name is unique in the Arraylist contents.","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"     * @param name The new content name to be added.","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"     * @return True if there is a similar name, false otherwise.","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"    public boolean isDuplicateName(String name) {","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"        if (contents.size() \u003c 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"        return contents.stream().anyMatch(x -\u003e x.getName().toLowerCase().equals(name.toLowerCase()));","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":37,"kelvneo":3,"Woolicious98":74,"3m0W33D":4}},{"path":"src/main/java/terminus/content/Link.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.content;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":" * Link class to represent a content of type link.","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"public class Link extends Content {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"    private String day;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"    private int duration;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"    private String link;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    public static final String TYPE \u003d \"Z\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    private static final String DISPLAY_LINK_MESSAGE \u003d \"%s (%s, %s - %s): %s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    public Link(String name, String day, LocalTime startTime, int duration, String link) {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"        super(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    public String getDay() {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"        return day;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    public void setDay(String day) {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        return startTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    public void setStartTime(LocalTime startTime) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    public int getDuration() {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        return duration;","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"    public void setDuration(int duration) {","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"    public String getLink() {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"        return link;","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"    public void setLink(String link) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the end time from the start time and duration of the Link object.","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"     * @return A LocalTime object containing the end time of the Link","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        LocalTime endTime \u003d startTime.plusHours(duration);","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        LocalTime midnight \u003d LocalTime.of(00, 00);","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        if (endTime.equals(midnight)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"            endTime \u003d LocalTime.of(23, 59);","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"        return endTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"     * Returns all the attributes of the Link object.","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"     * @return A string containing all the attributes of the Link object.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"    public String getDisplayInfo() {","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"        return String.format(DISPLAY_LINK_MESSAGE, this.name, day, startTime, getEndTime(), link);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"     * Returns all the attributes\u0027 information of the Link object.","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"     * @return A method to display all the attributes of the Link object.","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"    public String getViewDescription() {","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"        return getDisplayInfo();","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":89,"Woolicious98":3}},{"path":"src/main/java/terminus/content/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.content;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public class Note extends Content {","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"    public static final String TYPE \u003d \"N\";","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    public Note(String name, String data) {","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"        super(name, data);","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"Woolicious98":10}},{"path":"src/main/java/terminus/content/Question.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.content;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import terminus.activerecall.DifficultyModifier;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"public class Question extends Content {","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"    private double weight;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    public Question(String question, String answer) {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"        super(question, answer);","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"        this.weight \u003d 0.5;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    public String getQuestion() {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"        return this.name;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    public String getAnswer() {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"        return this.data;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    private void setWeightSafely() {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"        if (weight \u003c DifficultyModifier.MIN_VALUE) {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"            this.weight \u003d DifficultyModifier.MIN_VALUE;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        } else if (weight \u003e DifficultyModifier.MAX_VALUE) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"            this.weight \u003d DifficultyModifier.MAX_VALUE;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    public double getWeight() {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        setWeightSafely();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        return weight;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    public void setWeight(double weight) {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        setWeightSafely();","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":39}},{"path":"src/main/java/terminus/exception/InvalidArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.exception;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":" * Invalid Argument Exception class which handles exception when argument from user command is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"public class InvalidArgumentException extends Exception {","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    private final String format;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"        this(null, message);","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    public InvalidArgumentException(String format, String message) {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"        super(message);","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"        this.format \u003d format;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        return format;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":3,"kelvneo":11,"3m0W33D":8}},{"path":"src/main/java/terminus/exception/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.exception;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":" * Invalid Command Exception class which handles exception when user command is not found.","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"        super(message);","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":8,"LouisLouis19":3}},{"path":"src/main/java/terminus/module/ModuleManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"public class ModuleManager {","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"    private HashMap\u003cString, NusModule\u003e moduleMap;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    public ModuleManager() {","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"        moduleMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"     * Returns a NusModule Object given a module name.","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     * @return The NusModule Object for the given module name","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public NusModule getModule(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"        return moduleMap.get(moduleName.toUpperCase());","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     * Adds a new module to the moduleMap.","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name of the new module","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    public void addModule(String moduleName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        moduleMap.put(moduleName.toUpperCase(), new NusModule());","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     * Adds a module and also set the specific NusModule.","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name of the new module","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"     * @param module The NusModule object to set","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    public void setModule(String moduleName, NusModule module) {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        moduleMap.put(moduleName.toUpperCase(), module);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"     * Returns a String array contains the list of module names.","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"     * @return String array with the list of module names","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    public String[] getAllModules() {","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        return moduleMap.keySet().toArray(new String[0]);","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"     * Deletes the specified module.","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name of the module to remove","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    public void removeModule(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        if (moduleMap.remove(moduleName.toUpperCase()) \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"            moduleMap.remove(moduleName);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":58,"Woolicious98":3}},{"path":"src/main/java/terminus/module/NusModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.module;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Content;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":" * NusModule class to represent a Module object.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class NusModule {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    private final transient ContentManager\u003cNote\u003e noteManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    private final ContentManager\u003cLink\u003e linkManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private final ContentManager\u003cQuestion\u003e questionManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"     * Creates a NusModule object.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public NusModule() {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"        noteManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"        linkManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        questionManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     * Returns a ContentManager object based on the provided class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"     * @param type Content class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"     * @param \u003cT\u003e  Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     * @return The ContentManager object based on the provided class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    public \u003cT extends Content\u003e ContentManager\u003cT\u003e getContentManager(Class\u003cT\u003e type) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(String.format(\"Get ContentManager from NusModule with provided class type: %s\", type));","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cT\u003e result \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        if (type \u003d\u003d Note.class) {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"            result \u003d (ContentManager\u003cT\u003e) this.noteManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        } else if (type \u003d\u003d Link.class) {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"            result \u003d (ContentManager\u003cT\u003e) this.linkManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        } else if (type \u003d\u003d Question.class) {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            result \u003d (ContentManager\u003cT\u003e) this.questionManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"            // Fatal error encountered","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.severe(String.format(\"Class type provided not found: %s\", type));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"            assert false;","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"            return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"ContentManager found\");","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        return result;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":14,"kelvneo":5,"3m0W33D":6,"Woolicious98":28}},{"path":"src/main/java/terminus/parser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"public abstract class CommandParser {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    private static final String SPACE_DELIMITER \u003d \"\\\\s+\";","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    protected String workspace;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    protected final HashMap\u003cString, Command\u003e commandMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     * Initializes the commandMap. Adds some default commands to it.","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"     * @param workspace The name of the workspace.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    public CommandParser(String workspace) {","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        this.commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        this.workspace \u003d workspace;","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        addCommand(\"exit\", new ExitCommand());","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        addCommand(\"help\", new HelpCommand(this));","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     * Parses the command and its arguments.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"     * @param command The user input command.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"     * @return The Command object to be executed.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidCommandException  when there is no command or empty command.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments could not be parsed.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    public Command parseCommand(String command)","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        String[] commandLine \u003d command.strip().split(SPACE_DELIMITER, 2);","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing Command: \" + command);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        assert commandLine.length \u003c\u003d 2 \u0026\u0026 commandLine.length \u003e 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        String cmdName \u003d commandLine[0];","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        Command currentCommand \u003d commandMap.get(cmdName.strip().toLowerCase(Locale.ROOT));","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        if (currentCommand \u003d\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidCommandException(\"Command not found! Type \u0027help\u0027 for a list of commands.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        String cmdData \u003d null;","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        if (commandLine.length \u003e 1) {","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"            cmdData \u003d commandLine[1];","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing arguments.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        currentCommand.parseArguments(cmdData);","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        return currentCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    public Set\u003cString\u003e getCommandList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        return commandMap.keySet();","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"    public abstract String getWorkspaceBanner(ModuleManager moduleManager);","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"     * Returns the list of items in the help menu.","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"     * @return Array of strings contain the help messages.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"    public String[] getHelpMenu() {","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        return commandMap.entrySet()","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"                .stream()","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"                .map((i) -\u003e String.format(\"%s : %s\\nFormat: %s\\n\",","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"                        i.getKey(),","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"                        i.getValue().getHelpMessage(),","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"                        i.getValue().getFormat()))","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"     * Adds a command to the commandMap.","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"     * @param cmdName The name of the command.","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"     * @param command The actual command object.","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"    protected void addCommand(String cmdName, Command command) {","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"        commandMap.put(cmdName, command);","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"     * Returns the name of the current workspace.","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"     * @return The name of the workspace.","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspace() {","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"        return workspace;","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"     * Sets the existing workspace for the module.","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"     * @param workspace The name of the workspace","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"    public void setWorkspace(String workspace) {","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"3m0W33D"},"content":"        this.workspace \u003d workspace;","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":23,"LouisLouis19":4,"3m0W33D":73,"Woolicious98":10}},{"path":"src/main/java/terminus/parser/InnerModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"public abstract class InnerModuleCommandParser extends CommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"     * Initializes the commandMap. Adds some default commands to it.","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"     * @param workspace The name of the workspace.","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    public InnerModuleCommandParser(String workspace) {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"        super(workspace);","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     * Returns the module name for the current workspace.","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     * @return The string containing the module name","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    public String getModuleName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        return moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"     * Sets the module name for the current workspace.","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name to set","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    public void setModuleName(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    public Command parseCommand(String command) throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d super.parseCommand(command);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        cmd.setModuleName(moduleName);","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        return cmd;","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"     * Returns a workspace that contains the moduleName and the current work space.","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"     * @return The consolidated workspace name","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspace() {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        return getWorkspace(false);","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspace(boolean isOriginal) {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        if (isOriginal) {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"            return super.getWorkspace();","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        return moduleName + \" \u003e \" + super.getWorkspace();","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":57,"Woolicious98":4}},{"path":"src/main/java/terminus/parser/LinkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.link.AddLinkCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":" * LinkCommandParser class to manage schedule-related commands.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"public class LinkCommandParser extends InnerModuleCommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    private static LinkCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private LinkCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"        super(CommonFormat.COMMAND_SCHEDULE);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the command map for the schedule workspace.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"     * @return A LinkCommandParser object which contains the command map for the schedule workspace.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"    public static LinkCommandParser getInstance() {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new LinkCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"            parser.addCommand(CommonFormat.COMMAND_ADD, new AddLinkCommand());","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_VIEW, new ViewCommand(Link.class));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_DELETE, new DeleteCommand(Link.class));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        return parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the opening description of the workspace.","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The current module containing the array list of all the links.","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     * @return The string containing a description of the number of links in the workspace.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        return String.format(Messages.SCHEDULE_BANNER,","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"                moduleManager.getModule(getModuleName()).getContentManager(Link.class).getContents().size());","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":27,"kelvneo":4,"3m0W33D":12,"Woolicious98":7}},{"path":"src/main/java/terminus/parser/MainCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static terminus.common.CommonUtils.getCurrentDay;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.GoCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.TimetableCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.ModuleCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.timetable.Timetable;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class MainCommandParser extends CommandParser {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    private static MainCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    private MainCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"        super(\"\");","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    public static MainCommandParser getInstance() {","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new MainCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_MODULE, new ModuleCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_GO, new GoCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"            parser.addCommand(CommonFormat.COMMAND_TIMETABLE, new TimetableCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        return parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        String mainReminder \u003d getMainReminder(moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MAIN_BANNER + mainReminder;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    public String getMainReminder(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"        String currentDay \u003d getCurrentDay();","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"        String dailySchedule \u003d timetable.getDailySchedule(currentDay);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        if (dailySchedule !\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"            result.append(Messages.MAIN_REMINDER);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"            result.append(dailySchedule);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"            result.append(Messages.MESSAGE_EMPTY_DAILY_SCHEDULE);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"        return result.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":20,"kelvneo":4,"3m0W33D":25,"Woolicious98":2}},{"path":"src/main/java/terminus/parser/ModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.AddModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.DeleteModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.UpdateModuleCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.ViewModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"public class ModuleCommandParser extends CommandParser {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    private static ModuleCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     * Initializes the commandMap. Adds some default commands to it.","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    private ModuleCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"        super(CommonFormat.COMMAND_MODULE);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    public static ModuleCommandParser getInstance() {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new ModuleCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_ADD, new AddModuleCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_VIEW, new ViewModuleCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_DELETE, new DeleteModuleCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_UPDATE,new UpdateModuleCommand());","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        return parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        return String.format(\"You have %d modules\", moduleManager.getAllModules().length);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":36,"Woolicious98":2}},{"path":"src/main/java/terminus/parser/ModuleWorkspaceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.NotesCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.QuestionCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ScheduleCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class ModuleWorkspaceCommandParser extends CommandParser {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    private static ModuleWorkspaceCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     * Initializes the commandMap. Adds some default commands to it.","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private ModuleWorkspaceCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"        super(\"\");","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    public static ModuleWorkspaceCommandParser getInstance() {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new ModuleWorkspaceCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_NOTE, new NotesCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_SCHEDULE, new ScheduleCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_QUESTION, new QuestionCommand());","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        return parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    public Command parseCommand(String command) throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d super.parseCommand(command);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        if (!(cmd instanceof BackCommand)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"            cmd.setModuleName(getWorkspace());","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        return cmd;","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        return \"Entering \" + getWorkspace() + \" workspace\";","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":2,"3m0W33D":44,"Woolicious98":2}},{"path":"src/main/java/terminus/parser/NoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.note.AddNoteCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.content.note.DeleteNoteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.note.ExportNoteCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.content.note.ReloadNoteCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"public class NoteCommandParser extends InnerModuleCommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    private static NoteCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private NoteCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        super(CommonFormat.COMMAND_NOTE);","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    public static NoteCommandParser getInstance() {","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new NoteCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_ADD, new AddNoteCommand());","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_VIEW, new ViewCommand(Note.class));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_DELETE, new DeleteNoteCommand(Note.class));","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_EXPORT, new ExportNoteCommand());","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_RELOAD, new ReloadNoteCommand());","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        return parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        return String.format(Messages.NOTE_BANNER,","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"                moduleManager.getModule(getModuleName()).getContentManager(Note.class).getContents().size());","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":4,"3m0W33D":23,"Woolicious98":14}},{"path":"src/main/java/terminus/parser/QuestionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.question.AddQuestionCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.question.TestCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"public class QuestionCommandParser extends InnerModuleCommandParser {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    private static QuestionCommandParser parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser() {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"        super(CommonFormat.COMMAND_QUESTION);","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    public static QuestionCommandParser getInstance() {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"            parser \u003d new QuestionCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_ADD, new AddQuestionCommand());","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_VIEW, new ViewCommand\u003c\u003e(Question.class));","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_DELETE, new DeleteCommand\u003c\u003e(Question.class));","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_TEST, new TestCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        return parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        return String.format(Messages.QUESTION_BANNER,","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"            moduleManager.getModule(getModuleName()).getContentManager(Question.class).getContents().size());","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":38}},{"path":"src/main/java/terminus/storage/ModuleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import com.itextpdf.text.BaseColor;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import com.itextpdf.text.Document;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import com.itextpdf.text.DocumentException;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import com.itextpdf.text.Font;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import com.itextpdf.text.FontFactory;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import com.itextpdf.text.Paragraph;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import com.itextpdf.text.pdf.PdfWriter;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":" * ModuleStorage is a class that handles any file I/O operation within TermiNUS.","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"public class ModuleStorage {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    private Path filePath;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    private final Gson gson;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    private static ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage() {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        this.filePath \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        this.gson \u003d new GsonBuilder().setPrettyPrinting().create();","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"     * Stores the given filepath for the singleton ModuleStorage.","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"     * @param filePath The path to the file to store at.","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"    public void init(Path filePath) {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"     * Returns the singleton object of ModuleStorage.","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"     * @return ModuleStorage object of current session.","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"    public static ModuleStorage getInstance() {","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        if (moduleStorage \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"            moduleStorage \u003d new ModuleStorage();","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        return moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"     * Creates main data folder and main JSON object containing TermiNUS information.","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    private void initializeFile() throws IOException {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        assert filePath !\u003d null : \"filePath should not be null\";","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        if (!Files.isDirectory(filePath.getParent())) {","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"Parent directories not found, attempting to create them...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.info(\"Parent directories created.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(String.format(\"%s not found, attempting to create file...\",","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"                    filePath.getFileName().toString()));","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.info(String.format(\"%s created.\", filePath.getFileName().toString()));","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"     * Loads a JSON file and parses it as a ModuleManager object based on GSON followed by loading all notes content.","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"     * Returns null if the file does not exist or the file is not in a valid format.","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"     * @return NusModule based on the contents of the file.","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"    public ModuleManager loadFile() throws IOException {","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"        initializeFile();","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"        if (!Files.isReadable(filePath)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.severe(\"File is does not exist or is not readable!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"            return null;","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Decoding JSON to object\");","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"        ModuleManager moduleManager \u003d gson.fromJson(Files.newBufferedReader(filePath), ModuleManager.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Loading notes content into ModuleManager\");","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"        loadAllNotes(moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        return moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"     * Saves NusModule instance into a JSON file based on GSON. Throws NullPointerException if the `module` is null.","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The ModuleManager to convert to JSON file.","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"    public void saveFile(ModuleManager moduleManager) throws IOException {","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"        if (moduleManager \u003d\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"            throw new NullPointerException(\"module cannot be null!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"        initializeFile();","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Converting ModuleManager object into String...\");","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"3m0W33D"},"content":"        String jsonString \u003d gson.toJson(moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"String conversion completed.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(String.format(\"Writing to file: %s\", filePath.toString()));","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"kelvneo"},"content":"        assert jsonString !\u003d null \u0026\u0026 !jsonString.isBlank() : \"File saved is blank\";","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"kelvneo"},"content":"        Files.writeString(filePath, jsonString);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"     * Loads all notes data from existing modules if there is any.","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The ModuleManager containing existing modules.","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"    private void loadAllNotes(ModuleManager moduleManager) throws IOException {","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath;","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"        if (moduleManager \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"        for (String mod : moduleManager.getAllModules()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"            modDirPath \u003d Paths.get(filePath.getParent().toString(), mod);","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"            // Check if module name is a valid module and file name","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"            if (!CommonUtils.isValidFileName(mod) || !mod.matches(CommonFormat.SPACE_NEGATED_DELIMITER) || !mod.equals(","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"                    mod.toUpperCase())) {","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"                // Skip this module and remove from moduleManager","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"                TerminusLogger.warning(String.format(\"Invalid module name detected: %s\", mod));","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"                moduleManager.removeModule(mod);","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"                continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"            // Check if directory does not exist and proceed to create directory, otherwise retrieve notes.","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"            if (Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"                TerminusLogger.info(\"Creating directory: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"                Files.createDirectories(modDirPath);","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"                // Load its notes file data if there is any.","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"                loadNotesFromModule(moduleManager, mod);","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"     * Loads all notes data from a specified module if any.","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The ModuleManager containing existing modules.","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"     * @param mod A module name in the moduleManager.","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"    public void loadNotesFromModule(ModuleManager moduleManager, String mod) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), mod);","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"        if (Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"            Files.createDirectories(modDirPath);","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"        File folder \u003d new File(modDirPath.toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"        assert folder !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"        File[] listOfFiles \u003d folder.listFiles();","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"        if (listOfFiles \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"        assert moduleManager.getModule(mod) !\u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e contentManager \u003d moduleManager.getModule(mod).getContentManager(Note.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"        contentManager.purgeData();","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"        for (File file : listOfFiles) {","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"            if (isValidFile(file)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"                try {","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"                    TerminusLogger.info(String.format(\"Loading note file %s.\", file.getAbsolutePath()));","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"                    contentManager.add(new Note(CommonUtils.getFileNameOnly(file.getName()),","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"                            Files.readString(Paths.get(file.getAbsolutePath()))));","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"Woolicious98"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"Woolicious98"},"content":"                    // Read String error","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"                    TerminusLogger.severe(String.format(\"Loading note file %s failed.\", file.getAbsolutePath()));","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"                TerminusLogger.info(String.format(\"File %s is not a valid note file.\", file.getAbsolutePath()));","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"     * Saves all notes from all modules into multiple text files separated by its module directory.","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The ModuleManager containing all data from each module.","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"Woolicious98"},"content":"    public void saveAllNotes(ModuleManager moduleManager) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"Woolicious98"},"content":"        for (String mod : moduleManager.getAllModules()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"Woolicious98"},"content":"            saveNotesFromModule(moduleManager, mod, false);","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"Woolicious98"},"content":"     * Saves all notes from a specified module into multiple text files inside the directory of its module name.","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The ModuleManager containing all data from each module.","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"Woolicious98"},"content":"     * @param mod A module name in the moduleManager.","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"Woolicious98"},"content":"     * @param toDeleteAll True if files in directory should be removed first, otherwise false.","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"Woolicious98"},"content":"    public void saveNotesFromModule(ModuleManager moduleManager, String mod, Boolean toDeleteAll) throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), mod);","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"Woolicious98"},"content":"        assert CommonUtils.isValidFileName(mod);","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"Woolicious98"},"content":"        // Create module folder if it is missing.","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"Woolicious98"},"content":"        if (Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Creating directory: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"Woolicious98"},"content":"            Files.createDirectories(modDirPath);","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"Woolicious98"},"content":"        if (toDeleteAll) {","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"Woolicious98"},"content":"            // Remove all files within the folder, used when notes have been deleted.","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Removing files from directory: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"Woolicious98"},"content":"            deleteAllFilesInDirectory(modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"Woolicious98"},"content":"        // Write to its specific note files.","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Adding note files into directory: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e contentManager \u003d moduleManager.getModule(mod).getContentManager(Note.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":233,"author":{"gitId":"Woolicious98"},"content":"        ArrayList\u003cNote\u003e noteArrayList \u003d contentManager.getContents();","lastModifiedDate":"2021-10-18"},{"lineNumber":234,"author":{"gitId":"Woolicious98"},"content":"        for (Note note : noteArrayList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"Woolicious98"},"content":"            assert Files.isDirectory(modDirPath);","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"Woolicious98"},"content":"            assert CommonUtils.isValidFileName(note.getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"Woolicious98"},"content":"            createNoteFile(modDirPath, note);","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"Woolicious98"},"content":"     * Removes deleted note file from module folder.","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleName The module name related to the new note.","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"Woolicious98"},"content":"     * @param noteName The note removed from moduleManager.","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"Woolicious98"},"content":"    public void removeNoteFromModule(String moduleName, String noteName) throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), moduleName);","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"Woolicious98"},"content":"        if (Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Module directory not found: \" + modDirPath);","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":254,"author":{"gitId":"Woolicious98"},"content":"        File deleteFile \u003d new File(","lastModifiedDate":"2021-10-20"},{"lineNumber":255,"author":{"gitId":"Woolicious98"},"content":"                Paths.get(modDirPath.toString(), noteName + CommonFormat.EXTENSION_TEXT_FILE).toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Removing file: \" + deleteFile.getAbsolutePath());","lastModifiedDate":"2021-10-20"},{"lineNumber":257,"author":{"gitId":"Woolicious98"},"content":"        if (!deleteFile.delete()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"Woolicious98"},"content":"            throw new IOException(deleteFile.getAbsolutePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":263,"author":{"gitId":"Woolicious98"},"content":"     * Add new notes file into module folder.","lastModifiedDate":"2021-10-20"},{"lineNumber":264,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":265,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleName The module name related to the new note.","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"Woolicious98"},"content":"     * @param newNote The new note added to moduleManager.","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":269,"author":{"gitId":"Woolicious98"},"content":"    public void addNoteFromModule(String moduleName, Note newNote) throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":270,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), moduleName);","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"Woolicious98"},"content":"        if (Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":272,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Creating directory: \" + modDirPath);","lastModifiedDate":"2021-10-20"},{"lineNumber":273,"author":{"gitId":"Woolicious98"},"content":"            Files.createDirectories(modDirPath);","lastModifiedDate":"2021-10-20"},{"lineNumber":274,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":275,"author":{"gitId":"Woolicious98"},"content":"        createNoteFile(modDirPath, newNote);","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":278,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":279,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"Woolicious98"},"content":"     * Deletes all files within a specified directory given by its full path.","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"Woolicious98"},"content":"     * @param directoryPath Directory path where all files inside will be deleted.","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"Woolicious98"},"content":"    private void deleteAllFilesInDirectory(Path directoryPath) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"Woolicious98"},"content":"        File folder \u003d new File(directoryPath.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"Woolicious98"},"content":"        File[] listOfFiles \u003d folder.listFiles();","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"Woolicious98"},"content":"        if (listOfFiles \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"Woolicious98"},"content":"            throw new IOException(\"Directory cannot be cleared.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"Woolicious98"},"content":"        for (File file : listOfFiles) {","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"Woolicious98"},"content":"            cleanAllFilesInclusive(file);","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"Woolicious98"},"content":"            if (file.exists()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"Woolicious98"},"content":"                throw new IOException(file.getAbsolutePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"Woolicious98"},"content":"     * Deletes all files from the deleted module folder.","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"Woolicious98"},"content":"     * @param mod A module name in the moduleManager.","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":305,"author":{"gitId":"Woolicious98"},"content":"    public void cleanAfterDeleteModule(String mod) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Cleaning up deleted modules.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), mod);","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"Woolicious98"},"content":"        if (Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":309,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Directory does not exists: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"Woolicious98"},"content":"        File folder \u003d new File(modDirPath.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"Woolicious98"},"content":"        cleanAllFilesInclusive(folder);","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"Woolicious98"},"content":"        if (folder.exists()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"Woolicious98"},"content":"            throw new IOException(folder.getAbsolutePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":317,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":319,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":320,"author":{"gitId":"3m0W33D"},"content":"     * Exports all notes of a module to a PDF file.","lastModifiedDate":"2021-10-23"},{"lineNumber":321,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":322,"author":{"gitId":"3m0W33D"},"content":"     * @param module The Name of the module to export","lastModifiedDate":"2021-10-23"},{"lineNumber":323,"author":{"gitId":"3m0W33D"},"content":"     * @param notes The list of notes to export","lastModifiedDate":"2021-10-23"},{"lineNumber":324,"author":{"gitId":"3m0W33D"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-23"},{"lineNumber":325,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":326,"author":{"gitId":"3m0W33D"},"content":"    public void exportModuleNotes(String module, ArrayList\u003cNote\u003e notes) throws IOException, InvalidArgumentException {","lastModifiedDate":"2021-10-24"},{"lineNumber":327,"author":{"gitId":"3m0W33D"},"content":"        Document tempDocument \u003d new Document();","lastModifiedDate":"2021-10-23"},{"lineNumber":328,"author":{"gitId":"3m0W33D"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), module + CommonFormat.PDF_FORMAT);","lastModifiedDate":"2021-10-23"},{"lineNumber":329,"author":{"gitId":"3m0W33D"},"content":"        if (Files.notExists(modDirPath.getParent())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":330,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.info(\"Directory does not exists: \" + modDirPath.getParent());","lastModifiedDate":"2021-10-23"},{"lineNumber":331,"author":{"gitId":"3m0W33D"},"content":"            throw new IOException(\"Parent directory does not exist.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":332,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":333,"author":{"gitId":"3m0W33D"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":334,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.info(\"Directory does not exists: \" + modDirPath.getParent());","lastModifiedDate":"2021-10-24"},{"lineNumber":335,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(\"There are no notes to export.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":336,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":337,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":338,"author":{"gitId":"3m0W33D"},"content":"            final PdfWriter writer \u003d PdfWriter.getInstance(tempDocument, new FileOutputStream(modDirPath.toString()));","lastModifiedDate":"2021-10-24"},{"lineNumber":339,"author":{"gitId":"3m0W33D"},"content":"            Font header \u003d FontFactory","lastModifiedDate":"2021-10-23"},{"lineNumber":340,"author":{"gitId":"3m0W33D"},"content":"                    .getFont(CommonFormat.FONT_NAME, CommonFormat.FONT_HEADER_SIZE, Font.BOLD, BaseColor.BLACK);","lastModifiedDate":"2021-10-23"},{"lineNumber":341,"author":{"gitId":"3m0W33D"},"content":"            Font text \u003d FontFactory.getFont(CommonFormat.FONT_NAME, CommonFormat.FONT_SIZE, BaseColor.BLACK);","lastModifiedDate":"2021-10-23"},{"lineNumber":342,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":343,"author":{"gitId":"3m0W33D"},"content":"            tempDocument.open();","lastModifiedDate":"2021-10-23"},{"lineNumber":344,"author":{"gitId":"3m0W33D"},"content":"            for (Note note : notes) {","lastModifiedDate":"2021-10-23"},{"lineNumber":345,"author":{"gitId":"3m0W33D"},"content":"                Paragraph title \u003d new Paragraph(note.getName(), header);","lastModifiedDate":"2021-10-23"},{"lineNumber":346,"author":{"gitId":"3m0W33D"},"content":"                Paragraph content \u003d new Paragraph(note.getData(), text);","lastModifiedDate":"2021-10-23"},{"lineNumber":347,"author":{"gitId":"3m0W33D"},"content":"                tempDocument.add(title);","lastModifiedDate":"2021-10-23"},{"lineNumber":348,"author":{"gitId":"3m0W33D"},"content":"                tempDocument.add(content);","lastModifiedDate":"2021-10-23"},{"lineNumber":349,"author":{"gitId":"3m0W33D"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":350,"author":{"gitId":"3m0W33D"},"content":"            tempDocument.close();","lastModifiedDate":"2021-10-23"},{"lineNumber":351,"author":{"gitId":"3m0W33D"},"content":"            writer.close();","lastModifiedDate":"2021-10-24"},{"lineNumber":352,"author":{"gitId":"3m0W33D"},"content":"        } catch (DocumentException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":353,"author":{"gitId":"3m0W33D"},"content":"            throw new IOException(Messages.FAIL_TO_EXPORT);","lastModifiedDate":"2021-10-23"},{"lineNumber":354,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":355,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":356,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":357,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":358,"author":{"gitId":"Woolicious98"},"content":"     * Deletes all files within itself and itself from a specified file.","lastModifiedDate":"2021-10-19"},{"lineNumber":359,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":360,"author":{"gitId":"Woolicious98"},"content":"     * @param file The file to be deleted.","lastModifiedDate":"2021-10-19"},{"lineNumber":361,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":362,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":363,"author":{"gitId":"Woolicious98"},"content":"    private void cleanAllFilesInclusive(File file) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":364,"author":{"gitId":"Woolicious98"},"content":"        Files.walk(Paths.get(file.getAbsolutePath()))","lastModifiedDate":"2021-10-19"},{"lineNumber":365,"author":{"gitId":"Woolicious98"},"content":"                .sorted(Comparator.reverseOrder())","lastModifiedDate":"2021-10-19"},{"lineNumber":366,"author":{"gitId":"Woolicious98"},"content":"                .map(Path::toFile)","lastModifiedDate":"2021-10-19"},{"lineNumber":367,"author":{"gitId":"Woolicious98"},"content":"                .forEach(File::delete);","lastModifiedDate":"2021-10-19"},{"lineNumber":368,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":369,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":370,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":371,"author":{"gitId":"Woolicious98"},"content":"     * Creates a module directory and checks if directory is empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":372,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":373,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleName The name of the directory to be created.","lastModifiedDate":"2021-10-19"},{"lineNumber":374,"author":{"gitId":"Woolicious98"},"content":"     * @return True if the directory created is empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":375,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":376,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":377,"author":{"gitId":"Woolicious98"},"content":"    public boolean createModuleDirectory(String moduleName) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":378,"author":{"gitId":"Woolicious98"},"content":"        assert moduleName !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":379,"author":{"gitId":"Woolicious98"},"content":"        assert CommonUtils.isValidFileName(moduleName);","lastModifiedDate":"2021-10-19"},{"lineNumber":380,"author":{"gitId":"Woolicious98"},"content":"        assert moduleName.matches(CommonFormat.SPACE_NEGATED_DELIMITER);","lastModifiedDate":"2021-10-19"},{"lineNumber":381,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), moduleName);","lastModifiedDate":"2021-10-19"},{"lineNumber":382,"author":{"gitId":"Woolicious98"},"content":"        if (Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":383,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Creating directory: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":384,"author":{"gitId":"Woolicious98"},"content":"            Files.createDirectories(modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":385,"author":{"gitId":"Woolicious98"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":386,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Removing files from directory: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":387,"author":{"gitId":"Woolicious98"},"content":"            deleteAllFilesInDirectory(modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":388,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":389,"author":{"gitId":"Woolicious98"},"content":"        return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":390,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":391,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":392,"author":{"gitId":"Woolicious98"},"content":"    public void updateModuleDirectory(String oldName, String newName) throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":393,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), oldName);","lastModifiedDate":"2021-10-24"},{"lineNumber":394,"author":{"gitId":"Woolicious98"},"content":"        Path newModDirPath \u003d Paths.get(filePath.getParent().toString(), newName);","lastModifiedDate":"2021-10-24"},{"lineNumber":395,"author":{"gitId":"Woolicious98"},"content":"        if (Files.notExists(newModDirPath) \u0026\u0026 Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":396,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Creating directory: \" + newModDirPath);","lastModifiedDate":"2021-10-24"},{"lineNumber":397,"author":{"gitId":"Woolicious98"},"content":"            Files.createDirectories(newModDirPath);","lastModifiedDate":"2021-10-24"},{"lineNumber":398,"author":{"gitId":"Woolicious98"},"content":"        } else if (Files.exists(modDirPath) \u0026\u0026 Files.notExists(newModDirPath)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":399,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Renaming directory: \" + modDirPath);","lastModifiedDate":"2021-10-24"},{"lineNumber":400,"author":{"gitId":"Woolicious98"},"content":"            File oldFile \u003d new File(modDirPath.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":401,"author":{"gitId":"Woolicious98"},"content":"            File newFile \u003d new File(newModDirPath.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":402,"author":{"gitId":"Woolicious98"},"content":"            if (!oldFile.renameTo(newFile)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":403,"author":{"gitId":"Woolicious98"},"content":"                throw new IOException(Messages.ERROR_CHANGE_FILE_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":404,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":405,"author":{"gitId":"Woolicious98"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":406,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Directory: \" + newModDirPath + \" already exists.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":407,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":408,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":409,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":410,"author":{"gitId":"Woolicious98"},"content":"    private boolean isValidFile(File file) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":411,"author":{"gitId":"Woolicious98"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":412,"author":{"gitId":"Woolicious98"},"content":"        if (!Files.isReadable(Paths.get(file.getAbsolutePath()))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":413,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":414,"author":{"gitId":"Woolicious98"},"content":"        } else if (!CommonUtils.isValidFileName(CommonUtils.getFileNameOnly(file.getName()))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":415,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":416,"author":{"gitId":"Woolicious98"},"content":"        } else if (!isValidFileSize(file)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":417,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":418,"author":{"gitId":"Woolicious98"},"content":"        } else if (!isTextFile(file)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":419,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":420,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":421,"author":{"gitId":"Woolicious98"},"content":"        return isValid;","lastModifiedDate":"2021-10-19"},{"lineNumber":422,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":423,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":424,"author":{"gitId":"Woolicious98"},"content":"    private boolean isTextFile(File file) throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":425,"author":{"gitId":"Woolicious98"},"content":"        String contentType \u003d Files.probeContentType(Paths.get(file.getAbsolutePath()));","lastModifiedDate":"2021-10-24"},{"lineNumber":426,"author":{"gitId":"Woolicious98"},"content":"        if (contentType \u003d\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":427,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":428,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":429,"author":{"gitId":"Woolicious98"},"content":"        return contentType.equals(CommonFormat.CONTENT_TYPE_TEXT_FILE);","lastModifiedDate":"2021-10-24"},{"lineNumber":430,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":431,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":432,"author":{"gitId":"Woolicious98"},"content":"    private boolean isValidFileSize(File file) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":433,"author":{"gitId":"Woolicious98"},"content":"        return Files.size(Paths.get(file.getAbsolutePath())) \u003c\u003d CommonFormat.MAX_FILE_SIZE;","lastModifiedDate":"2021-10-19"},{"lineNumber":434,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":435,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":436,"author":{"gitId":"Woolicious98"},"content":"    private void createNoteFile(Path modDirPath, Note note) throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":437,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d Paths.get(modDirPath.toString(), note.getName() + CommonFormat.EXTENSION_TEXT_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":438,"author":{"gitId":"Woolicious98"},"content":"        Files.writeString(filePath, note.getData());","lastModifiedDate":"2021-10-20"},{"lineNumber":439,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Added file: \" + filePath);","lastModifiedDate":"2021-10-20"},{"lineNumber":440,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":441,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":442,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":443,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kelvneo":60,"3m0W33D":56,"Woolicious98":327}},{"path":"src/main/java/terminus/timetable/ConflictManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.timetable;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"public class ConflictManager {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    private Link newLink;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    public ConflictManager(ModuleManager moduleManager, Link newLink) {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"        this.moduleManager \u003d moduleManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"        this.newLink \u003d newLink;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"     * Retrieve all the Link from all the user Modules.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"     * @return An ArrayList of all the user Links.","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    public ArrayList\u003cLink\u003e getAllLinks() {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"        ArrayList\u003cLink\u003e currentLinks \u003d new ArrayList\u003cLink\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"        String[] modules \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"        Stream\u003cString\u003e stream \u003d Arrays.stream(modules);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"        stream.forEach(x -\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"            NusModule module \u003d moduleManager.getModule(x);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"            ContentManager\u003cLink\u003e contentManager \u003d module.getContentManager(Link.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"            assert contentManager !\u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"            currentLinks.addAll(contentManager.getContents());","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        });","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        return currentLinks;","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"     * Retrieve all the conflicting Links with the newly added Link.","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"     * @return A string object of all the conflicting Link details.","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    public String getConflictingSchedule() {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"        ArrayList\u003cLink\u003e currentLinks \u003d getAllLinks();","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder conflictList \u003d new StringBuilder();","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"        currentLinks.stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"                .filter(x -\u003e newLink.getDay().equalsIgnoreCase(x.getDay()))","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"                .filter(x -\u003e newLink.getEndTime().compareTo(x.getStartTime()) \u003e 0)","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"                .filter(x -\u003e newLink.getStartTime().compareTo(x.getEndTime()) \u003c 0)","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"                .forEach(x -\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"                    conflictList.append(String.format(\"%s\\n\", x.getViewDescription()));","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"                });","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"        return conflictList.toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"LouisLouis19":56,"kelvneo":3}},{"path":"src/main/java/terminus/timetable/Timetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.timetable;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static terminus.common.CommonUtils.isStringNullOrEmpty;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.DaysOfWeekEnum;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"public class Timetable {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    private int index \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public Timetable(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"        this.moduleManager \u003d moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"     * Lists all the schedule for a particular day.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"     * @param contentManager ContentManager object containing all user\u0027s links.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"     * @param currentDay     The particular day at which the schedules are selected from.","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"     * @return String String object containing all the schedules for the particular day.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    private ArrayList\u003cLink\u003e listDailySchedule(ContentManager\u003cLink\u003e contentManager, String currentDay) {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        ArrayList\u003cLink\u003e dailySchedule \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        contentManager.getContents()","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"                .stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"                .filter(x -\u003e x.getDay().equalsIgnoreCase(currentDay))","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"                .sorted(Comparator.comparing(Link::getStartTime))","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"                .forEach(x -\u003e dailySchedule.add(x));","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        return dailySchedule;","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"     * Retrieve and format all the user\u0027s schedule for the particular day.","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"     * @param today The particular day at which the schedules are selected from.","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"     * @return String String object containing all the schedules for the day","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"    public String getDailySchedule(String today) {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder schedule \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"        String[] modules \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"        ArrayList\u003cLink\u003e dailySchedule \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"        Stream\u003cString\u003e stream \u003d Arrays.stream(modules);","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"        stream.forEach(x -\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"            NusModule module \u003d moduleManager.getModule(x);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"            ContentManager\u003cLink\u003e contentManager \u003d module.getContentManager(Link.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"            assert contentManager !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"            dailySchedule.addAll(listDailySchedule(contentManager, today));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.info(String.format(\"Successfully acquire %s\u0027s schedule for %s\", x, today));","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        });","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        dailySchedule.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"                .sorted(Comparator.comparing(Link::getStartTime))","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"                .forEach(x -\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"                    index++;","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"                    schedule.append(String.format(\"%d. %s\\n\", index, x.getViewDescription()));","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"                });","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"        index \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"        if (isStringNullOrEmpty(schedule.toString())) {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"            return null;","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"        return schedule.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"     * Retrieve and format all the user\u0027s schedule for the week.","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"     * @return String string object containing all the user\u0027s schedule for the week","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"    public String getWeeklySchedule() {","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder dailyResult \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"        for (DaysOfWeekEnum currentDay : DaysOfWeekEnum.values()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"            String today \u003d currentDay.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"            String dailySchedule \u003d getDailySchedule(today);","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"            if (!isStringNullOrEmpty(dailySchedule)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"                assert dailySchedule !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"                String header \u003d String.format(\"%s:\\n\", today);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"                dailyResult.append(header.toUpperCase());","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"                dailyResult.append(dailySchedule);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"                assert dailyResult !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"                TerminusLogger.info(String.format(\"Successfully acquire %s\u0027s schedule\", today));","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"            index \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"        if (isStringNullOrEmpty(dailyResult.toString())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"            return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"LouisLouis19"},"content":"        return dailyResult.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"LouisLouis19"},"content":"     * Print empty message for empty user schedule.","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"LouisLouis19"},"content":"     * @param schedule The string containing the retrieved user schedule.","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"LouisLouis19"},"content":"     * @param day      The day corresponding to the retrieved schedule","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"LouisLouis19"},"content":"    public String checkEmptySchedule(String schedule, String day) {","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"LouisLouis19"},"content":"        if (schedule \u003d\u003d null \u0026\u0026 day !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.info(\"There is no schedule in the user\u0027s timetable\");","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"LouisLouis19"},"content":"            schedule \u003d String.format(Messages.EMPTY_SCHEDULE_FOR_THE_DAY, day);","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"        } else if (schedule \u003d\u003d null \u0026\u0026 day \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.info(\"There is no schedule in the user\u0027s timetable\");","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"            schedule \u003d Messages.EMPTY_SCHEDULE_FOR_THE_WEEK;","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"LouisLouis19"},"content":"        return schedule;","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"LouisLouis19":119,"3m0W33D":4}},{"path":"src/main/java/terminus/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"public class Ui {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    private static final String PROMPT \u003d \"[%s] \u003e\u003e\u003e \";","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    private static final Ui UI \u003d new Ui();","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    private final Scanner scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    private Ui() {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"        this(System.in);","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    public Ui(InputStream in) {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        this.scanner \u003d new Scanner(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"     * Prints the banner for a workspace, which includes all the commands in the parser.","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    public void printParserBanner(CommandParser parser, ModuleManager moduleManager) {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        printSection(","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"            parser.getWorkspaceBanner(moduleManager),","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"            parser.getCommandList()","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"                .stream()","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"                .reduce(\"\\nType any of the following to get started:\\n\",","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"                    (x, y) -\u003e String.format(\"%s\u003e %s\\n\", x, y))","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        );","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"     * Prints a prompt and requests a command from the user.","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"     * @param workspaceName The string to place within the brackets.","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"     * @return The command the user inputted.","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    public String requestCommand(String workspaceName) {","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        String validatedWorkspaceName \u003d workspaceName;","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        if (validatedWorkspaceName \u003d\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"            validatedWorkspaceName \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        return getUserInput(String.format(PROMPT, validatedWorkspaceName));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"     * Prints multiple strings at once, separated by a new line.","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"     * @param strings The strings to print.","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    public void printSection(String... strings) {","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        Arrays.stream(strings).forEach(System.out::println);","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"     * Prints the exit message.","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"    public void printExitMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        System.out.println(\"Goodbye!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"     * Get the input of the user through the Scanner.","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"     * @return The user input from the Scanner.","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"    public String getUserInput(String prompt) {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        System.out.print(prompt);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"    public static Ui getInstance() {","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"        return UI;","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":74,"Woolicious98":3,"3m0W33D":4}},{"path":"src/test/java/terminus/TerminusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"class TerminusTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"kelvneo":2,"3m0W33D":1,"-":10}},{"path":"src/test/java/terminus/TestFilePath.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"public class TestFilePath {","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    public static final Path RESOURCE_FOLDER \u003d Path.of(\"src\", \"test\", \"resources\");","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"    public static final Path SAVE_FILE \u003d RESOURCE_FOLDER.resolve(\"saveFile.json\");","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    public static final Path MALFORMED_FILE \u003d RESOURCE_FOLDER.resolve(\"malformedFile.json\");","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"    public static final Path VALID_FILE \u003d RESOURCE_FOLDER.resolve(\"validFile.json\");","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Woolicious98":10,"3m0W33D":1}},{"path":"src/test/java/terminus/activerecall/DifficultyModifierTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"public class DifficultyModifierTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"    void tweakEasyQuestionDifficulty_lowerThanMinValue_returnMinValue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.2, DifficultyModifier.tweakEasyQuestionDifficulty(0.1));","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.2, DifficultyModifier.tweakEasyQuestionDifficulty(0.2));","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.2, DifficultyModifier.tweakEasyQuestionDifficulty(0));","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.2, DifficultyModifier.tweakEasyQuestionDifficulty(Double.MIN_VALUE));","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    void tweakHardQuestionDifficulty_higherThanMaxValue_returnMaxValue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.9, DifficultyModifier.tweakHardQuestionDifficulty(1));","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.9, DifficultyModifier.tweakHardQuestionDifficulty(0.9));","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.9, DifficultyModifier.tweakHardQuestionDifficulty(100000));","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.9, DifficultyModifier.tweakHardQuestionDifficulty(Double.MAX_VALUE));","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":26}},{"path":"src/test/java/terminus/activerecall/GameEnvironmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import java.util.Random;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"public class GameEnvironmentTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    private Random random;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        random \u003d new Random();","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"        random.setSeed(1L);","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    void run_exit_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"%s%s2%s%s%se%s\", LS, LS, LS, LS, LS, LS);","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        Ui ui \u003d new Ui(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        List\u003cQuestion\u003e questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(questions, 3, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment gameEnvironment \u003d new GameEnvironment(ui, questionGenerator);","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        gameEnvironment.run();","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"            assertEquals(0.5, questions.get(i).getWeight());","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    void run_ignoreGarbageInput_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"%s%sasdf%s2%s%s%sasdf%se%s\", LS, LS, LS, LS, LS, LS, LS, LS);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        Ui ui \u003d new Ui(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        List\u003cQuestion\u003e questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(questions, 3, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment gameEnvironment \u003d new GameEnvironment(ui, questionGenerator);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        gameEnvironment.run();","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"            assertEquals(0.5, questions.get(i).getWeight());","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    void run_reweigh_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"%s%s3%s%s%s2%s%s%s1%s%s%s2%s%s%s2%s\", LS, LS, LS, LS, LS, LS, LS, LS, LS, LS,","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"                LS, LS, LS, LS, LS);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"        Ui ui \u003d new Ui(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        List\u003cQuestion\u003e questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(questions, 10, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment gameEnvironment \u003d new GameEnvironment(ui, questionGenerator);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        gameEnvironment.run();","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        double highNewWeight \u003d DifficultyModifier.tweakHardQuestionDifficulty(0.5);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        double lowNewWeight \u003d DifficultyModifier.tweakEasyQuestionDifficulty(0.5);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        int high \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"        int same \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        int low \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"            if (questions.get(i).getWeight() \u003d\u003d highNewWeight) {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"                high++;","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"            } else if (questions.get(i).getWeight() \u003d\u003d 0.5) {","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"                same++;","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"            } else if (questions.get(i).getWeight() \u003d\u003d lowNewWeight) {","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"                low++;","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        assertEquals(1, high);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"        assertEquals(1, low);","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"        assertEquals(3, same);","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":91,"3m0W33D":1}},{"path":"src/test/java/terminus/activerecall/QuestionGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import java.util.Random;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"public class QuestionGeneratorTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private Random random;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        random \u003d new Random();","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        random.setSeed(1L);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    void hasNext_noQuestions_returnsFalse() {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(new ArrayList\u003c\u003e(), 10);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        assertFalse(questionGenerator.hasNext());","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    void next_noQuestions_throwsException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(new ArrayList\u003c\u003e(), 10);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        assertThrows(NullPointerException.class, questionGenerator::next);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    void next_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        List\u003cQuestion\u003e questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(questions, 10, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            Question question \u003d questionGenerator.next();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            questions.remove(question);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        assertTrue(questions.isEmpty());","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        questionGenerator \u003d new QuestionGenerator(questions, 100, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            questions.remove(questionGenerator.next());","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        assertTrue(questions.isEmpty());","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        assertFalse(questionGenerator.hasNext());","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        questionGenerator \u003d new QuestionGenerator(questions, 5, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            questions.remove(questionGenerator.next());","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, questions.size());","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        assertFalse(questionGenerator.hasNext());","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":70}},{"path":"src/test/java/terminus/command/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"public class ExitCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        Command exitCommand \u003d commandParser.parseCommand(CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        CommandResult mainResult \u003d exitCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        assertTrue(mainResult.isOk() \u0026\u0026 mainResult.isExit());","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        Command noteExitCommand \u003d commandParser","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"            .parseCommand(\"go \" + tempModule + \" \" + CommonFormat.COMMAND_NOTE + \" \" + CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        CommandResult noteResult \u003d noteExitCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        assertTrue(noteResult.isOk() \u0026\u0026 noteResult.isExit());","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        Command scheduleExitCommand \u003d commandParser","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"                .parseCommand(","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"                        \"go \" + tempModule + \" \" + CommonFormat.COMMAND_SCHEDULE + \" \" + CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        CommandResult scheduleExitResult \u003d scheduleExitCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        assertTrue(scheduleExitResult.isOk() \u0026\u0026 scheduleExitResult.isExit());","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        Command goCommandExitCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" \" + CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        CommandResult goCommandExitCommandResult \u003d goCommandExitCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(goCommandExitCommandResult.isOk() \u0026\u0026 goCommandExitCommandResult.isExit());","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        Command moduleCommandExitCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"                commandParser.parseCommand(\"module \" + CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        CommandResult moduleCommandExitCommandResult \u003d moduleCommandExitCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(moduleCommandExitCommandResult.isOk() \u0026\u0026 moduleCommandExitCommandResult.isExit());","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kelvneo":34,"LouisLouis19":1,"Woolicious98":15,"3m0W33D":4}},{"path":"src/test/java/terminus/command/GoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"public class GoCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @AfterAll","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    void execute_go_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"go \" + tempModule);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        assertTrue(cmdResult.getNewCommandParser() instanceof ModuleWorkspaceCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    void execute_go_throwsException() throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"go not_a_test\");","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e cmd.execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"    void execute_goAdvance_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" note\");","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        assertTrue(cmdResult.getNewCommandParser() instanceof NoteCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" note add \\\"test\\\" \\\"test1\\\"\");","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" note view\");","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" note delete 1\");","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(0, moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule\");","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"        assertTrue(cmdResult.getNewCommandParser() instanceof LinkCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"                + \"\\\"2\\\" \\\"https://zoom.us\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Link.class).getTotalContents());","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule view\");","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule delete 1\");","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(0, moduleManager.getModule(tempModule).getContentManager(Link.class).getTotalContents());","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"    void execute_goAdvance_throwException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note abcbd\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" schedule abcbd\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" schedule delete -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note delete -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note view 100\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kelvneo":19,"LouisLouis19":1,"3m0W33D":79,"Woolicious98":12}},{"path":"src/test/java/terminus/command/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"public class HelpCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    private MainCommandParser mainCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser noteCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private ModuleCommandParser moduleCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        mainCommandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        noteCommandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        noteCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        moduleCommandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    void execute_helpCommand_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        CommandResult result \u003d mainCommandParser.parseCommand(\"help\").execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.isOk());","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        result \u003d noteCommandParser.parseCommand(\"help\").execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(result.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        result \u003d linkCommandParser.parseCommand(\"help\").execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(result.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        result \u003d moduleCommandParser.parseCommand(\"help\").execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(result.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kelvneo":4,"3m0W33D":32,"Woolicious98":13}},{"path":"src/test/java/terminus/command/ModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"public class ModuleCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    @AfterAll","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    void execute_module_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"module\");","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        assertTrue(cmdResult.getNewCommandParser() instanceof ModuleCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"module add \\\"test\\\"\");","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(1, moduleManager.getAllModules().length);","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    void execute_module_throwsException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"module add\")","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            .execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"module delete asd\")","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"            .execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"module asdsasd\")","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"            .execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kelvneo":10,"3m0W33D":46,"Woolicious98":7}},{"path":"src/test/java/terminus/command/NoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.command;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"public class NoteCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    @AfterAll","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    void execute_noteAdvance_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        Command mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" note\");","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        CommandResult changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.getNewCommandParser() instanceof NoteCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" note add \\\"username\\\" \\\"password\\\"\");","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" note view\");","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    void execute_noteAdvance_throwsException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note view 100\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note delete -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":8,"Woolicious98":53,"3m0W33D":9}},{"path":"src/test/java/terminus/command/QuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"public class QuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        Command mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" question\");","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        CommandResult changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.getNewCommandParser() instanceof QuestionCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" question add \\\"username\\\" \\\"password\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Question.class).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" question view\");","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"    void execute_throwsException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" question -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" question view 100\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" question delete -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":56,"3m0W33D":1}},{"path":"src/test/java/terminus/command/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    void execute_linkAdvance_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        Command mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule\");","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        CommandResult changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.getNewCommandParser() instanceof LinkCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"                + \"\\\"3\\\" \\\"https://zoom.us\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Link.class).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule view\");","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    void execute_linkAdvance_throwsException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" schedule -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"                            \"go \" + tempModule + \" schedule add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"2\\\" \\\"test.com\\\"\")","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"                    .execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" schedule delete -1\")","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"                    .execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kelvneo":8,"LouisLouis19":2,"3m0W33D":36,"Woolicious98":15}},{"path":"src/test/java/terminus/command/TimetableCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"public class TimetableCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    private MainCommandParser mainCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private final String tempModule1 \u003d \"test1\";","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        this.mainCommandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser.setModuleName(tempModule1);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule1);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    void execute_viewWeekly_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand \u003d mainCommandParser.parseCommand(\"timetable\");","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult \u003d timetableCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Friday\\\" \\\"00:00\\\" \\\"3\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand1 \u003d mainCommandParser.parseCommand(\"timetable\");","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult1 \u003d timetableCommand1.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult1.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Sunday\\\" \\\"00:00\\\" \\\"5\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand2 \u003d mainCommandParser.parseCommand(\"timetable\");","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult2 \u003d timetableCommand2.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult2.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"    void execute_viewDaily_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Tuesday\\\" \\\"00:00\\\" \\\"4\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Wednesday\\\" \\\"00:00\\\" \\\"3\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand \u003d mainCommandParser.parseCommand(\"timetable Saturday\");","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult \u003d timetableCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand1 \u003d mainCommandParser.parseCommand(\"timetable Saturday\");","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult1 \u003d timetableCommand1.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult1.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand2 \u003d mainCommandParser.parseCommand(\"timetable Saturday\");","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult2 \u003d timetableCommand2.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult2.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand3 \u003d mainCommandParser.parseCommand(\"timetable Saturday\");","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"        CommandResult timetableResult3 \u003d timetableCommand3.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult3.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"    void execute_viewDaily_exceptionThrown()","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"4\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable -1\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable .\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable today\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable mondayyy\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable yesterday\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"LouisLouis19":101,"kelvneo":19,"Woolicious98":1,"3m0W33D":7}},{"path":"src/test/java/terminus/command/content/link/AddLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"import terminus.timetable.ConflictManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"public class AddLinkCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cLink\u003e type \u003d Link.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    void parseArguments_addLinkCommand_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        String addLinkInput \u003d \"add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"2\\\"\\\"https://zoom.us/test\\\"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e parsedArguments \u003d CommonUtils.findArguments(addLinkInput);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"test\", parsedArguments.get(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"Thursday\", parsedArguments.get(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"00:00\", parsedArguments.get(2));","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"2\", parsedArguments.get(3));","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"https://zoom.us/test\", parsedArguments.get(4));","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    void execute_addLinkCommand_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Monday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        CommandResult addResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        String link \u003d moduleManager.getModule(tempModule).getContentManager(type).getContentData(1);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        assertTrue(link.contains(\"test\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        assertTrue(link.contains(\"Monday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        assertTrue(link.contains(\"00:00\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        assertTrue(link.contains(\"2\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        assertTrue(link.contains(\"https://zoom.us/test\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        Link newLink \u003d new Link(\"test conflict\", \"Saturday\", LocalTime.of(9, 00), 3, \"https://zoom.us/test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        ConflictManager conflictManager \u003d new ConflictManager(moduleManager, newLink);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"            addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"10:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"            addResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"            assertNotNull(conflictManager.getConflictingSchedule());","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(6, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"    void execute_addLinkCommand_fail() {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"23:00\\\" \\\"12\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"23:00\\\" \\\"12\\\" \\\"zoom.test\\\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"00:00\\\" \\\"25\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"00:00\\\" \\\"2.5\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"00:00\\\" \\\"a\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LouisLouis19":62,"kelvneo":10,"3m0W33D":10,"Woolicious98":11}},{"path":"src/test/java/terminus/command/content/link/BackLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"public class BackLinkCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        Command backCommand \u003d linkCommandParser.parseCommand(\"back\");","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        CommandResult backResult \u003d backCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(backResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        assertTrue(backResult.getNewCommandParser() instanceof ModuleWorkspaceCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":27,"kelvneo":2,"3m0W33D":2,"Woolicious98":9}},{"path":"src/test/java/terminus/command/content/link/DeleteLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"public class DeleteLinkCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cLink\u003e type \u003d Link.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    void execute_deleteLink_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"                \"add \\\"test_desc\\\" \\\"Monday\\\" \\\"12:00\\\" \\\"1\\\" \\\"https://zoom.us/test\\\"\"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"            );","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(3, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        Command deleteLinkCommand \u003d linkCommandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        CommandResult deleteResult \u003d deleteLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"        for (int j \u003d 0; j \u003c 2; j++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"            deleteLinkCommand \u003d linkCommandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"            deleteResult \u003d deleteLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    void execute_deleteLink_throwsException()","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"        Command deleteLinkCommand \u003d linkCommandParser.parseCommand(\"delete 20\");","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e deleteLinkCommand.execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":37,"kelvneo":7,"3m0W33D":11,"Woolicious98":10}},{"path":"src/test/java/terminus/command/content/link/ViewLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import com.itextpdf.text.DocumentException;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TestUtils;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"public class ViewLinkCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    Class\u003cLink\u003e type \u003d Link.class;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    void execute_viewNone_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d linkCommandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        assertEquals(TestUtils.generateCommandOutputString(viewResult.getMessage()),","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            Messages.EMPTY_CONTENT_LIST_MESSAGE.trim());","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewAll_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"1\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        String stringBuilder \u003d Messages.CONTENT_MESSAGE_HEADER","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            + moduleManager.getModule(tempModule).getContentManager(type).listAllContents()","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"            + Messages.CONTENT_MESSAGE_FOOTER;","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d linkCommandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        assertEquals(stringBuilder, TestUtils.generateCommandOutputString(viewResult.getMessage()));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"    void execute_viewLink_success() throws InvalidCommandException, InvalidArgumentException, IOException,","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"            DocumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"3\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"        Command viewLinkCommand \u003d linkCommandParser.parseCommand(\"view 1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewLinkResult \u003d viewLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(viewLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"        viewLinkCommand \u003d linkCommandParser.parseCommand(\"view 5\");","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        viewLinkResult \u003d viewLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(viewLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"    void execute_viewLink_exceptionThrown() throws InvalidCommandException, InvalidArgumentException, IOException,","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"            DocumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"view -1\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"view X\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"viewwwww\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":55,"kelvneo":21,"3m0W33D":11,"Woolicious98":12}},{"path":"src/test/java/terminus/command/content/note/AddNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import com.itextpdf.text.DocumentException;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"public class AddNoteCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cNote\u003e type \u003d Note.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @AfterAll","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1)","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            .contains(\"test\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1)","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            .contains(\"test1\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"    void execute_success_multipleNotes() throws InvalidArgumentException, InvalidCommandException, IOException,","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"            DocumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    void execute_duplicateNoteName_exceptionThrown() throws InvalidArgumentException, InvalidCommandException,","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"            IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 1; i \u003c 5; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"            assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"                () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"    void execute_illegalNoteName_exceptionThrown() {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"\\\\uD83D\\\\uDC76 \\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\".......\\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"\\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        String s \u003d \"a\".repeat(31);","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"\" + s + \"\\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"    void execute_invalidArguments_exceptionThrown() {","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"t\\\" \\\"\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"\\\" \\\"test\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test\\\"\\\"\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"    void execute_longNoteData_exceptionThrown() {","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.initializeLoggerWarnings();","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        String s \u003d \"a\".repeat(1000001);","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"\" + s + \"\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kelvneo":21,"LouisLouis19":1,"3m0W33D":34,"Woolicious98":59}},{"path":"src/test/java/terminus/command/content/note/BackNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"public class BackNoteCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        Command backCommand \u003d commandParser.parseCommand(\"back\");","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        CommandResult backResult \u003d backCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(backResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        assertTrue(backResult.getNewCommandParser() instanceof ModuleWorkspaceCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LouisLouis19":1,"kelvneo":4,"3m0W33D":24,"Woolicious98":9}},{"path":"src/test/java/terminus/command/content/note/DeleteNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"public class DeleteNoteCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cNote\u003e type \u003d Note.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    @AfterAll","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        Command deleteCommand \u003d commandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        CommandResult deleteResult \u003d deleteCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(4, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        for (int i \u003d 2; i \u003c 4; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"            deleteCommand \u003d commandParser.parseCommand(\"delete \" + i);","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"            deleteResult \u003d deleteCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"    void execute_throwsException() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"        Command deleteCommand \u003d commandParser.parseCommand(\"delete 100\");","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e deleteCommand.execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LouisLouis19":2,"kelvneo":6,"3m0W33D":43,"Woolicious98":22}},{"path":"src/test/java/terminus/command/content/note/ExportNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import java.io.File;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"public class ExportNoteCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cNote\u003e type \u003d Note.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    private String tempModule \u003d \"test1\";","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    @AfterAll","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test1\");","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        Command exportCommand \u003d commandParser.parseCommand(\"export\");","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        CommandResult exportResult \u003d exportCommand.execute(moduleManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(exportResult.isOk());","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"        File pdf \u003d new File(Paths.get(TestFilePath.RESOURCE_FOLDER.toString(), tempModule + CommonFormat.PDF_FORMAT)","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"                .toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(pdf.exists());","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        pdf.delete();","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kelvneo":2,"3m0W33D":66}},{"path":"src/test/java/terminus/command/content/note/ReloadNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"public class ReloadNoteCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    Class\u003cNote\u003e type \u003d Note.class;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    @AfterAll","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        Command addCommand \u003d commandParser.parseCommand(\"add \\\"test1\\\" \\\"test1\\\"\");","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        addCommand \u003d commandParser.parseCommand(\"add \\\"test2\\\" \\\"test2\\\"\");","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        addCommand \u003d commandParser.parseCommand(\"add \\\"test3\\\" \\\"test3\\\"\");","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        ContentManager noteContentManager \u003d moduleManager.getModule(tempModule).getContentManager(type);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(3, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        Note note2 \u003d new Note(\"test2\", \"test2\");","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(note2.getDisplayInfo(), noteContentManager.getContentData(2));","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.removeNoteFromModule(tempModule, \"test2\");","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(noteContentManager.isDuplicateName(\"test2\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(noteContentManager.isDuplicateName(\"test100\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        note2 \u003d new Note(\"test100\", \"test100\");","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.addNoteFromModule(tempModule, note2);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        Command reloadCommand \u003d commandParser.parseCommand(\"reload\");","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        reloadCommand.execute(moduleManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(noteContentManager.isDuplicateName(\"test100\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(noteContentManager.isDuplicateName(\"test2\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Woolicious98":72}},{"path":"src/test/java/terminus/command/content/note/ViewNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TestUtils;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"public class ViewNoteCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cNote\u003e type \u003d Note.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @AfterAll","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    void execute_viewNone_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        assertEquals(TestUtils.generateCommandOutputString(viewResult.getMessage()),","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"            Messages.EMPTY_CONTENT_LIST_MESSAGE.trim());","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewAll_success()","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        ","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"        String stringBuilder \u003d Messages.CONTENT_MESSAGE_HEADER","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"            + moduleManager.getModule(tempModule).getContentManager(type).listAllContents()","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"            + Messages.CONTENT_MESSAGE_FOOTER;","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        assertEquals(stringBuilder, TestUtils.generateCommandOutputString(viewResult.getMessage()));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewOne_success()","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"        int testId \u003d 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view \" + testId);","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        assertEquals(moduleManager.getModule(tempModule).getContentManager(type).getContentData(testId).trim(),","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"            TestUtils.generateCommandOutputString(viewResult.getMessage()));","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewOne_exceptionThrown()","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"view a\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"view -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"view 6\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kelvneo":26,"3m0W33D":8,"Woolicious98":74}},{"path":"src/test/java/terminus/command/content/question/AddQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"public class AddQuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    private final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    Class\u003cQuestion\u003e type \u003d Question.class;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1).contains(\"test\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1).contains(\"test1\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"            addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"            addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        assertEquals(6, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":46,"3m0W33D":1}},{"path":"src/test/java/terminus/command/content/question/BackQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"public class BackQuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        Command backCommand \u003d commandParser.parseCommand(\"back\");","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        CommandResult backResult \u003d backCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        assertTrue(backResult.getNewCommandParser() instanceof ModuleWorkspaceCommandParser);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":36,"3m0W33D":1}},{"path":"src/test/java/terminus/command/content/question/DeleteQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"public class DeleteQuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    private final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    Class\u003cQuestion\u003e type \u003d Question.class;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        Command deleteCommand \u003d commandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        CommandResult deleteResult \u003d deleteCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        assertEquals(4, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 2; i \u003c 4; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"            deleteCommand \u003d commandParser.parseCommand(\"delete \" + i);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"            deleteResult \u003d deleteCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        assertEquals(2, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"    void execute_throwsException() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        Command deleteCommand \u003d commandParser.parseCommand(\"delete 100\");","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e deleteCommand.execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":59,"3m0W33D":1}},{"path":"src/test/java/terminus/command/content/question/TestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"public class TestCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    @BeforeAll","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    static void beforeAll() {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"%s%s2%s%s%se%s\", System.lineSeparator(), System.lineSeparator(),","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"            System.lineSeparator(), System.lineSeparator(), System.lineSeparator(), System.lineSeparator());","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        System.setIn(in);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    void execute_noQuestions_exceptionThrown() throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        Command command \u003d commandParser.parseCommand(\"test\");","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e command.execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        Command command \u003d commandParser.parseCommand(\"test\");","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            CommandResult commandResult \u003d command.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"            assertTrue(commandResult.isOk());","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        } catch (NoSuchElementException exception) {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"            assertTrue(true);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":61,"3m0W33D":2}},{"path":"src/test/java/terminus/command/content/question/ViewQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TestUtils;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"public class ViewQuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    Class\u003cQuestion\u003e type \u003d Question.class;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    void execute_viewNone_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        assertEquals(TestUtils.generateCommandOutputString(viewResult.getMessage()),","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            Messages.EMPTY_CONTENT_LIST_MESSAGE.trim());","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    void execute_viewAll_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        String stringBuilder \u003d Messages.CONTENT_MESSAGE_HEADER","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"            + moduleManager.getModule(tempModule).getContentManager(type).listAllContents()","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"            + Messages.CONTENT_MESSAGE_FOOTER;","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        assertEquals(stringBuilder, TestUtils.generateCommandOutputString(viewResult.getMessage()));","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    void execute_viewOne_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        int testId \u003d 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view \" + testId);","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        assertEquals(moduleManager.getModule(tempModule).getContentManager(type).getContentData(testId).trim(),","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"            TestUtils.generateCommandOutputString(viewResult.getMessage()));","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"    void execute_viewOne_exceptionThrown()","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"view a\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"view -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"view 6\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":92,"3m0W33D":2}},{"path":"src/test/java/terminus/command/module/AddModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"public class AddModuleCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    @AfterAll","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    void execute_addModule_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"add \\\"test\\\"\");","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        assertNotNull(moduleManager.getModule(\"test\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    void execute_addModule_throwsException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test2\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add   \").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kelvneo":4,"3m0W33D":45,"Woolicious98":7}},{"path":"src/test/java/terminus/command/module/DeleteModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"public class DeleteModuleCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private static final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    @AfterAll","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    void execute_deleteModule_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        assertNull(moduleManager.getModule(tempModule));","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    void execute_deleteModule_throwsException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"delete -1\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"delete\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"delete 100\").execute(moduleManager));","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kelvneo":5,"3m0W33D":45,"Woolicious98":11}},{"path":"src/test/java/terminus/command/module/UpdateModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"public class UpdateModuleCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    @AfterAll","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    void execute_updateModule_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"update 1 \\\"test2\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        assertNull(moduleManager.getModule(tempModule));","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        assertNotNull(moduleManager.getModule(\"test2\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        Command cmd2 \u003d commandParser.parseCommand(\"update 1 \\\"CS2106\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        CommandResult cmdResult2 \u003d cmd2.execute(moduleManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        assertNull(moduleManager.getModule(\"test2\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        assertNotNull(moduleManager.getModule(\"CS2106\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"CS2106\");","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    void execute_updateModule_throwException() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"update 100 \\\"asdasd\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(\"test2\");","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"update 1 \\\"test2\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"update 1 \\\"???\\\"\").execute(moduleManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kelvneo":3,"3m0W33D":51,"Woolicious98":11}},{"path":"src/test/java/terminus/command/module/ViewModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TestUtils;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"public class ViewModuleCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private static final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    void execute_viewModule_noModules_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        Command cmd \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        assertEquals(Messages.MESSAGE_RESPONSE_NO_MODULES,","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"            TestUtils.generateCommandOutputString(cmdResult.getMessage()));","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewModule_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        CommandResult cmdResult \u003d cmd.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kelvneo":13,"3m0W33D":30,"Woolicious98":2}},{"path":"src/test/java/terminus/common/CommonUtilsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"public class CommonUtilsTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private ArrayList\u003cString\u003e resultExpected;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    void reset() {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"        resultExpected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    void setup() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        resultExpected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        String input \u003d \"add \\\"test1\\\" \\\"test2\\\"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_missingDoubleQuotes() {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        String input \u003d \"add \\\"test1\\\" \\\"test2\";","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        input \u003d \"add \\\"test1 test2\";","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        input \u003d \"add test1 test2\";","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_extraDoubleQuotes() {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        String input \u003d \"add \\\"test1\\\"\\\"\\\"test2\\\"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"        input \u003d \"add \\\"test1\\\" \\\"test2\\\"\\\"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"        input \u003d \"add \\\"test1\\\" \\\"\\\"\\\"test2\";","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_missingArgument() {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_nullArgument_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"        String input \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.findArguments(input));","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    void isArrayEmpty_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.hasEmptyString(resultExpected));","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"    void isArrayEmpty_emptyElements() {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.hasEmptyString(resultExpected));","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(resultExpected);","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.hasEmptyString(resultExpected));","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"    void isArrayEmpty_nullElements_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.hasEmptyString(resultExpected));","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"    void isArrayEmpty_nullArraylist_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.hasEmptyString(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"    void getClassName_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"3m0W33D"},"content":"        String result \u003d CommonUtils.getClassName(Note.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"Note\", result);","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.getClassName(Link.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"Link\", result);","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"    void getClassName_invalidInput() {","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"3m0W33D"},"content":"        String result \u003d CommonUtils.getClassName(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"test1\", result);","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.getClassName(\"test1.2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"2\", result);","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"    void getClassName_nullInput_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.getClassName(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"    void convertToLocalTime_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.convertToLocalTime(\"11:56\") instanceof LocalTime);","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.convertToLocalTime(\"22:56\") instanceof LocalTime);","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"    void convertToLocalTime_invalidInput_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e CommonUtils.convertToLocalTime(\"test\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e CommonUtils.convertToLocalTime(\"25:10\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e CommonUtils.convertToLocalTime(\"11-10\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.convertToLocalTime(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"    void isValidDay_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"monday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"MoNdAy\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"tuesday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"wednesday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"thursday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"friday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"saturday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"sunday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"    void isValidDay_invalidInput() {","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(\"mon\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(\"test1\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(\"wednesdey\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(\"\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"    void isValidUrl_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidUrl(\"https://www.test.com\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidUrl(\"http://www.test.org\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidUrl(\"https://nus-sg.zoom.us/j/88433650229?pwd\u003dNFg3WSl0UEQ5ZG05ZW1MZz09\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"LouisLouis19"},"content":"    void isValidUrl_invalidInput_exceptionThrown() throws InvalidArgumentException {","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.isValidUrl(\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.isValidUrl(\"..\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"Woolicious98"},"content":"    void isStringNullOrEmpty_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.isStringNullOrEmpty(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.isStringNullOrEmpty(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isStringNullOrEmpty(\"test\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"Woolicious98"},"content":"    void isValidFileName_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.isValidFileName(\"test\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.isValidFileName(\"CS2113T\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"Woolicious98"},"content":"    void isValidFileName_invalidFileName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isValidFileName(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isValidFileName(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isValidFileName(\"\\\\uD83D\\\\uDE00\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"Woolicious98"},"content":"        String s \u003d \"a\".repeat(31);","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isValidFileName(s));","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"Woolicious98"},"content":"    void getFileNameOnly_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"test\", CommonUtils.getFileNameOnly(\"test.txt\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"Woolicious98"},"content":"    void getFileNameOnly_invalidFileName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(null, CommonUtils.getFileNameOnly(\"test.txt.txt\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(null, CommonUtils.getFileNameOnly(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":236,"author":{"gitId":"Woolicious98"},"content":"    void getFileNameOnly_nullInput_exceptionThrown() {","lastModifiedDate":"2021-10-20"},{"lineNumber":237,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.getFileNameOnly(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"LouisLouis19"},"content":"    void isValidDuration_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.isValidDuration(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.isValidDuration(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.isValidDuration(2));","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.isValidDuration(-3));","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.isValidDuration(34));","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.isValidDuration(-1));","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.isValidDuration(25));","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":252,"author":{"gitId":"LouisLouis19"},"content":"    void hasDurationOverflow_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.hasDurationOverflow(LocalTime.of(22,22), 2));","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.hasDurationOverflow(LocalTime.of(22,00), 3));","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.hasDurationOverflow(LocalTime.of(23,00), 2));","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.hasDurationOverflow(LocalTime.of(00,22), 24));","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(CommonUtils.hasDurationOverflow(LocalTime.of(02,22), 23));","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.hasDurationOverflow(LocalTime.of(22,22), 1));","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.hasDurationOverflow(LocalTime.of(23,59), 0));","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.hasDurationOverflow(LocalTime.of(00,00), 0));","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"LouisLouis19"},"content":"        assertFalse(CommonUtils.hasDurationOverflow(LocalTime.of(23,00), 0));","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"3m0W33D"},"content":"    void isValidIndex() {","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"3m0W33D"},"content":"        String[] list \u003d new String[50];","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidIndex(5, list));","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidIndex(50, list));","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidIndex(1, list));","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidIndex(0, list));","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidIndex(51, list));","lastModifiedDate":"2021-10-23"},{"lineNumber":272,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidIndex(100, list));","lastModifiedDate":"2021-10-23"},{"lineNumber":273,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":275,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":276,"author":{"gitId":"LouisLouis19"},"content":"    void getCurrentDay_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":277,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(CommonUtils.getCurrentDay());","lastModifiedDate":"2021-10-23"},{"lineNumber":278,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":279,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":31,"Woolicious98":200,"3m0W33D":48}},{"path":"src/test/java/terminus/common/TestUtils.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.common;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"public class TestUtils {","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"    public static String generateCommandOutputString(String[] messages) {","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"        for (String message: messages) {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"            stringBuilder.append(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"            stringBuilder.append(\"\\n\");","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"        return stringBuilder.toString().trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kelvneo":14}},{"path":"src/test/java/terminus/content/ContentManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.content;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"public class ContentManagerTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    private ContentManager\u003cNote\u003e noteContentManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    private ContentManager\u003cLink\u003e linkContentManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        this.noteContentManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        this.linkContentManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    void addContent_note_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(note.getDisplayInfo(), noteContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    void addContent_link_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        Link link \u003d new Link(\"test\", \"monday\", LocalTime.now(), 1, \"test.com\");","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(link.getDisplayInfo(), linkContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    void deleteContent_link_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        Link link \u003d new Link(\"test\", \"monday\", LocalTime.now(), 1, \"test.com\");","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, linkContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        assertSame(link.getName(), linkContentManager.deleteContent(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, linkContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    void deleteContent_note_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        assertSame(note.getName(), noteContentManager.deleteContent(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"    void deleteContent_exceptionThrown() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"        Link link \u003d new Link(\"test\", \"monday\", LocalTime.now(), 2, \"test.com\");","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkContentManager.deleteContent(-1));","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkContentManager.deleteContent(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkContentManager.deleteContent(99));","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"    void getContent_note_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(note.getDisplayInfo(), noteContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"    void getContent_link_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"        Link link \u003d new Link(\"test\", \"monday\", LocalTime.of(23, 00), 1,\"test.com\");","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(link.getDisplayInfo(), linkContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"    void getContent_exceptionThrown() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e noteContentManager.getContentData(-1));","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e noteContentManager.getContentData(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e noteContentManager.getContentData(99));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"    void getContentSize_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test1\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"        note \u003d new Note(\"test2\", \"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"        note \u003d new Note(\"test3\", \"test3\");","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(3, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    void listContent_note_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        Note note1 \u003d new Note(\"test1\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"        Note note2 \u003d new Note(\"test2\", \"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"        Note note3 \u003d new Note(\"test3\", \"test3\");","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note1);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note2);","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note3);","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"        String result \u003d noteContentManager.listAllContents();","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(note1.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(note2.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(note3.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"    void listContent_link_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"        Link link1 \u003d new Link(\"test1\", \"monday\", LocalTime.now(), 1, \"test.com\");","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"        Link link2 \u003d new Link(\"test2\", \"monday\", LocalTime.now(), 2, \"test.com\");","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"        Link link3 \u003d new Link(\"test3\", \"monday\", LocalTime.now(), 3, \"test.com\");","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link1);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link2);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link3);","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"        String result \u003d linkContentManager.listAllContents();","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(link1.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(link2.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(link3.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":7,"Woolicious98":122}},{"path":"src/test/java/terminus/module/ModuleManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.module;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class ModuleManagerTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    public static final String TEMP_MODULE \u003d \"Test\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    void getModule_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(TEMP_MODULE);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        assertNotNull(moduleManager.getModule(TEMP_MODULE));","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.removeModule(TEMP_MODULE);","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        assertNull(moduleManager.getModule(TEMP_MODULE));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    void getAllModules_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        IntStream.range(0, 5).forEach(i -\u003e moduleManager.addModule(TEMP_MODULE + i));","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        String[] listOfModules \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(5, listOfModules.length);","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(Arrays.asList(listOfModules).contains(TEMP_MODULE.toUpperCase() + 3));","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    void updateModule_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(TEMP_MODULE);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        NusModule tempMod \u003d moduleManager.getModule(TEMP_MODULE);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.removeModule(TEMP_MODULE);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.setModule(\"newName\", tempMod);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        assertNotNull(moduleManager.getModule(\"newName\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.removeModule(\"newName\");","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        assertNull(moduleManager.getModule(\"newName\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"3m0W33D":49}},{"path":"src/test/java/terminus/module/NusModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.module;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"public class NusModuleTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    private NusModule module;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        this.module \u003d new NusModule();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    void getContent_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e noteContentManager \u003d module.getContentManager(Note.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cLink\u003e linkContentManager \u003d module.getContentManager(Link.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test1\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"        Link link \u003d new Link(\"test1\", \"test1\", LocalTime.now(), 2, \"test1\");","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(note.getDisplayInfo(), noteContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(link.getDisplayInfo(), linkContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    void getContent_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e module.getContentManager(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":1,"Woolicious98":39}},{"path":"src/test/java/terminus/parser/LinkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.link.AddLinkCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"public class LinkCommandParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"exitt\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"helpp\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"aadddd\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"vieww\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"dellett\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveExitCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"eXiT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"   ExIt   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"eXiT tt\") instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveHelpCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"HeLp\") instanceof HelpCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"   hElP   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"HeLp pppp\") instanceof HelpCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveAddCommand_InvalidArgumentExceptionThrown()","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"add\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\"test day\\\"\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"test day\\\" \\\"00:00\\\"\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"today\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"monday\\\" \\\"x:30\\\" \\\"3\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"10:00\\\" \\\"1\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"Monday\\\" \\\"10:00\\\" \\\"1\\\" \\\"empty\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"10:00\\\" \\\"1\\\" \\\"zoom\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"10:00\\\" \\\"-1\\\" \\\"zoom.test\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"23:00\\\" \\\"25\\\" \\\"zoom.test\\\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"23:00\\\" \\\"12\\\" \\\"zoom.test\\\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"23:00\\\" \\\"12\\\" \\\"zoom.test\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveAddCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"                \"add \\\"test desc\\\" \\\"Tuesday\\\" \\\"10:00\\\" \\\"1\\\" \\\"https://zoom.us/test\\\"\") instanceof AddLinkCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"                \"add \\\"    test     \\\" \\\"Wednesday\\\" \\\"10:00\\\" \\\"2\\\" \\\"    https://zoom.us/test    \\\"\") instanceof AddLinkCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"                \"add \\\"CS2113T Lecture\\\" \\\"Friday\\\" \\\"16:00\\\" \\\"3\\\" \\\"https://zoom.us/test\\\"\") instanceof AddLinkCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveDeleteCommand_exceptionThrown()","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"delete\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"delete abcd\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"delete -1\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveDeleteCommand_success()","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"delete 1\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"delete 2\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveViewCommand_exceptionThrown() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"view abcd\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveViewCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"view\") instanceof ViewCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"view 1\") instanceof ViewCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"LouisLouis19"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"add\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"back\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"delete\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"view\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"LouisLouis19"},"content":"    void getWorkspace_isSchedule() {","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(tempModule + \" \u003e schedule\", linkCommandParser.getWorkspace());","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"LouisLouis19"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LouisLouis19":127,"3m0W33D":8,"Woolicious98":4}},{"path":"src/test/java/terminus/parser/MainCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.GoCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"public class MainCommandParserTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveExitCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"eXiT a\") instanceof ExitCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveHelpCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"HeLp    a\") instanceof HelpCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveNoteCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \" note\") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \" NOTE\") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \"    note   \") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \" note    help\") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \" note    exit\") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"    void getWorkspace_isEmptyString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getWorkspace().isEmpty());","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kelvneo":59,"LouisLouis19":4,"Woolicious98":12,"3m0W33D":2}},{"path":"src/test/java/terminus/parser/ModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.AddModuleCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.DeleteModuleCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.UpdateModuleCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.ViewModuleCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"public class ModuleCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"        commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"adda\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"vie wer\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"deleterr\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveExitCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"eXiT a\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveHelpCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HeLp    a\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveAddCommand_exceptionThrown()","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\" \"));","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add \\\"    test     \\\" \"));","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveAddCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"test\\\" \") instanceof AddModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"username\\\"\") instanceof AddModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"test1\\\"test2\\\"\") instanceof AddModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveDeleteCommand_exceptionThrown() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete abcd\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete -5\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveDeleteCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"        throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"delete 1\") instanceof DeleteModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"delete 2\") instanceof DeleteModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveViewCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"view\") instanceof ViewModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveUpdateCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"update 1 \\\"test\\\"\") instanceof UpdateModuleCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"update 99 \\\"CS2106\\\"\") instanceof UpdateModuleCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveUpdateCommand_thrownException() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update abcd \\\"test\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update -1 \\\"test\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update 1 \\\"    test    \\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update 1 \\\"\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update -1 \\\"     \\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update -1 \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update \\\"test\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update \"","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"            +","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"            \"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\"","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"3m0W33D"},"content":"            + \"1111111111111 \\\"test\\\"\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"update\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"add\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"back\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"delete\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"view\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"update\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"3m0W33D"},"content":"    void getWorkspace_isModule() {","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(\"module\", commandParser.getWorkspace());","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"3m0W33D"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"3m0W33D":134}},{"path":"src/test/java/terminus/parser/ModuleWorkspaceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.NotesCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ScheduleCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"public class ModuleWorkspaceCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    private ModuleWorkspaceCommandParser commandParser;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"        commandParser \u003d ModuleWorkspaceCommandParser.getInstance();","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"        commandParser.setWorkspace(\"2106\");","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"adda\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"vie wer\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"deleterr\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveExitCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"eXiT a\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveHelpCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HeLp    a\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveNoteCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"note\") instanceof NotesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"note add \\\"test\\\" \\\"test\\\"\") instanceof NotesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"note view\") instanceof NotesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"note delete 1\") instanceof NotesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveScheduleCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"schedule\") instanceof ScheduleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"                \"schedule add \\\"test desc\\\" \\\"Tuesday\\\" \\\"10:00\\\" \\\"https://zoom.us/test\\\"\")","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"                instanceof ScheduleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"schedule view\") instanceof ScheduleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"schedule delete 1\") instanceof ScheduleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"3m0W33D":72}},{"path":"src/test/java/terminus/parser/NoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.note.AddNoteCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.note.ExportNoteCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.content.note.ReloadNoteCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"public class NoteCommandParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"adda\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"vie wer\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"deleterr\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveExitCommand_success()","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"eXiT a\") instanceof ExitCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveHelpCommand_success()","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HeLp    a\") instanceof HelpCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveAddCommand_exceptionThrown()","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add \\\"test1\\\"test2\\\"\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\" \\\"test2\\\"\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveAddCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\"\") instanceof AddNoteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"username\\\" \\\"password\\\"\") instanceof AddNoteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveDeleteCommand_exceptionThrown() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete abcd\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete -5\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveDeleteCommand_success()","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"delete 1\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(commandParser.parseCommand(\"delete 2\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveViewCommand_exceptionThrown()","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"view abcd\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveViewCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"view\") instanceof ViewCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"view 1\") instanceof ViewCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveExportCommand_success()","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"export\") instanceof ExportNoteCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"    void parseCommand_resolveReloadCommand_success()","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"reload\") instanceof ReloadNoteCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"add\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"back\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"delete\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"view\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.getCommandList().contains(\"export\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.getCommandList().contains(\"reload\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"3m0W33D"},"content":"    void getWorkspace_isNote() {","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(tempModule + \" \u003e note\", commandParser.getWorkspace());","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"3m0W33D"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LouisLouis19":16,"3m0W33D":102,"Woolicious98":15}},{"path":"src/test/java/terminus/parser/QuestionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.question.AddQuestionCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.question.TestCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"public class QuestionCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    private final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"adda\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"vie wer\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"deleterr\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveExitCommand_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"eXiT a\") instanceof ExitCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveHelpCommand_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"HeLp    a\") instanceof HelpCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveAddCommand_exceptionThrown() {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add \\\"test1\\\"test2\\\"\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\" \\\"test2\\\"\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveAddCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\"\") instanceof AddQuestionCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"    test     \\\" \\\"    test1   \\\"\") instanceof AddQuestionCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"username\\\" \\\"password\\\"\") instanceof AddQuestionCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveDeleteCommand_exceptionThrown() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete abcd\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete -5\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveDeleteCommand_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"delete 1\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"delete 2\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveViewCommand_exceptionThrown() {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"view abcd\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveViewCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"view\") instanceof ViewCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"view 1\") instanceof ViewCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveTestCommand_exceptionThrown() {","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"test abcd\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveTestCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"test\") instanceof TestCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"test 1\") instanceof TestCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"add\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"back\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"delete\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"view\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"test\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"kelvneo"},"content":"    void getWorkspace_isNote() {","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"kelvneo"},"content":"        assertEquals(tempModule + \" \u003e question\", commandParser.getWorkspace());","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"kelvneo"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":128,"3m0W33D":1}},{"path":"src/test/java/terminus/storage/ModuleStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import com.google.gson.JsonSyntaxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import com.itextpdf.text.pdf.PdfReader;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import com.itextpdf.text.pdf.parser.PdfTextExtractor;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"public class ModuleStorageTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    private static final Path RESOURCE_FOLDER \u003d Path.of(\"src\", \"test\", \"resources\");","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    private static final Path SAVE_FILE \u003d RESOURCE_FOLDER.resolve(\"saveFile.json\");","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    private static final Path MALFORMED_FILE \u003d RESOURCE_FOLDER.resolve(\"malformedFile.json\");","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    private static final Path MODULE_MALFORMED_FILE \u003d RESOURCE_FOLDER.resolve(\"moduleMalformedFile.json\");","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    private static final Path VALID_FILE \u003d RESOURCE_FOLDER.resolve(\"validFile.json\");","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    private String tempModule \u003d \"test\".toUpperCase();","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    @AfterAll","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"     * Asserts whether the text in the two given files are the same. Ignores any differences in line endings. Taken","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"     * from: https://github.com/se-edu/addressbook-level2/blob/master/test/java/seedu/addressbook/util/TestUtil.java#L128","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    public static void assertTextFilesEqual(Path path1, Path path2) throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        List\u003cString\u003e list1 \u003d Files.readAllLines(path1);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        List\u003cString\u003e list2 \u003d Files.readAllLines(path2);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(String.join(\"\\n\", list1), String.join(\"\\n\", list2));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.getModule(tempModule).getContentManager(Note.class).add(new Note(\"test\", \"test\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.saveNotesFromModule(moduleManager, tempModule, true);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.getModule(tempModule).getContentManager(Link.class).add(new Link(\"test\", \"tuesday\",","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"                LocalTime.of(11, 11), 2, \"https://zoom.us/\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"    @AfterEach","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"    void reset_filepath() throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        File pdf \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule + CommonFormat.PDF_FORMAT)","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"                .toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"        pdf.delete();","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.cleanAfterDeleteModule(\"test1\");","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"    void loadFile_invalidJson_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(MALFORMED_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"        assertThrows(JsonSyntaxException.class, moduleStorage::loadFile);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"    void loadFile_success() throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(VALID_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        ModuleManager module \u003d moduleStorage.loadFile();","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(module.getModule(tempModule).getContentManager(Note.class).listAllContents(),","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"                moduleManager.getModule(tempModule).getContentManager(Note.class).listAllContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(module.getModule(tempModule).getContentManager(Link.class).listAllContents(),","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"                moduleManager.getModule(tempModule).getContentManager(Link.class).listAllContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"    void saveFile_nullArgument_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(NullPointerException.class, () -\u003e moduleStorage.saveFile(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"    void saveFile_success() throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.saveFile(moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"        assertTextFilesEqual(SAVE_FILE, VALID_FILE);","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"    void removeNoteFromModule_success() throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"        File deletedFile \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"test.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(deletedFile.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.removeNoteFromModule(tempModule, \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(deletedFile.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"    void removeNoteFromModule_missingModuleFolder() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"        File deletedFile \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"test.txt\").toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(deletedFile.exists());","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(tempModule);","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.removeNoteFromModule(tempModule, \"test\");","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(deletedFile.exists());","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"    void addNoteFromModule_success() throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"        File file \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"test1.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.addNoteFromModule(tempModule, new Note(\"test1\", \"test1\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"    void addNoteFromModule_missingModuleDirectory() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"        File folder \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), \"test1\").toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(folder.exists());","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"        File file \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), \"test1\", \"test1.txt\").toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file.exists());","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.addNoteFromModule(\"test1\", new Note(\"test1\", \"test1\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(folder.exists());","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"    void addNoteFromModule_permissionDenied_exceptionThrown() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"        File file \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"test1.txt\").toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"        file.createNewFile();","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"        file.setExecutable(false);","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"        file.setReadable(false);","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"        file.setWritable(false);","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file.canWrite());","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(IOException.class, () -\u003e this.moduleStorage.addNoteFromModule(tempModule, new Note(\"test1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"                \"test1\")));","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"    void createModuleDirectory_success() throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"        File file \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), \"newmod\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(\"newmod\");","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"newmod\");","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"    void createModuleDirectory_invalidModuleName_exceptionThrown() {","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e this.moduleStorage.createModuleDirectory(\"new mod\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e this.moduleStorage.createModuleDirectory(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e this.moduleStorage.createModuleDirectory(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"    void createModuleDirectory_moduleFolderExists() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"        File folder \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule).toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(folder.exists());","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, folder.listFiles().length);","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(folder.exists());","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, folder.listFiles().length);","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"    void cleanAfterDeleteModule_success() throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"        File file \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), \"newmod\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(\"newmod\");","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"newmod\");","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"Woolicious98"},"content":"    void saveAllNotes_success() throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"kelvneo"},"content":"        ContentManager\u003cNote\u003e noteManager \u003d this.moduleManager.getModule(tempModule).getContentManager(Note.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"Woolicious98"},"content":"        Note note1 \u003d new Note(\"a\", \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"Woolicious98"},"content":"        Note note2 \u003d new Note(\"b\", \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"Woolicious98"},"content":"        Note note3 \u003d new Note(\"c\", \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"Woolicious98"},"content":"        noteManager.add(note1);","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"Woolicious98"},"content":"        noteManager.add(note2);","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"Woolicious98"},"content":"        noteManager.add(note3);","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.cleanAfterDeleteModule(tempModule);","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"Woolicious98"},"content":"        File file1 \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"a.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"Woolicious98"},"content":"        File file2 \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"b.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"Woolicious98"},"content":"        File file3 \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"c.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file1.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file2.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file3.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.saveAllNotes(this.moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file1.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file2.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file3.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"Woolicious98"},"content":"    void loadAllNotes_success() throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"Woolicious98"},"content":"        Note note1 \u003d new Note(\"a\", \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"Woolicious98"},"content":"        Note note2 \u003d new Note(\"b\", \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"Woolicious98"},"content":"        Note note3 \u003d new Note(\"c\", \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.addNoteFromModule(tempModule, note1);","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.addNoteFromModule(tempModule, note2);","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.addNoteFromModule(tempModule, note3);","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"Woolicious98"},"content":"        File file1 \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"a.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"Woolicious98"},"content":"        File file2 \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"b.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"Woolicious98"},"content":"        File file3 \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"c.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file1.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file2.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file3.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1,","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"Woolicious98"},"content":"                this.moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d this.moduleStorage.loadFile();","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(4,","lastModifiedDate":"2021-10-20"},{"lineNumber":236,"author":{"gitId":"Woolicious98"},"content":"                this.moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-20"},{"lineNumber":237,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"3m0W33D"},"content":"    void exportModuleNotes_success() throws IOException, InvalidArgumentException {","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"3m0W33D"},"content":"        ContentManager\u003cNote\u003e noteManager \u003d this.moduleManager.getModule(tempModule).getContentManager(Note.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"3m0W33D"},"content":"        Note note1 \u003d new Note(\"a\", \"test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"3m0W33D"},"content":"        Note note2 \u003d new Note(\"b\", \"test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"3m0W33D"},"content":"        Note note3 \u003d new Note(\"c\", \"test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"3m0W33D"},"content":"        noteManager.add(note1);","lastModifiedDate":"2021-10-23"},{"lineNumber":246,"author":{"gitId":"3m0W33D"},"content":"        noteManager.add(note2);","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"3m0W33D"},"content":"        noteManager.add(note3);","lastModifiedDate":"2021-10-23"},{"lineNumber":248,"author":{"gitId":"3m0W33D"},"content":"        this.moduleStorage.exportModuleNotes(tempModule, noteManager.getContents());","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"3m0W33D"},"content":"        File pdf \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule + CommonFormat.PDF_FORMAT)","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"3m0W33D"},"content":"                .toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(pdf.exists());","lastModifiedDate":"2021-10-23"},{"lineNumber":252,"author":{"gitId":"3m0W33D"},"content":"        StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":253,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":254,"author":{"gitId":"3m0W33D"},"content":"            PdfReader pdfReader \u003d new PdfReader(new FileInputStream(pdf.getAbsolutePath()));","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"3m0W33D"},"content":"            int pages \u003d pdfReader.getNumberOfPages();","lastModifiedDate":"2021-10-23"},{"lineNumber":256,"author":{"gitId":"3m0W33D"},"content":"            for (int i \u003d 1; i \u003c\u003d pages; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"3m0W33D"},"content":"                content.append(PdfTextExtractor.getTextFromPage(pdfReader, i));","lastModifiedDate":"2021-10-23"},{"lineNumber":258,"author":{"gitId":"3m0W33D"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":259,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(content.toString().contains(\"a\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":260,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(content.toString().contains(\"b\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":261,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(content.toString().contains(\"c\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":262,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(content.toString().contains(\"test\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"3m0W33D"},"content":"            pdfReader.close();","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"3m0W33D"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"3m0W33D"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"3m0W33D"},"content":"        pdf.delete();","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"3m0W33D"},"content":"    void exportModuleNotes_throwException() throws IOException, InvalidArgumentException {","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"3m0W33D"},"content":"        ContentManager\u003cNote\u003e noteManager \u003d this.moduleManager.getModule(tempModule).getContentManager(Note.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":273,"author":{"gitId":"3m0W33D"},"content":"        noteManager.deleteContent(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e this.moduleStorage.exportModuleNotes(tempModule, noteManager.getContents()));","lastModifiedDate":"2021-10-24"},{"lineNumber":276,"author":{"gitId":"3m0W33D"},"content":"        this.moduleStorage.init(Paths.get(RESOURCE_FOLDER.toString(), \"doesNotExist\", \"didNotExist\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":277,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(IOException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":278,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e this.moduleStorage.exportModuleNotes(tempModule, noteManager.getContents()));","lastModifiedDate":"2021-10-23"},{"lineNumber":279,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":282,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":283,"author":{"gitId":"Woolicious98"},"content":"    void updateModuleDirectory_success() throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"Woolicious98"},"content":"        Path oldPath \u003d Paths.get(RESOURCE_FOLDER.toString(), tempModule);","lastModifiedDate":"2021-10-24"},{"lineNumber":285,"author":{"gitId":"Woolicious98"},"content":"        Path newPath \u003d Paths.get(RESOURCE_FOLDER.toString(), \"test1\");","lastModifiedDate":"2021-10-24"},{"lineNumber":286,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(oldPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":287,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(newPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":288,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.updateModuleDirectory(tempModule, \"test1\");","lastModifiedDate":"2021-10-24"},{"lineNumber":289,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(newPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":290,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(oldPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":291,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":292,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":293,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":294,"author":{"gitId":"Woolicious98"},"content":"    void updateModuleDirectory_newDirectoryExists() throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":295,"author":{"gitId":"Woolicious98"},"content":"        Path oldPath \u003d Paths.get(RESOURCE_FOLDER.toString(), tempModule);","lastModifiedDate":"2021-10-24"},{"lineNumber":296,"author":{"gitId":"Woolicious98"},"content":"        Path newPath \u003d Paths.get(RESOURCE_FOLDER.toString(), \"test1\");","lastModifiedDate":"2021-10-24"},{"lineNumber":297,"author":{"gitId":"Woolicious98"},"content":"        Files.createDirectories(newPath);","lastModifiedDate":"2021-10-24"},{"lineNumber":298,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(oldPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":299,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(newPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":300,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.updateModuleDirectory(tempModule, \"test1\");","lastModifiedDate":"2021-10-24"},{"lineNumber":301,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(newPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":302,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(oldPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":303,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":304,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":305,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":306,"author":{"gitId":"Woolicious98"},"content":"    void updateModuleDirectory_noDirectoryExists() throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":307,"author":{"gitId":"Woolicious98"},"content":"        Path oldPath \u003d Paths.get(RESOURCE_FOLDER.toString(), tempModule);","lastModifiedDate":"2021-10-24"},{"lineNumber":308,"author":{"gitId":"Woolicious98"},"content":"        Path newPath \u003d Paths.get(RESOURCE_FOLDER.toString(), \"test1\");","lastModifiedDate":"2021-10-24"},{"lineNumber":309,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.cleanAfterDeleteModule(tempModule);","lastModifiedDate":"2021-10-24"},{"lineNumber":310,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(oldPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":311,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(newPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":312,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.updateModuleDirectory(tempModule, \"test1\");","lastModifiedDate":"2021-10-24"},{"lineNumber":313,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(newPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":314,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(oldPath));","lastModifiedDate":"2021-10-24"},{"lineNumber":315,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":316,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":317,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":318,"author":{"gitId":"Woolicious98"},"content":"    void loadNotesFromModule_success() throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":319,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.loadNotesFromModule(moduleManager, tempModule);","lastModifiedDate":"2021-10-24"},{"lineNumber":320,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-24"},{"lineNumber":321,"author":{"gitId":"Woolicious98"},"content":"        Path nonTextFilePath \u003d Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"test1.ser\");","lastModifiedDate":"2021-10-24"},{"lineNumber":322,"author":{"gitId":"Woolicious98"},"content":"        File nonTextFile \u003d new File(nonTextFilePath.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":323,"author":{"gitId":"Woolicious98"},"content":"        FileOutputStream output \u003d new FileOutputStream(nonTextFile);","lastModifiedDate":"2021-10-24"},{"lineNumber":324,"author":{"gitId":"Woolicious98"},"content":"        ObjectOutputStream objectOutput \u003d new ObjectOutputStream(output);","lastModifiedDate":"2021-10-24"},{"lineNumber":325,"author":{"gitId":"Woolicious98"},"content":"        objectOutput.writeObject(\"save\");","lastModifiedDate":"2021-10-24"},{"lineNumber":326,"author":{"gitId":"Woolicious98"},"content":"        objectOutput.flush();","lastModifiedDate":"2021-10-24"},{"lineNumber":327,"author":{"gitId":"Woolicious98"},"content":"        objectOutput.close();","lastModifiedDate":"2021-10-24"},{"lineNumber":328,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.loadNotesFromModule(moduleManager, tempModule);","lastModifiedDate":"2021-10-24"},{"lineNumber":329,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-24"},{"lineNumber":330,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":331,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":333,"author":{"gitId":"Woolicious98"},"content":"    void loadNotesFromModule_missingModuleDirectory() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":334,"author":{"gitId":"Woolicious98"},"content":"        Path modPath \u003d Paths.get(RESOURCE_FOLDER.toString(), tempModule);","lastModifiedDate":"2021-10-26"},{"lineNumber":335,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(modPath));","lastModifiedDate":"2021-10-26"},{"lineNumber":336,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(tempModule);","lastModifiedDate":"2021-10-26"},{"lineNumber":337,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(modPath));","lastModifiedDate":"2021-10-26"},{"lineNumber":338,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.loadNotesFromModule(moduleManager, tempModule);","lastModifiedDate":"2021-10-26"},{"lineNumber":339,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(modPath));","lastModifiedDate":"2021-10-26"},{"lineNumber":340,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":341,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":342,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":343,"author":{"gitId":"Woolicious98"},"content":"    void loadNotesFromModule_invalidFileName() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":344,"author":{"gitId":"Woolicious98"},"content":"        Path modPath \u003d Paths.get(RESOURCE_FOLDER.toString(), tempModule);","lastModifiedDate":"2021-10-26"},{"lineNumber":345,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(modPath));","lastModifiedDate":"2021-10-26"},{"lineNumber":346,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(tempModule);","lastModifiedDate":"2021-10-26"},{"lineNumber":347,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(Files.exists(modPath));","lastModifiedDate":"2021-10-26"},{"lineNumber":348,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.loadNotesFromModule(moduleManager, tempModule);","lastModifiedDate":"2021-10-26"},{"lineNumber":349,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(modPath));","lastModifiedDate":"2021-10-26"},{"lineNumber":350,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":352,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"Woolicious98"},"content":"    void loadNotesFromModule_missingModule() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":354,"author":{"gitId":"Woolicious98"},"content":"        Path faultyPath \u003d Paths.get(RESOURCE_FOLDER.toString(), \"faulty\");","lastModifiedDate":"2021-10-26"},{"lineNumber":355,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(faultyPath));","lastModifiedDate":"2021-10-26"},{"lineNumber":356,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e moduleStorage.loadNotesFromModule(moduleManager, \"faulty\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":357,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":358,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":359,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":360,"author":{"gitId":"Woolicious98"},"content":"    void loadNotesFromModule_faultyFile() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":361,"author":{"gitId":"Woolicious98"},"content":"        Path faultyPath \u003d Paths.get(RESOURCE_FOLDER.toString(), \"faulty\");","lastModifiedDate":"2021-10-26"},{"lineNumber":362,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(faultyPath));","lastModifiedDate":"2021-10-26"},{"lineNumber":363,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(\"faulty\", new NusModule());","lastModifiedDate":"2021-10-26"},{"lineNumber":364,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.loadNotesFromModule(moduleManager, \"faulty\");","lastModifiedDate":"2021-10-26"},{"lineNumber":365,"author":{"gitId":"Woolicious98"},"content":"        ContentManager noteContentManager \u003d moduleManager.getModule(\"faulty\").getContentManager(Note.class);","lastModifiedDate":"2021-10-26"},{"lineNumber":366,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-26"},{"lineNumber":367,"author":{"gitId":"Woolicious98"},"content":"        Path randomFilePath \u003d Paths.get(faultyPath.toString(), \"test.txt\");","lastModifiedDate":"2021-10-26"},{"lineNumber":368,"author":{"gitId":"Woolicious98"},"content":"        File randomFile \u003d new File(randomFilePath.toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":369,"author":{"gitId":"Woolicious98"},"content":"        randomFile.createNewFile();","lastModifiedDate":"2021-10-26"},{"lineNumber":370,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.loadNotesFromModule(moduleManager, \"faulty\");","lastModifiedDate":"2021-10-26"},{"lineNumber":371,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-26"},{"lineNumber":372,"author":{"gitId":"Woolicious98"},"content":"        randomFile.delete();","lastModifiedDate":"2021-10-26"},{"lineNumber":373,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":374,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":375,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":376,"author":{"gitId":"Woolicious98"},"content":"    void loadNotesFromModule_invalidModuleName_listOfFileNull() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":377,"author":{"gitId":"Woolicious98"},"content":"        Path modPath \u003d Paths.get(RESOURCE_FOLDER.toString(), tempModule);","lastModifiedDate":"2021-10-26"},{"lineNumber":378,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(modPath));","lastModifiedDate":"2021-10-26"},{"lineNumber":379,"author":{"gitId":"Woolicious98"},"content":"        File randomFile \u003d new File(Paths.get(modPath.toString(),\"test.txt\").toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":380,"author":{"gitId":"Woolicious98"},"content":"        randomFile.createNewFile();","lastModifiedDate":"2021-10-26"},{"lineNumber":381,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.init(modPath.resolve(\"test.txt\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":382,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.loadNotesFromModule(moduleManager, \"test.txt\");","lastModifiedDate":"2021-10-26"},{"lineNumber":383,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":384,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":385,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":386,"author":{"gitId":"Woolicious98"},"content":"    void loadAllFile_success() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":387,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(MODULE_MALFORMED_FILE);","lastModifiedDate":"2021-10-26"},{"lineNumber":388,"author":{"gitId":"Woolicious98"},"content":"        ModuleManager module \u003d moduleStorage.loadFile();","lastModifiedDate":"2021-10-26"},{"lineNumber":389,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1,module.getAllModules().length);","lastModifiedDate":"2021-10-26"},{"lineNumber":390,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"okay\");","lastModifiedDate":"2021-10-26"},{"lineNumber":391,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":392,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":393,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":394,"author":{"gitId":"Woolicious98"},"content":"    void loadNotesFromModule_fileLock() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":395,"author":{"gitId":"Woolicious98"},"content":"        Path modPath \u003d Paths.get(RESOURCE_FOLDER.toString(), \"lock\");","lastModifiedDate":"2021-10-26"},{"lineNumber":396,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(modPath));","lastModifiedDate":"2021-10-26"},{"lineNumber":397,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(\"lock\", new NusModule());","lastModifiedDate":"2021-10-26"},{"lineNumber":398,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.loadNotesFromModule(moduleManager, \"lock\");","lastModifiedDate":"2021-10-26"},{"lineNumber":399,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, moduleManager","lastModifiedDate":"2021-10-26"},{"lineNumber":400,"author":{"gitId":"Woolicious98"},"content":"                .getModule(\"lock\").getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-26"},{"lineNumber":401,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":402,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":403,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":404,"author":{"gitId":"Woolicious98"},"content":"    void saveNotesFromModule_invalidModule() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":405,"author":{"gitId":"Woolicious98"},"content":"        Path modPath \u003d Paths.get(RESOURCE_FOLDER.toString(), \"lock\");","lastModifiedDate":"2021-10-26"},{"lineNumber":406,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(Files.exists(modPath));","lastModifiedDate":"2021-10-26"},{"lineNumber":407,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(\"lock\", new NusModule());","lastModifiedDate":"2021-10-26"},{"lineNumber":408,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(IOException.class, () -\u003e moduleStorage","lastModifiedDate":"2021-10-26"},{"lineNumber":409,"author":{"gitId":"Woolicious98"},"content":"                .saveNotesFromModule(moduleManager, \"lock\", true));","lastModifiedDate":"2021-10-26"},{"lineNumber":410,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":411,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":412,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kelvneo":44,"LouisLouis19":1,"Woolicious98":300,"3m0W33D":67}},{"path":"src/test/java/terminus/timetable/ConflictManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.timetable;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"class ConflictManagerTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"    private ConflictManager conflictManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    private Link newLink;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"    private ArrayList\u003cLink\u003e currentLinks;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"        this.newLink \u003d new Link(\"test conflict\", \"Saturday\", LocalTime.of(9, 00), 3, \"https://zoom.us/test\");","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"        this.currentLinks \u003d new ArrayList\u003cLink\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    void execute_getAllLinks_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"        conflictManager \u003d new ConflictManager(moduleManager, newLink);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"            currentLinks.add(new Link(\"test conflict\", \"Friday\", LocalTime.of(7, 00), 2, \"https://zoom.us/test\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"            assertNotNull(conflictManager.getAllLinks());","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    void execute_getConflictingSchedule_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        conflictManager \u003d new ConflictManager(moduleManager, newLink);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"            currentLinks.add(new Link(\"test conflict\", \"Saturday\", LocalTime.of(8, 00), 2, \"https://zoom.us/test\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"            assertNotNull(conflictManager.getConflictingSchedule());","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"LouisLouis19":41,"kelvneo":4}},{"path":"src/test/java/terminus/timetable/TimetableTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.timetable;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"class TimetableTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.addModule(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    void execute_getDailySchedule_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"        LinkCommandParser linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Monday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.getDailySchedule(\"Monday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand1 \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand1.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.getDailySchedule(\"Thursday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand2 \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Friday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand2.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.getDailySchedule(\"Friday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"    void execute_getDailySchedule_fail() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"        LinkCommandParser linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"        linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Monday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand1 \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand1.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand2 \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Friday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand2.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        assertNull(timetable.getDailySchedule(\"Tuesday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"        assertNull(timetable.getDailySchedule(\"Sunday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        assertNull(timetable.getDailySchedule(\"Saturday\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"    void execute_getWeeklySchedule_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"        LinkCommandParser linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"        linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"        assertNull(timetable.getWeeklySchedule());","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Monday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.getWeeklySchedule());","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand1 \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand1.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.getWeeklySchedule());","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand2 \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Friday\\\" \\\"00:00\\\" \\\"2\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"        addLinkCommand2.execute(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.getWeeklySchedule());","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"    void execute_checkEmptySchedule_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"        String schedule \u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"        String day1 \u003d \"Friday\";","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"        String day2 \u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.checkEmptySchedule(schedule, day1));","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"        assertNotNull(timetable.checkEmptySchedule(schedule, day2));","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"LouisLouis19":85,"kelvneo":13,"3m0W33D":1}},{"path":"src/test/resources/malformedFile.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"{","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"  \"noteManager\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"    \"contents\": [","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"      {","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"        \"name\": \"test\",","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"        \"data\": \"test\"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"      }","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    ]","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"  \"linkManager\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    \"contents\": [","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"      {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"        \"day\": \"tuesday\",","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"        \"startTime\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"          \"hour\": 11,","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"          \"minute\": 11,","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"          \"second\": 0,","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"          \"nano\": 0","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"        },","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        \"link\": \"https://zoom.us/\",","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        \"name\": \"test\"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"      }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    ]","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"  },","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"  \"questionManager\": {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    \"contents\": []","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kelvneo":28}},{"path":"src/test/resources/moduleMalformedFile.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"{","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"  \"moduleMap\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"    \"with spaces\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"      \"linkManager\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"        \"contents\": []","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"      },","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"      \"questionManager\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"        \"contents\": []","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"      }","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"    },","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"    \"more30char30char30char30char30char30char30char\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"      \"linkManager\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"        \"contents\": []","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"      },","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"      \"questionManager\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"        \"contents\": []","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"      }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    },","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    \"lowercase\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"      \"linkManager\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        \"contents\": []","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"      },","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"      \"questionManager\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"        \"contents\": []","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"      }","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    },","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    \"OKAY\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"      \"linkManager\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        \"contents\": []","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"      },","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"      \"questionManager\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        \"contents\": []","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"      }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"  }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Woolicious98":36}},{"path":"src/test/resources/saveFile.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"{","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"  \"moduleMap\": {","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"    \"TEST\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"      \"linkManager\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"        \"contents\": [","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"          {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"            \"day\": \"tuesday\",","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"            \"startTime\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"              \"hour\": 11,","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"              \"minute\": 11,","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"              \"second\": 0,","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"              \"nano\": 0","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"            },","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"            \"duration\": 2,","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"            \"link\": \"https://zoom.us/\",","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"            \"name\": \"test\"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"          }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"        ]","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"      },","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"      \"questionManager\": {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        \"contents\": []","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"      }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"  }","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":20,"LouisLouis19":1,"Woolicious98":3,"3m0W33D":1}},{"path":"src/test/resources/validFile.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"{","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"  \"moduleMap\": {","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"    \"TEST\": {","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"      \"linkManager\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"        \"contents\": [","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"          {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"            \"day\": \"tuesday\",","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"            \"startTime\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"              \"hour\": 11,","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"              \"minute\": 11,","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"              \"second\": 0,","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"              \"nano\": 0","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"            },","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"            \"duration\": 2,","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"            \"link\": \"https://zoom.us/\",","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"            \"name\": \"test\"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"          }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"        ]","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"      },","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"      \"questionManager\": {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        \"contents\": []","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"      }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"  }","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":20,"LouisLouis19":1,"Woolicious98":3,"3m0W33D":1}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"if exist .\\data rmdir /Q /S .\\data","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"if exist .\\data rmdir /Q /S .\\data","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kelvneo":4,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"if [ -d \"./data\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"then","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    rm -rf ./data","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"fi","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"if [ -d \"./data\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"then","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    rm -rf ./data","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"fi","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kelvneo":10,"-":23}}]
